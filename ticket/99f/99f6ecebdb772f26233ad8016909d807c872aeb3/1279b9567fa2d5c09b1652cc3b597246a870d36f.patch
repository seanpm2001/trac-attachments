Index: src/common/image.cpp
===================================================================
--- src/common/image.cpp	(revision 66153)
+++ src/common/image.cpp	(working copy)
@@ -253,6 +253,41 @@
     return refData_new;
 }
 
+// returns a new image with the same dimensions, alpha, and mask as *this
+// if on_its_side is true, width and height are swapped
+wxImage wxImage::Derived( bool on_its_side ) const
+{
+    wxImage image;
+
+    wxCHECK_MSG( Ok(), image, wxS("invalid image") );
+
+    long height = M_IMGDATA->m_height;
+    long width  = M_IMGDATA->m_width;
+
+    if ( on_its_side ) wxSwap( width, height );
+
+    if ( !image.Create( width, height, false ) )
+    {
+        wxFAIL_MSG( wxS("unable to create image") );
+        return image;
+    }
+
+    if ( M_IMGDATA->m_alpha )
+    {
+        image.SetAlpha();
+        wxCHECK2_MSG( image.GetAlpha(),
+                      image.Destroy(); return image,
+                      wxS("unable to create alpha channel") );
+    }
+
+    if ( M_IMGDATA->m_hasMask )
+        image.SetMaskColour( M_IMGDATA->m_maskRed,
+                             M_IMGDATA->m_maskGreen,
+                             M_IMGDATA->m_maskBlue );
+
+    return image;
+}
+
 wxImage wxImage::Copy() const
 {
     wxImage image;
@@ -813,27 +848,15 @@
 // Blur in the horizontal direction
 wxImage wxImage::BlurHorizontal(int blurRadius) const
 {
-    wxImage ret_image;
-    ret_image.Create(M_IMGDATA->m_width, M_IMGDATA->m_height, false);
+    wxImage ret_image( Derived( false ));
 
-    unsigned char* src_data = M_IMGDATA->m_data;
+    wxCHECK( ret_image.Ok(), ret_image );
+
+    const unsigned char* src_data = M_IMGDATA->m_data;
     unsigned char* dst_data = ret_image.GetData();
-    unsigned char* src_alpha = M_IMGDATA->m_alpha;
-    unsigned char* dst_alpha = NULL;
+    const unsigned char* src_alpha = M_IMGDATA->m_alpha;
+    unsigned char* dst_alpha = ret_image.GetAlpha();
 
-    // Check for a mask or alpha
-    if ( src_alpha )
-    {
-        ret_image.SetAlpha();
-        dst_alpha = ret_image.GetAlpha();
-    }
-    else if ( M_IMGDATA->m_hasMask )
-    {
-        ret_image.SetMaskColour(M_IMGDATA->m_maskRed,
-                                M_IMGDATA->m_maskGreen,
-                                M_IMGDATA->m_maskBlue);
-    }
-
     // number of pixels we average over
     const int blurArea = blurRadius*2 + 1;
 
@@ -928,27 +951,15 @@
 // Blur in the vertical direction
 wxImage wxImage::BlurVertical(int blurRadius) const
 {
-    wxImage ret_image;
-    ret_image.Create(M_IMGDATA->m_width, M_IMGDATA->m_height, false);
+    wxImage ret_image( Derived( false ));
 
-    unsigned char* src_data = M_IMGDATA->m_data;
+    wxCHECK( ret_image.Ok(), ret_image );
+
+    const unsigned char* src_data = M_IMGDATA->m_data;
     unsigned char* dst_data = ret_image.GetData();
-    unsigned char* src_alpha = M_IMGDATA->m_alpha;
-    unsigned char* dst_alpha = NULL;
+    const unsigned char* src_alpha = M_IMGDATA->m_alpha;
+    unsigned char* dst_alpha = ret_image.GetAlpha();
 
-    // Check for a mask or alpha
-    if ( src_alpha )
-    {
-        ret_image.SetAlpha();
-        dst_alpha = ret_image.GetAlpha();
-    }
-    else if ( M_IMGDATA->m_hasMask )
-    {
-        ret_image.SetMaskColour(M_IMGDATA->m_maskRed,
-                                M_IMGDATA->m_maskGreen,
-                                M_IMGDATA->m_maskBlue);
-    }
-
     // number of pixels we average over
     const int blurArea = blurRadius*2 + 1;
 
@@ -1055,32 +1066,10 @@
 
 wxImage wxImage::Rotate90( bool clockwise ) const
 {
-    wxImage image;
+    wxImage image( Derived( true ));
 
-    wxCHECK_MSG( Ok(), image, wxT("invalid image") );
+    wxCHECK( image.Ok(), image );
 
-    image.Create( M_IMGDATA->m_height, M_IMGDATA->m_width, false );
-
-    unsigned char *data = image.GetData();
-
-    wxCHECK_MSG( data, image, wxT("unable to create image") );
-
-    unsigned char *source_data = M_IMGDATA->m_data;
-    unsigned char *target_data;
-    unsigned char *alpha_data = 0 ;
-    unsigned char *source_alpha = M_IMGDATA->m_alpha;
-    unsigned char *target_alpha = 0 ;
-
-    if ( source_alpha )
-    {
-        image.SetAlpha();
-        alpha_data = image.GetAlpha();
-        wxCHECK_MSG( alpha_data, image, wxS("unable to create alpha channel") );
-    }
-
-    if ( M_IMGDATA->m_hasMask )
-        image.SetMaskColour( M_IMGDATA->m_maskRed, M_IMGDATA->m_maskGreen, M_IMGDATA->m_maskBlue );
-
     long height = M_IMGDATA->m_height;
     long width  = M_IMGDATA->m_width;
 
@@ -1098,6 +1087,13 @@
                         clockwise ? height - 1 - hot_y : hot_y);
     }
 
+    unsigned char *data = image.GetData();
+    const unsigned char *source_data = M_IMGDATA->m_data;
+    unsigned char *target_data;
+    unsigned char *alpha_data = image.GetAlpha();
+    const unsigned char *source_alpha = M_IMGDATA->m_alpha;
+    unsigned char *target_alpha = 0 ;
+
     for (long j = 0; j < height; j++)
     {
         for (long i = 0; i < width; i++)
@@ -1130,27 +1126,10 @@
 
 wxImage wxImage::Rotate180() const
 {
-    wxImage image;
+    wxImage image( Derived( false ));
 
-    wxCHECK_MSG( Ok(), image, wxS("invalid image") );
+    wxCHECK( image.Ok(), image );
 
-    image.Create( M_IMGDATA->m_width, M_IMGDATA->m_height, false );
-
-    unsigned char *data = image.GetData();
-    unsigned char *alpha = NULL;
-
-    wxCHECK_MSG( data, image, wxS("unable to create image") );
-
-    if ( M_IMGDATA->m_alpha != NULL )
-    {
-        image.SetAlpha();
-        alpha = image.GetAlpha();
-        wxCHECK_MSG( alpha, image, wxS("unable to create alpha channel") );
-    }
-
-    if ( M_IMGDATA->m_hasMask )
-        image.SetMaskColour( M_IMGDATA->m_maskRed, M_IMGDATA->m_maskGreen, M_IMGDATA->m_maskBlue );
-
     long height = M_IMGDATA->m_height;
     long width  = M_IMGDATA->m_width;
 
@@ -1166,6 +1145,8 @@
                         height - 1 - GetOptionInt(wxIMAGE_OPTION_CUR_HOTSPOT_Y));
     }
 
+    unsigned char *data = image.GetData();
+    unsigned char *alpha = image.GetAlpha();
     const unsigned char *source_data = M_IMGDATA->m_data;
     unsigned char *target_data = data + width * height * 3;
 
@@ -1198,30 +1179,16 @@
 
 wxImage wxImage::Mirror( bool horizontally ) const
 {
-    wxImage image;
+    wxImage image( Derived( false ));
 
-    wxCHECK_MSG( Ok(), image, wxT("invalid image") );
+    wxCHECK( image.Ok(), image );
 
-    image.Create( M_IMGDATA->m_width, M_IMGDATA->m_height, false );
-
-    unsigned char *data = image.GetData();
-    unsigned char *alpha = NULL;
-
-    wxCHECK_MSG( data, image, wxT("unable to create image") );
-
-    if (M_IMGDATA->m_alpha != NULL) {
-        image.SetAlpha();
-        alpha = image.GetAlpha();
-        wxCHECK_MSG( alpha, image, wxT("unable to create alpha channel") );
-    }
-
-    if (M_IMGDATA->m_hasMask)
-        image.SetMaskColour( M_IMGDATA->m_maskRed, M_IMGDATA->m_maskGreen, M_IMGDATA->m_maskBlue );
-
     long height = M_IMGDATA->m_height;
     long width  = M_IMGDATA->m_width;
 
-    unsigned char *source_data = M_IMGDATA->m_data;
+    unsigned char *data = image.GetData();
+    unsigned char *alpha = image.GetAlpha();
+    const unsigned char *source_data = M_IMGDATA->m_data;
     unsigned char *target_data;
 
     if (horizontally)
@@ -1522,25 +1489,18 @@
 
 wxImage wxImage::ConvertToGreyscale(double weight_r, double weight_g, double weight_b) const
 {
-    wxImage image;
+    wxImage image( Derived( false ));
 
-    wxCHECK_MSG( Ok(), image, wxT("invalid image") );
+    wxCHECK( image.Ok(), image );
 
-    image.Create(M_IMGDATA->m_width, M_IMGDATA->m_height, false);
-
+    const unsigned char *src = M_IMGDATA->m_data;
     unsigned char *dest = image.GetData();
 
-    wxCHECK_MSG( dest, image, wxT("unable to create image") );
-
-    unsigned char *src = M_IMGDATA->m_data;
     bool hasMask = M_IMGDATA->m_hasMask;
     unsigned char maskRed = M_IMGDATA->m_maskRed;
     unsigned char maskGreen = M_IMGDATA->m_maskGreen;
     unsigned char maskBlue = M_IMGDATA->m_maskBlue;
 
-    if ( hasMask )
-        image.SetMaskColour(maskRed, maskGreen, maskBlue);
-
     const long size = M_IMGDATA->m_width * M_IMGDATA->m_height;
     for ( long i = 0; i < size; i++, src += 3, dest += 3 )
     {
@@ -1556,13 +1516,9 @@
     }
 
     // copy the alpha channel, if any
-    if (HasAlpha())
+    if ( image.HasAlpha() )
     {
-        const size_t alphaSize = GetWidth() * GetHeight();
-        unsigned char *alpha = (unsigned char*)malloc(alphaSize);
-        memcpy(alpha, GetAlpha(), alphaSize);
-        image.InitAlpha();
-        image.SetAlpha(alpha);
+        memcpy( image.GetAlpha(), GetAlpha(), GetWidth() * GetHeight() );
     }
 
     return image;
Index: include/wx/image.h
===================================================================
--- include/wx/image.h	(revision 66153)
+++ include/wx/image.h	(working copy)
@@ -591,6 +591,10 @@
 private:
     friend class WXDLLIMPEXP_FWD_CORE wxImageHandler;
 
+    // returns a new image with the same dimensions, alpha, and mask as *this
+    // if on_its_side is true, width and height are swapped
+    wxImage Derived( bool on_its_side ) const;
+
 #if wxUSE_STREAMS
     // read the image from the specified stream updating image type if
     // successful
