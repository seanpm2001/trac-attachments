Index: src/common/image.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/image.cpp,v
retrieving revision 1.158
diff -b -u -2 -r1.158 image.cpp
--- src/common/image.cpp	2003/03/03 20:33:37	1.158
+++ src/common/image.cpp	2003/05/01 09:56:53
@@ -114,7 +114,7 @@
 }
 
-wxImage::wxImage( int width, int height )
+wxImage::wxImage( int width, int height, bool clear )
 {
-    Create( width, height );
+    Create( width, height, clear );
 }
 
@@ -157,5 +157,5 @@
 }
 
-void wxImage::Create( int width, int height )
+void wxImage::Create( int width, int height, bool clear )
 {
     UnRef();
@@ -166,5 +166,5 @@
     if (M_IMGDATA->m_data)
     {
-        for (int l = 0; l < width*height*3; l++) M_IMGDATA->m_data[l] = 0;
+        if (clear) memset(M_IMGDATA->m_data, 0, width*height*3);
 
         M_IMGDATA->m_width = width;
@@ -209,5 +209,5 @@
     wxCHECK_MSG( Ok(), image, wxT("invalid image") );
 
-    image.Create( M_IMGDATA->m_width, M_IMGDATA->m_height );
+    image.Create( M_IMGDATA->m_width, M_IMGDATA->m_height, false );
 
     unsigned char *data = image.GetData();
@@ -245,5 +245,5 @@
     long height = old_height / yFactor ;
 
-    image.Create( width , height );
+    image.Create( width, height, false );
 
     char unsigned *data = image.GetData();
@@ -342,5 +342,5 @@
         return ShrinkBy( old_width / width , old_height / height ) ;
     }
-    image.Create( width, height );
+    image.Create( width, height, false );
 
     unsigned char *data = image.GetData();
@@ -358,41 +358,27 @@
     unsigned char *target_data = data;
 
-#if 0
-    // This is nonsense, RR.
+    long x_delta = (old_width<<16) / width;
+    long y_delta = (old_height<<16) / height;
 
-    // We do (x, y) -> (x, y)*oldSize/newSize but the valid values of x and y
-    // are from 0 to size-1, hence all decrement the sizes
-    long old_old_width = old_width;
-    old_height--;
-    old_width--;
-    height--;
-    width--;
-    for ( long j = 0; j <= height; j++ )
-    {
-        // don't crash for images with height == 1
-        long y_offset = height ? (j * old_height / height)* old_old_width : 0;
+    unsigned char* dest_pixel = target_data;
 
-        for ( long i = 0; i <= width; i++ )
+    long y = 0;
+    for ( long j = 0; j < height; j++ )
         {
-            long x_offset = width ? (i * old_width) / width : 0;
+        unsigned char* src_line = &source_data[(y>>16)*old_width*3];
 
-            memcpy( target_data, source_data + 3*(y_offset + x_offset), 3 );
-            target_data += 3;
-        }
-    }
-#else
-    for (long j = 0; j < height; j++)
-    {
-        long y_offset = (j * old_height / height) * old_width;
-
-        for (long i = 0; i < width; i++)
+        long x = 0;
+        for ( long i = 0; i < width; i++ )
         {
-            memcpy( target_data,
-                source_data + 3*(y_offset + ((i * old_width )/ width)),
-                3 );
-            target_data += 3;
+             unsigned char* src_pixel = &src_line[(x>>16)*3];
+             dest_pixel[0] = src_pixel[0];
+             dest_pixel[1] = src_pixel[1];
+             dest_pixel[2] = src_pixel[2];
+             dest_pixel += 3;
+             x += x_delta;
         }
+
+        y += y_delta;
     }
-#endif
 
     // In case this is a cursor, make sure the hotspot is scalled accordingly:
@@ -413,5 +399,5 @@
     wxCHECK_MSG( Ok(), image, wxT("invalid image") );
 
-    image.Create( M_IMGDATA->m_height, M_IMGDATA->m_width );
+    image.Create( M_IMGDATA->m_height, M_IMGDATA->m_width, false );
 
     unsigned char *data = image.GetData();
@@ -450,5 +436,5 @@
     wxCHECK_MSG( Ok(), image, wxT("invalid image") );
 
-    image.Create( M_IMGDATA->m_width, M_IMGDATA->m_height );
+    image.Create( M_IMGDATA->m_width, M_IMGDATA->m_height, false );
 
     unsigned char *data = image.GetData();
@@ -504,5 +490,5 @@
     const int subheight=rect.GetHeight();
 
-    image.Create( subwidth, subheight );
+    image.Create( subwidth, subheight, false );
 
     unsigned char *subdata = image.GetData(), *data=GetData();
@@ -638,5 +624,5 @@
     wxCHECK_MSG( Ok(), image, wxT("invalid image") );
 
-    image.Create( M_IMGDATA->m_width, M_IMGDATA->m_height );
+    image.Create( M_IMGDATA->m_width, M_IMGDATA->m_height, false );
 
     unsigned char *data = image.GetData();
@@ -1406,4 +1392,5 @@
 }
 
+
 //-----------------------------------------------------------------------------
 // wxImageHandler
@@ -1691,5 +1678,5 @@
     int y2 = (int) ceil (wxMax (wxMax(p1.y, p2.y), wxMax(p3.y, p4.y)));
 
-    wxImage rotated (x2 - x1 + 1, y2 - y1 + 1);
+    wxImage rotated (x2 - x1 + 1, y2 - y1 + 1, false);
 
     if (offset_after_rotation != NULL)
Index: include/wx/image.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/image.h,v
retrieving revision 1.81
diff -b -u -2 -r1.81 image.h
--- include/wx/image.h	2003/04/12 00:22:45	1.81
+++ include/wx/image.h	2003/05/01 09:56:53
@@ -141,5 +141,5 @@
 public:
     wxImage();
-    wxImage( int width, int height );
+    wxImage( int width, int height, bool clear = true );
     wxImage( int width, int height, unsigned char* data, bool static_data = FALSE );
     wxImage( const wxString& name, long type = wxBITMAP_TYPE_ANY, int index = -1 );
@@ -163,5 +163,5 @@
 #endif
 
-    void Create( int width, int height );
+    void Create( int width, int height, bool clear = true );
     void Create( int width, int height, unsigned char* data, bool static_data = FALSE );
     void Destroy();
Index: docs/latex/wx/image.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/docs/latex/wx/image.tex,v
retrieving revision 1.61
diff -b -u -2 -r1.61 image.tex
--- docs/latex/wx/image.tex	2003/03/16 20:34:07	1.61
+++ docs/latex/wx/image.tex	2003/05/01 09:56:54
@@ -94,7 +94,8 @@
 and forth without loss in that respect.
 
-\func{}{wxImage}{\param{int}{ width}, \param{int}{ height}}
+\func{}{wxImage}{\param{int}{ width}, \param{int}{ height}, \param{bool}{ clear=true}}
 
-Creates an image with the given width and height.
+Creates an image with the given width and height.  If {\it clear} is true, the new image will be initialized to black.
+Otherwise, the image data will be uninitialized.
 
 \func{}{wxImage}{\param{int}{ width}, \param{int}{ height}, \param{unsigned char*}{ data}, \param{bool}{ static\_data=false}}
@@ -276,7 +277,8 @@
 \membersection{wxImage::Create}\label{wximagecreate}
 
-\func{bool}{Create}{\param{int}{ width}, \param{int}{ height}}
+\func{bool}{Create}{\param{int}{ width}, \param{int}{ height}, \param{bool}{ clear=true}}
 
-Creates a fresh image.
+Creates a fresh image.  If {\it clear} is true, the new image will be initialized to black.
+Otherwise, the image data will be uninitialized.
 
 \wxheading{Parameters}

 	  	 
