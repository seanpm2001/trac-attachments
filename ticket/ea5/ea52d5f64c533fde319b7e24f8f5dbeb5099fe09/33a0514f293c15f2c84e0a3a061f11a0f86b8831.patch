Index: wxWidgets-TRUNKDEVEL/src/xrc/xh_gdctl.cpp
===================================================================
--- wxWidgets-TRUNKDEVEL/src/xrc/xh_gdctl.cpp	(revision 60721)
+++ wxWidgets-TRUNKDEVEL/src/xrc/xh_gdctl.cpp	(working copy)
@@ -34,6 +34,7 @@
     XRC_ADD_STYLE(wxDIRCTRL_3D_INTERNAL);
     XRC_ADD_STYLE(wxDIRCTRL_SELECT_FIRST);
     XRC_ADD_STYLE(wxDIRCTRL_EDIT_LABELS);
+    XRC_ADD_STYLE(wxDIRCTRL_MULTIPLE);
     AddWindowStyles();
 }
 
Index: wxWidgets-TRUNKDEVEL/src/generic/dirctrlg.cpp
===================================================================
--- wxWidgets-TRUNKDEVEL/src/generic/dirctrlg.cpp	(revision 60721)
+++ wxWidgets-TRUNKDEVEL/src/generic/dirctrlg.cpp	(working copy)
@@ -472,6 +472,7 @@
     wxFLAGS_MEMBER(wxDIRCTRL_DIR_ONLY)
     wxFLAGS_MEMBER(wxDIRCTRL_3D_INTERNAL)
     wxFLAGS_MEMBER(wxDIRCTRL_SELECT_FIRST)
+    wxFLAGS_MEMBER(wxDIRCTRL_MULTIPLE)
 
 wxEND_FLAGS( wxGenericDirCtrlStyle )
 
@@ -560,6 +561,9 @@
     if (style & wxDIRCTRL_EDIT_LABELS)
         treeStyle |= wxTR_EDIT_LABELS;
 
+    if (style & wxDIRCTRL_MULTIPLE)
+        treeStyle |= wxTR_MULTIPLE;
+
     if ((style & wxDIRCTRL_3D_INTERNAL) == 0)
         treeStyle |= wxNO_BORDER;
 
@@ -629,9 +633,23 @@
 
     m_showHidden = show;
 
-    wxString path = GetPath();
-    ReCreateTree();
-    SetPath(path);
+    if (HasFlag(wxDIRCTRL_MULTIPLE)) 
+    {
+        wxArrayString paths;
+        GetPaths(paths);
+        ReCreateTree();
+        unsigned int n;
+        for (n = 0; n < paths.Count(); n++)
+        {
+            ExpandPath(paths.Item(n));
+        }
+    }
+    else
+    {
+        wxString path = GetPath();
+        ReCreateTree();
+        SetPath(path);	
+    }
 }
 
 const wxTreeItemId
@@ -1095,6 +1113,21 @@
         return wxEmptyString;
 }
 
+void wxGenericDirCtrl::GetPaths(wxArrayString& paths) const
+{
+    paths.Empty();
+
+    wxArrayTreeItemIds items;
+    m_treeCtrl->GetSelections(items);
+    unsigned int n;
+    for (n = 0; n < items.Count(); n++)
+    {
+        wxTreeItemId id = items.Item(n);
+        wxDirItemData* data = (wxDirItemData*) m_treeCtrl->GetItemData(id);
+        paths.Add(data->m_path);
+    }
+}
+
 wxString wxGenericDirCtrl::GetFilePath() const
 {
     wxTreeItemId id = m_treeCtrl->GetSelection();
@@ -1110,6 +1143,22 @@
         return wxEmptyString;
 }
 
+void wxGenericDirCtrl::GetFilePaths(wxArrayString& paths) const
+{
+    paths.Empty();
+
+    wxArrayTreeItemIds items;
+    m_treeCtrl->GetSelections(items);
+    unsigned int n;
+    for (n = 0; n < items.Count(); n++)
+    {
+        wxTreeItemId id = items.Item(n);
+        wxDirItemData* data = (wxDirItemData*) m_treeCtrl->GetItemData(id);
+        if (!data->m_isDir)
+            paths.Add(data->m_path);
+    }
+}
+
 void wxGenericDirCtrl::SetPath(const wxString& path)
 {
     m_defaultPath = path;
@@ -1117,6 +1166,48 @@
         ExpandPath(path);
 }
 
+void wxGenericDirCtrl::SelectPath(const wxString& path, bool select)
+{
+    bool done = false;
+    wxTreeItemId id = FindChild(m_rootId, path, done);
+    wxTreeItemId lastId = id; // The last non-zero id
+    while (id.IsOk() && !done)
+    {
+        id = FindChild(id, path, done);
+        if (id.IsOk())
+            lastId = id;
+    }
+    if (!lastId.IsOk())
+        return;
+    if (done)
+    {
+        if(select && m_treeCtrl->IsSelected(id))
+            return;
+        else
+        {
+            m_treeCtrl->SelectItem(id, select);
+        }
+    }
+}
+
+void wxGenericDirCtrl::SelectPaths(const wxArrayString& paths)
+{
+    if (HasFlag(wxDIRCTRL_MULTIPLE))
+    {
+        UnselectAll();
+        unsigned int n;
+        for (n = 0; n < paths.Count(); n++)
+        {
+            SelectPath(paths.Item(n));
+        }
+    }
+}
+
+void wxGenericDirCtrl::UnselectAll()
+{
+    m_treeCtrl->UnselectAll();
+}
+
 // Not used
 #if 0
 void wxGenericDirCtrl::FindChildFiles(wxTreeItemId id, int dirFlags, wxArrayString& filenames)
Index: wxWidgets-TRUNKDEVEL/include/wx/generic/dirctrlg.h
===================================================================
--- wxWidgets-TRUNKDEVEL/include/wx/generic/dirctrlg.h	(revision 60721)
+++ wxWidgets-TRUNKDEVEL/include/wx/generic/dirctrlg.h	(working copy)
@@ -51,7 +51,9 @@
     // Use 3D borders on internal controls
     wxDIRCTRL_3D_INTERNAL    = 0x0080,
     // Editable labels
-    wxDIRCTRL_EDIT_LABELS    = 0x0100
+    wxDIRCTRL_EDIT_LABELS    = 0x0100,
+    //Multiple selection
+    wxDIRCTRL_MULTIPLE       = 0x0200
 };
 
 //-----------------------------------------------------------------------------
@@ -128,12 +130,17 @@
 
     // Get dir or filename
     virtual wxString GetPath() const;
+    virtual void GetPaths(wxArrayString& paths) const;
 
     // Get selected filename path only (else empty string).
     // I.e. don't count a directory as a selection
     virtual wxString GetFilePath() const;
+    virtual void GetFilePaths(wxArrayString& paths) const;
     virtual void SetPath(const wxString& path);
 
+    virtual void SelectPath(const wxString& path, bool select = true);
+    virtual void SelectPaths(const wxArrayString& paths);
+
     virtual void ShowHidden( bool show );
     virtual bool GetShowHidden() { return m_showHidden; }
 
@@ -147,6 +154,8 @@
 
     virtual wxTreeCtrl* GetTreeCtrl() const { return m_treeCtrl; }
     virtual wxDirFilterListCtrl* GetFilterListCtrl() const { return m_filterListCtrl; }
+    
+    virtual void UnselectAll();
 
     // Helper
     virtual void SetupSections();
@@ -166,7 +175,6 @@
     // Collapse the entire tree
     virtual void CollapseTree();
 
-
     // overridden base class methods
     virtual void SetFocus();
 
Index: wxWidgets-TRUNKDEVEL/interface/wx/dirctrl.h
===================================================================
--- wxWidgets-TRUNKDEVEL/interface/wx/dirctrl.h	(revision 60721)
+++ wxWidgets-TRUNKDEVEL/interface/wx/dirctrl.h	(working copy)
@@ -25,6 +25,8 @@
            directory.
     @style{wxDIRCTRL_EDIT_LABELS}
            Allow the folder and file labels to be editable.
+    @style{wxDIRCTRL_MULTIPLE}
+           Allows multiple files and folders to be selected.
     @endStyleTable
 
     @library{wxbase}
@@ -117,6 +119,13 @@
         This function doesn't count a directory as a selection.
     */
     virtual wxString GetFilePath() const;
+	
+    /**
+        Fills the array @a paths with the currently selected filepaths.
+        
+        This function doesn't count a directory as a selection.
+    */
+    virtual void GetFilePaths(wxArrayString& paths) const;
 
     /**
         Returns the filter string.
@@ -139,6 +148,11 @@
     virtual wxString GetPath() const;
 
     /**
+        Fills the array @a paths with the selected directories and filenames.
+    */
+    virtual void GetPaths(wxArrayString& paths) const;
+
+    /**
         Returns the root id for the tree control.
     */
     virtual wxTreeItemId GetRootId();
@@ -185,5 +199,24 @@
             control. If @false, they will not be displayed.
     */
     virtual void ShowHidden(bool show);
+
+    /**
+        Selects the given item. In multiple selection controls, can be also 
+        used to deselect a currently selected item if the value of @a select is false.
+        Existing selections are not changed. Only visible items can be (de)selected, otherwise use
+        ExpandPath.
+    */
+    virtual void SelectPath(const wxString& path, bool select = true);
+
+    /**
+        Selects only the specified paths, clearing any previous selection.
+        Only supported when wxDIRCTRL_MULTIPLE is set.
+    */
+    virtual void SelectPaths(const wxArrayString& paths);
+
+    /**
+        Removes the selection from all currently selected items.
+    */
+    virtual void UnselectAll();
 };
 
