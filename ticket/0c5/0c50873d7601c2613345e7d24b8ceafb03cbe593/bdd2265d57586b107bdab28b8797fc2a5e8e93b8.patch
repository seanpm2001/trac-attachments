Index: configure
===================================================================
--- configure	(revision 63753)
+++ configure	(working copy)
@@ -47506,6 +47506,7 @@
 cat confdefs.h >>conftest.$ac_ext
 cat >>conftest.$ac_ext <<_ACEOF
 /* end confdefs.h.  */
+#include <windows.h>
 #include <gdiplus.h>
 int
 main ()
Index: include/wx/msw/chkconf.h
===================================================================
--- include/wx/msw/chkconf.h	(revision 63783)
+++ include/wx/msw/chkconf.h	(working copy)
@@ -243,9 +243,20 @@
 // can support it too (but notice that Borland currently dies in
 // src/msw/gdiplus.cpp with "macro expansion too long" error even if the header
 // is available)
-#if !wxCHECK_VISUALC_VERSION(7)
-    #undef wxUSE_GRAPHICS_CONTEXT
-    #define wxUSE_GRAPHICS_CONTEXT 0
+// For GNUWIN32 assume we can handle GDI plus if it has been selected
+#if !wxCHECK_VISUALC_VERSION(7) && !defined(__GNUWIN32__)
+    #ifdef wxUSE_GRAPHICS_CONTEXT
+        #if wxUSE_GRAPHICS_CONTEXT
+            #ifdef wxABORT_ON_CONFIG_ERROR
+                #error "wxUSE_GRAPHICS_CONTEXT requires VisualC 7 or later or GnuWin32"
+            #else
+                #undef wxUSE_GRAPHICS_CONTEXT
+                #define wxUSE_GRAPHICS_CONTEXT 0
+            #endif
+        #endif
+    #else
+        #define wxUSE_GRAPHICS_CONTEXT 0
+    #endif
 #endif

 // Borland
Index: configure.in
===================================================================
--- configure.in	(revision 63753)
+++ configure.in	(working copy)
@@ -7444,7 +7444,9 @@
                 dnl GDI+ DLL dynamically anyhow during run-time
                 AC_LANG_PUSH(C++)
                 AC_TRY_COMPILE(
-                    [#include <gdiplus.h>],
+                    [#include <windows.h>
+                     #include <gdiplus.h>
+                    ],
                     [
                         using namespace Gdiplus;
                     ],
