Index: include/wx/ffile.h
===================================================================
--- include/wx/ffile.h	(revision 74795)
+++ include/wx/ffile.h	(working copy)
@@ -49,7 +49,7 @@
   // assign an existing file descriptor and get it back from wxFFile object
   void Attach(FILE *lfp, const wxString& name = wxEmptyString)
     { Close(); m_fp = lfp; m_name = name; }
-  void Detach() { m_fp = NULL; }
+  FILE* Detach() { FILE* old = m_fp; m_fp = NULL; return old; }
   FILE *fp() const { return m_fp; }
 
   // read/write (unbuffered)
Index: include/wx/file.h
===================================================================
--- include/wx/file.h	(revision 74795)
+++ include/wx/file.h	(working copy)
@@ -65,7 +65,7 @@
 
   // assign an existing file descriptor and get it back from wxFile object
   void Attach(int lfd) { Close(); m_fd = lfd; m_lasterror = 0; }
-  void Detach()       { m_fd = fd_invalid;  }
+  int  Detach()        { int old = m_fd; m_fd = fd_invalid; return old; }
   int  fd() const { return m_fd; }
 
   // read/write (unbuffered)
Index: interface/wx/ffile.h
===================================================================
--- interface/wx/ffile.h	(revision 74795)
+++ interface/wx/ffile.h	(working copy)
@@ -76,8 +76,10 @@
         closing the file if this descriptor is opened.
 
         IsOpened() will return @false after call to Detach().
+
+        @return The file pointer.
     */
-    void Detach();
+    FILE* Detach();
 
     /**
         Returns @true if an attempt has been made to read @e past
Index: interface/wx/file.h
===================================================================
--- interface/wx/file.h	(revision 74795)
+++ interface/wx/file.h	(working copy)
@@ -295,8 +295,10 @@
         Get back a file descriptor from wxFile object - the caller is responsible for
         closing the file if this descriptor is opened.
         IsOpened() will return @false after call to Detach().
+
+        @return The file descriptor.
     */
-    void Detach();
+    int Detach();
 
     /**
         Returns @true if the end of the file has been reached.
