Index: src/univ/notebook.cpp
===================================================================
--- src/univ/notebook.cpp	(revision 54433)
+++ src/univ/notebook.cpp	(working copy)
@@ -115,7 +115,6 @@
 // ============================================================================
 
 IMPLEMENT_DYNAMIC_CLASS(wxNotebook, wxBookCtrlBase)
-IMPLEMENT_DYNAMIC_CLASS(wxNotebookEvent, wxCommandEvent)
 
 // ----------------------------------------------------------------------------
 // wxNotebook creation
Index: src/cocoa/notebook.mm
===================================================================
--- src/cocoa/notebook.mm	(revision 54433)
+++ src/cocoa/notebook.mm	(working copy)
@@ -125,11 +125,10 @@
 WX_IMPLEMENT_GET_OBJC_CLASS(WXCTabViewImageItem,NSTabViewItem)
 
 // ========================================================================
-// wxNotebookEvent
+// wxBookEvent
 // ========================================================================
 DEFINE_EVENT_TYPE(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED)
 DEFINE_EVENT_TYPE(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING)
-IMPLEMENT_DYNAMIC_CLASS(wxNotebookEvent, wxNotifyEvent)
 
 // ========================================================================
 // wxNotebook
@@ -315,7 +314,7 @@
 void wxNotebook::CocoaDelegate_tabView_didSelectTabViewItem(WX_NSTabViewItem tabViewItem)
 {
     // FIXME: oldSel probably == newSel
-    wxNotebookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED, GetId(),
+    wxBookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED, GetId(),
         [GetNSTabView() indexOfTabViewItem:tabViewItem], GetSelection());
     event.SetEventObject(this);
     GetEventHandler()->ProcessEvent(event);
@@ -323,7 +322,7 @@
 
 bool wxNotebook::CocoaDelegate_tabView_shouldSelectTabViewItem(WX_NSTabViewItem tabViewItem)
 {
-    wxNotebookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, GetId(),
+    wxBookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, GetId(),
         [GetNSTabView() indexOfTabViewItem:tabViewItem], GetSelection());
     event.SetEventObject(this);
     return !HandleWindowEvent(event) || event.IsAllowed();
Index: src/gtk/notebook.cpp
===================================================================
--- src/gtk/notebook.cpp	(revision 54433)
+++ src/gtk/notebook.cpp	(working copy)
@@ -675,10 +675,4 @@
     return GetDefaultAttributesFromGTKWidget(gtk_notebook_new);
 }
 
-//-----------------------------------------------------------------------------
-// wxNotebookEvent
-//-----------------------------------------------------------------------------
-
-IMPLEMENT_DYNAMIC_CLASS(wxNotebookEvent, wxNotifyEvent)
-
 #endif
Index: src/motif/mdi.cpp
===================================================================
--- src/motif/mdi.cpp	(revision 54433)
+++ src/motif/mdi.cpp	(working copy)
@@ -682,7 +682,7 @@
     event.Skip();
 }
 
-void wxMDIClientWindow::OnPageChanged(wxNotebookEvent& event)
+void wxMDIClientWindow::OnPageChanged(wxBookEvent& event)
 {
     // Notify child that it has been activated
     if (event.GetOldSelection() != -1)
Index: src/common/bookctrl.cpp
===================================================================
--- src/common/bookctrl.cpp	(revision 54433)
+++ src/common/bookctrl.cpp	(working copy)
@@ -455,7 +455,7 @@
 
     if ( n != (size_t)oldSel )
     {
-        wxBookCtrlBaseEvent *event = CreatePageChangingEvent();
+        wxBookEvent *event = CreatePageChangingEvent();
         bool allowed = false;
 
         if ( flags & SetSelection_SendEvent )
@@ -493,5 +493,6 @@
     return oldSel;
 }
 
+IMPLEMENT_DYNAMIC_CLASS(wxBookEvent, wxNotifyEvent)
 
 #endif // wxUSE_BOOKCTRL
Index: src/common/nbkbase.cpp
===================================================================
--- src/common/nbkbase.cpp	(revision 54433)
+++ src/common/nbkbase.cpp	(working copy)
@@ -65,7 +65,7 @@
 
 bool wxNotebookBase::SendPageChangingEvent(int nPage)
 {
-    wxNotebookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, GetId());
+    wxBookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, GetId());
     event.SetSelection(nPage);
     event.SetOldSelection(GetSelection());
     event.SetEventObject(this);
@@ -74,7 +74,7 @@
 
 void wxNotebookBase::SendPageChangedEvent(int nPageOld, int nPageNew)
 {
-    wxNotebookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED, GetId());
+    wxBookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED, GetId());
     event.SetSelection(nPageNew == -1 ? GetSelection() : nPageNew);
     event.SetOldSelection(nPageOld);
     event.SetEventObject(this);
Index: src/palmos/notebook.cpp
===================================================================
--- src/palmos/notebook.cpp	(revision 54433)
+++ src/palmos/notebook.cpp	(working copy)
@@ -98,8 +98,8 @@
 }
 
 wxBEGIN_PROPERTIES_TABLE(wxNotebook)
-    wxEVENT_PROPERTY( PageChanging , wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING , wxNotebookEvent )
-    wxEVENT_PROPERTY( PageChanged , wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED , wxNotebookEvent )
+    wxEVENT_PROPERTY( PageChanging , wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING , wxBookEvent )
+    wxEVENT_PROPERTY( PageChanged , wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED , wxBookEvent )
 
     wxPROPERTY_COLLECTION( PageInfos , wxNotebookPageInfoList , wxNotebookPageInfo* , AddPageInfo , GetPageInfos , 0 /*flags*/ , wxT("Helpstring") , wxT("group"))
     wxPROPERTY_FLAGS( WindowStyle , wxNotebookStyle , long , SetWindowStyleFlag , GetWindowStyleFlag , EMPTY_MACROVALUE , 0 /*flags*/ , wxT("Helpstring") , wxT("group")) // style
@@ -127,7 +127,6 @@
 IMPLEMENT_DYNAMIC_CLASS(wxNotebook, wxBookCtrlBase)
 IMPLEMENT_DYNAMIC_CLASS(wxNotebookPageInfo, wxObject )
 #endif
-IMPLEMENT_DYNAMIC_CLASS(wxNotebookEvent, wxNotifyEvent)
 
 // ============================================================================
 // implementation
@@ -288,7 +287,7 @@
 {
 }
 
-void wxNotebook::OnSelChange(wxNotebookEvent& event)
+void wxNotebook::OnSelChange(wxBookEvent& event)
 {
 }
 
Index: src/os2/window.cpp
===================================================================
--- src/os2/window.cpp	(revision 54433)
+++ src/os2/window.cpp	(working copy)
@@ -2548,7 +2548,7 @@
                             (pPage->ulPageIdNew > 0L && pPage->ulPageIdCur > 0L))
                         {
                             wxWindowOS2*        pWin = wxFindWinFromHandle(pPage->hwndBook);
-                            wxNotebookEvent     vEvent( wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED
+                            wxBookEvent     vEvent( wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED
                                                        ,(int)SHORT1FROMMP(wParam)
                                                        ,(int)pPage->ulPageIdNew
                                                        ,(int)pPage->ulPageIdCur
Index: src/os2/notebook.cpp
===================================================================
--- src/os2/notebook.cpp	(revision 54433)
+++ src/os2/notebook.cpp	(working copy)
@@ -64,7 +64,6 @@
 END_EVENT_TABLE()
 
 IMPLEMENT_DYNAMIC_CLASS(wxNotebook, wxBookCtrlBase)
-IMPLEMENT_DYNAMIC_CLASS(wxNotebookEvent, wxNotifyEvent)
 
 // ============================================================================
 // implementation
@@ -216,7 +215,7 @@
 
     if (nPage != (size_t)m_nSelection)
     {
-        wxNotebookEvent             vEvent( wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING
+        wxBookEvent             vEvent( wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING
                                            ,m_windowId
                                           );
 
@@ -683,7 +682,7 @@
 } // end of wxNotebook::OnSize
 
 void wxNotebook::OnSelChange (
-  wxNotebookEvent&                  rEvent
+  wxBookEvent&                  rEvent
 )
 {
     //
Index: src/gtk1/notebook.cpp
===================================================================
--- src/gtk1/notebook.cpp	(revision 54433)
+++ src/gtk1/notebook.cpp	(working copy)
@@ -112,7 +112,7 @@
         notebook->m_skipNextPageChangeEvent = false;
 
         // make wxNotebook::GetSelection() return the correct (i.e. consistent
-        // with wxNotebookEvent::GetSelection()) value even though the page is
+        // with wxBookEvent::GetSelection()) value even though the page is
         // not really changed in GTK+
         notebook->m_selection = page;
     }
@@ -126,7 +126,7 @@
         else // change allowed
         {
             // make wxNotebook::GetSelection() return the correct (i.e. consistent
-            // with wxNotebookEvent::GetSelection()) value even though the page is
+            // with wxBookEvent::GetSelection()) value even though the page is
             // not really changed in GTK+
             notebook->m_selection = page;
 
@@ -865,10 +865,4 @@
     return GetDefaultAttributesFromGTKWidget(gtk_notebook_new);
 }
 
-//-----------------------------------------------------------------------------
-// wxNotebookEvent
-//-----------------------------------------------------------------------------
-
-IMPLEMENT_DYNAMIC_CLASS(wxNotebookEvent, wxNotifyEvent)
-
 #endif
Index: src/msw/notebook.cpp
===================================================================
--- src/msw/notebook.cpp	(revision 54433)
+++ src/msw/notebook.cpp	(working copy)
@@ -187,8 +187,8 @@
 }
 
 wxBEGIN_PROPERTIES_TABLE(wxNotebook)
-    wxEVENT_PROPERTY( PageChanging , wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING , wxNotebookEvent )
-    wxEVENT_PROPERTY( PageChanged , wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED , wxNotebookEvent )
+    wxEVENT_PROPERTY( PageChanging , wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING , wxBookEvent )
+    wxEVENT_PROPERTY( PageChanged , wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED , wxBookEvent )
 
     wxPROPERTY_COLLECTION( PageInfos , wxNotebookPageInfoList , wxNotebookPageInfo* , AddPageInfo , GetPageInfos , 0 /*flags*/ , wxT("Helpstring") , wxT("group"))
     wxPROPERTY_FLAGS( WindowStyle , wxNotebookStyle , long , SetWindowStyleFlag , GetWindowStyleFlag , EMPTY_MACROVALUE , 0 /*flags*/ , wxT("Helpstring") , wxT("group")) // style
@@ -216,7 +216,6 @@
 IMPLEMENT_DYNAMIC_CLASS(wxNotebook, wxBookCtrlBase)
 IMPLEMENT_DYNAMIC_CLASS(wxNotebookPageInfo, wxObject )
 #endif
-IMPLEMENT_DYNAMIC_CLASS(wxNotebookEvent, wxNotifyEvent)
 
 // ============================================================================
 // implementation
@@ -1091,7 +1090,7 @@
     event.Skip();
 }
 
-void wxNotebook::OnSelChange(wxNotebookEvent& event)
+void wxNotebook::OnSelChange(wxBookEvent& event)
 {
     // is it our tab control?
     if ( event.GetEventObject() == this )
@@ -1423,7 +1422,7 @@
 
 bool wxNotebook::MSWOnNotify(int idCtrl, WXLPARAM lParam, WXLPARAM* result)
 {
-  wxNotebookEvent event(wxEVT_NULL, m_windowId);
+  wxBookEvent event(wxEVT_NULL, m_windowId);
 
   NMHDR* hdr = (NMHDR *)lParam;
   switch ( hdr->code ) {
Index: src/osx/carbon/notebmac.cpp
===================================================================
--- src/osx/carbon/notebmac.cpp	(revision 54433)
+++ src/osx/carbon/notebmac.cpp	(working copy)
@@ -43,7 +43,6 @@
 END_EVENT_TABLE()
 
 IMPLEMENT_DYNAMIC_CLASS(wxNotebook, wxBookCtrlBase)
-IMPLEMENT_DYNAMIC_CLASS(wxNotebookEvent, wxCommandEvent)
 
 
 // common part of all ctors
@@ -458,7 +457,7 @@
     event.Skip();
 }
 
-void wxNotebook::OnSelChange(wxNotebookEvent& event)
+void wxNotebook::OnSelChange(wxBookEvent& event)
 {
     // is it our tab control?
     if ( event.GetEventObject() == this )
@@ -593,7 +592,7 @@
     SInt32 newSel = m_peer->GetValue() - 1 ;
     if ( newSel != m_nSelection )
     {
-        wxNotebookEvent changing(
+        wxBookEvent changing(
             wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, m_windowId,
             newSel , m_nSelection );
         changing.SetEventObject( this );
@@ -601,7 +600,7 @@
 
         if ( changing.IsAllowed() )
         {
-            wxNotebookEvent event(
+            wxBookEvent event(
                 wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED, m_windowId,
                 newSel, m_nSelection );
             event.SetEventObject( this );
Index: src/generic/mdig.cpp
===================================================================
--- src/generic/mdig.cpp	(revision 54433)
+++ src/generic/mdig.cpp	(working copy)
@@ -775,7 +775,7 @@
     }
 }
 
-void wxGenericMDIClientWindow::OnPageChanged(wxNotebookEvent& event)
+void wxGenericMDIClientWindow::OnPageChanged(wxBookEvent& event)
 {
     PageChanged(event.GetOldSelection(), event.GetSelection());
 
Index: src/generic/toolbkg.cpp
===================================================================
--- src/generic/toolbkg.cpp	(revision 54433)
+++ src/generic/toolbkg.cpp	(working copy)
@@ -44,7 +44,6 @@
 // ----------------------------------------------------------------------------
 
 IMPLEMENT_DYNAMIC_CLASS(wxToolbook, wxBookCtrlBase)
-IMPLEMENT_DYNAMIC_CLASS(wxToolbookEvent, wxNotifyEvent)
 
 const wxEventType wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGING = wxNewEventType();
 const wxEventType wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGED = wxNewEventType();
@@ -247,12 +246,12 @@
     return m_selection;
 }
 
-wxBookCtrlBaseEvent* wxToolbook::CreatePageChangingEvent() const
+wxBookEvent* wxToolbook::CreatePageChangingEvent() const
 {
-    return new wxToolbookEvent(wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGING, m_windowId);
+    return new wxBookEvent(wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGING, m_windowId);
 }
 
-void wxToolbook::MakeChangedEvent(wxBookCtrlBaseEvent &event)
+void wxToolbook::MakeChangedEvent(wxBookEvent &event)
 {
     event.SetEventType(wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGED);
 }
Index: src/generic/choicbkg.cpp
===================================================================
--- src/generic/choicbkg.cpp	(revision 54433)
+++ src/generic/choicbkg.cpp	(working copy)
@@ -48,7 +48,6 @@
 // ----------------------------------------------------------------------------
 
 IMPLEMENT_DYNAMIC_CLASS(wxChoicebook, wxBookCtrlBase)
-IMPLEMENT_DYNAMIC_CLASS(wxChoicebookEvent, wxNotifyEvent)
 
 const wxEventType wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING = wxNewEventType();
 const wxEventType wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED = wxNewEventType();
@@ -205,12 +204,12 @@
     return m_selection;
 }
 
-wxBookCtrlBaseEvent* wxChoicebook::CreatePageChangingEvent() const
+wxBookEvent* wxChoicebook::CreatePageChangingEvent() const
 {
-    return new wxChoicebookEvent(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING, m_windowId);
+    return new wxBookEvent(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING, m_windowId);
 }
 
-void wxChoicebook::MakeChangedEvent(wxBookCtrlBaseEvent &event)
+void wxChoicebook::MakeChangedEvent(wxBookEvent &event)
 {
     event.SetEventType(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED);
 }
Index: src/generic/notebook.cpp
===================================================================
--- src/generic/notebook.cpp	(revision 54433)
+++ src/generic/notebook.cpp	(working copy)
@@ -62,7 +62,6 @@
 END_EVENT_TABLE()
 
 IMPLEMENT_DYNAMIC_CLASS(wxNotebook, wxBookCtrlBase)
-IMPLEMENT_DYNAMIC_CLASS(wxNotebookEvent, wxCommandEvent)
 
 // ============================================================================
 // implementation
@@ -545,7 +544,7 @@
     return true;
 }
 
-void wxNotebook::OnSelChange(wxNotebookEvent& event)
+void wxNotebook::OnSelChange(wxBookEvent& event)
 {
     // is it our tab control?
     if ( event.GetEventObject() == this )
@@ -713,7 +712,7 @@
   if (!m_notebook)
     return;
 
-  wxNotebookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED, m_notebook->GetId());
+  wxBookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED, m_notebook->GetId());
 
   // Translate from wxTabView's ids (which aren't position-dependent)
   // to wxNotebook's (which are).
@@ -736,7 +735,7 @@
 
   if (m_notebook)
   {
-    wxNotebookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, m_notebook->GetId());
+    wxBookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, m_notebook->GetId());
 
     // Translate from wxTabView's ids (which aren't position-dependent)
     // to wxNotebook's (which are).
Index: src/generic/treebkg.cpp
===================================================================
--- src/generic/treebkg.cpp	(revision 54433)
+++ src/generic/treebkg.cpp	(working copy)
@@ -46,7 +46,6 @@
 // ----------------------------------------------------------------------------
 
 IMPLEMENT_DYNAMIC_CLASS(wxTreebook, wxBookCtrlBase)
-IMPLEMENT_DYNAMIC_CLASS(wxTreebookEvent, wxNotifyEvent)
 
 const wxEventType wxEVT_COMMAND_TREEBOOK_PAGE_CHANGING = wxNewEventType();
 const wxEventType wxEVT_COMMAND_TREEBOOK_PAGE_CHANGED = wxNewEventType();
@@ -581,7 +580,7 @@
     wxASSERT_MSG( GetPageCount() == DoInternalGetPageCount(),
                   wxT("wxTreebook logic error: m_treeIds and m_pages not in sync!"));
 
-    wxTreebookEvent event(wxEVT_COMMAND_TREEBOOK_PAGE_CHANGING, m_windowId);
+    wxBookEvent event(wxEVT_COMMAND_TREEBOOK_PAGE_CHANGING, m_windowId);
     const int oldSel = m_selection;
     wxTreeCtrl *tree = GetTreeCtrl();
     bool allowed = false;
@@ -719,7 +718,7 @@
     int pagePos = DoInternalFindPageById(nodeId);
     wxCHECK_RET( pagePos != wxNOT_FOUND, wxT("Internal problem in wxTreebook!..") );
 
-    wxTreebookEvent ev(GetTreeCtrl()->IsExpanded(nodeId)
+    wxBookEvent ev(GetTreeCtrl()->IsExpanded(nodeId)
             ? wxEVT_COMMAND_TREEBOOK_NODE_EXPANDED
             : wxEVT_COMMAND_TREEBOOK_NODE_COLLAPSED,
         m_windowId);
Index: src/generic/listbkg.cpp
===================================================================
--- src/generic/listbkg.cpp	(revision 54433)
+++ src/generic/listbkg.cpp	(working copy)
@@ -54,7 +54,6 @@
 // ----------------------------------------------------------------------------
 
 IMPLEMENT_DYNAMIC_CLASS(wxListbook, wxBookCtrlBase)
-IMPLEMENT_DYNAMIC_CLASS(wxListbookEvent, wxNotifyEvent)
 
 const wxEventType wxEVT_COMMAND_LISTBOOK_PAGE_CHANGING = wxNewEventType();
 const wxEventType wxEVT_COMMAND_LISTBOOK_PAGE_CHANGED = wxNewEventType();
@@ -361,12 +360,12 @@
     return m_selection;
 }
 
-wxBookCtrlBaseEvent* wxListbook::CreatePageChangingEvent() const
+wxBookEvent* wxListbook::CreatePageChangingEvent() const
 {
-    return new wxListbookEvent(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGING, m_windowId);
+    return new wxBookEvent(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGING, m_windowId);
 }
 
-void wxListbook::MakeChangedEvent(wxBookCtrlBaseEvent &event)
+void wxListbook::MakeChangedEvent(wxBookEvent &event)
 {
     event.SetEventType(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGED);
 }
Index: include/wx/motif/mdi.h
===================================================================
--- include/wx/motif/mdi.h	(revision 54433)
+++ include/wx/motif/mdi.h	(working copy)
@@ -225,7 +225,7 @@
     void OnScroll(wxScrollEvent& event);
 
     // Implementation
-    void OnPageChanged(wxNotebookEvent& event);
+    void OnPageChanged(wxBookEvent& event);
 
     int FindPage(const wxNotebookPage* page);
 
Index: include/wx/toolbook.h
===================================================================
--- include/wx/toolbook.h	(revision 54433)
+++ include/wx/toolbook.h	(working copy)
@@ -111,8 +111,8 @@
 
     void UpdateSelectedPage(size_t newsel);
 
-    wxBookCtrlBaseEvent* CreatePageChangingEvent() const;
-    void MakeChangedEvent(wxBookCtrlBaseEvent &event);
+    wxBookEvent* CreatePageChangingEvent() const;
+    void MakeChangedEvent(wxBookEvent &event);
 
     // the currently selected page or wxNOT_FOUND if none
     int m_selection;
@@ -135,36 +135,17 @@
 // listbook event class and related stuff
 // ----------------------------------------------------------------------------
 
-class WXDLLIMPEXP_CORE wxToolbookEvent : public wxBookCtrlBaseEvent
-{
-public:
-    wxToolbookEvent(wxEventType commandType = wxEVT_NULL, int id = 0,
-                    int nSel = wxNOT_FOUND, int nOldSel = wxNOT_FOUND)
-        : wxBookCtrlBaseEvent(commandType, id, nSel, nOldSel)
-    {
-    }
+// wxToolbookEvent is obsolete and defined for compatibility only
+typedef wxBookEvent wxToolbookEvent;
+typedef wxBookEventFunction wxToolbookEventFunction;
+#define wxToolbookEventHandler(func) wxBookEventHandler(func)
 
-    wxToolbookEvent(const wxToolbookEvent& event)
-        : wxBookCtrlBaseEvent(event)
-    {
-    }
 
-    virtual wxEvent *Clone() const { return new wxToolbookEvent(*this); }
-
-private:
-    DECLARE_DYNAMIC_CLASS_NO_ASSIGN(wxToolbookEvent)
-};
-
-typedef void (wxEvtHandler::*wxToolbookEventFunction)(wxToolbookEvent&);
-
-#define wxToolbookEventHandler(func) \
-    (wxObjectEventFunction)(wxEventFunction)wxStaticCastEvent(wxToolbookEventFunction, &func)
-
 #define EVT_TOOLBOOK_PAGE_CHANGED(winid, fn) \
-    wx__DECLARE_EVT1(wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGED, winid, wxToolbookEventHandler(fn))
+    wx__DECLARE_EVT1(wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGED, winid, wxBookEventHandler(fn))
 
 #define EVT_TOOLBOOK_PAGE_CHANGING(winid, fn) \
-    wx__DECLARE_EVT1(wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGING, winid, wxToolbookEventHandler(fn))
+    wx__DECLARE_EVT1(wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGING, winid, wxBookEventHandler(fn))
 
 #endif // wxUSE_TOOLBOOK
 
Index: include/wx/palmos/notebook.h
===================================================================
--- include/wx/palmos/notebook.h	(revision 54433)
+++ include/wx/palmos/notebook.h	(working copy)
@@ -145,7 +145,7 @@
     // callbacks
     // ---------
     void OnSize(wxSizeEvent& event);
-    void OnSelChange(wxNotebookEvent& event);
+    void OnSelChange(wxBookEvent& event);
     void OnNavigationKey(wxNavigationKeyEvent& event);
 
     // base class virtuals
Index: include/wx/choicebk.h
===================================================================
--- include/wx/choicebk.h	(revision 54433)
+++ include/wx/choicebk.h	(working copy)
@@ -97,8 +97,8 @@
         GetChoiceCtrl()->Select(newsel);
     }
 
-    wxBookCtrlBaseEvent* CreatePageChangingEvent() const;
-    void MakeChangedEvent(wxBookCtrlBaseEvent &event);
+    wxBookEvent* CreatePageChangingEvent() const;
+    void MakeChangedEvent(wxBookEvent &event);
 
     // event handlers
     void OnChoiceSelected(wxCommandEvent& event);
@@ -118,36 +118,16 @@
 // choicebook event class and related stuff
 // ----------------------------------------------------------------------------
 
-class WXDLLIMPEXP_CORE wxChoicebookEvent : public wxBookCtrlBaseEvent
-{
-public:
-    wxChoicebookEvent(wxEventType commandType = wxEVT_NULL, int id = 0,
-                      int nSel = -1, int nOldSel = -1)
-        : wxBookCtrlBaseEvent(commandType, id, nSel, nOldSel)
-    {
-    }
+// wxChoicebookEvent is obsolete and defined for compatibility only
+typedef wxBookEvent wxChoicebookEvent;
+typedef wxBookEventFunction wxChoicebookEventFunction;
+#define wxChoicebookEventHandler(func) wxBookEventHandler(func)
 
-    wxChoicebookEvent(const wxChoicebookEvent& event)
-        : wxBookCtrlBaseEvent(event)
-    {
-    }
-
-    virtual wxEvent *Clone() const { return new wxChoicebookEvent(*this); }
-
-private:
-    DECLARE_DYNAMIC_CLASS_NO_ASSIGN(wxChoicebookEvent)
-};
-
-typedef void (wxEvtHandler::*wxChoicebookEventFunction)(wxChoicebookEvent&);
-
-#define wxChoicebookEventHandler(func) \
-    (wxObjectEventFunction)(wxEventFunction)wxStaticCastEvent(wxChoicebookEventFunction, &func)
-
 #define EVT_CHOICEBOOK_PAGE_CHANGED(winid, fn) \
-    wx__DECLARE_EVT1(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED, winid, wxChoicebookEventHandler(fn))
+    wx__DECLARE_EVT1(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED, winid, wxBookEventHandler(fn))
 
 #define EVT_CHOICEBOOK_PAGE_CHANGING(winid, fn) \
-    wx__DECLARE_EVT1(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING, winid, wxChoicebookEventHandler(fn))
+    wx__DECLARE_EVT1(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING, winid, wxBookEventHandler(fn))
 
 #endif // wxUSE_CHOICEBOOK
 
Index: include/wx/notebook.h
===================================================================
--- include/wx/notebook.h	(revision 54433)
+++ include/wx/notebook.h	(working copy)
@@ -118,39 +118,19 @@
 // notebook event class and related stuff
 // ----------------------------------------------------------------------------
 
-class WXDLLIMPEXP_CORE wxNotebookEvent : public wxBookCtrlBaseEvent
-{
-public:
-    wxNotebookEvent(wxEventType commandType = wxEVT_NULL, int winid = 0,
-                    int nSel = -1, int nOldSel = -1)
-        : wxBookCtrlBaseEvent(commandType, winid, nSel, nOldSel)
-    {
-    }
+// wxNotebookEvent is obsolete and defined for compatibility only
+typedef wxBookEvent wxNotebookEvent;
+typedef wxBookEventFunction wxNotebookEventFunction;
+#define wxNotebookEventHandler(func) wxBookEventHandler(func)
 
-    wxNotebookEvent(const wxNotebookEvent& event)
-        : wxBookCtrlBaseEvent(event)
-    {
-    }
-
-    virtual wxEvent *Clone() const { return new wxNotebookEvent(*this); }
-
-private:
-    DECLARE_DYNAMIC_CLASS_NO_ASSIGN(wxNotebookEvent)
-};
-
 extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED;
 extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING;
 
-typedef void (wxEvtHandler::*wxNotebookEventFunction)(wxNotebookEvent&);
-
-#define wxNotebookEventHandler(func) \
-    (wxObjectEventFunction)(wxEventFunction)wxStaticCastEvent(wxNotebookEventFunction, &func)
-
 #define EVT_NOTEBOOK_PAGE_CHANGED(winid, fn) \
-    wx__DECLARE_EVT1(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED, winid, wxNotebookEventHandler(fn))
+    wx__DECLARE_EVT1(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED, winid, wxBookEventHandler(fn))
 
 #define EVT_NOTEBOOK_PAGE_CHANGING(winid, fn) \
-    wx__DECLARE_EVT1(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, winid, wxNotebookEventHandler(fn))
+    wx__DECLARE_EVT1(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, winid, wxBookEventHandler(fn))
 
 // ----------------------------------------------------------------------------
 // wxNotebook class itself
Index: include/wx/msw/notebook.h
===================================================================
--- include/wx/msw/notebook.h	(revision 54433)
+++ include/wx/msw/notebook.h	(working copy)
@@ -150,7 +150,7 @@
   // callbacks
   // ---------
   void OnSize(wxSizeEvent& event);
-  void OnSelChange(wxNotebookEvent& event);
+  void OnSelChange(wxBookEvent& event);
   void OnNavigationKey(wxNavigationKeyEvent& event);
 
   // base class virtuals
Index: include/wx/listbook.h
===================================================================
--- include/wx/listbook.h	(revision 54433)
+++ include/wx/listbook.h	(working copy)
@@ -94,8 +94,8 @@
 
     void UpdateSelectedPage(size_t newsel);
 
-    wxBookCtrlBaseEvent* CreatePageChangingEvent() const;
-    void MakeChangedEvent(wxBookCtrlBaseEvent &event);
+    wxBookEvent* CreatePageChangingEvent() const;
+    void MakeChangedEvent(wxBookEvent &event);
 
     // get flags for different list control modes
     long GetListCtrlIconViewFlags() const;
@@ -120,36 +120,16 @@
 // listbook event class and related stuff
 // ----------------------------------------------------------------------------
 
-class WXDLLIMPEXP_CORE wxListbookEvent : public wxBookCtrlBaseEvent
-{
-public:
-    wxListbookEvent(wxEventType commandType = wxEVT_NULL, int id = 0,
-                    int nSel = wxNOT_FOUND, int nOldSel = wxNOT_FOUND)
-        : wxBookCtrlBaseEvent(commandType, id, nSel, nOldSel)
-    {
-    }
+// wxListbookEvent is obsolete and defined for compatibility only
+typedef wxBookEvent wxListbookEvent;
+typedef wxBookEventFunction wxListbookEventFunction;
+#define wxListbookEventHandler(func) wxBookEventHandler(func)
 
-    wxListbookEvent(const wxListbookEvent& event)
-        : wxBookCtrlBaseEvent(event)
-    {
-    }
-
-    virtual wxEvent *Clone() const { return new wxListbookEvent(*this); }
-
-private:
-    DECLARE_DYNAMIC_CLASS_NO_ASSIGN(wxListbookEvent)
-};
-
-typedef void (wxEvtHandler::*wxListbookEventFunction)(wxListbookEvent&);
-
-#define wxListbookEventHandler(func) \
-    (wxObjectEventFunction)(wxEventFunction)wxStaticCastEvent(wxListbookEventFunction, &func)
-
 #define EVT_LISTBOOK_PAGE_CHANGED(winid, fn) \
-    wx__DECLARE_EVT1(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGED, winid, wxListbookEventHandler(fn))
+    wx__DECLARE_EVT1(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGED, winid, wxBookEventHandler(fn))
 
 #define EVT_LISTBOOK_PAGE_CHANGING(winid, fn) \
-    wx__DECLARE_EVT1(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGING, winid, wxListbookEventHandler(fn))
+    wx__DECLARE_EVT1(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGING, winid, wxBookEventHandler(fn))
 
 #endif // wxUSE_LISTBOOK
 
Index: include/wx/os2/notebook.h
===================================================================
--- include/wx/os2/notebook.h	(revision 54433)
+++ include/wx/os2/notebook.h	(working copy)
@@ -155,7 +155,7 @@
     // ---------
     //
     void OnSize(wxSizeEvent& rEvent);
-    void OnSelChange(wxNotebookEvent& rEvent);
+    void OnSelChange(wxBookEvent& rEvent);
     void OnSetFocus(wxFocusEvent& rEvent);
     void OnNavigationKey(wxNavigationKeyEvent& rEvent);
 
Index: include/wx/treebook.h
===================================================================
--- include/wx/treebook.h	(revision 54433)
+++ include/wx/treebook.h	(working copy)
@@ -233,47 +233,28 @@
 // treebook event class and related stuff
 // ----------------------------------------------------------------------------
 
-class WXDLLIMPEXP_CORE wxTreebookEvent : public wxBookCtrlBaseEvent
-{
-public:
-    wxTreebookEvent(wxEventType commandType = wxEVT_NULL, int id = 0,
-                    int nSel = wxNOT_FOUND, int nOldSel = wxNOT_FOUND)
-        : wxBookCtrlBaseEvent(commandType, id, nSel, nOldSel)
-    {
-    }
+// wxTreebookEvent is obsolete and defined for compatibility only
+typedef wxBookEvent wxTreebookEvent;
+typedef wxBookEventFunction wxTreebookEventFunction;
+#define wxTreebookEventHandler(func) wxBookEventHandler(func)
 
-    wxTreebookEvent(const wxTreebookEvent& event)
-        : wxBookCtrlBaseEvent(event)
-    {
-    }
 
-    virtual wxEvent *Clone() const { return new wxTreebookEvent(*this); }
-
-private:
-    DECLARE_DYNAMIC_CLASS_NO_ASSIGN(wxTreebookEvent)
-};
-
 extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_TREEBOOK_PAGE_CHANGED;
 extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_TREEBOOK_PAGE_CHANGING;
 extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_TREEBOOK_NODE_COLLAPSED;
 extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_TREEBOOK_NODE_EXPANDED;
 
-typedef void (wxEvtHandler::*wxTreebookEventFunction)(wxTreebookEvent&);
-
-#define wxTreebookEventHandler(func) \
-    (wxObjectEventFunction)(wxEventFunction)wxStaticCastEvent(wxTreebookEventFunction, &func)
-
 #define EVT_TREEBOOK_PAGE_CHANGED(winid, fn) \
-    wx__DECLARE_EVT1(wxEVT_COMMAND_TREEBOOK_PAGE_CHANGED, winid, wxTreebookEventHandler(fn))
+    wx__DECLARE_EVT1(wxEVT_COMMAND_TREEBOOK_PAGE_CHANGED, winid, wxBookEventHandler(fn))
 
 #define EVT_TREEBOOK_PAGE_CHANGING(winid, fn) \
-    wx__DECLARE_EVT1(wxEVT_COMMAND_TREEBOOK_PAGE_CHANGING, winid, wxTreebookEventHandler(fn))
+    wx__DECLARE_EVT1(wxEVT_COMMAND_TREEBOOK_PAGE_CHANGING, winid, wxBookEventHandler(fn))
 
 #define EVT_TREEBOOK_NODE_COLLAPSED(winid, fn) \
-    wx__DECLARE_EVT1(wxEVT_COMMAND_TREEBOOK_NODE_COLLAPSED, winid, wxTreebookEventHandler(fn))
+    wx__DECLARE_EVT1(wxEVT_COMMAND_TREEBOOK_NODE_COLLAPSED, winid, wxBookEventHandler(fn))
 
 #define EVT_TREEBOOK_NODE_EXPANDED(winid, fn) \
-    wx__DECLARE_EVT1(wxEVT_COMMAND_TREEBOOK_NODE_EXPANDED, winid, wxTreebookEventHandler(fn))
+    wx__DECLARE_EVT1(wxEVT_COMMAND_TREEBOOK_NODE_EXPANDED, winid, wxBookEventHandler(fn))
 
 
 #endif // wxUSE_TREEBOOK
Index: include/wx/osx/carbon/notebook.h
===================================================================
--- include/wx/osx/carbon/notebook.h	(revision 54433)
+++ include/wx/osx/carbon/notebook.h	(working copy)
@@ -101,7 +101,7 @@
   // callbacks
   // ---------
   void OnSize(wxSizeEvent& event);
-  void OnSelChange(wxNotebookEvent& event);
+  void OnSelChange(wxBookEvent& event);
   void OnSetFocus(wxFocusEvent& event);
   void OnNavigationKey(wxNavigationKeyEvent& event);
 
Index: include/wx/gtk/button.h
===================================================================
--- include/wx/gtk/button.h	(revision 54433)
+++ include/wx/gtk/button.h	(working copy)
@@ -44,10 +44,6 @@
     // implementation
     // --------------
 
-    // Since this wxButton doesn't derive from wxButtonBase (why?) we need
-    // to override this here too...
-    virtual bool ShouldInheritColours() const { return false; }
-
     static wxVisualAttributes
     GetClassDefaultAttributes(wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL);
 
Index: include/wx/generic/mdig.h
===================================================================
--- include/wx/generic/mdig.h	(revision 54433)
+++ include/wx/generic/mdig.h	(working copy)
@@ -237,7 +237,7 @@
 protected:
     void PageChanged(int OldSelection, int newSelection);
 
-    void OnPageChanged(wxNotebookEvent& event);
+    void OnPageChanged(wxBookEvent& event);
     void OnSize(wxSizeEvent& event);
 
 private:
Index: include/wx/generic/notebook.h
===================================================================
--- include/wx/generic/notebook.h	(revision 54433)
+++ include/wx/generic/notebook.h	(working copy)
@@ -115,7 +115,7 @@
   // ---------
   void OnSize(wxSizeEvent& event);
   void OnInternalIdle();
-  void OnSelChange(wxNotebookEvent& event);
+  void OnSelChange(wxBookEvent& event);
   void OnSetFocus(wxFocusEvent& event);
   void OnNavigationKey(wxNavigationKeyEvent& event);
 
Index: include/wx/bookctrl.h
===================================================================
--- include/wx/bookctrl.h	(revision 54433)
+++ include/wx/bookctrl.h	(working copy)
@@ -26,7 +26,7 @@
 WX_DEFINE_EXPORTED_ARRAY_PTR(wxWindow *, wxArrayPages);
 
 class WXDLLIMPEXP_FWD_CORE wxImageList;
-class WXDLLIMPEXP_FWD_CORE wxBookCtrlBaseEvent;
+class WXDLLIMPEXP_FWD_CORE wxBookEvent;
 
 // ----------------------------------------------------------------------------
 // constants
@@ -260,12 +260,12 @@
         { wxFAIL_MSG(wxT("Override this function!")); }
 
     // create a new "page changing" event
-    virtual wxBookCtrlBaseEvent* CreatePageChangingEvent() const
+    virtual wxBookEvent* CreatePageChangingEvent() const
         { wxFAIL_MSG(wxT("Override this function!")); return NULL; }
 
     // modify the event created by CreatePageChangingEvent() to "page changed"
     // event, usually by just calling SetEventType() on it
-    virtual void MakeChangedEvent(wxBookCtrlBaseEvent& WXUNUSED(event))
+    virtual void MakeChangedEvent(wxBookEvent& WXUNUSED(event))
         { wxFAIL_MSG(wxT("Override this function!")); }
 
 
@@ -341,13 +341,13 @@
 };
 
 // ----------------------------------------------------------------------------
-// wxBookCtrlBaseEvent: page changing events generated by derived classes
+// wxBookCtrlEvent: page changing events generated by book classes
 // ----------------------------------------------------------------------------
 
-class WXDLLIMPEXP_CORE wxBookCtrlBaseEvent : public wxNotifyEvent
+class WXDLLIMPEXP_CORE wxBookEvent : public wxNotifyEvent
 {
 public:
-    wxBookCtrlBaseEvent(wxEventType commandType = wxEVT_NULL, int winid = 0,
+    wxBookEvent(wxEventType commandType = wxEVT_NULL, int winid = 0,
                         int nSel = -1, int nOldSel = -1)
         : wxNotifyEvent(commandType, winid)
     {
@@ -355,13 +355,15 @@
         m_nOldSel = nOldSel;
     }
 
-    wxBookCtrlBaseEvent(const wxBookCtrlBaseEvent& event)
+    wxBookEvent(const wxBookEvent& event)
         : wxNotifyEvent(event)
     {
         m_nSel = event.m_nSel;
         m_nOldSel = event.m_nOldSel;
     }
 
+    virtual wxEvent *Clone() const { return new wxBookEvent(*this); }
+
     // accessors
         // the currently selected page (-1 if none)
     int GetSelection() const { return m_nSel; }
@@ -373,29 +375,37 @@
 private:
     int m_nSel,     // currently selected page
         m_nOldSel;  // previously selected page
+
+    DECLARE_DYNAMIC_CLASS_NO_ASSIGN(wxBookEvent)
 };
 
+typedef void (wxEvtHandler::*wxBookEventFunction)(wxBookEvent&);
+
+#define wxBookEventHandler(func) \
+    (wxObjectEventFunction)(wxEventFunction)wxStaticCastEvent(wxBookEventFunction, &func)
+
+// obsolete names, defined for compatibility only
+#define wxBookCtrlEvent  wxBookEvent
+#define wxBookctrlEventHandler(func)  wxBookEventHandler(func)
+#define wxBookCtrlBaseEvent wxBookEvent
+
 // make a default book control for given platform
 #if wxUSE_NOTEBOOK
     // dedicated to majority of desktops
     #include "wx/notebook.h"
     #define wxBookCtrl                             wxNotebook
-    #define wxBookCtrlEvent                        wxNotebookEvent
     #define wxEVT_COMMAND_BOOKCTRL_PAGE_CHANGED    wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED
     #define wxEVT_COMMAND_BOOKCTRL_PAGE_CHANGING   wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING
     #define EVT_BOOKCTRL_PAGE_CHANGED(id, fn)      EVT_NOTEBOOK_PAGE_CHANGED(id, fn)
     #define EVT_BOOKCTRL_PAGE_CHANGING(id, fn)     EVT_NOTEBOOK_PAGE_CHANGING(id, fn)
-    #define wxBookctrlEventHandler(func)           wxNotebookEventHandler(func)
 #else
     // dedicated to Smartphones
     #include "wx/choicebk.h"
     #define wxBookCtrl                             wxChoicebook
-    #define wxBookCtrlEvent                        wxChoicebookEvent
     #define wxEVT_COMMAND_BOOKCTRL_PAGE_CHANGED    wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED
     #define wxEVT_COMMAND_BOOKCTRL_PAGE_CHANGING   wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING
     #define EVT_BOOKCTRL_PAGE_CHANGED(id, fn)      EVT_CHOICEBOOK_PAGE_CHANGED(id, fn)
     #define EVT_BOOKCTRL_PAGE_CHANGING(id, fn)     EVT_CHOICEBOOK_PAGE_CHANGING(id, fn)
-    #define wxBookctrlEventHandler(func)           wxChoicebookEventHandler(func)
 #endif
 
 #if WXWIN_COMPATIBILITY_2_6
Index: interface/wx/treebook.h
===================================================================
--- interface/wx/treebook.h	(revision 54433)
+++ interface/wx/treebook.h	(working copy)
@@ -1,71 +1,12 @@
 /////////////////////////////////////////////////////////////////////////////
 // Name:        treebook.h
-// Purpose:     interface of wxTreebookEvent
+// Purpose:     interface of wxTreebook
 // Author:      wxWidgets team
 // RCS-ID:      $Id$
 // Licence:     wxWindows license
 /////////////////////////////////////////////////////////////////////////////
 
-/**
-    @class wxTreebookEvent
 
-    This class represents the events generated by a treebook control: currently,
-    there are four of them. The EVT_TREEBOOK_PAGE_CHANGING() and
-    EVT_TREEBOOK_PAGE_CHANGED() - have exactly the same behaviour as
-    wxNotebookEvent.
-
-    The other two EVT_TREEBOOK_NODE_COLLAPSED() and EVT_TREEBOOK_NODE_EXPANDED()
-    are triggered when page node in the tree control is collapsed/expanded. The
-    page index could be retreived by calling GetSelection().
-
-    @beginEventTable{wxTreebookEvent}
-    @event{EVT_TREEBOOK_PAGE_CHANGED(id, func)}
-        The page selection was changed. Processes a @c
-        wxEVT_COMMAND_TREEBOOK_PAGE_CHANGED event.
-    @event{EVT_TREEBOOK_PAGE_CHANGING(id, func)}
-        The page selection is about to be changed. Processes a @c
-        wxEVT_COMMAND_TREEBOOK_PAGE_CHANGING event. This event can be @ref
-        wxNotifyEvent::Veto() "vetoed".
-    @event{EVT_TREEBOOK_NODE_COLLAPSED(id, func)}
-        The page node is going to be collapsed. Processes a @c
-        wxEVT_COMMAND_TREEBOOK_NODE_COLLAPSED event.
-    @event{EVT_TREEBOOK_NODE_EXPANDED(id, func)}
-        The page node is going to be expanded. Processes a @c
-        wxEVT_COMMAND_TREEBOOK_NODE_EXPANDED event.
-    @endEventTable
-    
-    @library{wxcore}
-    @category{events}
-
-    @see wxTreebook, wxNotebookEvent
-*/
-class wxTreebookEvent : public wxNotifyEvent
-{
-public:
-    /**
-        @see wxNotebookEvent
-    */
-    wxTreebookEvent(wxEventType commandType = wxEVT_NULL, int id = 0,
-                    int nSel = wxNOT_FOUND,
-                    int nOldSel = wxNOT_FOUND);
-
-    /**
-        Returns the page that was selected before the change, @c wxNOT_FOUND if
-        none was selected.
-    */
-    int GetOldSelection() const;
-
-    /**
-        Returns the currently selected page, or @c wxNOT_FOUND if none was
-        selected.
-
-        @see wxNotebookEvent::GetSelection()
-    */
-    int GetSelection() const;
-};
-
-
-
 /**
     @class wxTreebook
 
@@ -81,7 +22,7 @@
     AddPage() and AddSubPage() to sequentially populate your tree by adding at
     every step a page or a subpage to the end of the tree.
 
-    @beginEventTable{wxTreebookEvent}
+    @beginEventTable{wxBookEvent}
     @event{EVT_TREEBOOK_PAGE_CHANGED(id, func)}
         The page selection was changed. Processes a @c
         wxEVT_COMMAND_TREEBOOK_PAGE_CHANGED event.
@@ -100,7 +41,7 @@
     @library{wxcore}
     @category{miscwnd}
 
-    @see wxTreebookEvent, wxNotebook, wxTreeCtrl, wxImageList,
+    @see wxBookEvent, wxNotebook, wxTreeCtrl, wxImageList,
          @ref overview_bookctrl, @ref page_samples_notebook
 */
 class wxTreebook : public wxBookCtrlBase
@@ -230,7 +171,7 @@
 
         @note This method may return either the previously or newly selected
             page when called from the EVT_TREEBOOK_PAGE_CHANGED() handler
-            depending on the platform and so wxTreebookEvent::GetSelection()
+            depending on the platform and so wxBookEvent::GetSelection()
             should be used instead in this case.
     */
     int GetSelection() const;
Index: interface/wx/choicebk.h
===================================================================
--- interface/wx/choicebk.h	(revision 54433)
+++ interface/wx/choicebk.h	(working copy)
@@ -36,7 +36,7 @@
            Place labels below the page area.
     @endStyleTable
 
-    @beginEventTable{wxChoicebookEvent}
+    @beginEventTable{wxBookEvent}
     @event{EVT_CHOICEBOOK_PAGE_CHANGED(id, func)}
            The page selection was changed. Processes a
            wxEVT_COMMAND_LISTBOOK_PAGE_CHANGED event.
Index: interface/wx/event.h
===================================================================
--- interface/wx/event.h	(revision 54433)
+++ interface/wx/event.h	(working copy)
@@ -2385,7 +2385,7 @@
     @class wxNotifyEvent
 
     This class is not used by the event handlers by itself, but is a base class
-    for other event classes (such as wxNotebookEvent).
+    for other event classes (such as wxBookEvent).
 
     It (or an object of a derived class) is sent when the controls state is being
     changed and allows the program to wxNotifyEvent::Veto() this change if it wants
@@ -2394,7 +2394,7 @@
     @library{wxcore}
     @category{events}
 
-    @see wxNotebookEvent
+    @see wxBookEvent
 */
 class wxNotifyEvent : public wxCommandEvent
 {
Index: interface/wx/notebook.h
===================================================================
--- interface/wx/notebook.h	(revision 54433)
+++ interface/wx/notebook.h	(working copy)
@@ -1,77 +1,12 @@
 /////////////////////////////////////////////////////////////////////////////
 // Name:        notebook.h
-// Purpose:     interface of wxNotebookEvent
+// Purpose:     interface of wxNotebook
 // Author:      wxWidgets team
 // RCS-ID:      $Id$
 // Licence:     wxWindows license
 /////////////////////////////////////////////////////////////////////////////
 
-/**
-    @class wxNotebookEvent
 
-    This class represents the events generated by a notebook control: currently,
-    there are two of them. The PAGE_CHANGING event is sent before the current
-    page is changed. It allows the program to examine the current page (which
-    can be retrieved with
-    wxNotebookEvent::GetOldSelection) and to veto the page
-    change by calling wxNotifyEvent::Veto if, for example, the
-    current values in the controls of the old page are invalid.
-
-    The second event - PAGE_CHANGED - is sent after the page has been changed and
-    the program cannot veto it any more, it just informs it about the page change.
-
-    To summarize, if the program is interested in validating the page values
-    before allowing the user to change it, it should process the PAGE_CHANGING
-    event, otherwise PAGE_CHANGED is probably enough. In any case, it is probably
-    unnecessary to process both events at once.
-
-    @library{wxcore}
-    @category{events}
-
-    @see wxNotebook
-*/
-class wxNotebookEvent : public wxNotifyEvent
-{
-public:
-    /**
-        Constructor (used internally by wxWidgets only).
-    */
-    wxNotebookEvent(wxEventType eventType = wxEVT_NULL, int id = 0,
-                    int sel = -1,
-                    int oldSel = -1);
-
-    /**
-        Returns the page that was selected before the change, -1 if none was selected.
-    */
-    int GetOldSelection() const;
-
-    /**
-        Returns the currently selected page, or -1 if none was selected.
-        @note under Windows, GetSelection() will return the same value as
-        GetOldSelection() when called from
-        @c EVT_NOTEBOOK_PAGE_CHANGING handler and not the page which is going to
-        be selected. Also note that the values of selection and old selection returned
-        for an event generated in response to a call to
-        wxNotebook::SetSelection shouldn't be trusted
-        as they are currently inconsistent under different platforms (but in this case
-        you presumably don't need them anyhow as you already have the corresponding
-        information).
-    */
-    int GetSelection() const;
-
-    /**
-        Sets the id of the page selected before the change.
-    */
-    void SetOldSelection(int page);
-
-    /**
-        Sets the selection member variable.
-    */
-    void SetSelection(int page);
-};
-
-
-
 /**
     @class wxNotebook
 
@@ -109,7 +44,7 @@
     @library{wxcore}
     @category{miscwnd}
 
-    @see wxBookCtrl(), wxNotebookEvent, wxImageList, @ref overview_samplenotebook
+    @see wxBookCtrl(), wxBookEvent, wxImageList, @ref overview_samplenotebook
     "notebook sample"
 */
 class wxNotebook : public wxBookCtrl overview
@@ -252,10 +187,9 @@
 
     /**
         Returns the currently selected page, or -1 if none was selected.
-        Note that this method may return either the previously or newly selected page
-        when called from the @c EVT_NOTEBOOK_PAGE_CHANGED handler depending on
-        the platform and so
-        wxNotebookEvent::GetSelection should be
+        Note that this method may return either the previously or newly 
+        selected page when called from the @c EVT_NOTEBOOK_PAGE_CHANGED handler
+        depending on the platform and so wxBookEvent::GetSelection should be
         used instead in this case.
     */
     virtual int GetSelection() const;
@@ -370,9 +304,9 @@
     /**
         An event handler function, called when the page selection is changed.
 
-        @see wxNotebookEvent
+        @see wxBookEvent
     */
-    void OnSelChange(wxNotebookEvent& event);
+    void OnSelChange(wxBookEvent& event);
 
     /**
         Deletes the specified page, without deleting the associated window.
Index: interface/wx/bookctrl.h
===================================================================
--- interface/wx/bookctrl.h	(revision 54433)
+++ interface/wx/bookctrl.h	(working copy)
@@ -22,3 +22,65 @@
 
 };
 
+
+/**
+    @class wxBookEvent
+
+    This class represents the events generated by book controls (wxNotebook,
+    wxListbook, wxChoicebook, wxTreebook). 
+    The PAGE_CHANGING events are sent before the current page is changed. 
+    It allows the program to examine the current page (which can be retrieved 
+    with wxBookEvent::GetOldSelection) and to veto the page change by calling 
+    wxNotifyEvent::Veto if, for example, the current values in the controls 
+    of the old page are invalid.
+
+    The PAGE_CHANGED events are sent after the page has been changed and
+    the program cannot veto it any more, it just informs it about the page 
+    change.
+
+    To summarize, if the program is interested in validating the page values
+    before allowing the user to change it, it should process the PAGE_CHANGING
+    event, otherwise PAGE_CHANGED is probably enough. In any case, it is 
+    probably unnecessary to process both events at once.
+
+    @library{wxcore}
+    @category{events}
+
+    @see wxNotebook, wxListbook, wxChoicebook, wxTreebook
+*/
+
+class wxBookEvent : public wxNotifyEvent
+{
+public:
+    /**
+        Constructor (used internally by wxWidgets only).
+    */
+    wxBookEvent(wxEventType eventType = wxEVT_NULL, int id = 0,
+                int sel = wxNOT_FOUND, int oldSel = wxNOT_FOUND);
+
+    /**
+        Returns the page that was selected before the change, @c wxNOT_FOUND if
+        none was selected.
+    */
+    int GetOldSelection() const;
+
+    /**
+        Returns the currently selected page, or @c wxNOT_FOUND if none was 
+        selected.
+        @note under Windows, GetSelection() will return the same value as
+        GetOldSelection() when called from @c EVT_NOTEBOOK_PAGE_CHANGING 
+        handler and not the page which is going to be selected. 
+    */
+    int GetSelection() const;
+
+    /**
+        Sets the id of the page selected before the change.
+    */
+    void SetOldSelection(int page);
+
+    /**
+        Sets the selection member variable.
+    */
+    void SetSelection(int page);
+};
+
