? window.patch
Index: window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/window.cpp,v
retrieving revision 1.518
diff -b -u -2 -r1.518 window.cpp
--- window.cpp	2005/01/30 13:04:05	1.518
+++ window.cpp	2005/02/01 20:24:05
@@ -1132,5 +1132,5 @@
     s_lastEvent = *gdk_event;
 #else
-    // 2005.01.26 modified by hzysoft@sina.com.tw:
+    // 2005.01.26 modified by Hong Jen Yee (hzysoft@sina.com.tw):
     // There is no need to store lastEvent. The original code makes GTK+ IM 
     // dysfunction. When we get a key_press event here, it could be originate
@@ -1150,5 +1150,5 @@
     
 #ifdef __WXGTK20__
-    // 2005.01.26 modified by hzysoft@sina.com.tw:
+    // 2005.01.26 modified by Hong Jen Yee (hzysoft@sina.com.tw):
     // We should let GTK+ IM filter key event first. According to GTK+ 2.0 API
     // docs, if IM filter returns true, NO FURTHER PROCESSING SHOULD BE DONE for
@@ -1170,8 +1170,7 @@
 
     wxKeyEvent event( wxEVT_KEY_DOWN );
-    if ( !wxTranslateGTKKeyEventToWx(event, win, gdk_event) )
-    {
-        // unknown key pressed, ignore (the event would be useless anyhow)
-        // 2005.02.22 modified by hzysoft@sina.com.tw.
+    bool ret = FALSE;
+
+    // 2005.02.02 modified by Hong Jen Yee (hzysoft@sina.com.tw).
         // In GTK+ 1.2, strings sent by IMs are also regarded as key_press events whose 
         // keyCodes cannot be recognized by wxWidgets. These MBCS strings, however, are 
@@ -1179,13 +1178,68 @@
         // greater than one.
         // When gtk_event->length == 1, this may be an ASCII character and can be translated 
-        // by WX.  However, when MBCS characters are sent by IM, gdk_event->length will >= 2.
+    // by wx.  However, when MBCS characters are sent by IM, gdk_event->length will >= 2.
         // So when gdk_event->length >= 2, this is not an invalid key but a part of a string 
         // sent by IM which contains user input and shouldn't be ignored.
-        if (gdk_event->length <= 1) // Only ignore those keys whose gdk_event->length <=1.
+    // When event->length > 1, this is a pre-edited string from IM.
+    // So neither should we pass it to accelerator table, nor should we pass it to controls.
+    // The following explanation was excerpted from GDK documentation.
+    // gint length : the length of string.
+    // gchar *string : a null-terminated multi-byte string containing the composed characters 
+    // resulting from the key press. When text is being input, in a GtkEntry for example, it 
+    // is these characters which should be added to the input buffer. When using Input Methods 
+    // to support internationalized text input, the composed characters appear here after the 
+    // pre-editing has been completed.
+
+#ifndef __WXGTK20__     // This is for GTK+ 1.2 only.
+    if ( (gdk_event->length > 1) ) // If this event contains a pre-edited string from IM.
+    {
+        // We should translate this key event into wxEVT_CHAR not wxEVT_KEY_DOWN.
+        #if wxUSE_UNICODE   // GTK+ 1.2 is not UTF-8 based.
+            const wxWCharBuffer string = wxConvLocal.cMB2WC( gdk_event->string );
+            if( !string )   return FALSE;
+        #else
+            const char* string = gdk_event->string;
+        #endif
+
+        // Implement OnCharHook by checking ancesteror top level windows
+        wxWindow *parent = window;
+        while (parent && !parent->IsTopLevel())
+            parent = parent->GetParent();
+
+        for( wxChar* pstr = string; *pstr; pstr++ )
+        {
+        #if wxUSE_UNICODE
+            event.m_uniChar = *pstr;
+            // Backward compatible for ISO-8859-1
+            event.m_keyCode = *pstr < 256 ? event.m_uniChar : 0;
+        #else
+            event.m_keyCode = *pstr;
+        #endif
+            if (parent)
+            {
+                event.SetEventType( wxEVT_CHAR_HOOK );
+                ret = parent->GetEventHandler()->ProcessEvent( event );
+            }
+            if (!ret)
+            {
+                event.SetEventType(wxEVT_CHAR);
+                window->GetEventHandler()->ProcessEvent( event );
+            }
+        }
+        return TRUE;
+    }
+    // Only translate the key event when it's not sent with a pre-edited string.
+    else 
+#endif  // #ifndef  __WXGTK20__
+    if( !wxTranslateGTKKeyEventToWx(event, win, gdk_event) )
+    {
+        // unknown key pressed, ignore (the event would be useless anyhow)
             return FALSE;
     }
-
+    else // This event doesn't contain a pre-edited string and is not an invalid key either.
+    {
     // Emit KEY_DOWN event
-    bool ret = win->GetEventHandler()->ProcessEvent( event );
+        ret = win->GetEventHandler()->ProcessEvent( event );
+    }
 
 #if wxUSE_ACCEL

 	  	 
