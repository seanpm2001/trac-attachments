--- wxWidgets.orig/include/wx/odcombo.h	Mon Jul 17 17:28:00 2006
+++ wxWidgets/include/wx/odcombo.h	Thu Jul 20 19:04:31 2006
@@ -157,5 +157,6 @@
     void OnMouseWheel(wxMouseEvent& event);
     void OnKey(wxKeyEvent& event);
-    void OnLeftClick(wxMouseEvent& event);
+    void OnLeftDown(wxMouseEvent& event);
+    void OnLeftUp(wxMouseEvent& event);
 
     // Return the widest item width (recalculating it if necessary)
@@ -199,4 +200,7 @@
     // has the mouse been released on this control?
     bool                    m_clicked;
+
+    // True when mouse is hovering on partially visible item.
+    bool                    m_mouseOnPartial;
 
     // Recalculate widths if they are dirty
--- wxWidgets.orig/src/generic/odcombo.cpp	Thu Jul 20 18:31:51 2006
+++ wxWidgets/src/generic/odcombo.cpp	Thu Jul 20 19:43:59 2006
@@ -54,5 +54,7 @@
     EVT_MOTION(wxVListBoxComboPopup::OnMouseMove)
     EVT_KEY_DOWN(wxVListBoxComboPopup::OnKey)
-    EVT_LEFT_UP(wxVListBoxComboPopup::OnLeftClick)
+    EVT_LEFT_DOWN(wxVListBoxComboPopup::OnLeftDown)
+    EVT_LEFT_UP(wxVListBoxComboPopup::OnLeftUp)
+    EVT_LEFT_DCLICK(wxVListBoxComboPopup::OnLeftDown)
 END_EVENT_TABLE()
 
@@ -388,5 +390,11 @@
     // partially visible, we might just as well replicate the HitTest
     // loop here.
-    const size_t lineMax = GetVisibleEnd();
+    size_t lineMax = GetVisibleEnd();
+
+    // Fix lineMax to avoid being able to click the empty space
+    // after the last item.
+    if ( lineMax >= m_strings.GetCount() )
+        lineMax = m_strings.GetCount();
+
     for ( size_t line = GetVisibleBegin(); line < lineMax; line++ )
     {
@@ -398,13 +406,30 @@
             {
                 wxVListBox::SetSelection((int)line);
+
+                m_mouseOnPartial = false;
                 return;
             }
+
+            break;
         }
     }
+
+    m_mouseOnPartial = true;
 }
 
-void wxVListBoxComboPopup::OnLeftClick(wxMouseEvent& WXUNUSED(event))
+void wxVListBoxComboPopup::OnLeftDown(wxMouseEvent& event)
 {
-    DismissWithEvent();
+    // Do not allow click to fall through if item is partially visible.
+    if ( !m_mouseOnPartial )
+        event.Skip();
+}
+
+void wxVListBoxComboPopup::OnLeftUp(wxMouseEvent& WXUNUSED(event))
+{
+    // If item is only partially visible, scroll down by one.
+    if ( !m_mouseOnPartial )
+        DismissWithEvent();
+    else
+        wxVListBox::ScrollLines(1);
 }
 

 	  	 
