diff -uNr wxPython-src-2.9.3.1_Original/include/wx/sizer.h wxPython-src-2.9.3.1_FlexGridSizerFix2/include/wx/sizer.h
--- wxPython-src-2.9.3.1_Original/include/wx/sizer.h	2013-08-15 14:12:53.238799619 +0100
+++ wxPython-src-2.9.3.1_FlexGridSizerFix2/include/wx/sizer.h	2013-08-15 13:25:31.894769145 +0100
@@ -786,7 +786,7 @@
 
     virtual wxSizerItem *DoInsert(size_t index, wxSizerItem *item);
 
-    void SetItemBounds( wxSizerItem *item, int x, int y, int w, int h );
+    void SetItemBounds( wxSizerItem *item, int x, int y, int w, int h, int growable_directions );
 
     // returns the number of columns/rows needed for the current total number
     // of children (and the fixed number of rows/columns)
diff -uNr wxPython-src-2.9.3.1_Original/src/common/gbsizer.cpp wxPython-src-2.9.3.1_FlexGridSizerFix2/src/common/gbsizer.cpp
--- wxPython-src-2.9.3.1_Original/src/common/gbsizer.cpp	2013-08-15 14:11:42.578798861 +0100
+++ wxPython-src-2.9.3.1_FlexGridSizerFix2/src/common/gbsizer.cpp	2013-08-15 13:24:22.070768394 +0100
@@ -565,7 +565,7 @@
                 width += m_colWidths[idx];
             width += (endcol - col) * m_hgap; // add a hgap for every col spanned
 
-            SetItemBounds(item, colpos[col], rowpos[row], width, height);
+            SetItemBounds(item, colpos[col], rowpos[row], width, height, wxHORIZONTAL | wxVERTICAL);
         }
 
         node = node->GetNext();
diff -uNr wxPython-src-2.9.3.1_Original/src/common/sizer.cpp wxPython-src-2.9.3.1_FlexGridSizerFix2/src/common/sizer.cpp
--- wxPython-src-2.9.3.1_Original/src/common/sizer.cpp	2013-08-15 14:11:41.574798851 +0100
+++ wxPython-src-2.9.3.1_FlexGridSizerFix2/src/common/sizer.cpp	2013-08-15 13:24:21.686768392 +0100
@@ -1430,7 +1430,7 @@
 
                 wxASSERT_MSG( node, wxT("Failed to find SizerItemList node") );
 
-                SetItemBounds( node->GetData(), x, y, w, h);
+                SetItemBounds( node->GetData(), x, y, w, h, wxHORIZONTAL | wxVERTICAL);
             }
             y = y + h + m_vgap;
         }
@@ -1493,13 +1493,22 @@
                    nrows * h + (nrows-1) * m_vgap );
 }
 
-void wxGridSizer::SetItemBounds( wxSizerItem *item, int x, int y, int w, int h )
+void wxGridSizer::SetItemBounds( wxSizerItem *item, int x, int y, int w, int h, int strech_direction )
 {
     wxPoint pt( x,y );
     wxSize sz( item->GetMinSizeWithBorder() );
     int flag = item->GetFlag();
 
-    if (flag & wxEXPAND || flag & wxSHAPED)
+    if (flag & wxEXPAND && strech_direction & wxHORIZONTAL)
+    {
+       sz.x = w;
+    }
+    if (flag & wxEXPAND && strech_direction & wxVERTICAL)
+    {
+       sz.y = h;
+    }
+
+    if (flag & wxSHAPED)
     {
        sz = wxSize(w, h);
     }
@@ -1611,7 +1620,12 @@
             if ( wcol < w )
                 w = wcol;
 
-            SetItemBounds(*i, pt.x + x, pt.y + y, w, h);
+            int growable_directions = 0;
+            if (IsRowGrowable(r))
+                growable_directions |= wxVERTICAL;
+            if (IsColGrowable(c))
+                growable_directions |= wxHORIZONTAL;
+            SetItemBounds(*i, pt.x + x, pt.y + y, w, h, growable_directions);
 
             x += wcol + m_hgap;
         }
