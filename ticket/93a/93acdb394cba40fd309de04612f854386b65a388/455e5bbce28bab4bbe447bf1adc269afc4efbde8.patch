diff -bu1 -r wxWindows/samples/richedit/kbList.h wxWin/samples/richedit/kbList.h
--- wxWindows/samples/richedit/kbList.h	1999-07-21 19:13:27.000000000 +0200
+++ wxWin/samples/richedit/kbList.h	2003-11-19 19:04:26.000000000 +0100
@@ -138,3 +138,3 @@
    */
-   void ownsObjects(bool ownsflag = true)
+   void ownsObjects(bool ownsflag)
       { ownsEntries = ownsflag; }
@@ -238,3 +238,6 @@
    inline void deleteContent(iterator i)
-      { if(ownsEntries) delete *i; }
+      {
+          iterator *i_ptr = &i;
+          if(ownsEntries) delete i_ptr;
+      }
 
diff -bu1 -r wxWindows/samples/richedit/wxLayout.cpp wxWin/samples/richedit/wxLayout.cpp
--- wxWindows/samples/richedit/wxLayout.cpp	2003-09-11 12:33:17.000000000 +0200
+++ wxWin/samples/richedit/wxLayout.cpp	2003-11-19 21:13:54.000000000 +0100
@@ -28,2 +28,5 @@
 
+#include <wx/wfstream.h>
+#include <wx/txtstrm.h>
+
 #include   "Micon.xpm"
@@ -72,4 +75,4 @@
 MyFrame::MyFrame(void) :
-   wxFrame( (wxFrame *) NULL, -1, _T("wxLayout"),
-             wxPoint(880,100), wxSize(256,256) )
+   wxFrame( (wxFrame *) NULL, wxID_ANY, _T("wxLayout"),
+             wxDefaultPosition, wxDefaultSize )
 {
@@ -159,4 +162,3 @@
 
-void
-MyFrame::AddSampleText(wxLayoutList *llist)
+void MyFrame::AddSampleText(wxLayoutList *llist)
 {
@@ -165,2 +167,4 @@
    llist->Insert(_T("blue"));
+   llist->LineBreak();
+
    llist->SetFont(-1,-1,-1,-1,-1,_T("black"));
@@ -176,8 +180,12 @@
    llist->LineBreak();
+
    llist->Insert(_T("Hello "));
-#if wxICON_IS_BITMAP
-   llist->Insert(new wxLayoutObjectIcon(new wxICON(Micon)));
-#else
-   llist->Insert(new wxLayoutObjectIcon(new wxBitmap (wxICON(Micon))));
-#endif
+   wxBitmap *icon = 
+                    #if wxICON_IS_BITMAP
+                      new wxIcon(Micon_xpm)
+                    #else
+                      new wxBitmap (wxIcon(Micon_xpm))
+                    #endif
+                  ;
+   llist->Insert(new wxLayoutObjectIcon(icon));
    llist->SetFontWeight(wxBOLD);
@@ -187,2 +195,3 @@
    llist->LineBreak();
+
    llist->Insert(_T("over the lazy dog."));
@@ -193,3 +202,5 @@
    llist->Insert(_T("This is "));
-   llist->SetFont(-1,-1,-1,wxBOLD);  llist->Insert(_T("BOLD "));  llist->SetFont(-1,-1,-1,wxNORMAL);
+   llist->SetFont(-1,-1,-1,wxBOLD);
+   llist->Insert(_T("BOLD "));
+   llist->SetFont(-1,-1,-1,wxNORMAL);
    llist->Insert(_T("and "));
@@ -199,2 +210,3 @@
    llist->LineBreak();
+
    llist->Insert(_T("and "));
@@ -205,2 +217,3 @@
    llist->LineBreak();
+
    llist->Insert(_T("and "));
@@ -229,2 +242,3 @@
    llist->LineBreak();
+
    llist->SetFont(wxTELETYPE,16);
@@ -232,16 +246,12 @@
    llist->LineBreak();
-   llist->Insert(_T("And here the source for the test program:"));
-   llist->LineBreak();
-   llist->Insert(_T("And here the source for the test program:"));
 
-   wxFile file( _T("wxLayout.cpp") );
-   if ( file.IsOpened() )
+   wxTextFile file(_T("wxLayout.cpp"));
+   if ( file.Open() )
    {
-      off_t len = file.Length();
-      wxChar *data = (wxChar *)malloc(2*len);
-      if ( file.Read(data, len) == len )
+        for ( wxString s = file.GetFirstLine(); !file.Eof(); s = file.GetNextLine() )
       {
-        wxLayoutImportText(llist, data);
+            wxString line;
+            llist->Insert(line.Format(_T("%6u: %s"),file.GetCurrentLine()+1,s.c_str()));
+            llist->LineBreak();
       }
-      free(data);
    }
@@ -253,4 +263,3 @@
 
-void
-MyFrame::Clear(void)
+void MyFrame::Clear(void)
 {
@@ -299,3 +308,3 @@
    case ID_CLICK:
-        cerr << "Received click event." << endl;
+        wxLogError( _T("Received click event.") );
         break;
@@ -333,15 +342,27 @@
     {
+        wxFileDialog
+           HTML_dialog( this,
+                       _T("Save As HTML..."),
+                       _T(""), 
+                       _T(""), 
+                       _T("HTML file (*.html)|*.html|Text file (*.txt)|*.txt|Any file (*)|*"), 
+                       wxSAVE|wxOVERWRITE_PROMPT
+                     );
+        if (HTML_dialog.ShowModal() == wxID_OK)
+        {
+            wxFFileOutputStream output( HTML_dialog.GetPath() );
+            wxTextOutputStream textout( output );
+
         wxLayoutExportObject *export0;
+            wxString object;
         wxLayoutExportStatus status(m_lwin->GetLayoutList());
-
-        cout << "<HTML>" << endl;
-        while((export0 = wxLayoutExport( &status,
-                                         WXLO_EXPORT_AS_HTML)) != NULL)
+            while((export0 = wxLayoutExport( &status, WXLO_EXPORT_AS_HTML)) != NULL)
         {
             if(export0->type == WXLO_EXPORT_HTML)
-                cout << *(export0->content.text);
+                    object = *(export0->content.text);
             else
-                ; // ignore itcout << "<!--UNKNOWN OBJECT>";
-
+                    ; // ignore "<!--UNKNOWN OBJECT>";
             delete export0;
+                textout << object;
+            }
         }
@@ -352,5 +373,18 @@
     {
+        wxFileDialog
+           TEXT_dialog( this,
+                       _T("Save As TXT..."),
+                       _T(""), 
+                       _T(""), 
+                       _T("Text file (*.txt)|*.txt|Any file (*)|*"), 
+                       wxSAVE|wxOVERWRITE_PROMPT
+                     );
+        if (TEXT_dialog.ShowModal() == wxID_OK)
+        {
+            wxFFileOutputStream output( TEXT_dialog.GetPath() );
+            wxTextOutputStream textout( output );
+
         wxLayoutExportObject *export0;
+            wxString object;
         wxLayoutExportStatus status(m_lwin->GetLayoutList());
-
         while((export0 = wxLayoutExport( &status, WXLO_EXPORT_AS_TEXT)) != NULL)
@@ -358,9 +392,9 @@
             if(export0->type == WXLO_EXPORT_TEXT)
-                cout << *(export0->content.text);
+                    object = *(export0->content.text);
             else
-                cout << "<!--UNKNOWN OBJECT>";
-
+                    object = _T("<!--UNKNOWN OBJECT>");
             delete export0;
+                textout << object;
+            }
         }
-
         break;
@@ -368,3 +402,2 @@
 
-
     case ID_LONG_TEST:
@@ -402,2 +435,3 @@
         m_lwin->GetLayoutList()->Insert(_T("http://www.wxwindows.org/"));
+        m_lwin->Refresh();
     }
diff -bu1 -r wxWindows/samples/richedit/wxllist.cpp wxWin/samples/richedit/wxllist.cpp
--- wxWindows/samples/richedit/wxllist.cpp	2003-09-11 12:33:17.000000000 +0200
+++ wxWin/samples/richedit/wxllist.cpp	2003-11-19 19:37:22.000000000 +0100
@@ -853,5 +853,3 @@
 {
-   int
-      cpos = 0,
-      relpos = -1;
+   int cpos = 0;
    wxString const *text;
@@ -865,3 +863,3 @@
             text = & ((wxLayoutObjectText*)(*i))->GetText();
-            relpos = text->Find(needle);
+            int relpos = text->Find(needle);
             if(relpos >= cpos-xpos) // -1 if not found
@@ -2587,3 +2585,3 @@
 
-   WXLO_DEBUG((wxT("Selection is %s : %ld,%ld/%ld,%ld"),
+   WXLO_DEBUG((wxT("Selection is %s : %d,%d/%d,%d"),
                m_Selection.m_valid ? wxT("valid") : wxT("invalid"),
@@ -2773,3 +2771,3 @@
       cpos = m_CursorPos;
-   WXLO_DEBUG((wxT("Starting selection at %ld/%ld"), cpos.x, cpos.y));
+   WXLO_DEBUG((wxT("Starting selection at %d/%d"), cpos.x, cpos.y));
    m_Selection.m_CursorA = cpos;
@@ -2791,3 +2789,3 @@
    wxASSERT(m_Selection.m_valid == false);
-   WXLO_DEBUG((wxT("Continuing selection at %ld/%ld"), cpos.x, cpos.y));
+   WXLO_DEBUG((wxT("Continuing selection at %d/%d"), cpos.x, cpos.y));
 
@@ -2803,3 +2801,3 @@
    ContinueSelection(cpos, spos);
-   WXLO_DEBUG((wxT("Ending selection at %ld/%ld"), cpos.x, cpos.y));
+   WXLO_DEBUG((wxT("Ending selection at %d/%d"), cpos.x, cpos.y));
    // we always want m_CursorA <= m_CursorB!
@@ -3026,2 +3024,4 @@
       * lastLine = NULL;
+   wxUnusedVar(firstLine);
+   wxUnusedVar(lastLine);
 
@@ -3145,3 +3145,3 @@
    WXLO_DEBUG((wxT("Cursor is in line %d, screen pos = (%d, %d)"),
-               m_CursorLine->GetLineNumber(),
+               (int)m_CursorLine->GetLineNumber(),
                m_CursorScreenPos.x, m_CursorScreenPos.y));
@@ -3203,2 +3203,4 @@
    }
+   wxUnusedVar(ppiScreenY);
+
    if(ppiPrinterX == 0) // not yet set, need to guess
@@ -3208,2 +3210,3 @@
    }
+   wxUnusedVar(ppiPrinterY);
 
@@ -3222,2 +3225,3 @@
   GetPageSizePixels(&pageWidth, &pageHeight);
+  wxUnusedVar(pageHeight);
   if(pageWidth != 0) // doesn't work always
diff -bu1 -r wxWindows/samples/richedit/wxlparser.cpp wxWin/samples/richedit/wxlparser.cpp
--- wxWindows/samples/richedit/wxlparser.cpp	2003-09-11 12:33:17.000000000 +0200
+++ wxWin/samples/richedit/wxlparser.cpp	2003-11-19 19:04:24.000000000 +0100
@@ -47,2 +47,3 @@
    const wxChar * begin = cptr;
+   wxUnusedVar(begin);
    wxChar  backup;
@@ -217,2 +218,3 @@
    }
+   wxUnusedVar(type);
 
diff -bu1 -r wxWindows/samples/richedit/wxlwindow.cpp wxWin/samples/richedit/wxlwindow.cpp
--- wxWindows/samples/richedit/wxlwindow.cpp	2003-09-11 12:33:17.000000000 +0200
+++ wxWin/samples/richedit/wxlwindow.cpp	2003-11-19 19:04:31.000000000 +0100
@@ -466,3 +466,3 @@
 {
-   int keyCode = event.KeyCode();
+   int keyCode = event.GetKeyCode();
    bool ctrlDown = event.ControlDown();
@@ -775,3 +775,3 @@
 {
-   if ( event.KeyCode() == WXK_SHIFT && m_Selecting )
+   if ( event.GetKeyCode() == WXK_SHIFT && m_Selecting )
    {

 	  	 
