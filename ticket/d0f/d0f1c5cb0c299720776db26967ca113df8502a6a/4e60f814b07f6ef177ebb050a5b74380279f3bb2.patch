Index: src/msw/filedlg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/filedlg.cpp,v
retrieving revision 1.82
diff -b -u -2 -r1.82 filedlg.cpp
--- src/msw/filedlg.cpp	2005/12/14 14:08:19	1.82
+++ src/msw/filedlg.cpp	2006/04/17 23:50:37
@@ -231,4 +231,24 @@
 }
 
+// Basically, the problem is that we need to use the "new" size of the
+// OPENFILENAME structure 
+// (OPENFILENAME_SIZE_VERSION_400 + void* + DWORD + DWORD)
+// in Windows 2000 and XP so that the new-style file dialog with the
+// "Places Bar" shows up. Unfortunately, there seems to be no reliable way
+// to test for it in the headers, so we need to always make one
+// with the extra bytes.
+//
+// We don't do this on Windows CE, however.
+#ifdef __WXWINCE__
+    typedef OPENFILENAME wxOPENFILENAME;
+#else
+    struct wxOPENFILENAME : public OPENFILENAME
+    {
+        void* pVoid;
+        DWORD dw1;
+        DWORD dw2;
+    };
+#endif
+
 int wxFileDialog::ShowModal()
 {
@@ -260,10 +280,5 @@
         Without moving or centering the dlg, it will just stay
         in the upper left of the frame, it does not center
-        automatically..  One additional note, when the hook is
-        enabled, the PLACES BAR in the dlg (shown on later versions
-        of windows (2000 and XP) will automatically be turned off
-        according to the MSDN docs.  This is normal.  If the
-        programmer needs the PLACES BAR (left side of dlg) they
-        just shouldn't move or center the dlg.
+        automatically.
     */
     if (m_bMovedWindow) // we need these flags.
@@ -294,18 +309,8 @@
     }
 
-    OPENFILENAME of;
+    wxOPENFILENAME of;
     wxZeroMemory(of);
 
-    // the OPENFILENAME struct has been extended in newer version of
-    // comcdlg32.dll, but as we don't use the extended fields anyhow, set
-    // the struct size to the old value - otherwise, the programs compiled
-    // with new headers will not work with the old libraries
-#if !defined(__WXWINCE__) && defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0500)
-    of.lStructSize       = sizeof(OPENFILENAME) -
-                           (sizeof(void *) + 2*sizeof(DWORD));
-#else // old headers
-    of.lStructSize       = sizeof(OPENFILENAME);
-#endif
-
+    of.lStructSize       = sizeof(wxOPENFILENAME); // try new struct size first
     of.hwndOwner         = hWnd;
     of.lpstrTitle        = WXSTRINGCAST m_message;
@@ -422,17 +427,21 @@
 
     // sometimes we may have a mismatch between the headers used to compile the
-    // library and the run-time version of comdlg32.dll, try to account for it
+    // library and the run-time version of comdlg32.dll, or on a 
+    // header version that has the proper sized OPENFILENAME for Windows 2000
+    // or XP, so try to account for these situations
 #ifndef __WXWINCE__
     if ( !success && errCode == CDERR_STRUCTSIZE )
     {
-        // The struct size has changed so try a smaller or bigger size
-        const int oldStructSize = of.lStructSize;
-        of.lStructSize = oldStructSize - (sizeof(void *) + 2*sizeof(DWORD));
+        // The struct size has changed so try a smaller size - this takes
+        // care of the case of 
+        // Big OPENFILENAME in Headers and running on Windows 2000/XP
+        of.lStructSize -= (sizeof(void *) + 2*sizeof(DWORD));
         success = DoShowCommFileDialog(&of, m_dialogStyle, &errCode);
 
-        if ( !success && (errCode == CDERR_STRUCTSIZE) )
+        if ( !success && errCode == CDERR_STRUCTSIZE )
         {
-            // try to adjust in the other direction
-            of.lStructSize = oldStructSize + (sizeof(void *) + 2*sizeof(DWORD));
+            // try an even smaller size - this takes care of the case
+            // Small OPENFILENAME in Headers and running on < Windows 2000/XP
+            of.lStructSize -= (sizeof(void *) + 2*sizeof(DWORD));
             success = DoShowCommFileDialog(&of, m_dialogStyle, &errCode);
         }

 	  	 
