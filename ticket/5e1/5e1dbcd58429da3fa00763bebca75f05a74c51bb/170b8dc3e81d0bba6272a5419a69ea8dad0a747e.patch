Index: src/unix/displayx11.cpp
===================================================================
--- src/unix/displayx11.cpp	(revision 53312)
+++ src/unix/displayx11.cpp	(working copy)
@@ -326,7 +326,7 @@
 
 #include "wx/utils.h"
 
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
 
 void wxClientDisplayRect(int *x, int *y, int *width, int *height)
 {
@@ -341,7 +341,7 @@
         *height = 396;
 }
 
-#else // !wxUSE_LIBHILDON
+#else // !wxUSE_LIBHILDON || !wxUSE_LIBHILDON2
 
 #include "wx/log.h"
 
Index: src/gtk/checklst.cpp
===================================================================
--- src/gtk/checklst.cpp	(revision 53312)
+++ src/gtk/checklst.cpp	(working copy)
@@ -87,7 +87,13 @@
         gtk_tree_view_column_new_with_attributes( "", renderer,
                                                   "active", 0,
                                                   NULL );
+#if wxUSE_LIBHILDON2
+    gtk_tree_view_column_set_fixed_width(column, 40);
+#else
     gtk_tree_view_column_set_fixed_width(column, 20);
+#endif // wxUSE_LIBHILDON2/!wxUSE_LIBHILDON2
+
+
     gtk_tree_view_column_set_sizing(column, GTK_TREE_VIEW_COLUMN_FIXED);
     gtk_tree_view_column_set_clickable(column, TRUE);
 
Index: src/gtk/menu.cpp
===================================================================
--- src/gtk/menu.cpp	(revision 53312)
+++ src/gtk/menu.cpp	(working copy)
@@ -64,12 +64,12 @@
 {
     m_invokingWindow = NULL;
 
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
     // Hildon window uses a single menu instead of a menu bar, so wxMenuBar is
     // the same as menu in this case
     m_widget =
     m_menubar = gtk_menu_new();
-#else // !wxUSE_LIBHILDON
+#else // !wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
     if (!PreCreation( NULL, wxDefaultPosition, wxDefaultSize ) ||
         !CreateBase( NULL, -1, wxDefaultPosition, wxDefaultSize, style, wxDefaultValidator, wxT("menubar") ))
     {
@@ -93,7 +93,7 @@
     PostCreation();
 
     ApplyWidgetStyle();
-#endif // wxUSE_LIBHILDON/!wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2/!wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
 
     for (size_t i = 0; i < n; ++i )
         Append(menus[i], titles[i]);
@@ -248,7 +248,7 @@
 {
     menu->SetLayoutDirection(GetLayoutDirection());
 
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
     // if the menu has only one item, append it directly to the top level menu
     // instead of inserting a useless submenu
     if ( menu->GetMenuItemCount() == 1 )
@@ -268,7 +268,7 @@
         item->SetMenuItem(menu->m_owner);
     }
     else
-#endif // wxUSE_LIBHILDON/!wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2 /!wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
     {
         const wxString str(wxConvertMnemonicsToGTK(title));
 
Index: src/gtk/frame.cpp
===================================================================
--- src/gtk/frame.cpp	(revision 53312)
+++ src/gtk/frame.cpp	(working copy)
@@ -24,6 +24,10 @@
     #include <hildon-widgets/hildon-window.h>
 #endif // wxUSE_LIBHILDON
 
+#if wxUSE_LIBHILDON2
+    #include <hildon/hildon.h>
+#endif // wxUSE_LIBHILDON2
+
 // ----------------------------------------------------------------------------
 // event tables
 // ----------------------------------------------------------------------------
@@ -271,15 +275,15 @@
 
     if ( m_frameMenuBar )
     {
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
         hildon_window_set_menu(HILDON_WINDOW(m_widget), NULL);
-#else // !wxUSE_LIBHILDON
+#else // !wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
         m_frameMenuBar->UnsetInvokingWindow( this );
 
         gtk_widget_ref( m_frameMenuBar->m_widget );
 
         gtk_container_remove( GTK_CONTAINER(m_mainWidget), m_frameMenuBar->m_widget );
-#endif // wxUSE_LIBHILDON/!wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2 /!wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
     }
 
     wxFrameBase::DetachMenuBar();
@@ -294,10 +298,10 @@
 
     if (m_frameMenuBar)
     {
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
         hildon_window_set_menu(HILDON_WINDOW(m_widget),
                                GTK_MENU(m_frameMenuBar->m_menubar));
-#else // !wxUSE_LIBHILDON
+#else // !wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
         m_frameMenuBar->SetInvokingWindow( this );
 
         m_frameMenuBar->SetParent(this);
@@ -321,7 +325,7 @@
         gtk_widget_set_size_request(menuBar->m_widget, -1, -1);
 
         gtk_widget_show( m_frameMenuBar->m_widget );
-#endif // wxUSE_LIBHILDON/!wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2/!wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
     }
     // make sure next size_allocate causes a wxSizeEvent
     m_oldClientWidth = 0;
Index: src/gtk/toplevel.cpp
===================================================================
--- src/gtk/toplevel.cpp	(revision 53312)
+++ src/gtk/toplevel.cpp	(working copy)
@@ -50,6 +50,10 @@
     #include <hildon-widgets/hildon-window.h>
 #endif // wxUSE_LIBHILDON
 
+#if wxUSE_LIBHILDON2
+    #include <hildon/hildon.h>
+#endif // wxUSE_LIBHILDON2
+
 // ----------------------------------------------------------------------------
 // data
 // ----------------------------------------------------------------------------
@@ -463,14 +467,14 @@
     //     e.g. in wxTaskBarIconAreaGTK
     if (m_widget == NULL)
     {
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
         // we must create HildonWindow and not a normal GtkWindow as the latter
         // doesn't look correctly in Maemo environment and it must also be
         // registered with the main program object
         m_widget = hildon_window_new();
         hildon_program_add_window(wxTheApp->GetHildonProgram(),
                                   HILDON_WINDOW(m_widget));
-#else // !wxUSE_LIBHILDON
+#else // !wxUSE_LIBHILDON || !wxUSE_LIBHILDON2
         m_widget = gtk_window_new(GTK_WINDOW_TOPLEVEL);
         if (GetExtraStyle() & wxTOPLEVEL_EX_DIALOG)
         {
@@ -497,7 +501,7 @@
                 style |= wxFRAME_NO_TASKBAR;
             }
         }
-#endif // wxUSE_LIBHILDON/!wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2/!wxUSE_LIBHILDON || !wxUSE_LIBHILDON2
     }
 
     wxWindow *topParent = wxGetTopLevelParent(m_parent);
@@ -631,14 +635,14 @@
 
 wxTopLevelWindowGTK::~wxTopLevelWindowGTK()
 {
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
     // it can also be a (standard) dialog
     if ( HILDON_IS_WINDOW(m_widget) )
     {
         hildon_program_remove_window(wxTheApp->GetHildonProgram(),
                                      HILDON_WINDOW(m_widget));
     }
-#endif // wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2
 
     if (m_grabbed)
     {
@@ -856,8 +860,25 @@
     size -= m_decorSize;
     if (size.x < 0) size.x = 0;
     if (size.y < 0) size.y = 0;
+#if wxUSE_LIBHILDON2
+    if (width) {
+       if (size.x == 720)
+               *width = 696;
+       else
+               *width = size.x;
+    }
+    if (height) {
+       if (size.y == 420)
+               *height = 396;
+       else if (size.y == 270)
+               *height = 246;
+            else
+               *height = size.y;
+    }
+#else // wxUSE_LIBHILDON2
     if (width)  *width  = size.x;
     if (height) *height = size.y;
+#endif // wxUSE_LIBHILDON2 /!wxUSE_LIBHILDON2
 }
 
 void wxTopLevelWindowGTK::DoSetSize( int x, int y, int width, int height, int sizeFlags )
Index: src/gtk/msgdlg.cpp
===================================================================
--- src/gtk/msgdlg.cpp	(revision 53312)
+++ src/gtk/msgdlg.cpp	(working copy)
@@ -31,6 +31,10 @@
     #include <hildon-widgets/hildon-note.h>
 #endif // wxUSE_LIBHILDON
 
+#if wxUSE_LIBHILDON2
+    #include <hildon/hildon.h>
+#endif // wxUSE_LIBHILDON2
+
 IMPLEMENT_CLASS(wxMessageDialog, wxDialog)
 
 wxMessageDialog::wxMessageDialog(wxWindow *parent,
@@ -49,7 +53,7 @@
 {
     GtkWindow * const parent = m_parent ? GTK_WINDOW(m_parent->m_widget) : NULL;
 
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
     const char *stockIcon;
     if ( m_dialogStyle & wxICON_ERROR )
         stockIcon = "qgn_note_gene_syserror";
@@ -67,12 +71,16 @@
     m_widget = (GtkWidget *)g_object_new
                (
                 HILDON_TYPE_NOTE,
+#if wxUSE_LIBHILDON
                 "note_type", HILDON_NOTE_CONFIRMATION_BUTTON_TYPE,
+#else // wxUSE_LIBHILDON
+                "note_type", HILDON_NOTE_TYPE_CONFIRMATION_BUTTON,
+#endif // wxUSE_LIBHILDON /wxUSE_LIBHILDON2
                 "description", (const char *)GetFullMessage().utf8_str(),
                 "icon", stockIcon,
                 NULL
                );
-#else // !wxUSE_LIBHILDON
+#else // !wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
     GtkMessageType type = GTK_MESSAGE_ERROR;
     GtkButtonsType buttons = GTK_BUTTONS_OK;
 
@@ -138,7 +146,7 @@
         );
     }
 #endif // GTK+ 2.6+
-#endif // wxUSE_LIBHILDON/!wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2/!wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
 
     if (m_caption != wxMessageBoxCaptionStr)
         gtk_window_set_title(GTK_WINDOW(m_widget), wxGTK_CONV(m_caption));
@@ -155,27 +163,27 @@
             gtk_dialog_add_button(dlg, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL);
             gtk_dialog_add_button(dlg, GTK_STOCK_YES, GTK_RESPONSE_YES);
         }
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON
         else // just Yes/No
         {
             gtk_dialog_add_button(dlg, GTK_STOCK_NO, GTK_RESPONSE_NO);
             gtk_dialog_add_button(dlg, GTK_STOCK_YES, GTK_RESPONSE_YES);
         }
-#endif // wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2
 
         gtk_dialog_set_default_response(dlg,
                                         m_dialogStyle & wxNO_DEFAULT
                                             ? GTK_RESPONSE_NO
                                             : GTK_RESPONSE_YES);
     }
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
     else // Ok or Ok/Cancel dialog
     {
         gtk_dialog_add_button(dlg, GTK_STOCK_OK, GTK_RESPONSE_OK);
         if ( m_dialogStyle & wxCANCEL )
             gtk_dialog_add_button(dlg, GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL);
     }
-#endif // wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2
 
     // VZ: isn't this done by GTK+ itself?
     if (parent)
Index: src/gtk/hildon/notifmsg.cpp
===================================================================
--- src/gtk/hildon/notifmsg.cpp	(revision 53312)
+++ src/gtk/hildon/notifmsg.cpp	(working copy)
@@ -23,7 +23,7 @@
     #pragma hdrstop
 #endif
 
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
 
 #ifndef WX_PRECOMP
 #endif //WX_PRECOMP
@@ -31,8 +31,14 @@
 #include "wx/notifmsg.h"
 #include "wx/toplevel.h"
 
-#include <hildon-widgets/hildon-banner.h>
+#if wxUSE_LIBHILDON
+	#include <hildon-widgets/hildon-banner.h>
+#endif // wxUSE_LIBHILDON
 
+#if wxUSE_LIBHILDON2
+    #include <hildon/hildon.h>
+#endif // wxUSE_LIBHILDON2
+
 // ============================================================================
 // wxNotificationMessage implementation
 // ============================================================================
@@ -123,4 +129,4 @@
     Close();
 }
 
-#endif // wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2
Index: src/gtk/colordlg.cpp
===================================================================
--- src/gtk/colordlg.cpp	(revision 53312)
+++ src/gtk/colordlg.cpp	(working copy)
@@ -30,6 +30,12 @@
     #include <hildon-widgets/hildon-color-selector.h>
 #endif // wxUSE_LIBHILDON
 
+#if wxUSE_LIBHILDON2
+extern "C" {
+    #include <hildon/hildon.h>
+}
+#endif // wxUSE_LIBHILDON2
+
 IMPLEMENT_DYNAMIC_CLASS(wxColourDialog, wxDialog)
 
 wxColourDialog::wxColourDialog(wxWindow *parent, wxColourData *data)
@@ -48,19 +54,23 @@
 
 #if wxUSE_LIBHILDON
     m_widget = hildon_color_selector_new(parentGTK);
-#else // !wxUSE_LIBHILDON
+#elif wxUSE_LIBHILDON2 // !wxUSE_LIBHILDON 
+    m_widget = hildon_color_chooser_dialog_new();
+#else // !wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
     wxString title(_("Choose colour"));
     m_widget = gtk_color_selection_dialog_new(wxGTK_CONV(title));
-#endif // wxUSE_LIBHILDON/!wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON /wxUSE_LIBHILDON2 /!wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
 
     if ( parentGTK )
     {
         gtk_window_set_transient_for(GTK_WINDOW(m_widget), parentGTK);
     }
 
+#if !wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
     GtkColorSelection *sel =
         GTK_COLOR_SELECTION(GTK_COLOR_SELECTION_DIALOG(m_widget)->colorsel);
     gtk_color_selection_set_has_palette(sel, true);
+#endif // !wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
 
     return true;
 }
@@ -98,7 +108,20 @@
 #if wxUSE_LIBHILDON
     HildonColorSelector * const sel = HILDON_COLOR_SELECTOR(m_widget);
     hildon_color_selector_set_color(sel, wx_const_cast(GdkColor *, col));
-#else // !wxUSE_LIBHILDON
+#elif wxUSE_LIBHILDON2
+    GdkColor clr;
+    if (col)
+        clr = *col;
+    else {
+        clr.pixel = 0;
+        clr.red = 32768;
+        clr.green = 32768;
+        clr.blue = 32768;
+    }
+
+    hildon_color_chooser_dialog_set_color((HildonColorChooserDialog *)m_widget, &clr);
+#else // !wxUSE_LIBHILDON2/!wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
+
     GtkColorSelection *sel =
         GTK_COLOR_SELECTION(GTK_COLOR_SELECTION_DIALOG(m_widget)->colorsel);
 
@@ -123,7 +146,7 @@
 
     GtkSettings *settings = gtk_widget_get_settings(GTK_WIDGET(sel));
     g_object_set(settings, "gtk-color-palette", pal.c_str(), NULL);
-#endif // wxUSE_LIBHILDON/!wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON / wxUSE_LIBHILDON2 /!wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
 }
 
 void wxColourDialog::DialogToColourData()
@@ -133,7 +156,25 @@
     const GdkColor * const clr = hildon_color_selector_get_color(sel);
     if ( clr )
         m_data.SetColour(*clr);
-#else // !wxUSE_LIBHILDON
+#elif wxUSE_LIBHILDON2 // !wxUSE_LIBHILDON
+    const GdkColor * const
+    col = m_data.GetColour().Ok() ? m_data.GetColour().GetColor() : NULL;
+
+    GdkColor clr;
+    if (col)
+        clr = *col;
+    else {
+        clr.pixel = 0;
+        clr.red = 32768;
+        clr.green = 32768;
+        clr.blue = 32768;
+    }
+    GdkColor new_color = clr;
+    hildon_color_chooser_dialog_get_color((HildonColorChooserDialog *)m_widget, &new_color);
+
+    m_data.SetColour(new_color);
+#else // !wxUSE_LIBHILDON2
+
     GtkColorSelection *sel =
         GTK_COLOR_SELECTION(GTK_COLOR_SELECTION_DIALOG(m_widget)->colorsel);
 
@@ -159,7 +200,7 @@
     }
 
     g_free(pal);
-#endif // wxUSE_LIBHILDON/!wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON / wxUSE_LIBHILDON2 /!wxUSE_LIBHILDON && !wxUSE_LIBHILDON2
 }
 
 #endif // wxUSE_COLOURDLG
Index: src/gtk/app.cpp
===================================================================
--- src/gtk/app.cpp	(revision 53312)
+++ src/gtk/app.cpp	(working copy)
@@ -33,6 +33,10 @@
     #include <hildon-widgets/hildon-program.h>
 #endif // wxUSE_LIBHILDON
 
+#if wxUSE_LIBHILDON2
+    #include <hildon/hildon.h>
+#endif // wxUSE_LIBHILDON2
+
 #include <gdk/gdkx.h>
 
 //-----------------------------------------------------------------------------
@@ -323,14 +327,13 @@
         }
     }
 
-#if wxUSE_LIBHILDON
-    m_hildonProgram = hildon_program_get_instance();
-    if ( !m_hildonProgram )
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
+    if ( !GetHildonProgram() )
     {
         wxLogError(_("Unable to initialize Hildon program"));
         return false;
     }
-#endif // wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2
 
     return true;
 }
@@ -590,3 +593,12 @@
     gdk_threads_leave();
 }
 #endif // wxUSE_THREADS
+
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
+// Maemo-specific method: get the main program object
+HildonProgram *wxApp::GetHildonProgram()
+{ 
+    return hildon_program_get_instance(); 
+}
+    
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2
Index: src/generic/notifmsgg.cpp
===================================================================
--- src/generic/notifmsgg.cpp	(revision 53312)
+++ src/generic/notifmsgg.cpp	(working copy)
@@ -27,8 +27,12 @@
     #define wxUSE_LIBHILDON 0
 #endif
 
-#if wxUSE_NOTIFICATION_MESSAGE && !wxUSE_LIBHILDON
+#ifndef wxUSE_LIBHILDON2
+    #define wxUSE_LIBHILDON2 0
+#endif
 
+#if wxUSE_NOTIFICATION_MESSAGE && (!wxUSE_LIBHILDON || !wxUSE_LIBHILDON2)
+
 #ifndef WX_PRECOMP
     #include "wx/dialog.h"
     #include "wx/timer.h"
@@ -238,4 +242,4 @@
     return true;
 }
 
-#endif // wxUSE_NOTIFICATION_MESSAGE && !wxUSE_LIBHILDON
+#endif // wxUSE_NOTIFICATION_MESSAGE && (!wxUSE_LIBHILDON || !wxUSE_LIBHILDON2)
Index: setup.h.in
===================================================================
--- setup.h.in	(revision 53312)
+++ setup.h.in	(working copy)
@@ -727,6 +727,10 @@
  */
 #define wxUSE_LIBHILDON 0
 /*
+ * Use the Hildon 2.0 framework
+ */
+#define wxUSE_LIBHILDON2 0
+/*
  * Have glibc2
  */
 #define wxHAVE_GLIBC2 0
Index: include/wx/gtk/app.h
===================================================================
--- include/wx/gtk/app.h	(revision 53312)
+++ include/wx/gtk/app.h	(working copy)
@@ -18,9 +18,9 @@
 class WXDLLIMPEXP_FWD_BASE wxMutex;
 #endif
 
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
 typedef struct _HildonProgram HildonProgram;
-#endif // wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2
 
 //-----------------------------------------------------------------------------
 // wxApp
@@ -63,10 +63,10 @@
     // must return XVisualInfo pointer (it is not freed by caller)
     virtual void *GetXVisualInfo() { return NULL; }
 
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
     // Maemo-specific method: get the main program object
-    HildonProgram *GetHildonProgram() const { return m_hildonProgram; }
-#endif // wxUSE_LIBHILDON
+    HildonProgram *GetHildonProgram();
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2
 
     // implementation only from now on
     // -------------------------------
@@ -89,9 +89,9 @@
 #endif
     guint m_idleSourceId;
 
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
     HildonProgram *m_hildonProgram;
-#endif // wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2
 
     DECLARE_DYNAMIC_CLASS(wxApp)
 };
Index: include/wx/gtk/menu.h
===================================================================
--- include/wx/gtk/menu.h	(revision 53312)
+++ include/wx/gtk/menu.h	(working copy)
@@ -49,12 +49,12 @@
     // implementation only from now on
     void SetInvokingWindow( wxWindow *win );
     void UnsetInvokingWindow( wxWindow *win );
+    GtkWidget       *m_menubar; // Public for hildon support
 
 private:
     // common part of Append and Insert
     bool GtkAppend(wxMenu *menu, const wxString& title, int pos=-1);
 
-    GtkWidget       *m_menubar;
     wxWindow        *m_invokingWindow;
 
     void Init(size_t n, wxMenu *menus[], const wxString titles[], long style);
Index: include/wx/gtk/frame.h
===================================================================
--- include/wx/gtk/frame.h	(revision 53312)
+++ include/wx/gtk/frame.h	(working copy)
@@ -53,10 +53,10 @@
     virtual bool ShowFullScreen(bool show, long style = wxFULLSCREEN_ALL);
     wxPoint GetClientAreaOrigin() const { return wxPoint(0, 0); }
 
-#if wxUSE_LIBHILDON
+#if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
     // in Hildon environment all frames are always shown maximized
     virtual bool IsMaximized() const { return true; }
-#endif // wxUSE_LIBHILDON
+#endif // wxUSE_LIBHILDON || wxUSE_LIBHILDON2
 
     // implementation from now on
     // --------------------------
Index: include/wx/notifmsg.h
===================================================================
--- include/wx/notifmsg.h	(revision 53312)
+++ include/wx/notifmsg.h	(working copy)
@@ -127,7 +127,7 @@
     DECLARE_NO_COPY_CLASS(wxNotificationMessageBase)
 };
 
-#if defined(__WXGTK__) && wxUSE_LIBHILDON
+#if defined(__WXGTK__) && (wxUSE_LIBHILDON || wxUSE_LIBHILDON2)
     #include "wx/gtk/hildon/notifmsg.h"
 /*
     TODO: provide support for
Index: configure.in
===================================================================
--- configure.in	(revision 53312)
+++ configure.in	(working copy)
@@ -374,6 +374,7 @@
 DEFAULT_wxUSE_DMALLOC=no
 DEFAULT_wxUSE_LIBGNOMEVFS=no
 DEFAULT_wxUSE_LIBHILDON=no
+DEFAULT_wxUSE_LIBHILDON2=no
 DEFAULT_wxUSE_LIBMSPACK=no
 DEFAULT_wxUSE_LIBSDL=no
 DEFAULT_wxUSE_OPENGL=no
@@ -571,7 +572,7 @@
 WX_ARG_WITHOUT(gtkprint,   [  --without-gtkprint      don't use GTK printing support], wxUSE_GTKPRINT)
 WX_ARG_WITHOUT(gnomeprint, [  --without-gnomeprint    don't use GNOME printing libraries], wxUSE_LIBGNOMEPRINT)
 WX_ARG_WITH(gnomevfs,      [  --with-gnomevfs         use GNOME VFS for associating MIME types], wxUSE_LIBGNOMEVFS)
-WX_ARG_WITH(hildon,        [  --with-hildon           use Hildon framework for Nokia 770], wxUSE_LIBHILDON)
+WX_ARG_WITH(hildon,        [  --with-hildon           use Hildon framework for Nokia 770/800/810], wxUSE_LIBHILDON)
 WX_ARG_WITH(opengl,        [  --with-opengl           use OpenGL (or Mesa)], wxUSE_OPENGL)
 
 fi
@@ -5438,12 +5439,30 @@
                 CFLAGS="$CFLAGS $HILDON_CFLAGS"
                 CXXFLAGS="$CXXFLAGS $HILDON_CFLAGS"
                 AC_DEFINE(wxUSE_LIBHILDON)
+                ac_hildon_lgpl=1
             ],
             [
                 AC_MSG_WARN([libhildon_lgpl not found])
                         wxUSE_LIBHILDON="no"
+                        ac_hildon_lgpl=0
             ]
         )
+
+        if test "$ac_hildon_lgpl" = 0 ; then
+            PKG_CHECK_MODULES(HILDON2,
+                              [hildon-1 >= 1.99],
+                [
+                    EXTRALIBS_HILDON="$HILDON2_LIBS"
+                    CFLAGS="$CFLAGS $HILDON2_CFLAGS"
+                    CXXFLAGS="$CXXFLAGS $HILDON2_CFLAGS"
+                    AC_DEFINE(wxUSE_LIBHILDON2)
+                ],
+                [
+                    AC_MSG_WARN([libhildon_1 not found])
+                            wxUSE_LIBHILDON2="no"
+                ]
+            )
+        fi
     fi
 fi
 
@@ -7525,6 +7544,9 @@
             if test "$wxUSE_LIBHILDON" = "yes"; then
                 TOOLKIT_EXTRA="$TOOLKIT_EXTRA hildon"
             fi
+            if test "$wxUSE_LIBHILDON2" = "yes"; then
+                TOOLKIT_EXTRA="$TOOLKIT_EXTRA hildon"
+            fi
 
             if test "$TOOLKIT_EXTRA" != ""; then
                 TOOLKIT_DESC="$TOOLKIT_DESC with support for `echo $TOOLKIT_EXTRA | tr -s ' '`"
Index: setup.h_vms
===================================================================
--- setup.h_vms	(revision 53312)
+++ setup.h_vms	(working copy)
@@ -764,6 +764,10 @@
  */
 #define wxUSE_LIBHILDON 0
 /*
+ * Use the Hildon 2.0 framework
+ */
+#define wxUSE_LIBHILDON2 0
+/*
  * Have glibc2
  */
 #define wxHAVE_GLIBC2 0

 	  	 
