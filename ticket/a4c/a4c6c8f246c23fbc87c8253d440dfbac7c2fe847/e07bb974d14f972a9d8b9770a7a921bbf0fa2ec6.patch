Index: include/wx/html/helpctrl.h
===================================================================
--- include/wx/html/helpctrl.h	(revision 67221)
+++ include/wx/html/helpctrl.h	(working copy)
@@ -48,6 +48,8 @@
     wxHtmlHelpController(int style = wxHF_DEFAULT_STYLE, wxWindow* parentWindow = NULL);
     virtual ~wxHtmlHelpController();
 
+    void SetShouldPreventAppExit (bool enable);
+
     void SetTitleFormat(const wxString& format);
     void SetTempDir(const wxString& path) { m_helpData.SetTempDir(path); }
     bool AddBook(const wxString& book_url, bool show_wait_msg = false);
@@ -129,6 +131,8 @@
     wxHtmlHelpFrame*    m_helpFrame;
     wxHtmlHelpDialog*   m_helpDialog;
 
+    bool                m_shouldPreventAppExit;
+
     wxDECLARE_NO_COPY_CLASS(wxHtmlHelpController);
 };
 
Index: include/wx/html/helpfrm.h
===================================================================
--- include/wx/html/helpfrm.h	(revision 67221)
+++ include/wx/html/helpfrm.h	(working copy)
@@ -115,9 +115,11 @@
     // Override to add custom buttons to the toolbar
     virtual void AddToolbarButtons(wxToolBar* WXUNUSED(toolBar), int WXUNUSED(style)) {}
 
+    void SetShouldPreventAppExit (bool enable);
+
     // we don't want to prevent the app from closing just because a help window
     // remains opened
-    virtual bool ShouldPreventAppExit() const { return false; }
+    virtual bool ShouldPreventAppExit() const { return m_shouldPreventAppExit; }
 
 protected:
     void Init(wxHtmlHelpData* data = NULL);
@@ -143,6 +145,7 @@
     wxString m_TitleFormat;  // title of the help frame
     wxHtmlHelpWindow *m_HtmlHelpWin;
     wxHtmlHelpController* m_helpController;
+    bool m_shouldPreventAppExit;
 
 private:
 
Index: interface/wx/html/helpctrl.h
===================================================================
--- interface/wx/html/helpctrl.h	(revision 67221)
+++ interface/wx/html/helpctrl.h	(working copy)
@@ -172,6 +172,14 @@
                                    const wxString& path = wxEmptyString);
 
     /**
+        Sets whether the help frame should prevent application from exiting
+
+        @enable
+            when true, the application will not quit unless the help frame is closed
+    */
+    void SetShouldPreventAppExit (bool enable);
+
+    /**
         Sets the path for storing temporary files - cached binary versions of index and
         contents files.
 
Index: samples/html/helpview/helpview.cpp
===================================================================
--- samples/html/helpview/helpview.cpp	(revision 67221)
+++ samples/html/helpview/helpview.cpp	(working copy)
@@ -86,8 +86,11 @@
     delete wxLog::SetActiveTarget(new wxLogGui);
 #endif
 
+    help->SetShouldPreventAppExit (true);
+
     help -> DisplayContents();
 
+
     return true;
 }
 
Index: src/html/helpctrl.cpp
===================================================================
--- src/html/helpctrl.cpp	(revision 67221)
+++ src/html/helpctrl.cpp	(working copy)
@@ -52,6 +52,7 @@
 #endif // wxUSE_CONFIG
     m_titleFormat = _("Help: %s");
     m_FrameStyle = style;
+    m_shouldPreventAppExit = false;
 }
 
 wxHtmlHelpController::~wxHtmlHelpController()
@@ -105,6 +106,13 @@
     m_helpFrame = NULL;
 }
 
+void wxHtmlHelpController::SetShouldPreventAppExit (bool enable)
+{
+    m_shouldPreventAppExit = enable;
+    if (m_helpFrame)
+        m_helpFrame->SetShouldPreventAppExit (enable);
+}
+
 void wxHtmlHelpController::SetTitleFormat(const wxString& title)
 {
     m_titleFormat = title;
@@ -163,6 +171,7 @@
 #endif // wxUSE_CONFIG
         );
     frame->SetTitleFormat(m_titleFormat);
+    frame->SetShouldPreventAppExit(m_shouldPreventAppExit);
     m_helpFrame = frame;
     return frame;
 }
Index: src/html/helpfrm.cpp
===================================================================
--- src/html/helpfrm.cpp	(revision 67221)
+++ src/html/helpfrm.cpp	(working copy)
@@ -89,6 +89,7 @@
     m_Data = data;
     m_HtmlHelpWin = NULL;
     m_helpController = NULL;
+    m_shouldPreventAppExit = false;
 }
 
 void wxHtmlHelpFrame::SetController(wxHtmlHelpController* controller)
@@ -246,6 +247,11 @@
 }
 #endif // wxUSE_CONFIG
 
+void wxHtmlHelpFrame::SetShouldPreventAppExit (bool enable)
+{
+    m_shouldPreventAppExit = enable;
+}
+
 #ifdef __WXMAC__
 void wxHtmlHelpFrame::OnClose(wxCommandEvent& WXUNUSED(event))
 {
