diff -bru wxWidgets.orig/include/wx/font.h wxWidgets.new/include/wx/font.h
--- wxWidgets.orig/include/wx/font.h	2014-09-09 00:47:21.000000000 -0700
+++ wxWidgets.new/include/wx/font.h	2014-09-10 15:37:47.000000000 -0700
@@ -340,7 +340,7 @@
     virtual wxFontStyle GetStyle() const = 0;
     virtual wxFontWeight GetWeight() const = 0;
     virtual bool GetUnderlined() const = 0;
-    virtual bool GetStrikethrough() const { return false; }
+    virtual bool GetStrikethrough() const = 0;
     virtual wxString GetFaceName() const = 0;
     virtual wxFontEncoding GetEncoding() const = 0;
     virtual const wxNativeFontInfo *GetNativeFontInfo() const = 0;
@@ -358,7 +358,7 @@
     virtual void SetWeight( wxFontWeight weight ) = 0;
 
     virtual void SetUnderlined( bool underlined ) = 0;
-    virtual void SetStrikethrough( bool WXUNUSED(strikethrough) ) {}
+    virtual void SetStrikethrough( bool strikethrough ) = 0;
     virtual void SetEncoding(wxFontEncoding encoding) = 0;
     virtual bool SetFaceName( const wxString& faceName );
     void SetNativeFontInfo(const wxNativeFontInfo& info)
diff -bru wxWidgets.orig/include/wx/osx/font.h wxWidgets.new/include/wx/osx/font.h
--- wxWidgets.orig/include/wx/osx/font.h	2014-09-09 00:47:26.000000000 -0700
+++ wxWidgets.new/include/wx/osx/font.h	2014-09-10 15:43:53.000000000 -0700
@@ -104,6 +104,7 @@
     virtual wxFontStyle GetStyle() const;
     virtual wxFontWeight GetWeight() const;
     virtual bool GetUnderlined() const;
+    virtual bool GetStrikethrough() const;
     virtual wxString GetFaceName() const;
     virtual wxFontEncoding GetEncoding() const;
     virtual const wxNativeFontInfo *GetNativeFontInfo() const;
@@ -116,6 +117,7 @@
     virtual void SetWeight(wxFontWeight weight);
     virtual bool SetFaceName(const wxString& faceName);
     virtual void SetUnderlined(bool underlined);
+    virtual void SetStrikethrough(bool strikethrough);
     virtual void SetEncoding(wxFontEncoding encoding);
 
     wxDECLARE_COMMON_FONT_METHODS();
diff -bru wxWidgets.orig/interface/wx/font.h wxWidgets.new/interface/wx/font.h
--- wxWidgets.orig/interface/wx/font.h	2014-09-09 00:47:34.000000000 -0700
+++ wxWidgets.new/interface/wx/font.h	2014-09-10 21:42:27.000000000 -0700
@@ -114,7 +114,7 @@
     /// Underlined style (not underlined by default).
     wxFONTFLAG_UNDERLINED       = 1 << 6,
 
-    /// Strike-through style (only supported in wxMSW and wxGTK currently).
+    /// Strike-through style (implemented in MSW, GTK, and OSX)
     wxFONTFLAG_STRIKETHROUGH    = 1 << 7,
 
     /// the mask of all currently used flags
@@ -384,7 +384,7 @@
     /**
         Use a strike-through version of the font.
 
-        Currently this is only implemented in wxMSW and wxGTK.
+        Currently this is only implemented in wxMSW, wxGTK and OSX.
      */
     wxFontInfo& Strikethrough(bool strikethrough = true);
 
@@ -810,7 +810,7 @@
     /**
         Returns stricken-through version of this font.
 
-        Currently stricken-through fonts are only supported in wxMSW and wxGTK.
+        Currently stricken-through fonts are only supported in wxMSW, wxGTK and OSX.
 
         @see MakeStrikethrough()
 
@@ -872,7 +872,7 @@
     /**
         Changes this font to be stricken-through.
 
-        Currently stricken-through fonts are only supported in wxMSW and wxGTK.
+        Currently stricken-through fonts are only supported in wxMSW, wxGTK and OSX.
 
         @see Strikethrough()
 
@@ -1076,7 +1076,7 @@
     /**
         Sets strike-through attribute of the font.
 
-        Currently stricken-through fonts are only supported in wxMSW and wxGTK.
+        Currently stricken-through fonts are only supported in wxMSW, wxGTK and OSX.
 
         @param strikethrough
             @true to add strike-through style, @false to remove it.
diff -bru wxWidgets.orig/src/osx/carbon/font.cpp wxWidgets.new/src/osx/carbon/font.cpp
--- wxWidgets.orig/src/osx/carbon/font.cpp	2014-09-09 00:48:14.000000000 -0700
+++ wxWidgets.new/src/osx/carbon/font.cpp	2014-09-10 21:08:39.000000000 -0700
@@ -103,6 +103,15 @@
 
     wxFontWeight GetWeight() const { return m_info.GetWeight(); }
 
+    void SetStrikethrough( bool s )
+    {
+        if( m_info.m_strikethrough != s )
+        {
+            m_info.SetStrikethrough( s );
+            Free();
+        }
+    }
+
     void SetUnderlined( bool u )
     {
         if ( m_info.m_underlined != u )
@@ -113,6 +122,7 @@
     }
 
     bool GetUnderlined() const { return m_info.GetUnderlined(); }
+    bool GetStrikethrough() const { return m_info.GetStrikethrough(); }
 
     void SetFaceName( const wxString& facename )
     {
@@ -719,6 +729,13 @@
     M_FONTDATA->SetUnderlined( underlined );
 }
 
+void wxFont::SetStrikethrough(bool strikethrough)
+{
+     AllocExclusive();
+
+     M_FONTDATA->SetStrikethrough( strikethrough );
+}
+
 // ----------------------------------------------------------------------------
 // accessors
 // ----------------------------------------------------------------------------
@@ -783,6 +800,13 @@
     return M_FONTDATA->GetUnderlined();
 }
 
+bool wxFont::GetStrikethrough() const
+{
+    wxCHECK_MSG( M_FONTDATA != NULL, false, wxT( "invalid font" ) );
+
+    return M_FONTDATA->GetStrikethrough();
+}
+
 wxString wxFont::GetFaceName() const
 {
     wxCHECK_MSG( M_FONTDATA != NULL , wxEmptyString , wxT("invalid font") );
@@ -1248,7 +1272,7 @@
 
 bool wxNativeFontInfo::GetStrikethrough() const
 {
-    return false;
+    return m_strikethrough;
 }
 
 
@@ -1317,8 +1341,9 @@
     // not reflected in native descriptors
 }
 
-void wxNativeFontInfo::SetStrikethrough(bool WXUNUSED(strikethrough))
+void wxNativeFontInfo::SetStrikethrough(bool strikethrough)
 {
+    m_strikethrough = strikethrough;
 }
 
 void wxNativeFontInfo::UpdateNamesMap(const wxString& familyName, CTFontDescriptorRef descr)
diff -bru wxWidgets.orig/src/osx/carbon/graphics.cpp wxWidgets.new/src/osx/carbon/graphics.cpp
--- wxWidgets.orig/src/osx/carbon/graphics.cpp	2014-09-09 00:48:14.000000000 -0700
+++ wxWidgets.new/src/osx/carbon/graphics.cpp	2014-09-10 15:13:51.000000000 -0700
@@ -834,12 +834,14 @@
     wxColour GetColour() const { return m_colour ; }
 
     bool GetUnderlined() const { return m_underlined ; }
+    bool GetStrikethrough() const { return m_strikethrough; }
+
 #if wxOSX_USE_IPHONE
     UIFont* GetUIFont() const { return m_uiFont; }
 #endif
 private :
     wxColour m_colour;
-    bool m_underlined;
+    bool m_underlined, m_strikethrough;
 #if wxOSX_USE_ATSU_TEXT
     ATSUStyle m_macATSUIStyle;
 #endif
@@ -853,6 +855,7 @@
 {
     m_colour = col;
     m_underlined = font.GetUnderlined();
+    m_strikethrough = font.GetStrikethrough();
 
     m_ctFont.reset( wxMacCreateCTFont( font ) );
 #if wxOSX_USE_IPHONE
@@ -2314,6 +2317,16 @@
         CGContextSetLineWidth(m_cgContext, 1.0);
         CGContextStrokeLineSegments(m_cgContext, points, 2);
     }
+    if( fref->GetStrikethrough() )
+    {
+        CGFloat width = CTLineGetTypographicBounds(line, NULL, NULL, NULL);
+        CGFloat height = CTFontGetSize( font );
+        CGPoint points[] = { {0.0, height / 2},  {width, height / 2} };
+        CGContextSetStrokeColorWithColor(m_cgContext, col);
+        CGContextSetShouldAntialias(m_cgContext, false);
+        CGContextSetLineWidth(m_cgContext, 1.0);
+        CGContextStrokeLineSegments(m_cgContext, points, 2);
+    }
 
     CGContextRestoreGState(m_cgContext);
     CGContextSetTextMatrix(m_cgContext, textMatrix);
