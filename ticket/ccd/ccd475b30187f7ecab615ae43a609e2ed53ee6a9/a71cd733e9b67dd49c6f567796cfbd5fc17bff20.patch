Index: include/wx/thread.h
===================================================================
--- include/wx/thread.h	(revision 76293)
+++ include/wx/thread.h	(working copy)
@@ -583,6 +583,11 @@
     // identifies a thread inside a process
     wxThreadIdType GetId() const;
 
+#ifdef __WINDOWS__
+    // Get the internal OS handle
+    WXHANDLE MSWGetHandle() const;
+#endif
+
     wxThreadKind GetKind() const
         { return m_isDetached ? wxTHREAD_DETACHED : wxTHREAD_JOINABLE; }
 
Index: interface/wx/thread.h
===================================================================
--- interface/wx/thread.h	(revision 76293)
+++ interface/wx/thread.h	(working copy)
@@ -1108,6 +1108,13 @@
     wxThreadIdType GetId() const;
 
     /**
+        Gets the internal thread handle. wxMSW only.
+
+        @since 3.1.0
+    */
+    WXHANDLE MSWGetHandle() const;    
+
+    /**
         Returns the thread kind as it was given in the ctor.
 
         @since 2.9.0
Index: src/msw/thread.cpp
===================================================================
--- src/msw/thread.cpp	(revision 76293)
+++ src/msw/thread.cpp	(working copy)
@@ -1226,6 +1226,13 @@
     return (unsigned long)m_internal->GetId();
 }
 
+WXHANDLE wxThread::MSWGetHandle() const
+{
+    wxCriticalSectionLocker lock(const_cast<wxCriticalSection &>(m_critsect));
+
+    return m_internal->GetHandle();
+}
+
 bool wxThread::IsRunning() const
 {
     wxCriticalSectionLocker lock(const_cast<wxCriticalSection &>(m_critsect));
