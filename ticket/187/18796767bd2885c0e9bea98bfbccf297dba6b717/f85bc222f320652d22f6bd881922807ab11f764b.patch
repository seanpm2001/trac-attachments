--- datavgen-original.cpp	2011-10-18 17:17:54.595062200 -0400
+++ datavgen-fixed.cpp	2011-10-18 17:18:56.950980300 -0400
@@ -3,7 +3,7 @@
 // Purpose:     wxDataViewCtrl generic implementation
 // Author:      Robert Roebling
 // Modified by: Francesco Montorsi, Guru Kathiresan, Bo Yang
-// Id:          $Id$
+// Id:          $Id: datavgen.cpp 68100 2011-06-29 17:50:32Z VZ $
 // Copyright:   (c) 1998 Robert Roebling
 // Licence:     wxWindows licence
 /////////////////////////////////////////////////////////////////////////////
@@ -3837,28 +3837,43 @@
             // no the entire space as given by the control but the one
             // used by the renderer after calculation of alignment etc.
 
-            // adjust the rectangle ourselves to account for the alignment
             wxRect rectItem = cell_rect;
+
+            rectItem.Deflate(PADDING_RIGHTLEFT, 0);
+
+            // account for the tree indent
+            if ((!IsList()) && (col == GetOwner()->GetExpanderColumn()))
+            {
+                wxDataViewTreeNode* node = GetTreeNodeByRow(current);
+
+                int indent = GetOwner()->GetIndent() * node->GetIndentLevel();
+                indent += m_lineHeight;
+
+                rectItem.x += indent;
+                rectItem.width -= indent;
+            }
+
+            // adjust the rectangle ourselves to account for the alignment
             const int align = cell->GetAlignment();
             if ( align != wxDVR_DEFAULT_ALIGNMENT )
             {
                 const wxSize size = cell->GetSize();
 
-                if ( size.x >= 0 && size.x < cell_rect.width )
+                if ( size.x >= 0 && size.x < rectItem.width )
                 {
                     if ( align & wxALIGN_CENTER_HORIZONTAL )
-                        rectItem.x += (cell_rect.width - size.x)/2;
+                        rectItem.x += (rectItem.width - size.x)/2;
                     else if ( align & wxALIGN_RIGHT )
-                        rectItem.x += cell_rect.width - size.x;
+                        rectItem.x += rectItem.width - size.x;
                     // else: wxALIGN_LEFT is the default
                 }
 
-                if ( size.y >= 0 && size.y < cell_rect.height )
+                if ( size.y >= 0 && size.y < rectItem.height )
                 {
                     if ( align & wxALIGN_CENTER_VERTICAL )
-                        rectItem.y += (cell_rect.height - size.y)/2;
+                        rectItem.y += (rectItem.height - size.y)/2;
                     else if ( align & wxALIGN_BOTTOM )
-                        rectItem.y += cell_rect.height - size.y;
+                        rectItem.y += rectItem.height - size.y;
                     // else: wxALIGN_TOP is the default
                 }
             }
