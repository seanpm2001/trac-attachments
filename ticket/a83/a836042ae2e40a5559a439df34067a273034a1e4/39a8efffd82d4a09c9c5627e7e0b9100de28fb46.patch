Index: strings/numformatter.cpp
===================================================================
--- strings/numformatter.cpp	(revision 67386)
+++ strings/numformatter.cpp	(working copy)
@@ -146,7 +146,7 @@
 {
     WX_ASSERT_FAILS_WITH_ASSERT
     (
-        wxNumberFormatter::ToString(123L, wxNumberFormatter::Style_NoTrailingZeroes)
+        wxNumberFormatter::ToString(123L, wxNumberFormatter::Style_NoTrailingZeroes) != "123"
     );
 
     if ( !m_locale )
Index: strings/vsnprintf.cpp
===================================================================
--- strings/vsnprintf.cpp	(revision 67386)
+++ strings/vsnprintf.cpp	(working copy)
@@ -451,7 +451,7 @@
 
     // a missing positional arg should result in an assert
     WX_ASSERT_FAILS_WITH_ASSERT(
-            wxSnprintf(buf, MAX_TEST_LEN, wxT("%1$d %3$d"), 1, 2, 3) );
+            wxSnprintf(buf, MAX_TEST_LEN, wxT("%1$d %3$d"), 1, 2, 3) >= 0 );
 
     // positional and non-positionals in the same format string:
     r = wxSnprintf(buf, MAX_TEST_LEN, wxT("%1$d %d %3$d"), 1, 2, 3);
Index: thread/misc.cpp
===================================================================
--- thread/misc.cpp	(revision 67386)
+++ thread/misc.cpp	(working copy)
@@ -364,7 +364,7 @@
     thread1.Wait();     // wait until the thread ends
 
     // verify that running twice the same thread fails
-    WX_ASSERT_FAILS_WITH_ASSERT( thread1.Run() );
+    WX_ASSERT_FAILS_WITH_ASSERT( thread1.Run() == wxTHREAD_NO_ERROR );
 }
 
 void MiscThreadTestCase::TestThreadConditions()
