diff -uNr -x stc.cpp wxWidgets-3.0.0-orig\src/msw/bitmap.cpp wxWidgets-3.0.0-14403\src/msw/bitmap.cpp
--- wxWidgets-3.0.0-orig\src/msw/bitmap.cpp	2013-11-11 14:18:38.000000000 +0100
+++ wxWidgets-3.0.0-14403\src/msw/bitmap.cpp	2014-01-05 14:25:14.134434900 +0100
@@ -1329,7 +1329,7 @@
         wxDIB *dib = GetBitmapData()->m_dib;
         GetBitmapData()->m_dib = NULL;
 
-        // TODO: convert
+        dib->CopyToDDB(GetHBITMAP());
 
         delete dib;
     }
diff -uNr -x stc.cpp wxWidgets-3.0.0-orig\src/msw/dc.cpp wxWidgets-3.0.0-14403\src/msw/dc.cpp
--- wxWidgets-3.0.0-orig\src/msw/dc.cpp	2013-11-11 14:18:38.000000000 +0100
+++ wxWidgets-3.0.0-14403\src/msw/dc.cpp	2014-01-05 14:27:02.964316800 +0100
@@ -1302,7 +1302,41 @@
         SelectInHDC select(hdcMem, GetHbitmapOf(bmp));
 
         if ( AlphaBlt(GetHdc(), x, y, width, height, 0, 0, width, height, hdcMem, bmp) )
+        {
+            BITMAP bm;
+            int nRetVal = ::GetObject(GetHbitmapOf(m_selectedBitmap), sizeof(BITMAP), &bm);
+            wxCHECK_RET( nRetVal, wxT("failed to get bitmap info in DoDrawBitmap") );
+
+            if(!m_selectedBitmap.HasAlpha() && bm.bmBitsPixel == 32)
+            {  // If the target bitmap has no alpha channel but its DIB has 32-bit depth
+               // (what can be recognized by the system as a presence alpha channel)
+               // then set alpha channel in the DIB to the opaque value
+               // (to override modifications made by AlphaBlend function).
+
+                wxAlphaPixelData dataDst(m_selectedBitmap);
+                wxCHECK_RET( dataDst, wxT("failed to get raw data in wxAlphaBlend") );
+
+                wxAlphaPixelData::Iterator pDst(dataDst);
+                int dstWidth = bm.bmWidth;
+                int dstHeight = bm.bmHeight;
+
+                for ( int y = 0; y < dstHeight; ++y )
+                {
+                    wxAlphaPixelData::Iterator pDstRowStart = pDst;
+
+                    for ( int x = 0; x < dstWidth; ++x )
+                    {
+                        pDst.Alpha() = 0xff;
+
+                        ++pDst;
+                    }
+
+                    pDst = pDstRowStart;
+                    pDst.OffsetY(dataDst, 1);
+                }
+            }
             return;
+        }
     }
 
     SET_STRETCH_BLT_MODE(GetHdc());
diff -uNr -x stc.cpp wxWidgets-3.0.0-orig\src/msw/dib.cpp wxWidgets-3.0.0-14403\src/msw/dib.cpp
--- wxWidgets-3.0.0-orig\src/msw/dib.cpp	2013-11-11 14:18:38.000000000 +0100
+++ wxWidgets-3.0.0-14403\src/msw/dib.cpp	2014-01-05 14:28:56.504669700 +0100
@@ -221,6 +221,12 @@
     return true;
 }
 
+bool wxDIB::CopyToDDB(HBITMAP hbmp)
+{
+    // TODO: convert
+    return true;
+}
+
 #else // !__WXWINCE__
 
 bool wxDIB::CopyFromDDB(HBITMAP hbmp)
@@ -253,6 +259,37 @@
     return true;
 }
 
+
+bool wxDIB::CopyToDDB(HBITMAP hbmp)
+{
+    DIBSECTION ds;
+    if ( !GetDIBSection(m_handle, &ds) )
+    {
+        // we're sure that our handle is a DIB section, so this should work
+        wxFAIL_MSG( wxT("GetObject(DIBSECTION) unexpectedly failed") );
+
+        return false;
+    }
+
+    if ( !::SetDIBits
+            (
+                ScreenHDC(),                // the DC to use
+                hbmp,                       // the source DDB
+                0,                          // first scan line
+                m_height,                   // number of lines to copy
+                ds.dsBm.bmBits,             // pointer to the buffer
+                (BITMAPINFO *)&ds.dsBmih,   // bitmap header
+                DIB_RGB_COLORS              // and not DIB_PAL_COLORS
+            ) )
+    {
+        wxLogLastError(wxT("SetDIBits()"));
+
+        return false;
+    }
+
+    return true;
+}
+
 #endif // __WXWINCE__/!__WXWINCE__
 
 // ----------------------------------------------------------------------------
diff -uNr -x stc.cpp wxWidgets-3.0.0-orig\include/wx/msw/dib.h wxWidgets-3.0.0-14403\include/wx/msw/dib.h
--- wxWidgets-3.0.0-orig\include/wx/msw/dib.h	2013-11-11 14:18:36.000000000 +0100
+++ wxWidgets-3.0.0-14403\include/wx/msw/dib.h	2014-01-05 14:34:10.587074800 +0100
@@ -89,6 +89,8 @@
     // save the DIB as a .BMP file to the file with the given name
     bool Save(const wxString& filename);
 
+    // copy contents to the provided DDB
+    bool CopyToDDB(HBITMAP hbmp);
 
     // accessors
     // ---------
