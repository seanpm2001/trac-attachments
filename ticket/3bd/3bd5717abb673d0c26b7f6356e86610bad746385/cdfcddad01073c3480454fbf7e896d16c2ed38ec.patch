Index: docs/latex/wx/listctrl.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/listctrl.tex,v
retrieving revision 1.72
diff -u -r1.72 listctrl.tex
--- docs/latex/wx/listctrl.tex	2006/03/10 21:26:59	1.72
+++ docs/latex/wx/listctrl.tex	2006/05/07 01:02:22
@@ -425,6 +425,26 @@
 
 
 
+\membersection{wxListCtrl::GetSubItemRect}\label{wxlistctrlgetsubitemrect}
+
+\constfunc{bool}{GetSubItemRect}{\param{long }{item}, \param{long }{subItem}, \param{wxRect\& }{rect}, \param{int }{code = wxLIST\_RECT\_BOUNDS}}
+
+Returns the rectangle representing the subitem's size and position, in physical
+coordinates.
+This method is only meaningfull when the wxListCtrl is in the report mode. If subItem
+parameter is wxLIST_GETSUBITEMRECT_WHOLEITEM the return value is same as
+wxListCtrl::GetItemRect.
+
+{\it code} is one of wxLIST\_RECT\_BOUNDS, wxLIST\_RECT\_ICON, wxLIST\_RECT\_LABEL.
+
+\pythonnote{The wxPython version of this method accepts only the item
+ID and code and returns the wxRect.}
+
+\perlnote{In wxPerl this method takes only the {\bf item} parameter and
+returns a Wx::Rect ( or undef ).}
+
+
+
 \membersection{wxListCtrl::GetItemSpacing}\label{wxlistctrlgetitemspacing}
 
 \constfunc{wxSize}{GetItemSpacing}{\void}
@@ -554,7 +574,7 @@
 
 \membersection{wxListCtrl::HitTest}\label{wxlistctrlhittest}
 
-\func{long}{HitTest}{\param{const wxPoint\& }{point}, \param{int\& }{flags}}
+\func{long}{HitTest}{\param{const wxPoint\& }{point}, \param{int\& }{flags}, \param{long\* }{ptrSubItem}}
 
 Determines which item (if any) is at the specified point,
 giving details in {\it flags}. Returns index of the item or {\tt wxNOT\_FOUND}
@@ -575,6 +595,14 @@
 \twocolitem{wxLIST\_HITTEST\_ONITEM}{Combination of wxLIST\_HITTEST\_ONITEMICON, wxLIST\_HITTEST\_ONITEMLABEL,
 wxLIST\_HITTEST\_ONITEMSTATEICON.}
 \end{twocollist}
+
+MSW Only
+If {\it ptrSubItem} is not NULL and the wxListCtrl is in the report
+mode the subitem/column number will also be provided. 
+This feature requires at least comctl32.dll of verion 4.70 on the 
+host system or the value stored at {\it ptrSubItem} will be -1.
+To compile this feature into wxWidgets library you need to have
+access to commctrl.h of version 4.70 that is provided by Microsoft.
 
 \pythonnote{A tuple of values is returned in the wxPython version of
 this method. The first value is the item id and the second is the
Index: include/wx/listbase.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/listbase.h,v
retrieving revision 1.23
diff -u -r1.23 listbase.h
--- include/wx/listbase.h	2005/12/22 03:10:35	1.23
+++ include/wx/listbase.h	2006/05/07 00:29:24
@@ -104,6 +104,9 @@
 
 #define wxLIST_HITTEST_ONITEM (wxLIST_HITTEST_ONITEMICON | wxLIST_HITTEST_ONITEMLABEL | wxLIST_HITTEST_ONITEMSTATEICON)
 
+// GetSubItemRect constants
+#define wxLIST_GETSUBITEMRECT_WHOLEITEM -1l
+
 // Flags for GetNextItem (MSW only except wxLIST_NEXT_ALL)
 enum
 {
Index: include/wx/msw/listctrl.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/listctrl.h,v
retrieving revision 1.63
diff -u -r1.63 listctrl.h
--- include/wx/msw/listctrl.h	2006/04/14 16:52:59	1.63
+++ include/wx/msw/listctrl.h	2006/05/06 20:09:47
@@ -2,7 +2,7 @@
 // Name:        wx/msw/listctrl.h
 // Purpose:     wxListCtrl class
 // Author:      Julian Smart
-// Modified by:
+// Modified by: Agron Selimaj
 // Created:     01/02/97
 // RCS-ID:      $Id: listctrl.h,v 1.63 2006/04/14 16:52:59 ABX Exp $
 // Copyright:   (c) Julian Smart
@@ -174,6 +174,9 @@
     // Gets the item rectangle
     bool GetItemRect(long item, wxRect& rect, int code = wxLIST_RECT_BOUNDS) const ;
 
+    // Gets the subitem rectangle in report mode
+    bool GetSubItemRect(long item, long subItem, wxRect& rect, int code = wxLIST_RECT_BOUNDS) const ;
+
     // Gets the item position
     bool GetItemPosition(long item, wxPoint& pos) const ;
 
@@ -293,7 +296,8 @@
 
     // Determines which item (if any) is at the specified point,
     // giving details in 'flags' (see wxLIST_HITTEST_... flags above)
-    long HitTest(const wxPoint& point, int& flags);
+    // Request the subitem number as well at the given coordinate.
+    long HitTest(const wxPoint& point, int& flags, long* ptrSubItem = NULL);
 
     // Inserts an item, returning the index of the new item if successful,
     // -1 otherwise.
Index: src/msw/listctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/listctrl.cpp,v
retrieving revision 1.259
diff -u -r1.259 listctrl.cpp
--- src/msw/listctrl.cpp	2006/05/06 16:57:00	1.259
+++ src/msw/listctrl.cpp	2006/05/07 00:07:14
@@ -2,7 +2,7 @@
 // Name:        src/msw/listctrl.cpp
 // Purpose:     wxListCtrl
 // Author:      Julian Smart
-// Modified by:
+// Modified by: Agron Selimaj
 // Created:     04/01/98
 // RCS-ID:      $Id: listctrl.cpp,v 1.259 2006/05/06 16:57:00 PC Exp $
 // Copyright:   (c) Julian Smart
@@ -1007,6 +1007,24 @@
 // Gets the item rectangle
 bool wxListCtrl::GetItemRect(long item, wxRect& rect, int code) const
 {
+    return GetSubItemRect( item, wxLIST_GETSUBITEMRECT_WHOLEITEM, rect, code) ;
+}
+
+/*!
+ * Retrieve coordinates and size of a specified subitem of a listview control.
+ * This function only works if the listview control is in the report mode.
+ *
+ * @param item : Item number
+ * @param subItem : Subitem or column number, use -1 for the whole row including
+ *                  all columns or subitems
+ * @param rect : A pointer to an allocated wxRect object
+ * @param code : Specify the part of the subitem coordinates you need. Choices are
+ *               wxLIST_RECT_BOUNDS, wxLIST_RECT_ICON, wxLIST_RECT_LABEL
+ *
+ * @return bool  : True if successful.
+ */
+bool wxListCtrl::GetSubItemRect(long item, long subItem, wxRect& rect, int code) const
+{
     RECT rectWin;
 
     int codeWin;
@@ -1018,12 +1036,24 @@
         codeWin = LVIR_LABEL;
     else
     {
-        wxFAIL_MSG( _T("incorrect code in GetItemRect()") );
-
+        wxFAIL_MSG( _T("incorrect code in GetItemRect() / GetSubItemRect()") );
         codeWin = LVIR_BOUNDS;
     }
 
-    bool success = ListView_GetItemRect(GetHwnd(), (int) item, &rectWin, codeWin) != 0;
+    bool success;
+    if( subItem == wxLIST_GETSUBITEMRECT_WHOLEITEM)
+    {
+      success = ListView_GetItemRect(GetHwnd(), (int) item, &rectWin, codeWin) != 0;
+    }
+    else if( subItem >= 0)
+    {
+      success = ListView_GetSubItemRect( GetHwnd(), (int) item, (int) subItem, codeWin, &rectWin) != 0;
+    }
+    else
+    {
+      wxFAIL_MSG( _T("incorrect subItem number in GetSubItemRect()") );
+      return false;
+    }
 
     rect.x = rectWin.left;
     rect.y = rectWin.top;
@@ -1033,6 +1063,9 @@
     return success;
 }
 
+
+
+
 // Gets the item position
 bool wxListCtrl::GetItemPosition(long item, wxPoint& pos) const
 {
@@ -1474,7 +1507,7 @@
 
 // Determines which item (if any) is at the specified point,
 // giving details in 'flags' (see wxLIST_HITTEST_... flags above)
-long wxListCtrl::HitTest(const wxPoint& point, int& flags)
+long wxListCtrl::HitTest(const wxPoint& point, int& flags, long *ptrSubItem /*=NULL*/ /*OUT*/)
 {
     LV_HITTESTINFO hitTestInfo;
     hitTestInfo.pt.x = (int) point.x;
@@ -1514,9 +1547,32 @@
         if ( hitTestInfo.flags & LVHT_ONITEMSTATEICON )
             flags |= wxLIST_HITTEST_ONITEMSTATEICON;
     }
+    if( ptrSubItem)
+    {
+        int ver = wxApp::GetComCtl32Version();
+        if ( ver < 470 )
+        {
+            // wxWindows compiles with commctrl.h 4.70 but running on a MS Windows
+            // machine with an earlier version of commctrl
+            wxString msg;
+            msg = wxString::Format(_("Please install a newer version of comctl32.dll\n(at least version 4.70 is required but you have %d.%02d)\nor this program won't operate correctly."),
+                        ver / 100, ver % 100);
+            wxFAIL_MSG( msg);
+            return (long) -1;
+        }
+#if (_WIN32_IE >= 0x0300)
+        // This structure is only supported if the wxWindows is compiled using
+        // commctrl.h 4.70 and later.
 
+        ListView_SubItemHitTest(GetHwnd(), & hitTestInfo);
+        *ptrSubItem = hitTestInfo.iSubItem;
+#else
+        *ptrSubItem  = -1l;
+#endif
+    }
     return (long) hitTestInfo.iItem;
 }
+
 
 // Inserts an item, returning the index of the new item if successful,
 // -1 otherwise.

 	  	 
