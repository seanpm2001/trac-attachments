diff -rup ./original/include/wx/msw/combobox.h ./modified/include/wx/msw/combobox.h
--- ./original/include/wx/msw/combobox.h	2015-07-27 10:35:00.000000000 +0700
+++ ./modified/include/wx/msw/combobox.h	2015-08-16 12:02:26.018687900 +0700
@@ -129,6 +129,10 @@ public:
     virtual void SetLayoutDirection(wxLayoutDirection dir) wxOVERRIDE;
 
 protected:
+    // To be called from derived class if necessary, 
+    // where the combobox needs to be recreated.
+    void MSWSubclassEdit();
+
 #if wxUSE_TOOLTIPS
     virtual void DoSetToolTip(wxToolTip *tip);
 #endif
diff -rup ./original/src/msw/bmpcbox.cpp ./modified/src/msw/bmpcbox.cpp
--- ./original/src/msw/bmpcbox.cpp	2015-07-27 10:35:00.000000000 +0700
+++ ./modified/src/msw/bmpcbox.cpp	2015-08-16 09:55:52.573235600 +0700
@@ -167,6 +167,9 @@ void wxBitmapComboBox::RecreateControl()
     if ( !MSWCreateControl(wxT("COMBOBOX"), wxEmptyString, pos, size) )
         return;
 
+    // re-subclass combobox edit since the previous ones got destroyed.
+    wxComboBox::MSWSubclassEdit();
+
     // initialize the controls contents
     for ( i = 0; i < numItems; i++ )
     {
diff -rup ./original/src/msw/combobox.cpp ./modified/src/msw/combobox.cpp
--- ./original/src/msw/combobox.cpp	2015-07-27 10:35:00.000000000 +0700
+++ ./modified/src/msw/combobox.cpp	2015-08-16 12:21:47.994257600 +0700
@@ -454,13 +454,8 @@ bool wxComboBox::Create(wxWindow *parent
     if ( !value.empty() )
         SetValue(value);
 
-    // a (not read only) combobox is, in fact, 2 controls: the combobox itself
-    // and an edit control inside it and if we want to catch events from this
-    // edit control, we must subclass it as well
-    if ( !(style & wxCB_READONLY) )
-    {
-        gs_wndprocEdit = wxSetWindowProc((HWND)GetEditHWND(), wxComboEditWndProc);
-    }
+    // subclass the edit.
+    MSWSubclassEdit();
 
     // and finally, show the control
     Show(true);
@@ -515,6 +510,25 @@ WXDWORD wxComboBox::MSWGetStyle(long sty
     return msStyle;
 }
 
+void wxComboBox::MSWSubclassEdit()
+{
+    // a (not read only) combobox is, in fact, 2 controls: the combobox itself
+    // and an edit control inside it and if we want to catch events from this
+    // edit control, we must subclass it as well.
+    //
+    // Need to perform some checking so that the edit only subclassed once.
+    if ( !HasFlag(wxCB_READONLY) )
+    {
+        if ( 
+                ( !gs_wndprocEdit ) 
+             || ( gs_wndprocEdit == wxGetWindowProc((HWND)GetEditHWND()) ) 
+           )
+        {
+            gs_wndprocEdit = wxSetWindowProc((HWND)GetEditHWND(), wxComboEditWndProc);
+        }
+    }
+}
+
 // ----------------------------------------------------------------------------
 // wxComboBox text control-like methods
 // ----------------------------------------------------------------------------
