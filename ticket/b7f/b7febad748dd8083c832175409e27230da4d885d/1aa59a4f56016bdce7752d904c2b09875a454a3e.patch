Index: docs/latex/wx/stdpaths.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/stdpaths.tex,v
retrieving revision 1.17
diff -u2 -r1.17 docs/latex/wx/stdpaths.tex
--- docs/latex/wx/stdpaths.tex
+++ docs/latex/wx/stdpaths.tex
@@ -112,4 +112,19 @@
 
 
+\membersection{wxStandardPaths::GetExecutablePath}\label{wxstandardpathsgetexecutablepath}
+
+\constfunc{wxString}{GetExecutablePath}{\void}
+
+Return the directory and the filename for the current executable.
+
+Example return values:
+\begin{itemize}
+    \item Unix: \texttt{/usr/local/bin/exename}
+    \item Windows: \texttt{C:$\backslash$Programs$\backslash$AppFolder$\backslash$exename.exe}
+    \item Mac: \texttt{/Programs/exename}
+\end{itemize}
+
+
+
 \membersection{wxStandardPaths::GetInstallPrefix}\label{wxstandardpathsgetinstallprefix}
 
@@ -254,5 +269,5 @@
 
 Lets wxStandardPaths know about the real program installation prefix on a Unix
-system. By default, the value returned by 
+system. By default, the value returned by
 \helpref{GetInstallPrefix}{wxstandardpathsgetinstallprefix} is used.
 
Index: include/wx/stdpaths.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/stdpaths.h,v
retrieving revision 1.18
diff -u2 -r1.18 include/wx/stdpaths.h
--- include/wx/stdpaths.h
+++ include/wx/stdpaths.h
@@ -44,4 +44,9 @@
     static wxStandardPathsBase& Get();
 
+    // return the path (directory+filename) of the running executable or
+    // wxEmptyString if it couldn't be determined.
+    // The path is returned as an absolute path whenever possible.
+    // Default implementation only try to use wxApp->argv[0].
+    virtual wxString GetExecutablePath() const;
 
     // return the directory with system config files:
@@ -153,4 +158,6 @@
     void SetInstallPrefix(const wxString& prefix) { m_prefix = prefix; }
     wxString GetInstallPrefix() const { return m_prefix; }
+
+    virtual wxString GetExecutablePath() const { return m_prefix; }
     virtual wxString GetConfigDir() const { return m_prefix; }
     virtual wxString GetUserConfigDir() const { return m_prefix; }
Index: include/wx/mac/corefoundation/stdpaths.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/corefoundation/stdpaths.h,v
retrieving revision 1.5
diff -u2 -r1.5 include/wx/mac/corefoundation/stdpaths.h
--- include/wx/mac/corefoundation/stdpaths.h
+++ include/wx/mac/corefoundation/stdpaths.h
@@ -34,4 +34,5 @@
 
     // implement base class pure virtuals
+    virtual wxString GetExecutablePath() const;
     virtual wxString GetConfigDir() const;
     virtual wxString GetUserConfigDir() const;
Index: include/wx/msw/stdpaths.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/stdpaths.h,v
retrieving revision 1.5
diff -u2 -r1.5 include/wx/msw/stdpaths.h
--- include/wx/msw/stdpaths.h
+++ include/wx/msw/stdpaths.h
@@ -21,4 +21,5 @@
 public:
     // implement base class pure virtuals
+    virtual wxString GetExecutablePath() const;
     virtual wxString GetConfigDir() const;
     virtual wxString GetUserConfigDir() const;
Index: include/wx/palmos/stdpaths.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/stdpaths.h,v
retrieving revision 1.1
diff -u2 -r1.1 include/wx/palmos/stdpaths.h
--- include/wx/palmos/stdpaths.h
+++ include/wx/palmos/stdpaths.h
@@ -22,4 +22,5 @@
     void SetInstallPrefix(const wxString& prefix) { m_prefix = prefix; }
     wxString GetInstallPrefix() const { return m_prefix; }
+    virtual wxString GetExecutablePath() const { return m_prefix; }
     virtual wxString GetConfigDir() const { return m_prefix; }
     virtual wxString GetUserConfigDir() const { return m_prefix; }
Index: include/wx/unix/stdpaths.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/unix/stdpaths.h,v
retrieving revision 1.5
diff -u2 -r1.5 include/wx/unix/stdpaths.h
--- include/wx/unix/stdpaths.h
+++ include/wx/unix/stdpaths.h
@@ -39,4 +39,5 @@
 
     // implement base class pure virtuals
+    virtual wxString GetExecutablePath() const;
     virtual wxString GetConfigDir() const;
     virtual wxString GetUserConfigDir() const;
Index: samples/console/console.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/console/console.cpp,v
retrieving revision 1.203
diff -u2 -r1.203 samples/console/console.cpp
--- samples/console/console.cpp
+++ samples/console/console.cpp
@@ -89,5 +89,5 @@
     #define TEST_ZIP
 #else // #if TEST_ALL
-    #define TEST_CMDLINE
+    #define TEST_STDPATHS
 #endif
 
@@ -2782,4 +2782,5 @@
     wxPrintf(_T("Data dir (user local):\t%s\n"), stdp.GetUserLocalDataDir().c_str());
     wxPrintf(_T("Documents dir:\t\t%s\n"), stdp.GetDocumentsDir().c_str());
+    wxPrintf(_T("Executable path:\t%s\n"), stdp.GetExecutablePath().c_str());
     wxPrintf(_T("Plugins dir:\t\t%s\n"), stdp.GetPluginsDir().c_str());
     wxPrintf(_T("Resources dir:\t\t%s\n"), stdp.GetResourcesDir().c_str());
Index: src/common/stdpbase.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/stdpbase.cpp,v
retrieving revision 1.10
diff -u2 -r1.10 src/common/stdpbase.cpp
--- src/common/stdpbase.cpp
+++ src/common/stdpbase.cpp
@@ -54,4 +54,25 @@
 }
 
+wxString wxStandardPathsBase::GetExecutablePath() const
+{
+    if ( !wxTheApp || !wxTheApp->argv )
+        return wxEmptyString;
+
+    wxString argv0 = wxTheApp->argv[0];
+    if (wxIsAbsolutePath(argv0))
+        return argv0;
+
+    // Search PATH.environment variable...
+    wxPathList pathlist;
+    pathlist.AddEnvList(wxT("PATH"));
+    wxString path = pathlist.FindAbsoluteValidPath(argv0);
+    if ( path.empty() )
+        return argv0;       // better than nothing
+
+    wxFileName filename(path);
+    filename.Normalize();
+    return filename.GetFullPath();
+}
+
 wxStandardPathsBase& wxAppTraitsBase::GetStandardPaths()
 {
Index: src/mac/corefoundation/stdpaths_cf.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/corefoundation/stdpaths_cf.cpp,v
retrieving revision 1.9
diff -u2 -r1.9 src/mac/corefoundation/stdpaths_cf.cpp
--- src/mac/corefoundation/stdpaths_cf.cpp
+++ src/mac/corefoundation/stdpaths_cf.cpp
@@ -152,4 +152,20 @@
 }
 
+wxString wxStandardPathsCF::GetExecutablePath() const
+{
+    ProcessInfoRec processinfo;
+    ProcessSerialNumber procno ;
+    FSSpec fsSpec;
+
+    procno.highLongOfPSN = NULL ;
+    procno.lowLongOfPSN = kCurrentProcess ;
+    processinfo.processInfoLength = sizeof(ProcessInfoRec);
+    processinfo.processName = NULL;
+    processinfo.processAppSpec = &fsSpec;
+
+    GetProcessInformation( &procno , &processinfo ) ;
+    return wxMacFSSpec2MacFilename(&fsSpec);
+}
+
 wxString wxStandardPathsCF::GetLocalDataDir() const
 {
Index: src/msw/stdpaths.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/stdpaths.cpp,v
retrieving revision 1.16
diff -u2 -r1.16 src/msw/stdpaths.cpp
--- src/msw/stdpaths.cpp
+++ src/msw/stdpaths.cpp
@@ -249,5 +249,5 @@
 wxString wxStandardPaths::GetAppDir()
 {
-    wxFileName fn(wxGetFullModuleName());
+    wxFileName fn(GetExecutablePath());
 
     // allow running the apps directly from build directory in debug builds
@@ -275,4 +275,9 @@
 // ----------------------------------------------------------------------------
 
+wxString wxStandardPaths::GetExecutablePath() const
+{
+    return wxGetFullModuleName();
+}
+
 wxString wxStandardPaths::GetConfigDir() const
 {
Index: src/unix/stdpaths.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/stdpaths.cpp,v
retrieving revision 1.16
diff -u2 -r1.16 src/unix/stdpaths.cpp
--- src/unix/stdpaths.cpp
+++ src/unix/stdpaths.cpp
@@ -107,9 +107,7 @@
 // ============================================================================
 
-void wxStandardPaths::DetectPrefix()
+wxString wxStandardPaths::GetExecutablePath() const
 {
 #ifdef __LINUX__
-    // under Linux, we can try to infer the prefix from the location of the
-    // executable
     wxString exeStr;
 
@@ -139,4 +137,15 @@
 
     if ( !exeStr.empty() )
+        return exeStr;
+#endif // __LINUX__
+
+    return wxStandardPathsBase::GetExecutablePath();
+}
+
+void wxStandardPaths::DetectPrefix()
+{
+    // we can try to infer the prefix from the location of the executable
+    wxString exeStr = GetExecutablePath();
+    if ( !exeStr.empty() )
     {
         // consider that we're in the last "bin" subdirectory of our prefix
@@ -145,5 +154,4 @@
             m_prefix.assign(exeStr, 0, pos);
     }
-#endif // __LINUX__
 
     if ( m_prefix.empty() )

 	  	 
