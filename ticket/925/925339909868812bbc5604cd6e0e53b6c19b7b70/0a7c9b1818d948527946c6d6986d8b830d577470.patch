Index: docs/latex/wx/dc.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/dc.tex,v
retrieving revision 1.72
diff -bu2 -r1.72 docs/latex/wx/dc.tex
--- docs/latex/wx/dc.tex
+++ docs/latex/wx/dc.tex
@@ -506,5 +506,5 @@
 \membersection{wxDC::DrawText}\label{wxdcdrawtext}

-\func{void}{DrawText}{\param{const wxString\& }{text}, \param{wxCoord}{ x}, \param{wxCoord}{ y}}
+\func{void}{DrawText}{\param{const wxString\& }{text}, \param{wxCoord}{ x}, \param{wxCoord}{ y}, \param{long}{ flags = wxDC_DEFAULT_FLAG}}

 Draws a text string at the specified point, using the current text font,
@@ -516,4 +516,11 @@
 text more precisely.

+The \arg{flags} parameter can be a combination of the following values:
+\twocolwidtha{7cm}
+\begin{twocollist}\itemsep=0pt
+\twocolitem{\windowstyle{wxDC\_FORCE\_SPACE\_UNDERLINE}}{Some native backends (only Pango currently) may not underline the spaces in the given string even if the selected font in this DC is underlined (actually Pango does underline spaces between words but skips leading/trailing spaces of the given string). To force the underline also when using these backends, specify this flag.}
+\twocolitem{\windowstyle{wxDC\_DEFAULT\_FLAG}}{The default flags for DrawText: currently it's just zero.}
+\end{twocollist}
+
 {\bf NB:} under wxGTK the current
 \helpref{logical function}{wxdcgetlogicalfunction} is used by this function
Index: include/wx/dc.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dc.h,v
retrieving revision 1.79
diff -u2 -r1.79 include/wx/dc.h
--- include/wx/dc.h
+++ include/wx/dc.h
@@ -94,4 +94,15 @@
 // ---------------------------------------------------------------------------

+enum wxDrawTextFlag
+{
+    // tells wxDC to force underlining even for [leading|trailing] spaces
+    // even if native backend wouldn't underline them.
+    // Currently ignored under all platform except for GTK+2 with pango.
+    wxDC_FORCE_SPACE_UNDERLINE = 1,
+
+    // the default value of flags for DoDrawText()
+    wxDC_DEFAULT_FLAG = 0
+};
+
 // ---------------------------------------------------------------------------
 // wxDC is the device context - object on which any drawing is done
@@ -277,8 +288,8 @@
         { DoDrawBitmap(bmp, pt.x, pt.y, useMask); }

-    void DrawText(const wxString& text, wxCoord x, wxCoord y)
-        { DoDrawText(text, x, y); }
-    void DrawText(const wxString& text, const wxPoint& pt)
-        { DoDrawText(text, pt.x, pt.y); }
+    void DrawText(const wxString& text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG)
+        { DoDrawText(text, x, y, flags); }
+    void DrawText(const wxString& text, const wxPoint& pt, long flags = wxDC_DEFAULT_FLAG)
+        { DoDrawText(text, pt.x, pt.y, flags); }

     void DrawRotatedText(const wxString& text, wxCoord x, wxCoord y, double angle)
@@ -685,5 +696,5 @@
                               bool useMask = false) = 0;

-    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y) = 0;
+    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG) = 0;
     virtual void DoDrawRotatedText(const wxString& text,
                                    wxCoord x, wxCoord y, double angle) = 0;
Index: include/wx/dcmirror.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dcmirror.h,v
retrieving revision 1.6
diff -u2 -r1.6 include/wx/dcmirror.h
--- include/wx/dcmirror.h
+++ include/wx/dcmirror.h
@@ -194,8 +194,8 @@
     }

-    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y)
+    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG)
     {
         // this is never mirrored
-        m_dc.DoDrawText(text, x, y);
+        m_dc.DoDrawText(text, x, y, flags);
     }

Index: include/wx/cocoa/dc.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/cocoa/dc.h,v
retrieving revision 1.11
diff -u2 -r1.11 include/wx/cocoa/dc.h
--- include/wx/cocoa/dc.h
+++ include/wx/cocoa/dc.h
@@ -147,5 +147,5 @@
                               bool useMask = false);

-    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y);
+    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG);
     virtual void DoDrawRotatedText(const wxString& text, wxCoord x, wxCoord y,
                                    double angle);
Index: include/wx/dfb/dc.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dfb/dc.h,v
retrieving revision 1.1
diff -u2 -r1.1 include/wx/dfb/dc.h
--- include/wx/dfb/dc.h
+++ include/wx/dfb/dc.h
@@ -176,5 +176,5 @@
                               bool useMask = false);

-    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y);
+    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG);
     virtual void DoDrawRotatedText(const wxString& text, wxCoord x, wxCoord y,
                                    double angle);
Index: include/wx/generic/dcpsg.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/generic/dcpsg.h,v
retrieving revision 1.37
diff -u2 -r1.37 include/wx/generic/dcpsg.h
--- include/wx/generic/dcpsg.h
+++ include/wx/generic/dcpsg.h
@@ -118,5 +118,5 @@
     void DoDrawIcon(const wxIcon& icon, wxCoord x, wxCoord y);
     void DoDrawBitmap(const wxBitmap& bitmap, wxCoord x, wxCoord y, bool useMask = false);
-    void DoDrawText(const wxString& text, wxCoord x, wxCoord y);
+    void DoDrawText(const wxString& text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG);
     void DoDrawRotatedText(const wxString& text, wxCoord x, wxCoord y, double angle);
     void DoSetClippingRegion(wxCoord x, wxCoord y, wxCoord width, wxCoord height);
Index: include/wx/gtk/dcclient.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/dcclient.h,v
retrieving revision 1.43
diff -u2 -r1.43 include/wx/gtk/dcclient.h
--- include/wx/gtk/dcclient.h
+++ include/wx/gtk/dcclient.h
@@ -62,5 +62,6 @@
                          int logical_func = wxCOPY, bool useMask = false, wxCoord xsrcMask = -1, wxCoord ysrcMask = -1 );

-    virtual void DoDrawText( const wxString &text, wxCoord x, wxCoord y );
+    virtual void DoDrawText( const wxString &text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG );
+
     virtual void DoDrawRotatedText(const wxString& text, wxCoord x, wxCoord y,
                                    double angle);
@@ -73,4 +74,5 @@
     virtual void DoSetClippingRegionAsRegion( const wxRegion &region );

+
 public:
     virtual wxCoord GetCharWidth() const;
Index: include/wx/gtk1/dcclient.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk1/dcclient.h,v
retrieving revision 1.41
diff -u2 -r1.41 include/wx/gtk1/dcclient.h
--- include/wx/gtk1/dcclient.h
+++ include/wx/gtk1/dcclient.h
@@ -68,5 +68,5 @@
                          int logical_func = wxCOPY, bool useMask = false, wxCoord xsrcMask = -1, wxCoord ysrcMask = -1 );

-    virtual void DoDrawText( const wxString &text, wxCoord x, wxCoord y );
+    virtual void DoDrawText( const wxString &text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG );
     virtual void DoDrawRotatedText(const wxString& text, wxCoord x, wxCoord y,
                                    double angle);
Index: include/wx/html/htmlcell.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/html/htmlcell.h,v
retrieving revision 1.65
diff -u2 -r1.65 include/wx/html/htmlcell.h
Index: include/wx/mac/carbon/dc.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/dc.h,v
retrieving revision 1.18
diff -u2 -r1.18 include/wx/mac/carbon/dc.h
--- include/wx/mac/carbon/dc.h
+++ include/wx/mac/carbon/dc.h
@@ -261,5 +261,5 @@
                               bool useMask = false);

-    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y);
+    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG);
     virtual void DoDrawRotatedText(const wxString& text, wxCoord x, wxCoord y,
                                    double angle);
Index: include/wx/mac/classic/dc.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/classic/dc.h,v
retrieving revision 1.7
diff -u2 -r1.7 include/wx/mac/classic/dc.h
--- include/wx/mac/classic/dc.h
+++ include/wx/mac/classic/dc.h
@@ -213,5 +213,5 @@
                               bool useMask = false);

-    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y);
+    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG);
     virtual void DoDrawRotatedText(const wxString& text, wxCoord x, wxCoord y,
                                    double angle);
Index: include/wx/mgl/dc.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mgl/dc.h,v
retrieving revision 1.16
diff -u2 -r1.16 include/wx/mgl/dc.h
--- include/wx/mgl/dc.h
+++ include/wx/mgl/dc.h
@@ -191,5 +191,5 @@
                               bool useMask = false);

-    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y);
+    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG);
     virtual void DoDrawRotatedText(const wxString& text, wxCoord x, wxCoord y,
                                    double angle);
Index: include/wx/motif/dcclient.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/motif/dcclient.h,v
retrieving revision 1.38
diff -u2 -r1.38 include/wx/motif/dcclient.h
--- include/wx/motif/dcclient.h
+++ include/wx/motif/dcclient.h
@@ -121,5 +121,5 @@
     virtual void DoCrossHair(wxCoord x, wxCoord y);

-    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y);
+    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG);
     virtual void DoDrawRotatedText(const wxString &text, wxCoord x, wxCoord y, double angle);

Index: include/wx/msw/dc.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/dc.h,v
retrieving revision 1.55
diff -u2 -r1.55 include/wx/msw/dc.h
--- include/wx/msw/dc.h
+++ include/wx/msw/dc.h
@@ -199,5 +199,5 @@
                               bool useMask = false);

-    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y);
+    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG);
     virtual void DoDrawRotatedText(const wxString& text, wxCoord x, wxCoord y,
                                    double angle);
Index: include/wx/os2/dc.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/dc.h,v
retrieving revision 1.28
diff -u2 -r1.28 include/wx/os2/dc.h
--- include/wx/os2/dc.h
+++ include/wx/os2/dc.h
@@ -275,4 +275,5 @@
                             ,wxCoord         vX
                             ,wxCoord         vY
+                            ,long            flags = wxDC_DEFAULT_FLAG
                            );
     virtual void DoDrawRotatedText( const wxString& rsText
Index: include/wx/palmos/dc.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/dc.h,v
retrieving revision 1.4
diff -u2 -r1.4 include/wx/palmos/dc.h
--- include/wx/palmos/dc.h
+++ include/wx/palmos/dc.h
@@ -168,5 +168,5 @@
                               bool useMask = FALSE);

-    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y);
+    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG);
     virtual void DoDrawRotatedText(const wxString& text, wxCoord x, wxCoord y,
                                    double angle);
Index: include/wx/x11/dcclient.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/x11/dcclient.h,v
retrieving revision 1.14
diff -u2 -r1.14 include/wx/x11/dcclient.h
--- include/wx/x11/dcclient.h
+++ include/wx/x11/dcclient.h
@@ -67,5 +67,5 @@
     virtual void DoCrossHair(wxCoord x, wxCoord y);

-    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y);
+    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y, long flags = wxDC_DEFAULT_FLAG);
     virtual void DoDrawRotatedText(const wxString &text, wxCoord x, wxCoord y, double angle);

Index: src/dfb/dc.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/dfb/dc.cpp,v
retrieving revision 1.1
diff -u2 -r1.1 src/dfb/dc.cpp
--- src/dfb/dc.cpp
+++ src/dfb/dc.cpp
@@ -277,5 +277,5 @@
 }

-void wxDC::DoDrawText(const wxString& text, wxCoord x, wxCoord y)
+void wxDC::DoDrawText(const wxString& text, wxCoord x, wxCoord y, long WXUNUSED(flags))
 {
     wxCHECK_RET( Ok(), wxT("invalid dc") );
@@ -647,5 +647,5 @@
 {
 #warning "FIXME"
-    return false;
+    return false;
 #if 0
     wxCHECK_MSG( Ok(), false, wxT("invalid dc") );
Index: src/generic/dcpsg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/dcpsg.cpp,v
retrieving revision 1.148
diff -u2 -r1.148 src/generic/dcpsg.cpp
--- src/generic/dcpsg.cpp
+++ src/generic/dcpsg.cpp
@@ -1151,5 +1151,5 @@
 }

-void wxPostScriptDC::DoDrawText( const wxString& text, wxCoord x, wxCoord y )
+void wxPostScriptDC::DoDrawText( const wxString& text, wxCoord x, wxCoord y, long WXUNUSED(flags) )
 {
     wxCHECK_RET( m_ok, wxT("invalid postscript dc") );
Index: src/gtk/dcclient.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/dcclient.cpp,v
retrieving revision 1.232
diff -u2 -r1.232 src/gtk/dcclient.cpp
--- src/gtk/dcclient.cpp
+++ src/gtk/dcclient.cpp
@@ -1393,5 +1393,5 @@
 }

-void wxWindowDC::DoDrawText( const wxString &text, wxCoord x, wxCoord y )
+void wxWindowDC::DoDrawText( const wxString &text, wxCoord x, wxCoord y, long flags )
 {
     wxCHECK_RET( Ok(), wxT("invalid window dc") );
@@ -1408,6 +1408,26 @@
     wxCHECK_RET( m_fontdesc, wxT("no Pango font description") );

+    // Unfortunately Pango does not behave as GDI when we ask it to render
+    // a PangoLayout which has leading/trailing spaces with underlined font:
+    // in this case, in fact, Pango does not underline the spaces.
+    // This can be a problem; e.g. wxHTML rendering of underlined text relies on
+    // this behaviour. To workaround this problem, when wxDC_FORCE_SPACE_UNDERLINE
+    // is in the given flags, we draw the underline ourselves
     bool underlined = m_font.Ok() && m_font.GetUnderlined();

+    // should we use our "underline hack" ?
+    // IMPORTANT: we could do, besides the wxDC_FORCE_SPACE_UNDERLINE-presence check
+    //            on 'flags', also a test on 'text' and set 'underlinehack' to true
+    //            only if 'text' has leading and/or trailing space(s).
+    //            However this would result in unexpected results (typically holes in
+    //            underlines) when using DoDrawText() with strings of words with
+    //            trailing/leading spaces and strings without them to render a single
+    //            line of text; this is done e.g. by wxHTML.
+    //            To fix this, when wxDC_FORCE_SPACE_UNDERLINE is given, our hack is
+    //            always used, no matter if the given string has trailing/leading spaces;
+    //            this ensures an homogeneous rendering.
+    bool underlinehack = (flags & wxDC_FORCE_SPACE_UNDERLINE) != 0 && underlined;
+    bool underlinepango = !underlinehack && underlined;
+
     const wxCharBuffer data = wxGTK_CONV( text );
     if ( !data )
@@ -1416,5 +1436,5 @@
     pango_layout_set_text( m_layout, data, datalen);

-    if (underlined)
+    if (underlinepango)
     {
         PangoAttrList *attrs = pango_attr_list_new();
@@ -1428,30 +1448,53 @@

     int w,h;
+    gint oldSize;

-    if (fabs(m_scaleY - 1.0) > 0.00001)
+    bool scaling = fabs(m_scaleY - 1.0) > 0.00001;
+    if (scaling)
     {
-         // If there is a user or actually any scale applied to
-         // the device context, scale the font.
+        // If there is a user or actually any scale applied to
+        // the device context, scale the font.

-         // scale font description
-         gint oldSize = pango_font_description_get_size( m_fontdesc );
-         double size = oldSize;
-         size = size * m_scaleY;
-         pango_font_description_set_size( m_fontdesc, (gint)size );
+        // scale font description
+        oldSize = pango_font_description_get_size( m_fontdesc );
+        double size = oldSize;
+        size = size * m_scaleY;
+        pango_font_description_set_size( m_fontdesc, (gint)size );

-         // actually apply scaled font
-         pango_layout_set_font_description( m_layout, m_fontdesc );
+        // actually apply scaled font
+        pango_layout_set_font_description( m_layout, m_fontdesc );
+    }
+
+    pango_layout_get_pixel_size( m_layout, &w, &h );

-         pango_layout_get_pixel_size( m_layout, &w, &h );
-         if ( m_backgroundMode == wxSOLID )
-         {
-            gdk_gc_set_foreground(m_textGC, m_textBackgroundColour.GetColor());
-            gdk_draw_rectangle(m_window, m_textGC, TRUE, x, y, w, h);
-            gdk_gc_set_foreground(m_textGC, m_textForegroundColour.GetColor());
-         }
+    if ( m_backgroundMode == wxSOLID )
+    {
+        gdk_gc_set_foreground(m_textGC, m_textBackgroundColour.GetColor());
+        gdk_draw_rectangle(m_window, m_textGC, TRUE, x, y, w, h);
+        gdk_gc_set_foreground(m_textGC, m_textForegroundColour.GetColor());
+    }

-         // Draw layout.
-         gdk_draw_layout( m_window, m_textGC, x, y, m_layout );
+    if (underlinehack)
+    {
+        // get some metrics for the currently selected font
+        PangoFontMetrics *metrics = pango_context_get_metrics(m_context, m_fontdesc, NULL);
+        int underline_thickness = pango_font_metrics_get_underline_thickness(metrics)/PANGO_SCALE;
+        int underline_position = pango_font_metrics_get_underline_position(metrics)/PANGO_SCALE;
+        int ascent = pango_font_metrics_get_ascent(metrics)/PANGO_SCALE;
+
+        // the logic here is: 'y + ascent' gives the baseline for the selected font;
+        // underline_position, quoting Pango docs, "is the distance above
+        // the baseline of the top of the underline" and thus needs to be subtracted.
+        // The result is an underline which in all tested case coincided always with
+        // Pango's one...
+        gdk_draw_rectangle(m_window, m_textGC, TRUE,
+                           x, y + ascent - underline_position, w, underline_thickness);
+    }

+    // Draw layout.
+    gdk_draw_layout( m_window, m_textGC, x, y, m_layout );
+
+    if (scaling)
+    {
          // reset unscaled size
          pango_font_description_set_size( m_fontdesc, oldSize );
@@ -1460,18 +1503,6 @@
          pango_layout_set_font_description( m_layout, m_fontdesc );
     }
-    else
-    {
-        pango_layout_get_pixel_size( m_layout, &w, &h );
-        if ( m_backgroundMode == wxSOLID )
-        {
-            gdk_gc_set_foreground(m_textGC, m_textBackgroundColour.GetColor());
-            gdk_draw_rectangle(m_window, m_textGC, TRUE, x, y, w, h);
-            gdk_gc_set_foreground(m_textGC, m_textForegroundColour.GetColor());
-        }
-        // Draw layout.
-        gdk_draw_layout( m_window, m_textGC, x, y, m_layout );
-    }

-    if (underlined)
+    if (underlinepango)
     {
         // undo underline attributes setting:
Index: src/gtk1/dcclient.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk1/dcclient.cpp,v
retrieving revision 1.215
diff -u2 -r1.215 src/gtk1/dcclient.cpp
--- src/gtk1/dcclient.cpp
+++ src/gtk1/dcclient.cpp
@@ -1451,5 +1451,5 @@
 }

-void wxWindowDC::DoDrawText( const wxString &text, wxCoord x, wxCoord y )
+void wxWindowDC::DoDrawText( const wxString &text, wxCoord x, wxCoord y, long WXUNUSED(flags) )
 {
     wxCHECK_RET( Ok(), wxT("invalid window dc") );
Index: src/html/htmlcell.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/html/htmlcell.cpp,v
retrieving revision 1.112
diff -u2 -r1.112 src/html/htmlcell.cpp
--- src/html/htmlcell.cpp
+++ src/html/htmlcell.cpp
@@ -525,5 +525,5 @@
         {
             txt = m_Word.Mid(0, part1);
-            dc.DrawText(txt, x + m_PosX, y + m_PosY);
+            dc.DrawText(txt, x + m_PosX, y + m_PosY, wxDC_FORCE_SPACE_UNDERLINE);
             dc.GetTextExtent(txt, &w, &h);
             ofs += w;
@@ -533,5 +533,5 @@

         txt = m_Word.Mid(part1, part2-part1);
-        dc.DrawText(txt, ofs + x + m_PosX, y + m_PosY);
+        dc.DrawText(txt, ofs + x + m_PosX, y + m_PosY, wxDC_FORCE_SPACE_UNDERLINE);

         if ( (size_t)part2 < m_Word.length() )
@@ -541,5 +541,5 @@
             SwitchSelState(dc, info, false);
             txt = m_Word.Mid(part2);
-            dc.DrawText(txt, ofs + x + m_PosX, y + m_PosY);
+            dc.DrawText(txt, ofs + x + m_PosX, y + m_PosY, wxDC_FORCE_SPACE_UNDERLINE);
         }
         else
@@ -560,5 +560,5 @@
             SwitchSelState(dc, info, false);
         }
-        dc.DrawText(m_Word, x + m_PosX, y + m_PosY);
+        dc.DrawText(m_Word, x + m_PosX, y + m_PosY, wxDC_FORCE_SPACE_UNDERLINE);
         drawSelectionAfterCell = (selstate != wxHTML_SEL_OUT);
     }
Index: src/mgl/dc.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mgl/dc.cpp,v
retrieving revision 1.36
diff -u2 -r1.36 src/mgl/dc.cpp
--- src/mgl/dc.cpp
+++ src/mgl/dc.cpp
@@ -691,5 +691,5 @@
 }

-void wxDC::DoDrawText(const wxString& text, wxCoord x, wxCoord y)
+void wxDC::DoDrawText(const wxString& text, wxCoord x, wxCoord y, long WXUNUSED(flags))
 {
     m_MGLDC->makeCurrent(); // will go away with MGL6.0
Index: src/motif/dcclient.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/dcclient.cpp,v
retrieving revision 1.77
diff -u2 -r1.77 src/motif/dcclient.cpp
--- src/motif/dcclient.cpp
+++ src/motif/dcclient.cpp
@@ -1013,5 +1013,5 @@
 }

-void wxWindowDC::DoDrawText( const wxString &text, wxCoord x, wxCoord y )
+void wxWindowDC::DoDrawText( const wxString &text, wxCoord x, wxCoord y, long WXUNUSED(flags) )
 {
     wxCHECK_RET( Ok(), "invalid dc" );
Index: src/msw/dc.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/dc.cpp,v
retrieving revision 1.208
diff -u2 -r1.208 src/msw/dc.cpp
--- src/msw/dc.cpp
+++ src/msw/dc.cpp
@@ -919,5 +919,5 @@
         // to have the same size regardless of which pen is used - adjust

-        // I wonder if this shouldnt be done after the LOG2DEV() conversions. RR.
+        // I wonder if this shouldnt be done after the LOG2DEV() conversions. RR.
         if ( m_pen.GetStyle() == wxTRANSPARENT )
         {
@@ -1285,5 +1285,5 @@
 }

-void wxDC::DoDrawText(const wxString& text, wxCoord x, wxCoord y)
+void wxDC::DoDrawText(const wxString& text, wxCoord x, wxCoord y, long WXUNUSED(flags))
 {
     WXMICROWIN_CHECK_HDC
Index: src/os2/dc.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/dc.cpp,v
retrieving revision 1.81
diff -u2 -r1.81 src/os2/dc.cpp
--- src/os2/dc.cpp
+++ src/os2/dc.cpp
@@ -1683,4 +1683,5 @@
 , wxCoord                           vX
 , wxCoord                           vY
+, long WXUNUSED(flags)
 )
 {
Index: src/palmos/dc.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/palmos/dc.cpp,v
retrieving revision 1.5
diff -u2 -r1.5 src/palmos/dc.cpp
--- src/palmos/dc.cpp
+++ src/palmos/dc.cpp
@@ -236,5 +236,5 @@
 }

-void wxDC::DoDrawText(const wxString& text, wxCoord x, wxCoord y)
+void wxDC::DoDrawText(const wxString& text, wxCoord x, wxCoord y, long WXUNUSED(flags))
 {
 }
Index: src/x11/dcclient.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/x11/dcclient.cpp,v
retrieving revision 1.50
diff -u2 -r1.50 src/x11/dcclient.cpp
--- src/x11/dcclient.cpp
+++ src/x11/dcclient.cpp
@@ -1524,5 +1524,5 @@
 }

-void wxWindowDC::DoDrawText( const wxString &text, wxCoord x, wxCoord y )
+void wxWindowDC::DoDrawText( const wxString &text, wxCoord x, wxCoord y, long WXUNUSED(flags) )
 {
     wxCHECK_RET( Ok(), wxT("invalid window dc") );

 	  	 
