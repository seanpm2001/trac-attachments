Index: src/mac/carbon/renderer.cpp
===================================================================
--- src/mac/carbon/renderer.cpp	(revision 48514)
+++ src/mac/carbon/renderer.cpp	(working copy)
@@ -62,6 +62,11 @@
                                         const wxRect& rect,
                                         int flags = 0);
 
+    virtual void DrawCheckBox(wxWindow *win,
+                              wxDC& dc,
+                              const wxRect& rect,
+                              int flags = 0);
+
     virtual void DrawPushButton(wxWindow *win,
                                 wxDC& dc,
                                 const wxRect& rect,
@@ -456,6 +461,8 @@
             drawInfo.kind = kind;
             drawInfo.state = (flags & wxCONTROL_DISABLED) ? kThemeStateInactive : kThemeStateActive;
             drawInfo.value = (flags & wxCONTROL_SELECTED) ? kThemeButtonOn : kThemeButtonOff;
+            if (flags & wxCONTROL_UNDETERMINED)
+                drawInfo.value = kThemeButtonMixed;
             drawInfo.adornment = adornment;
 
             HIThemeDrawButton( &headerRect, &drawInfo, cgContext, kHIThemeOrientationNormal, &labelRect );
@@ -488,6 +495,19 @@
 }
 
 void
+wxRendererMac::DrawCheckBox(wxWindow *win,
+                            wxDC& dc,
+                            const wxRect& rect,
+                            int flags)
+{
+    if (flags & wxCONTROL_CHECKED)
+        flags |= wxCONTROL_SELECTED;
+
+    DrawMacThemeButton(win, dc, rect, flags,
+                       kThemeCheckBox, kThemeAdornmentNone);
+}
+
+void
 wxRendererMac::DrawPushButton(wxWindow *win,
                               wxDC& dc,
                               const wxRect& rect,
Index: samples/render/render.cpp
===================================================================
--- samples/render/render.cpp	(revision 48514)
+++ samples/render/render.cpp	(working copy)
@@ -135,6 +135,20 @@
 
         wxRendererNative::Get().DrawHeaderButton(this, dc,
                                                  wxRect(20, 70, 100, 60));
+
+        // Draw some check boxes in various states
+        dc.SetBrush(*wxBLACK_BRUSH);
+        dc.SetTextForeground(*wxBLACK);
+        dc.DrawText(_T("Checkbox Drawn with native renderer"), 10, 150);
+        // Checked
+        wxRendererNative::Get().DrawCheckBox(this, dc, wxRect(20, 170, 16, 16), wxCONTROL_CHECKED);
+        // Undetermined
+        wxRendererNative::Get().DrawCheckBox(this, dc, wxRect(40, 170, 16, 16), wxCONTROL_CHECKABLE);
+        // Unchecked
+        wxRendererNative::Get().DrawCheckBox(this, dc, wxRect(60, 170, 16, 16), 0);
+        // Checked and Disabled
+        wxRendererNative::Get().DrawCheckBox(this, dc, wxRect(80, 170, 16, 16), wxCONTROL_CHECKED | wxCONTROL_DISABLED);
+
     }
 
     DECLARE_EVENT_TABLE()

 	  	 
