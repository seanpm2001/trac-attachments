Index: docs/latex/wx/apptraits.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/apptraits.tex,v
retrieving revision 1.5
diff -bu2 -r1.5 docs/latex/wx/apptraits.tex
--- docs/latex/wx/apptraits.tex
+++ docs/latex/wx/apptraits.tex
@@ -84,4 +84,6 @@
 fills the given pointers with the values of the major and minor digits
 of the native toolkit currently used.
+The version numbers returned are thus detected at run-time and not compile-time
+(except when this is not possible e.g. wxMotif).
 
 E.g. if your program is using wxGTK port this function will return wxPORT\_GTK and
Index: docs/latex/wx/platinfo.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/platinfo.tex,v
retrieving revision 1.5
diff -bu2 -r1.5 docs/latex/wx/platinfo.tex
--- docs/latex/wx/platinfo.tex
+++ docs/latex/wx/platinfo.tex
@@ -93,5 +93,6 @@
     wxPORT_COCOA    = 1 << 8,       // wxCocoa, using Cocoa NextStep/Mac API
     wxPORT_WINCE    = 1 << 9,       // wxWinCE, toolkit is WinCE SDK API
-    wxPORT_PALMOS   = 1 << 10       // wxPalmOS, toolkit is PalmOS API
+    wxPORT_PALMOS   = 1 << 10,      // wxPalmOS, toolkit is PalmOS API
+    wxPORT_DFB      = 1 << 11       // wxDFB, using wxUniversal
 };
 \end{verbatim}
@@ -136,4 +137,6 @@
 
 Initializes the instance with the values corresponding to the currently running platform.
+This is a fast operation because it only requires to copy the values internally cached for the
+currently running platform (see also \helpref{Get}{wxplatforminfoget}).
 
 \func{}{wxPlatformInfo}{\param{wxPortId }{pid = wxPORT\_UNKNOWN}, \param{int }{tkMajor = -1}, \param{int }{tkMinor = -1}, \param{wxOperatingSystemId }{id = wxOS\_UNKNOWN}, \param{int }{osMajor = -1}, \param{int }{osMinor = -1}, \param{wxArchitecture }{arch = wxARCH\_INVALID}, \param{wxEndianness }{endian = wxENDIAN\_INVALID}}
@@ -170,4 +173,11 @@
 
 
+\membersection{wxPlatformInfo::Get}\label{wxplatforminfoget}
+
+\func{static const wxPlatformInfo &}{Get}{\void}
+
+Returns the global wxPlatformInfo object, initialized with the values for the currently running platform.
+
+
 \membersection{wxPlatformInfo::GetArch}\label{wxplatforminfogetarch}
 
@@ -229,5 +239,6 @@
 \constfunc{int}{GetOSMajorVersion}{\void}
 
-Returns the major version of the OS associated with this wxPlatformInfo instance.
+Returns the run-time major version of the OS associated with this wxPlatformInfo instance.
+See \helpref{wxGetOsVersion}{wxgetosversion} for more info.
 
 \wxheading{See also}
@@ -240,5 +251,8 @@
 \constfunc{int}{GetOSMinorVersion}{\void}
 
-Returns the minor version of the OS associated with this wxPlatformInfo instance.
+Returns the run-time minor version of the OS associated with this wxPlatformInfo instance.
+See \helpref{wxGetOsVersion}{wxgetosversion} for more info.
+
+\wxheading{See also}
 
 \helpref{CheckOSVersion}{wxplatforminfocheckosversion}
@@ -341,6 +355,9 @@
 \constfunc{int}{GetToolkitMajorVersion}{\void}
 
-Returns the major version of the toolkit associated with this wxPlatformInfo instance.
-Note that if {GetPortId}{wxplatforminfogetportid} returns wxPORT\_BASE, then this value is zero (unless externally modified with SetToolkitVersion); that is, no native toolkit is in use.
+Returns the run-time major version of the toolkit associated with this wxPlatformInfo instance.
+Note that if \helpref{GetPortId}{wxplatforminfogetportid} returns wxPORT\_BASE, then this value is zero (unless externally modified with \helpref{SetToolkitVersion}{wxplatforminfosettoolkitversion}); that is, no native toolkit is in use.
+
+See \helpref{wxAppTraits::GetToolkitVersion}{wxapptraitsgettoolkitversion} for more info.
+
 
 \wxheading{See also}
@@ -353,7 +370,8 @@
 \constfunc{int}{GetToolkitMinorVersion}{\void}
 
-Returns the minor version of the toolkit associated with this wxPlatformInfo instance.
-Note that if {GetPortId}{wxplatforminfogetportid} returns wxPORT\_BASE, then this value is zero (unless externally modified with SetToolkitVersion); that is, no native toolkit is in use.
+Returns the run-time minor version of the toolkit associated with this wxPlatformInfo instance.
+Note that if \helpref{GetPortId}{wxplatforminfogetportid} returns wxPORT\_BASE, then this value is zero (unless externally modified with \helpref{SetToolkitVersion}{wxplatforminfosettoolkitversion}); that is, no native toolkit is in use.
 
+See \helpref{wxAppTraits::GetToolkitVersion}{wxapptraitsgettoolkitversion} for more info.
 \wxheading{See also}
 
Index: include/wx/apptrait.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/apptrait.h,v
retrieving revision 1.39
diff -bu2 -r1.39 include/wx/apptrait.h
--- include/wx/apptrait.h
+++ include/wx/apptrait.h
@@ -111,5 +111,6 @@
 #endif
 
-    // return information about the (native) toolkit currently used;
+    // return information about the (native) toolkit currently used and its
+    // runtime (not compile-time) version.
     // returns wxPORT_BASE for console applications and one of the remaining
     // wxPORT_* values for GUI applications.
Index: include/wx/platinfo.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/platinfo.h,v
retrieving revision 1.6
diff -bu2 -r1.6 include/wx/platinfo.h
--- include/wx/platinfo.h
+++ include/wx/platinfo.h
@@ -131,4 +131,9 @@
         { return !(*this == t); }
 
+    // Gets a wxPlatformInfo already initialized with the values for
+    // the currently running platform.
+    static const wxPlatformInfo &Get();
+
+
 
     // string -> enum conversions
@@ -247,4 +252,7 @@
     }
 
+    void InitForCurrentPlatform();
+
+
     // OS stuff
     // -----------------
Index: src/common/dynlib.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/dynlib.cpp,v
retrieving revision 1.116
diff -bu2 -r1.116 src/common/dynlib.cpp
--- src/common/dynlib.cpp
+++ src/common/dynlib.cpp
@@ -248,5 +248,5 @@
     if ( cat == wxDL_PLUGIN_GUI )
     {
-        suffix = wxPlatformInfo().GetPortIdShortName();
+        suffix = wxPlatformInfo::Get().GetPortIdShortName();
     }
 #if wxUSE_UNICODE
Index: src/common/intl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/intl.cpp,v
retrieving revision 1.195
diff -bu2 -r1.195 src/common/intl.cpp
--- src/common/intl.cpp
+++ src/common/intl.cpp
@@ -1592,5 +1592,5 @@
     if ( bOk )
     {
-      wxString port(wxPlatformInfo().GetPortIdName());
+      wxString port(wxPlatformInfo::Get().GetPortIdName());
       if ( !port.empty() )
       {
Index: src/common/platinfo.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/platinfo.cpp,v
retrieving revision 1.6
diff -u -r1.6 platinfo.cpp
--- src/common/platinfo.cpp	2006/08/27 09:41:04	1.6
+++ src/common/platinfo.cpp	2006/10/06 15:48:40
@@ -33,6 +33,12 @@
 
 #include "wx/apptrait.h"
 
+// global object
+// VERY IMPORTANT: do not use the default constructor since it would
+//                 try to init the wxPlatformInfo instance using
+//                 gs_platInfo itself!
+static wxPlatformInfo gs_platInfo(wxPORT_UNKNOWN);
+
 // ----------------------------------------------------------------------------
 // constants
 // ----------------------------------------------------------------------------
@@ -117,26 +123,8 @@
 
 wxPlatformInfo::wxPlatformInfo()
 {
-    // autodetect all informations
-    const wxAppTraits * const traits = wxTheApp ? wxTheApp->GetTraits() : NULL;
-    if ( !traits )
-    {
-        wxFAIL_MSG( _T("failed to initialize wxPlatformInfo") );
-
-        m_port = wxPORT_UNKNOWN;
-        m_usingUniversal = false;
-        m_tkVersionMajor =
-        m_tkVersionMinor = 0;
-    }
-    else
-    {
-        m_port = traits->GetToolkitVersion(&m_tkVersionMajor, &m_tkVersionMinor);
-        m_usingUniversal = traits->IsUsingUniversalWidgets();
-    }
-
-    m_os = wxGetOsVersion(&m_osVersionMajor, &m_osVersionMinor);
-    m_endian = wxIsPlatformLittleEndian() ? wxENDIAN_LITTLE : wxENDIAN_BIG;
-    m_arch = wxIsPlatform64Bit() ? wxARCH_64 : wxARCH_32;
+    // just copy platform info for currently running platform
+    *this = gs_platInfo;
 }
 
 wxPlatformInfo::wxPlatformInfo(wxPortId pid, int tkMajor, int tkMinor,
@@ -170,6 +158,45 @@
            m_arch == t.m_arch &&
            m_endian == t.m_endian;
 }
+
+void wxPlatformInfo::InitForCurrentPlatform()
+{
+    // autodetect all informations
+    const wxAppTraits * const traits = wxTheApp ? wxTheApp->GetTraits() : NULL;
+    if ( !traits )
+    {
+        wxFAIL_MSG( _T("failed to initialize wxPlatformInfo") );
+
+        m_port = wxPORT_UNKNOWN;
+        m_usingUniversal = false;
+        m_tkVersionMajor =
+                m_tkVersionMinor = 0;
+    }
+    else
+    {
+        m_port = traits->GetToolkitVersion(&m_tkVersionMajor, &m_tkVersionMinor);
+        m_usingUniversal = traits->IsUsingUniversalWidgets();
+    }
+
+    m_os = wxGetOsVersion(&m_osVersionMajor, &m_osVersionMinor);
+    m_endian = wxIsPlatformLittleEndian() ? wxENDIAN_LITTLE : wxENDIAN_BIG;
+    m_arch = wxIsPlatform64Bit() ? wxARCH_64 : wxARCH_32;
+}
+
+/* static */
+const wxPlatformInfo &wxPlatformInfo::Get()
+{
+    static bool initialized = false;
+    if (!initialized)
+    {
+        gs_platInfo.InitForCurrentPlatform();
+        initialized = true;
+    }
+
+    return gs_platInfo;
+}
+
+
 
 // ----------------------------------------------------------------------------
 // wxPlatformInfo - enum -> string conversions
Index: src/common/wincmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/wincmn.cpp,v
retrieving revision 1.280
diff -bu2 -r1.280 src/common/wincmn.cpp
--- src/common/wincmn.cpp
+++ src/common/wincmn.cpp
@@ -2200,7 +2200,8 @@
         wxString msg;
         msg.Printf(_T("wxWidgets Library (%s port)\n")
-                   _T("Version %d.%d.%d%s%s, compiled at %s %s%s\n")
+                   _T("Version %d.%d.%d%s%s, compiled at %s %s\n")
+                   _T("Runtime version of toolkit used is %d.%d.%s\n")
                    _T("Copyright (c) 1995-2006 wxWidgets team"),
-                   wxPlatformInfo().GetPortIdName().c_str(),
+                   wxPlatformInfo::Get().GetPortIdName().c_str(),
                    wxMAJOR_VERSION,
                    wxMINOR_VERSION,
@@ -2218,6 +2219,8 @@
                    __TDATE__,
                    __TTIME__,
+                   wxPlatformInfo::Get().GetToolkitMajorVersion(),
+                   wxPlatformInfo::Get().GetToolkitMinorVersion(),
 #ifdef __WXGTK__
-                   wxString::Format(_T("\nagainst GTK+ %d.%d.%d. Runtime GTK+ version: %d.%d.%d"), GTK_MAJOR_VERSION, GTK_MINOR_VERSION, GTK_MICRO_VERSION, gtk_major_version, gtk_minor_version, gtk_micro_version).c_str()
+                   wxString::Format(_T("\nThe compile-time GTK+ version is %d.%d.%d."), GTK_MAJOR_VERSION, GTK_MINOR_VERSION, GTK_MICRO_VERSION).c_str()
 #else
                    wxEmptyString

 	  	 
