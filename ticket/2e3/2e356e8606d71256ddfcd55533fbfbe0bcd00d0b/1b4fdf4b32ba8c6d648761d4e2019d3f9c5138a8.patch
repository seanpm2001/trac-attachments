Index: docs/latex/wx/apptraits.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/apptraits.tex,v
retrieving revision 1.5
diff -u2 -r1.5 docs/latex/wx/apptraits.tex
--- docs/latex/wx/apptraits.tex
+++ docs/latex/wx/apptraits.tex
@@ -84,4 +84,6 @@
 fills the given pointers with the values of the major and minor digits
 of the native toolkit currently used.
+The version numbers returned are thus detected at run-time and not compile-time
+(except when this is not possible e.g. wxMotif).

 E.g. if your program is using wxGTK port this function will return wxPORT\_GTK and
Index: docs/latex/wx/function.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/function.tex,v
retrieving revision 1.252
diff -u2 -r1.252 docs/latex/wx/function.tex
--- docs/latex/wx/function.tex
+++ docs/latex/wx/function.tex
@@ -1410,4 +1410,5 @@

 Gets the version and the operating system ID for currently running OS.
+The version returned is detected at run-time and not compile-time.
 See \helpref{wxPlatformInfo}{wxplatforminfo} for more details about wxOperatingSystemId.

Index: docs/latex/wx/platinfo.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/platinfo.tex,v
retrieving revision 1.3
diff -u2 -r1.3 docs/latex/wx/platinfo.tex
--- docs/latex/wx/platinfo.tex
+++ docs/latex/wx/platinfo.tex
@@ -93,5 +93,6 @@
     wxPORT_COCOA    = 1 << 8,       // wxCocoa, using Cocoa NextStep/Mac API
     wxPORT_WINCE    = 1 << 9,       // wxWinCE, toolkit is WinCE SDK API
-    wxPORT_PALMOS   = 1 << 10       // wxPalmOS, toolkit is PalmOS API
+    wxPORT_PALMOS   = 1 << 10,      // wxPalmOS, toolkit is PalmOS API
+    wxPORT_DFB      = 1 << 11       // wxDFB, using wxUniversal
 };
 \end{verbatim}
@@ -136,4 +137,6 @@

 Initializes the instance with the values corresponding to the currently running platform.
+Since this initialization may take a variable time depending on the platform, if you need to
+get info about the running platform you should use \helpref{Get}{wxplatforminfoget}

 \func{}{wxPlatformInfo}{\param{wxPortId }{pid = wxPORT\_UNKNOWN}, \param{int }{tkMajor = -1}, \param{int }{tkMinor = -1}, \param{wxOperatingSystemId }{id = wxOS\_UNKNOWN}, \param{int }{osMajor = -1}, \param{int }{osMinor = -1}, \param{wxArchitecture }{arch = wxARCH\_INVALID}, \param{wxEndianness }{endian = wxENDIAN\_INVALID}}
@@ -144,4 +147,15 @@


+\membersection{wxPlatformInfo::Get}\label{wxplatforminfoget}
+
+\func{static wxPlatformInfo *}{Get}{\void}
+
+Returns the global wxPlatformInfo object, initialized with the values for the currently running platform,
+or creates one if none exists.
+
+Note that using this function is faster than creating a wxPlatformInfo object all the times you need it
+as initialization happens only once for the global object.
+
+
 \membersection{wxPlatformInfo::GetArch}\label{wxplatforminfogetarch}

@@ -205,4 +219,7 @@
 Returns the major version of the OS associated with this wxPlatformInfo instance.

+The version number returned is detected at run-time and not compile-time.
+See \helpref{wxGetOsVersion}{wxgetosversion} for more info.
+
 \membersection{wxPlatformInfo::GetOSMinorVersion}\label{wxplatforminfogetosminorversion}

@@ -211,4 +228,6 @@
 Returns the minor version of the OS associated with this wxPlatformInfo instance.

+The version number returned is detected at run-time and not compile-time.
+See \helpref{wxGetOsVersion}{wxgetosversion} for more info.


@@ -310,5 +329,9 @@

 Returns the major version of the toolkit associated with this wxPlatformInfo instance.
-Note that if {GetPortId}{wxplatforminfogetportid} returns wxPORT\_BASE, then this value is zero (unless externally modified with SetToolkitVersion); that is, no native toolkit is in use.
+Note that if \helpref{GetPortId}{wxplatforminfogetportid} returns wxPORT\_BASE, then this value is zero (unless externally modified with \helpref{SetToolkitVersion}{wxplatforminfosettoolkitversion}); that is, no native toolkit is in use.
+
+The version number returned is detected at run-time and not compile-time.
+See \helpref{wxAppTraits::GetToolkitVersion}{wxapptraitsgettoolkitversion} for more info.
+

 \membersection{wxPlatformInfo::GetToolkitMinorVersion}\label{wxplatforminfogettoolkitminorversion}
@@ -317,6 +340,8 @@

 Returns the minor version of the toolkit associated with this wxPlatformInfo instance.
-Note that if {GetPortId}{wxplatforminfogetportid} returns wxPORT\_BASE, then this value is zero (unless externally modified with SetToolkitVersion); that is, no native toolkit is in use.
+Note that if \helpref{GetPortId}{wxplatforminfogetportid} returns wxPORT\_BASE, then this value is zero (unless externally modified with \helpref{SetToolkitVersion}{wxplatforminfosettoolkitversion}); that is, no native toolkit is in use.

+The version number returned is detected at run-time and not compile-time.
+See \helpref{wxAppTraits::GetToolkitVersion}{wxapptraitsgettoolkitversion} for more info.


Index: include/wx/apptrait.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/apptrait.h,v
retrieving revision 1.39
diff -u2 -r1.39 include/wx/apptrait.h
--- include/wx/apptrait.h
+++ include/wx/apptrait.h
@@ -111,5 +111,6 @@
 #endif

-    // return information about the (native) toolkit currently used;
+    // return information about the (native) toolkit currently used and its
+    // runtime (not compile-time) version.
     // returns wxPORT_BASE for console applications and one of the remaining
     // wxPORT_* values for GUI applications.
Index: include/wx/platinfo.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/platinfo.h,v
retrieving revision 1.5
diff -u2 -r1.5 include/wx/platinfo.h
--- include/wx/platinfo.h
+++ include/wx/platinfo.h
@@ -131,4 +131,9 @@
         { return !(*this == t); }

+    // Gets a wxPlatformInfo already initialized with the values for
+    // the currently running platform.
+    static wxPlatformInfo *Get();
+
+

     // string -> enum conversions
@@ -225,4 +230,9 @@

 protected:
+
+    // singleton instance:
+    static wxPlatformInfo *ms_instance;
+
+
     // OS stuff
     // -----------------
Index: src/common/dynlib.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/dynlib.cpp,v
retrieving revision 1.116
diff -u2 -r1.116 src/common/dynlib.cpp
--- src/common/dynlib.cpp
+++ src/common/dynlib.cpp
@@ -248,5 +248,5 @@
     if ( cat == wxDL_PLUGIN_GUI )
     {
-        suffix = wxPlatformInfo().GetPortIdShortName();
+        suffix = wxPlatformInfo::Get()->GetPortIdShortName();
     }
 #if wxUSE_UNICODE
Index: src/common/intl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/intl.cpp,v
retrieving revision 1.190
diff -u2 -r1.190 src/common/intl.cpp
--- src/common/intl.cpp
+++ src/common/intl.cpp
@@ -1586,5 +1586,5 @@
     if ( bOk )
     {
-      wxString port(wxPlatformInfo().GetPortIdName());
+      wxString port(wxPlatformInfo::Get()->GetPortIdName());
       if ( !port.empty() )
       {
Index: src/common/platinfo.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/platinfo.cpp,v
retrieving revision 1.6
diff -u2 -r1.6 src/common/platinfo.cpp
--- src/common/platinfo.cpp
+++ src/common/platinfo.cpp
@@ -34,4 +34,7 @@
 #include "wx/apptrait.h"

+// static object
+wxPlatformInfo *wxPlatformInfo::ms_instance = NULL;
+
 // ----------------------------------------------------------------------------
 // constants
@@ -172,4 +175,14 @@
 }

+/* static */
+wxPlatformInfo *wxPlatformInfo::Get()
+{
+    if ( !ms_instance )
+        ms_instance = new wxPlatformInfo;
+    return ms_instance;
+}
+
+
+
 // ----------------------------------------------------------------------------
 // wxPlatformInfo - enum -> string conversions
Index: src/common/wincmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/wincmn.cpp,v
retrieving revision 1.272
diff -u2 -r1.272 src/common/wincmn.cpp
--- src/common/wincmn.cpp
+++ src/common/wincmn.cpp
@@ -2170,7 +2170,8 @@
         wxString msg;
         msg.Printf(_T("wxWidgets Library (%s port)\n")
-                   _T("Version %d.%d.%d%s%s, compiled at %s %s%s\n")
+                   _T("Version %d.%d.%d%s%s, compiled at %s %s\n")
+                   _T("Runtime version of toolkit used is %d.%d.%s\n")
                    _T("Copyright (c) 1995-2006 wxWidgets team"),
-                   wxPlatformInfo().GetPortIdName().c_str(),
+                   wxPlatformInfo::Get()->GetPortIdName().c_str(),
                    wxMAJOR_VERSION,
                    wxMINOR_VERSION,
@@ -2188,6 +2189,8 @@
                    __TDATE__,
                    __TTIME__,
+                   wxPlatformInfo::Get()->GetToolkitMajorVersion(),
+                   wxPlatformInfo::Get()->GetToolkitMinorVersion(),
 #ifdef __WXGTK__
-                   wxString::Format(_T("\nagainst GTK+ %d.%d.%d. Runtime GTK+ version: %d.%d.%d"), GTK_MAJOR_VERSION, GTK_MINOR_VERSION, GTK_MICRO_VERSION, gtk_major_version, gtk_minor_version, gtk_micro_version).c_str()
+                   wxString::Format(_T("\nThe compile-time GTK+ version is %d.%d.%d."), GTK_MAJOR_VERSION, GTK_MINOR_VERSION, GTK_MICRO_VERSION).c_str()
 #else
                    wxEmptyString
Index: src/unix/utilsunx.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/utilsunx.cpp,v
retrieving revision 1.141
diff -u2 -r1.141 src/unix/utilsunx.cpp
--- src/unix/utilsunx.cpp
+++ src/unix/utilsunx.cpp
@@ -961,6 +961,18 @@
         if ( fgets(buf, WXSIZEOF(buf), fp) && fgets(buf, WXSIZEOF(buf), fp) )
         {
-            long memTotal, memUsed;
-            sscanf(buf, "Mem: %ld %ld %ld", &memTotal, &memUsed, &memFree);
+            // /proc/meminfo changed its format in kernel 2.6
+            // wxPlatformInfo::Get()->GetOSMinorVersion returns the minor version
+            // of the runtime-detected kernel version and thus it's what we need
+            if (wxPlatformInfo::Get()->GetOSMinorVersion() >= 6)
+            {
+                // values are always expressed in kB !
+                sscanf(buf, "MemFree: %ld", &memFree);
+                memFree *= 1024;        // we want bytes
+            }
+            else
+            {
+                long memTotal, memUsed;
+                sscanf(buf, "Mem: %ld %ld %ld", &memTotal, &memUsed, &memFree);
+            }
         }


 	  	 
