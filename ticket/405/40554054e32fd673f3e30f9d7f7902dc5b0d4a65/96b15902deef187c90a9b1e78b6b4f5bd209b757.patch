Index: settings.cpp
===================================================================
--- settings.cpp	(revision 48643)
+++ settings.cpp	(working copy)
@@ -36,22 +36,10 @@
 
 struct wxSystemObjects
 {
-    wxColour m_colBtnFace,
-             m_colBtnShadow,
-             m_colBtnHighlight,
-             m_colHighlight,
-             m_colHighlightText,
-             m_colListBox,
-             m_colBtnText,
-             m_colMenuItemHighlight,
-             m_colTooltip,
+    wxColour m_colTooltip,
              m_colTooltipText;
-
-    wxFont m_fontSystem;
 };
 
-static wxSystemObjects gs_objects;
-
 // ----------------------------------------------------------------------------
 // wxSystemSettings implementation
 // ----------------------------------------------------------------------------
@@ -80,6 +68,8 @@
                                    wxGtkColourType colour = wxGTK_BG)
 {
     GtkWidget *widget;
+    static GtkWidget *button = NULL;
+    static GtkWidget *list = NULL;
     switch ( type )
     {
         default:
@@ -87,12 +77,18 @@
             // fall through
 
         case wxGTK_BUTTON:
-            widget = gtk_button_new();
+            if (!button) {
+                button = gtk_button_new();
+            }
+            widget = button;
             break;
 
         case wxGTK_LIST:
-            widget = gtk_tree_view_new_with_model(
-                (GtkTreeModel*)gtk_list_store_new(1, G_TYPE_INT));
+            if (!list) {
+                list = gtk_tree_view_new_with_model(
+                    (GtkTreeModel*)gtk_list_store_new(1, G_TYPE_INT));
+            }
+            widget = list;
             break;
 
         case wxGTK_MENUITEM:
@@ -126,12 +122,12 @@
         }
     }
 
-    gtk_object_sink((GtkObject*)widget);
+    //gtk_object_sink((GtkObject*)widget);
 
     return ok;
 }
 
-static void GetTooltipColors()
+static void GetTooltipColors(wxSystemObjects &sys_objects)
 {
     GtkWidget* widget = gtk_window_new(GTK_WINDOW_POPUP);
     const char* name = "gtk-tooltip";
@@ -141,9 +137,9 @@
     gtk_widget_ensure_style(widget);
 
     GdkColor c = widget->style->bg[GTK_STATE_NORMAL];
-    gs_objects.m_colTooltip = wxColor(c);
+    sys_objects.m_colTooltip = wxColor(c);
     c = widget->style->fg[GTK_STATE_NORMAL];
-    gs_objects.m_colTooltipText = wxColor(c);
+    sys_objects.m_colTooltipText = wxColor(c);
 
     gtk_widget_destroy(widget);
 }
@@ -164,15 +160,11 @@
         case wxSYS_COLOUR_BTNFACE:
         case wxSYS_COLOUR_MENUBAR:
         case wxSYS_COLOUR_3DLIGHT:
-            if (!gs_objects.m_colBtnFace.Ok())
-            {
-                gdkColor.red =
-                gdkColor.green = 0;
-                gdkColor.blue = 0x9c40;
-                GetColourFromGTKWidget(gdkColor);
-                gs_objects.m_colBtnFace = wxColor(gdkColor);
-            }
-            color = gs_objects.m_colBtnFace;
+            gdkColor.red =
+            gdkColor.green = 0;
+            gdkColor.blue = 0x9c40;
+            GetColourFromGTKWidget(gdkColor);
+            color = wxColor(gdkColor);
             break;
 
         case wxSYS_COLOUR_WINDOW:
@@ -186,15 +178,13 @@
         case wxSYS_COLOUR_GRAYTEXT:
         case wxSYS_COLOUR_BTNSHADOW:
         //case wxSYS_COLOUR_3DSHADOW:
-            if (!gs_objects.m_colBtnShadow.Ok())
             {
                 wxColour faceColour(GetColour(wxSYS_COLOUR_3DFACE));
-                gs_objects.m_colBtnShadow =
+                color =
                    wxColour((unsigned char) (faceColour.Red() * 2 / 3),
                             (unsigned char) (faceColour.Green() * 2 / 3),
                             (unsigned char) (faceColour.Blue() * 2 / 3));
             }
-            color = gs_objects.m_colBtnShadow;
             break;
 
         case wxSYS_COLOUR_3DHIGHLIGHT:
@@ -203,34 +193,26 @@
             break;
 
         case wxSYS_COLOUR_HIGHLIGHT:
-            if (!gs_objects.m_colHighlight.Ok())
-            {
-                gdkColor.red =
-                gdkColor.green = 0;
-                gdkColor.blue = 0x9c40;
-                GetColourFromGTKWidget(
-                    gdkColor, wxGTK_BUTTON, GTK_STATE_SELECTED);
-                gs_objects.m_colHighlight = wxColour(gdkColor);
-            }
-            color = gs_objects.m_colHighlight;
+            gdkColor.red =
+            gdkColor.green = 0;
+            gdkColor.blue = 0x9c40;
+            GetColourFromGTKWidget(
+                gdkColor, wxGTK_BUTTON, GTK_STATE_SELECTED);
+            color = wxColour(gdkColor);
             break;
 
         case wxSYS_COLOUR_LISTBOX:
-            if (!gs_objects.m_colListBox.Ok())
+            if ( GetColourFromGTKWidget(gdkColor,
+                                        wxGTK_LIST,
+                                        GTK_STATE_NORMAL,
+                                        wxGTK_BASE) )
             {
-                if ( GetColourFromGTKWidget(gdkColor,
-                                            wxGTK_LIST,
-                                            GTK_STATE_NORMAL,
-                                            wxGTK_BASE) )
-                {
-                    gs_objects.m_colListBox = wxColour(gdkColor);
-                }
-                else
-                {
-                    gs_objects.m_colListBox = *wxWHITE;
-                }
+                color = wxColour(gdkColor);
             }
-            color = gs_objects.m_colListBox;
+            else
+            {
+                color = *wxWHITE;
+            }
             break;
 
         case wxSYS_COLOUR_MENUTEXT:
@@ -238,42 +220,38 @@
         case wxSYS_COLOUR_CAPTIONTEXT:
         case wxSYS_COLOUR_INACTIVECAPTIONTEXT:
         case wxSYS_COLOUR_BTNTEXT:
-            if (!gs_objects.m_colBtnText.Ok())
-            {
-                gdkColor.red =
-                gdkColor.green =
-                gdkColor.blue = 0;
-                GetColourFromGTKWidget(
-                    gdkColor, wxGTK_BUTTON, GTK_STATE_NORMAL, wxGTK_FG);
-                gs_objects.m_colBtnText = wxColour(gdkColor);
-            }
-            color = gs_objects.m_colBtnText;
+            gdkColor.red =
+            gdkColor.green =
+            gdkColor.blue = 0;
+            GetColourFromGTKWidget(
+                gdkColor, wxGTK_BUTTON, GTK_STATE_NORMAL, wxGTK_FG);
+            color = wxColour(gdkColor);
             break;
 
         case wxSYS_COLOUR_INFOBK:
-            if (!gs_objects.m_colTooltip.Ok()) {
-                GetTooltipColors();
+            {
+                wxSystemObjects sys_objects;
+                GetTooltipColors(sys_objects);
+                color = sys_objects.m_colTooltip;
             }
-            color = gs_objects.m_colTooltip;
             break;
 
         case wxSYS_COLOUR_INFOTEXT:
-            if (!gs_objects.m_colTooltipText.Ok()) {
-                GetTooltipColors();
+            {
+                wxSystemObjects sys_objects;
+                GetTooltipColors(sys_objects);
+                color = sys_objects.m_colTooltipText;
             }
-            color = gs_objects.m_colTooltipText;
             break;
 
         case wxSYS_COLOUR_HIGHLIGHTTEXT:
-            if (!gs_objects.m_colHighlightText.Ok())
             {
                 wxColour hclr = GetColour(wxSYS_COLOUR_HIGHLIGHT);
                 if (hclr.Red() > 200 && hclr.Green() > 200 && hclr.Blue() > 200)
-                    gs_objects.m_colHighlightText = *wxBLACK;
+                    color = *wxBLACK;
                 else
-                    gs_objects.m_colHighlightText = *wxWHITE;
+                    color = *wxWHITE;
             }
-            color = gs_objects.m_colHighlightText;
             break;
 
         case wxSYS_COLOUR_APPWORKSPACE:
@@ -282,16 +260,12 @@
 
         case wxSYS_COLOUR_ACTIVECAPTION:
         case wxSYS_COLOUR_MENUHILIGHT:
-            if (!gs_objects.m_colMenuItemHighlight.Ok())
-            {
-                gdkColor.red =
-                gdkColor.green =
-                gdkColor.blue = 0;
-                GetColourFromGTKWidget(
-                    gdkColor, wxGTK_MENUITEM, GTK_STATE_SELECTED, wxGTK_BG);
-                gs_objects.m_colMenuItemHighlight = wxColour(gdkColor);
-            }
-            color = gs_objects.m_colMenuItemHighlight;
+            gdkColor.red =
+            gdkColor.green =
+            gdkColor.blue = 0;
+            GetColourFromGTKWidget(
+                gdkColor, wxGTK_MENUITEM, GTK_STATE_SELECTED, wxGTK_BG);
+            color = wxColour(gdkColor);
             break;
 
         case wxSYS_COLOUR_HOTLIGHT:
@@ -326,7 +300,6 @@
         case wxSYS_SYSTEM_FONT:
         case wxSYS_DEVICE_DEFAULT_FONT:
         case wxSYS_DEFAULT_GUI_FONT:
-            if (!gs_objects.m_fontSystem.Ok())
             {
                 GtkWidget *widget = gtk_button_new();
                 GtkStyle *def = gtk_rc_get_style( widget );
@@ -337,7 +310,7 @@
                     wxNativeFontInfo info;
                     info.description =
                         pango_font_description_copy(def->font_desc);
-                    gs_objects.m_fontSystem = wxFont(info);
+                    font = wxFont(info);
                 }
                 else
                 {
@@ -348,14 +321,13 @@
                                    &font_name,
                                    NULL);
                     if (!font_name)
-                        gs_objects.m_fontSystem = wxFont( 12, wxSWISS, wxNORMAL, wxNORMAL );
+                        font = wxFont( 12, wxSWISS, wxNORMAL, wxNORMAL );
                     else
-                        gs_objects.m_fontSystem = wxFont(wxString::FromAscii(font_name));
+                        font = wxFont(wxString::FromAscii(font_name));
                     g_free (font_name);
                 }
                 gtk_object_sink((GtkObject*)widget);
             }
-            font = gs_objects.m_fontSystem;
             break;
 
         default:

 	  	 
