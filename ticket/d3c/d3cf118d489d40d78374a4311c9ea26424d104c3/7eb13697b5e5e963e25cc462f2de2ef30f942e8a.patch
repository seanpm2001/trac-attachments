Index: docs/latex/wx/menu.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/menu.tex,v
retrieving revision 1.64
diff -bu2 -r1.64 docs/latex/wx/menu.tex
--- docs/latex/wx/menu.tex
+++ docs/latex/wx/menu.tex
@@ -128,5 +128,5 @@
 \membersection{wxMenu::Append}\label{wxmenuappend}

-\func{wxMenuItem*}{Append}{\param{int}{ id}, \param{const wxString\& }{ item}, \param{const wxString\& }{helpString = ""},\rtfsp
+\func{wxMenuItem*}{Append}{\param{int}{ id}, \param{const wxString\& }{ item = ""}, \param{const wxString\& }{helpString = ""},\rtfsp
 \param{wxItemKind}{ kind = wxITEM\_NORMAL}}

@@ -476,5 +476,5 @@

 \func{wxMenuItem*}{Insert}{\param{size\_t }{pos}, \param{int}{ id},\rtfsp
-\param{const wxString\& }{ item}, \param{const wxString\& }{helpString = ""},\rtfsp
+\param{const wxString\& }{ item = ""}, \param{const wxString\& }{helpString = ""},\rtfsp
 \param{wxItemKind}{ kind = wxITEM\_NORMAL}}

@@ -570,5 +570,5 @@

 \func{wxMenuItem*}{Prepend}{\param{int}{ id},\rtfsp
-\param{const wxString\& }{ item}, \param{const wxString\& }{helpString = ""},\rtfsp
+\param{const wxString\& }{ item = ""}, \param{const wxString\& }{helpString = ""},\rtfsp
 \param{wxItemKind}{ kind = wxITEM\_NORMAL}}

Index: docs/latex/wx/menuitem.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/menuitem.tex,v
retrieving revision 1.23
diff -bu2 -r1.23 docs/latex/wx/menuitem.tex
--- docs/latex/wx/menuitem.tex
+++ docs/latex/wx/menuitem.tex
@@ -43,4 +43,10 @@
 Constructs a wxMenuItem object.

+The preferred way to create standard menu items is to use default value of
+\arg{text}. If no text is supplied and \arg{id} is one of standard IDs from
+\helpref{this list}{stockitems}, a standard label and a standard accelerator
+will be used. In addition to that, the button will be decorated with stock
+icons under GTK+ 2.
+
 \wxheading{Parameters}

Index: docs/latex/wx/stockitems.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/stockitems.tex,v
retrieving revision 1.3
diff -bu2 -r1.3 docs/latex/wx/stockitems.tex
--- docs/latex/wx/stockitems.tex
+++ docs/latex/wx/stockitems.tex
@@ -1,8 +1,10 @@
 \section{Stock items}\label{stockitems}

-Window IDs for which stock buttons are created
-(see \helpref{wxButton constructor}{wxbuttonctor}):
+Window IDs for which stock buttons and menu items are created
+(see \helpref{wxButton constructor}{wxbuttonctor} and
+\helpref{wxMenuItem constructor}{wxmenuitemctor}):

Index: samples/menu/menu.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/menu/menu.cpp,v
retrieving revision 1.56
diff -bu2 -r1.56 samples/menu/menu.cpp
--- samples/menu/menu.cpp
+++ samples/menu/menu.cpp
@@ -361,4 +361,6 @@
 // ----------------------------------------------------------------------------

+#include <wx/gtk/private.h>
+
 // Define my frame constructor
 MyFrame::MyFrame()
@@ -380,54 +382,54 @@

     wxMenu *stockSubMenu = new wxMenu;
-    stockSubMenu->Append(wxID_ADD,              "wxID_ADD");
-    stockSubMenu->Append(wxID_APPLY,            "wxID_APPLY");
-    stockSubMenu->Append(wxID_BOLD,             "wxID_BOLD");
-    stockSubMenu->Append(wxID_CANCEL,           "wxID_CANCEL");
-    stockSubMenu->Append(wxID_CLEAR,            "wxID_CLEAR");
-    stockSubMenu->Append(wxID_CLOSE,            "wxID_CLOSE");
-    stockSubMenu->Append(wxID_COPY,             "wxID_COPY");
-    stockSubMenu->Append(wxID_CUT,              "wxID_CUT");
-    stockSubMenu->Append(wxID_DELETE,           "wxID_DELETE");
-    stockSubMenu->Append(wxID_FIND,             "wxID_FIND");
-    stockSubMenu->Append(wxID_REPLACE,          "wxID_REPLACE");
-    stockSubMenu->Append(wxID_BACKWARD,         "wxID_BACKWARD");
-    stockSubMenu->Append(wxID_DOWN,             "wxID_DOWN");
-    stockSubMenu->Append(wxID_FORWARD,          "wxID_FORWARD");
-    stockSubMenu->Append(wxID_UP,               "wxID_UP");
-    stockSubMenu->Append(wxID_HELP,             "wxID_HELP");
-    stockSubMenu->Append(wxID_HOME,             "wxID_HOME");
-    stockSubMenu->Append(wxID_INDENT,           "wxID_INDENT");
-    stockSubMenu->Append(wxID_INDEX,            "wxID_INDEX");
-    stockSubMenu->Append(wxID_ITALIC,           "wxID_ITALIC");
-    stockSubMenu->Append(wxID_JUSTIFY_CENTER,   "wxID_JUSTIFY_CENTER");
-    stockSubMenu->Append(wxID_JUSTIFY_FILL,     "wxID_JUSTIFY_FILL");
-    stockSubMenu->Append(wxID_JUSTIFY_LEFT,     "wxID_JUSTIFY_LEFT");
-    stockSubMenu->Append(wxID_JUSTIFY_RIGHT,    "wxID_JUSTIFY_RIGHT");
-    stockSubMenu->Append(wxID_NEW,              "wxID_NEW");
-    stockSubMenu->Append(wxID_NO,               "wxID_NO");
-    stockSubMenu->Append(wxID_OK,               "wxID_OK");
-    stockSubMenu->Append(wxID_OPEN,             "wxID_OPEN");
-    stockSubMenu->Append(wxID_PASTE,            "wxID_PASTE");
-    stockSubMenu->Append(wxID_PREFERENCES,      "wxID_PREFERENCES");
-    stockSubMenu->Append(wxID_PRINT,            "wxID_PRINT");
-    stockSubMenu->Append(wxID_PREVIEW,          "wxID_PREVIEW");
-    stockSubMenu->Append(wxID_PROPERTIES,       "wxID_PROPERTIES");
-    stockSubMenu->Append(wxID_EXIT,             "wxID_EXIT");
-    stockSubMenu->Append(wxID_REDO,             "wxID_REDO");
-    stockSubMenu->Append(wxID_REFRESH,          "wxID_REFRESH");
-    stockSubMenu->Append(wxID_REMOVE,           "wxID_REMOVE");
-    stockSubMenu->Append(wxID_REVERT_TO_SAVED,  "wxID_REVERT_TO_SAVED");
-    stockSubMenu->Append(wxID_SAVE,             "wxID_SAVE");
-    stockSubMenu->Append(wxID_SAVEAS,           "wxID_SAVEAS");
-    stockSubMenu->Append(wxID_STOP,             "wxID_STOP");
-    stockSubMenu->Append(wxID_UNDELETE,         "wxID_UNDELETE");
-    stockSubMenu->Append(wxID_UNDERLINE,        "wxID_UNDERLINE");
-    stockSubMenu->Append(wxID_UNDO,             "wxID_UNDO");
-    stockSubMenu->Append(wxID_UNINDENT,         "wxID_UNINDENT");
-    stockSubMenu->Append(wxID_YES,              "wxID_YES");
-    stockSubMenu->Append(wxID_ZOOM_100,         "wxID_ZOOM_100");
-    stockSubMenu->Append(wxID_ZOOM_FIT,         "wxID_ZOOM_FIT");
-    stockSubMenu->Append(wxID_ZOOM_IN,          "wxID_ZOOM_IN");
-    stockSubMenu->Append(wxID_ZOOM_OUT,         "wxID_ZOOM_OUT");
+    stockSubMenu->Append(wxID_ADD);
+    stockSubMenu->Append(wxID_APPLY);
+    stockSubMenu->Append(wxID_BOLD);
+    stockSubMenu->Append(wxID_CANCEL);
+    stockSubMenu->Append(wxID_CLEAR);
+    stockSubMenu->Append(wxID_CLOSE);
+    stockSubMenu->Append(wxID_COPY);
+    stockSubMenu->Append(wxID_CUT);
+    stockSubMenu->Append(wxID_DELETE);
+    stockSubMenu->Append(wxID_FIND);
+    stockSubMenu->Append(wxID_REPLACE);
+    stockSubMenu->Append(wxID_BACKWARD);
+    stockSubMenu->Append(wxID_DOWN);
+    stockSubMenu->Append(wxID_FORWARD);
+    stockSubMenu->Append(wxID_UP);
+    stockSubMenu->Append(wxID_HELP);
+    stockSubMenu->Append(wxID_HOME);
+    stockSubMenu->Append(wxID_INDENT);
+    stockSubMenu->Append(wxID_INDEX);
+    stockSubMenu->Append(wxID_ITALIC);
+    stockSubMenu->Append(wxID_JUSTIFY_CENTER);
+    stockSubMenu->Append(wxID_JUSTIFY_FILL);
+    stockSubMenu->Append(wxID_JUSTIFY_LEFT);
+    stockSubMenu->Append(wxID_JUSTIFY_RIGHT);
+    stockSubMenu->Append(wxID_NEW);
+    stockSubMenu->Append(wxID_NO);
+    stockSubMenu->Append(wxID_OK);
+    stockSubMenu->Append(wxID_OPEN);
+    stockSubMenu->Append(wxID_PASTE);
+    stockSubMenu->Append(wxID_PREFERENCES);
+    stockSubMenu->Append(wxID_PRINT);
+    stockSubMenu->Append(wxID_PREVIEW);
+    stockSubMenu->Append(wxID_PROPERTIES);
+    stockSubMenu->Append(wxID_EXIT);
+    stockSubMenu->Append(wxID_REDO);
+    stockSubMenu->Append(wxID_REFRESH);
+    stockSubMenu->Append(wxID_REMOVE);
+    stockSubMenu->Append(wxID_REVERT_TO_SAVED);
+    stockSubMenu->Append(wxID_SAVE);
+    stockSubMenu->Append(wxID_SAVEAS);
+    stockSubMenu->Append(wxID_STOP);
+    stockSubMenu->Append(wxID_UNDELETE);
+    stockSubMenu->Append(wxID_UNDERLINE);
+    stockSubMenu->Append(wxID_UNDO);
+    stockSubMenu->Append(wxID_UNINDENT);
+    stockSubMenu->Append(wxID_YES);
+    stockSubMenu->Append(wxID_ZOOM_100);
+    stockSubMenu->Append(wxID_ZOOM_FIT);
+    stockSubMenu->Append(wxID_ZOOM_IN);
+    stockSubMenu->Append(wxID_ZOOM_OUT);
     fileMenu->AppendSubMenu(stockSubMenu, _T("&Standard items demo"));


 	  	 
