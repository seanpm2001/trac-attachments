Index: src/common/dbgrid.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/dbgrid.cpp,v
retrieving revision 1.21
diff -b -u -2 -r1.21 dbgrid.cpp
--- src/common/dbgrid.cpp	2005/09/23 12:52:46	1.21
+++ src/common/dbgrid.cpp	2005/09/26 15:23:46
@@ -724,5 +724,5 @@
 #include "wx/arrimpl.cpp"
 
-WX_DEFINE_EXPORTED_OBJARRAY(keyarray);
+WX_DEFINE_EXPORTED_OBJARRAY(keyarray)
 
 #endif  // #if wxUSE_GRID
Index: src/msw/joystick.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/joystick.cpp,v
retrieving revision 1.24
diff -b -u -2 -r1.24 joystick.cpp
--- src/msw/joystick.cpp	2005/09/23 12:55:00	1.24
+++ src/msw/joystick.cpp	2005/09/26 15:07:28
@@ -70,5 +70,5 @@
     m_joystick = 0;
     return;
-};
+}
 
 wxPoint wxJoystick::GetPosition() const
Index: src/msw/ole/activex.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/ole/activex.cpp,v
retrieving revision 1.2
diff -b -u -2 -r1.2 activex.cpp
--- src/msw/ole/activex.cpp	2005/09/13 16:00:42	1.2
+++ src/msw/ole/activex.cpp	2005/09/26 15:22:24
@@ -59,5 +59,5 @@
         {\
             return E_FAIL;\
-        };\
+        }\
         const char *desc = NULL;\
         cls::_GetInterface(this, iid, ppvObject, desc);\
@@ -65,13 +65,13 @@
         {\
             return E_NOINTERFACE;\
-        };\
+        }\
         ((IUnknown * )(*ppvObject))->AddRef();\
         return S_OK;\
-    };\
+    }\
     ULONG STDMETHODCALLTYPE cls::AddRef()\
     {\
         InterlockedIncrement(&refCount.l);\
         return refCount.l;\
-    };\
+    }\
     ULONG STDMETHODCALLTYPE cls::Release()\
     {\
@@ -83,5 +83,5 @@
                 delete this;\
                 return 0;\
-            };\
+            }\
             return refCount.l;\
         }\
@@ -93,5 +93,5 @@
         InterlockedIncrement(&lockCount.l);\
         return lockCount.l;\
-    };\
+    }\
     ULONG STDMETHODCALLTYPE cls::ReleaseLock()\
     {\
@@ -326,5 +326,5 @@
         {
             return E_UNEXPECTED;
-        };
+        }
 
         hr = QueryInterface(IID_IOleInPlaceUIWindow, (void **) ppDoc);
@@ -334,5 +334,5 @@
             *ppFrame = NULL;
             return E_UNEXPECTED;
-        };
+        }
 
         RECT rect;
@@ -343,5 +343,5 @@
             lprcPosRect->right = rect.right;
             lprcPosRect->bottom = rect.bottom;
-        };
+        }
         if (lprcClipRect)
         {
@@ -349,5 +349,5 @@
             lprcClipRect->right = rect.right;
             lprcClipRect->bottom = rect.bottom;
-        };
+        }
 
         memset(lpFrameInfo, 0, sizeof(OLEINPLACEFRAMEINFO));
@@ -399,6 +399,6 @@
         case OLEGETMONIKER_TEMPFORUSER  : return "OLEGETMONIKER_TEMPFORUSER";
         default                         : return "Bad Enum";
-        };
-    };
+        }
+    }
 
     const char *OleGetWhicMonikerStr(DWORD dwWhichMoniker)
@@ -410,6 +410,6 @@
         case OLEWHICHMK_OBJFULL     : return "OLEWHICHMK_OBJFULL";
         default                     : return "Bad Enum";
-        };
-    };
+        }
+    }
     STDMETHOD(GetMoniker)(DWORD, DWORD, IMoniker **){return E_FAIL;}
     HRESULT STDMETHODCALLTYPE GetContainer(LPOLECONTAINER * ppContainer)
@@ -536,9 +536,9 @@
 
             m_window->m_docView->SetInPlaceSite(inPlaceSite);
-        };
+        }
 
         m_window->m_docView->UIActivate(TRUE);
         return S_OK;
-    };
+    }
 
 
@@ -579,5 +579,5 @@
     OLE_IINTERFACE(IAdviseSink)
     OLE_IINTERFACE(IOleControlSite)
-END_OLE_TABLE;
+END_OLE_TABLE
 
 

 	  	 
