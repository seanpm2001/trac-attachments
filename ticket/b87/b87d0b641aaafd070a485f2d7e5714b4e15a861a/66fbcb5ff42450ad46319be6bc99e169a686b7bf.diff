Index: wxWidgets/samples/widgets/listbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/widgets/listbox.cpp,v
retrieving revision 1.16
diff -b -u -2 -r1.16 listbox.cpp
--- wxWidgets/samples/widgets/listbox.cpp	2004/11/23 11:44:41	1.16
+++ wxWidgets/samples/widgets/listbox.cpp	2005/04/11 21:26:39
@@ -135,8 +135,9 @@
 
     // the checkboxes
-    wxCheckBox *m_chkSort,
-               *m_chkCheck,
+    wxCheckBox *m_chkVScroll,
                *m_chkHScroll,
-               *m_chkVScroll;
+               *m_chkCheck,
+               *m_chkSort,
+               *m_chkOwnerDraw;
 
     // the listbox itself and the sizer it is in
@@ -206,5 +207,6 @@
     m_chkHScroll =
     m_chkCheck =
-    m_chkSort = (wxCheckBox *)NULL;
+    m_chkSort =
+    m_chkOwnerDraw = (wxCheckBox *)NULL;
 
     m_lbox = (wxListBox *)NULL;
@@ -248,4 +250,5 @@
     m_chkCheck = CreateCheckBoxAndAddToSizer(sizerLeft, _T("&Check list box"));
     m_chkSort = CreateCheckBoxAndAddToSizer(sizerLeft, _T("&Sort items"));
+    m_chkOwnerDraw = CreateCheckBoxAndAddToSizer(sizerLeft, _T("&Owner Drawn"));
 
     sizerLeft->Add(5, 5, 0, wxGROW | wxALL, 5); // spacer
@@ -323,8 +326,9 @@
 {
     m_radioSelMode->SetSelection(LboxSel_Single);
-    m_chkSort->SetValue(false);
-    m_chkCheck->SetValue(false);
-    m_chkHScroll->SetValue(true);
     m_chkVScroll->SetValue(false);
+    m_chkHScroll->SetValue(true);
+    m_chkCheck->SetValue(false);
+    m_chkSort->SetValue(false);
+    m_chkOwnerDraw->SetValue(false);
 }
 
@@ -348,4 +352,6 @@
     if ( m_chkSort->GetValue() )
         flags |= wxLB_SORT;
+    if ( m_chkOwnerDraw->GetValue() )
+        flags |= wxLB_OWNERDRAW;
 
     wxArrayString items;
@@ -469,4 +475,5 @@
     event.Enable( (m_radioSelMode->GetSelection() != LboxSel_Single) ||
                   m_chkSort->GetValue() ||
+                  m_chkOwnerDraw->GetValue() ||
                   !m_chkHScroll->GetValue() ||
                   m_chkVScroll->GetValue() );
Index: wxWidgets/samples/widgets/widgets.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/widgets/widgets.cpp,v
retrieving revision 1.31
diff -b -u -2 -r1.31 widgets.cpp
--- wxWidgets/samples/widgets/widgets.cpp	2005/03/23 13:04:41	1.31
+++ wxWidgets/samples/widgets/widgets.cpp	2005/04/11 21:26:39
@@ -44,4 +44,5 @@
 #include "wx/sizer.h"
 #include "wx/colordlg.h"
+#include "wx/fontdlg.h"
 #include "wx/textdlg.h"
 
@@ -61,5 +62,6 @@
 #endif // wxUSE_TOOLTIPS
     Widgets_SetFgColour,
-    Widgets_SetBgColour
+    Widgets_SetBgColour,
+    Widgets_SetFont
 };
 
@@ -101,4 +103,5 @@
     void OnSetFgCol(wxCommandEvent& event);
     void OnSetBgCol(wxCommandEvent& event);
+    void OnSetFont(wxCommandEvent& event);
 #endif // wxUSE_MENUS
 
@@ -125,7 +128,8 @@
 
 #if wxUSE_MENUS
-    // last chosen fg/bg colours
+    // last chosen fg/bg colours and font
     wxColour m_colFg,
              m_colBg;
+    wxFont   m_font;
 #endif // wxUSE_MENUS
 
@@ -218,4 +222,5 @@
     EVT_MENU(Widgets_SetFgColour, WidgetsFrame::OnSetFgCol)
     EVT_MENU(Widgets_SetBgColour, WidgetsFrame::OnSetBgCol)
+    EVT_MENU(Widgets_SetFont,     WidgetsFrame::OnSetFont)
 
     EVT_MENU(wxID_EXIT, WidgetsFrame::OnExit)
@@ -294,4 +299,5 @@
     menuWidget->Append(Widgets_SetFgColour, _T("Set &foreground...\tCtrl-F"));
     menuWidget->Append(Widgets_SetBgColour, _T("Set &background...\tCtrl-B"));
+    menuWidget->Append(Widgets_SetFont,     _T("Set f&ont...\tCtrl-O"));
     menuWidget->AppendSeparator();
     menuWidget->Append(wxID_EXIT, _T("&Quit\tCtrl-Q"));
@@ -463,4 +469,9 @@
 {
 #if wxUSE_COLOURDLG
+    // allow for debugging the default colour the first time this is called
+    WidgetsPage *page = wxStaticCast(m_book->GetCurrentPage(), WidgetsPage);
+    if (!m_colFg.Ok())
+        m_colFg = page->GetForegroundColour();
+
     wxColour col = wxGetColourFromUser(this, m_colFg);
     if ( !col.Ok() )
@@ -469,5 +480,4 @@
     m_colFg = col;
 
-    WidgetsPage *page = wxStaticCast(m_book->GetCurrentPage(), WidgetsPage);
     page->GetWidget()->SetForegroundColour(m_colFg);
     page->GetWidget()->Refresh();
@@ -487,4 +497,8 @@
 {
 #if wxUSE_COLOURDLG
+    WidgetsPage *page = wxStaticCast(m_book->GetCurrentPage(), WidgetsPage);
+    if (!m_colBg.Ok())
+        m_colBg = page->GetBackgroundColour();
+
     wxColour col = wxGetColourFromUser(this, m_colBg);
     if ( !col.Ok() )
@@ -493,5 +507,4 @@
     m_colBg = col;
 
-    WidgetsPage *page = wxStaticCast(m_book->GetCurrentPage(), WidgetsPage);
     page->GetWidget()->SetBackgroundColour(m_colBg);
     page->GetWidget()->Refresh();
@@ -505,4 +518,31 @@
 #else
     wxLogMessage(_T("Colour selection dialog not available in current build."));
+#endif
+}
+
+void WidgetsFrame::OnSetFont(wxCommandEvent& WXUNUSED(event))
+{
+#if wxUSE_FONTDLG
+    WidgetsPage *page = wxStaticCast(m_book->GetCurrentPage(), WidgetsPage);
+    if (!m_font.Ok())
+        m_font = page->GetFont();
+
+    wxFont font = wxGetFontFromUser(this, m_font);
+    if ( !font.Ok() )
+        return;
+
+    m_font = font;
+
+    page->GetWidget()->SetFont(m_font);
+    page->GetWidget()->Refresh();
+
+    wxControl *ctrl2 = page->GetWidget2();
+    if ( ctrl2 )
+    {
+        ctrl2->SetFont(m_font);
+        ctrl2->Refresh();
+    }
+#else
+    wxLogMessage(_T("Font selection dialog not available in current build."));
 #endif
 }

 	  	 
