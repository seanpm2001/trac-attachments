diff -rbu2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWidgets-20040524/docs/latex/wx/locale.tex wxWidgets-20040524.1/docs/latex/wx/locale.tex
--- wxWidgets-20040524/docs/latex/wx/locale.tex	Tue May 04 10:25:46 2004
+++ wxWidgets-20040524.1/docs/latex/wx/locale.tex	Mon May 24 16:21:01 2004
@@ -349,4 +349,6 @@
 \func{bool}{AddCatalog}{\param{const char }{*szDomain}}
 
+\func{bool}{AddCatalog}{\param{const char }{*szDomain}, \param{int}{*nMsgIdLanguage}, \param{const char }{*szMsgIdCodePage}}
+
 Add a catalog for use with the current locale: it is searched for in standard
 places (current directory first, then the system one), but you may also prepend
@@ -359,4 +361,22 @@
 Returns true if catalog was successfully loaded, false otherwise (which might
 mean that the catalog is not found or that it isn't in the correct format).
+
+The optional parameter \arg{nMsgIdLanguage} specifies the language of the messages
+strings being passed to GetString(). If the language of the current locale matches
+the message language, the function will not return an error code if the catalog
+file cannot be found. By convention, the message are assumed to be in English.
+
+The optional parameter \arg{szMsgIdCodePage} specifies the codepage of the messages
+in the source code. If 8-bit characters are being used in the messages, e.g. if the
+texts in the source code are being written in German or French, the message ids in
+the catalog file will be translated to match the source code strings in the binary
+file (which is indeed the codepage of the system used to compile the binary). Without
+specifying the codepage, no strings containing 8-bit characters can be translated.
+
+The parameters \arg{nMsgIdLanguage} and \arg{szMsgIdCodePage} have no meaning in
+applications using the Unicode builds of wxWidgets.
+
+If you have to deal with non-English strings or 8-bit characters in the source code,
+see the explanation in the \helpref{Internationalization overview}{internationalization}.
 
 \membersection{wxLocale::AddCatalogLookupPathPrefix}\label{wxlocaleaddcataloglookuppathprefix}
diff -rbu2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWidgets-20040524/docs/latex/wx/tnoneng.tex wxWidgets-20040524.1/docs/latex/wx/tnoneng.tex
--- wxWidgets-20040524/docs/latex/wx/tnoneng.tex	Tue May 04 10:25:50 2004
+++ wxWidgets-20040524.1/docs/latex/wx/tnoneng.tex	Mon May 24 16:21:47 2004
@@ -89,4 +89,32 @@
 {\tt wxLOCALE\_CONV\_ENCODING} to \helpref{wxLocale::Init}{wxlocaleinit}.
 
+\wxheading{Non-English strings or 8-bit characters in the source code}
+
+As by convention, you should use characters without diacritics (i.e. 7-bit
+characters) in the source code, limiting the languages that may be used to
+English.
+
+If you port software to wxWindows, you may be confronted with legacy source
+code containing German or French strings. Instead of translating the strings
+in the source code, you may work with this strings directly with some simple
+steps.
+
+1. if you use the program {\it xgettext} to extract the strings from the source
+code, specify the option {\it --from-code=<source code codepage>}. The source
+code codepage is the codepage on the system where the application has been
+compiled (i.e. {\it iso-8859-1} or {\it windows-1252} for German or French
+systems).
+
+2. on loading the catalog, specify the source code language and codepage.
+
+{\bf Example:}
+
+\begin{verbatim}
+	locale.AddCatalog("mycatalog", wxLANGUAGE_GERMAN, "iso-8859-1");
+\end{verbatim}
+
+Now wxWindows will translate the message ids on catalog loading to match the
+strings in the binary.
+
 \wxheading{Font mapping}
 
diff -rbu2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWidgets-20040524/include/wx/intl.h wxWidgets-20040524.1/include/wx/intl.h
--- wxWidgets-20040524/include/wx/intl.h	Sun May 23 22:50:24 2004
+++ wxWidgets-20040524.1/include/wx/intl.h	Mon May 24 17:17:20 2004
@@ -456,4 +456,6 @@
     // Returns 'true' if it was successfully loaded
     bool AddCatalog(const wxChar *szDomain);
+    bool AddCatalog(const wxChar *szDomain, int nMsgIdLanguage,
+                           const wxChar *szMsgIdCodePage);
 
     // check if the given catalog is loaded
diff -rbu2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWidgets-20040524/src/common/intl.cpp wxWidgets-20040524.1/src/common/intl.cpp
--- wxWidgets-20040524/src/common/intl.cpp	Sun May 23 22:52:04 2004
+++ wxWidgets-20040524.1/src/common/intl.cpp	Mon May 24 17:23:53 2004
@@ -888,5 +888,6 @@
 
     // fills the hash with string-translation pairs
-    void FillHash(wxMessagesHash& hash, bool convertEncoding) const;
+    void FillHash(wxMessagesHash& hash, const wxString& strMsgIdCodePage,
+                  bool convertEncoding) const;
 
 private:
@@ -964,5 +965,6 @@
 public:
     // load the catalog from disk (szDirPrefix corresponds to language)
-    bool Load(const wxChar *szDirPrefix, const wxChar *szName, bool bConvertEncoding = FALSE);
+    bool Load(const wxChar *szDirPrefix, const wxChar *szName,
+              const wxChar *szMsgIdCodePage = "", bool bConvertEncoding = FALSE);
 
     // get name of the catalog
@@ -1215,5 +1217,7 @@
 }
 
-void wxMsgCatalogFile::FillHash(wxMessagesHash& hash, bool convertEncoding) const
+void wxMsgCatalogFile::FillHash(wxMessagesHash& hash,
+                                const wxString& strMsgIdCodePage,
+                                bool convertEncoding) const
 {
 #if wxUSE_WCHAR_T
@@ -1223,4 +1227,10 @@
 
     wxMBConv& inputConv = csConv ? *((wxMBConv*)csConv) : *wxConvCurrent;
+
+    wxCSConv *csSourceConv = NULL;
+    if ( !!strMsgIdCodePage )
+        csSourceConv = new wxCSConv(strMsgIdCodePage);
+
+    wxMBConv& sourceConv = csSourceConv ? *((wxMBConv*)csSourceConv) : *wxConvCurrent;
 #elif wxUSE_FONTMAP
     wxEncodingConverter converter;
@@ -1259,15 +1269,42 @@
     for (size_t i = 0; i < m_numStrings; i++)
     {
-        const char *data = StringAtOfs(m_pOrigTable, i);
+        const char *data;
+        size_t length;
+        size_t offset;
+        size_t index;
+        wxString msgid;
+
+        data = StringAtOfs(m_pOrigTable, i);
+        length = Swap(m_pOrigTable[i].nLen);
+        offset = 0;
+        index = 0;
+        while (offset < length)
+        {
 #if wxUSE_WCHAR_T
-        wxString msgid(data, inputConv);
-#else
-        wxString msgid(data);
-#endif
+        #if wxUSE_UNICODE
+            msgid = wxString(data + offset, inputConv);
+        #else
+            if ( convertEncoding )
+                msgid = wxString(inputConv.cMB2WC(data + offset), sourceConv);
+            else
+                msgid = wxString(data + offset);
+        #endif
+#else // !wxUSE_WCHAR_T
+        #if wxUSE_FONTMAP
+            if ( convertEncoding )
+                msgid = wxString(converter.Convert(data + offset));
+            else
+        #endif
+                msgid = wxString(data + offset);
+#endif // wxUSE_WCHAR_T/!wxUSE_WCHAR_T
+
+            offset += strlen(data + offset) + 1;
+            ++index;
+        }
 
         data = StringAtOfs(m_pTransTable, i);
-        size_t length = Swap(m_pTransTable[i].nLen);
-        size_t offset = 0;
-        size_t index = 0;
+        length = Swap(m_pTransTable[i].nLen);
+        offset = 0;
+        index = 0;
         while (offset < length)
         {
@@ -1301,4 +1338,5 @@
 
 #if wxUSE_WCHAR_T
+    delete csSourceConv;
     delete csConv;
 #endif
@@ -1311,5 +1349,5 @@
 
 bool wxMsgCatalog::Load(const wxChar *szDirPrefix, const wxChar *szName,
-                        bool bConvertEncoding)
+                        const wxChar *szMsgIdCodePage, bool bConvertEncoding)
 {
     wxMsgCatalogFile file;
@@ -1319,5 +1357,5 @@
     if ( file.Load(szDirPrefix, szName, m_pluralFormsCalculator) )
     {
-        file.FillHash(m_messages, bConvertEncoding);
+        file.FillHash(m_messages, szMsgIdCodePage, bConvertEncoding);
         return TRUE;
     }
@@ -2489,7 +2527,16 @@
 bool wxLocale::AddCatalog(const wxChar *szDomain)
 {
+    return AddCatalog(szDomain, wxLANGUAGE_ENGLISH, "");
+}
+
+// add a catalog to our linked list
+bool wxLocale::AddCatalog(const wxChar *szDomain,
+                          int nMsgIdLanguage,
+                          const wxChar *szMsgIdCodePage
+)
+{
   wxMsgCatalog *pMsgCat = new wxMsgCatalog;
 
-  if ( pMsgCat->Load(m_strShort, szDomain, m_bConvertEncoding) ) {
+  if ( pMsgCat->Load(m_strShort, szDomain, szMsgIdCodePage, m_bConvertEncoding) ) {
     // add it to the head of the list so that in GetString it will
     // be searched before the catalogs added earlier
@@ -2503,7 +2550,7 @@
     delete pMsgCat;
 
-    // it's OK to not load English catalog, the texts are embedded in
-    // the program:
-    if (m_strShort.Mid(0, 2) == wxT("en"))
+    // it's OK to not load catalog if the msgid languages match, the texts
+    // are embedded in the program:
+    if (m_language == nMsgIdLanguage)
         return TRUE;
 

 	  	 
