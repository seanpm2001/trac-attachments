diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/listctrlm.cpp ./listctrlm.cpp
16,17c16,17
< #include "wx/textctrl.h"
< #include "wx/listctrl.h"
---
> #include "wx/stubs/textctrl.h"
> #include "wx/stubs/listctrl.h"
296,302d295
< // Gets the number of columns in the list control
< int wxListCtrl::GetColumnCount() const
< {
<    // TODO
<    return false;
< }
< 
580,585c573,578
<    m_mask = 0;
<    m_itemId = 0;
<    m_col = 0;
<    m_state = 0;
<    m_stateMask = 0;
<    m_image = 0;
---
>     m_mask = 0;
>     m_itemId = 0;
>     m_col = 0;
>     m_state = 0;
>     m_stateMask = 0;
>     m_image = 0;
592,597d584
< void wxListItem::ClearAttributes()
< {
<    // TODO
< }
< 
< 
599d585
< #ifndef __WXMAC_X__
601,603d586
< #else
< IMPLEMENT_DYNAMIC_CLASS(wxListEvent, wxNotifyEvent)
< #endif
606d588
< #ifndef __WXMAC_X__
608,610d589
< #else
<    wxNotifyEvent(commandType, id)
< #endif
616a596
> 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/macnotfy.cpp ./macnotfy.cpp
10,14d9
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
< #include "wx/wx.h"
Only in /Users/mark/cvs/wxWindows/wxWindows/src/mac/: macsock
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/main.cpp ./main.cpp
12,15d11
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/mdi.cpp ./mdi.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/menu.cpp ./menu.cpp
25,28d24
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
31d26
< #include "wx/app.h"
34d28
< #include "wx/window.h"
371c365
<         return (wxWindow *)m_menuBar->GetFrame();
---
>         return m_menuBar->GetFrame();
469d462
< #ifndef __WXMAC_X__
473,475c466,468
<       for (pos = 0, node = GetMenuItems().First(); node; node = node->Next(), pos++) 
<       {
<          wxMenuItem * pItem = (wxMenuItem *)  node->Data() ;
---
> 	  for (pos = 0, node = GetMenuItems().First(); node; node = node->Next(), pos++) 
> 	  {	
> 	  	wxMenuItem * pItem = (wxMenuItem *)  node->Data() ;
477c470
<          wxMenu *pSubMenu = pItem->GetSubMenu() ;
---
> 	  	wxMenu *pSubMenu = pItem->GetSubMenu() ;
485c478
< 
---
> 					
516c509
<       }
---
> 	  }
518d510
< #endif !(__WXMAC_X__)
520,521c512,513
<    for (pos = 0, node = GetMenuItems().First(); node; node = node->Next(), pos++) 
<    {	
---
>   for (pos = 0, node = GetMenuItems().First(); node; node = node->Next(), pos++) 
>   {	
884,901c876,888
<         if ( m_menus[i]->MacGetMenuId() == macMenuId
< #ifndef __WXMAC_X__
<              || 
<              ( macMenuId == kHMHelpMenuID && 
<                ( m_titles[i] == "?" || m_titles[i] == "&?"  ||
<                  m_titles[i] == wxApp::s_macHelpMenuTitleName ) )
< #endif
<              )
<         {
<            if ( m_menus[i]->MacMenuSelect( handler , when , macMenuId , macMenuItemNum ) )
<               return ;
<            else
<            {
<               //TODO flag this as an error since it must contain the item
<               return ;
<            }
<         }
<      }
---
> 	  	if ( m_menus[i]->MacGetMenuId() == macMenuId || 
> 	  		( macMenuId == kHMHelpMenuID && ( m_titles[i] == "?" || m_titles[i] == "&?"  || m_titles[i] == wxApp::s_macHelpMenuTitleName ) )
> 	  		)
> 	  	{
> 	  		if ( m_menus[i]->MacMenuSelect( handler , when , macMenuId , macMenuItemNum ) )
> 	  			return ;
> 	  		else
> 	  		{
> 	  			//TODO flag this as an error since it must contain the item
> 	  			return ;
> 	  		}
> 	  	}
> 		}
905,908c892,895
<         if ( m_menus[i]->MacMenuSelect( handler , when , macMenuId , macMenuItemNum ) )
<         {
<            break ;
<         }
---
> 	  	if ( m_menus[i]->MacMenuSelect( handler , when , macMenuId , macMenuItemNum ) )
> 	  	{
> 	  		break ;
> 	  	}
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/menuitem.cpp ./menuitem.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
22d17
< #include "wx/app.h"
49c44
< int wxMenuItem::MacBuildMenuString(StringPtr outMacItemText, SInt16 *outMacShortcutChar , UInt8 *outMacModifiers , const char *inItemText , bool useShortcuts)
---
> wxMenuItem::MacBuildMenuString(StringPtr outMacItemText, SInt16 *outMacShortcutChar , UInt8 *outMacModifiers , const char *inItemText , bool useShortcuts )
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/metafile.cpp ./metafile.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/minifram.cpp ./minifram.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
Only in /Users/mark/cvs/wxWindows/wxWindows/src/mac/: morefile
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/msgdlg.cpp ./msgdlg.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
22d17
< #include "wx/app.h"
79,80c74
< 
< #ifndef __WXMAC_X__
---
> 	
95,108d88
< #else
<    if (wxApp::s_macDefaultEncodingIsPC)
<    {
<       c2pstrcpy(pascalTitle , wxMacMakeMacStringFromPC( m_caption ) ) ;
<       c2pstrcpy(pascalText , wxMacMakeMacStringFromPC( m_message) ) ;
<    }
<    else
<    {
<       c2pstrcpy(pascalTitle , m_caption ) ;
<       c2pstrcpy(pascalText , m_message ) ;
<    }
< 
<    wxMacConvertNewlines( (char*)pascalText ,(char*) pascalText) ;
< #endif  ! (__WXMAC_X__)
110c90
<    wxASSERT_MSG( ( m_dialogStyle & 0x3F ) != wxYES , "this style is not supported on mac" ) ;
---
> 	wxASSERT_MSG( ( m_dialogStyle & 0x3F ) != wxYES , "this style is not supported on mac" ) ;
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/notebmac.cpp ./notebmac.cpp
23,26d22
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
264d259
< #ifndef __WXMAC_X__
266,269c261
< 		c2pstr( (char*) tie.name ) ;
< #else
<       c2pstrcpy(tie.name, strText);
< #endif
---
> 		c2pstr( (char*) tie.name ) ;	
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/notebook.cpp ./notebook.cpp
23,26d22
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
261d256
< #ifndef __WXMAC_X__
263,266c258
< 		c2pstr( (char*) tie.name ) ;
< #else
<       c2pstrcpy(tie.name, strText);
< #endif
---
> 		c2pstr( (char*) tie.name ) ;	
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/palette.cpp ./palette.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/pen.cpp ./pen.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/pnghand.cpp ./pnghand.cpp
34d33
< #ifndef __WXMAC_X__
36,37d34
< #endif
< 
40d36
< #include "wx/msgdlg.h"
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/printdlg.cpp ./printdlg.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/printmac.cpp ./printmac.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/radiobox.cpp ./radiobox.cpp
20,23d19
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
25d20
< #include "wx/radiobut.h"
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/radiobut.cpp ./radiobut.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/region.cpp ./region.cpp
15d14
< 
198c197
< void wxRegion::GetBox(wxCoord &x, wxCoord &y, wxCoord &w, wxCoord &h) const
---
> void wxRegion::GetBox(long& x, long& y, long&w, long &h) const
217c216
<     wxCoord x, y, w, h;
---
>     long x, y, w, h;
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/scrolbar.cpp ./scrolbar.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/settings.cpp ./settings.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
21c17
< #include "wx/gdicmn.h"
---
> 
89,110c85,103
<    switch (index)
<    {
<     case wxSYS_ANSI_VAR_FONT :
<     case wxSYS_SYSTEM_FONT :
<     case wxSYS_DEVICE_DEFAULT_FONT :
<     case wxSYS_DEFAULT_GUI_FONT :
<        {
< #ifndef __WXMAC_X__
<           return *wxSMALL_FONT ;
< #else
<           return wxFont(12, wxMODERN, wxNORMAL, wxNORMAL);
< #endif
<        }
<        break ;
<     case wxSYS_OEM_FIXED_FONT :
<     case wxSYS_ANSI_FIXED_FONT :
<     case wxSYS_SYSTEM_FIXED_FONT :
<     default :
<        {
<           return *wxNORMAL_FONT ;
<        }
<        break ;
---
>     switch (index)
>     {
>         case wxSYS_ANSI_VAR_FONT :
>         case wxSYS_SYSTEM_FONT :
>         case wxSYS_DEVICE_DEFAULT_FONT :
>         case wxSYS_DEFAULT_GUI_FONT :
> 	        {
> 	        	return *wxSMALL_FONT ;
> 					} ;
>         	break ;
>         case wxSYS_OEM_FIXED_FONT :
>         case wxSYS_ANSI_FIXED_FONT :
>         case wxSYS_SYSTEM_FIXED_FONT :
>         default :
> 	        {
> 	        	return *wxNORMAL_FONT ;
> 	 				} ;
> 	       	break ;
> 				

 	  	 
