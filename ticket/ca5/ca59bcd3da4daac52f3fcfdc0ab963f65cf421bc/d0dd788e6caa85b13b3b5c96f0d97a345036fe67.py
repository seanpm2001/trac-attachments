#!/usr/bin/env python
# generated by wxGlade 0.2.1 on Fri Jul 25 12:04:05 2003

from wxPython.wx import *

class MyPanel(wxPanel):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyPanel.__init__
        kwds["style"] = wxTAB_TRAVERSAL
        wxPanel.__init__(self, *args, **kwds)
        self.panel_1 = wxPanel(self, -1)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyPanel.__set_properties
        pass
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyPanel.__do_layout
        sizer_2 = wxBoxSizer(wxHORIZONTAL)
        sizer_2.Add(self.panel_1, 1, wxEXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_2)
        sizer_2.Fit(self)
        sizer_2.SetSizeHints(self)
        self.Layout()
        # end wxGlade

# end of class MyPanel


class MyNotebook(wxNotebook):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyNotebook.__init__
        kwds["style"] = 0
        wxNotebook.__init__(self, *args, **kwds)
        self.notebook_1_pane_1 = MyPanel(self, -1)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

        EVT_NOTEBOOK_PAGE_CHANGED(self, self.GetId(), self.OnSelChange)

    def __set_properties(self):
        # begin wxGlade: MyNotebook.__set_properties
        self.AddPage(self.notebook_1_pane_1, "tab1")
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyNotebook.__do_layout
        pass
        # end wxGlade

    def OnSelChange(self, evt):
        print 'changed'
        print self.GetSelection()
        print self.GetPage(self.GetSelection())
        print self.GetPage(self.GetSelection()).GetName()

# end of class MyNotebook


class MyFrame(wxFrame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wxDEFAULT_FRAME_STYLE
        wxFrame.__init__(self, *args, **kwds)
        self.notebook_1 = MyNotebook(self, -1)
        self.num = 2
        # Menu Bar
        self.frame_1_menubar = wxMenuBar()
        self.SetMenuBar(self.frame_1_menubar)
        self.menu = wxMenu()
        self.menu.Append(2001,
                         'Add',
                         )
        self.menu.Append(2002,
                         'Delete',
                         )
        self.menu.Append(2000,
                         'Exit',
                         )
        self.frame_1_menubar.Append(self.menu, "page")
        # Menu Bar end

        EVT_MENU(self, 2001, self.Adder)
        EVT_MENU(self, 2002, self.Remover)
        EVT_MENU(self, 2000, self.Exit)

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle("frame_1")
        self.SetSize((800, 600))
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        sizer_1 = wxBoxSizer(wxVERTICAL)
        sizer_1.Add(wxNotebookSizer(self.notebook_1), 1, wxEXPAND, 0)
        self.SetAutoLayout(1)
        self.SetSizer(sizer_1)
#        sizer_1.Fit(self)
#        sizer_1.SetSizeHints(self)
        self.Layout()
        # end wxGlade

    def Adder(self, evt):
        print 'adder'
        mypanel = MyPanel(self.notebook_1, -1)
        mypanel.SetName('tab'+str(self.num))
        self.notebook_1.AddPage(mypanel,
                                'tab'+str(self.num)
                                )
        self.num += 1

    def Remover(self, evt):
        print 'remover'
        self.notebook_1.DeletePage(0)

    def Exit(self, evt):
        self.Destroy()

# end of class MyFrame

class MyApp(wxApp):
    def OnInit(self):
        frame = MyFrame(NULL, -1, "Menu Dynamic Structure Class")
        frame.Show(TRUE)
        self.SetTopWindow(frame)
        return TRUE
    

app = MyApp(0)
app.MainLoop()


 	  	 
