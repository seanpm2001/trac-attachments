diff -rbu2 wx2.4.orig\wxWindows\contrib\include\wx\fl\controlbar.h wx2.4\wxWindows\contrib\include\wx\fl\controlbar.h
--- wx2.4.orig\wxWindows\contrib\include\wx\fl\controlbar.h	Thu Oct 24 05:21:32 2002
+++ wx2.4\wxWindows\contrib\include\wx\fl\controlbar.h	Wed Nov 06 10:04:24 2002
@@ -905,4 +905,11 @@
     bool          mHasRightHandle;
 
+    // determines if this bar can float. The layout's setting as priority. For 
+    // example, if the layout's mFloatingOn is false, this setting is irrelevant
+    // since nothing will float at all. If the layout's floating is on, use this
+    // setting to prevent specific bars from floating. In other words, all bars 
+    // float by default and floating can be turned off on individual bars.
+    bool          mFloatingOn;    // default: ON (which is also the layout's mFloatingOn default setting)
+
     cbDimInfo     mDimInfo;       // preferred sizes for each, control bar state
 
diff -rbu2 wx2.4.orig\wxWindows\contrib\src\fl\controlbar.cpp wx2.4\wxWindows\contrib\src\fl\controlbar.cpp
--- wx2.4.orig\wxWindows\contrib\src\fl\controlbar.cpp	Fri Aug 16 04:31:54 2002
+++ wx2.4\wxWindows\contrib\src\fl\controlbar.cpp	Wed Nov 06 10:04:41 2002
@@ -675,5 +675,5 @@
 void wxFrameLayout::SetBarState( cbBarInfo* pBar, int newState, bool updateNow )
 {
-    if ( newState == wxCBAR_FLOATING && !mFloatingOn )
+    if ( newState == wxCBAR_FLOATING && !(mFloatingOn && pBar->mFloatingOn))
 
         return;
@@ -825,5 +825,5 @@
 void wxFrameLayout::RepositionFloatedBar( cbBarInfo* pBar )
 {
-    if ( !mFloatingOn ) return;
+    if ( !(mFloatingOn && pBar->mFloatingOn)) return;
 
     wxNode* pNode = mFloatedFrames.First();
@@ -872,5 +872,6 @@
     else
     {                   
-        if ( !mFloatingOn ) return;
+        if ( !(mFloatingOn && pBar->mFloatingOn) )
+          return;
 
         // float it
@@ -2125,7 +2126,7 @@
 
     : mpRow( NULL ),
-
       mpNext( NULL ),
-      mpPrev( NULL )
+      mpPrev( NULL ),
+      mFloatingOn( TRUE )
 {}
 

 	  	 
