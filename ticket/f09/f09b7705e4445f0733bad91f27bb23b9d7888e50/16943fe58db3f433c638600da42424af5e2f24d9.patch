Index: grid.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/generic/grid.h,v
retrieving revision 1.117
diff -b -u -2 -r1.117 grid.h
--- grid.h	2003/03/24 18:49:56	1.117
+++ grid.h	2003/04/23 17:03:19
@@ -1644,5 +1644,12 @@
     virtual void Fit();
 
+    int GetGRID_SCROLL_LINE_X() { return m_GRID_SCROLL_LINE_X; }
+    int GetGRID_SCROLL_LINE_Y() { return m_GRID_SCROLL_LINE_Y; }
+    void SetGRID_SCROLL_LINE_X(int newvalue) { m_GRID_SCROLL_LINE_X = newvalue; }
+    void SetGRID_SCROLL_LINE_Y(int newvalue) { m_GRID_SCROLL_LINE_Y = newvalue; }
 protected:
+    int m_GRID_SCROLL_LINE_X;
+    int m_GRID_SCROLL_LINE_Y;
+
     virtual wxSize DoGetBestSize() const;
 
Index: grid.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/generic/grid.cpp,v
retrieving revision 1.248
diff -b -u -2 -r1.248 grid.cpp
--- grid.cpp	2003/04/03 21:14:07	1.248
+++ grid.cpp	2003/04/23 17:02:15
@@ -402,6 +402,4 @@
 //       fixing anyhow
 //       -- Vadim
-static const size_t GRID_SCROLL_LINE_X = 15;  // 1;
-static const size_t GRID_SCROLL_LINE_Y = GRID_SCROLL_LINE_X;
 
 // the size of hash tables used a bit everywhere (the max number of elements
@@ -413,13 +411,9 @@
 // ----------------------------------------------------------------------------
 
-static inline int GetScrollX(int x)
-{
-    return (x + GRID_SCROLL_LINE_X - 1) / GRID_SCROLL_LINE_X;
-}
+#define GetScrollX(x) \
+    ((x + m_GRID_SCROLL_LINE_X - 1) / m_GRID_SCROLL_LINE_X)
 
-static inline int GetScrollY(int y)
-{
-    return (y + GRID_SCROLL_LINE_Y - 1) / GRID_SCROLL_LINE_Y;
-}
+#define GetScrollY(y) \
+    ((y + m_GRID_SCROLL_LINE_Y - 1) / m_GRID_SCROLL_LINE_Y)
 
 // ============================================================================
@@ -4013,4 +4007,7 @@
     m_extraWidth =
     m_extraHeight = 0;
+
+    m_GRID_SCROLL_LINE_X =
+    m_GRID_SCROLL_LINE_Y = 15;
 }
 
@@ -4159,5 +4156,5 @@
 
     // do set scrollbar parameters
-    SetScrollbars( GRID_SCROLL_LINE_X, GRID_SCROLL_LINE_Y,
+    SetScrollbars( m_GRID_SCROLL_LINE_X, m_GRID_SCROLL_LINE_Y,
                    GetScrollX(w), GetScrollY(h), x, y,
                    GetBatchCount() != 0);
@@ -7821,11 +7818,11 @@
             }
 
-            // we divide it later by GRID_SCROLL_LINE, make sure that we don't
+            // we divide it later by m_GRID_SCROLL_LINE, make sure that we don't
             // have rounding errors (this is important, because if we do, we
             // might not scroll at all and some cells won't be redrawn)
             //
-            // Sometimes GRID_SCROLL_LINE/2 is not enough, so just add a full
+            // Sometimes m_GRID_SCROLL_LINE/2 is not enough, so just add a full
             // scroll unit...
-            ypos += GRID_SCROLL_LINE_Y;
+            ypos += m_GRID_SCROLL_LINE_Y;
         }
 
@@ -7842,5 +7839,5 @@
 
             // see comment for ypos above
-            xpos += GRID_SCROLL_LINE_X;
+            xpos += m_GRID_SCROLL_LINE_X;
         }
 
@@ -7848,7 +7845,7 @@
         {
             if ( xpos != -1 )
-                xpos /= GRID_SCROLL_LINE_X;
+                xpos /= m_GRID_SCROLL_LINE_X;
             if ( ypos != -1 )
-                ypos /= GRID_SCROLL_LINE_Y;
+                ypos /= m_GRID_SCROLL_LINE_Y;
             Scroll( xpos, ypos );
             AdjustScrollbars();
@@ -8031,5 +8028,5 @@
 
     int row = m_currentCellCoords.GetRow();
-    if ( row < m_numRows )
+    if ( row + 1 < m_numRows )
     {
         int cw, ch;
@@ -9532,6 +9529,6 @@
     // CalcDimension adds m_extraWidth + 1 etc. to calculate the necessary
     // scrollbar steps
-    wxSize sizeFit(GetScrollX(size.x + m_extraWidth + 1) * GRID_SCROLL_LINE_X,
-                   GetScrollY(size.y + m_extraHeight + 1) * GRID_SCROLL_LINE_Y);
+    wxSize sizeFit(GetScrollX(size.x + m_extraWidth + 1) * m_GRID_SCROLL_LINE_X,
+                   GetScrollY(size.y + m_extraHeight + 1) * m_GRID_SCROLL_LINE_Y);
 
     // distribute the extra space between the columns/rows to avoid having

 	  	 
