Index: wxWindows/include/wx/generic/grid.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/generic/grid.h,v
retrieving revision 1.111.2.1
diff -b -u -2 -r1.111.2.1 grid.h
--- wxWindows/include/wx/generic/grid.h	2002/10/06 20:44:41	1.111.2.1
+++ wxWindows/include/wx/generic/grid.h	2002/12/11 16:02:29
@@ -655,4 +655,6 @@
     wxGridCellRenderer *GetRenderer(wxGrid* grid, int row, int col) const;
     wxGridCellEditor *GetEditor(wxGrid* grid, int row, int col) const;
+    wxGridCellRenderer *GetRenderer() const { return m_renderer; }
+    wxGridCellEditor *GetEditor() const { return m_editor; }
 
     bool IsReadOnly() const { return m_isReadOnly == wxGridCellAttr::ReadOnly; }
Index: wxWindows/src/generic/grid.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/generic/grid.cpp,v
retrieving revision 1.231.2.6
diff -b -u -2 -r1.231.2.6 grid.cpp
--- wxWindows/src/generic/grid.cpp	2002/11/17 14:30:24	1.231.2.6
+++ wxWindows/src/generic/grid.cpp	2002/12/11 16:02:31
@@ -2122,5 +2122,5 @@
 wxGridCellRenderer* wxGridCellAttr::GetRenderer(wxGrid* grid, int row, int col) const
 {
-    wxGridCellRenderer *renderer;
+    wxGridCellRenderer *renderer = NULL;
 
     if ( m_renderer && this != m_defGridAttr )
@@ -2132,22 +2132,16 @@
     else // no non default cell renderer
     {
-        // get default renderer for the data type
-        if ( grid )
-        {
-            // GetDefaultRendererForCell() will do IncRef() for us
-            renderer = grid->GetDefaultRendererForCell(row, col);
-        }
-        else
+        if ( this == m_defGridAttr )
         {
-            renderer = NULL;
+            // if we still don't have one then use the grid default
+            renderer = m_defGridAttr->GetRenderer();
+            if (renderer)
+                renderer->IncRef();
         }
-
-        if ( !renderer )
+        if ( !renderer && grid )
         {
-            if (m_defGridAttr &&  this != m_defGridAttr )
-            {
-                // if we still don't have one then use the grid default
-                // (no need for IncRef() here neither)
-                renderer = m_defGridAttr->GetRenderer(NULL, 0, 0);
+            // get default renderer for the data type
+            // GetDefaultRendererForCell() will do IncRef() for us
+            renderer = grid->GetDefaultRendererForCell(row, col);
             }
             else // default grid attr
@@ -2159,5 +2153,4 @@
             }
         }
-    }
 
     // we're supposed to always find something
@@ -2170,5 +2163,5 @@
 wxGridCellEditor* wxGridCellAttr::GetEditor(wxGrid* grid, int row, int col) const
 {
-    wxGridCellEditor *editor;
+    wxGridCellEditor *editor = NULL;
 
     if ( m_editor && this != m_defGridAttr )
@@ -2180,22 +2173,16 @@
     else // no non default cell editor
     {
-        // get default editor for the data type
-        if ( grid )
+        if ( this == m_defGridAttr )
         {
-            // GetDefaultEditorForCell() will do IncRef() for us
-            editor = grid->GetDefaultEditorForCell(row, col);
-        }
-        else
-        {
-            editor = NULL;
+            // if we still don't have one then use the grid default
+            editor = m_defGridAttr->GetEditor();
+            if ( editor )
+                editor->IncRef();
         }
-
-        if ( !editor )
-        {
-            if ( m_defGridAttr && this != m_defGridAttr )
+        if ( !editor && grid )
             {
-                // if we still don't have one then use the grid default
-                // (no need for IncRef() here neither)
-                editor = m_defGridAttr->GetEditor(NULL, 0, 0);
+            // get default editor for the data type
+            // GetDefaultEditorForCell() will do IncRef() for us
+            editor = grid->GetDefaultEditorForCell(row, col);
             }
             else // default grid attr
@@ -2205,5 +2192,4 @@
                 if ( editor )
                     editor->IncRef();
-            }
         }
     }

 	  	 
