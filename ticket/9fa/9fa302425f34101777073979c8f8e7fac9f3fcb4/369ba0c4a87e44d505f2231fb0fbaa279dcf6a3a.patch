Index: include/wx/defs.h
===================================================================
--- include/wx/defs.h	(revision 73712)
+++ include/wx/defs.h	(working copy)
@@ -1924,9 +1924,10 @@
 #define wxMORE                  0x00010000
 #define wxSETUP                 0x00020000
 #define wxICON_NONE             0x00040000
+#define wxICON_AUTH_NEEDED      0x00080000
 
 #define wxICON_MASK \
-    (wxICON_EXCLAMATION|wxICON_HAND|wxICON_QUESTION|wxICON_INFORMATION|wxICON_NONE)
+    (wxICON_EXCLAMATION|wxICON_HAND|wxICON_QUESTION|wxICON_INFORMATION|wxICON_NONE|wxICON_AUTH_NEEDED)
 
 /*
  * Background styles. See wxWindow::SetBackgroundStyle
Index: include/wx/msgdlg.h
===================================================================
--- include/wx/msgdlg.h	(revision 73712)
+++ include/wx/msgdlg.h	(working copy)
@@ -209,8 +209,9 @@
         { return m_help.empty() ? GetDefaultHelpLabel() : m_help; }
 
     // based on message dialog style, returns exactly one of: wxICON_NONE,
-    // wxICON_ERROR, wxICON_WARNING, wxICON_QUESTION, wxICON_INFORMATION
-    long GetEffectiveIcon() const
+    // wxICON_ERROR, wxICON_WARNING, wxICON_QUESTION, wxICON_INFORMATION,
+    // wxICON_AUTH_NEEDED
+    virtual long GetEffectiveIcon() const
     {
         if ( m_dialogStyle & wxICON_NONE )
             return wxICON_NONE;
Index: include/wx/msw/msgdlg.h
===================================================================
--- include/wx/msw/msgdlg.h	(revision 73712)
+++ include/wx/msw/msgdlg.h	(working copy)
@@ -27,6 +27,8 @@
 
     virtual int ShowModal();
 
+    virtual long GetEffectiveIcon() const;
+
     // implementation-specific
 
     // return the font used for the text in the message box
Index: interface/wx/msgdlg.h
===================================================================
--- interface/wx/msgdlg.h	(revision 73712)
+++ interface/wx/msgdlg.h	(working copy)
@@ -68,6 +68,15 @@
         Displays an information symbol. This icon is used by default if
         @c wxYES_NO is not given so it is usually unnecessary to specify it
         explicitly.
+    @style{wxICON_AUTH_NEEDED}
+        Displays an authentication needed symbol. This style is only supported
+        for message dialogs under wxMSW when a task dialog is used to implement
+        them (i.e. when running under Windows Vista or later). In other cases
+        the default icon selection logic will be used. Note this can be
+        combined with other styles to provide a fallback. For instance, using
+        wxICON_AUTH_NEEDED | wxICON_QUESTION will show a shield symbol on
+        Windows Vista or above and a question symbol on other platforms.
+        @since 2.9.5
     @style{wxSTAY_ON_TOP}
         Makes the message box stay on top of all other windows and not only
         just its parent (currently implemented only under MSW and GTK).
Index: samples/dialogs/dialogs.cpp
===================================================================
--- samples/dialogs/dialogs.cpp	(revision 73712)
+++ samples/dialogs/dialogs.cpp	(working copy)
@@ -3005,7 +3005,8 @@
         "&Information icon",
         "&Question icon",
         "&Warning icon",
-        "&Error icon"
+        "&Error icon",
+        "A&uth needed icon"
     };
 
    wxCOMPILE_TIME_ASSERT( WXSIZEOF(icons) == MsgDlgIcon_Max, IconMismatch );
@@ -3106,6 +3107,10 @@
         case MsgDlgIcon_Error:
             style |= wxICON_ERROR;
             break;
+
+        case MsgDlgIcon_AuthNeeded:
+            style |= wxICON_AUTH_NEEDED;
+            break;
     }
 
     if ( m_chkCentre->IsChecked() )
Index: samples/dialogs/dialogs.h
===================================================================
--- samples/dialogs/dialogs.h	(revision 73712)
+++ samples/dialogs/dialogs.h	(working copy)
@@ -249,6 +249,7 @@
         MsgDlgIcon_Question,
         MsgDlgIcon_Warning,
         MsgDlgIcon_Error,
+        MsgDlgIcon_AuthNeeded,
         MsgDlgIcon_Max
     };
 
Index: src/msw/msgdlg.cpp
===================================================================
--- src/msw/msgdlg.cpp	(revision 73712)
+++ src/msw/msgdlg.cpp	(working copy)
@@ -629,6 +629,18 @@
     return ShowMessageBox();
 }
 
+long wxMessageDialog::GetEffectiveIcon() const
+{
+    // only use the auth needed icon if available, otherwise fallback to the default logic
+    if ( (m_dialogStyle & wxICON_AUTH_NEEDED) &&
+        wxMSWMessageDialog::HasNativeTaskDialog() )
+    {
+        return wxICON_AUTH_NEEDED;
+    }
+
+    return wxMessageDialogBase::GetEffectiveIcon();
+}
+
 void wxMessageDialog::DoCentre(int dir)
 {
 #ifdef wxHAS_MSW_TASKDIALOG
@@ -738,6 +750,10 @@
         case wxICON_INFORMATION:
             tdc.pszMainIcon = TD_INFORMATION_ICON;
             break;
+
+        case wxICON_AUTH_NEEDED:
+            tdc.pszMainIcon = TD_SHIELD_ICON;
+            break;
     }
 
     // custom label button array that can hold all buttons in use
