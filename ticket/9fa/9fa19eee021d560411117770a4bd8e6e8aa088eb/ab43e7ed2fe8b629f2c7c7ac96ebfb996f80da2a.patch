Index: include/wx/xrc/xh_sizer.h
===================================================================
--- include/wx/xrc/xh_sizer.h	(revision 63701)
+++ include/wx/xrc/xh_sizer.h	(working copy)
@@ -27,13 +27,16 @@
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
+protected:
+    virtual wxSizer* DoCreateSizer(const wxString& class_name);
+    virtual bool IsSizerNode(wxXmlNode *node);
+
 private:
     bool m_isInside;
     bool m_isGBS;
 
     wxSizer *m_parentSizer;
 
-    bool IsSizerNode(wxXmlNode *node);
 
     wxObject* Handle_sizeritem();
     wxObject* Handle_spacer();
Index: src/xrc/xh_sizer.cpp
===================================================================
--- src/xrc/xh_sizer.cpp	(revision 63701)
+++ src/xrc/xh_sizer.cpp	(working copy)
@@ -115,8 +115,39 @@
 }
 
 
+wxSizer* wxSizerXmlHandler::DoCreateSizer(const wxString& class_name)
+{
+    if (class_name == wxT("wxBoxSizer"))
+        return Handle_wxBoxSizer();
+#if wxUSE_STATBOX
+    else if (class_name == wxT("wxStaticBoxSizer"))
+        return Handle_wxStaticBoxSizer();
+#endif
+    else if (class_name == wxT("wxGridSizer"))
+    {
+        if ( !ValidateGridSizerChildren() )
+            return NULL;
+        return Handle_wxGridSizer();
+    }
+    else if (class_name == wxT("wxFlexGridSizer"))
+    {
+        return Handle_wxFlexGridSizer();
+    }
+    else if (class_name == wxT("wxGridBagSizer"))
+    {
+        return Handle_wxGridBagSizer();
+    }
+    else if (class_name == wxT("wxWrapSizer"))
+    {
+        return Handle_wxWrapSizer();
+    }
 
+    ReportError(wxString::Format("unknown sizer class \"%s\"", class_name));
+    return NULL;
+}
 
+
+
 bool wxSizerXmlHandler::IsSizerNode(wxXmlNode *node)
 {
     return (IsOfClass(node, wxT("wxBoxSizer"))) ||
@@ -208,36 +239,11 @@
         return NULL;
     }
 
-    if (m_class == wxT("wxBoxSizer"))
-        sizer = Handle_wxBoxSizer();
-#if wxUSE_STATBOX
-    else if (m_class == wxT("wxStaticBoxSizer"))
-        sizer = Handle_wxStaticBoxSizer();
-#endif
-    else if (m_class == wxT("wxGridSizer"))
+    sizer = DoCreateSizer(m_class);
+    if (sizer->IsKindOf(CLASSINFO(wxFlexGridSizer)))
     {
-        if ( !ValidateGridSizerChildren() )
-            return NULL;
-        sizer = Handle_wxGridSizer();
+        flexsizer = wxDynamicCast(sizer, wxFlexGridSizer);
     }
-    else if (m_class == wxT("wxFlexGridSizer"))
-    {
-        flexsizer = Handle_wxFlexGridSizer();
-        sizer = flexsizer;
-    }
-    else if (m_class == wxT("wxGridBagSizer"))
-    {
-        flexsizer = Handle_wxGridBagSizer();
-        sizer = flexsizer;
-    }
-    else if (m_class == wxT("wxWrapSizer"))
-    {
-        sizer = Handle_wxWrapSizer();
-    }
-    else
-    {
-        ReportError(wxString::Format("unknown sizer class \"%s\"", m_class));
-    }
 
     // creation of sizer failed for some (already reported) reason, so exit:
     if ( !sizer )
@@ -250,12 +256,18 @@
     // save state
     wxSizer *old_par = m_parentSizer;
     bool old_ins = m_isInside;
+    wxObject *old_parent = m_parent;
 
     // set new state
     m_parentSizer = sizer;
     m_isInside = true;
     m_isGBS = (m_class == wxT("wxGridBagSizer"));
 
+    //since wxWidgets 2.9.1 we are encouraged to create the windows which
+    //are added to wxStaticBoxSizer as children of wxStaticBox itself
+    if (sizer->IsKindOf(CLASSINFO(wxStaticBoxSizer)))
+        m_parent = wxDynamicCast(sizer, wxStaticBoxSizer)->GetStaticBox();
+
     CreateChildren(m_parent, true/*only this handler*/);
 
     // set growable rows and cols for sizers which support this
@@ -268,6 +280,7 @@
     // restore state
     m_isInside = old_ins;
     m_parentSizer = old_par;
+    m_parent = old_parent;
 
     if (m_parentSizer == NULL) // setup window:
     {
