Index: src/gtk/button.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/gtk/button.cpp,v
retrieving revision 1.52.2.1
diff -b -u -2 -r1.52.2.1 button.cpp
--- src/gtk/button.cpp	2002/11/04 20:13:23	1.52.2.1
+++ src/gtk/button.cpp	2003/03/03 20:20:15
@@ -176,5 +176,10 @@
     wxControl::SetLabel( label );
 
+#ifdef __WXGTK20__
+    wxString label2 = PrepareLabelMnemonics( label );
+    gtk_label_set_text_with_mnemonic( GTK_LABEL( BUTTON_CHILD(m_widget) ), wxGTK_CONV( label2 ) );
+#else
     gtk_label_set( GTK_LABEL( BUTTON_CHILD(m_widget) ), wxGTK_CONV( GetLabel() ) );
+#endif
 }
 
Index: src/gtk/checkbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/gtk/checkbox.cpp,v
retrieving revision 1.52
diff -b -u -2 -r1.52 checkbox.cpp
--- src/gtk/checkbox.cpp	2002/08/05 17:59:19	1.52
+++ src/gtk/checkbox.cpp	2003/03/03 20:20:15
@@ -86,6 +86,4 @@
     }
 
-    wxControl::SetLabel( label );
-
     if ( style & wxALIGN_RIGHT )
     {
@@ -95,5 +93,5 @@
         m_widgetCheckbox = gtk_check_button_new();
 
-        m_widgetLabel = gtk_label_new( wxGTK_CONV( m_label ) );
+        m_widgetLabel = gtk_label_new("");
         gtk_misc_set_alignment(GTK_MISC(m_widgetLabel), 0.0, 0.5);
 
@@ -107,8 +105,9 @@
     else
     {
-        m_widgetCheckbox = gtk_check_button_new_with_label( wxGTK_CONV( m_label ) );
+        m_widgetCheckbox = gtk_check_button_new_with_label("");
         m_widgetLabel = BUTTON_CHILD( m_widgetCheckbox );
         m_widget = m_widgetCheckbox;
     }
+    SetLabel( label );
 
     gtk_signal_connect( GTK_OBJECT(m_widgetCheckbox),
@@ -167,5 +166,10 @@
     wxControl::SetLabel( label );
 
+#ifdef __WXGTK20__
+    wxString label2 = PrepareLabelMnemonics( label );
+    gtk_label_set_text_with_mnemonic( GTK_LABEL(m_widgetLabel), wxGTK_CONV( label2 ) );
+#else
     gtk_label_set( GTK_LABEL(m_widgetLabel), wxGTK_CONV( GetLabel() ) );
+#endif
 }
 
Index: src/gtk/control.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/gtk/control.cpp,v
retrieving revision 1.26
diff -b -u -2 -r1.26 control.cpp
--- src/gtk/control.cpp	2001/06/26 20:59:15	1.26
+++ src/gtk/control.cpp	2003/03/03 20:20:15
@@ -84,4 +84,46 @@
 }
 
+wxString wxControl::PrepareLabelMnemonics( const wxString &label ) const
+{
+    //Format mnemonics properly for GTK2. This can be called from GTK1.x, but
+    //it's not very useful because mnemonics don't exist prior to GTK2.
+    wxString label2;
+    for (size_t i = 0; i < label.Len(); i++)
+    {
+        if (label.GetChar(i) == wxT('&'))
+        {
+            //Mnemonic escape sequence "&&" is a literal "&" in the output.
+            if (label.GetChar(i + 1) == wxT('&'))
+            {
+                label2 << wxT('&');
+                i++;
+            }
+            //Handle special case of "&_" (i.e. "_" is the mnemonic).
+            //FIXME - Is it possible to use "_" as a GTK mnemonic? Just use a
+            //dash for now.
+            else if (label.GetChar(i + 1) == wxT('_'))
+            {
+                label2 << wxT("_-");
+                i++;
+            }
+            //Replace WX mnemonic indicator "&" with GTK indicator "_".
+            else
+            {
+                label2 << wxT('_');
+            }
+        }
+        else if (label.GetChar(i) == wxT('_'))
+        {
+            //Escape any underlines in the string so GTK doesn't use them.
+            label2 << wxT("__");
+        }
+        else
+        {
+            label2 << label.GetChar(i);
+        }
+    }
+    return label2;
+}
+
 #endif // wxUSE_CONTROLS
 
Index: src/gtk/radiobut.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/gtk/radiobut.cpp,v
retrieving revision 1.42
diff -b -u -2 -r1.42 radiobut.cpp
--- src/gtk/radiobut.cpp	2002/08/05 17:59:19	1.42
+++ src/gtk/radiobut.cpp	2003/03/03 20:20:16
@@ -155,5 +155,10 @@
     wxControl::SetLabel( label );
     GtkLabel *g_label = GTK_LABEL( BUTTON_CHILD(m_widget) );
+#ifdef __WXGTK20__
+    wxString label2 = PrepareLabelMnemonics( label );
+    gtk_label_set_text_with_mnemonic( g_label, wxGTK_CONV( label2 ) );
+#else
     gtk_label_set( g_label, wxGTK_CONV( GetLabel() ) );
+#endif
 }
 
Index: include/wx/gtk/control.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/gtk/control.h,v
retrieving revision 1.16
diff -b -u -2 -r1.16 control.h
--- include/wx/gtk/control.h	2002/09/07 12:28:46	1.16
+++ include/wx/gtk/control.h	2003/03/03 20:20:16
@@ -56,4 +56,5 @@
 protected:
     virtual wxSize DoGetBestSize() const;
+    virtual wxString PrepareLabelMnemonics( const wxString &label ) const;
 
     wxString   m_label;

 	  	 
