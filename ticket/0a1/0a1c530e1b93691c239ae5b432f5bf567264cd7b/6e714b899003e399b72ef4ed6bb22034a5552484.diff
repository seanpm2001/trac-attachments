Index: samples/dialogs/dialogs.cpp
===================================================================
--- samples/dialogs/dialogs.cpp	(revision 70572)
+++ samples/dialogs/dialogs.cpp	(working copy)
@@ -309,6 +309,11 @@
 
 #endif // wxUSE_CMDLINE_PARSER
 
+
+//test
+wxDialog *test_dlg;
+
+
 // `Main program' equivalent, creating windows and returning main app frame
 bool MyApp::OnInit()
 {
@@ -574,8 +579,23 @@
     frame->SetMenuBar(menubar);
 
     frame->Centre(wxBOTH);
+
+// test: this position works
+//    frame->Show(true);
+
+
+// test: simular to preloading dialogs with wxXmlResource::LoadDialog
+	test_dlg = new wxDialog (frame, wxID_ANY, wxT("Dialog centered on screen"),
+                 wxDefaultPosition, wxSize(200, 100));
+    (new wxButton(test_dlg, wxID_OK, wxT("Close")))->Centre();
+
+
+// to launch the above dialog: run dialogs.exe, select Dialogs|Generic dialogs|Centered on screen
+
+// test: this position shows problem of separate taskbar items
     frame->Show(true);
 
+
     return true;
 }
 
@@ -1652,11 +1672,8 @@
 
 void MyFrame::DlgCenteredScreen(wxCommandEvent& WXUNUSED(event))
 {
-    wxDialog dlg(this, wxID_ANY, wxT("Dialog centered on screen"),
-                 wxDefaultPosition, wxSize(200, 100));
-    (new wxButton(&dlg, wxID_OK, wxT("Close")))->Centre();
-    dlg.CentreOnScreen();
-    dlg.ShowModal();
+    test_dlg->CentreOnScreen();
+    test_dlg->ShowModal();
 }
 
 void MyFrame::DlgCenteredParent(wxCommandEvent& WXUNUSED(event))
