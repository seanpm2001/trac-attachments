Index: griddemo.cpp
===================================================================
--- griddemo.cpp	(revisione 70530)
+++ griddemo.cpp	(copia locale)
@@ -1384,14 +1384,14 @@
     wxChar summary[80];
     Severity severity;
     int prio;
-    wxChar platform[12];
+    int platform;
     bool opened;
 } gs_dataBugsGrid [] =
 {
-    { 18, wxT("foo doesn't work"), Sev_Major, 1, wxT("wxMSW"), true },
-    { 27, wxT("bar crashes"), Sev_Critical, 1, wxT("all"), false },
-    { 45, wxT("printing is slow"), Sev_Minor, 3, wxT("wxMSW"), true },
-    { 68, wxT("Rectangle() fails"), Sev_Normal, 1, wxT("wxMSW"), false },
+    { 18, wxT("foo doesn't work"), Sev_Major, 1, 1, true },
+    { 27, wxT("bar crashes"), Sev_Critical, 1, 0, false },
+    { 45, wxT("printing is slow"), Sev_Minor, 3, 1, true },
+    { 68, wxT("Rectangle() fails"), Sev_Normal, 1, 1, false },
 };
 
 static const wxChar *headers[Col_Max] =
@@ -1414,6 +1414,7 @@
     {
         case Col_Id:
         case Col_Priority:
+        case Col_Platform:
             return wxGRID_VALUE_NUMBER;;
 
         case Col_Severity:
@@ -1422,9 +1423,6 @@
         case Col_Summary:
             return wxString::Format(wxT("%s:80"), wxGRID_VALUE_STRING);
 
-        case Col_Platform:
-            return wxString::Format(wxT("%s:all,MSW,GTK,other"), wxGRID_VALUE_CHOICE);
-
         case Col_Opened:
             return wxGRID_VALUE_BOOL;
     }
@@ -1471,7 +1469,7 @@
             return gd.summary;
 
         case Col_Platform:
-            return gd.platform;
+            return wxString::Format(wxT("%d"), gd.platform);
     }
 
     return wxEmptyString;
@@ -1486,6 +1484,7 @@
         case Col_Id:
         case Col_Priority:
         case Col_Opened:
+        case Col_Platform:
             wxFAIL_MSG(wxT("unexpected column"));
             break;
 
@@ -1513,10 +1512,6 @@
         case Col_Summary:
             wxStrncpy(gd.summary, value, WXSIZEOF(gd.summary));
             break;
-
-        case Col_Platform:
-            wxStrncpy(gd.platform, value, WXSIZEOF(gd.platform));
-            break;
     }
 }
 
@@ -1535,7 +1530,7 @@
     }
     else if ( typeName == wxGRID_VALUE_NUMBER )
     {
-        return col == Col_Id || col == Col_Priority || col == Col_Severity;
+        return col == Col_Id || col == Col_Priority || col == Col_Severity || col == Col_Platform;
     }
     else
     {
@@ -1563,6 +1558,9 @@
         case Col_Severity:
             return gd.severity;
 
+        case Col_Platform:
+            return gd.platform;
+
         default:
             wxFAIL_MSG(wxT("unexpected column"));
             return -1;
@@ -1593,6 +1591,10 @@
             gd.prio = value;
             break;
 
+        case Col_Platform:
+            gd.platform = value;
+            break;
+
         default:
             wxFAIL_MSG(wxT("unexpected column"));
     }
@@ -1629,16 +1631,22 @@
 
     wxGridCellAttr *attrRO = new wxGridCellAttr,
                    *attrRangeEditor = new wxGridCellAttr,
-                   *attrCombo = new wxGridCellAttr;
+                   *attrCombo = new wxGridCellAttr,
+                   *attrPlatform = new wxGridCellAttr;
 
     attrRO->SetReadOnly();
     attrRangeEditor->SetEditor(new wxGridCellNumberEditor(1, 5));
     attrCombo->SetEditor(new wxGridCellChoiceEditor(WXSIZEOF(severities),
                                                     severities));
 
+    attrPlatform->SetEditor( new wxGridCellEnumEditor("all,MSW,GTK,other") );
+    attrPlatform->SetRenderer( new wxGridCellEnumRenderer("all,MSW,GTK,other") );
+    attrPlatform->SetAlignment( wxALIGN_LEFT, wxALIGN_TOP );
+
     grid->SetColAttr(Col_Id, attrRO);
     grid->SetColAttr(Col_Priority, attrRangeEditor);
     grid->SetColAttr(Col_Severity, attrCombo);
+    grid->SetColAttr(Col_Platform, attrPlatform);
 
     grid->Fit();
     SetClientSize(grid->GetSize());
