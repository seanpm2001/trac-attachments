# **************************************************************************** #
#                                                                              #
#                                                         :::      ::::::::    #
#    CMakeLists.txt                                     :+:      :+:    :+:    #
#                                                     +:+ +:+         +:+      #
#    By: Mitrik <MitrikSicilian@icloud.com>         +#+  +:+       +#+         #
#                                                 +#+#+#+#+#+   +#+            #
#    Created: 2018/03/18 22:11:08 by Mitrik            #+#    #+#              #
#    Updated: 2020/01/08 22:58:16 by Mitrik           ###   ########.fr        #
#                                                                              #
# **************************************************************************** #

cmake_minimum_required(VERSION 3.0 FATAL_ERROR)

###############
#   Project   #
###############

project(ChainTimer
        VERSION 0.1.0
        DESCRIPTION "A Chain Timer"
        LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 14)

#################
#   Defaults    #
#################

if (NOT CMAKE_BUILD_TYPE)
    set(CMAKE_BUILD_TYPE Release)
    message(STATUS "Setting build type to '${CMAKE_BUILD_TYPE}' as none was specified.")
endif ()

#################
#   Externals   #
#################

set(wxBUILD_SHARED OFF CACHE BOOL "Link to a Static build of wxWidgets" FORCE)

set(wxUSE_STL ON CACHE BOOL "" FORCE)

set(wxUSE_LIBJPEG OFF CACHE BOOL "" FORCE)
set(wxUSE_LIBTIFF OFF CACHE BOOL "" FORCE)
set(wxUSE_LIBLZMA OFF CACHE BOOL "" FORCE)
set(wxUSE_LIBSDL OFF CACHE BOOL "" FORCE)
set(wxUSE_LIBMSPACK OFF CACHE BOOL "" FORCE)

add_subdirectory("${CMAKE_SOURCE_DIR}/externals/wxWidgets")

###################
#   The targets   #
###################

add_executable(${PROJECT_NAME}
    sources/main.cpp
)

#################
#   The rules   #
#################

target_compile_options(${PROJECT_NAME} PUBLIC -Wall -Wextra -Werror)

# target_compile_definitions(${PROJECT_NAME} )
# target_include_directories(${PROJECT_NAME} )

target_link_libraries(${PROJECT_NAME} core base) # Add aui advanced ???

set_target_properties(${PROJECT_NAME} PROPERTIES
        VERSION ${PROJECT_VERSION}
        RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}")