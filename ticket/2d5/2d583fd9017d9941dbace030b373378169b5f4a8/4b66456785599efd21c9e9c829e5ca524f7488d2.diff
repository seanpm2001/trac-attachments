Index: wxWidgets/samples/notebook/notebook.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/notebook/notebook.cpp,v
retrieving revision 1.31
diff -b -u -2 -r1.31 notebook.cpp
--- wxWidgets/samples/notebook/notebook.cpp	2004/09/24 13:45:52	1.31
+++ wxWidgets/samples/notebook/notebook.cpp	2004/10/04 02:03:25
@@ -215,15 +215,15 @@
 
     wxMenu *menuDo = new wxMenu;
-    menuDo->Append(ID_ADD_PAGE, wxT("&Add page"));
-    menuDo->Append(ID_INSERT_PAGE, wxT("&Insert page"));
-    menuDo->Append(ID_DELETE_CUR_PAGE, wxT("&Delete current page"));
-    menuDo->Append(ID_DELETE_LAST_PAGE, wxT("D&elete last page"));
-    menuDo->Append(ID_NEXT_PAGE, wxT("&Next page"));
+    menuDo->Append(ID_ADD_PAGE, wxT("&Add page\tAlt-A"));
+    menuDo->Append(ID_INSERT_PAGE, wxT("&Insert page\tAlt-I"));
+    menuDo->Append(ID_DELETE_CUR_PAGE, wxT("&Delete current page\tAlt-D"));
+    menuDo->Append(ID_DELETE_LAST_PAGE, wxT("D&elete last page\tAlt-L"));
+    menuDo->Append(ID_NEXT_PAGE, wxT("&Next page\tAlt-N"));
 
     wxMenu *menuFile = new wxMenu;
     menuFile->Append(wxID_ANY, wxT("&Type"), menuType, wxT("Type of control"));
     menuFile->Append(wxID_ANY, wxT("&Orientation"), menuOrient, wxT("Orientation of control"));
-    menuFile->AppendCheckItem(ID_SHOW_IMAGES, wxT("&Show images"));
-    menuFile->AppendCheckItem(ID_MULTI, wxT("&Multiple lines"));
+    menuFile->AppendCheckItem(ID_SHOW_IMAGES, wxT("&Show images\tAlt-S"));
+    menuFile->AppendCheckItem(ID_MULTI, wxT("&Multiple lines\tAlt-M"));
     menuFile->AppendSeparator();
     menuFile->Append(wxID_EXIT, wxT("E&xit"), wxT("Quits the application"));
@@ -668,6 +668,4 @@
             {                                                                              \
                 event.Veto();                                                              \
-                                                                                           \
-                return;                                                                    \
             }                                                                              \
                                                                                            \
@@ -688,5 +686,4 @@
     m_text->SetInsertionPointEnd();                                                        \
                                                                                            \
-    event.Skip();                                                                          \
 }
 
Index: wxWidgets/src/generic/choicbkg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/choicbkg.cpp,v
retrieving revision 1.3
diff -b -u -2 -r1.3 choicbkg.cpp
--- wxWidgets/src/generic/choicbkg.cpp	2004/09/23 12:43:10	1.3
+++ wxWidgets/src/generic/choicbkg.cpp	2004/10/04 02:03:27
@@ -310,4 +310,5 @@
             page->Show();
 
+            // change m_selection now to ignore the selection change event
             m_selection = n;
             m_choice->Select(n);
@@ -338,14 +339,26 @@
     m_choice->Insert(text, n);
 
-    // we should always have some selection if possible
-    if ( bSelect || (m_selection == wxNOT_FOUND) )
+    // if the inserted page is before the selected one, we must update the
+    // index of the selected page
+    if ( int(n) <= m_selection )
     {
-        SetSelection(n);
+        // one extra page added 
+        m_selection++;
+        m_choice->Select(m_selection);
     }
-    else // don't select this page
-    {
-        // it will be shown only when selected
+
+    // some page should be selected: either this one or the first one if there
+    // is still no selection
+    int selNew = -1;
+    if ( bSelect )
+        selNew = n;
+    else if ( m_selection == -1 )
+        selNew = 0;
+
+    if ( selNew != m_selection )
         page->Hide();
-    }
+
+    if ( selNew != -1 )
+        SetSelection(selNew);
 
     InvalidateBestSize();
@@ -396,5 +409,4 @@
 {
     const int selNew = eventChoice.GetSelection();
-    const int selOld = m_selection;
 
     if ( selNew == m_selection )
@@ -406,26 +418,9 @@
     }
 
-    // first send "change in progress" event which may be vetoed by user
-    wxChoicebookEvent eventIng(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING, GetId());
-
-    eventIng.SetEventObject(this);
-    eventIng.SetSelection(selNew);
-    eventIng.SetOldSelection(selOld);
-    if ( GetEventHandler()->ProcessEvent(eventIng) && !eventIng.IsAllowed() )
-    {
-        m_choice->Select(m_selection);
-        return;
-    }
-
-    // change allowed: do change the page and notify the user about it
     SetSelection(selNew);
-
-    wxChoicebookEvent eventEd(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED, GetId());
 
-    eventEd.SetEventObject(this);
-    eventEd.SetSelection(selNew);
-    eventEd.SetOldSelection(selOld);
-
-    (void)GetEventHandler()->ProcessEvent(eventEd);
+    // change wasn't allowed, return to previous state
+    if (m_selection != selNew)
+        m_choice->Select(m_selection);
 }
 
Index: wxWidgets/src/generic/listbkg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/listbkg.cpp,v
retrieving revision 1.20
diff -b -u -2 -r1.20 listbkg.cpp
--- wxWidgets/src/generic/listbkg.cpp	2004/09/30 19:12:06	1.20
+++ wxWidgets/src/generic/listbkg.cpp	2004/10/04 02:03:27
@@ -368,4 +368,5 @@
             page->Show();
 
+            // change m_selection now to ignore the selection change event
             m_selection = n;
             m_list->Select(n);
@@ -397,14 +398,27 @@
     m_list->InsertItem(n, text, imageId);
 
-    // we should always have some selection if possible
-    if ( bSelect || (m_selection == wxNOT_FOUND) )
+    // if the inserted page is before the selected one, we must update the
+    // index of the selected page
+    if ( int(n) <= m_selection )
     {
-        SetSelection(n);
+        // one extra page added 
+        m_selection++;
+        m_list->Select(m_selection);
+        m_list->Focus(m_selection);
     }
-    else // don't select this page
-    {
-        // it will be shown only when selected
+
+    // some page should be selected: either this one or the first one if there
+    // is still no selection
+    int selNew = -1;
+    if ( bSelect )
+        selNew = n;
+    else if ( m_selection == -1 )
+        selNew = 0;
+
+    if ( selNew != m_selection )
         page->Hide();
-    }
+
+    if ( selNew != -1 )
+        SetSelection(selNew);
 
     InvalidateBestSize();
@@ -455,5 +469,4 @@
 {
     const int selNew = eventList.GetIndex();
-    const int selOld = m_selection;
 
     if ( selNew == m_selection )
@@ -465,26 +478,12 @@
     }
 
-    // first send "change in progress" event which may be vetoed by user
-    wxListbookEvent eventIng(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGING, GetId());
+    SetSelection(selNew);
 
-    eventIng.SetEventObject(this);
-    eventIng.SetSelection(selNew);
-    eventIng.SetOldSelection(selOld);
-    if ( GetEventHandler()->ProcessEvent(eventIng) && !eventIng.IsAllowed() )
+    // change wasn't allowed, return to previous state
+    if (m_selection != selNew)
     {
         m_list->Select(m_selection);
-        return;
+        m_list->Focus(m_selection);
     }
-
-    // change allowed: do change the page and notify the user about it
-    SetSelection(selNew);
-
-    wxListbookEvent eventEd(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGED, GetId());
-
-    eventEd.SetEventObject(this);
-    eventEd.SetSelection(selNew);
-    eventEd.SetOldSelection(selOld);
-
-    (void)GetEventHandler()->ProcessEvent(eventEd);
 }
 

 	  	 
