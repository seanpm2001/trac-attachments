Index: setup.h.in
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/setup.h.in,v
retrieving revision 1.111
diff -u -r1.111 setup.h.in
--- setup.h.in	2003/04/12 00:32:22	1.111
+++ setup.h.in	2003/05/06 18:17:55
@@ -136,7 +136,7 @@
 #endif
 
 /* enable rich edit under Win32 */
-#if defined(__WIN95__) && !defined(__TWIN32__) && !defined(__GNUWIN32_OLD__)
+#if defined(__WIN95__) && !defined(__WINE__) && !defined(__GNUWIN32_OLD__)
 #define wxUSE_RICHEDIT 1
 #else
 #define wxUSE_RICHEDIT 0
Index: setup.h_vms
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/setup.h_vms,v
retrieving revision 1.47
diff -u -r1.47 setup.h_vms
--- setup.h_vms	2003/04/24 13:48:39	1.47
+++ setup.h_vms	2003/05/06 18:17:56
@@ -148,7 +148,7 @@
 #endif
 
 /* enable rich edit under Win32 */
-#if defined(__WIN95__) && !defined(__TWIN32__) && !defined(__GNUWIN32_OLD__)
+#if defined(__WIN95__) && !defined(__WINE__) && !defined(__GNUWIN32_OLD__)
 #define wxUSE_RICHEDIT 1
 #else
 #define wxUSE_RICHEDIT 0
Index: docs/html/faqmsw.htm
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/docs/html/faqmsw.htm,v
retrieving revision 1.15
diff -u -r1.15 faqmsw.htm
--- docs/html/faqmsw.htm	2002/12/04 13:56:52	1.15
+++ docs/html/faqmsw.htm	2003/05/06 18:18:02
@@ -62,14 +62,13 @@
 16-bit compilation is supported under Visual C++ 1.5, and Borland BC++ 4 to 5.
 <P>
 
-wxWindows 2 for Windows will also compile on Unix with gcc using TWIN32 from <a href="http://www.willows.com" target=_top>Willows</a>,
-although TWIN32 is still in a preliminary state. The resulting executables are
-Unix binaries that work with the TWIN32 Windows API emulator.<P>
+wxWindows 2 for Windows will also compile on Unix with gcc using Wine from <a href="http://www.winehq.org" target=_top>WineHQ</a>.
+The resulting executables are Unix binaries that work with the Wine Windows API emulator.<P>
 
 You can also compile wxWindows 2 for Windows on Unix with Cygwin or Mingw32, resulting
 in executables that will run on Windows. So in theory you could write your applications
 using wxGTK or wxMotif, then check/debug your wxWindows for Windows
-programs with TWIN32, and finally produce an ix86 Windows executable using Cygwin/Mingw32,
+programs with Wine, and finally produce an ix86 Windows executable using Cygwin/Mingw32,
 without ever needing a copy of Microsoft Windows. See the Technical Note on the Web site detailing cross-compilation.<P>
 
 <h3><a name="wince">What about Windows CE?</a></h3>
Index: include/wx/platform.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/platform.h,v
retrieving revision 1.19
diff -u -r1.19 platform.h
--- include/wx/platform.h	2003/05/06 15:08:52	1.19
+++ include/wx/platform.h	2003/05/06 18:18:04
@@ -76,10 +76,6 @@
     #endif
 #endif /* WINE */
 
-#if defined(TWIN32) && !defined(__TWIN32__)
-    #define __TWIN32__
-#endif /* Twin32 */
-
 /*
    Include wx/setup.h for the Unix platform defines generated by configure and
    the library compilation options
Index: include/wx/mac/setup0.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/mac/setup0.h,v
retrieving revision 1.17
diff -u -r1.17 setup0.h
--- include/wx/mac/setup0.h	2003/03/30 22:47:08	1.17
+++ include/wx/mac/setup0.h	2003/05/06 18:18:06
@@ -975,7 +975,7 @@
 //
 // Recommended setting: 1, only set it to 0 if your compiler doesn't have
 //                      or can't compile <richedit.h>
-#if defined(__WIN95__) && !defined(__TWIN32__) && !defined(__GNUWIN32_OLD__)
+#if defined(__WIN95__) && !defined(__WINE__) && !defined(__GNUWIN32_OLD__)
 #define wxUSE_RICHEDIT  1
 
 // TODO:  This should be ifdef'ed for any compilers that don't support
@@ -1085,16 +1085,6 @@
 #undef wxUSE_OWNER_DRAWN
 #define wxUSE_OWNER_DRAWN 0
 #endif // __SALFORDC__
-
-#ifdef __TWIN32__
-
-#undef wxUSE_THREADS
-#define wxUSE_THREADS 0
-
-#undef wxUSE_ODBC
-#define wxUSE_ODBC 0
-
-#endif // __TWIN32__
 
 // BC++/Win16 can't cope with the amount of data in resource.cpp
 #if defined(__WIN16__) && defined(__BORLANDC__)
Index: include/wx/msw/setup0.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/msw/setup0.h,v
retrieving revision 1.139
diff -u -r1.139 setup0.h
--- include/wx/msw/setup0.h	2003/03/30 22:47:12	1.139
+++ include/wx/msw/setup0.h	2003/05/06 18:18:08
@@ -1012,7 +1012,7 @@
 //
 // Recommended setting: 1, only set it to 0 if your compiler doesn't have
 //                      or can't compile <richedit.h>
-#if defined(__WIN95__) && !defined(__TWIN32__) && !defined(__GNUWIN32_OLD__)
+#if defined(__WIN95__) && !defined(__WINE__) && !defined(__GNUWIN32_OLD__)
 #define wxUSE_RICHEDIT  1
 
 // TODO:  This should be ifdef'ed for any compilers that don't support
@@ -1133,16 +1133,6 @@
 #undef wxUSE_OWNER_DRAWN
 #define wxUSE_OWNER_DRAWN 0
 #endif // __SALFORDC__
-
-#ifdef __TWIN32__
-
-#undef wxUSE_THREADS
-#define wxUSE_THREADS 0
-
-#undef wxUSE_ODBC
-#define wxUSE_ODBC 0
-
-#endif // __TWIN32__
 
 // BC++/Win16 can't cope with the amount of data in resource.cpp
 #if defined(__WIN16__) && defined(__BORLANDC__)
Index: include/wx/msw/setup_microwin.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/msw/setup_microwin.h,v
retrieving revision 1.11
diff -u -r1.11 setup_microwin.h
--- include/wx/msw/setup_microwin.h	2003/03/23 20:07:53	1.11
+++ include/wx/msw/setup_microwin.h	2003/05/06 18:18:10
@@ -975,7 +975,7 @@
 //
 // Recommended setting: 1, only set it to 0 if your compiler doesn't have
 //                      or can't compile <richedit.h>
-#if defined(__WIN95__) && !defined(__TWIN32__) && !defined(__GNUWIN32_OLD__)
+#if defined(__WIN95__) && !defined(__WINE__) && !defined(__GNUWIN32_OLD__)
 #define wxUSE_RICHEDIT  1
 
 // TODO:  This should be ifdef'ed for any compilers that don't support
@@ -1090,16 +1090,6 @@
 #undef wxUSE_OWNER_DRAWN
 #define wxUSE_OWNER_DRAWN 0
 #endif // __SALFORDC__
-
-#ifdef __TWIN32__
-
-#undef wxUSE_THREADS
-#define wxUSE_THREADS 0
-
-#undef wxUSE_ODBC
-#define wxUSE_ODBC 0
-
-#endif // __TWIN32__
 
 // BC++/Win16 can't cope with the amount of data in resource.cpp
 #if defined(__WIN16__) && defined(__BORLANDC__)
Index: include/wx/msw/wince/setup.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/msw/wince/setup.h,v
retrieving revision 1.3
diff -u -r1.3 setup.h
--- include/wx/msw/wince/setup.h	2003/03/17 10:25:28	1.3
+++ include/wx/msw/wince/setup.h	2003/05/06 18:18:12
@@ -1011,7 +1011,7 @@
 //
 // Recommended setting: 1, only set it to 0 if your compiler doesn't have
 //                      or can't compile <richedit.h>
-#if defined(__WIN95__) && !defined(__TWIN32__) && !defined(__GNUWIN32_OLD__)
+#if defined(__WIN95__) && !defined(__WINE__) && !defined(__GNUWIN32_OLD__)
 #define wxUSE_RICHEDIT  1
 
 // TODO:  This should be ifdef'ed for any compilers that don't support
@@ -1132,16 +1132,6 @@
 #undef wxUSE_OWNER_DRAWN
 #define wxUSE_OWNER_DRAWN 0
 #endif // __SALFORDC__
-
-#ifdef __TWIN32__
-
-#undef wxUSE_THREADS
-#define wxUSE_THREADS 0
-
-#undef wxUSE_ODBC
-#define wxUSE_ODBC 0
-
-#endif // __TWIN32__
 
 // BC++/Win16 can't cope with the amount of data in resource.cpp
 #if defined(__WIN16__) && defined(__BORLANDC__)
Index: include/wx/univ/setup0.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/univ/setup0.h,v
retrieving revision 1.12
diff -u -r1.12 setup0.h
--- include/wx/univ/setup0.h	2003/04/03 12:58:46	1.12
+++ include/wx/univ/setup0.h	2003/05/06 18:18:14
@@ -1112,7 +1112,7 @@
 //
 // Recommended setting: 1, only set it to 0 if your compiler doesn't have
 //                      or can't compile <richedit.h>
-#if defined(__WIN95__) && !defined(__TWIN32__) && !defined(__GNUWIN32_OLD__)
+#if defined(__WIN95__) && !defined(__WINE__) && !defined(__GNUWIN32_OLD__)
 // TODO:  This should be ifdef'ed for any compilers that don't support
 //        RichEdit 2.0 but do have RichEdit 1.0...
     #define wxUSE_RICHEDIT 0 // currently not supported
@@ -1211,14 +1211,6 @@
     #undef wxUSE_OWNER_DRAWN
     #define wxUSE_OWNER_DRAWN 0
 #endif // __SALFORDC__
-
-#ifdef __TWIN32__
-    #undef wxUSE_THREADS
-    #define wxUSE_THREADS 0
-
-    #undef wxUSE_ODBC
-    #define wxUSE_ODBC 0
-#endif // __TWIN32__
 
 // BC++/Win16 can't cope with the amount of data in resource.cpp
 #if defined(__WIN16__) && defined(__BORLANDC__)
Index: src/common/filefn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/filefn.cpp,v
retrieving revision 1.172
diff -u -r1.172 filefn.cpp
--- src/common/filefn.cpp	2003/04/02 11:10:32	1.172
+++ src/common/filefn.cpp	2003/05/06 18:18:21
@@ -131,10 +131,6 @@
         #ifdef __CYGWIN__
             #include <sys/cygwin.h>
         #endif
-
-        #ifndef __TWIN32__
-            #include <sys/unistd.h>
-        #endif
     #endif // __GNUWIN32__
 #endif // __WINDOWS__
 
Index: src/msw/accel.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/accel.cpp,v
retrieving revision 1.20
diff -u -r1.20 accel.cpp
--- src/msw/accel.cpp	2003/01/07 18:11:46	1.20
+++ src/msw/accel.cpp	2003/05/06 18:18:22
@@ -58,7 +58,7 @@
   if (m_hAccel)
   {
     // This function not available in WIN16
-#if !defined(__WIN16__) && !defined(__TWIN32__)
+#if !defined(__WIN16__)
     DestroyAcceleratorTable((HACCEL) m_hAccel);
 #endif
   }
@@ -80,7 +80,7 @@
     m_refData = new wxAcceleratorRefData;
 
     HACCEL hAccel =
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
 #ifdef UNICODE
         ::LoadAcceleratorsW(wxGetInstance(), (const wxChar *)resource);
 #else
@@ -96,7 +96,7 @@
 extern int wxCharCodeWXToMSW(int id, bool *isVirtual);
 
 // Create from an array
-#if !defined(__WIN16__) && !defined(__TWIN32__)
+#if !defined(__WIN16__)
 wxAcceleratorTable::wxAcceleratorTable(int n, const wxAcceleratorEntry entries[])
 {
     // Not available in WIN16
Index: src/msw/app.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/app.cpp,v
retrieving revision 1.184
diff -u -r1.184 app.cpp
--- src/msw/app.cpp	2003/05/02 11:16:09	1.184
+++ src/msw/app.cpp	2003/05/06 18:18:24
@@ -84,7 +84,7 @@
 #include <string.h>
 #include <ctype.h>
 
-#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__TWIN32__) || defined(__WXMICROWIN__)) && !defined(__CYGWIN10__))
+#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__WXMICROWIN__)) && !defined(__CYGWIN10__))
     #include <commctrl.h>
 #endif
 
@@ -1381,6 +1381,6 @@
 
 // For some reason, with MSVC++ 1.5, WinMain isn't linked in properly
 // if in a separate file. So include it here to ensure it's linked.
-#if (defined(__VISUALC__) && !defined(__WIN32__)) || (defined(__GNUWIN32__) && !defined(__WINE__) && !defined(__TWIN32__) && !defined(WXMAKINGDLL))
+#if (defined(__VISUALC__) && !defined(__WIN32__)) || (defined(__GNUWIN32__) && !defined(__WINE__) && !defined(WXMAKINGDLL))
 #include "main.cpp"
 #endif
Index: src/msw/control.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/control.cpp,v
retrieving revision 1.49
diff -u -r1.49 control.cpp
--- src/msw/control.cpp	2003/03/17 11:21:52	1.49
+++ src/msw/control.cpp	2003/05/06 18:18:25
@@ -33,7 +33,7 @@
 
 #include "wx/msw/private.h"
 
-#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__TWIN32__)) && !defined(__CYGWIN10__))
+#if defined(__WIN95__) && !(defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__))
     #include <commctrl.h>
 #endif
 
Index: src/msw/dde.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/dde.cpp,v
retrieving revision 1.31
diff -u -r1.31 dde.cpp
--- src/msw/dde.cpp	2003/03/17 11:21:53	1.31
+++ src/msw/dde.cpp	2003/05/06 18:18:26
@@ -46,7 +46,7 @@
 #include <windows.h>
 #include <ddeml.h>
 
-#if defined(__TWIN32__) || defined(__GNUWIN32_OLD__)
+#ifdef __GNUWIN32_OLD__
     #include "wx/msw/gnuwin32/extra.h"
 #endif
 
Index: src/msw/dragimag.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/dragimag.cpp,v
retrieving revision 1.22
diff -u -r1.22 dragimag.cpp
--- src/msw/dragimag.cpp	2002/12/04 14:09:11	1.22
+++ src/msw/dragimag.cpp	2003/05/06 18:18:27
@@ -51,7 +51,7 @@
 #include "wx/msw/dragimag.h"
 #include "wx/msw/private.h"
 
-#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__TWIN32__)) && !defined(__CYGWIN10__))
+#if defined(__WIN95__) && !(defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__))
 #include <commctrl.h>
 #endif
 
Index: src/msw/gauge95.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/gauge95.cpp,v
retrieving revision 1.25
diff -u -r1.25 gauge95.cpp
--- src/msw/gauge95.cpp	2003/03/17 11:21:53	1.25
+++ src/msw/gauge95.cpp	2003/05/06 18:18:27
@@ -37,7 +37,7 @@
 #include "wx/msw/gauge95.h"
 #include "wx/msw/private.h"
 
-#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__TWIN32__)) && !defined(__CYGWIN10__))
+#if defined(__WIN95__) && !(defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__))
     #include <commctrl.h>
 #endif
 
Index: src/msw/imaglist.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/imaglist.cpp,v
retrieving revision 1.19
diff -u -r1.19 imaglist.cpp
--- src/msw/imaglist.cpp	2003/03/17 11:21:53	1.19
+++ src/msw/imaglist.cpp	2003/05/06 18:18:28
@@ -46,7 +46,7 @@
 #include "wx/msw/imaglist.h"
 #include "wx/msw/private.h"
 
-#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__TWIN32__)) && !defined(__CYGWIN10__))
+#if defined(__WIN95__) && !(defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__))
     #include <commctrl.h>
 #endif
 
@@ -162,10 +162,6 @@
 // 'bitmap'.
 int wxImageList::Add(const wxBitmap& bitmap, const wxColour& maskColour)
 {
-#ifdef __TWIN32__
-    wxFAIL_MSG(_T("ImageList_AddMasked not implemented in TWIN32"));
-    return -1;
-#else
     int index = ImageList_AddMasked(GetHImageList(),
                                     GetHbitmapOf(bitmap),
                                     wxColourToRGB(maskColour));
@@ -175,7 +171,6 @@
     }
 
     return index;
-#endif
 }
 
 // Adds a bitmap and mask from an icon.
@@ -196,10 +191,6 @@
 bool wxImageList::Replace(int index,
                           const wxBitmap& bitmap, const wxBitmap& mask)
 {
-#ifdef __TWIN32__
-    wxFAIL_MSG(_T("ImageList_Replace not implemented in TWIN32"));
-    return FALSE;
-#else
     HBITMAP hbmpMask = GetMaskForImage(bitmap, mask);
 
     bool ok = ImageList_Replace(GetHImageList(), index,
@@ -212,7 +203,6 @@
     ::DeleteObject(hbmpMask);
 
     return ok;
-#endif
 }
 
 // Replaces a bitmap and mask from an icon.
@@ -230,10 +220,6 @@
 // Removes the image at the given index.
 bool wxImageList::Remove(int index)
 {
-#ifdef __TWIN32__
-    wxFAIL_MSG(_T("ImageList_Replace not implemented in TWIN32"));
-    return FALSE;
-#else
     bool ok = ImageList_Remove(GetHImageList(), index) != 0;
     if ( !ok )
     {
@@ -241,7 +227,6 @@
     }
 
     return ok;
-#endif
 }
 
 // Remove all images
@@ -269,10 +254,6 @@
                        int flags,
                        bool solidBackground)
 {
-#ifdef __TWIN32__
-    wxFAIL_MSG(_T("ImageList_Replace not implemented in TWIN32"));
-    return FALSE;
-#else
     HDC hDC = GetHdcOf(dc);
     wxCHECK_MSG( hDC, FALSE, _T("invalid wxDC in wxImageList::Draw") );
 
@@ -305,7 +286,6 @@
     }
 
     return ok;
-#endif
 }
 
 // ----------------------------------------------------------------------------
Index: src/msw/joystick.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/joystick.cpp,v
retrieving revision 1.14
diff -u -r1.14 joystick.cpp
--- src/msw/joystick.cpp	2003/03/17 11:21:53	1.14
+++ src/msw/joystick.cpp	2003/05/06 18:18:28
@@ -32,14 +32,12 @@
 typedef UINT MMRESULT;
 #endif
 
-#ifndef __TWIN32__
 #ifdef __GNUWIN32_OLD__
 #include "wx/msw/gnuwin32/extra.h"
 #endif
-#endif
 
 // Why doesn't BC++ have joyGetPosEx?
-#if !defined(__WIN32__) || defined(__BORLANDC__) || defined(__TWIN32__)
+#if !defined(__WIN32__) || defined(__BORLANDC__)
 #define NO_JOYGETPOSEX
 #endif
 
@@ -376,7 +374,7 @@
 
 int wxJoystick::GetNumberAxes() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return 0;
@@ -389,7 +387,7 @@
 
 int wxJoystick::GetMaxButtons() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return 0;
@@ -402,7 +400,7 @@
 
 int wxJoystick::GetMaxAxes() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return 0;
@@ -433,7 +431,7 @@
 
 int wxJoystick::GetRudderMin() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return 0;
@@ -446,7 +444,7 @@
 
 int wxJoystick::GetRudderMax() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return 0;
@@ -459,7 +457,7 @@
 
 int wxJoystick::GetUMin() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return 0;
@@ -472,7 +470,7 @@
 
 int wxJoystick::GetUMax() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return 0;
@@ -485,7 +483,7 @@
 
 int wxJoystick::GetVMin() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return 0;
@@ -498,7 +496,7 @@
 
 int wxJoystick::GetVMax() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return 0;
@@ -512,7 +510,7 @@
 
 bool wxJoystick::HasRudder() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return FALSE;
@@ -525,7 +523,7 @@
 
 bool wxJoystick::HasZ() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return FALSE;
@@ -538,7 +536,7 @@
 
 bool wxJoystick::HasU() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return FALSE;
@@ -551,7 +549,7 @@
 
 bool wxJoystick::HasV() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return FALSE;
@@ -564,7 +562,7 @@
 
 bool wxJoystick::HasPOV() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return FALSE;
@@ -577,7 +575,7 @@
 
 bool wxJoystick::HasPOV4Dir() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return FALSE;
@@ -590,7 +588,7 @@
 
 bool wxJoystick::HasPOVCTS() const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     JOYCAPS joyCaps;
     if (joyGetDevCaps(m_joystick, & joyCaps, sizeof(JOYCAPS)) != JOYERR_NOERROR)
         return FALSE;
Index: src/msw/listbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/listbox.cpp,v
retrieving revision 1.73
diff -u -r1.73 listbox.cpp
--- src/msw/listbox.cpp	2003/03/17 11:21:53	1.73
+++ src/msw/listbox.cpp	2003/05/06 18:18:29
@@ -43,10 +43,8 @@
     #include  "wx/ownerdrw.h"
 #endif
 
-#ifndef __TWIN32__
-    #ifdef __GNUWIN32_OLD__
-        #include "wx/msw/gnuwin32/extra.h"
-    #endif
+#ifdef __GNUWIN32_OLD__
+    #include "wx/msw/gnuwin32/extra.h"
 #endif
 
 IMPLEMENT_DYNAMIC_CLASS(wxListBox, wxControl)
Index: src/msw/listctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/listctrl.cpp,v
retrieving revision 1.154
diff -u -r1.154 listctrl.cpp
--- src/msw/listctrl.cpp	2003/04/28 18:43:39	1.154
+++ src/msw/listctrl.cpp	2003/05/06 18:18:33
@@ -45,7 +45,7 @@
 
 #include "wx/msw/private.h"
 
-#if ((defined(__GNUWIN32_OLD__) || defined(__TWIN32__)) && !defined(__CYGWIN10__))
+#if defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__)
     #include "wx/msw/gnuwin32/extra.h"
 #else
     #include <commctrl.h>
Index: src/msw/main.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/main.cpp,v
retrieving revision 1.15
diff -u -r1.15 main.cpp
--- src/msw/main.cpp	2003/03/17 11:21:53	1.15
+++ src/msw/main.cpp	2003/05/06 18:18:33
@@ -72,7 +72,7 @@
 
 #if !defined(_WINDLL)
 
-#if defined(__TWIN32__) || defined(__WXMICROWIN__)
+#if defined(__WXMICROWIN__)
     #define HINSTANCE HANDLE
 
     extern "C"
Index: src/msw/minifram.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/minifram.cpp,v
retrieving revision 1.21
diff -u -r1.21 minifram.cpp
--- src/msw/minifram.cpp	2003/03/17 11:21:53	1.21
+++ src/msw/minifram.cpp	2003/05/06 18:18:35
@@ -45,10 +45,8 @@
 
 #include "wx/minifram.h"
 
-#ifndef __TWIN32__
-    #ifdef __GNUWIN32_OLD__
-        #include "wx/msw/gnuwin32/extra.h"
-    #endif
+#ifdef __GNUWIN32_OLD__
+    #include "wx/msw/gnuwin32/extra.h"
 #endif
 
 IMPLEMENT_DYNAMIC_CLASS(wxMiniFrame, wxFrame)
Index: src/msw/nativdlg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/nativdlg.cpp,v
retrieving revision 1.20
diff -u -r1.20 nativdlg.cpp
--- src/msw/nativdlg.cpp	2003/05/03 13:50:00	1.20
+++ src/msw/nativdlg.cpp	2003/05/06 18:18:35
@@ -34,7 +34,7 @@
     #include "wx/wx.h"
 #endif
 
-#if defined(__WIN95__) && !defined(__TWIN32__)
+#if defined(__WIN95__)
 #include "wx/spinbutt.h"
 #endif
 #include "wx/msw/private.h"
@@ -239,7 +239,7 @@
     {
         win = new wxScrollBar;
     }
-#if defined(__WIN95__) && !defined(__TWIN32__) && wxUSE_SPINBTN
+#if defined(__WIN95__) && wxUSE_SPINBTN
     else if (str == wxT("MSCTLS_UPDOWN32"))
     {
         win = new wxSpinButton;
Index: src/msw/notebook.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/notebook.cpp,v
retrieving revision 1.71
diff -u -r1.71 notebook.cpp
--- src/msw/notebook.cpp	2003/05/01 16:39:59	1.71
+++ src/msw/notebook.cpp	2003/05/06 18:18:36
@@ -42,13 +42,11 @@
 
 #include  <windowsx.h>  // for SetWindowFont
 
-#ifndef __TWIN32__
-    #ifdef __GNUWIN32_OLD__
-        #include "wx/msw/gnuwin32/extra.h"
-    #endif
+#ifdef __GNUWIN32_OLD__
+    #include "wx/msw/gnuwin32/extra.h"
 #endif
 
-#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__TWIN32__)) && !defined(__CYGWIN10__))
+#if defined(__WIN95__) && !(defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__))
     #include <commctrl.h>
 #endif
 
Index: src/msw/ownerdrw.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/ownerdrw.cpp,v
retrieving revision 1.40
diff -u -r1.40 ownerdrw.cpp
--- src/msw/ownerdrw.cpp	2003/05/04 17:12:06	1.40
+++ src/msw/ownerdrw.cpp	2003/05/06 18:18:37
@@ -228,7 +228,7 @@
 // get drawn embossed? How can we tell DrawState that we don't want the
 // embossing?
 
-#if defined(__WIN32__) && !defined(__SYMANTEC__) && !defined(__TWIN32__)
+#if defined(__WIN32__) && !defined(__SYMANTEC__)
 #define   O_DRAW_NATIVE_API     // comments below explain why I use it
 #endif
 
Index: src/msw/registry.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/registry.cpp,v
retrieving revision 1.48
diff -u -r1.48 registry.cpp
--- src/msw/registry.cpp	2003/03/17 11:21:54	1.48
+++ src/msw/registry.cpp	2003/05/06 18:18:38
@@ -313,7 +313,7 @@
                           size_t *pnValues,
                           size_t *pnMaxValueLen) const
 {
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
 
     // old gcc headers incorrectly prototype RegQueryInfoKey()
 #if defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__)
@@ -680,14 +680,14 @@
   if ( !Open() )
     return FALSE;
 
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
     m_dwLastError = RegDeleteValue((HKEY) m_hKey, WXSTRINGCAST szValue);
     if ( m_dwLastError != ERROR_SUCCESS ) {
       wxLogSysError(m_dwLastError, _("Can't delete value '%s' from key '%s'"),
                     szValue, GetName().c_str());
       return FALSE;
     }
-  #else   //WIN16
+#else   //WIN16
     // named registry values don't exist in Win16 world
     wxASSERT( IsEmpty(szValue) );
 
@@ -698,7 +698,7 @@
                     GetName().c_str());
       return FALSE;
     }
-  #endif  //WIN16/32
+#endif  //WIN16/32
 
   return TRUE;
 }
@@ -788,10 +788,6 @@
 #ifdef  __WIN32__
 bool wxRegKey::SetValue(const wxChar *szValue, long lValue)
 {
-#ifdef __TWIN32__
-  wxFAIL_MSG("RegSetValueEx not implemented by TWIN32");
-  return FALSE;
-#else
   if ( CONST_CAST Open() ) {
     m_dwLastError = RegSetValueEx((HKEY) m_hKey, szValue, (DWORD) RESERVED, REG_DWORD,
                                   (RegString)&lValue, sizeof(lValue));
@@ -802,7 +798,6 @@
   wxLogSysError(m_dwLastError, _("Can't set value of '%s'"),
                 GetFullName(this, szValue));
   return FALSE;
-#endif
 }
 
 bool wxRegKey::QueryValue(const wxChar *szValue, long *plValue) const
@@ -909,20 +904,20 @@
 bool wxRegKey::SetValue(const wxChar *szValue, const wxString& strValue)
 {
   if ( CONST_CAST Open() ) {
-#if defined( __WIN32__) && !defined(__TWIN32__)
+#if defined( __WIN32__)
       m_dwLastError = RegSetValueEx((HKEY) m_hKey, szValue, (DWORD) RESERVED, REG_SZ,
                                     (RegString)strValue.c_str(),
                                     (strValue.Len() + 1)*sizeof(wxChar));
       if ( m_dwLastError == ERROR_SUCCESS )
         return TRUE;
-    #else   //WIN16
+#else   //WIN16
       // named registry values don't exist in Win16
       wxASSERT( IsEmpty(szValue) );
 
       m_dwLastError = RegSetValue((HKEY) m_hKey, NULL, REG_SZ, strValue, NULL);
       if ( m_dwLastError == ERROR_SUCCESS )
         return TRUE;
-    #endif  //WIN16/32
+#endif  //WIN16/32
   }
 
   wxLogSysError(m_dwLastError, _("Can't set value of '%s'"),
@@ -960,7 +955,7 @@
   if ( lIndex == -1 )
     return FALSE;
 
-#if defined( __WIN32__) && !defined(__TWIN32__)
+#if defined( __WIN32__)
     wxChar  szValueName[1024];                  // @@ use RegQueryInfoKey...
     DWORD dwValueLen = WXSIZEOF(szValueName);
 
@@ -985,13 +980,13 @@
     }
 
     strValueName = szValueName;
-  #else   //WIN16
+#else   //WIN16
     // only one unnamed value
     wxASSERT( lIndex == 0 );
 
     lIndex = -1;
     strValueName.Empty();
-  #endif
+#endif
 
   return TRUE;
 }
Index: src/msw/slider95.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/slider95.cpp,v
retrieving revision 1.36
diff -u -r1.36 slider95.cpp
--- src/msw/slider95.cpp	2003/03/17 11:21:54	1.36
+++ src/msw/slider95.cpp	2003/05/06 18:18:39
@@ -33,7 +33,7 @@
 #include "wx/msw/slider95.h"
 #include "wx/msw/private.h"
 
-#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__TWIN32__)) && !defined(__CYGWIN10__))
+#if defined(__WIN95__) && !(defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__))
     #include <commctrl.h>
 #endif
 
Index: src/msw/spinbutt.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/spinbutt.cpp,v
retrieving revision 1.41
diff -u -r1.41 spinbutt.cpp
--- src/msw/spinbutt.cpp	2003/03/17 11:21:54	1.41
+++ src/msw/spinbutt.cpp	2003/05/06 18:18:40
@@ -39,13 +39,11 @@
 
 IMPLEMENT_DYNAMIC_CLASS(wxSpinEvent, wxNotifyEvent)
 
-// Can't resolve reference to CreateUpDownControl in
-// TWIN32, but could probably use normal CreateWindow instead.
-#if defined(__WIN95__) && !defined(__TWIN32__)
+#if defined(__WIN95__)
 
 #include "wx/msw/private.h"
 
-#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__TWIN32__)) && !defined(__CYGWIN10__))
+#if defined(__WIN95__) && !(defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__))
     #include <commctrl.h>
 #endif
 
Index: src/msw/spinctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/spinctrl.cpp,v
retrieving revision 1.24
diff -u -r1.24 spinctrl.cpp
--- src/msw/spinctrl.cpp	2003/03/24 18:54:51	1.24
+++ src/msw/spinctrl.cpp	2003/05/06 18:18:40
@@ -40,7 +40,7 @@
 #include "wx/spinctrl.h"
 #include "wx/msw/private.h"
 
-#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__TWIN32__)) && !defined(__CYGWIN10__))
+#if defined(__WIN95__) && !(defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__))
     #include <commctrl.h>
 #endif
 
Index: src/msw/statbr95.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/statbr95.cpp,v
retrieving revision 1.45
diff -u -r1.45 statbr95.cpp
--- src/msw/statbr95.cpp	2003/03/17 11:21:54	1.45
+++ src/msw/statbr95.cpp	2003/05/06 18:18:41
@@ -36,7 +36,7 @@
 #include "wx/msw/private.h"
 #include <windowsx.h>
 
-#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__TWIN32__)) && !defined(__CYGWIN10__))
+#if defined(__WIN95__) && !(defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__))
     #include <commctrl.h>
 #endif
 
Index: src/msw/tabctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/tabctrl.cpp,v
retrieving revision 1.26
diff -u -r1.26 tabctrl.cpp
--- src/msw/tabctrl.cpp	2003/04/27 21:49:22	1.26
+++ src/msw/tabctrl.cpp	2003/05/06 18:18:41
@@ -32,7 +32,7 @@
 
 #include <windows.h>
 
-#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__TWIN32__)) && !defined(__CYGWIN10__))
+#if defined(__WIN95__) && !(defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__))
     #include <commctrl.h>
 #else
     #include "wx/msw/gnuwin32/extra.h"
Index: src/msw/taskbar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/taskbar.cpp,v
retrieving revision 1.31
diff -u -r1.31 taskbar.cpp
--- src/msw/taskbar.cpp	2003/05/01 20:49:34	1.31
+++ src/msw/taskbar.cpp	2003/05/06 18:18:42
@@ -29,7 +29,7 @@
 #include "wx/menu.h"
 #endif
 
-#if defined(__WIN95__) && !defined(__TWIN32__)
+#if defined(__WIN95__)
 
 #include <windows.h>
 
@@ -39,10 +39,8 @@
 #include "wx/taskbar.h"
 #include "wx/msw/private.h"
 
-#ifndef __TWIN32__
-    #ifdef __GNUWIN32_OLD__
-        #include "wx/msw/gnuwin32/extra.h"
-    #endif
+#ifdef __GNUWIN32_OLD__
+    #include "wx/msw/gnuwin32/extra.h"
 #endif
 
 #ifdef __SALFORDC__
Index: src/msw/tbar95.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/tbar95.cpp,v
retrieving revision 1.102
diff -u -r1.102 tbar95.cpp
--- src/msw/tbar95.cpp	2003/03/23 15:46:50	1.102
+++ src/msw/tbar95.cpp	2003/05/06 18:18:44
@@ -49,15 +49,11 @@
 
 #include "wx/msw/private.h"
 
-#ifndef __TWIN32__
-
-#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__TWIN32__)) && !defined(__CYGWIN10__))
+#if defined(__WIN95__) && !(defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__))
     #include <commctrl.h>
 #else
     #include "wx/msw/gnuwin32/extra.h"
 #endif
-
-#endif // __TWIN32__
 
 #include "wx/app.h"         // for GetComCtl32Version
 
Index: src/msw/tooltip.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/tooltip.cpp,v
retrieving revision 1.31
diff -u -r1.31 tooltip.cpp
--- src/msw/tooltip.cpp	2003/03/17 11:21:55	1.31
+++ src/msw/tooltip.cpp	2003/05/06 18:18:44
@@ -32,7 +32,7 @@
 #include "wx/tooltip.h"
 #include "wx/msw/private.h"
 
-#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__TWIN32__)) && !defined(__CYGWIN10__))
+#if defined(__WIN95__) && !(defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__))
     #include <commctrl.h>
 #endif
 
Index: src/msw/treectrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/treectrl.cpp,v
retrieving revision 1.138
diff -u -r1.138 treectrl.cpp
--- src/msw/treectrl.cpp	2003/01/25 04:52:21	1.138
+++ src/msw/treectrl.cpp	2003/05/06 18:18:48
@@ -59,7 +59,7 @@
     #include "wx/msw/gnuwin32/extra.h"
 #endif
 
-#if defined(__WIN95__) && !((defined(__GNUWIN32_OLD__) || defined(__TWIN32__)) && !defined(__CYGWIN10__))
+#if defined(__WIN95__) && !(defined(__GNUWIN32_OLD__) && !defined(__CYGWIN10__))
     #include <commctrl.h>
 #endif
 
Index: src/msw/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/utils.cpp,v
retrieving revision 1.110
diff -u -r1.110 utils.cpp
--- src/msw/utils.cpp	2003/04/19 19:25:27	1.110
+++ src/msw/utils.cpp	2003/05/06 18:18:50
@@ -56,7 +56,7 @@
     #endif
 #endif  //GNUWIN32
 
-#if defined(__CYGWIN__) && !defined(__TWIN32__)
+#if defined(__CYGWIN__)
     #include <sys/unistd.h>
     #include <sys/stat.h>
     #include <sys/cygwin.h> // for cygwin_conv_to_full_win32_path()
@@ -147,7 +147,7 @@
 // Get hostname only (without domain name)
 bool wxGetHostName(wxChar *buf, int maxSize)
 {
-#if defined(__WIN32__) && !defined(__TWIN32__) && !defined(__WXMICROWIN__)
+#if defined(__WIN32__) && !defined(__WXMICROWIN__)
     DWORD nSize = maxSize;
     if ( !::GetComputerName(buf, &nSize) )
     {
@@ -173,7 +173,7 @@
 // get full hostname (with domain name if possible)
 bool wxGetFullHostName(wxChar *buf, int maxSize)
 {
-#if defined(__WIN32__) && !defined(__TWIN32__) && !defined(__WXMICROWIN__) && ! (defined(__GNUWIN32__) && !defined(__MINGW32__))
+#if defined(__WIN32__) && !defined(__WXMICROWIN__) && ! (defined(__GNUWIN32__) && !defined(__MINGW32__))
     // TODO should use GetComputerNameEx() when available
 
     // the idea is that if someone had set wxUSE_SOCKETS to 0 the code
@@ -230,7 +230,7 @@
 // Get user ID e.g. jacs
 bool wxGetUserId(wxChar *buf, int maxSize)
 {
-#if defined(__WIN32__) && !defined(__win32s__) && !defined(__TWIN32__) && !defined(__WXMICROWIN__)
+#if defined(__WIN32__) && !defined(__win32s__) && !defined(__WXMICROWIN__)
     DWORD nSize = maxSize;
     if ( ::GetUserName(buf, &nSize) == 0 )
     {
@@ -369,7 +369,7 @@
 {
   wxString& strDir = *pstr;
 
-  #if defined(__UNIX__) && !defined(__TWIN32__)
+  #if defined(__UNIX__)
     const wxChar *szHome = wxGetenv("HOME");
     if ( szHome == NULL ) {
       // we're homeless...
@@ -937,7 +937,7 @@
 // Get free memory in bytes, or -1 if cannot determine amount (e.g. on UNIX)
 long wxGetFreeMemory()
 {
-#if defined(__WIN32__) && !defined(__BORLANDC__) && !defined(__TWIN32__)
+#if defined(__WIN32__) && !defined(__BORLANDC__)
     MEMORYSTATUS memStatus;
     memStatus.dwLength = sizeof(MEMORYSTATUS);
     GlobalMemoryStatus(&memStatus);
Index: src/msw/utilsexc.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/utilsexc.cpp,v
retrieving revision 1.59
diff -u -r1.59 utilsexc.cpp
--- src/msw/utilsexc.cpp	2003/03/17 11:21:55	1.59
+++ src/msw/utilsexc.cpp	2003/05/06 18:18:51
@@ -54,7 +54,7 @@
 #endif
 #endif
 
-#if defined(__GNUWIN32__) && !defined(__TWIN32__)
+#if defined(__GNUWIN32__)
     #include <sys/unistd.h>
     #include <sys/stat.h>
 #endif
@@ -594,7 +594,7 @@
         command = cmd;
     }
 
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
 
     // the IO redirection is only supported with wxUSE_STREAMS
     BOOL redirect = FALSE;
Index: src/msw/wave.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/wave.cpp,v
retrieving revision 1.13
diff -u -r1.13 wave.cpp
--- src/msw/wave.cpp	2003/03/17 11:21:55	1.13
+++ src/msw/wave.cpp	2003/05/06 18:18:51
@@ -70,7 +70,7 @@
     m_isResource = TRUE;
 
     HRSRC hresInfo;
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
 #ifdef _UNICODE
     hresInfo = ::FindResourceW((HMODULE) wxhInstance, fileName, wxT("WAVE"));
 #else
Index: src/msw/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/window.cpp,v
retrieving revision 1.364
diff -u -r1.364 window.cpp
--- src/msw/window.cpp	2003/04/19 19:28:19	1.364
+++ src/msw/window.cpp	2003/05/06 18:18:59
@@ -103,14 +103,12 @@
     #include <windowsx.h>
 #endif
 
-#if (!defined(__GNUWIN32_OLD__) && !defined(__TWIN32__) && !defined(__WXMICROWIN__)) || defined(__CYGWIN10__)
+#if (!defined(__GNUWIN32_OLD__) && !defined(__WXMICROWIN__)) || defined(__CYGWIN10__)
     #ifdef __WIN95__
         #include <commctrl.h>
     #endif
 #elif !defined(__WXMICROWIN__) // broken compiler
-    #ifndef __TWIN32__
-        #include "wx/msw/gnuwin32/extra.h"
-    #endif
+    #include "wx/msw/gnuwin32/extra.h"
 #endif
 
 // ----------------------------------------------------------------------------
@@ -5039,7 +5037,7 @@
         wxTheKeyboardHookProc = MakeProcInstance((FARPROC) wxKeyboardHook, wxGetInstance());
         wxTheKeyboardHook = SetWindowsHookEx(WH_KEYBOARD, (HOOKPROC) wxTheKeyboardHookProc, wxGetInstance(),
 
-#if defined(__WIN32__) && !defined(__TWIN32__)
+#if defined(__WIN32__)
             GetCurrentThreadId()
         //      (DWORD)GetCurrentProcess()); // This is another possibility. Which is right?
 #else

 	  	 
