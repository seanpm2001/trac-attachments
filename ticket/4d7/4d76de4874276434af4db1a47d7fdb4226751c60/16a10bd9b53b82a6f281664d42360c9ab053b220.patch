diff -ru wxWidgets.orig/samples/minimal/minimal.cpp wxWidgets/samples/minimal/minimal.cpp
--- wxWidgets.orig/samples/minimal/minimal.cpp	2005-02-21 03:14:03.000000000 +1100
+++ wxWidgets/samples/minimal/minimal.cpp	2005-06-18 21:21:59.234813536 +1000
@@ -67,6 +67,7 @@
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    void OnSize(wxSizeEvent& event);
 
 private:
     // any class wishing to process wxWidgets events must use this macro
@@ -99,6 +100,7 @@
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_SIZE(MyFrame::OnSize)
 END_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -167,11 +169,29 @@
     CreateStatusBar(2);
     SetStatusText(_T("Welcome to wxWidgets!"));
 #endif // wxUSE_STATUSBAR
+
+
+    wxPanel *panel = new wxPanel(this, -1);
+    wxPanel *p1 = new wxPanel(panel, -1, wxPoint(0,0), wxSize(90, 300));
+    wxPanel *p2 = new wxPanel(panel, 10, wxPoint(90,0), wxSize(500, 300));
+    p1->SetBackgroundColour(*wxBLACK);
+    p2->SetBackgroundColour(*wxRED);
 }
 
 
 // event handlers
 
+void MyFrame::OnSize(wxSizeEvent& event)
+{
+    event.Skip();
+    wxSize cSize(GetClientSize());
+    if (!FindWindow(10)) return;
+
+    FindWindow(10)->SetSize(wxRect(90, 0, cSize.x-90, cSize.y));
+    wxClientDC dc(FindWindow(10));
+    dc.DrawLine(0, 0, cSize.x, cSize.y);
+}
+
 void MyFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
 {
     // true is to force the frame to close

 	  	 
