diff -uNr wxWidgets-trunk\src/msw/dc.cpp wxWidgets-work\src/msw/dc.cpp
--- wxWidgets-trunk\src/msw/dc.cpp	2014-01-13 19:39:59.184197300 +0100
+++ wxWidgets-work\src/msw/dc.cpp	2014-01-22 19:09:30.422503600 +0100
@@ -1271,11 +1271,28 @@
 
     wxCHECK_RET( icon.IsOk(), wxT("invalid icon in DrawIcon") );
 
+    int technology = ::GetDeviceCaps(GetHdc(), TECHNOLOGY);
+    int dcType = ::GetObjectType(GetHdc());
+    // Discrimination of DC type:
+    //   display DC -> DT_RASDISPLAY
+    //   print preview DC -> DT_RASPRINTER && OBJ_ENHMETADC
+    //   printer DC -> DT_RASPRINTER && OBJ_DC
+    if( technology == DT_RASPRINTER && dcType == OBJ_DC )
+    {
+        // DrawIcon API doesn't work for printer DCs (printer DC is write-only
+        // and DrawIcon requires DC supporting SRCINVERT ROP).
+        // We need to convert icon to bitmap and use alternative API calls.
+        wxBitmap bmp(icon);
+        DoDrawBitmap(bmp, x, y, !bmp.HasAlpha());  // Use icon's mask if it makes sense.
+    }
+    else
+    {
 #ifdef __WIN32__
-    ::DrawIconEx(GetHdc(), XLOG2DEV(x), YLOG2DEV(y), GetHiconOf(icon), icon.GetWidth(), icon.GetHeight(), 0, NULL, DI_NORMAL);
+        ::DrawIconEx(GetHdc(), XLOG2DEV(x), YLOG2DEV(y), GetHiconOf(icon), icon.GetWidth(), icon.GetHeight(), 0, NULL, DI_NORMAL);
 #else
-    ::DrawIcon(GetHdc(), XLOG2DEV(x), YLOG2DEV(y), GetHiconOf(icon));
+        ::DrawIcon(GetHdc(), XLOG2DEV(x), YLOG2DEV(y), GetHiconOf(icon));
 #endif
+    }
 
     CalcBoundingBox(x, y);
     CalcBoundingBox(x + icon.GetWidth(), y + icon.GetHeight());
