
//---------------------------
// PATCH
//---------------------------

src/gtk/dcclient.cpp:
---------------------

void wxWindowDC::DoSetClippingRegion( wxCoord x, wxCoord y, wxCoord width, wxCoord height )
{
    wxCHECK_RET( Ok(), wxT("invalid window dc") );

    if (!m_window) return;

    wxRect rect;
    rect.x = XLOG2DEV(x);
    rect.y = YLOG2DEV(y);
    rect.width = XLOG2DEVREL(width);
    rect.height = YLOG2DEVREL(height);

    if (m_owner && m_owner->m_wxwindow && (m_owner->GetLayoutDirection() == wxLayout_RightToLeft))
    {
        rect.x -= rect.width;
    }

    if (!m_currentClippingRegion.IsNull())
        m_currentClippingRegion.Intersect( rect );
    else
        m_currentClippingRegion.Union( rect );

#if USE_PAINT_REGION
    if (!m_paintClippingRegion.IsNull())
        m_currentClippingRegion.Intersect( m_paintClippingRegion );
#endif

    wxCoord xx, yy, ww, hh;
    m_currentClippingRegion.GetBox( xx, yy, ww, hh );

    // Save clipping rect in logical units
    wxDC::DoSetClippingRegion( XDEV2LOG(xx), YDEV2LOG(yy), XDEV2LOGREL(ww), YDEV2LOGREL(hh) );

    gdk_gc_set_clip_region( m_penGC, m_currentClippingRegion.GetRegion() );
    gdk_gc_set_clip_region( m_brushGC, m_currentClippingRegion.GetRegion() );
    gdk_gc_set_clip_region( m_textGC, m_currentClippingRegion.GetRegion() );
    gdk_gc_set_clip_region( m_bgGC, m_currentClippingRegion.GetRegion() );
}


void wxWindowDC::DoSetClippingRegionAsRegion( const wxRegion &region  )
{
    wxCHECK_RET( Ok(), wxT("invalid window dc") );

    if (region.Empty())
    {
        DestroyClippingRegion();
        return;
    }

    if (!m_window) return;

    if (!m_currentClippingRegion.IsNull())
        m_currentClippingRegion.Intersect( region );
    else
        m_currentClippingRegion.Union( region );

#if USE_PAINT_REGION
    if (!m_paintClippingRegion.IsNull())
        m_currentClippingRegion.Intersect( m_paintClippingRegion );
#endif

    wxCoord xx, yy, ww, hh;
    m_currentClippingRegion.GetBox( xx, yy, ww, hh );

    // Save clipping rect in logical units
    wxDC::DoSetClippingRegion( XDEV2LOG(xx), YDEV2LOG(yy), XDEV2LOGREL(ww), YDEV2LOGREL(hh) );

    gdk_gc_set_clip_region( m_penGC, m_currentClippingRegion.GetRegion() );
    gdk_gc_set_clip_region( m_brushGC, m_currentClippingRegion.GetRegion() );
    gdk_gc_set_clip_region( m_textGC, m_currentClippingRegion.GetRegion() );
    gdk_gc_set_clip_region( m_bgGC, m_currentClippingRegion.GetRegion() );
}


include/wx/gtk/gnome/gprint.h:
------------------------------

class wxGnomePrintDC : public wxDC
{
public:

    ...

protected:

    ...

    void DoSetClippingRegionAsRegion(const wxRegion& clip) // Is clip in device or logical units ?
    {
        // TODO: Clipping non-rectangular area
        int x, y, width, height;
        clip.GetBox(x, y, width, height);

        // Set clipping rectangle in logical units
        DoSetClippingRegion( XDEV2LOG(x), YDEV2LOG(y), XDEV2LOGREL(width), YDEV2LOGREL(height) );
    }

    ...
}

//---------------------------
// TEST CODE
//---------------------------

bool MyPrintout::OnPrintPage(int _page)
{
    MapScreenSizeToPage();
    wxDC* dc = GetDC();

    int x1 = 10, y1 = 10, w1 = 100, h1 = 100;
    int x2, y2, w2, h2;

    // Test of clipping rectangle
    wxRect clipRect(x1, y1, w1, h1);

    dc->DestroyClippingRegion();
    dc->SetClippingRegion(clipRect);
    dc->GetClippingBox(&x2, &y2, &w2, &h2);

    wxMessageBox( wxString::Format( wxT("SetClippingRegion(Rect) X: %d -> %d    Y: %d -> %d    W: %d -> %d    H: %d -> %d"),
         x1, x2, 
         y1, y2, 
         w1, w2, 
         h1, h2 ) );

    // Test of clipping region
    wxRegion clipRegion( dc->LogicalToDeviceX(x1),
								 dc->LogicalToDeviceY(y1),
							    dc->LogicalToDeviceXRel(w1),
								 dc->LogicalToDeviceYRel(h1) );

    dc->DestroyClippingRegion();
    dc->SetClippingRegion(clipRegion);
    dc->GetClippingBox(&x2, &y2, &w2, &h2);

    wxMessageBox( wxString::Format( wxT("SetClippingRegion(Region) X: %d -> %d    Y: %d -> %d    W: %d -> %d    H: %d -> %d"),
        x1, x2, 
        y1, y2, 
        w1, w2, 
        h1, h2 ) );

    return true;
}

//-----------------------------
// RESULTS
//-----------------------------

Linux
------

wxMemoryDC (preview):

1) SetClippingRegion(Rect)    X: 10 ->  6     Y: 10 ->  6     W: 100 ->  61     H: 100 ->  61   // Wrong
2) SetClippingRegion(Region)  X: 10 ->  6     Y: 10 ->  6     W: 100 ->  61     H: 100 ->  61   // Wrong

wxGnomePrintDC (print):

3) SetClippingRegion(Rect)    X: 10 -> 10     Y: 10 -> 10     W: 100 -> 100     H: 100 -> 100
4) SetClippingRegion(Region)  X: 10 ->  0     Y: 10 ->  0     W: 100 ->   0     H: 100 ->   0   // Not yet implemented...

Windows
-------

wxMemoryDC (preview):

5) SetClippingRegion(Rect)    X: 10 ->  9     Y: 10 -> 10     W: 100 -> 100     H: 100 -> 100
6) SetClippingRegion(Region)  X: 10 ->  9     Y: 10 -> 10     W: 100 ->  99     H: 100 -> 100

wxPrinterDC (print):

7) SetClippingRegion(Rect)    X: 10 -> 10     Y: 10 -> 10     W: 100 -> 100     H: 100 -> 100
8) SetClippingRegion(Region)  X: 10 -> 10     Y: 10 -> 10     W: 100 -> 100     H: 100 -> 100



 	  	 
