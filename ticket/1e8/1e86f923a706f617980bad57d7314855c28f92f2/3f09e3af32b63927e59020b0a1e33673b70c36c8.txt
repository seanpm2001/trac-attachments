Index: include/wx/mac/notebook.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/mac/notebook.h,v
retrieving revision 1.4
diff -r1.4 notebook.h
147c147,148
< 	virtual void 						MacHandleControlClick( ControlHandle control , SInt16 controlpart ) ;
---
> 	virtual void MacHandleControlClick( ControlHandle control,
>                                         SInt16 controlpart ) ;
151,153d151
<   // helper functions
<   void ChangePage(int nOldSel, int nSel); // change pages
< 
159,160c157,163
<   DECLARE_DYNAMIC_CLASS(wxNotebook)
<   DECLARE_EVENT_TABLE()
---
>   private:
>     // helper functions
>     void ChangePage(int nOldSel, int nSel); // change pages
>     void wxNotebook::MacSetupTabs();
> 
>     DECLARE_DYNAMIC_CLASS(wxNotebook)
>     DECLARE_EVENT_TABLE()
Index: src/common/mimecmn.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/common/mimecmn.cpp,v
retrieving revision 1.12
diff -r1.12 mimecmn.cpp
58c58
< #elif defined(__WXMAC__)
---
> #elif defined(__WXMAC__) && !defined(__UNIX__)
Index: src/mac/app.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/mac/app.cpp,v
retrieving revision 1.21
diff -r1.21 app.cpp
127a128
> 
Index: src/mac/gsocket.c
===================================================================
RCS file: /home/wxcvs/wxWindows/src/mac/gsocket.c,v
retrieving revision 1.3
diff -r1.3 gsocket.c
200,202c200,214
< 	InitOpenTransportInContext( kInitOTForApplicationMask , NULL ) ;
< #else	
< 	InitOpenTransport() ;
---
>     // Modified min:  To compile gsocket I had to add the clientcontext
>     // variable.  Although this allows it to compile the documentation
>     // is unclear how this works, as first it tells you to use it then
>     // says that it is unsupported
>     OTClientContextPtr clientcontext;
> 
>     InitOpenTransportInContext(kInitOTForApplicationMask, &clientcontext);
>     gInetSvcRef = OTOpenInternetServicesInContext
>         (
>          kDefaultInternetServicesPath, NULL, &err, clientcontext
>          );
> #else
>     InitOpenTransport() ;
>     gInetSvcRef = OTOpenInternetServices(kDefaultInternetServicesPath, NULL,
>                                          &err);
204c216
< 	gInetSvcRef = OTOpenInternetServices(kDefaultInternetServicesPath, NULL, &err);
---
> 
Index: src/mac/mimetmac.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/mac/mimetmac.cpp,v
retrieving revision 1.3
diff -r1.3 mimetmac.cpp
16,17d15
< // for compilers that support precompilation, includes "wx.h".
< #include "wx/wxprec.h"
19,29c17,19
< #ifdef __BORLANDC__
<   #pragma hdrstop
< #endif
< 
< #ifndef WX_PRECOMP
<   #include "wx/defs.h"
< #endif
< 
< #ifndef WX_PRECOMP
<   #include "wx/string.h"
<   #if wxUSE_GUI
---
> #include "wx/defs.h"
> #include "wx/string.h"
> #if wxUSE_GUI
31,34c21
<   #endif
< #endif //WX_PRECOMP
< 
< 
---
> #endif
Index: src/mac/notebook.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/mac/notebook.cpp,v
retrieving revision 1.4
diff -r1.4 notebook.cpp
34a35
> #ifndef __WXMAC_X__
38a40,45
> #else  // I got these values for Mac OS X from the Appearance mgr docs. (min)
> const short kwxMacTabLeftMargin = 20 ;
> const short kwxMacTabTopMargin = 38 ;
> const short kwxMacTabRightMargin = 20 ;
> const short kwxMacTabBottomMargin = 12 ;
> #endif
68a76,79
> #ifdef __WXMAC_X__
>     m_macHorizontalBorder = 7;
>     m_macVerticalBorder = 8;
> #endif
135,138c146,147
< 		SetControlValue( m_macControl , m_nSelection + 1 ) ;
< //	Boolean enabled = true ;
< 	
< //	SetControlData( m_macControl, m_nSelection + 1, kControlTabEnabledFlagTag, sizeof( Boolean ), (Ptr)&enabled );
---
>     SetControlValue( m_macControl , m_nSelection + 1 ) ;
> 
143a153,155
>     if(GetPageCount() == 0) {
>         return;
>     }
156,157c168,172
<     // TODO
<     return FALSE;
---
>     wxNotebookPage *page = m_aPages[nPage];
>     page->SetLabel(strText);
>     MacSetupTabs();
> 
>     return true;
164,165c179,180
<     // TODO
<     return wxString("");
---
>     wxNotebookPage *page = m_aPages[nPage];
>     return page->GetLabel();
199,200d213
<     // TODO: delete native widget page
< 
204c217,226
<     return TRUE;
---
>     MacSetupTabs();
> 
>     if(m_nSelection >= GetPageCount()) {
>         m_nSelection = GetPageCount() - 1;
>     }
>     if(m_nSelection >= 0) {
>         m_aPages[m_nSelection]->Show(true);
>     }
> 
>     return true;
228a251,252
>     MacSetupTabs();
> 
251,263c275
< 		ControlTabInfoRec tie ;
< 		Boolean enabled = true ;
< 		if ( nPage + 1 > GetControlMaximum( m_macControl ) )
< 		{
< 			SetControlMaximum( m_macControl , nPage + 1 ) ;
< 		}
< 		
< 		tie.version = 0 ;
< 		tie.iconSuiteID = 0 ;
< 		c2pstrcpy( (StringPtr) tie.name , strText ) ;
< 		SetControlData( m_macControl, nPage + 1, kControlTabInfoTag , sizeof( ControlTabInfoRec) , (char*) &tie ) ;
< 		SetControlData( m_macControl, m_nSelection + 1, kControlTabEnabledFlagTag, sizeof( Boolean ), (Ptr)&enabled );
< 
---
>     pPage->SetLabel(strText);
267,269c279,281
<     // some page must be selected: either this one or the first one if there is 
<     // still no selection
<     if ( bSelect )
---
>     MacSetupTabs();
> 
>     if ( bSelect ) {
271c283,284
<     else if ( m_nSelection == -1 )
---
>     }
>     else if ( m_nSelection == -1 ) {
272a286,291
>     }
>     else if (m_nSelection >= nPage) {
>         m_nSelection++;
>     }
>     // don't show pages by default (we'll need to adjust their size first)
>     pPage->Show( false ) ;
274,275c293,300
<   	// don't show pages by default (we'll need to adjust their size first)
< 	 	pPage->Show( FALSE ) ;
---
>     int h, w;
>     GetSize(&w, &h);
>     pPage->SetSize(kwxMacTabLeftMargin, kwxMacTabTopMargin,
>                    w - kwxMacTabLeftMargin - kwxMacTabRightMargin,
>                    h - kwxMacTabTopMargin - kwxMacTabBottomMargin );
>     if ( pPage->GetAutoLayout() ) {
>         pPage->Layout();
>     }
277c302,330
<     return TRUE;
---
>     return true;
> }
> 
> /* Added by Mark Newsam
>  * When a page is added or deleted to the notebook this function updates
>  * information held in the m_macControl so that it matches the order
>  * the user would expect.
>  */
> void wxNotebook::MacSetupTabs()
> {
>     SetControlMaximum( m_macControl , GetPageCount() ) ;
> 
>     wxNotebookPage *page;
>     ControlTabInfoRec info;
>     Boolean enabled = true;
>     for(int ii = 0; ii < GetPageCount(); ii++)
>     {
>         page = m_aPages[ii];
>         info.version = 0;
>         info.iconSuiteID = 0;
>         c2pstrcpy(info.name, page->GetLabel());
>         SetControlData( m_macControl, ii+1, kControlTabInfoTag,
>                         sizeof( ControlTabInfoRec) , (char*) &info ) ;
>         SetControlData( m_macControl, ii+1, kControlTabEnabledFlagTag,
>                         sizeof( Boolean ), (Ptr)&enabled );
>     }
>     Rect bounds;
>     GetControlBounds(m_macControl, &bounds);
>     InvalWindowRect(GetMacRootWindow(), &bounds);
307c360,361
<     for ( unsigned int nPage = 0; nPage < nCount; nPage++ ) {
---
>     for ( unsigned int nPage = 0; nPage < nCount; nPage++ )
>     {
309,312c363,366
<         pPage->SetSize(kwxMacTabLeftMargin, kwxMacTabTopMargin, w - kwxMacTabLeftMargin - kwxMacTabRightMargin,
<         	h - kwxMacTabTopMargin - kwxMacTabBottomMargin );
< //        pPage->SetSize(0, 0, w, h);
<         if ( pPage->GetAutoLayout() )
---
>         pPage->SetSize(kwxMacTabLeftMargin, kwxMacTabTopMargin,
>                        w - kwxMacTabLeftMargin - kwxMacTabRightMargin,
>                        h - kwxMacTabTopMargin - kwxMacTabBottomMargin );
>         if ( pPage->GetAutoLayout() ) {
313a368
>         }
383,392c438,447
<   // it's not an error (the message may be generated by the tab control itself)
<   // and it may happen - just do nothing
<   if ( nSel == nOldSel )
<   {
<     wxNotebookPage *pPage = m_aPages[nSel];
<    	pPage->Show(FALSE);
<    	pPage->Show(TRUE);
<  	pPage->SetFocus();
<     return;
<   }
---
>     // it's not an error (the message may be generated by the tab control
>     // itself) and it may happen - just do nothing
>     if ( nSel == nOldSel )
>     {
>         wxNotebookPage *pPage = m_aPages[nSel];
>         pPage->Show(FALSE);
>         pPage->Show(TRUE);
>         pPage->SetFocus();
>         return;
>     }
393a449
>     // Hide previous page
412d467
< 

 	  	 
