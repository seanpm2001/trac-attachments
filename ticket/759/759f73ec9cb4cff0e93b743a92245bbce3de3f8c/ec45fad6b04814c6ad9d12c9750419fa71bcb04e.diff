diff --git a/samples/regtest/regtest.cpp b/samples/regtest/regtest.cpp
index a1147ca..a12d6f2 100644
--- a/samples/regtest/regtest.cpp
+++ b/samples/regtest/regtest.cpp
@@ -1193,7 +1193,7 @@ const wxChar *RegTreeCtrl::TreeNode::FullName() const
         s_strName = Parent()->FullName();
         s_strName << wxT('\\') << m_strName;
 
-        return s_strName;
+        return s_strName.t_str();
     }
 }
 
diff --git a/samples/uiaction/uiaction.cpp b/samples/uiaction/uiaction.cpp
index 3e0a7fd..6fd518e 100644
--- a/samples/uiaction/uiaction.cpp
+++ b/samples/uiaction/uiaction.cpp
@@ -213,7 +213,7 @@ void MyFrame::OnSimulateText(wxCommandEvent& WXUNUSED(event))
 
     wxUIActionSimulator sim;
     m_text->SetFocus();
-    sim.Text(s_text);
+    sim.Text(s_text.c_str());
 }
 
 void MyFrame::OnButtonPressed(wxCommandEvent& WXUNUSED(event))
diff --git a/tests/benchmarks/htmlparser/htmlpars.cpp b/tests/benchmarks/htmlparser/htmlpars.cpp
index 3bc1dea..7cb3b22 100644
--- a/tests/benchmarks/htmlparser/htmlpars.cpp
+++ b/tests/benchmarks/htmlparser/htmlpars.cpp
@@ -295,7 +295,7 @@ void wx28HtmlParser::DoParsing(int begin_pos, int end_pos)
             // Add text:
             AddText(GetEntitiesParser()->Parse(
                        m_Source.Mid(pieces[m_CurTextPiece].m_pos,
-                                    pieces[m_CurTextPiece].m_lng)));
+                                    pieces[m_CurTextPiece].m_lng)).t_str());
             begin_pos = pieces[m_CurTextPiece].m_pos +
                         pieces[m_CurTextPiece].m_lng;
             m_CurTextPiece++;
diff --git a/tests/benchmarks/strings.cpp b/tests/benchmarks/strings.cpp
index b1ee269..6ea1f53 100644
--- a/tests/benchmarks/strings.cpp
+++ b/tests/benchmarks/strings.cpp
@@ -315,28 +315,28 @@ BENCHMARK_FUNC(StrcmpA)
 {
     const wxString& s = GetTestAsciiString();
 
-    return wxCRT_StrcmpA(s, s) == 0;
+    return wxCRT_StrcmpA(s.c_str(), s.c_str()) == 0;
 }
 
 BENCHMARK_FUNC(StrcmpW)
 {
     const wxString& s = GetTestAsciiString();
 
-    return wxCRT_StrcmpW(s, s) == 0;
+    return wxCRT_StrcmpW(s.wc_str(), s.wc_str()) == 0;
 }
 
 BENCHMARK_FUNC(StricmpA)
 {
     const wxString& s = GetTestAsciiString();
 
-    return wxCRT_StricmpA(s, s) == 0;
+    return wxCRT_StricmpA(s.c_str(), s.c_str()) == 0;
 }
 
 BENCHMARK_FUNC(StricmpW)
 {
     const wxString& s = GetTestAsciiString();
 
-    return wxCRT_StricmpW(s, s) == 0;
+    return wxCRT_StricmpW(s.wc_str(), s.wc_str()) == 0;
 }
 
 BENCHMARK_FUNC(StringCmp)
