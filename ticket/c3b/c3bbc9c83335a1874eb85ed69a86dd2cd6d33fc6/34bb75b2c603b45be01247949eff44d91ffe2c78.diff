Index: configure
===================================================================
--- configure	(revision 63696)
+++ configure	(working copy)
@@ -49858,6 +49858,7 @@
       *-*-osf* | \
       *-*-dgux5* | \
       *-*-sysv5* | \
+      *-*-qnx* | \
       *-pc-msdosdjgpp )
               ;;
 
Index: src/unix/threadpsx.cpp
===================================================================
--- src/unix/threadpsx.cpp	(revision 63696)
+++ src/unix/threadpsx.cpp	(working copy)
@@ -29,6 +29,10 @@
 #include "wx/thread.h"
 #include "wx/except.h"
 
+#ifdef __QNX__
+    #include <sys/time.h>
+#endif
+
 #ifndef WX_PRECOMP
     #include "wx/app.h"
     #include "wx/dynarray.h"
Index: src/unix/dialup.cpp
===================================================================
--- src/unix/dialup.cpp	(revision 63696)
+++ src/unix/dialup.cpp	(working copy)
@@ -684,7 +684,7 @@
         cmd << wxT(" -a");
 #elif defined(__LINUX__) || defined(__SGI__)
         // nothing to be added to ifconfig
-#elif defined(__FREEBSD__) || defined(__DARWIN__)
+#elif defined(__FREEBSD__) || defined(__DARWIN__) || defined(__QNX__)
         // add -l flag
         cmd << wxT(" -l");
 #elif defined(__HPUX__)
@@ -723,7 +723,7 @@
                     // dialup device under SunOS/Solaris
                     hasModem = strstr(output.fn_str(),"ipdptp") != NULL;
                     hasLAN = strstr(output.fn_str(), "hme") != NULL;
-#elif defined(__LINUX__) || defined (__FREEBSD__)
+#elif defined(__LINUX__) || defined (__FREEBSD__) || defined (__QNX__)
                     hasModem = strstr(output.fn_str(),"ppp")    // ppp
                         || strstr(output.fn_str(),"sl")  // slip
                         || strstr(output.fn_str(),"pl"); // plip
@@ -799,7 +799,8 @@
       defined(__LINUX__) || \
       defined(__OSF__) || \
       defined(__SGI__) || \
-      defined(__VMS)
+      defined(__VMS) || \
+      defined(__QNX__)
     cmd << wxT("-c 1 "); // only ping once
 #elif defined(__HPUX__)
     cmd << wxT("64 1 "); // only ping once (need also specify the packet size)
Index: src/unix/appunix.cpp
===================================================================
--- src/unix/appunix.cpp	(revision 63696)
+++ src/unix/appunix.cpp	(working copy)
@@ -10,6 +10,10 @@
 
 #include "wx/wxprec.h"
 
+#ifdef __QNX__
+   #define SA_RESTART 0
+#endif
+
 #ifdef __BORLANDC__
     #pragma hdrstop
 #endif
Index: src/propgrid/propgrid.cpp
===================================================================
--- src/propgrid/propgrid.cpp	(revision 63696)
+++ src/propgrid/propgrid.cpp	(working copy)
@@ -4828,7 +4828,7 @@
         {
 
             int newSplitterX = x - m_dragOffset;
-            int splitterX = x - splitterHitOffset;
+            //int splitterX = x - splitterHitOffset; already defined above
 
             // Splitter redraw required?
             if ( newSplitterX != splitterX )
Index: src/stc/PlatWX.cpp
===================================================================
--- src/stc/PlatWX.cpp	(revision 63696)
+++ src/stc/PlatWX.cpp	(working copy)
@@ -753,6 +753,8 @@
     int n = wxDisplay::GetFromPoint(wxPoint(pt.x, pt.y));
     wxDisplay dpy(n == wxNOT_FOUND ? 0 : n);
     rect = dpy.GetGeometry();
+#else
+    pt=pt;    
 #endif
     return PRectangleFromwxRect(rect);
 }
Index: src/common/intl.cpp
===================================================================
--- src/common/intl.cpp	(revision 63696)
+++ src/common/intl.cpp	(working copy)
@@ -3102,6 +3102,7 @@
     // could try to reverse engineer the format from strftime() output but this
     // looks like too much trouble considering the relatively small number of
     // systems without nl_langinfo() still in use)
+    index=index;
     return wxString();
 #endif // HAVE_LANGINFO_H/!HAVE_LANGINFO_H
 }
Index: src/common/wxcrt.cpp
===================================================================
--- src/common/wxcrt.cpp	(revision 63696)
+++ src/common/wxcrt.cpp	(working copy)
@@ -16,6 +16,13 @@
 // For compilers that support precompilation, includes "wx.h".
 #include "wx/wxprec.h"
 
+#ifdef __QNX__
+// for vfwscanf()
+    #include <wchar.h>
+    #include <stdarg.h>
+    extern "C" int vswscanf(const wchar_t *, const wchar_t *, va_list);
+#endif
+
 #ifdef __BORLANDC__
     #pragma hdrstop
 #endif
Index: src/common/sckaddr.cpp
===================================================================
--- src/common/sckaddr.cpp	(revision 63696)
+++ src/common/sckaddr.cpp	(working copy)
@@ -317,7 +317,7 @@
     return he;
 }
 
-#if defined(HAVE_GETSERVBYNAME)
+#if defined(HAVE_GETSERVBYNAME) || defined __QNX__
 servent *deepCopyServent(servent *s,
                          servent *se,
                          char *buffer,
@@ -395,7 +395,7 @@
 #elif defined(HAVE_FUNC_GETSERVBYNAME_R_4)
     if ( getservbyname_r(port, protocol, serv, &buffer) != 0 )
         return NULL;
-#elif defined(HAVE_GETSERVBYNAME)
+#elif defined(HAVE_GETSERVBYNAME) || __QNX__
     wxLOCK_GETBY_MUTEX(serv);
 
     se = getservbyname(port, protocol);
Index: src/tiff/libtiff/tiffconf.h
===================================================================
--- src/tiff/libtiff/tiffconf.h	(revision 63696)
+++ src/tiff/libtiff/tiffconf.h	(working copy)
@@ -1,4 +1,4 @@
-/* libtiff/tiffconf.h.  Generated by configure.  */
+/* libtiff/tiffconf.h.  Generated from tiffconf.h.in by configure.  */
 /*
   Configuration defines for installed libtiff.
   This file maintained for backward compatibility. Do not use definitions
@@ -30,7 +30,7 @@
 #define HAVE_IEEEFP 1
 
 /* Set the native cpu bit order (FILLORDER_LSB2MSB or FILLORDER_MSB2LSB) */
-#define HOST_FILLORDER FILLORDER_LSB2MSB
+#define HOST_FILLORDER FILLORDER_MSB2LSB
 
 /* Native cpu byte order: 1 if big-endian (Motorola) or 0 if little-endian
    (Intel) */
@@ -40,7 +40,7 @@
 #define CCITT_SUPPORT 1
 
 /* Support JPEG compression (requires IJG JPEG library) */
-#define JPEG_SUPPORT 1
+/* #undef JPEG_SUPPORT */
 
 /* Support LogLuv high dynamic range encoding */
 #define LOGLUV_SUPPORT 1
Index: src/generic/graphicc.cpp
===================================================================
--- src/generic/graphicc.cpp	(revision 63696)
+++ src/generic/graphicc.cpp	(working copy)
@@ -1963,4 +1963,15 @@
 #endif
 }
 
+
+#ifndef __WXGTK__
+#ifdef __QNX__
+// In case of X11 and no GTK this method is undefinded for QNX - may be the same happens on other platforms with this configuration?
+wxGraphicsRenderer* wxGraphicsRenderer::GetDefaultRenderer()
+{
+    return NULL;
+}
+#endif
+#endif
+
 #endif // wxUSE_GRAPHICS_CONTEXT
Index: include/wx/arrstr.h
===================================================================
--- include/wx/arrstr.h	(revision 63696)
+++ include/wx/arrstr.h	(working copy)
@@ -109,7 +109,9 @@
 //            doesn't export template methods from DLL correctly so even though
 //            it compiles them fine, we get link errors when using wxArrayString
 #if !defined(__VISUALC6__) || !(defined(WXMAKINGDLL) || defined(WXUSINGDLL))
-    #define wxHAS_VECTOR_TEMPLATE_ASSIGN
+    #ifndef __QNX__
+        #define wxHAS_VECTOR_TEMPLATE_ASSIGN
+    #endif
 #endif
 
 #ifdef wxHAS_VECTOR_TEMPLATE_ASSIGN
Index: include/wx/math.h
===================================================================
--- include/wx/math.h	(revision 63696)
+++ include/wx/math.h	(working copy)
@@ -18,6 +18,11 @@
 
 #include <math.h>
 
+#ifdef __QNX__
+    // Replacement for finite() which doesn't seem to exist in QNX 6.3.x
+    #define finite(value) (!isinf(value) && !isnan(value))
+#endif
+
 #ifndef M_PI
     #define M_PI 3.1415926535897932384626433832795
 #endif
Index: include/wx/string.h
===================================================================
--- include/wx/string.h	(revision 63696)
+++ include/wx/string.h	(working copy)
@@ -24,6 +24,10 @@
 
 #include "wx/defs.h"        // everybody should include this
 
+#ifdef __QNX__
+#include <strings.h>
+#endif
+
 #ifndef __WXPALMOS5__
 #if defined(__WXMAC__) || defined(__VISAGECPP__)
     #include <ctype.h>
Index: include/wx/private/selectdispatcher.h
===================================================================
--- include/wx/private/selectdispatcher.h	(revision 63696)
+++ include/wx/private/selectdispatcher.h	(working copy)
@@ -15,6 +15,10 @@
 
 #if wxUSE_SELECT_DISPATCHER
 
+#ifdef __QNX__
+  #include <sys/select.h>
+#endif
+
 #ifdef __WATCOMC__
   #include <types.h>
   #include <sys/ioctl.h>
