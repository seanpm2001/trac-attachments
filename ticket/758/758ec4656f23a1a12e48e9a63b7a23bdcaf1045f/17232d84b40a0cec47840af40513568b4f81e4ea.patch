Index: docs/changes.txt
===================================================================
--- docs/changes.txt	(revision 66795)
+++ docs/changes.txt	(working copy)
@@ -1,4 +1,4 @@
--------------------------------------------------------------------------------
+ï»¿-------------------------------------------------------------------------------
                              wxWidgets Change Log
 -------------------------------------------------------------------------------
 
@@ -377,8 +377,9 @@
   with more expected semantics.
 - wxPORTRAIT and wxLANDSCAPE are now elements of wxPrintOrientation enum and
   wxPrintData::SetOrientation(int) takes wxPrintOrientation and not int.
+- wxSlider::SetTickFreq(int n, int pos) is deprecated in favor of 
+  wxSlider::SetTickFreq(int n) as the second parameter was not needed.
 
-
 Major new features in this release
 ----------------------------------
 
Index: include/wx/cocoa/slider.h
===================================================================
--- include/wx/cocoa/slider.h	(revision 66795)
+++ include/wx/cocoa/slider.h	(working copy)
@@ -94,12 +94,14 @@
     virtual int GetThumbLength() const;
 
     // copied from (wxSliderCocoa.h)
-    virtual void SetTickFreq(int n, int pos);
     virtual int GetTickFreq() const;
-    virtual void ClearTicks() { SetTickFreq(0, 0); }
+    virtual void ClearTicks() { SetTickFreq(0); }
 
     virtual void SetTickPos(int pos);
 
+protected:
+    // Platform-specific implementation of SetTickFreq
+    virtual void DoSetTickFreq(int freq);
 };
 
 #endif
Index: include/wx/msw/slider.h
===================================================================
--- include/wx/msw/slider.h	(revision 66795)
+++ include/wx/msw/slider.h	(working copy)
@@ -59,7 +59,6 @@
     int GetMax() const { return m_rangeMax; }
 
     // Win32-specific slider methods
-    void SetTickFreq(int n, int pos);
     int GetTickFreq() const { return m_tickFreq; }
     void SetPageSize(int pageSize);
     int GetPageSize() const;
@@ -131,6 +130,9 @@
     // of dragging the thumb or scrolling the mouse wheel
     bool m_isDragging;
 
+    // Platform-specific implementation of SetTickFreq
+    virtual void DoSetTickFreq(int freq);
+
     DECLARE_DYNAMIC_CLASS_NO_COPY(wxSlider)
 };
 
Index: include/wx/os2/slider.h
===================================================================
--- include/wx/os2/slider.h	(revision 66795)
+++ include/wx/os2/slider.h	(working copy)
@@ -94,9 +94,6 @@
                                   );
                  void SetThumbLength(int nLen) ;
                  void SetTick(int ntickPos) ;
-                 void SetTickFreq( int n
-                                  ,int nPos
-                                 );
 
     //
     // IMPLEMENTATION
@@ -148,6 +145,10 @@
                            ,int  nHeight
                            ,int  nSizeFlags = wxSIZE_AUTO
                           );
+
+    // Platform-specific implementation of SetTickFreq
+    virtual void DoSetTickFreq(int freq);
+
 private:
     DECLARE_DYNAMIC_CLASS(wxSlider)
 }; // end of CLASS wxSlider
Index: include/wx/osx/slider.h
===================================================================
--- include/wx/osx/slider.h	(revision 66795)
+++ include/wx/osx/slider.h	(working copy)
@@ -59,7 +59,6 @@
     void SetMax(int maxValue) { SetRange(m_rangeMin, maxValue); }
 
     // For trackbars only
-    void SetTickFreq(int n, int pos);
     inline int GetTickFreq() const { return m_tickFreq; }
     void SetPageSize(int pageSize);
     int GetPageSize() const ;
@@ -81,6 +80,9 @@
     virtual void TriggerScrollEvent( wxEventType scrollEvent ) ;
 
 protected:
+    // Platform-specific implementation of SetTickFreq
+    virtual void DoSetTickFreq(int freq);
+
     virtual wxSize DoGetBestSize() const;
     virtual void   DoSetSize(int x, int y, int w, int h, int sizeFlags);
     virtual void   DoMoveWindow(int x, int y, int w, int h);
Index: include/wx/palmos/slider.h
===================================================================
--- include/wx/palmos/slider.h	(revision 66795)
+++ include/wx/palmos/slider.h	(working copy)
@@ -52,7 +52,6 @@
     int GetMax() const;
 
     // For trackbars only
-    void SetTickFreq(int n, int pos);
     int GetTickFreq() const;
     void SetPageSize(int pageSize);
     int GetPageSize() const;
@@ -75,6 +74,8 @@
     bool SendScrollEvent(WXEVENTPTR event);
 
 protected:
+    // Platform-specific implementation of SetTickFreq
+    virtual void DoSetTickFreq(int freq);
 
     virtual wxSize DoGetBestSize() const;
 
Index: include/wx/slider.h
===================================================================
--- include/wx/slider.h	(revision 66795)
+++ include/wx/slider.h	(working copy)
@@ -95,7 +95,10 @@
     // warning: most of subsequent methods are currently only implemented in
     //          wxMSW under Win95 and are silently ignored on other platforms
 
-    virtual void SetTickFreq(int WXUNUSED(n), int WXUNUSED(pos)) { }
+#ifdef WXWIN_COMPATIBILITY_2_8
+    wxDEPRECATED_INLINE( void SetTickFreq(int freq, int), DoSetTickFreq(freq); )
+#endif
+    void SetTickFreq(int freq) { DoSetTickFreq(freq); }
     virtual int GetTickFreq() const { return 0; }
     virtual void ClearTicks() { }
     virtual void SetTick(int WXUNUSED(tickPos)) { }
@@ -106,6 +109,8 @@
     virtual void SetSelection(int WXUNUSED(min), int WXUNUSED(max)) { }
 
 protected:
+    // Platform-specific implementation of SetTickFreq
+    virtual void DoSetTickFreq(int WXUNUSED(freq)) { /* unsupported by default */ }
 
     // choose the default border for this window
     virtual wxBorder GetDefaultBorder() const { return wxBORDER_NONE; }
Index: include/wx/univ/slider.h
===================================================================
--- include/wx/univ/slider.h	(revision 66795)
+++ include/wx/univ/slider.h	(working copy)
@@ -77,7 +77,6 @@
     virtual void SetThumbLength(int lenPixels);
     virtual int GetThumbLength() const;
 
-    virtual void SetTickFreq(int n, int WXUNUSED(dummy) = 0);
     virtual int GetTickFreq() const { return m_tickFreq; }
 
     // wxUniv-specific methods
@@ -137,6 +136,9 @@
         INVALID_THUMB_VALUE = -0xffff
     };
 
+    // Platform-specific implementation of SetTickFreq
+    virtual void DoSetTickFreq(int freq);
+
     // overridden base class virtuals
     virtual wxSize DoGetBestClientSize() const;
     virtual void DoDraw(wxControlRenderer *renderer);
Index: interface/wx/slider.h
===================================================================
--- interface/wx/slider.h	(revision 66795)
+++ interface/wx/slider.h	(working copy)
@@ -337,14 +337,12 @@
         @param n
             Frequency. For example, if the frequency is set to two, a tick mark is
             displayed for every other increment in the slider's range.
-        @param pos
-            Position. Must be greater than zero. @todo: what is this for?
 
         @onlyfor{wxmsw}
 
         @see GetTickFreq()
     */
-    virtual void SetTickFreq(int n, int pos);
+    virtual void SetTickFreq(int n);
 
     /**
         Sets the slider position.
Index: samples/controls/controls.cpp
===================================================================
--- samples/controls/controls.cpp	(revision 66795)
+++ samples/controls/controls.cpp	(working copy)
@@ -855,7 +855,7 @@
     m_slider = new wxSlider( panel, ID_SLIDER, 0, 0, 200,
                              wxDefaultPosition, wxSize(155,wxDefaultCoord),
                              wxSL_AUTOTICKS | wxSL_LABELS);
-    m_slider->SetTickFreq(40, 0);
+    m_slider->SetTickFreq(40);
     sz->Add( m_slider, 0, wxALL, 10 );
 
     m_gaugeVert = new wxGauge( panel, wxID_ANY, 100,
Index: samples/widgets/slider.cpp
===================================================================
--- samples/widgets/slider.cpp	(revision 66795)
+++ samples/widgets/slider.cpp	(working copy)
@@ -531,7 +531,7 @@
         return;
     }
 
-    m_slider->SetTickFreq(freq, 0 /* unused */);
+    m_slider->SetTickFreq(freq);
 }
 
 void SliderWidgetsPage::DoSetThumbLen()
Index: src/cocoa/slider.mm
===================================================================
--- src/cocoa/slider.mm	(revision 66795)
+++ src/cocoa/slider.mm	(working copy)
@@ -87,8 +87,7 @@
     // minValue > maxValue not handled, tickMarks set to 0
     if ( style & wxSL_AUTOTICKS )
         tickMarks = ((maxValue - minValue >= 0) ? (maxValue - minValue) : 0);
-    // arg2 needed a value, doesnt do anything
-    SetTickFreq(tickMarks,1);
+    SetTickFreq(tickMarks);
 
     return true;
 }
@@ -206,7 +205,7 @@
     return [GetNSSlider() maxValue];
 }
 
-void wxSlider::SetTickFreq(int n, int pos)
+void wxSlider::DoSetTickFreq(int n)
 {
     const int numTicks = (n > 0) ? ((GetMax() - GetMin()) / n) + 1 : 0;
     [GetNSSlider() setNumberOfTickMarks:numTicks];
Index: src/msw/slider.cpp
===================================================================
--- src/msw/slider.cpp	(revision 66795)
+++ src/msw/slider.cpp	(working copy)
@@ -666,10 +666,10 @@
     }
 }
 
-void wxSlider::SetTickFreq(int n, int pos)
+void wxSlider::DoSetTickFreq(int n)
 {
     m_tickFreq = n;
-    ::SendMessage( GetHwnd(), TBM_SETTICFREQ, (WPARAM) n, (LPARAM) pos );
+    ::SendMessage( GetHwnd(), TBM_SETTICFREQ, (WPARAM) n, (LPARAM) 0 );
 }
 
 void wxSlider::SetPageSize(int pageSize)
Index: src/os2/slider.cpp
===================================================================
--- src/os2/slider.cpp	(revision 66795)
+++ src/os2/slider.cpp	(working copy)
@@ -1074,7 +1074,7 @@
 } // end of wxSlider::SetTick
 
 // For trackbars only
-void wxSlider::SetTickFreq( int n, int WXUNUSED(nPos) )
+void wxSlider::DoSetTickFreq( int n )
 {
     SLDCDATA  vSlData;
     WNDPARAMS vWndParams;
Index: src/osx/slider_osx.cpp
===================================================================
--- src/osx/slider_osx.cpp	(revision 66795)
+++ src/osx/slider_osx.cpp	(working copy)
@@ -206,7 +206,7 @@
 }
 
 // For trackbars only
-void wxSlider::SetTickFreq(int n, int WXUNUSED(pos))
+void wxSlider::DoSetTickFreq(int n)
 {
     // TODO
     m_tickFreq = n;
Index: src/palmos/slider.cpp
===================================================================
--- src/palmos/slider.cpp	(revision 66795)
+++ src/palmos/slider.cpp	(working copy)
@@ -168,7 +168,7 @@
     // unsupported feature
 }
 
-void wxSlider::SetTickFreq(int WXUNUSED(n), int WXUNUSED(pos))
+void wxSlider::DoSetTickFreq(int WXUNUSED(n))
 {
     // unsupported feature
 }
Index: src/univ/slider.cpp
===================================================================
--- src/univ/slider.cpp	(revision 66795)
+++ src/univ/slider.cpp	(working copy)
@@ -352,7 +352,7 @@
 // wxSlider ticks
 // ----------------------------------------------------------------------------
 
-void wxSlider::SetTickFreq(int n, int WXUNUSED(dummy))
+void wxSlider::DoSetTickFreq(int n)
 {
     wxCHECK_RET (n > 0, wxT("invalid slider tick frequency"));
 
Index: src/xrc/xh_slidr.cpp
===================================================================
--- src/xrc/xh_slidr.cpp	(revision 66795)
+++ src/xrc/xh_slidr.cpp	(working copy)
@@ -63,7 +63,7 @@
 
     if( HasParam(wxT("tickfreq")))
     {
-        control->SetTickFreq(GetLong(wxT("tickfreq")), 0);
+        control->SetTickFreq(GetLong(wxT("tickfreq")));
     }
     if( HasParam(wxT("pagesize")))
     {
