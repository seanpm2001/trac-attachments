Index: src/common/string.cpp
===================================================================
--- src/common/string.cpp	(revision 58908)
+++ src/common/string.cpp	(working copy)
@@ -36,6 +36,7 @@
 #include <stdlib.h>
 
 #include "wx/hashmap.h"
+#include "wx/vector.h"
 
 // string handling functions used by wxString:
 #if wxUSE_UNICODE_UTF8
@@ -1397,30 +1398,56 @@
                 break;
         }
     }
-    else // general case
+    else if ( !bReplaceAll)
     {
+        size_t pos = m_impl.find(strOld, 0);
+        if ( pos != npos ) {
+            m_impl.replace(pos, strOld.m_impl.length(), strNew.m_impl);
+            uiCount = 1;
+        }
+    }
+    else
+    {
         const size_t uiOldLen = strOld.m_impl.length();
         const size_t uiNewLen = strNew.m_impl.length();
 
-        for ( size_t pos = 0; ; )
+        wxVector<size_t> replacePositions; // All positions of strOld
+
+        size_t pos;
+
+        for ( pos = m_impl.find(strOld.m_impl, 0);
+              pos != npos; pos = m_impl.find(strOld.m_impl, pos + uiOldLen))
         {
-            pos = m_impl.find(strOld.m_impl, pos);
-            if ( pos == npos )
-                break;
+            replacePositions.push_back(pos);
+            ++uiCount;
+        }
 
-            // replace this occurrence of the old string with the new one
-            m_impl.replace(pos, uiOldLen, strNew.m_impl);
+        if(uiCount == 0) return 0;
 
-            // move up pos past the string that was replaced
-            pos += uiNewLen;
+        // allocate enough memory for the whole new string
+        int LenDiff = uiNewLen - uiOldLen;
+        wxString tmp;
+        tmp.m_impl.reserve(m_impl.length() + uiCount*LenDiff);
 
-            // increase replace count
-            uiCount++;
-
-            // stop after the first one?
-            if ( !bReplaceAll )
-                break;
+        size_t rPos = 0;
+        for(pos = 0; rPos < uiCount; )
+        {
+            if(pos != replacePositions[rPos])
+            {
+                size_t nextPos = replacePositions[rPos];
+                tmp.m_impl.append(m_impl, pos, nextPos - pos);
+                pos = nextPos;
+            }
+            else
+            {
+                tmp.m_impl.append(strNew.m_impl);
+                pos += uiOldLen;
+                ++rPos;
+            }
         }
+        if (pos != m_impl.length())
+            tmp.m_impl.append(m_impl, pos, m_impl.length() - pos);
+        swap(tmp);
     }
 
     return uiCount;
Index: tests/benchmarks/strings.cpp
===================================================================
--- tests/benchmarks/strings.cpp	(revision 58908)
+++ tests/benchmarks/strings.cpp	(working copy)
@@ -281,7 +281,19 @@
     return str.Replace("x", "y") != 0;
 }
 
+BENCHMARK_FUNC(ReplaceLonger)
+{
+    wxString str('x', ASCIISTR_LEN);
+    return str.Replace("x", "yy") != 0;
+}
 
+BENCHMARK_FUNC(ReplaceShorter)
+{
+    wxString str('x', ASCIISTR_LEN);
+    return str.Replace("xx", "y") != 0;
+}
+
+
 // ----------------------------------------------------------------------------
 // string buffers: wx[W]CharBuffer
 // ----------------------------------------------------------------------------
