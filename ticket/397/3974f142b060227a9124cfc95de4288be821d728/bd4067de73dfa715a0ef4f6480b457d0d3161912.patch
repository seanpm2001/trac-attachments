? generic_listctrl_finditem.patch
Index: include/wx/string.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/string.h,v
retrieving revision 1.221
diff -u -r1.221 string.h
--- include/wx/string.h	2006/11/08 00:08:57	1.221
+++ include/wx/string.h	2006/11/28 16:39:38
@@ -1285,6 +1285,19 @@
               const wxChar* sz, size_t nCount = npos) const;
 #endif // !defined HAVE_STD_STRING_COMPARE
 
+    // string comparison not case-sensitive!
+  int comparenocase(const wxStringBase& str) const;
+    // comparison with a substring not case-sensitive!
+  int comparenocase(size_t nStart, size_t nLen, const wxStringBase& str) const;
+    // comparison of 2 substrings not case-sensitive!
+  int comparenocase(size_t nStart, size_t nLen,
+              const wxStringBase& str, size_t nStart2, size_t nLen2) const;
+    // just like stricmp() not case-sensitive!
+  int comparenocase(const wxChar* sz) const;
+    // substring comparison with first nCount characters of sz not case-sensitive!
+  int comparenocase(size_t nStart, size_t nLen,
+              const wxChar* sz, size_t nCount = npos) const;
+
     // insert another string
   wxString& insert(size_t nPos, const wxString& str)
     { return (wxString&)wxStringBase::insert(nPos, str); }
Index: src/common/string.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/string.cpp,v
retrieving revision 1.288
diff -u -r1.288 string.cpp
--- src/common/string.cpp	2006/11/27 15:03:06	1.288
+++ src/common/string.cpp	2006/11/28 16:39:56
@@ -982,6 +982,56 @@
 
 #endif // !wxUSE_STL || !defined(HAVE_STD_STRING_COMPARE)
 
+// Not case-sensitive versions:
+
+static inline int wxDoCmpNoCase(const wxChar* s1, size_t l1,
+                                const wxChar* s2, size_t l2);
+
+int wxString::comparenocase(const wxStringBase& str) const
+{
+    return ::wxDoCmpNoCase(data(), length(), str.data(), str.length());
+}
+
+int wxString::comparenocase(size_t nStart, size_t nLen,
+                         const wxStringBase& str) const
+{
+    wxASSERT(nStart <= length());
+    size_type strLen = length() - nStart;
+    nLen = strLen < nLen ? strLen : nLen;
+    return ::wxDoCmpNoCase(data() + nStart, nLen, str.data(), str.length());
+}
+
+int wxString::comparenocase(size_t nStart, size_t nLen,
+                         const wxStringBase& str,
+                         size_t nStart2, size_t nLen2) const
+{
+    wxASSERT(nStart <= length());
+    wxASSERT(nStart2 <= str.length());
+    size_type strLen  =     length() - nStart,
+              strLen2 = str.length() - nStart2;
+    nLen  = strLen  < nLen  ? strLen  : nLen;
+    nLen2 = strLen2 < nLen2 ? strLen2 : nLen2;
+    return ::wxDoCmpNoCase(data() + nStart, nLen, str.data() + nStart2, nLen2);
+}
+
+int wxString::comparenocase(const wxChar* sz) const
+{
+    size_t nLen = wxStrlen(sz);
+    return ::wxDoCmpNoCase(data(), length(), sz, nLen);
+}
+
+int wxString::comparenocase(size_t nStart, size_t nLen,
+                         const wxChar* sz, size_t nCount) const
+{
+    wxASSERT(nStart <= length());
+    size_type strLen = length() - nStart;
+    nLen = strLen < nLen ? strLen : nLen;
+    if( nCount == npos )
+        nCount = wxStrlen(sz);
+
+    return ::wxDoCmpNoCase(data() + nStart, nLen, sz, nCount);
+}
+
 // ===========================================================================
 // wxString class core
 // ===========================================================================
Index: src/generic/listctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/listctrl.cpp,v
retrieving revision 1.433
diff -u -r1.433 listctrl.cpp
--- src/generic/listctrl.cpp	2006/11/28 04:52:21	1.433
+++ src/generic/listctrl.cpp	2006/11/28 16:40:17
@@ -4501,20 +4501,31 @@
     MoveToItem((size_t)index);
 }
 
-long wxListMainWindow::FindItem(long start, const wxString& str, bool WXUNUSED(partial) )
+long wxListMainWindow::FindItem(long start, const wxString& str, bool partial )
 {
     long pos = start;
     wxString tmp = str;
+    const size_t TMP = tmp.length ();
+
     if (pos < 0)
         pos = 0;
 
     size_t count = GetItemCount();
-    for ( size_t i = (size_t)pos; i < count; i++ )
-    {
-        wxListLineData *line = GetLine(i);
-        if ( line->GetText(0) == tmp )
-            return i;
-    }
+
+    if ( ! partial )
+        for ( size_t i = (size_t)pos; i < count; i++ )
+        {
+            wxListLineData *line = GetLine(i);
+            if ( line->GetText(0).comparenocase ( tmp ) == 0 )
+                return i;
+        }
+    else
+        for ( size_t i = (size_t)pos; i < count; i++ )
+        {
+            wxListLineData *line = GetLine(i);
+            if ( line->GetText(0).comparenocase ( 0, TMP, tmp ) == 0 )
+                return i;
+        }
 
     return wxNOT_FOUND;
 }

 	  	 
