diff --git a/samples/html/help/help.cpp b/samples/html/help/help.cpp
index a3746f3..eb855c3 100644
--- a/samples/html/help/help.cpp
+++ b/samples/html/help/help.cpp
@@ -36,22 +36,15 @@
 // private classes
 // ----------------------------------------------------------------------------
 
-
-// Define a new application type, each program should derive a class from wxApp
-class MyApp : public wxApp
+// IDs for the controls and the menu commands
+enum
 {
-public:
-    // override base class virtuals
-    // ----------------------------
-
-    // this one is called on application startup and is a good place for the app
-    // initialization (doing it here and not in the ctor allows to have an error
-    // return: if OnInit() returns false, the application terminates)
-    virtual bool OnInit() wxOVERRIDE;
+    // menu items
+    Minimal_Quit = 1,
+    Minimal_Dlg,
+    Minimal_Help = WXK_F1
 };
 
-
-
 // Define a new frame type: this is going to be our main frame
 class MyFrame : public wxFrame
 {
@@ -61,6 +54,7 @@ public:
 
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
+    void OnDialog(wxCommandEvent& event);
     void OnHelp(wxCommandEvent& event);
     void OnClose(wxCloseEvent& event);
 private:
@@ -70,18 +64,39 @@ private:
     wxDECLARE_EVENT_TABLE();
 };
 
+// Define a new application type, each program should derive a class from wxApp
+class MyApp : public wxApp
+{
+public:
+    // override base class virtuals
+    // ----------------------------
+
+    // this one is called on application startup and is a good place for the app
+    // initialization (doing it here and not in the ctor allows to have an error
+    // return: if OnInit() returns false, the application terminates)
+    virtual bool OnInit() wxOVERRIDE;
+    int FilterEvent(wxEvent& event) wxOVERRIDE;
+    MyFrame* frame;
+};
+
+int MyApp::FilterEvent(wxEvent& event)
+{
+if (frame && event.GetEventType() == wxEVT_KEY_DOWN)
+    {
+        if (((wxKeyEvent&)event).GetKeyCode() == Minimal_Help)
+        { 
+            frame->OnHelp((wxCommandEvent&)event);
+            return true; 
+        }
+    }
+
+return -1;
+}
+
 // ----------------------------------------------------------------------------
 // constants
 // ----------------------------------------------------------------------------
 
-// IDs for the controls and the menu commands
-enum
-{
-    // menu items
-    Minimal_Quit = 1,
-    Minimal_Help
-};
-
 // ----------------------------------------------------------------------------
 // event tables and other macros for wxWidgets
 // ----------------------------------------------------------------------------
@@ -91,6 +106,7 @@ enum
 // simple menu events like this the static method is much simpler.
 wxBEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
+    EVT_MENU(Minimal_Dlg, MyFrame::OnDialog)
     EVT_MENU(Minimal_Help, MyFrame::OnHelp)
     EVT_CLOSE(MyFrame::OnClose)
 wxEND_EVENT_TABLE()
@@ -123,7 +139,7 @@ bool MyApp::OnInit()
     SetAppName(wxT("wxHTMLHelp"));
 
     // Create the main application window
-    MyFrame *frame = new MyFrame(_("HTML Help Sample"),
+    frame = new MyFrame(_("HTML Help Sample"),
         wxDefaultPosition, wxDefaultSize);
 
     // Show it
@@ -150,6 +166,7 @@ MyFrame::MyFrame(const wxString& title, const wxPoint& pos, const wxSize& size)
     // create a menu bar
     wxMenu *menuFile = new wxMenu;
 
+    menuFile->Append(Minimal_Dlg, _("&Dialog"));
     menuFile->Append(Minimal_Help, _("&Help"));
     menuFile->Append(Minimal_Quit, _("E&xit"));
 
@@ -169,6 +186,8 @@ MyFrame::MyFrame(const wxString& title, const wxPoint& pos, const wxSize& size)
     ret = help.AddBook(wxFileName(wxT("helpfiles/another.hhp"), wxPATH_UNIX));
     if (! ret)
         wxMessageBox(_("Failed adding book helpfiles/another.hhp"));
+    
+    new wxTextCtrl(this, wxID_ANY); // Just to receive keyboard focus
 }
 
 
@@ -180,6 +199,11 @@ void MyFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
     Close(true);
 }
 
+void MyFrame::OnDialog(wxCommandEvent& WXUNUSED(event))
+{
+    wxGetTextFromUser("Just a dialog");
+}
+
 void MyFrame::OnHelp(wxCommandEvent& WXUNUSED(event))
 {
     help.Display(wxT("Test HELPFILE"));
