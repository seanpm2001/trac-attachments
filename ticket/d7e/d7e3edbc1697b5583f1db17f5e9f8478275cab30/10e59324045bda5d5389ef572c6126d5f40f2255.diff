diff --git a/tests/controls/richtextctrltest.cpp b/tests/controls/richtextctrltest.cpp
index e30c91d..fd39803 100644
--- a/tests/controls/richtextctrltest.cpp
+++ b/tests/controls/richtextctrltest.cpp
@@ -866,6 +866,33 @@ void RichTextCtrlTestCase::Table()
         CPPUNIT_ASSERT(table->GetRowCount() == 2);
         m_rich->EndSuppressUndo();
 
+        // Test setting properties with undo
+        CPPUNIT_ASSERT(table->GetProperties().GetCount() == 0);
+        wxRichTextProperties properties;
+        properties.SetProperty("stringprop", wxString("foo"));
+        m_rich->GetBuffer().SetObjectPropertiesWithUndo(*table, properties);
+        table = GetCurrentTableInstance(para);
+        properties.SetProperty("boolprop", "true");
+        m_rich->GetBuffer().SetObjectPropertiesWithUndo(*table, properties);
+        table = GetCurrentTableInstance(para);
+        CPPUNIT_ASSERT(table->GetProperties().GetCount() == 2);
+        CPPUNIT_ASSERT(table->GetProperties().HasProperty("stringprop"));
+        CPPUNIT_ASSERT(table->GetProperties().GetPropertyString("stringprop") == "foo");
+        CPPUNIT_ASSERT(table->GetProperties().HasProperty("boolprop"));
+        CPPUNIT_ASSERT(table->GetProperties().GetPropertyBool("boolprop")== true);
+        m_rich->Undo();
+        table = GetCurrentTableInstance(para);
+        CPPUNIT_ASSERT(table->GetProperties().GetCount() == 1);
+        m_rich->Redo();
+        table = GetCurrentTableInstance(para);
+        CPPUNIT_ASSERT(table->GetProperties().GetCount() == 2);
+        m_rich->Undo();
+        table = GetCurrentTableInstance(para);
+        CPPUNIT_ASSERT(table->GetProperties().GetCount() == 1);
+        m_rich->Undo();
+        table = GetCurrentTableInstance(para);
+        CPPUNIT_ASSERT(table->GetProperties().GetCount() == 0);
+
         m_rich->GetCommandProcessor()->ClearCommands(); // otherwise the command-history from this loop will cause CPPUNIT_ASSERT failures in the next one
 
         if (t == 0)
