diff --git a/src/richtext/richtextbuffer.cpp b/src/richtext/richtextbuffer.cpp
index 3ff45e8..ee8e5e0 100644
--- a/src/richtext/richtextbuffer.cpp
+++ b/src/richtext/richtextbuffer.cpp
@@ -7733,39 +7733,19 @@ bool wxRichTextParagraphLayoutBox::SetObjectPropertiesWithUndo(wxRichTextObject&
     wxRichTextAction* action = NULL;
     wxRichTextObject* clone = NULL;
 
-#if 1
     if (rtc->SuppressingUndo())
         obj.SetProperties(properties);
     else
     {
         clone = obj.Clone();
-        clone->SetProperties(obj.GetProperties());
-        action = new wxRichTextAction(NULL, _("Change Properties"), wxRICHTEXT_CHANGE_OBJECT, buffer, obj.GetParentContainer(), rtc);
+        obj.SetProperties(properties);
+        // The 'true' parameter in the next line says "Ignore first time"; otherwise the objects are prematurely switched
+        action = new wxRichTextAction(NULL, _("Change Properties"), wxRICHTEXT_CHANGE_OBJECT, buffer, obj.GetParentContainer(), rtc, true);
         action->SetOldAndNewObjects(& obj, clone);
         action->SetPosition(obj.GetRange().GetStart());
         action->SetRange(obj.GetRange());
         buffer->SubmitAction(action);
     }
-#else
-    if (!rtc->SuppressingUndo())
-    {
-        // Create a clone containing the current state of the object. It will be used to Undo the action
-        clone = obj.Clone();
-        clone->SetParent(obj.GetParent());
-        action = new wxRichTextAction(NULL, _("Change Properties"), wxRICHTEXT_CHANGE_OBJECT, buffer, rtc->GetFocusObject(), rtc);
-        action->SetObject(&obj);
-        action->SetPosition(GetRange().GetStart());
-    }
-
-    obj.SetProperties(properties);
-
-    if (!rtc->SuppressingUndo())
-    {
-        buffer->SubmitAction(action);
-        // Finally store the original-state clone; doing so earlier would cause various failures
-        action->StoreObject(clone);
-    }
-#endif
 
     return true;
 }
