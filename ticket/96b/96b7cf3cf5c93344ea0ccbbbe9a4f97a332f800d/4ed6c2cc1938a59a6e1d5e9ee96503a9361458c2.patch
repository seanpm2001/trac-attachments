Index: src/msw/ole/droptgt.cpp
===================================================================
--- src/msw/ole/droptgt.cpp	(revision 76075)
+++ src/msw/ole/droptgt.cpp	(working copy)
@@ -218,6 +218,14 @@
     }
 #endif // 0
 
+    if ( !m_pTarget->MSWIsAcceptedData(pIDataSource) ) {
+      // we don't accept this kind of data
+      *pdwEffect = DROPEFFECT_NONE;
+
+      // Don't call any other stuff if we reject this data
+      return S_OK;
+    }
+
     // for use in OnEnter and OnDrag calls
     m_pTarget->MSWSetDataSource(pIDataSource);
 
@@ -225,26 +233,19 @@
     m_pIDataObject = pIDataSource;
     m_pIDataObject->AddRef();
 
-    if ( !m_pTarget->MSWIsAcceptedData(pIDataSource) ) {
-        // we don't accept this kind of data
-        *pdwEffect = DROPEFFECT_NONE;
-    }
-    else
+    // we need client coordinates to pass to wxWin functions
+    if ( !ScreenToClient(m_hwnd, (POINT *)&pt) )
     {
-        // we need client coordinates to pass to wxWin functions
-        if ( !ScreenToClient(m_hwnd, (POINT *)&pt) )
-        {
-            wxLogLastError(wxT("ScreenToClient"));
-        }
-
-        // give some visual feedback
-        *pdwEffect = ConvertDragResultToEffect(
-            m_pTarget->OnEnter(pt.x, pt.y, ConvertDragEffectToResult(
-                GetDropEffect(grfKeyState, m_pTarget->GetDefaultAction(), *pdwEffect))
-                        )
-                     );
+        wxLogLastError(wxT("ScreenToClient"));
     }
 
+    // give some visual feedback
+    *pdwEffect = ConvertDragResultToEffect(
+        m_pTarget->OnEnter(pt.x, pt.y, ConvertDragEffectToResult(
+            GetDropEffect(grfKeyState, m_pTarget->GetDefaultAction(), *pdwEffect))
+                    )
+                  );
+
     // update drag image
     const wxDragResult res = ConvertDragEffectToResult(*pdwEffect);
     m_pTarget->MSWUpdateDragImageOnEnter(pt.x, pt.y, res);
