Index: wxWidgets-trunk/src/xrc/xh_tree.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_tree.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_tree.cpp	(working copy)
@@ -25,6 +25,10 @@
 wxTreeCtrlXmlHandler::wxTreeCtrlXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxTreeCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxTR_EDIT_LABELS);
     XRC_ADD_STYLE(wxTR_NO_BUTTONS);
     XRC_ADD_STYLE(wxTR_HAS_BUTTONS);
@@ -48,7 +52,7 @@
 {
     XRC_MAKE_INSTANCE(tree, wxTreeCtrl)
 
-    tree->Create(m_parentAsWindow,
+    tree->Create(GetParentAsWindow(),
                 GetID(),
                 GetPosition(), GetSize(),
                 GetStyle(wxT("style"), wxTR_DEFAULT_STYLE),
Index: wxWidgets-trunk/src/xrc/xh_html.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_html.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_html.cpp	(working copy)
@@ -27,6 +27,10 @@
 wxHtmlWindowXmlHandler::wxHtmlWindowXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxHtmlWindowXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxHW_SCROLLBAR_NEVER);
     XRC_ADD_STYLE(wxHW_SCROLLBAR_AUTO);
     XRC_ADD_STYLE(wxHW_NO_SELECTION);
@@ -37,7 +41,7 @@
 {
     XRC_MAKE_INSTANCE(control, wxHtmlWindow)
 
-    control->Create(m_parentAsWindow,
+    control->Create(GetParentAsWindow(),
                     GetID(),
                     GetPosition(), GetSize(),
                     GetStyle(wxT("style"), wxHW_SCROLLBAR_AUTO),
Index: wxWidgets-trunk/src/xrc/xh_dlg.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_dlg.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_dlg.cpp	(working copy)
@@ -30,6 +30,10 @@
 
 wxDialogXmlHandler::wxDialogXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxDialogXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxSTAY_ON_TOP);
     XRC_ADD_STYLE(wxCAPTION);
     XRC_ADD_STYLE(wxDEFAULT_DIALOG_STYLE);
@@ -61,7 +65,7 @@
 {
     XRC_MAKE_INSTANCE(dlg, wxDialog);
 
-    dlg->Create(m_parentAsWindow,
+    dlg->Create(GetParentAsWindow(),
                 GetID(),
                 GetText(wxT("title")),
                 wxDefaultPosition, wxDefaultSize,
Index: wxWidgets-trunk/src/xrc/xh_propdlg.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_propdlg.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_propdlg.cpp	(working copy)
@@ -36,6 +36,10 @@
                       m_isInside(false),
                       m_dialog(NULL)
 {
+}
+
+void wxPropertySheetDialogXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxSTAY_ON_TOP);
     XRC_ADD_STYLE(wxCAPTION);
     XRC_ADD_STYLE(wxDEFAULT_DIALOG_STYLE);
@@ -57,7 +61,7 @@
 
 wxObject *wxPropertySheetDialogXmlHandler::DoCreateResource()
 {
-    if (m_class == wxT("propertysheetpage"))
+    if (GetClass() == wxT("propertysheetpage"))
     {
         wxXmlNode *n = GetParamNode(wxT("object"));
 
@@ -105,7 +109,7 @@
     {
         XRC_MAKE_INSTANCE(dlg, wxPropertySheetDialog)
 
-        dlg->Create(m_parentAsWindow,
+        dlg->Create(GetParentAsWindow(),
                    GetID(),
                    GetText(wxT("title")),
                    GetPosition(),
Index: wxWidgets-trunk/src/xrc/xh_filepicker.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_filepicker.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_filepicker.cpp	(working copy)
@@ -24,6 +24,10 @@
 
 wxFilePickerCtrlXmlHandler::wxFilePickerCtrlXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxFilePickerCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxFLP_OPEN);
     XRC_ADD_STYLE(wxFLP_SAVE);
     XRC_ADD_STYLE(wxFLP_OVERWRITE_PROMPT);
@@ -38,7 +42,7 @@
 {
     XRC_MAKE_INSTANCE(picker, wxFilePickerCtrl)
 
-    picker->Create(m_parentAsWindow,
+    picker->Create(GetParentAsWindow(),
                   GetID(),
                   GetParamValue(wxT("value")),
                   GetText(wxT("message")),
Index: wxWidgets-trunk/src/xrc/xh_notbk.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_notbk.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_notbk.cpp	(working copy)
@@ -34,6 +34,10 @@
                       m_isInside(false),
                       m_notebook(NULL)
 {
+}
+
+void wxNotebookXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxBK_DEFAULT);
     XRC_ADD_STYLE(wxBK_LEFT);
     XRC_ADD_STYLE(wxBK_RIGHT);
@@ -56,7 +60,7 @@
 
 wxObject *wxNotebookXmlHandler::DoCreateResource()
 {
-    if (m_class == wxT("notebookpage"))
+    if (GetClass() == wxT("notebookpage"))
     {
         wxXmlNode *n = GetParamNode(wxT("object"));
 
@@ -118,7 +122,7 @@
     {
         XRC_MAKE_INSTANCE(nb, wxNotebook)
 
-        nb->Create(m_parentAsWindow,
+        nb->Create(GetParentAsWindow(),
                    GetID(),
                    GetPosition(), GetSize(),
                    GetStyle(wxT("style")),
Index: wxWidgets-trunk/src/xrc/xh_toolb.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_toolb.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_toolb.cpp	(working copy)
@@ -31,6 +31,10 @@
 wxToolBarXmlHandler::wxToolBarXmlHandler()
 : wxXmlResourceHandler(), m_isInside(false), m_toolbar(NULL)
 {
+}
+
+void wxToolBarXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxTB_FLAT);
     XRC_ADD_STYLE(wxTB_DOCKABLE);
     XRC_ADD_STYLE(wxTB_VERTICAL);
@@ -53,7 +57,7 @@
 
 wxObject *wxToolBarXmlHandler::DoCreateResource()
 {
-    if (m_class == wxT("tool"))
+    if (GetClass() == wxT("tool"))
     {
         if ( !m_toolbar )
         {
@@ -144,7 +148,7 @@
         return m_toolbar; // must return non-NULL
     }
 
-    else if (m_class == wxT("separator"))
+    else if (GetClass() == wxT("separator"))
     {
         if ( !m_toolbar )
         {
@@ -164,7 +168,7 @@
 
         XRC_MAKE_INSTANCE(toolbar, wxToolBar)
 
-        toolbar->Create(m_parentAsWindow,
+        toolbar->Create(GetParentAsWindow(),
                          GetID(),
                          GetPosition(),
                          GetSize(),
@@ -216,9 +220,9 @@
 
         toolbar->Realize();
 
-        if (m_parentAsWindow && !GetBool(wxT("dontattachtoframe")))
+        if (GetParentAsWindow() && !GetBool(wxT("dontattachtoframe")))
         {
-            wxFrame *parentFrame = wxDynamicCast(m_parent, wxFrame);
+            wxFrame *parentFrame = wxDynamicCast(GetParent(), wxFrame);
             if (parentFrame)
                 parentFrame->SetToolBar(toolbar);
         }
Index: wxWidgets-trunk/src/xrc/xh_odcombo.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_odcombo.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_odcombo.cpp	(working copy)
@@ -32,6 +32,10 @@
                      :wxXmlResourceHandler()
                      ,m_insideBox(false)
 {
+}
+
+void wxOwnerDrawnComboBoxXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxCB_SIMPLE);
     XRC_ADD_STYLE(wxCB_SORT);
     XRC_ADD_STYLE(wxCB_READONLY);
@@ -44,7 +48,7 @@
 
 wxObject *wxOwnerDrawnComboBoxXmlHandler::DoCreateResource()
 {
-    if( m_class == wxT("wxOwnerDrawnComboBox"))
+    if( GetClass() == wxT("wxOwnerDrawnComboBox"))
     {
         // find the selection
         long selection = GetLong( wxT("selection"), -1 );
@@ -55,7 +59,7 @@
 
         XRC_MAKE_INSTANCE(control, wxOwnerDrawnComboBox)
 
-        control->Create(m_parentAsWindow,
+        control->Create(GetParentAsWindow(),
                         GetID(),
                         GetText(wxT("value")),
                         GetPosition(), GetSize(),
@@ -84,9 +88,9 @@
         // handle <item>Label</item>
 
         // add to the list
-        wxString str = GetNodeContent(m_node);
-        if (m_resource->GetFlags() & wxXRC_USE_LOCALE)
-            str = wxGetTranslation(str, m_resource->GetDomain());
+        wxString str = GetNodeContent(GetNode());
+        if (GetResource()->GetFlags() & wxXRC_USE_LOCALE)
+            str = wxGetTranslation(str, GetResource()->GetDomain());
         strList.Add(str);
 
         return NULL;
Index: wxWidgets-trunk/src/xrc/xh_grid.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_grid.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_grid.cpp	(working copy)
@@ -25,6 +25,10 @@
 wxGridXmlHandler::wxGridXmlHandler()
                 : wxXmlResourceHandler()
 {
+}
+
+void wxGridXmlHandler::Create()
+{
     AddWindowStyles();
 }
 
@@ -32,7 +36,7 @@
 {
     XRC_MAKE_INSTANCE(grid, wxGrid)
 
-    grid->Create(m_parentAsWindow,
+    grid->Create(GetParentAsWindow(),
                    GetID(),
                    GetPosition(), GetSize(),
                    GetStyle(wxT("style")),
Index: wxWidgets-trunk/src/xrc/xh_gauge.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_gauge.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_gauge.cpp	(working copy)
@@ -30,6 +30,10 @@
 wxGaugeXmlHandler::wxGaugeXmlHandler()
                   :wxXmlResourceHandler()
 {
+}
+
+void wxGaugeXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxGA_HORIZONTAL);
     XRC_ADD_STYLE(wxGA_VERTICAL);
 #if WXWIN_COMPATIBILITY_2_6
@@ -43,7 +47,7 @@
 {
     XRC_MAKE_INSTANCE(control, wxGauge)
 
-    control->Create(m_parentAsWindow,
+    control->Create(GetParentAsWindow(),
                     GetID(),
                     GetLong(wxT("range"), DEFAULT_RANGE),
                     GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_htmllbox.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_htmllbox.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_htmllbox.cpp	(working copy)
@@ -27,6 +27,10 @@
 wxSimpleHtmlListBoxXmlHandler::wxSimpleHtmlListBoxXmlHandler()
 : wxXmlResourceHandler(), m_insideBox(false)
 {
+}
+
+void wxSimpleHtmlListBoxXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxHLB_DEFAULT_STYLE);
     XRC_ADD_STYLE(wxHLB_MULTIPLE);
     AddWindowStyles();
@@ -34,7 +38,7 @@
 
 wxObject *wxSimpleHtmlListBoxXmlHandler::DoCreateResource()
 {
-    if ( m_class == wxT("wxSimpleHtmlListBox"))
+    if ( GetClass() == wxT("wxSimpleHtmlListBox"))
     {
         // find the selection
         long selection = GetLong(wxT("selection"), -1);
@@ -46,7 +50,7 @@
 
         XRC_MAKE_INSTANCE(control, wxSimpleHtmlListBox)
 
-        control->Create(m_parentAsWindow,
+        control->Create(GetParentAsWindow(),
                         GetID(),
                         GetPosition(), GetSize(),
                         strList,
@@ -68,9 +72,9 @@
         // handle <item>Label</item>
 
         // add to the list
-        wxString str = GetNodeContent(m_node);
-        if (m_resource->GetFlags() & wxXRC_USE_LOCALE)
-            str = wxGetTranslation(str, m_resource->GetDomain());
+        wxString str = GetNodeContent(GetNode());
+        if (GetResource()->GetFlags() & wxXRC_USE_LOCALE)
+            str = wxGetTranslation(str, GetResource()->GetDomain());
         strList.Add(str);
 
         return NULL;
Index: wxWidgets-trunk/src/xrc/xh_panel.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_panel.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_panel.cpp	(working copy)
@@ -28,6 +28,10 @@
 
 wxPanelXmlHandler::wxPanelXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxPanelXmlHandler::Create()
+{
 #if WXWIN_COMPATIBILITY_2_6
     XRC_ADD_STYLE(wxNO_3D);
 #endif // WXWIN_COMPATIBILITY_2_6
@@ -41,7 +45,7 @@
 {
     XRC_MAKE_INSTANCE(panel, wxPanel)
 
-    panel->Create(m_parentAsWindow,
+    panel->Create(GetParentAsWindow(),
                   GetID(),
                   GetPosition(), GetSize(),
                   GetStyle(wxT("style"), wxTAB_TRAVERSAL),
Index: wxWidgets-trunk/src/xrc/xh_stbox.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_stbox.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_stbox.cpp	(working copy)
@@ -28,6 +28,10 @@
 wxStaticBoxXmlHandler::wxStaticBoxXmlHandler()
                       :wxXmlResourceHandler()
 {
+}
+
+void wxStaticBoxXmlHandler::Create()
+{
     AddWindowStyles();
 }
 
@@ -35,7 +39,7 @@
 {
     XRC_MAKE_INSTANCE(box, wxStaticBox)
 
-    box->Create(m_parentAsWindow,
+    box->Create(GetParentAsWindow(),
                 GetID(),
                 GetText(wxT("label")),
                 GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_statbar.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_statbar.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_statbar.cpp	(working copy)
@@ -31,6 +31,10 @@
 wxStatusBarXmlHandler::wxStatusBarXmlHandler()
                       :wxXmlResourceHandler()
 {
+}
+
+void wxStatusBarXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxSTB_SIZEGRIP);
     XRC_ADD_STYLE(wxSTB_SHOW_TIPS);
     XRC_ADD_STYLE(wxSTB_ELLIPSIZE_START);
@@ -48,7 +52,7 @@
 {
     XRC_MAKE_INSTANCE(statbar, wxStatusBar)
 
-    statbar->Create(m_parentAsWindow,
+    statbar->Create(GetParentAsWindow(),
                     GetID(),
                     GetStyle(),
                     GetName());
@@ -109,9 +113,9 @@
 
     CreateChildren(statbar);
 
-    if (m_parentAsWindow)
+    if (GetParentAsWindow())
     {
-        wxFrame *parentFrame = wxDynamicCast(m_parent, wxFrame);
+        wxFrame *parentFrame = wxDynamicCast(GetParent(), wxFrame);
         if (parentFrame)
             parentFrame->SetStatusBar(statbar);
     }
Index: wxWidgets-trunk/src/xrc/xh_unkwn.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_unkwn.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_unkwn.cpp	(working copy)
@@ -84,16 +84,20 @@
 wxUnknownWidgetXmlHandler::wxUnknownWidgetXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxUnknownWidgetXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxNO_FULL_REPAINT_ON_RESIZE);
 }
 
 wxObject *wxUnknownWidgetXmlHandler::DoCreateResource()
 {
-    wxASSERT_MSG( m_instance == NULL,
+    wxASSERT_MSG( GetInstance() == NULL,
                   wxT("'unknown' controls can't be subclassed, use wxXmlResource::AttachUnknownControl") );
 
     wxPanel *panel =
-        new wxUnknownControlContainer(m_parentAsWindow,
+        new wxUnknownControlContainer(GetParentAsWindow(),
                                       GetName(), wxID_ANY,
                                       GetPosition(), GetSize(),
                                       GetStyle(wxT("style")));
Index: wxWidgets-trunk/src/xrc/xh_datectrl.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_datectrl.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_datectrl.cpp	(working copy)
@@ -24,6 +24,10 @@
 
 wxDateCtrlXmlHandler::wxDateCtrlXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxDateCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxDP_DEFAULT);
     XRC_ADD_STYLE(wxDP_SPIN);
     XRC_ADD_STYLE(wxDP_DROPDOWN);
@@ -36,7 +40,7 @@
 {
    XRC_MAKE_INSTANCE(picker, wxDatePickerCtrl)
 
-   picker->Create(m_parentAsWindow,
+   picker->Create(GetParentAsWindow(),
                   GetID(),
                   wxDefaultDateTime,
                   GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_cald.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_cald.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_cald.cpp	(working copy)
@@ -30,6 +30,10 @@
 wxCalendarCtrlXmlHandler::wxCalendarCtrlXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxCalendarCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxCAL_SUNDAY_FIRST);
     XRC_ADD_STYLE(wxCAL_MONDAY_FIRST);
     XRC_ADD_STYLE(wxCAL_SHOW_HOLIDAYS);
@@ -46,7 +50,7 @@
 {
     XRC_MAKE_INSTANCE(calendar, wxCalendarCtrl);
 
-    calendar->Create(m_parentAsWindow,
+    calendar->Create(GetParentAsWindow(),
                      GetID(),
                      wxDefaultDateTime,
                      /*TODO: take it from resource*/
Index: wxWidgets-trunk/src/xrc/xh_fontpicker.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_fontpicker.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_fontpicker.cpp	(working copy)
@@ -24,6 +24,10 @@
 
 wxFontPickerCtrlXmlHandler::wxFontPickerCtrlXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxFontPickerCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxFNTP_USE_TEXTCTRL);
     XRC_ADD_STYLE(wxFNTP_FONTDESC_AS_LABEL);
     XRC_ADD_STYLE(wxFNTP_USEFONT_FOR_LABEL);
@@ -39,7 +43,7 @@
     if (HasParam(wxT("value")))
         f = GetFont(wxT("value"));
 
-   picker->Create(m_parentAsWindow,
+   picker->Create(GetParentAsWindow(),
                   GetID(),
                   f,
                   GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_bttn.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_bttn.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_bttn.cpp	(working copy)
@@ -28,6 +28,10 @@
 wxButtonXmlHandler::wxButtonXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxButtonXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxBU_LEFT);
     XRC_ADD_STYLE(wxBU_RIGHT);
     XRC_ADD_STYLE(wxBU_TOP);
@@ -40,7 +44,7 @@
 {
    XRC_MAKE_INSTANCE(button, wxButton)
 
-   button->Create(m_parentAsWindow,
+   button->Create(GetParentAsWindow(),
                     GetID(),
                     GetText(wxT("label")),
                     GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_spin.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_spin.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_spin.cpp	(working copy)
@@ -32,6 +32,10 @@
 wxSpinButtonXmlHandler::wxSpinButtonXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxSpinButtonXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxSP_HORIZONTAL);
     XRC_ADD_STYLE(wxSP_VERTICAL);
     XRC_ADD_STYLE(wxSP_ARROW_KEYS);
@@ -43,7 +47,7 @@
 {
     XRC_MAKE_INSTANCE(control, wxSpinButton)
 
-    control->Create(m_parentAsWindow,
+    control->Create(GetParentAsWindow(),
                     GetID(),
                     GetPosition(), GetSize(),
                     GetStyle(wxT("style"), wxSP_VERTICAL | wxSP_ARROW_KEYS),
@@ -73,6 +77,10 @@
 wxSpinCtrlXmlHandler::wxSpinCtrlXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxSpinCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxSP_HORIZONTAL);
     XRC_ADD_STYLE(wxSP_VERTICAL);
     XRC_ADD_STYLE(wxSP_ARROW_KEYS);
@@ -86,7 +94,7 @@
 {
     XRC_MAKE_INSTANCE(control, wxSpinCtrl)
 
-    control->Create(m_parentAsWindow,
+    control->Create(GetParentAsWindow(),
                     GetID(),
                     GetText(wxT("value")),
                     GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_chckb.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_chckb.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_chckb.cpp	(working copy)
@@ -28,6 +28,10 @@
 wxCheckBoxXmlHandler::wxCheckBoxXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxCheckBoxXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxCHK_2STATE);
     XRC_ADD_STYLE(wxCHK_3STATE);
     XRC_ADD_STYLE(wxCHK_ALLOW_3RD_STATE_FOR_USER);
@@ -39,7 +43,7 @@
 {
     XRC_MAKE_INSTANCE(control, wxCheckBox)
 
-    control->Create(m_parentAsWindow,
+    control->Create(GetParentAsWindow(),
                     GetID(),
                     GetText(wxT("label")),
                     GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xmlres.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xmlres.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xmlres.cpp	(working copy)
@@ -331,16 +331,22 @@
 }
 
 
-IMPLEMENT_ABSTRACT_CLASS(wxXmlResourceHandler, wxObject)
+IMPLEMENT_CLASS(wxXmlResourceHandlerImpl, wxObject)
 
 void wxXmlResource::AddHandler(wxXmlResourceHandler *handler)
 {
+    wxXmlResourceHandlerImpl *impl = new wxXmlResourceHandlerImpl(handler);
+    handler->SetImpl(impl);
+    handler->Create();
     m_handlers.push_back(handler);
     handler->SetParentResource(this);
 }
 
 void wxXmlResource::InsertHandler(wxXmlResourceHandler *handler)
 {
+    wxXmlResourceHandlerImpl *impl = new wxXmlResourceHandlerImpl(handler);
+    handler->SetImpl(impl);
+    handler->Create();
     m_handlers.insert(m_handlers.begin(), handler);
     handler->SetParentResource(this);
 }
@@ -952,14 +958,14 @@
 
 
 
-wxXmlResourceHandler::wxXmlResourceHandler()
+wxXmlResourceHandlerImpl::wxXmlResourceHandlerImpl(wxXmlResourceHandler *handler)
         : m_node(NULL), m_parent(NULL), m_instance(NULL),
-          m_parentAsWindow(NULL)
-{}
+          m_parentAsWindow(NULL), m_handler(handler)
+{
+}
 
 
-
-wxObject *wxXmlResourceHandler::CreateResource(wxXmlNode *node, wxObject *parent, wxObject *instance)
+wxObject *wxXmlResourceHandlerImpl::CreateResource(wxXmlNode *node, wxObject *parent, wxObject *instance)
 {
     wxXmlNode *myNode = m_node;
     wxString myClass = m_class;
@@ -1002,7 +1008,7 @@
     m_parent = parent;
     m_parentAsWindow = wxDynamicCast(m_parent, wxWindow);
 
-    wxObject *returned = DoCreateResource();
+    wxObject *returned = GetHandler()->DoCreateResource();
 
     m_node = myNode;
     m_class = myClass;
@@ -1013,15 +1019,13 @@
 }
 
 
-void wxXmlResourceHandler::AddStyle(const wxString& name, int value)
+void wxXmlResourceHandlerImpl::AddStyle(const wxString& name, int value)
 {
     m_styleNames.Add(name);
     m_styleValues.Add(value);
 }
 
-
-
-void wxXmlResourceHandler::AddWindowStyles()
+void wxXmlResourceHandlerImpl::AddWindowStyles()
 {
     XRC_ADD_STYLE(wxCLIP_CHILDREN);
 
@@ -1043,15 +1047,13 @@
     XRC_ADD_STYLE(wxWS_EX_VALIDATE_RECURSIVELY);
 }
 
-
-
-bool wxXmlResourceHandler::HasParam(const wxString& param)
+bool wxXmlResourceHandlerImpl::HasParam(const wxString& param)
 {
     return (GetParamNode(param) != NULL);
 }
 
 
-int wxXmlResourceHandler::GetStyle(const wxString& param, int defaults)
+int wxXmlResourceHandlerImpl::GetStyle(const wxString& param, int defaults)
 {
     wxString s = GetParamValue(param);
 
@@ -1083,7 +1085,7 @@
 
 
 
-wxString wxXmlResourceHandler::GetText(const wxString& param, bool translate)
+wxString wxXmlResourceHandlerImpl::GetText(const wxString& param, bool translate)
 {
     wxXmlNode *parNode = GetParamNode(param);
     wxString str1(GetNodeContent(parNode));
@@ -1173,7 +1175,7 @@
 
 
 
-long wxXmlResourceHandler::GetLong(const wxString& param, long defaultv)
+long wxXmlResourceHandlerImpl::GetLong(const wxString& param, long defaultv)
 {
     long value;
     wxString str1 = GetParamValue(param);
@@ -1184,7 +1186,7 @@
     return value;
 }
 
-float wxXmlResourceHandler::GetFloat(const wxString& param, float defaultv)
+float wxXmlResourceHandlerImpl::GetFloat(const wxString& param, float defaultv)
 {
     wxString str = GetParamValue(param);
 
@@ -1206,27 +1208,27 @@
 }
 
 
-int wxXmlResourceHandler::GetID()
+int wxXmlResourceHandlerImpl::GetID()
 {
     return wxXmlResource::GetXRCID(GetName());
 }
 
 
 
-wxString wxXmlResourceHandler::GetName()
+wxString wxXmlResourceHandlerImpl::GetName()
 {
     return m_node->GetAttribute(wxT("name"), wxT("-1"));
 }
 
 
 
-bool wxXmlResourceHandler::GetBoolAttr(const wxString& attr, bool defaultv)
+bool wxXmlResourceHandlerImpl::GetBoolAttr(const wxString& attr, bool defaultv)
 {
     wxString v;
     return m_node->GetAttribute(attr, &v) ? v == '1' : defaultv;
 }
 
-bool wxXmlResourceHandler::GetBool(const wxString& param, bool defaultv)
+bool wxXmlResourceHandlerImpl::GetBool(const wxString& param, bool defaultv)
 {
     const wxString v = GetParamValue(param);
 
@@ -1283,7 +1285,7 @@
     return wxNullColour;
 }
 
-wxColour wxXmlResourceHandler::GetColour(const wxString& param, const wxColour& defaultv)
+wxColour wxXmlResourceHandlerImpl::GetColour(const wxString& param, const wxColour& defaultv)
 {
     wxString v = GetParamValue(param);
 
@@ -1343,7 +1345,7 @@
 
 } // anonymous namespace
 
-wxBitmap wxXmlResourceHandler::GetBitmap(const wxString& param,
+wxBitmap wxXmlResourceHandlerImpl::GetBitmap(const wxString& param,
                                          const wxArtClient& defaultArtClient,
                                          wxSize size)
 {
@@ -1364,7 +1366,7 @@
     return GetBitmap(node, defaultArtClient, size);
 }
 
-wxBitmap wxXmlResourceHandler::GetBitmap(const wxXmlNode* node,
+wxBitmap wxXmlResourceHandlerImpl::GetBitmap(const wxXmlNode* node,
                                          const wxArtClient& defaultArtClient,
                                          wxSize size)
 {
@@ -1414,7 +1416,7 @@
 }
 
 
-wxIcon wxXmlResourceHandler::GetIcon(const wxString& param,
+wxIcon wxXmlResourceHandlerImpl::GetIcon(const wxString& param,
                                      const wxArtClient& defaultArtClient,
                                      wxSize size)
 {
@@ -1432,7 +1434,7 @@
     return GetIcon(node, defaultArtClient, size);
 }
 
-wxIcon wxXmlResourceHandler::GetIcon(const wxXmlNode* node,
+wxIcon wxXmlResourceHandlerImpl::GetIcon(const wxXmlNode* node,
                                      const wxArtClient& defaultArtClient,
                                      wxSize size)
 {
@@ -1442,7 +1444,7 @@
 }
 
 
-wxIconBundle wxXmlResourceHandler::GetIconBundle(const wxString& param,
+wxIconBundle wxXmlResourceHandlerImpl::GetIconBundle(const wxString& param,
                                                  const wxArtClient& defaultArtClient)
 {
     wxString art_id, art_client;
@@ -1490,7 +1492,7 @@
 }
 
 
-wxImageList *wxXmlResourceHandler::GetImageList(const wxString& param)
+wxImageList *wxXmlResourceHandlerImpl::GetImageList(const wxString& param)
 {
     wxXmlNode * const imagelist_node = GetParamNode(param);
     if ( !imagelist_node )
@@ -1530,7 +1532,7 @@
     return imagelist;
 }
 
-wxXmlNode *wxXmlResourceHandler::GetParamNode(const wxString& param)
+wxXmlNode *wxXmlResourceHandlerImpl::GetParamNode(const wxString& param)
 {
     wxCHECK_MSG(m_node, NULL, wxT("You can't access handler data before it was initialized!"));
 
@@ -1553,14 +1555,14 @@
     return NULL;
 }
 
-bool wxXmlResourceHandler::IsOfClass(wxXmlNode *node, const wxString& classname)
+bool wxXmlResourceHandlerImpl::IsOfClass(wxXmlNode *node, const wxString& classname)
 {
     return node->GetAttribute(wxT("class"), wxEmptyString) == classname;
 }
 
 
 
-wxString wxXmlResourceHandler::GetNodeContent(const wxXmlNode *node)
+wxString wxXmlResourceHandlerImpl::GetNodeContent(const wxXmlNode *node)
 {
     const wxXmlNode *n = node;
     if (n == NULL) return wxEmptyString;
@@ -1578,7 +1580,7 @@
 
 
 
-wxString wxXmlResourceHandler::GetParamValue(const wxString& param)
+wxString wxXmlResourceHandlerImpl::GetParamValue(const wxString& param)
 {
     if (param.empty())
         return GetNodeContent(m_node);
@@ -1586,13 +1588,13 @@
         return GetNodeContent(GetParamNode(param));
 }
 
-wxString wxXmlResourceHandler::GetParamValue(const wxXmlNode* node)
+wxString wxXmlResourceHandlerImpl::GetParamValue(const wxXmlNode* node)
 {
     return GetNodeContent(node);
 }
 
 
-wxSize wxXmlResourceHandler::GetSize(const wxString& param,
+wxSize wxXmlResourceHandlerImpl::GetSize(const wxString& param,
                                      wxWindow *windowToUse)
 {
     wxString s = GetParamValue(param);
@@ -1640,7 +1642,7 @@
 
 
 
-wxPoint wxXmlResourceHandler::GetPosition(const wxString& param)
+wxPoint wxXmlResourceHandlerImpl::GetPosition(const wxString& param)
 {
     wxSize sz = GetSize(param);
     return wxPoint(sz.x, sz.y);
@@ -1648,7 +1650,7 @@
 
 
 
-wxCoord wxXmlResourceHandler::GetDimension(const wxString& param,
+wxCoord wxXmlResourceHandlerImpl::GetDimension(const wxString& param,
                                            wxCoord defaultv,
                                            wxWindow *windowToUse)
 {
@@ -1715,7 +1717,7 @@
     return wxNullFont;
 }
 
-wxFont wxXmlResourceHandler::GetFont(const wxString& param)
+wxFont wxXmlResourceHandlerImpl::GetFont(const wxString& param)
 {
     wxXmlNode *font_node = GetParamNode(param);
     if (font_node == NULL)
@@ -1854,7 +1856,7 @@
 }
 
 
-void wxXmlResourceHandler::SetupWindow(wxWindow *wnd)
+void wxXmlResourceHandlerImpl::SetupWindow(wxWindow *wnd)
 {
     //FIXME : add cursor
 
@@ -1889,21 +1891,20 @@
         wnd->SetHelpText(GetText(wxT("help")));
 }
 
-
-void wxXmlResourceHandler::CreateChildren(wxObject *parent, bool this_hnd_only)
+void wxXmlResourceHandlerImpl::CreateChildren(wxObject *parent, bool this_hnd_only)
 {
     for ( wxXmlNode *n = m_node->GetChildren(); n; n = n->GetNext() )
     {
         if ( IsObjectNode(n) )
         {
             m_resource->DoCreateResFromNode(*n, parent, NULL,
-                                            this_hnd_only ? this : NULL);
-        }
+                                            this_hnd_only ? this->GetHandler() : NULL);
+       }
     }
 }
 
 
-void wxXmlResourceHandler::CreateChildrenPrivately(wxObject *parent, wxXmlNode *rootnode)
+void wxXmlResourceHandlerImpl::CreateChildrenPrivately(wxObject *parent, wxXmlNode *rootnode)
 {
     wxXmlNode *root;
     if (rootnode == NULL) root = m_node; else root = rootnode;
@@ -1911,7 +1912,7 @@
 
     while (n)
     {
-        if (n->GetType() == wxXML_ELEMENT_NODE && CanHandle(n))
+        if (n->GetType() == wxXML_ELEMENT_NODE && GetHandler()->CanHandle(n))
         {
             CreateResource(n, parent, NULL);
         }
@@ -1919,23 +1920,22 @@
     }
 }
 
-
 //-----------------------------------------------------------------------------
 // errors reporting
 //-----------------------------------------------------------------------------
 
-void wxXmlResourceHandler::ReportError(const wxString& message)
+void wxXmlResourceHandlerImpl::ReportError(const wxString& message)
 {
     m_resource->ReportError(m_node, message);
 }
 
-void wxXmlResourceHandler::ReportError(wxXmlNode *context,
+void wxXmlResourceHandlerImpl::ReportError(wxXmlNode *context,
                                        const wxString& message)
 {
     m_resource->ReportError(context ? context : m_node, message);
 }
 
-void wxXmlResourceHandler::ReportParamError(const wxString& param,
+void wxXmlResourceHandlerImpl::ReportParamError(const wxString& param,
                                             const wxString& message)
 {
     m_resource->ReportError(GetParamNode(param), message);
Index: wxWidgets-trunk/src/xrc/xh_dirpicker.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_dirpicker.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_dirpicker.cpp	(working copy)
@@ -24,6 +24,10 @@
 
 wxDirPickerCtrlXmlHandler::wxDirPickerCtrlXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxDirPickerCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxDIRP_USE_TEXTCTRL);
     XRC_ADD_STYLE(wxDIRP_DIR_MUST_EXIST);
     XRC_ADD_STYLE(wxDIRP_CHANGE_DIR);
@@ -35,7 +39,7 @@
 {
    XRC_MAKE_INSTANCE(picker, wxDirPickerCtrl)
 
-   picker->Create(m_parentAsWindow,
+   picker->Create(GetParentAsWindow(),
                   GetID(),
                   GetParamValue(wxT("value")),
                   GetText(wxT("message")),
Index: wxWidgets-trunk/src/xrc/xh_bmp.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_bmp.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_bmp.cpp	(working copy)
@@ -30,9 +30,13 @@
 {
 }
 
+void wxBitmapXmlHandler::Create()
+{
+}
+
 wxObject *wxBitmapXmlHandler::DoCreateResource()
 {
-    return new wxBitmap(GetBitmap(m_node));
+    return new wxBitmap(GetBitmap(GetNode()));
 }
 
 bool wxBitmapXmlHandler::CanHandle(wxXmlNode *node)
@@ -47,9 +51,13 @@
 {
 }
 
+void wxIconXmlHandler::Create()
+{
+}
+
 wxObject *wxIconXmlHandler::DoCreateResource()
 {
-    return new wxIcon(GetIcon(m_node));
+    return new wxIcon(GetIcon(GetNode()));
 }
 
 bool wxIconXmlHandler::CanHandle(wxXmlNode *node)
Index: wxWidgets-trunk/src/xrc/xh_scrol.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_scrol.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_scrol.cpp	(working copy)
@@ -28,6 +28,10 @@
 wxScrollBarXmlHandler::wxScrollBarXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxScrollBarXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxSB_HORIZONTAL);
     XRC_ADD_STYLE(wxSB_VERTICAL);
     AddWindowStyles();
@@ -37,7 +41,7 @@
 {
     XRC_MAKE_INSTANCE(control, wxScrollBar)
 
-    control->Create(m_parentAsWindow,
+    control->Create(GetParentAsWindow(),
                     GetID(),
                     GetPosition(), GetSize(),
                     GetStyle(),
Index: wxWidgets-trunk/src/xrc/xh_scwin.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_scwin.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_scwin.cpp	(working copy)
@@ -29,6 +29,10 @@
 wxScrolledWindowXmlHandler::wxScrolledWindowXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxScrolledWindowXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxHSCROLL);
     XRC_ADD_STYLE(wxVSCROLL);
 
@@ -46,7 +50,7 @@
 {
     XRC_MAKE_INSTANCE(control, wxScrolledWindow)
 
-    control->Create(m_parentAsWindow,
+    control->Create(GetParentAsWindow(),
                     GetID(),
                     GetPosition(), GetSize(),
                     GetStyle(wxT("style"), wxHSCROLL | wxVSCROLL),
Index: wxWidgets-trunk/src/xrc/xh_text.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_text.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_text.cpp	(working copy)
@@ -27,6 +27,10 @@
 
 wxTextCtrlXmlHandler::wxTextCtrlXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxTextCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxTE_NO_VSCROLL);
     XRC_ADD_STYLE(wxTE_PROCESS_ENTER);
     XRC_ADD_STYLE(wxTE_PROCESS_TAB);
@@ -60,7 +64,7 @@
 {
     XRC_MAKE_INSTANCE(text, wxTextCtrl)
 
-    text->Create(m_parentAsWindow,
+    text->Create(GetParentAsWindow(),
                  GetID(),
                  GetText(wxT("value")),
                  GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_chckl.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_chckl.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_chckl.cpp	(working copy)
@@ -30,6 +30,10 @@
 wxCheckListBoxXmlHandler::wxCheckListBoxXmlHandler()
 : wxXmlResourceHandler(), m_insideBox(false)
 {
+}
+
+void wxCheckListBoxXmlHandler::Create()
+{
     // wxListBox styles:
     XRC_ADD_STYLE(wxLB_SINGLE);
     XRC_ADD_STYLE(wxLB_MULTIPLE);
@@ -44,7 +48,7 @@
 
 wxObject *wxCheckListBoxXmlHandler::DoCreateResource()
 {
-    if (m_class == wxT("wxCheckListBox"))
+    if (GetClass() == wxT("wxCheckListBox"))
     {
         // need to build the list of strings from children
         m_insideBox = true;
@@ -52,7 +56,7 @@
 
         XRC_MAKE_INSTANCE(control, wxCheckListBox)
 
-        control->Create(m_parentAsWindow,
+        control->Create(GetParentAsWindow(),
                         GetID(),
                         GetPosition(), GetSize(),
                         strList,
@@ -93,9 +97,9 @@
         // handle <item checked="boolean">Label</item>
 
         // add to the list
-        wxString str = GetNodeContent(m_node);
-        if (m_resource->GetFlags() & wxXRC_USE_LOCALE)
-            str = wxGetTranslation(str, m_resource->GetDomain());
+        wxString str = GetNodeContent(GetNode());
+        if (GetResource()->GetFlags() & wxXRC_USE_LOCALE)
+            str = wxGetTranslation(str, GetResource()->GetDomain());
         strList.Add(str);
         return NULL;
     }
Index: wxWidgets-trunk/src/xrc/xh_richtext.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_richtext.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_richtext.cpp	(working copy)
@@ -25,6 +25,10 @@
 
 wxRichTextCtrlXmlHandler::wxRichTextCtrlXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxRichTextCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxTE_PROCESS_ENTER);
     XRC_ADD_STYLE(wxTE_PROCESS_TAB);
     XRC_ADD_STYLE(wxTE_MULTILINE);
@@ -38,7 +42,7 @@
 {
     XRC_MAKE_INSTANCE(text, wxRichTextCtrl)
 
-    text->Create(m_parentAsWindow,
+    text->Create(GetParentAsWindow(),
                  GetID(),
                  GetText(wxT("value")),
                  GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_frame.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_frame.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_frame.cpp	(working copy)
@@ -30,6 +30,10 @@
 
 wxFrameXmlHandler::wxFrameXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxFrameXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxSTAY_ON_TOP);
     XRC_ADD_STYLE(wxCAPTION);
     XRC_ADD_STYLE(wxDEFAULT_DIALOG_STYLE);
@@ -67,7 +71,7 @@
 {
     XRC_MAKE_INSTANCE(frame, wxFrame);
 
-    frame->Create(m_parentAsWindow,
+    frame->Create(GetParentAsWindow(),
                   GetID(),
                   GetText(wxT("title")),
                   wxDefaultPosition, wxDefaultSize,
Index: wxWidgets-trunk/src/xrc/xh_radbt.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_radbt.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_radbt.cpp	(working copy)
@@ -28,6 +28,10 @@
 wxRadioButtonXmlHandler::wxRadioButtonXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxRadioButtonXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxRB_GROUP);
     XRC_ADD_STYLE(wxRB_SINGLE);
     AddWindowStyles();
@@ -44,7 +48,7 @@
 
     XRC_MAKE_INSTANCE(control, wxRadioButton)
 
-    control->Create(m_parentAsWindow,
+    control->Create(GetParentAsWindow(),
                     GetID(),
                     GetText(wxT("label")),
                     GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_sizer.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_sizer.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_sizer.cpp	(working copy)
@@ -48,6 +48,10 @@
                    m_isGBS(false),
                    m_parentSizer(NULL)
 {
+}
+
+void wxSizerXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxHORIZONTAL);
     XRC_ADD_STYLE(wxVERTICAL);
 
@@ -104,10 +108,10 @@
 
 wxObject* wxSizerXmlHandler::DoCreateResource()
 {
-    if (m_class == wxT("sizeritem"))
+    if (GetClass() == wxT("sizeritem"))
         return Handle_sizeritem();
 
-    else if (m_class == wxT("spacer"))
+    else if (GetClass() == wxT("spacer"))
         return Handle_spacer();
 
     else
@@ -147,7 +151,7 @@
         wxSizer *old_par = m_parentSizer;
         m_isInside = false;
         if (!IsSizerNode(n)) m_parentSizer = NULL;
-        wxObject *item = CreateResFromNode(n, m_parent, NULL);
+        wxObject *item = CreateResFromNode(n, GetParent(), NULL);
         m_isInside = old_ins;
         m_parentSizer = old_par;
         m_isGBS = old_gbs;
@@ -198,45 +202,45 @@
     wxSizer *sizer = NULL;
     wxFlexGridSizer *flexsizer = NULL;
 
-    wxXmlNode *parentNode = m_node->GetParent();
+    wxXmlNode *parentNode = GetNode()->GetParent();
 
     if ( !m_parentSizer &&
             (!parentNode || parentNode->GetType() != wxXML_ELEMENT_NODE ||
-             !m_parentAsWindow) )
+             !GetParentAsWindow()) )
     {
         ReportError("sizer must have a window parent");
         return NULL;
     }
 
-    if (m_class == wxT("wxBoxSizer"))
+    if (GetClass() == wxT("wxBoxSizer"))
         sizer = Handle_wxBoxSizer();
 #if wxUSE_STATBOX
-    else if (m_class == wxT("wxStaticBoxSizer"))
+    else if (GetClass() == wxT("wxStaticBoxSizer"))
         sizer = Handle_wxStaticBoxSizer();
 #endif
-    else if (m_class == wxT("wxGridSizer"))
+    else if (GetClass() == wxT("wxGridSizer"))
     {
         if ( !ValidateGridSizerChildren() )
             return NULL;
         sizer = Handle_wxGridSizer();
     }
-    else if (m_class == wxT("wxFlexGridSizer"))
+    else if (GetClass() == wxT("wxFlexGridSizer"))
     {
         flexsizer = Handle_wxFlexGridSizer();
         sizer = flexsizer;
     }
-    else if (m_class == wxT("wxGridBagSizer"))
+    else if (GetClass() == wxT("wxGridBagSizer"))
     {
         flexsizer = Handle_wxGridBagSizer();
         sizer = flexsizer;
     }
-    else if (m_class == wxT("wxWrapSizer"))
+    else if (GetClass() == wxT("wxWrapSizer"))
     {
         sizer = Handle_wxWrapSizer();
     }
     else
     {
-        ReportError(wxString::Format("unknown sizer class \"%s\"", m_class));
+        ReportError(wxString::Format("unknown sizer class \"%s\"", GetClass()));
     }
 
     // creation of sizer failed for some (already reported) reason, so exit:
@@ -254,9 +258,9 @@
     // set new state
     m_parentSizer = sizer;
     m_isInside = true;
-    m_isGBS = (m_class == wxT("wxGridBagSizer"));
+    m_isGBS = (GetClass() == wxT("wxGridBagSizer"));
 
-    CreateChildren(m_parent, true/*only this handler*/);
+    CreateChildren(GetParent(), true/*only this handler*/);
 
     // set growable rows and cols for sizers which support this
     if ( flexsizer )
@@ -271,26 +275,26 @@
 
     if (m_parentSizer == NULL) // setup window:
     {
-        m_parentAsWindow->SetSizer(sizer);
+        GetParentAsWindow()->SetSizer(sizer);
 
-        wxXmlNode *nd = m_node;
-        m_node = parentNode;
+        wxXmlNode *nd = GetNode();
+        SetNode(parentNode);
         if (GetSize() == wxDefaultSize)
         {
-            if ( wxDynamicCast(m_parentAsWindow, wxScrolledWindow) != NULL )
+            if ( wxDynamicCast(GetParentAsWindow(), wxScrolledWindow) != NULL )
             {
-                sizer->FitInside(m_parentAsWindow);
+                sizer->FitInside(GetParentAsWindow());
             }
             else
             {
-                sizer->Fit(m_parentAsWindow);
+                sizer->Fit(GetParentAsWindow());
             }
         }
-        m_node = nd;
+        SetNode(nd);
 
-        if (m_parentAsWindow->IsTopLevel())
+        if (GetParentAsWindow()->IsTopLevel())
         {
-            sizer->SetSizeHints(m_parentAsWindow);
+            sizer->SetSizeHints(GetParentAsWindow());
         }
     }
 
@@ -307,7 +311,7 @@
 wxSizer*  wxSizerXmlHandler::Handle_wxStaticBoxSizer()
 {
     return new wxStaticBoxSizer(
-            new wxStaticBox(m_parentAsWindow,
+            new wxStaticBox(GetParentAsWindow(),
                             GetID(),
                             GetText(wxT("label")),
                             wxDefaultPosition, wxDefaultSize,
@@ -356,7 +360,7 @@
     {
         // fixed number of cells, need to verify children count
         int children = 0;
-        for ( wxXmlNode *n = m_node->GetChildren(); n; n = n->GetNext() )
+        for ( wxXmlNode *n = GetNode()->GetChildren(); n; n = n->GetNext() )
         {
             if ( n->GetType() == wxXML_ELEMENT_NODE &&
                  (n->GetName() == "object" || n->GetName() == "object_ref") )
@@ -507,16 +511,20 @@
 {
 }
 
+void wxStdDialogButtonSizerXmlHandler::Create()
+{
+}
+
 wxObject *wxStdDialogButtonSizerXmlHandler::DoCreateResource()
 {
-    if (m_class == wxT("wxStdDialogButtonSizer"))
+    if (GetClass() == wxT("wxStdDialogButtonSizer"))
     {
         wxASSERT( !m_parentSizer );
 
         wxSizer *s = m_parentSizer = new wxStdDialogButtonSizer;
         m_isInside = true;
 
-        CreateChildren(m_parent, true/*only this handler*/);
+        CreateChildren(GetParent(), true/*only this handler*/);
 
         m_parentSizer->Realize();
 
@@ -525,7 +533,7 @@
 
         return s;
     }
-    else // m_class == "button"
+    else // GetClass() == "button"
     {
         wxASSERT( m_parentSizer );
 
@@ -537,7 +545,7 @@
         // did we find one?
         if (n)
         {
-            wxObject *item = CreateResFromNode(n, m_parent, NULL);
+            wxObject *item = CreateResFromNode(n, GetParent(), NULL);
             wxButton *button = wxDynamicCast(item, wxButton);
 
             if (button)
Index: wxWidgets-trunk/src/xrc/xmladv.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xmladv.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xmladv.cpp	(working copy)
@@ -38,7 +38,7 @@
 // ============================================================================
 
 #if wxUSE_ANIMATIONCTRL
-wxAnimation wxXmlResourceHandler::GetAnimation(const wxString& param)
+wxAnimation wxXmlResourceHandlerImpl::GetAnimation(const wxString& param)
 {
     const wxString name = GetParamValue(param);
     if ( name.empty() )
Index: wxWidgets-trunk/src/xrc/xh_combo.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_combo.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_combo.cpp	(working copy)
@@ -31,6 +31,10 @@
                      :wxXmlResourceHandler()
                      ,m_insideBox(false)
 {
+}
+
+void wxComboBoxXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxCB_SIMPLE);
     XRC_ADD_STYLE(wxCB_SORT);
     XRC_ADD_STYLE(wxCB_READONLY);
@@ -41,7 +45,7 @@
 
 wxObject *wxComboBoxXmlHandler::DoCreateResource()
 {
-    if( m_class == wxT("wxComboBox"))
+    if( GetClass() == wxT("wxComboBox"))
     {
         // find the selection
         long selection = GetLong( wxT("selection"), -1 );
@@ -52,7 +56,7 @@
 
         XRC_MAKE_INSTANCE(control, wxComboBox)
 
-        control->Create(m_parentAsWindow,
+        control->Create(GetParentAsWindow(),
                         GetID(),
                         GetText(wxT("value")),
                         GetPosition(), GetSize(),
@@ -76,9 +80,9 @@
         // handle <item>Label</item>
 
         // add to the list
-        wxString str = GetNodeContent(m_node);
-        if (m_resource->GetFlags() & wxXRC_USE_LOCALE)
-            str = wxGetTranslation(str, m_resource->GetDomain());
+        wxString str = GetNodeContent(GetNode());
+        if (GetResource()->GetFlags() & wxXRC_USE_LOCALE)
+            str = wxGetTranslation(str, GetResource()->GetDomain());
         strList.Add(str);
 
         return NULL;
Index: wxWidgets-trunk/src/xrc/xh_radbx.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_radbx.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_radbx.cpp	(working copy)
@@ -29,6 +29,10 @@
 wxRadioBoxXmlHandler::wxRadioBoxXmlHandler()
 : wxXmlResourceHandler(), m_insideBox(false)
 {
+}
+
+void wxRadioBoxXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxRA_SPECIFY_COLS);
     XRC_ADD_STYLE(wxRA_HORIZONTAL);
     XRC_ADD_STYLE(wxRA_SPECIFY_ROWS);
@@ -38,7 +42,7 @@
 
 wxObject *wxRadioBoxXmlHandler::DoCreateResource()
 {
-    if ( m_class == wxT("wxRadioBox"))
+    if ( GetClass() == wxT("wxRadioBox"))
     {
         // find the selection
         long selection = GetLong( wxT("selection"), -1 );
@@ -49,7 +53,7 @@
 
         XRC_MAKE_INSTANCE(control, wxRadioBox)
 
-        control->Create(m_parentAsWindow,
+        control->Create(GetParentAsWindow(),
                         GetID(),
                         GetText(wxT("label")),
                         GetPosition(), GetSize(),
@@ -106,21 +110,21 @@
         // we handle handle <item>Label</item> constructs here, and the item
         // tag can have tooltip, helptext, enabled and hidden attributes
 
-        wxString label = GetNodeContent(m_node);
+        wxString label = GetNodeContent(GetNode());
 
         wxString tooltip;
-        m_node->GetAttribute(wxT("tooltip"), &tooltip);
+        GetNode()->GetAttribute(wxT("tooltip"), &tooltip);
 
         wxString helptext;
-        bool hasHelptext = m_node->GetAttribute(wxT("helptext"), &helptext);
+        bool hasHelptext = GetNode()->GetAttribute(wxT("helptext"), &helptext);
 
-        if (m_resource->GetFlags() & wxXRC_USE_LOCALE)
+        if (GetResource()->GetFlags() & wxXRC_USE_LOCALE)
         {
-            label = wxGetTranslation(label, m_resource->GetDomain());
+            label = wxGetTranslation(label, GetResource()->GetDomain());
             if ( !tooltip.empty() )
-                tooltip = wxGetTranslation(tooltip, m_resource->GetDomain());
+                tooltip = wxGetTranslation(tooltip, GetResource()->GetDomain());
             if ( hasHelptext )
-                helptext = wxGetTranslation(helptext, m_resource->GetDomain());
+                helptext = wxGetTranslation(helptext, GetResource()->GetDomain());
         }
 
         m_labels.push_back(label);
Index: wxWidgets-trunk/src/xrc/xh_choicbk.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_choicbk.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_choicbk.cpp	(working copy)
@@ -34,6 +34,10 @@
                         m_isInside(false),
                         m_choicebook(NULL)
 {
+}
+
+void wxChoicebookXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxBK_DEFAULT);
     XRC_ADD_STYLE(wxBK_LEFT);
     XRC_ADD_STYLE(wxBK_RIGHT);
@@ -53,7 +57,7 @@
 
 wxObject *wxChoicebookXmlHandler::DoCreateResource()
 {
-    if (m_class == wxT("choicebookpage"))
+    if (GetClass() == wxT("choicebookpage"))
     {
         wxXmlNode *n = GetParamNode(wxT("object"));
 
@@ -115,7 +119,7 @@
     {
         XRC_MAKE_INSTANCE(nb, wxChoicebook)
 
-        nb->Create(m_parentAsWindow,
+        nb->Create(GetParentAsWindow(),
                    GetID(),
                    GetPosition(), GetSize(),
                    GetStyle(wxT("style")),
Index: wxWidgets-trunk/src/xrc/xh_bmpbt.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_bmpbt.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_bmpbt.cpp	(working copy)
@@ -28,6 +28,10 @@
 wxBitmapButtonXmlHandler::wxBitmapButtonXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxBitmapButtonXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxBU_AUTODRAW);
     XRC_ADD_STYLE(wxBU_LEFT);
     XRC_ADD_STYLE(wxBU_RIGHT);
@@ -41,7 +45,7 @@
 {
     XRC_MAKE_INSTANCE(button, wxBitmapButton)
 
-    button->Create(m_parentAsWindow,
+    button->Create(GetParentAsWindow(),
                    GetID(),
                    GetBitmap(wxT("bitmap"), wxART_BUTTON),
                    GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_menu.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_menu.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_menu.cpp	(working copy)
@@ -30,14 +30,18 @@
 wxMenuXmlHandler::wxMenuXmlHandler() :
         wxXmlResourceHandler(), m_insideMenu(false)
 {
+}
+
+void wxMenuXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxMENU_TEAROFF);
 }
 
 wxObject *wxMenuXmlHandler::DoCreateResource()
 {
-    if (m_class == wxT("wxMenu"))
+    if (GetClass() == wxT("wxMenu"))
     {
-        wxMenu *menu = m_instance ? wxStaticCast(m_instance, wxMenu)
+        wxMenu *menu = GetInstance() ? wxStaticCast(GetInstance(), wxMenu)
                                   : new wxMenu(GetStyle());
 
         wxString title = GetText(wxT("label"));
@@ -48,14 +52,14 @@
         CreateChildren(menu, true/*only this handler*/);
         m_insideMenu = oldins;
 
-        wxMenuBar *p_bar = wxDynamicCast(m_parent, wxMenuBar);
+        wxMenuBar *p_bar = wxDynamicCast(GetParent(), wxMenuBar);
         if (p_bar)
         {
             p_bar->Append(menu, title);
         }
         else
         {
-            wxMenu *p_menu = wxDynamicCast(m_parent, wxMenu);
+            wxMenu *p_menu = wxDynamicCast(GetParent(), wxMenu);
             if (p_menu)
             {
                 p_menu->Append(GetID(), title, menu, help);
@@ -69,11 +73,11 @@
 
     else
     {
-        wxMenu *p_menu = wxDynamicCast(m_parent, wxMenu);
+        wxMenu *p_menu = wxDynamicCast(GetParent(), wxMenu);
 
-        if (m_class == wxT("separator"))
+        if (GetClass() == wxT("separator"))
             p_menu->AppendSeparator();
-        else if (m_class == wxT("break"))
+        else if (GetClass() == wxT("break"))
             p_menu->Break();
         else /*wxMenuItem*/
         {
@@ -143,6 +147,10 @@
 
 wxMenuBarXmlHandler::wxMenuBarXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxMenuBarXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxMB_DOCKABLE);
 }
 
@@ -151,9 +159,9 @@
     wxMenuBar *menubar = new wxMenuBar(GetStyle());
     CreateChildren(menubar);
 
-    if (m_parentAsWindow)
+    if (GetParentAsWindow())
     {
-        wxFrame *parentFrame = wxDynamicCast(m_parent, wxFrame);
+        wxFrame *parentFrame = wxDynamicCast(GetParent(), wxFrame);
         if (parentFrame)
             parentFrame->SetMenuBar(menubar);
     }
Index: wxWidgets-trunk/src/xrc/xh_mdi.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_mdi.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_mdi.cpp	(working copy)
@@ -30,6 +30,10 @@
 
 wxMdiXmlHandler::wxMdiXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxMdiXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxSTAY_ON_TOP);
     XRC_ADD_STYLE(wxCAPTION);
     XRC_ADD_STYLE(wxDEFAULT_DIALOG_STYLE);
@@ -69,11 +73,11 @@
 
 wxWindow *wxMdiXmlHandler::CreateFrame()
 {
-    if (m_class == wxT("wxMDIParentFrame"))
+    if (GetClass() == wxT("wxMDIParentFrame"))
     {
         XRC_MAKE_INSTANCE(frame, wxMDIParentFrame);
 
-        frame->Create(m_parentAsWindow,
+        frame->Create(GetParentAsWindow(),
                       GetID(),
                       GetText(wxT("title")),
                       wxDefaultPosition, wxDefaultSize,
@@ -84,7 +88,7 @@
     }
     else // wxMDIChildFrame
     {
-        wxMDIParentFrame *mdiParent = wxDynamicCast(m_parent, wxMDIParentFrame);
+        wxMDIParentFrame *mdiParent = wxDynamicCast(GetParent(), wxMDIParentFrame);
 
         if ( !mdiParent )
         {
Index: wxWidgets-trunk/src/xrc/xh_treebk.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_treebk.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_treebk.cpp	(working copy)
@@ -33,6 +33,10 @@
                       m_tbk(NULL),
                       m_isInside(false)
 {
+}
+
+void wxTreebookXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxBK_DEFAULT);
     XRC_ADD_STYLE(wxBK_TOP);
     XRC_ADD_STYLE(wxBK_BOTTOM);
@@ -51,11 +55,11 @@
 
 wxObject *wxTreebookXmlHandler::DoCreateResource()
 {
-    if (m_class == wxT("wxTreebook"))
+    if (GetClass() == wxT("wxTreebook"))
     {
         XRC_MAKE_INSTANCE(tbk, wxTreebook)
 
-        tbk->Create(m_parentAsWindow,
+        tbk->Create(GetParentAsWindow(),
                     GetID(),
                     GetPosition(), GetSize(),
                     GetStyle(wxT("style")),
@@ -83,7 +87,7 @@
         return tbk;
     }
 
-//    else ( m_class == wxT("treebookpage") )
+//    else ( GetClass() == wxT("treebookpage") )
     wxXmlNode *n = GetParamNode(wxT("object"));
     wxWindow *wnd = NULL;
 
Index: wxWidgets-trunk/src/xrc/xh_listb.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_listb.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_listb.cpp	(working copy)
@@ -30,6 +30,10 @@
                    : wxXmlResourceHandler(),
                      m_insideBox(false)
 {
+}
+
+void wxListBoxXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxLB_SINGLE);
     XRC_ADD_STYLE(wxLB_MULTIPLE);
     XRC_ADD_STYLE(wxLB_EXTENDED);
@@ -42,7 +46,7 @@
 
 wxObject *wxListBoxXmlHandler::DoCreateResource()
 {
-    if ( m_class == wxT("wxListBox"))
+    if ( GetClass() == wxT("wxListBox"))
     {
         // find the selection
         long selection = GetLong(wxT("selection"), -1);
@@ -54,7 +58,7 @@
 
         XRC_MAKE_INSTANCE(control, wxListBox)
 
-        control->Create(m_parentAsWindow,
+        control->Create(GetParentAsWindow(),
                         GetID(),
                         GetPosition(), GetSize(),
                         strList,
@@ -76,9 +80,9 @@
         // handle <item>Label</item>
 
         // add to the list
-        wxString str = GetNodeContent(m_node);
-        if (m_resource->GetFlags() & wxXRC_USE_LOCALE)
-            str = wxGetTranslation(str, m_resource->GetDomain());
+        wxString str = GetNodeContent(GetNode());
+        if (GetResource()->GetFlags() & wxXRC_USE_LOCALE)
+            str = wxGetTranslation(str, GetResource()->GetDomain());
         strList.Add(str);
 
         return NULL;
Index: wxWidgets-trunk/src/xrc/xh_clrpicker.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_clrpicker.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_clrpicker.cpp	(working copy)
@@ -24,6 +24,10 @@
 
 wxColourPickerCtrlXmlHandler::wxColourPickerCtrlXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxColourPickerCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxCLRP_USE_TEXTCTRL);
     XRC_ADD_STYLE(wxCLRP_SHOW_LABEL);
     XRC_ADD_STYLE(wxCLRP_DEFAULT_STYLE);
@@ -34,7 +38,7 @@
 {
    XRC_MAKE_INSTANCE(picker, wxColourPickerCtrl)
 
-   picker->Create(m_parentAsWindow,
+   picker->Create(GetParentAsWindow(),
                   GetID(),
                   GetColour(wxT("value"), *wxBLACK),
                   GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_listc.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_listc.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_listc.cpp	(working copy)
@@ -42,6 +42,10 @@
 wxListCtrlXmlHandler::wxListCtrlXmlHandler()
     : wxXmlResourceHandler()
 {
+}
+
+void wxListCtrlXmlHandler::Create()
+{
     // wxListItem styles
     XRC_ADD_STYLE(wxLIST_FORMAT_LEFT);
     XRC_ADD_STYLE(wxLIST_FORMAT_RIGHT);
@@ -78,23 +82,23 @@
 
 wxObject *wxListCtrlXmlHandler::DoCreateResource()
 {
-    if ( m_class == LISTITEM_CLASS_NAME )
+    if ( GetClass() == LISTITEM_CLASS_NAME )
     {
         HandleListItem();
     }
-    else if ( m_class == LISTCOL_CLASS_NAME )
+    else if ( GetClass() == LISTCOL_CLASS_NAME )
     {
         HandleListCol();
     }
     else
     {
-        wxASSERT_MSG( m_class == LISTCTRL_CLASS_NAME,
+        wxASSERT_MSG( GetClass() == LISTCTRL_CLASS_NAME,
                         "can't handle unknown node" );
 
         return HandleListCtrl();
     }
 
-    return m_parentAsWindow;
+    return GetParentAsWindow();
 }
 
 bool wxListCtrlXmlHandler::CanHandle(wxXmlNode *node)
@@ -114,7 +118,7 @@
 
 void wxListCtrlXmlHandler::HandleListCol()
 {
-    wxListCtrl * const list = wxDynamicCast(m_parentAsWindow, wxListCtrl);
+    wxListCtrl * const list = wxDynamicCast(GetParentAsWindow(), wxListCtrl);
     wxCHECK_RET( list, "must have wxListCtrl parent" );
 
     if ( !list->HasFlag(wxLC_REPORT) )
@@ -134,7 +138,7 @@
 
 void wxListCtrlXmlHandler::HandleListItem()
 {
-    wxListCtrl * const list = wxDynamicCast(m_parentAsWindow, wxListCtrl);
+    wxListCtrl * const list = wxDynamicCast(GetParentAsWindow(), wxListCtrl);
     wxCHECK_RET( list, "must have wxListCtrl parent" );
 
     wxListItem item;
@@ -178,7 +182,7 @@
 {
     XRC_MAKE_INSTANCE(list, wxListCtrl)
 
-    list->Create(m_parentAsWindow,
+    list->Create(GetParentAsWindow(),
                  GetID(),
                  GetPosition(), GetSize(),
                  GetStyle(),
Index: wxWidgets-trunk/src/xrc/xh_comboctrl.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_comboctrl.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_comboctrl.cpp	(working copy)
@@ -32,6 +32,10 @@
 wxComboCtrlXmlHandler::wxComboCtrlXmlHandler()
                      : wxXmlResourceHandler()
 {
+}
+
+void wxComboCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxCB_SORT);
     XRC_ADD_STYLE(wxCB_READONLY);
     XRC_ADD_STYLE(wxTE_PROCESS_ENTER);
@@ -42,11 +46,11 @@
 
 wxObject *wxComboCtrlXmlHandler::DoCreateResource()
 {
-    if( m_class == wxT("wxComboCtrl"))
+    if( GetClass() == wxT("wxComboCtrl"))
     {
         XRC_MAKE_INSTANCE(control, wxComboCtrl)
 
-        control->Create(m_parentAsWindow,
+        control->Create(GetParentAsWindow(),
                         GetID(),
                         GetText(wxT("value")),
                         GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_stbmp.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_stbmp.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_stbmp.cpp	(working copy)
@@ -28,6 +28,10 @@
 wxStaticBitmapXmlHandler::wxStaticBitmapXmlHandler()
                          :wxXmlResourceHandler()
 {
+}
+
+void wxStaticBitmapXmlHandler::Create()
+{
     AddWindowStyles();
 }
 
@@ -35,7 +39,7 @@
 {
     XRC_MAKE_INSTANCE(bmp, wxStaticBitmap)
 
-    bmp->Create(m_parentAsWindow,
+    bmp->Create(GetParentAsWindow(),
                 GetID(),
                 GetBitmap(wxT("bitmap"), wxART_OTHER, GetSize()),
                 GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_sttxt.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_sttxt.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_sttxt.cpp	(working copy)
@@ -28,6 +28,10 @@
 wxStaticTextXmlHandler::wxStaticTextXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxStaticTextXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxST_NO_AUTORESIZE);
     XRC_ADD_STYLE(wxALIGN_LEFT);
     XRC_ADD_STYLE(wxALIGN_RIGHT);
@@ -39,7 +43,7 @@
 {
     XRC_MAKE_INSTANCE(text, wxStaticText)
 
-    text->Create(m_parentAsWindow,
+    text->Create(GetParentAsWindow(),
                  GetID(),
                  GetText(wxT("label")),
                  GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_listbk.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_listbk.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_listbk.cpp	(working copy)
@@ -34,6 +34,10 @@
                       m_isInside(false),
                       m_listbook(NULL)
 {
+}
+
+void wxListbookXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxBK_DEFAULT);
     XRC_ADD_STYLE(wxBK_LEFT);
     XRC_ADD_STYLE(wxBK_RIGHT);
@@ -53,7 +57,7 @@
 
 wxObject *wxListbookXmlHandler::DoCreateResource()
 {
-    if (m_class == wxT("listbookpage"))
+    if (GetClass() == wxT("listbookpage"))
     {
         wxXmlNode *n = GetParamNode(wxT("object"));
 
@@ -115,7 +119,7 @@
     {
         XRC_MAKE_INSTANCE(nb, wxListbook)
 
-        nb->Create(m_parentAsWindow,
+        nb->Create(GetParentAsWindow(),
                    GetID(),
                    GetPosition(), GetSize(),
                    GetStyle(wxT("style")),
Index: wxWidgets-trunk/src/xrc/xh_stlin.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_stlin.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_stlin.cpp	(working copy)
@@ -25,6 +25,10 @@
 wxStaticLineXmlHandler::wxStaticLineXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxStaticLineXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxLI_HORIZONTAL);
     XRC_ADD_STYLE(wxLI_VERTICAL);
     AddWindowStyles();
@@ -34,7 +38,7 @@
 {
     XRC_MAKE_INSTANCE(line, wxStaticLine)
 
-    line->Create(m_parentAsWindow,
+    line->Create(GetParentAsWindow(),
                 GetID(),
                 GetPosition(), GetSize(),
                 GetStyle(wxT("style"), wxLI_HORIZONTAL),
Index: wxWidgets-trunk/src/xrc/xh_bmpcbox.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_bmpcbox.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_bmpcbox.cpp	(working copy)
@@ -33,6 +33,10 @@
                      ,m_combobox(NULL)
                      ,m_isInside(false)
 {
+}
+
+void wxBitmapComboBoxXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxCB_SORT);
     XRC_ADD_STYLE(wxCB_READONLY);
     AddWindowStyles();
@@ -40,7 +44,7 @@
 
 wxObject *wxBitmapComboBoxXmlHandler::DoCreateResource()
 {
-    if (m_class == wxT("ownerdrawnitem"))
+    if (GetClass() == wxT("ownerdrawnitem"))
     {
         if ( !m_combobox )
         {
@@ -53,14 +57,14 @@
 
         return m_combobox;
     }
-    else /*if( m_class == wxT("wxBitmapComboBox"))*/
+    else /*if( GetClass() == wxT("wxBitmapComboBox"))*/
     {
         // find the selection
         long selection = GetLong( wxT("selection"), -1 );
 
         XRC_MAKE_INSTANCE(control, wxBitmapComboBox)
 
-        control->Create(m_parentAsWindow,
+        control->Create(GetParentAsWindow(),
                         GetID(),
                         GetText(wxT("value")),
                         GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_split.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_split.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_split.cpp	(working copy)
@@ -29,6 +29,10 @@
 
 wxSplitterWindowXmlHandler::wxSplitterWindowXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxSplitterWindowXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxSP_3D);
     XRC_ADD_STYLE(wxSP_3DSASH);
     XRC_ADD_STYLE(wxSP_3DBORDER);
@@ -47,7 +51,7 @@
 {
     XRC_MAKE_INSTANCE(splitter, wxSplitterWindow);
 
-    splitter->Create(m_parentAsWindow,
+    splitter->Create(GetParentAsWindow(),
                      GetID(),
                      GetPosition(), GetSize(),
                      GetStyle(wxT("style"), wxSP_3D),
@@ -64,7 +68,7 @@
         splitter->SetSashGravity(gravity);
 
     wxWindow *win1 = NULL, *win2 = NULL;
-    wxXmlNode *n = m_node->GetChildren();
+    wxXmlNode *n = GetNode()->GetChildren();
     while (n)
     {
         if ((n->GetType() == wxXML_ELEMENT_NODE) &&
Index: wxWidgets-trunk/src/xrc/xh_collpane.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_collpane.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_collpane.cpp	(working copy)
@@ -29,6 +29,10 @@
 wxCollapsiblePaneXmlHandler::wxCollapsiblePaneXmlHandler()
 : wxXmlResourceHandler(), m_isInside(false)
 {
+}
+
+void wxCollapsiblePaneXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxCP_NO_TLW_RESIZE);
     XRC_ADD_STYLE(wxCP_DEFAULT_STYLE);
     AddWindowStyles();
@@ -36,7 +40,7 @@
 
 wxObject *wxCollapsiblePaneXmlHandler::DoCreateResource()
 {
-    if (m_class == wxT("panewindow"))   // read the XRC for the pane window
+    if (GetClass() == wxT("panewindow"))   // read the XRC for the pane window
     {
         wxXmlNode *n = GetParamNode(wxT("object"));
 
@@ -69,7 +73,7 @@
             return NULL;
         }
 
-        ctrl->Create(m_parentAsWindow,
+        ctrl->Create(GetParentAsWindow(),
                     GetID(),
                     label,
                     GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_gdctl.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_gdctl.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_gdctl.cpp	(working copy)
@@ -30,6 +30,10 @@
 wxGenericDirCtrlXmlHandler::wxGenericDirCtrlXmlHandler()
 : wxXmlResourceHandler()
 {
+}
+
+void wxGenericDirCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxDIRCTRL_DIR_ONLY);
     XRC_ADD_STYLE(wxDIRCTRL_3D_INTERNAL);
     XRC_ADD_STYLE(wxDIRCTRL_SELECT_FIRST);
@@ -42,7 +46,7 @@
 {
     XRC_MAKE_INSTANCE(ctrl, wxGenericDirCtrl)
 
-    ctrl->Create(m_parentAsWindow,
+    ctrl->Create(GetParentAsWindow(),
                  GetID(),
                  GetText(wxT("defaultfolder")),
                  GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_animatctrl.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_animatctrl.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_animatctrl.cpp	(working copy)
@@ -24,6 +24,10 @@
 
 wxAnimationCtrlXmlHandler::wxAnimationCtrlXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxAnimationCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxAC_NO_AUTORESIZE);
     XRC_ADD_STYLE(wxAC_DEFAULT_STYLE);
     AddWindowStyles();
@@ -33,7 +37,7 @@
 {
     XRC_MAKE_INSTANCE(ctrl, wxAnimationCtrl)
 
-    ctrl->Create(m_parentAsWindow,
+    ctrl->Create(GetParentAsWindow(),
                   GetID(),
                   GetAnimation(wxT("animation")),
                   GetPosition(), GetSize(),
Index: wxWidgets-trunk/src/xrc/xh_wizrd.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_wizrd.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_wizrd.cpp	(working copy)
@@ -29,6 +29,10 @@
 
 wxWizardXmlHandler::wxWizardXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxWizardXmlHandler::Create()
+{
     m_wizard = NULL;
     m_lastSimplePage = NULL;
     XRC_ADD_STYLE(wxWIZARD_EX_HELPBUTTON);
@@ -37,14 +41,14 @@
 
 wxObject *wxWizardXmlHandler::DoCreateResource()
 {
-    if (m_class == wxT("wxWizard"))
+    if (GetClass() == wxT("wxWizard"))
     {
         XRC_MAKE_INSTANCE(wiz, wxWizard)
 
         long style = GetStyle(wxT("exstyle"), 0);
         if (style != 0)
             wiz->SetExtraStyle(style);
-        wiz->Create(m_parentAsWindow,
+        wiz->Create(GetParentAsWindow(),
                     GetID(),
                     GetText(wxT("title")),
                     GetBitmap(),
@@ -62,7 +66,7 @@
     {
         wxWizardPage *page;
 
-        if (m_class == wxT("wxWizardPageSimple"))
+        if (GetClass() == wxT("wxWizardPageSimple"))
         {
             XRC_MAKE_INSTANCE(p, wxWizardPageSimple)
             p->Create(m_wizard, NULL, NULL, GetBitmap());
@@ -71,15 +75,15 @@
             page = p;
             m_lastSimplePage = p;
         }
-        else /*if (m_class == wxT("wxWizardPage"))*/
+        else /*if (GetClass() == wxT("wxWizardPage"))*/
         {
-            if ( !m_instance )
+            if ( !GetInstance() )
             {
                 ReportError("wxWizardPage is abstract class and must be subclassed");
                 return NULL;
             }
 
-            page = wxStaticCast(m_instance, wxWizardPage);
+            page = wxStaticCast(GetInstance(), wxWizardPage);
             page->Create(m_wizard, GetBitmap());
         }
 
Index: wxWidgets-trunk/src/xrc/xh_filectrl.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_filectrl.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_filectrl.cpp	(working copy)
@@ -24,6 +24,10 @@
 
 wxFileCtrlXmlHandler::wxFileCtrlXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxFileCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxFC_DEFAULT_STYLE);
     XRC_ADD_STYLE(wxFC_OPEN);
     XRC_ADD_STYLE(wxFC_SAVE);
@@ -37,7 +41,7 @@
 {
     XRC_MAKE_INSTANCE(filectrl, wxFileCtrl)
 
-    filectrl->Create(m_parentAsWindow,
+    filectrl->Create(GetParentAsWindow(),
                      GetID(),
                      GetText(wxT("defaultdirectory")),
                      GetText(wxT("defaultfilename")),
Index: wxWidgets-trunk/src/xrc/xh_hyperlink.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_hyperlink.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_hyperlink.cpp	(working copy)
@@ -51,6 +51,10 @@
 
 wxHyperlinkCtrlXmlHandler::wxHyperlinkCtrlXmlHandler()
 {
+}
+
+void wxHyperlinkCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxHL_CONTEXTMENU);
     XRC_ADD_STYLE(wxHL_ALIGN_LEFT);
     XRC_ADD_STYLE(wxHL_ALIGN_RIGHT);
@@ -66,7 +70,7 @@
 
     control->Create
              (
-                m_parentAsWindow,
+                GetParentAsWindow(),
                 GetID(),
                 GetText(wxT("label")),
                 GetParamValue(wxT("url")),
Index: wxWidgets-trunk/src/xrc/xmlreshandler.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xmlreshandler.cpp	(revision 0)
+++ wxWidgets-trunk/src/xrc/xmlreshandler.cpp	(revision 0)
@@ -0,0 +1,34 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        wx/xrc/xmlreshandler.cpp
+// Purpose:     XML resource handler
+// Author:      Steve Lamerton
+// Created:     2009/07/20
+// RCS-ID:      
+// Copyright:   (c) 2009 Steve Lamerton
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+#if wxUSE_XRC
+
+#include "wx/xrc/xmlres.h"
+
+IMPLEMENT_ABSTRACT_CLASS(wxXmlResourceHandler, wxObject)
+
+wxXmlResourceHandler::wxXmlResourceHandler()
+{
+    m_Impl = NULL;
+}
+
+wxXmlResourceHandler::~wxXmlResourceHandler()
+{
+    wxDELETE(m_Impl);
+}
+
+#endif
+
Index: wxWidgets-trunk/src/xrc/xh_editlbox.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_editlbox.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_editlbox.cpp	(working copy)
@@ -52,6 +52,10 @@
 
 wxEditableListBoxXmlHandler::wxEditableListBoxXmlHandler()
 {
+}
+
+void wxEditableListBoxXmlHandler::Create()
+{
     m_insideBox = false;
 
     XRC_ADD_STYLE(wxEL_ALLOW_NEW);
@@ -64,14 +68,14 @@
 
 wxObject *wxEditableListBoxXmlHandler::DoCreateResource()
 {
-    if ( m_class == EDITLBOX_CLASS_NAME )
+    if ( GetClass() == EDITLBOX_CLASS_NAME )
     {
         // create the control itself
         XRC_MAKE_INSTANCE(control, wxEditableListBox)
 
         control->Create
                  (
-                      m_parentAsWindow,
+                      GetParentAsWindow(),
                       GetID(),
                       GetText("label"),
                       GetPosition(),
@@ -96,11 +100,11 @@
 
         return control;
     }
-    else if ( m_insideBox && m_node->GetName() == EDITLBOX_ITEM_NAME )
+    else if ( m_insideBox && GetNode()->GetName() == EDITLBOX_ITEM_NAME )
     {
-        wxString str = GetNodeContent(m_node);
-        if ( m_resource->GetFlags() & wxXRC_USE_LOCALE )
-            str = wxGetTranslation(str, m_resource->GetDomain());
+        wxString str = GetNodeContent(GetNode());
+        if ( GetResource()->GetFlags() & wxXRC_USE_LOCALE )
+            str = wxGetTranslation(str, GetResource()->GetDomain());
         m_items.push_back(str);
 
         return NULL;
Index: wxWidgets-trunk/src/xrc/xh_slidr.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_slidr.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_slidr.cpp	(working copy)
@@ -33,6 +33,10 @@
 wxSliderXmlHandler::wxSliderXmlHandler()
                    :wxXmlResourceHandler()
 {
+}
+
+void wxSliderXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxSL_HORIZONTAL);
     XRC_ADD_STYLE(wxSL_VERTICAL);
     XRC_ADD_STYLE(wxSL_AUTOTICKS);
@@ -51,7 +55,7 @@
 {
     XRC_MAKE_INSTANCE(control, wxSlider)
 
-    control->Create(m_parentAsWindow,
+    control->Create(GetParentAsWindow(),
                     GetID(),
                     GetLong(wxT("value"), DEFAULT_VALUE),
                     GetLong(wxT("min"), DEFAULT_MIN),
Index: wxWidgets-trunk/src/xrc/xh_srchctrl.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_srchctrl.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_srchctrl.cpp	(working copy)
@@ -24,6 +24,10 @@
 
 wxSearchCtrlXmlHandler::wxSearchCtrlXmlHandler() : wxXmlResourceHandler()
 {
+}
+
+void wxSearchCtrlXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxTE_PROCESS_ENTER);
     XRC_ADD_STYLE(wxTE_PROCESS_TAB);
     XRC_ADD_STYLE(wxTE_NOHIDESEL);
@@ -39,7 +43,7 @@
 {
     XRC_MAKE_INSTANCE(ctrl, wxSearchCtrl)
 
-    ctrl->Create(m_parentAsWindow,
+    ctrl->Create(GetParentAsWindow(),
                  GetID(),
                  GetText(wxT("value")),
                  GetPosition(),
Index: wxWidgets-trunk/src/xrc/xh_choic.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_choic.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_choic.cpp	(working copy)
@@ -29,13 +29,17 @@
 wxChoiceXmlHandler::wxChoiceXmlHandler()
 : wxXmlResourceHandler() , m_insideBox(false)
 {
+}
+
+void wxChoiceXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxCB_SORT);
     AddWindowStyles();
 }
 
 wxObject *wxChoiceXmlHandler::DoCreateResource()
 {
-    if( m_class == wxT("wxChoice"))
+    if( GetClass() == wxT("wxChoice"))
     {
         // find the selection
         long selection = GetLong(wxT("selection"), -1);
@@ -46,7 +50,7 @@
 
         XRC_MAKE_INSTANCE(control, wxChoice)
 
-        control->Create(m_parentAsWindow,
+        control->Create(GetParentAsWindow(),
                         GetID(),
                         GetPosition(), GetSize(),
                         strList,
@@ -69,9 +73,9 @@
         // handle <item>Label</item>
 
         // add to the list
-        wxString str = GetNodeContent(m_node);
-        if (m_resource->GetFlags() & wxXRC_USE_LOCALE)
-            str = wxGetTranslation(str, m_resource->GetDomain());
+        wxString str = GetNodeContent(GetNode());
+        if (GetResource()->GetFlags() & wxXRC_USE_LOCALE)
+            str = wxGetTranslation(str, GetResource()->GetDomain());
         strList.Add(str);
 
         return NULL;
Index: wxWidgets-trunk/src/xrc/xh_tglbtn.cpp
===================================================================
--- wxWidgets-trunk/src/xrc/xh_tglbtn.cpp	(revision 61946)
+++ wxWidgets-trunk/src/xrc/xh_tglbtn.cpp	(working copy)
@@ -26,6 +26,10 @@
 wxToggleButtonXmlHandler::wxToggleButtonXmlHandler()
     : wxXmlResourceHandler()
 {
+}
+
+void wxToggleButtonXmlHandler::Create()
+{
     XRC_ADD_STYLE(wxBU_EXACTFIT);
 
     AddWindowStyles();
@@ -35,7 +39,7 @@
 {
     XRC_MAKE_INSTANCE(control, wxToggleButton)
 
-    control->Create(m_parentAsWindow,
+    control->Create(GetParentAsWindow(),
                     GetID(),
                     GetText(wxT("label")),
                     GetPosition(), GetSize(),
Index: wxWidgets-trunk/include/wx/xrc/xh_bmpcbox.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_bmpcbox.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_bmpcbox.h	(working copy)
@@ -23,6 +23,7 @@
 
 public:
     wxBitmapComboBoxXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_split.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_split.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_split.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxSplitterWindowXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_collpane.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_collpane.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_collpane.h	(working copy)
@@ -21,6 +21,7 @@
 {
 public:
     wxCollapsiblePaneXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_gdctl.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_gdctl.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_gdctl.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxGenericDirCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_animatctrl.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_animatctrl.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_animatctrl.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxAnimationCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_wizrd.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_wizrd.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_wizrd.h	(working copy)
@@ -24,6 +24,7 @@
 
 public:
     wxWizardXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_stbox.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_stbox.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_stbox.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxStaticBoxXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_panel.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_panel.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_panel.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxPanelXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_statbar.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_statbar.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_statbar.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxStatusBarXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_unkwn.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_unkwn.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_unkwn.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxUnknownWidgetXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_datectrl.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_datectrl.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_datectrl.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxDateCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_cald.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_cald.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_cald.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxCalendarCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_fontpicker.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_fontpicker.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_fontpicker.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxFontPickerCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_filectrl.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_filectrl.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_filectrl.h	(working copy)
@@ -19,6 +19,7 @@
 {
 public:
     wxFileCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_hyperlink.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_hyperlink.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_hyperlink.h	(working copy)
@@ -25,6 +25,7 @@
     // Constructor.
     wxHyperlinkCtrlXmlHandler();
 
+    virtual void Create();
     // Creates the control and returns a pointer to it.
     virtual wxObject *DoCreateResource();
 
Index: wxWidgets-trunk/include/wx/xrc/xh_bttn.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_bttn.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_bttn.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxButtonXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_spin.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_spin.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_spin.h	(working copy)
@@ -21,6 +21,7 @@
 {
 public:
     wxSpinButtonXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
@@ -36,6 +37,7 @@
 {
 public:
     wxSpinCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_chckb.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_chckb.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_chckb.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxCheckBoxXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_editlbox.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_editlbox.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_editlbox.h	(working copy)
@@ -23,7 +23,7 @@
 {
 public:
     wxEditableListBoxXmlHandler();
-
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xmlres.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xmlres.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xmlres.h	(working copy)
@@ -42,9 +42,11 @@
 class WXDLLIMPEXP_FWD_CORE wxWindow;
 class WXDLLIMPEXP_FWD_CORE wxFrame;
 class WXDLLIMPEXP_FWD_CORE wxToolBar;
+class WXDLLIMPEXP_FWD_CORE wxXmlResourceHandler;
 
-class WXDLLIMPEXP_FWD_XRC wxXmlResourceHandler;
 class WXDLLIMPEXP_FWD_XRC wxXmlSubclassFactory;
+class wxXmlResourceHandler;
+class wxXmlResourceHandlerImpl;
 class wxXmlSubclassFactories;
 class wxXmlResourceModule;
 class wxXmlResourceDataRecords;
@@ -389,7 +391,7 @@
     // domain to pass to translation functions, if any.
     wxString m_domain;
 
-    friend class wxXmlResourceHandler;
+    friend class wxXmlResourceHandlerImpl;
     friend class wxXmlResourceModule;
 
     static wxXmlSubclassFactories *ms_subclassFactories;
@@ -437,19 +439,31 @@
 #define XRCSIZERITEM(window, id) \
     ((window).GetSizer() ? (window).GetSizer()->GetItemById(XRCID(id)) : NULL)
 
-// wxXmlResourceHandler is an abstract base class for resource handlers
-// capable of creating a control from an XML node.
 
-class WXDLLIMPEXP_XRC wxXmlResourceHandler : public wxObject
+// wxXmlResourceHandlerImplementation is the back end of the wxXmlResourceHander
+// class to allow the split between core and xrc
+
+class WXDLLIMPEXP_XRC wxXmlResourceHandlerImpl : public wxObject
 {
-DECLARE_ABSTRACT_CLASS(wxXmlResourceHandler)
+DECLARE_CLASS(wxXmlResourceHandlerImpl)
 public:
     // Constructor.
-    wxXmlResourceHandler();
+    wxXmlResourceHandlerImpl(wxXmlResourceHandler *handler);
 
     // Destructor.
-    virtual ~wxXmlResourceHandler() {}
+    virtual ~wxXmlResourceHandlerImpl() {}
 
+    // Sets the parent resource.
+    void SetParentResource(wxXmlResource *res) { m_resource = res; }
+    
+    void SetNode(wxXmlNode *node) { m_node = node; }
+    wxXmlNode *GetNode() { return m_node; }
+    wxString GetClass() { return m_class; }
+    wxObject *GetParent() { return m_parent; }
+    wxObject *GetInstance() { return m_instance; }
+    wxWindow *GetParentAsWindow() { return m_parentAsWindow; }
+    wxXmlResource *GetResource() { return m_resource; }
+    
     // Creates an object (menu, dialog, control, ...) from an XML node.
     // Should check for validity.
     // parent is a higher-level object (usually window, dialog or panel)
@@ -458,29 +472,8 @@
     // should rather use this one, and call its Create method.
     wxObject *CreateResource(wxXmlNode *node, wxObject *parent,
                              wxObject *instance);
+                             
 
-    // This one is called from CreateResource after variables
-    // were filled.
-    virtual wxObject *DoCreateResource() = 0;
-
-    // Returns true if it understands this node and can create
-    // a resource from it, false otherwise.
-    virtual bool CanHandle(wxXmlNode *node) = 0;
-
-    // Sets the parent resource.
-    void SetParentResource(wxXmlResource *res) { m_resource = res; }
-
-protected:
-    wxXmlResource *m_resource;
-    wxArrayString m_styleNames;
-    wxArrayInt m_styleValues;
-
-    // Variables (filled by CreateResource)
-    wxXmlNode *m_node;
-    wxString m_class;
-    wxObject *m_parent, *m_instance;
-    wxWindow *m_parentAsWindow;
-
     // --- Handy methods:
 
     // Returns true if the node has a property class equal to classname,
@@ -593,7 +586,7 @@
 
     // Sets common window options.
     void SetupWindow(wxWindow *wnd);
-
+    
     // Creates children.
     void CreateChildren(wxObject *parent, bool this_hnd_only = false);
 
@@ -616,17 +609,207 @@
     void ReportError(const wxString& message);
     // reports input error when parsing parameter with given name
     void ReportParamError(const wxString& param, const wxString& message);
+    
+    wxXmlResourceHandler* GetHandler() { return m_handler; }
+
+private:
+    // Variables (filled by CreateResource)
+    wxXmlNode *m_node;
+    wxString m_class;
+    wxObject *m_parent, *m_instance;
+    wxWindow *m_parentAsWindow;  
+    
+    wxXmlResourceHandler *m_handler;
+    wxXmlResource *m_resource;
+    wxArrayString m_styleNames;
+    wxArrayInt m_styleValues;
 };
 
+class WXDLLIMPEXP_CORE wxXmlResourceHandler : public wxObject
+{
+DECLARE_ABSTRACT_CLASS(wxXmlResourceHandler)
+public:
+    // Constructor.
+    wxXmlResourceHandler();
 
+    // Destructor.
+    ~wxXmlResourceHandler();
+    
+    virtual void Create() = 0;
+
+    // This one is called from CreateResource after variables
+    // were filled.
+    virtual wxObject *DoCreateResource() = 0;
+
+    // Returns true if it understands this node and can create
+    // a resource from it, false otherwise.
+    virtual bool CanHandle(wxXmlNode *node) = 0;
+
+    void SetParentResource(wxXmlResource *res)
+                           { GetImpl()->SetParentResource(res); }
+                           
+    void SetImpl(wxXmlResourceHandlerImpl* impl) { m_Impl = impl; }
+
+    //Getters / Setter for accessing implementation variables
+    void SetNode(wxXmlNode *node) { GetImpl()->SetNode(node); }
+    wxXmlNode *GetNode() { return GetImpl()->GetNode(); }
+    wxString GetClass() { return GetImpl()->GetClass(); }
+    wxObject *GetParent() { return GetImpl()->GetParent(); }
+    wxObject *GetInstance() { return GetImpl()->GetInstance(); }
+    wxWindow *GetParentAsWindow() { return GetImpl()->GetParentAsWindow(); }
+    wxXmlResource *GetResource() { return GetImpl()->GetResource(); }
+    
+    wxObject *CreateResource(wxXmlNode *node, wxObject *parent,
+                             wxObject *instance)
+        { return GetImpl()->CreateResource(node, parent, instance); }
+
+protected:
+
+    void CreateChildren(wxObject *parent, bool this_hnd_only = false)
+        { GetImpl()->CreateChildren(parent, this_hnd_only); }
+
+    void CreateChildrenPrivately(wxObject *parent, wxXmlNode *rootnode = NULL)
+        { GetImpl()->CreateChildrenPrivately(parent, rootnode); }
+
+    bool IsOfClass(wxXmlNode *node, const wxString& classname)
+        { return GetImpl()->IsOfClass(node, classname); }
+
+    wxString GetNodeContent(const wxXmlNode *node)
+        { return GetImpl()->GetNodeContent(node); }
+
+    bool HasParam(const wxString& param)
+        { return GetImpl()->HasParam(param); }
+
+    wxXmlNode *GetParamNode(const wxString& param)
+        { return GetImpl()->GetParamNode(param); }
+
+    wxString GetParamValue(const wxString& param)
+        { return GetImpl()->GetParamValue(param); };
+
+    wxString GetParamValue(const wxXmlNode* node)
+        { return GetImpl()->GetParamValue(node); }
+
+    void AddStyle(const wxString& name, int value)
+        { GetImpl()->AddStyle(name, value); }
+
+    void AddWindowStyles()
+        { GetImpl()->AddWindowStyles(); }
+
+    int GetStyle(const wxString& param = wxT("style"), int defaults = 0)
+        { return GetImpl()->GetStyle(param, defaults); }
+
+    wxString GetText(const wxString& param, bool translate = true)
+        { return GetImpl()->GetText(param, translate); }
+
+    int GetID()
+        { return GetImpl()->GetID(); }
+
+    wxString GetName()
+        { return GetImpl()->GetName(); }
+
+    bool GetBool(const wxString& param, bool defaultv = false)
+        { return GetImpl()->GetBool(param, defaultv); }
+
+    long GetLong(const wxString& param, long defaultv = 0)
+        { return GetImpl()->GetLong(param, defaultv); }
+
+    float GetFloat(const wxString& param, float defaultv = 0)
+        { return GetImpl()->GetFloat(param, defaultv); }
+
+    wxColour GetColour(const wxString& param, const wxColour& defaultv = wxNullColour)
+        { return GetImpl()->GetColour(param, defaultv); }
+
+    wxSize GetSize(const wxString& param = wxT("size"),
+                   wxWindow *windowToUse = NULL)
+        { return GetImpl()->GetSize(param, windowToUse); }
+
+    wxPoint GetPosition(const wxString& param = wxT("pos"))
+        { return GetImpl()->GetPosition(param); }
+
+    wxCoord GetDimension(const wxString& param, wxCoord defaultv = 0,
+                         wxWindow *windowToUse = NULL)
+        { return GetImpl()->GetDimension(param, defaultv, windowToUse); }
+
+    wxBitmap GetBitmap(const wxString& param = wxT("bitmap"),
+                       const wxArtClient& defaultArtClient = wxART_OTHER,
+                       wxSize size = wxDefaultSize)
+        { return GetImpl()->GetBitmap(param, defaultArtClient, size); }
+
+    wxBitmap GetBitmap(const wxXmlNode* node,
+                       const wxArtClient& defaultArtClient = wxART_OTHER,
+                       wxSize size = wxDefaultSize)
+        { return GetImpl()->GetBitmap(node, defaultArtClient, size); }
+
+    wxIcon GetIcon(const wxString& param = wxT("icon"),
+                   const wxArtClient& defaultArtClient = wxART_OTHER,
+                   wxSize size = wxDefaultSize)
+        { return GetImpl()->GetIcon(param, defaultArtClient, size); }
+
+    wxIcon GetIcon(const wxXmlNode* node,
+                   const wxArtClient& defaultArtClient = wxART_OTHER,
+                   wxSize size = wxDefaultSize)
+        { return GetImpl()->GetIcon(node, defaultArtClient, size); }
+
+    wxIconBundle GetIconBundle(const wxString& param,
+                               const wxArtClient& defaultArtClient = wxART_OTHER)
+        { return GetImpl()->GetIconBundle(param, defaultArtClient); }
+
+    wxImageList *GetImageList(const wxString& param = wxT("imagelist"))
+        { return GetImpl()->GetImageList(param); }
+
+#if wxUSE_ANIMATIONCTRL
+    wxAnimation GetAnimation(const wxString& param = wxT("animation"))
+        { return GetImpl()->GetAnimation(param); }
+#endif
+
+    wxFont GetFont(const wxString& param = wxT("font"))
+        { return GetImpl()->GetFont(param); }
+
+    bool GetBoolAttr(const wxString& attr, bool defaultv)
+        { return GetImpl()->GetBoolAttr(attr, defaultv); }
+
+    void SetupWindow(wxWindow *wnd)
+        { GetImpl()->SetupWindow(wnd); }
+
+    wxObject *CreateResFromNode(wxXmlNode *node,
+                                wxObject *parent, wxObject *instance = NULL)
+        { return GetImpl()->CreateResFromNode(node, parent, instance); }
+
+#if wxUSE_FILESYSTEM
+    wxFileSystem& GetCurFileSystem() { return GetImpl()->GetCurFileSystem(); }
+#endif
+
+    void ReportError(wxXmlNode *context, const wxString& message)
+        { return GetImpl()->ReportError(context, message); }
+
+    void ReportError(const wxString& message)
+        { return GetImpl()->ReportError(message); }
+
+    void ReportParamError(const wxString& param, const wxString& message)
+        { return GetImpl()->ReportParamError(param, message); }
+    
+    wxXmlResourceHandlerImpl* GetImpl()
+    {
+        if(!m_Impl)
+        {
+            wxFAIL_MSG(wxT("Implementation not found"));
+        }
+        return m_Impl;
+    }
+
+private:
+    wxXmlResourceHandlerImpl *m_Impl;
+
+};
+
 // Programmer-friendly macros for writing XRC handlers:
 
 #define XRC_ADD_STYLE(style) AddStyle(wxT(#style), style)
 
 #define XRC_MAKE_INSTANCE(variable, classname) \
    classname *variable = NULL; \
-   if (m_instance) \
-       variable = wxStaticCast(m_instance, classname); \
+   if (GetInstance()) \
+       variable = wxStaticCast(GetInstance(), classname); \
    if (!variable) \
        variable = new classname;
 
Index: wxWidgets-trunk/include/wx/xrc/xh_dirpicker.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_dirpicker.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_dirpicker.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxDirPickerCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_slidr.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_slidr.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_slidr.h	(working copy)
@@ -19,6 +19,7 @@
 {
 public:
     wxSliderXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_bmp.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_bmp.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_bmp.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxBitmapXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
@@ -31,6 +32,7 @@
 
 public:
     wxIconXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_scrol.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_scrol.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_scrol.h	(working copy)
@@ -19,6 +19,7 @@
 {
 public:
     wxScrollBarXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_scwin.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_scwin.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_scwin.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxScrolledWindowXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_text.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_text.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_text.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxTextCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_chckl.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_chckl.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_chckl.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxCheckListBoxXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_srchctrl.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_srchctrl.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_srchctrl.h	(working copy)
@@ -19,7 +19,7 @@
 {
 public:
     wxSearchCtrlXmlHandler();
-
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_choic.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_choic.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_choic.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxChoiceXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_richtext.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_richtext.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_richtext.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxRichTextCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_frame.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_frame.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_frame.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxFrameXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_tglbtn.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_tglbtn.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_tglbtn.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxToggleButtonXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_radbt.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_radbt.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_radbt.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxRadioButtonXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_sizer.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_sizer.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_sizer.h	(working copy)
@@ -24,6 +24,7 @@
 
 public:
     wxSizerXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
@@ -65,6 +66,7 @@
 
 public:
     wxStdDialogButtonSizerXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_tree.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_tree.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_tree.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxTreeCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_combo.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_combo.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_combo.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxComboBoxXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_radbx.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_radbx.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_radbx.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxRadioBoxXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_choicbk.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_choicbk.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_choicbk.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxChoicebookXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_bmpbt.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_bmpbt.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_bmpbt.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxBitmapButtonXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_menu.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_menu.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_menu.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxMenuXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
@@ -34,6 +35,7 @@
 
 public:
     wxMenuBarXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_html.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_html.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_html.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxHtmlWindowXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_dlg.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_dlg.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_dlg.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxDialogXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_propdlg.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_propdlg.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_propdlg.h	(working copy)
@@ -23,6 +23,7 @@
 
 public:
     wxPropertySheetDialogXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_mdi.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_mdi.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_mdi.h	(working copy)
@@ -23,6 +23,7 @@
 
 public:
     wxMdiXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_treebk.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_treebk.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_treebk.h	(working copy)
@@ -34,6 +34,7 @@
 
 public:
     wxTreebookXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_notbk.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_notbk.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_notbk.h	(working copy)
@@ -22,6 +22,7 @@
 
 public:
     wxNotebookXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_filepicker.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_filepicker.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_filepicker.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxFilePickerCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_listb.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_listb.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_listb.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxListBoxXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_clrpicker.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_clrpicker.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_clrpicker.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxColourPickerCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_listc.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_listc.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_listc.h	(working copy)
@@ -22,6 +22,7 @@
 {
 public:
     wxListCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_toolb.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_toolb.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_toolb.h	(working copy)
@@ -23,6 +23,7 @@
 
 public:
     wxToolBarXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_odcombo.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_odcombo.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_odcombo.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxOwnerDrawnComboBoxXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_comboctrl.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_comboctrl.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_comboctrl.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxComboCtrlXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_grid.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_grid.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_grid.h	(working copy)
@@ -21,7 +21,7 @@
 
 public:
     wxGridXmlHandler();
-
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_stbmp.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_stbmp.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_stbmp.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxStaticBitmapXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_sttxt.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_sttxt.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_sttxt.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxStaticTextXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/include/wx/xrc/xh_listbk.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_listbk.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_listbk.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxListbookXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_gauge.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_gauge.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_gauge.h	(working copy)
@@ -19,6 +19,7 @@
 {
 public:
     wxGaugeXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_htmllbox.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_htmllbox.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_htmllbox.h	(working copy)
@@ -19,6 +19,7 @@
 {
 public:
     wxSimpleHtmlListBoxXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 
Index: wxWidgets-trunk/include/wx/xrc/xh_stlin.h
===================================================================
--- wxWidgets-trunk/include/wx/xrc/xh_stlin.h	(revision 61946)
+++ wxWidgets-trunk/include/wx/xrc/xh_stlin.h	(working copy)
@@ -21,6 +21,7 @@
 
 public:
     wxStaticLineXmlHandler();
+    virtual void Create();
     virtual wxObject *DoCreateResource();
     virtual bool CanHandle(wxXmlNode *node);
 };
Index: wxWidgets-trunk/build/bakefiles/files.bkl
===================================================================
--- wxWidgets-trunk/build/bakefiles/files.bkl	(revision 61946)
+++ wxWidgets-trunk/build/bakefiles/files.bkl	(working copy)
@@ -747,6 +747,7 @@
     src/generic/treebkg.cpp
     src/generic/vlbox.cpp
     src/generic/vscroll.cpp
+    src/xrc/xmlreshandler.cpp
 </set>
 <set var="GUI_CMN_HDR" hints="files">
     wx/bmpbuttn.h
Index: wxWidgets-trunk/interface/wx/xrc/xmlres.h
===================================================================
--- wxWidgets-trunk/interface/wx/xrc/xmlres.h	(revision 61946)
+++ wxWidgets-trunk/interface/wx/xrc/xmlres.h	(working copy)
@@ -421,18 +421,23 @@
     @class wxXmlResourceHandler
 
     wxXmlResourceHandler is an abstract base class for resource handlers
-    capable of creating a control from an XML node.
+    capable of creating a control from an XML node. Note that the actual 
+    implementation of these functions is in wxXmlResourceHandlerImpl in
+    xmlres.[h/cpp].
 
     See @ref overview_xrc for details.
 
-    @library{wxxrc}
+    @library{wxcore}
     @category{xrc}
 */
 class wxXmlResourceHandler : public wxObject
 {
 public:
     /**
-        Default constructor.
+        Default constructor. Is is important not to call any 
+        wxXmlResourceHandler functions in the constructor as the implementation
+        is not created until wxXmlResource::AddHandler or 
+        wxXmlResource::InsertHandler is called.
     */
     wxXmlResourceHandler();
 
@@ -442,6 +447,15 @@
     virtual ~wxXmlResourceHandler();
 
     /**
+        Setup, such as adding window styles must be performed here rather than
+        in the constructor. It is called in wxXmlResource::AddHandler or 
+        wxXmlResource::InsertHandlerafter the back end implementation has been 
+        created.
+        @since 2.9.1
+    */
+    virtual void Create() = 0;
+
+    /**
         Creates an object (menu, dialog, control, ...) from an XML node.
         Should check for validity. @a parent is a higher-level object
         (usually window, dialog or panel) that is often necessary to
@@ -475,7 +489,56 @@
     */
     void SetParentResource(wxXmlResource* res);
 
+    /**
+        Sets the implementation. Note this is automatically called in 
+        wxXmlResource::[Add/Insert]Hanlder.
+        @since 2.9.1
+    */
+    void SetImpl(wxXmlResourceHandlerImpl* impl) { m_Impl = impl; }
 
+    /**
+        Sets the node.
+        @since 2.9.1
+    */
+    void SetNode(wxXmlNode *node) { GetImpl()->SetNode(node); }
+    
+    /**
+        Gets the node.
+        @since 2.9.1
+    */
+    wxXmlNode *GetNode() { return GetImpl()->GetNode(); }
+    
+    /**
+        Gets the class
+        @since 2.9.1
+    */
+    wxString GetClass() { return GetImpl()->GetClass(); }
+    
+    /**
+        Gets the parent.
+        @since 2.9.1
+    */
+    wxObject *GetParent() { return GetImpl()->GetParent(); }
+    
+    /**
+        Gets the instance.
+        @since 2.9.1
+    */
+    wxObject *GetInstance() { return GetImpl()->GetInstance(); }
+    
+    /**
+        Gets the parent as a wxWindow.
+        @since 2.9.1
+    */
+    wxWindow *GetParentAsWindow() { return GetImpl()->GetParentAsWindow(); }
+    
+    /**
+        Gets the resource.
+        @since 2.9.1
+    */
+    wxXmlResource *GetResource() { return GetImpl()->GetResource(); }
+
+
 protected:
 
     /**
