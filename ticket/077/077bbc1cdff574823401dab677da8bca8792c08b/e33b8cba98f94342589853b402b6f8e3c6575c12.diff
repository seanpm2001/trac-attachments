diff --git include/wx/gtk/menu.h include/wx/gtk/menu.h
index 06eaca1..61a9bf6 100644
--- include/wx/gtk/menu.h
+++ include/wx/gtk/menu.h
@@ -78,6 +78,9 @@ public:
     void SetLayoutDirection(const wxLayoutDirection dir);
     wxLayoutDirection GetLayoutDirection() const;
 
+    // Returns the title, with mnemonics translated to wx format
+    const wxString GetTitle() const;
+
     // TODO: virtual void SetTitle(const wxString& title);
 
     // implementation GTK only
diff --git include/wx/gtk1/menu.h include/wx/gtk1/menu.h
index ce9b602..f2a9225 100644
--- include/wx/gtk1/menu.h
+++ include/wx/gtk1/menu.h
@@ -73,6 +73,9 @@ public:
     virtual wxMenuItem* DoInsert(size_t pos, wxMenuItem *item);
     virtual wxMenuItem* DoRemove(wxMenuItem *item);
 
+    // Returns the title, with mnemonics translated to wx format
+    const wxString GetTitle() const;
+
     // TODO: virtual void SetTitle(const wxString& title);
 
     // implementation
diff --git src/gtk/menu.cpp src/gtk/menu.cpp
index d4e961b..dd791be 100644
--- src/gtk/menu.cpp
+++ src/gtk/menu.cpp
@@ -333,7 +333,7 @@ wxMenu *wxMenuBar::Remove(size_t pos)
 
 static int FindMenuItemRecursive( const wxMenu *menu, const wxString &menuString, const wxString &itemString )
 {
-    if (wxMenuItem::GetLabelText(wxConvertMnemonicsFromGTK(menu->GetTitle())) == wxMenuItem::GetLabelText(menuString))
+    if (wxMenuItem::GetLabelText(menu->GetTitle()) == wxMenuItem::GetLabelText(menuString))
     {
         int res = menu->FindItem( itemString );
         if (res != wxNOT_FOUND)
@@ -426,7 +426,7 @@ wxString wxMenuBar::GetMenuLabel( size_t pos ) const
 
     wxMenu* menu = node->GetData();
 
-    return wxConvertMnemonicsFromGTK(menu->GetTitle());
+    return menu->GetTitle();
 }
 
 void wxMenuBar::SetMenuLabel( size_t pos, const wxString& label )
@@ -747,6 +747,11 @@ wxLayoutDirection wxMenu::GetLayoutDirection() const
     return wxWindow::GTKGetLayout(m_owner);
 }
 
+const wxString wxMenu::GetTitle() const
+{
+    return wxConvertMnemonicsFromGTK(wxMenuBase::GetTitle()); 
+}
+
 bool wxMenu::GtkAppend(wxMenuItem *mitem, int pos)
 {
     GtkWidget *menuItem;
diff --git src/gtk1/menu.cpp src/gtk1/menu.cpp
index b70a196..4bb08c4 100644
--- src/gtk1/menu.cpp
+++ src/gtk1/menu.cpp
@@ -432,7 +432,7 @@ wxMenu *wxMenuBar::Remove(size_t pos)
 
 static int FindMenuItemRecursive( const wxMenu *menu, const wxString &menuString, const wxString &itemString )
 {
-    if (wxMenuItem::GetLabelText(wxConvertFromGTKToWXLabel(menu->GetTitle())) == wxMenuItem::GetLabelText(menuString))
+    if (wxMenuItem::GetLabelText(menu->GetTitle()) == wxMenuItem::GetLabelText(menuString))
     {
         int res = menu->FindItem( itemString );
         if (res != wxNOT_FOUND)
@@ -525,7 +525,7 @@ wxString wxMenuBar::GetMenuLabel( size_t pos ) const
 
     wxMenu* menu = node->GetData();
 
-    return wxConvertFromGTKToWXLabel(menu->GetTitle());
+    return menu->GetTitle();
 }
 
 void wxMenuBar::SetMenuLabel( size_t pos, const wxString& label )
@@ -964,6 +964,11 @@ wxMenu::~wxMenu()
    }
 }
 
+const wxString wxMenu::GetTitle() const
+{
+    return wxConvertMnemonicsFromGTK(wxMenuBase::GetTitle()); 
+}
+
 bool wxMenu::GtkAppend(wxMenuItem *mitem, int pos)
 {
     GtkWidget *menuItem;
diff --git tests/menu/menu.cpp tests/menu/menu.cpp
index 961651c..01b4bbb 100644
--- tests/menu/menu.cpp
+++ tests/menu/menu.cpp
@@ -83,6 +83,7 @@ private:
         CPPUNIT_TEST( FindInMenubar );
         CPPUNIT_TEST( FindInMenu );
         CPPUNIT_TEST( Count );
+        CPPUNIT_TEST( Labels );
     CPPUNIT_TEST_SUITE_END();
 
     void CreateFrame();
@@ -90,6 +91,7 @@ private:
     void FindInMenubar();
     void FindInMenu();
     void Count();
+    void Labels();
 
     wxFrame* m_frame;
 
@@ -170,10 +172,13 @@ void MenuTestCase::FindInMenubar()
     // Find by menu name plus item name:
     CPPUNIT_ASSERT( bar->FindMenuItem("File", "Foo") != wxNOT_FOUND );
     CPPUNIT_ASSERT( bar->FindMenuItem("&File", "&Foo") != wxNOT_FOUND );
-    // and using the menu title
+    // and using the menu label
     int index = bar->FindMenu("&File");
     CPPUNIT_ASSERT( index != wxNOT_FOUND );
-    wxString menutitle = bar->GetMenuLabel(index);
+    wxString menulabel = bar->GetMenuLabel(index);
+    CPPUNIT_ASSERT( bar->FindMenuItem(menulabel, "&Foo") != wxNOT_FOUND );
+    // and title
+    wxString menutitle = bar->GetMenu(index)->GetTitle();
     CPPUNIT_ASSERT( bar->FindMenuItem(menutitle, "&Foo") != wxNOT_FOUND );
 
     // Find by position:
@@ -195,7 +200,7 @@ void MenuTestCase::FindInMenubar()
     item = bar->FindItem(m_submenuItemId, &menu);
     CPPUNIT_ASSERT( item );
     CPPUNIT_ASSERT( menu );
-    // and, for completeness, a submenu one:
+    // and, for completeness, a subsubmenu one:
     item = bar->FindItem(m_subsubmenuItemId, &menu);
     CPPUNIT_ASSERT( item );
     CPPUNIT_ASSERT( menu );
@@ -263,3 +268,37 @@ void MenuTestCase::Count()
     }
     CPPUNIT_ASSERT_EQUAL( count, m_itemCount );
 }
+
+void MenuTestCase::Labels()
+{
+    wxMenuBar* bar = m_frame->GetMenuBar();
+    CPPUNIT_ASSERT( bar );
+    wxMenu* filemenu;
+    wxMenuItem* itemFoo = bar->FindItem(MenuTestCase_Foo, &filemenu);
+    CPPUNIT_ASSERT( itemFoo && filemenu );
+
+    // These return labels including mnemonics/accelerators:
+
+    // wxMenuBar
+    CPPUNIT_ASSERT( bar->GetMenuLabel(0) == "&File" );
+    CPPUNIT_ASSERT( bar->GetLabel(MenuTestCase_Foo) == "&Foo\tCtrl-F" );
+    
+    // wxMenu
+    CPPUNIT_ASSERT( filemenu->GetTitle() == "&File");
+    CPPUNIT_ASSERT( filemenu->GetLabel(MenuTestCase_Foo) == "&Foo\tCtrl-F" );
+
+    // wxMenuItem
+    CPPUNIT_ASSERT( itemFoo->GetItemLabel() == "&Foo\tCtrl-F" );
+
+    // These return labels stripped of mnemonics/accelerators:
+
+    // wxMenuBar
+    CPPUNIT_ASSERT( bar->GetMenuLabelText(0) == "File" );
+    
+    // wxMenu
+    CPPUNIT_ASSERT( filemenu->GetLabelText(MenuTestCase_Foo) == "Foo" );
+
+    // wxMenuItem
+    CPPUNIT_ASSERT( itemFoo->GetItemLabelText() == "Foo" );
+    CPPUNIT_ASSERT( wxMenuItem::GetLabelText("&Foo\tCtrl-F") == "Foo" );
+}
