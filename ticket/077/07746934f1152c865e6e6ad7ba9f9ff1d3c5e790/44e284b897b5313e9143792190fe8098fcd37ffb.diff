Index: include/wx/socket.h
===================================================================
--- include/wx/socket.h	(revision 61693)
+++ include/wx/socket.h	(working copy)
@@ -266,8 +266,11 @@
 
     // the initialization count, wxSocket is initialized if > 0
     static size_t m_countInit;
+#if wxUSE_THREADS
+    // synchronize access to m_countInit
+    static wxCriticalSection m_cs_countInit;
+#endif
 
-
     friend class wxSocketReadGuard;
     friend class wxSocketWriteGuard;
 
Index: src/common/socket.cpp
===================================================================
--- src/common/socket.cpp	(revision 61693)
+++ src/common/socket.cpp	(working copy)
@@ -750,17 +750,25 @@
 // Initialization and shutdown
 // --------------------------------------------------------------------------
 
-// FIXME-MT: all this is MT-unsafe, of course, we should protect all accesses
-//           to m_countInit with a crit section
-size_t wxSocketBase::m_countInit = 0;
+#if wxUSE_THREADS
+wxCriticalSection wxSocketBase::m_cs_countInit;
+#endif
+size_t            wxSocketBase::m_countInit = 0;
 
 bool wxSocketBase::IsInitialized()
 {
+#if wxUSE_THREADS
+	wxCriticalSectionLocker locker(m_cs_countInit);
+#endif
     return m_countInit > 0;
 }
 
 bool wxSocketBase::Initialize()
 {
+#if wxUSE_THREADS
+	wxCriticalSectionLocker locker(m_cs_countInit);
+#endif
+
     if ( !m_countInit++ )
     {
         wxSocketManager * const manager = wxSocketManager::Get();
@@ -777,6 +785,10 @@
 
 void wxSocketBase::Shutdown()
 {
+#if wxUSE_THREADS
+	wxCriticalSectionLocker locker(m_cs_countInit);
+#endif
+
     // we should be initialized
     wxASSERT_MSG( m_countInit > 0, wxT("extra call to Shutdown()") );
     if ( --m_countInit == 0 )
