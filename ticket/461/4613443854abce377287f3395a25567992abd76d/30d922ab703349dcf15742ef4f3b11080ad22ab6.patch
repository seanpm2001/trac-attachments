Index: datetime.cpp
===================================================================
--- datetime.cpp	(revision 56143)
+++ datetime.cpp	(working copy)
@@ -4295,9 +4295,27 @@
     // we remember the most important unit found so far
     TimeSpanPart partBiggest = Part_MSec;
 
+    wxTimeSpan TStemp;
+    bool NegSign = false;
+
+    // neg. value    
+    if (IsNegative())
+    {
+        // make it positive
+        TStemp = Negate();
+        
+        // remember that we have a neg. sgin
+        NegSign = true;
+    }
+    else
+    {
+        TStemp = GetValue();
+    }
+
     for ( wxString::const_iterator pch = format.begin(); pch != format.end(); ++pch )
     {
         wxChar ch = *pch;
+        
 
         if ( ch == _T('%') )
         {
@@ -4324,7 +4342,7 @@
                     continue;
 
                 case _T('D'):
-                    n = GetDays();
+                    n = TStemp.GetDays();
                     if ( partBiggest < Part_Day )
                     {
                         n %= DAYS_PER_WEEK;
@@ -4337,20 +4355,13 @@
 
                 case _T('E'):
                     partBiggest = Part_Week;
-                    n = GetWeeks();
+                    n = TStemp.GetWeeks();
                     break;
 
                 case _T('H'):
-                    n = GetHours();
+                    n = TStemp.GetHours();
                     if ( partBiggest < Part_Hour )
                     {
-                        if ( n < 0 )
-                        {
-                            // the sign has already been taken into account
-                            // when outputting the biggest part
-                            n = -n;
-                        }
-
                         n %= HOURS_PER_DAY;
                     }
                     else
@@ -4362,12 +4373,9 @@
                     break;
 
                 case _T('l'):
-                    n = GetMilliseconds().ToLong();
+                    n = TStemp.GetMilliseconds().ToLong();
                     if ( partBiggest < Part_MSec )
                     {
-                        if ( n < 0 )
-                            n = -n;
-
                         n %= 1000;
                     }
                     //else: no need to reset partBiggest to Part_MSec, it is
@@ -4377,12 +4385,9 @@
                     break;
 
                 case _T('M'):
-                    n = GetMinutes();
+                    n = TStemp.GetMinutes();
                     if ( partBiggest < Part_Min )
                     {
-                        if ( n < 0 )
-                            n = -n;
-
                         n %= MIN_PER_HOUR;
                     }
                     else
@@ -4394,12 +4399,9 @@
                     break;
 
                 case _T('S'):
-                    n = GetSeconds().ToLong();
+                    n = TStemp.GetSeconds().ToLong();
                     if ( partBiggest < Part_Sec )
                     {
-                        if ( n < 0 )
-                            n = -n;
-
                         n %= SEC_PER_MIN;
                     }
                     else
@@ -4410,13 +4412,16 @@
                     digits = 2;
                     break;
             }
-
+            
+            // insert '-' if we have a neg. value
+            if (NegSign)
+            {
+                str += _T("-");
+                NegSign = false;
+            }
+            
             if ( digits )
             {
-                // negative numbers need one extra position for '-' display
-                if ( n < 0 )
-                    digits++;
-
                 fmtPrefix << _T("0") << digits;
             }
 
