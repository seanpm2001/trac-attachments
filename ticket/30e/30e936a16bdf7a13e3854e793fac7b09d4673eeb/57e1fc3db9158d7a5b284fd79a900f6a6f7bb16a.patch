Index: htmlutil.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/utils/tex2rtf/src/htmlutil.cpp,v
retrieving revision 1.25
diff -u -3 -r1.25 htmlutil.cpp
--- htmlutil.cpp	2004/06/06 11:27:52	1.25
+++ htmlutil.cpp	2004/09/30 22:02:47
@@ -1765,7 +1765,71 @@
     break;
   }
 }
+/*	CheckTypeRef()
 
+	should be called at of argument which usually is
+	type declaration which propably contains name of
+	documented class
+
+	examples: 	
+		HTMLOnArgument 
+			- ltFUNC, 
+			- ltPARAM
+			- ltCPARAM
+		
+	checks: GetArgData() if contains Type Declaration
+	                        and can be referenced to some file
+	prints:
+		before<a href="xxx&yyy">type</a>after
+		
+	returns:
+		false	- if no reference was found
+		true	- if reference was found and HREF printed
+*/
+static bool CheckTypeRef() 
+{
+  wxString typeDecl = GetArgData();
+  if( !typeDecl.IsEmpty() ) {
+    typeDecl.Replace(wxT("\\"),wxT(""));
+    wxString label = typeDecl;
+    {
+      int i;
+      while((i = label.Find(wxT("const"))  != -1) )
+	    label.Remove(i-1,5);
+    }
+    label = label.BeforeFirst('&');
+    label = label.BeforeFirst(wxT('*'));
+    label = label.BeforeFirst(wxT('\\'));
+    label.Trim(true); label.Trim(false);
+    wxString typeName = label;
+    label.MakeLower();
+    TexRef *texRef = FindReference((wxChar*)label.c_str());
+    
+    if (texRef && texRef->refFile && wxStrcmp(texRef->refFile, _T("??")) != 0) {
+      int a = typeDecl.Find(typeName);
+      wxString before = typeDecl.Mid( 0, a );
+      wxString after = typeDecl.Mid( a+typeName.Length() );
+      //wxFprintf(stderr,wxT("%s <%s> %s to ... %s#%s !!!!\n"),
+	//	before.c_str(),
+	//	typeName.c_str(),
+	//	after.c_str(),
+	//	texRef->refFile,label.c_str());
+      TexOutput(before);
+      TexOutput(_T("<A HREF=\""));
+      TexOutput(texRef->refFile);
+      TexOutput(_T("#"));
+      TexOutput(label);
+      TexOutput(wxT("\">"));
+      TexOutput(typeName);
+      TexOutput(wxT("</A>"));
+      TexOutput(after);
+      return true;
+    } else {
+      return false;
+    }
+  }
+  return false;
+}
 // Called on start/end of argument examination
 bool HTMLOnArgument(int macroId, int arg_no, bool start)
 {
@@ -1791,8 +1855,13 @@
   }
   case ltFUNC:
   {
-    if (start && (arg_no == 1))
+    if (start && (arg_no == 1)) {
       TexOutput(_T("<B>"));
+      if( CheckTypeRef() ) {
+	TexOutput(_T("</B> "));
+	return false;
+      }
+    }
 
     if (!start && (arg_no == 1))
       TexOutput(_T("</B> "));
@@ -1853,27 +1922,21 @@
     break;
   }
   case ltPARAM:
-  {
-    if (start && (arg_no == 1))
-      TexOutput(_T("<B>"));
-    if (!start && (arg_no == 1))
-      TexOutput(_T("</B>"));
-    if (start && (arg_no == 2))
-    {
-      TexOutput(_T("<I>"));
-    }
-    if (!start && (arg_no == 2))
-    {
-      TexOutput(_T("</I>"));
-    }
-    break;
-  }
   case ltCPARAM:
   {
-    if (start && (arg_no == 1))
-      TexOutput(_T("<B>"));
-    if (!start && (arg_no == 1))
-      TexOutput(_T("</B> "));  // This is the difference from param - one space!
+    const wxChar* pend = macroId == ltCPARAM ? 
+    	_T("</B> ") : _T("</B>");
+    if( arg_no == 1) {
+      if( start ) {
+	TexOutput(_T("<B>"));
+	if( CheckTypeRef() ) {
+	  TexOutput(pend);
+	  return false;
+	}
+      } else {
+	TexOutput(pend);   
+      }
+    }
     if (start && (arg_no == 2))
     {
       TexOutput(_T("<I>"));
@@ -1944,6 +2007,7 @@
     }
     break;
   }
+
   case ltHELPREF:
   case ltHELPREFN:
   case ltPOPREF:

 	  	 
