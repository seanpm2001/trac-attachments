--- grid.cpp_orig	Sat Sep  7 12:08:13 2002
+++ grid.cpp	Sun Sep  8 02:37:25 2002
@@ -1557,4 +1557,11 @@
 {
     wxRect rect = rectCell;
+    rect.Inflate(-1);
+
+    // erase only this cells background, overflow cells should have been erased
+    wxGridCellRenderer::Draw(grid, attr, dc, rectCell, row, col, isSelected);
+
+    int hAlign, vAlign;
+    attr.GetAlignment(&hAlign, &vAlign);
 
     if (attr.GetOverflow())
@@ -1562,6 +1569,8 @@
         int cols = grid.GetNumberCols();
         int best_width = GetBestSize(grid,attr,dc,row,col).GetWidth();
+        int overflowCols = 0;
         int cell_rows, cell_cols;
         attr.GetSize( &cell_rows, &cell_cols ); // shouldn't get here if <=0
+
         if ((best_width > rectCell.width) && (col < cols) && grid.GetTable())
         {
@@ -1577,19 +1586,43 @@
                     if (rect.width >= best_width) break;
                 }
-                else break;
+                else
+                {
+                    i--;
+                    break;
             }
         }
+            overflowCols = i - col - cell_cols;
+            if (overflowCols >= cols) overflowCols = cols - 1;
     }
 
-    // erase only this cells background, overflow cells should have been erased
-    wxGridCellRenderer::Draw(grid, attr, dc, rectCell, row, col, isSelected);
+        if (overflowCols > 0) // redraw overflow cells w/ proper hilight
+        {
+            wxRect clip = rect; 
 
-    // now we only have to draw the text
-    SetTextColoursAndFont(grid, attr, dc, isSelected);
+            // draw each overflow cell individually
+            int col_end = col+cell_cols+overflowCols;
+            if (col_end >= grid.GetNumberCols()) col_end = grid.GetNumberCols() - 1;
 
-    int hAlign, vAlign;
-    attr.GetAlignment(&hAlign, &vAlign);
+            for (int i = col+cell_cols; i <= col_end; i++)
+            {
+                clip.x += grid.GetColSize(i-1) - 1;
+                clip.width = grid.GetColSize(i) - 1;
+                dc.DestroyClippingRegion();
+                dc.SetClippingRegion(clip);
 
+                SetTextColoursAndFont(grid, attr, dc, grid.IsInSelection(row,i));
+                grid.DrawTextRectangle(dc, grid.GetCellValue(row, col),
+                                       rect, hAlign, vAlign);
+            }
+
+            rect = rectCell;            // just draw the single original cell
     rect.Inflate(-1);
+            rect.width++;
+            dc.DestroyClippingRegion(); // DrawTextRectangle sets it again
+        }
+    }
+
+    // now we only have to draw the text
+    SetTextColoursAndFont(grid, attr, dc, isSelected);
 
     grid.DrawTextRectangle(dc, grid.GetCellValue(row, col),
@@ -6307,9 +6340,9 @@
     if ( !m_numRows || !m_numCols ) return;
 
-    int i, j, k, l, numCells = cells.GetCount();
+    int numCells = cells.GetCount();
     int row, col, cell_rows, cell_cols;
     wxGridCellCoordsArray redrawCells;
 
-    for ( i = numCells-1; i >= 0;  i-- )
+    for (int i = numCells-1; i >= 0;  i-- )
     {
         row = cells[i].GetRow();
@@ -6322,5 +6355,5 @@
             wxGridCellCoords cell(row+cell_rows, col+cell_cols);
             bool marked = FALSE;
-            for ( j = 0;  j < numCells;  j++ )
+            for (int j = 0;  j < numCells;  j++ )
             {
                 if ( cell == cells[j] )
@@ -6333,5 +6366,5 @@
             {
                 int count = redrawCells.GetCount();
-                for (j = 0; j < count; j++)
+                for (int j = 0; j < count; j++)
                 {
                     if ( cell == redrawCells[j] )
@@ -6349,7 +6382,15 @@
         if (m_table && m_table->IsEmptyCell(row, col))
         {
-            for ( l = 0; l < cell_rows; l++ )
+            for (int l = 0; l < cell_rows; l++ )
             {
-                for (j = col-1; j >= 0; j--)
+                // find a cell in this row to left alreay marked for repaint
+                int left = col;
+                for (int k = 0; k < int(redrawCells.GetCount()); k++)
+                    if ((redrawCells[k].GetCol() < left) && (redrawCells[k].GetRow() == row))
+                        left=redrawCells[k].GetCol();
+
+                if (left == col) left = 0; // oh well
+
+                for (int j = col-1; j >= left; j--)
                 {
                     if (!m_table->IsEmptyCell(row+l, j))
@@ -6360,5 +6401,5 @@
                             bool marked = FALSE;
 
-                            for (k = 0; k < numCells; k++)
+                            for (int k = 0; k < numCells; k++)
                             {
                                 if ( cell == cells[k] )
@@ -6371,5 +6412,5 @@
                             {
                                 int count = redrawCells.GetCount();
-                                for (k = 0; k < count; k++)
+                                for (int k = 0; k < count; k++)
                                 {
                                     if ( cell == redrawCells[k] )
@@ -6392,5 +6433,5 @@
     numCells = redrawCells.GetCount();
 
-    for ( i = numCells - 1; i >= 0;  i-- )
+    for (int i = numCells - 1; i >= 0;  i-- )
     {
         DrawCell( dc, redrawCells[i] );
@@ -7123,4 +7164,11 @@
                 rect.y--;
 
+#if defined (__WXGTK__)
+            rect.x--;
+            rect.y--;
+            rect.width += 2;
+            rect.height += 3;
+#endif
+
             wxGridCellAttr* attr = GetCellAttr(row, col);
             wxGridCellEditor* editor = attr->GetEditor(this, row, col);
@@ -7142,30 +7190,33 @@
 
             // resize editor to overflow into righthand cells if allowed
+            wxCoord maxRight = rect.width;
+
             wxString value = GetCellValue(row, col);
-            if ( (value != wxEmptyString) && (attr->GetOverflow()) )
+            if (value != wxEmptyString)
             {
+                wxCoord y;
                 wxClientDC dc(m_gridWin);
-                wxCoord y = 0, best_width = 0;
                 dc.SetFont(attr->GetFont());
-                dc.GetTextExtent(value, &best_width, &y);
+                dc.GetTextExtent(value, &maxRight, &y);
+            }
 
-                int cell_rows, cell_cols;
-                attr->GetSize( &cell_rows, &cell_cols );
+            if (maxRight > m_gridWin->GetClientSize().GetWidth())
+                maxRight = m_gridWin->GetClientSize().GetWidth();
 
-                if ((best_width > rect.width) && (col < m_numCols) && m_table)
+            if ((maxRight > rect.width) && (col < m_numCols) && m_table)
                 {
                     int i;
                     for (i = col+cell_cols; i < m_numCols; i++)
                     {
-                        if (m_table->IsEmptyCell(row,i))
-                        {
+                    int c_rows, c_cols;
+                    GetCellSize( row, i, &c_rows, &c_cols ); // looks weird going over a multicell
+                    if (m_table->IsEmptyCell(row,i) && (rect.GetRight() < maxRight) && (c_cols == 1))
                             rect.width += GetColWidth(i);
-                            if (rect.width >= best_width) break;
-                        }
                         else
                             break;
                     }
+                if (rect.GetRight() > maxRight) rect.SetRight(maxRight-1);
                 }
-            }
+
             editor->SetSize( rect );
 

 	  	 
