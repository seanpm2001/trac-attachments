--- smapi.cpp	Fri Jan 10 19:02:46 2003
+++ ./contrib/src/net/smapi.cpp	Sun Mar 23 15:08:22 2003
@@ -146,10 +146,18 @@
     LPSTR pszProfileName = NULL;
     LPSTR pszPassword = NULL;
+    wxCharBuffer cbProfile(1),cbPassword(1);
     if (nProfileLength)
     {
 //        pszProfileName = T2A((LPTSTR) (LPCTSTR) sProfileName);
 //        pszPassword = T2A((LPTSTR) (LPCTSTR) sPassword);
+#ifndef UNICODE
         pszProfileName = (LPSTR) sProfileName.c_str();
         pszPassword = (LPSTR) sPassword.c_str();
+#else
+        cbProfile = sProfileName.mb_str();
+        cbPassword = sPassword.mb_str();
+        pszProfileName = cbProfile.data();
+        pszPassword = cbPassword.data();
+#endif
     }
     
@@ -253,5 +261,11 @@
     //Call the MAPIResolveName function
 //    LPSTR lpszAsciiName = T2A((LPTSTR) (LPCTSTR) sName);
+#ifndef UNICODE
     LPSTR lpszAsciiName = (LPSTR) sName.c_str();
+#else
+    wxCharBuffer cbName(1);
+    cbName = sName.mb_str();
+    LPSTR lpszAsciiName = cbName.data();
+#endif
     ULONG nError = m_data->m_lpfnMAPIResolveName(m_data->m_hSession, 0, lpszAsciiName, 0, 0, lppRecip);
     if (nError != SUCCESS_SUCCESS)
@@ -278,6 +292,14 @@
     MapiMessage mapiMessage;
     ZeroMemory(&mapiMessage, sizeof(mapiMessage));
+#ifndef UNICODE
     mapiMessage.lpszSubject = (LPSTR) message.m_subject.c_str();
     mapiMessage.lpszNoteText = (LPSTR) message.m_body.c_str();
+#else
+    wxCharBuffer cbSubject(1),cbBody(1),cbOriginator(1);
+    cbSubject = message.m_subject.mb_str();
+    cbBody = message.m_body.mb_str();
+    mapiMessage.lpszSubject = cbSubject.data();
+    mapiMessage.lpszNoteText = cbBody.data();
+#endif
 //    mapiMessage.lpszSubject = T2A((LPTSTR) (LPCTSTR) message.m_subject);
 //    mapiMessage.lpszNoteText = T2A((LPTSTR) (LPCTSTR) message.m_body);
@@ -296,5 +318,10 @@
         mapiMessage.lpOriginator->ulRecipClass = MAPI_ORIG;
         // TODO Do we have to call Resolve?
+#ifndef UNICODE
         mapiMessage.lpOriginator->lpszName = (LPSTR) message.m_from.c_str();
+#else
+        cbOriginator = message.m_from.mb_str();
+        mapiMessage.lpOriginator->lpszName = cbOriginator.data();
+#endif
     }
     
@@ -315,5 +342,5 @@
         {
             //Resolve worked, put the resolved name back into the sName
-            sName = lpTempRecip->lpszName;
+            sName = wxString(lpTempRecip->lpszName,wxConvCurrent);
 
             //Don't forget to free up the memory MAPI allocated for us
@@ -321,5 +348,9 @@
         }
         //recip.lpszName = T2A((LPTSTR) (LPCTSTR) sName);
+#ifndef UNICODE
         recip.lpszName = (LPSTR) sName.c_str();
+#else
+        recip.lpszName = sName.mb_str().release();
+#endif
 
         ++nRecipIndex;
@@ -340,5 +371,5 @@
         {
             //Resolve worked, put the resolved name back into the sName
-            sName = lpTempRecip->lpszName;
+            sName = wxString(lpTempRecip->lpszName,wxConvCurrent);
 
             //Don't forget to free up the memory MAPI allocated for us
@@ -346,5 +377,9 @@
         }
         //recip.lpszName = T2A((LPTSTR) (LPCTSTR) sName);
+#ifndef UNICODE
         recip.lpszName = (LPSTR) sName.c_str();
+#else
+        recip.lpszName = sName.mb_str().release();
+#endif
 
         ++nRecipIndex;
@@ -365,5 +400,5 @@
         {
             //Resolve worked, put the resolved name back into the sName
-            sName = lpTempRecip->lpszName;
+            sName = wxString(lpTempRecip->lpszName,wxConvCurrent);
 
             //Don't forget to free up the memory MAPI allocated for us
@@ -371,5 +406,9 @@
         }
         //recip.lpszName = T2A((LPTSTR) (LPCTSTR) sName);
+#ifndef UNICODE
         recip.lpszName = (LPSTR) sName.c_str();
+#else
+        recip.lpszName = sName.mb_str().release();
+#endif
 
         ++nRecipIndex;
@@ -396,5 +435,9 @@
             //file.lpszPathName = T2A((LPTSTR) (LPCTSTR) sFilename);
 
+#ifndef UNICODE
             file.lpszPathName = (LPSTR) sFilename.c_str();
+#else
+            file.lpszPathName = sFilename.mb_str().release();
+#endif
             //file.lpszFileName = file.lpszPathName;
             file.lpszFileName = NULL;
@@ -404,5 +447,9 @@
                 wxString& sTitle = message.m_attachmentTitles[i];
                 //file.lpszFileName = T2A((LPTSTR) (LPCTSTR) sTitle);
+#ifndef UNICODE
                 file.lpszFileName = (LPSTR) sTitle.c_str();
+#else
+                file.lpszFileName = sTitle.mb_str().release();
+#endif
             }
         }
@@ -424,8 +471,22 @@
     //Tidy up the Attachements
     if (nAttachmentSize)
+    {
+#ifdef UNICODE
+        for (int i = 0;i < nAttachmentSize;i++)
+        {
+            free(mapiMessage.lpFiles[i].lpszPathName);
+            free(mapiMessage.lpFiles[i].lpszFileName);
+        }
+#endif
         delete [] mapiMessage.lpFiles;
+    }
     
     //Free up the Recipients and Originator memory
+#ifdef UNICODE
+    for (int i = 0;i < nRecipIndex;i++)
+        free(mapiMessage.lpRecips[i].lpszName);
+#endif
     delete [] mapiMessage.lpRecips;
+
     delete mapiMessage.lpOriginator;
     
@@ -437,3 +498,2 @@
     return m_data->m_nLastError;
 }
-

 	  	 
