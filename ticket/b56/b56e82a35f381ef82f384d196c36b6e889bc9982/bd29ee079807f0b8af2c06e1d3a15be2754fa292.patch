Index: utils/configtool/src/configtooldoc.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWindows/utils/configtool/src/configtooldoc.cpp,v
retrieving revision 1.13
diff -u -r1.13 configtooldoc.cpp
--- utils/configtool/src/configtooldoc.cpp	2005/02/28 11:36:59	1.13
+++ utils/configtool/src/configtooldoc.cpp	2005/03/29 03:42:46
@@ -29,6 +29,7 @@
 #endif
 
 #include "wx/textfile.h"
+#include "wx/txtstrm.h"
 #include "wx/wfstream.h"
 #include "wx/config.h"
 #include "configtooldoc.h"
@@ -262,32 +263,36 @@
 /// Save the settings file
 bool ctConfigToolDoc::DoSave(const wxString& filename)
 {
-    wxFileOutputStream stream(filename);
-    if (!stream.Ok())
+    wxFileOutputStream osFile(filename);
+    if (!osFile.Ok())
         return false;
 
+    wxTextOutputStream stream(osFile);
+
     stream << wxT("<?xml version=\"1.0\" encoding=\"utf-8\"?>\n");
     stream << wxT("<settings xmlns=\"http://www.wxwidgets.org/wxs\" version=\"2.5.0.1\">");
 
-    DoSave(m_topItem, stream, 1);
+    DoSave(m_topItem, osFile, 1);
 
     stream << wxT("\n</settings>\n");
 
     return true;
 }
 
-inline static void OutputIndentation(wxOutputStream& stream, int indent)
+inline static void OutputIndentation(wxOutputStream& osFile, int indent)
 {
+    wxTextOutputStream stream(osFile);
     wxString str = wxT("\n");
     for (int i = 0; i < indent; i++)
-        str << wxT(' ') << wxT(' ');
+        str << wxT("  ");
     stream << str ;
 }
 
 /// Recursive helper function for file saving
-bool ctConfigToolDoc::DoSave(ctConfigItem* item, wxOutputStream& stream, int indent)
+bool ctConfigToolDoc::DoSave(ctConfigItem* item, wxOutputStream& osFile, int indent)
 {
-    OutputIndentation(stream, indent*2);
+    OutputIndentation(osFile, indent*2);
+    wxTextOutputStream stream(osFile);
 
     wxString name(item->GetName());
     wxString s;
@@ -313,12 +318,12 @@
 
     indent ++;
 
-    OutputIndentation(stream, indent*2);
+    OutputIndentation(osFile, indent*2);
     if (item->IsActive())
         stream << wxT("<active>1</active>");
     else
         stream << wxT("<active>0</active>");
-    OutputIndentation(stream, indent*2);
+    OutputIndentation(osFile, indent*2);
     if (item->IsEnabled())
         stream << wxT("<enabled>1</enabled>");
     else
@@ -329,7 +334,7 @@
     while (node)
     {
         ctProperty* prop = (ctProperty*) node->GetData();
-        OutputIndentation(stream, indent*2);
+        OutputIndentation(osFile, indent*2);
         stream << wxT("<") << prop->GetName() ;
         
         if (prop->IsCustom())
@@ -359,14 +364,14 @@
     while (node)
     {
         ctConfigItem* child = (ctConfigItem*) node->GetData();
-        DoSave(child, stream, indent);
+        DoSave(child, osFile, indent);
 
         node = node->GetNext();
     }
 
     indent --;
 
-    OutputIndentation(stream, indent*2);
+    OutputIndentation(osFile, indent*2);
     stream << wxT("</setting>");
 
     return true;
Index: utils/configtool/src/configtoolview.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWindows/utils/configtool/src/configtoolview.cpp,v
retrieving revision 1.10
diff -u -r1.10 configtoolview.cpp
--- utils/configtool/src/configtoolview.cpp	2005/02/01 20:44:05	1.10
+++ utils/configtool/src/configtoolview.cpp	2005/03/29 03:46:15
@@ -21,6 +21,7 @@
 #endif
 
 #include "wx/wfstream.h"
+#include "wx/txtstrm.h"
 #include "configtoolview.h"
 #include "configtooldoc.h"
 #include "configtree.h"
@@ -923,13 +924,14 @@
         wxString fullPath = dialog.GetPath();
         wxGetApp().GetSettings().m_lastSetupSaveDir = wxPathOnly(fullPath);
 
-        wxFileOutputStream stream(fullPath);
-        if (!stream.Ok())
+        wxFileOutputStream osFile(fullPath);
+        if (!osFile.Ok())
         {
             wxMessageBox(_("Sorry, could not save this file."), _("Save Setup File"), wxICON_EXCLAMATION|wxOK);
             return;
         }
 
+        wxTextOutputStream stream(osFile);
         stream << setupStr;
     }
 }
@@ -955,13 +957,14 @@
         wxString fullPath = dialog.GetPath();
         wxGetApp().GetSettings().m_lastSetupSaveDir = wxPathOnly(fullPath);
 
-        wxFileOutputStream stream(fullPath);
-        if (!stream.Ok())
+        wxFileOutputStream osFile(fullPath);
+        if (!osFile.Ok())
         {
             wxMessageBox(_("Sorry, could not save this file."), _("Save Configure Command File"), wxICON_EXCLAMATION|wxOK);
             return;
         }
 
+        wxTextOutputStream stream(osFile);
         stream << configureStr;
     }
 }

 	  	 
