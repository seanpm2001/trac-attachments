Index: include/wx/msw/webview_ie.h
===================================================================
--- include/wx/msw/webview_ie.h	(revision 70008)
+++ include/wx/msw/webview_ie.h	(working copy)
@@ -356,6 +356,35 @@
     wxSharedPtr<wxWebViewHandler> m_handler;
 };
 
+class wxWebViewIEUIHandler : public wxIDocHostUIHandler
+{
+public:
+    wxWebViewIEUIHandler();
+    virtual ~wxWebViewIEUIHandler();
+    //wxIDocHostUIHandler
+    HRESULT STDMETHODCALLTYPE GetHostInfo(DOCHOSTUIINFO *pInfo);
+    HRESULT STDMETHODCALLTYPE EnableModeless(BOOL fEnable);
+    HRESULT STDMETHODCALLTYPE FilterDataObject(IDataObject *pDO, IDataObject **ppDORet);
+    HRESULT STDMETHODCALLTYPE GetDropTarget(IDropTarget *pDropTarget, IDropTarget **ppDropTarget);
+    HRESULT STDMETHODCALLTYPE GetExternal(IDispatch **ppDispatch);
+    HRESULT STDMETHODCALLTYPE GetOptionKeyPath(LPOLESTR *pchKey, DWORD dw);
+    HRESULT STDMETHODCALLTYPE HideUI(void);
+    HRESULT STDMETHODCALLTYPE OnDocWindowActivate(BOOL fActivate);
+    HRESULT STDMETHODCALLTYPE OnFrameWindowActivate(BOOL fActivate);
+    HRESULT STDMETHODCALLTYPE ResizeBorder(LPCRECT prcBorder,IOleInPlaceUIWindow *pUIWindow,BOOL fFrameWindow);
+    HRESULT STDMETHODCALLTYPE ShowContextMenu(DWORD dwID,POINT *ppt,IUnknown *pcmdtReserved,IDispatch *pdispReserved);
+    HRESULT STDMETHODCALLTYPE ShowUI(DWORD dwID,IOleInPlaceActiveObject *pActiveObject,IOleCommandTarget *pCommandTarget,IOleInPlaceFrame *pFrame,IOleInPlaceUIWindow *pDoc);
+    HRESULT STDMETHODCALLTYPE TranslateAccelerator(LPMSG lpMsg,const GUID *pguidCmdGroup,DWORD nCmdID);
+    HRESULT STDMETHODCALLTYPE TranslateUrl(DWORD dwTranslate,OLECHAR *pchURLIn,OLECHAR **ppchURLOut);
+    HRESULT STDMETHODCALLTYPE UpdateUI(void);
+    //IUnknown
+    ULONG STDMETHODCALLTYPE AddRef();
+    HRESULT STDMETHODCALLTYPE QueryInterface(REFIID riid, void **ppvObject);
+    ULONG STDMETHODCALLTYPE Release();
+private:
+    ULONG m_refCount;
+};
+
 #endif // wxUSE_WEBVIEW && wxUSE_WEBVIEW_IE && defined(__WXMSW__)
 
 #endif // wxWebViewIE_H
Index: src/msw/webview_ie.cpp
===================================================================
--- src/msw/webview_ie.cpp	(revision 70008)
+++ src/msw/webview_ie.cpp	(working copy)
@@ -82,6 +82,7 @@
     m_webBrowser->put_RegisterAsDropTarget(VARIANT_TRUE);
 
     m_container = new wxActiveXContainer(this, IID_IWebBrowser2, m_webBrowser);
+    m_container->SetExternalUIHandler(new wxWebViewIEUIHandler);
 
     LoadURL(url);
     return true;
@@ -1198,4 +1199,174 @@
 
 }
 
+wxWebViewIEUIHandler::wxWebViewIEUIHandler()
+{
+    m_refCount = 0;
+}
+
+wxWebViewIEUIHandler::~wxWebViewIEUIHandler()
+{
+}
+
+HRESULT wxWebViewIEUIHandler::GetHostInfo(DOCHOSTUIINFO *pInfo)
+{
+    //don't show 3d border.
+    pInfo->dwFlags = DOCHOSTUIFLAG_NO3DBORDER;
+    return S_OK;
+}
+
+HRESULT wxWebViewIEUIHandler::EnableModeless(BOOL fEnable)
+{
+    wxUnusedVar(fEnable);
+    return E_NOTIMPL;
+}
+
+HRESULT wxWebViewIEUIHandler::FilterDataObject(IDataObject *pDO, IDataObject **ppDORet)
+{
+    wxUnusedVar(pDO);
+    wxUnusedVar(ppDORet);
+    return E_NOTIMPL;
+}
+
+HRESULT wxWebViewIEUIHandler::GetDropTarget(IDropTarget *pDropTarget,IDropTarget **ppDropTarget)
+{
+    wxUnusedVar(pDropTarget);
+    wxUnusedVar(ppDropTarget);
+    return E_NOTIMPL;
+}
+
+HRESULT wxWebViewIEUIHandler::GetExternal(IDispatch **ppDispatch)
+{
+    wxUnusedVar(ppDispatch);
+    return E_NOTIMPL;
+}
+
+HRESULT wxWebViewIEUIHandler::GetOptionKeyPath(LPOLESTR *pchKey,DWORD dw)
+{
+    wxUnusedVar(pchKey);
+    wxUnusedVar(dw);
+    return E_NOTIMPL;
+}
+
+HRESULT wxWebViewIEUIHandler::HideUI(void)
+{
+    return E_NOTIMPL;
+}
+
+HRESULT wxWebViewIEUIHandler::OnDocWindowActivate(BOOL fActivate)
+{
+    wxUnusedVar(fActivate);
+    return E_NOTIMPL;
+}
+
+HRESULT wxWebViewIEUIHandler::OnFrameWindowActivate(BOOL fActivate)
+{
+    wxUnusedVar(fActivate);
+    return E_NOTIMPL;
+}
+
+HRESULT wxWebViewIEUIHandler::ResizeBorder(LPCRECT prcBorder,IOleInPlaceUIWindow *pUIWindow,BOOL fFrameWindow)
+{
+    wxUnusedVar(prcBorder);
+    wxUnusedVar(pUIWindow);
+    wxUnusedVar(fFrameWindow);
+    return E_NOTIMPL;
+}
+
+HRESULT wxWebViewIEUIHandler::ShowContextMenu(DWORD dwID,POINT *ppt,IUnknown *pcmdtReserved,IDispatch *pdispReserved)
+{
+    wxUnusedVar(dwID);
+    wxUnusedVar(ppt);
+    wxUnusedVar(pcmdtReserved);
+    wxUnusedVar(pdispReserved);
+    //we return S_OK do disable menu for now, but option should be
+    //given to edit this menu.
+    //return E_NOTIMPL;
+    return S_OK;
+}
+
+HRESULT wxWebViewIEUIHandler::ShowUI(DWORD dwID,IOleInPlaceActiveObject *pActiveObject,IOleCommandTarget *pCommandTarget,IOleInPlaceFrame *pFrame,IOleInPlaceUIWindow *pDoc)
+{
+    wxUnusedVar(dwID);
+    wxUnusedVar(pActiveObject);
+    wxUnusedVar(pCommandTarget);
+    wxUnusedVar(pFrame);
+    wxUnusedVar(pDoc);
+    return S_FALSE;
+}
+
+HRESULT wxWebViewIEUIHandler::TranslateAccelerator(LPMSG lpMsg,const GUID *pguidCmdGroup,DWORD nCmdID)
+{
+    if(lpMsg && lpMsg->message == WM_KEYDOWN)
+    {
+        //control is down?
+        if((GetKeyState(VK_CONTROL) & 0x8000 ))
+        {
+            //skip CTRL-N, CTRL-F and CTRL-P
+            if(lpMsg->wParam == 'N' || lpMsg->wParam == 'P' || lpMsg->wParam == 'F')
+            {
+                return S_OK;
+            }
+        }
+        //skip F5
+        if(lpMsg->wParam == VK_F5)
+        {
+            return S_OK;
+        }
+    }
+
+    wxUnusedVar(pguidCmdGroup);
+    wxUnusedVar(nCmdID);
+    return E_NOTIMPL;
+}
+
+HRESULT wxWebViewIEUIHandler::TranslateUrl(DWORD dwTranslate,OLECHAR *pchURLIn,OLECHAR **ppchURLOut)
+{
+    wxUnusedVar(dwTranslate);
+    wxUnusedVar(pchURLIn);
+    wxUnusedVar(ppchURLOut);
+    return E_NOTIMPL;
+}
+
+HRESULT wxWebViewIEUIHandler::UpdateUI(void)
+{
+    return E_NOTIMPL;
+}
+
+ULONG wxWebViewIEUIHandler::AddRef(void)
+{
+    m_refCount++;
+    return m_refCount;
+}
+
+HRESULT wxWebViewIEUIHandler::QueryInterface(REFIID riid, void **ppvObject)
+{
+    if ((riid == IID_IUnknown) || (riid == IID_IDocHostUIHandler))
+    {
+        *ppvObject = (wxIDocHostUIHandler*)this;
+        AddRef();
+        return S_OK;
+    }
+    else
+    {
+        *ppvObject = NULL;
+        return E_POINTER;
+    }
+}
+
+ULONG wxWebViewIEUIHandler::Release(void)
+{
+    m_refCount--;
+    if (m_refCount > 0)
+    {
+        return m_refCount;
+    }
+    else
+    {
+        delete this;
+        return 0;
+    }
+
+}
+
 #endif // wxUSE_WEBVIEW && wxUSE_WEBVIEW_IE
