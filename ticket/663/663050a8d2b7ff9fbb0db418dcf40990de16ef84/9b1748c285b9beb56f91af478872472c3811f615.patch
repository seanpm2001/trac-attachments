diff -uNr wxWidgets-orig/include/wx/gtk/listbox.h wxWidgets-mine/include/wx/gtk/listbox.h
--- wxWidgets-orig/include/wx/gtk/listbox.h	2014-10-06 23:34:02.000000000 +0200
+++ wxWidgets-mine/include/wx/gtk/listbox.h	2015-10-07 19:42:19.639165000 +0200
@@ -74,6 +74,8 @@
 
     virtual void EnsureVisible(int n);
 
+    long GetTopItem() const;
+
     virtual void Update();
 
     static wxVisualAttributes
diff -uNr wxWidgets-orig/include/wx/listbox.h wxWidgets-mine/include/wx/listbox.h
--- wxWidgets-orig/include/wx/listbox.h	2014-10-06 23:34:04.000000000 +0200
+++ wxWidgets-mine/include/wx/listbox.h	2015-10-07 19:42:16.706359800 +0200
@@ -72,6 +72,8 @@
     // necessary
     virtual void EnsureVisible(int n);
 
+    virtual int GetCountPerPage() const; 
+
     // a combination of Append() and EnsureVisible(): appends the item to the
     // listbox and ensures that it is visible i.e. not scrolled out of view
     void AppendAndEnsureVisible(const wxString& s);
@@ -133,6 +135,8 @@
     // single selection mode on platforms other than MSW).
     void UpdateOldSelections();
 
+    wxCoord GetLineHeight() const;
+
 private:
     wxDECLARE_NO_COPY_CLASS(wxListBoxBase);
 };
diff -uNr wxWidgets-orig/include/wx/msw/listbox.h wxWidgets-mine/include/wx/msw/listbox.h
--- wxWidgets-orig/include/wx/msw/listbox.h	2014-10-06 23:34:04.000000000 +0200
+++ wxWidgets-mine/include/wx/msw/listbox.h	2015-10-07 19:46:35.846814200 +0200
@@ -93,6 +93,9 @@
     int HitTest(const wxPoint& pt) const { return DoHitTestList(pt); }
     int HitTest(wxCoord x, wxCoord y) const { return DoHitTestList(wxPoint(x, y)); }
 
+    long GetTopItem() const;
+    virtual int GetCountPerPage() const;
+	    
     // ownerdrawn wxListBox and wxCheckListBox support
 #if wxUSE_OWNER_DRAWN
     // override base class virtuals
diff -uNr wxWidgets-orig/include/wx/osx/core/private.h wxWidgets-mine/include/wx/osx/core/private.h
--- wxWidgets-orig/include/wx/osx/core/private.h	2014-10-06 23:34:04.000000000 +0200
+++ wxWidgets-mine/include/wx/osx/core/private.h	2015-10-07 19:42:21.557968300 +0200
@@ -621,6 +621,7 @@
     // display
 
     virtual void            ListScrollTo( unsigned int n ) = 0;
+    virtual long            ListGetTopItem() const = 0;
     virtual void            UpdateLine( unsigned int n, wxListWidgetColumn* col = NULL ) = 0;
     virtual void            UpdateLineToEnd( unsigned int n) = 0;
 
diff -uNr wxWidgets-orig/include/wx/osx/listbox.h wxWidgets-mine/include/wx/osx/listbox.h
--- wxWidgets-orig/include/wx/osx/listbox.h	2014-10-06 23:34:04.000000000 +0200
+++ wxWidgets-mine/include/wx/osx/listbox.h	2015-10-07 19:42:21.136767600 +0200
@@ -108,6 +108,8 @@
 
     virtual void EnsureVisible(int n);
 
+    long GetTopItem() const;
+
     virtual wxVisualAttributes GetDefaultAttributes() const
     {
         return GetClassDefaultAttributes(GetWindowVariant());
diff -uNr wxWidgets-orig/src/common/lboxcmn.cpp wxWidgets-mine/src/common/lboxcmn.cpp
--- wxWidgets-orig/src/common/lboxcmn.cpp	2014-10-06 23:34:04.000000000 +0200
+++ wxWidgets-mine/src/common/lboxcmn.cpp	2015-10-07 19:43:27.964085100 +0200
@@ -33,6 +33,15 @@
     #include "wx/log.h"
 #endif
 
+// the spacing between the lines (in report mode)
+static const int LINE_SPACING = 0;
+
+#ifdef __WXGTK__
+static const int EXTRA_HEIGHT = 6;
+#else
+static const int EXTRA_HEIGHT = 4;
+#endif
+
 extern WXDLLEXPORT_DATA(const char) wxListBoxNameStr[] = "listBox";
 
 // ============================================================================
@@ -340,4 +349,23 @@
     // call SetFirstItem() but this is probably even more stupid)
 }
 
+wxCoord wxListBoxBase::GetLineHeight() const
+{
+    wxListBoxBase *self = wxConstCast(this, wxListBoxBase);
+
+    wxClientDC dc( self );
+    dc.SetFont( GetFont() );
+
+    wxCoord y;
+    dc.GetTextExtent(wxT("H"), NULL, &y);
+
+    y += EXTRA_HEIGHT;
+    
+    return y + LINE_SPACING;
+}
+
+int wxListBoxBase::GetCountPerPage() const
+{
+    return GetClientSize().y / GetLineHeight();
+}	
 #endif // wxUSE_LISTBOX
diff -uNr wxWidgets-orig/src/gtk/listbox.cpp wxWidgets-mine/src/gtk/listbox.cpp
--- wxWidgets-orig/src/gtk/listbox.cpp	2014-10-06 23:34:04.000000000 +0200
+++ wxWidgets-mine/src/gtk/listbox.cpp	2015-10-07 19:43:37.261701500 +0200
@@ -771,6 +771,20 @@
     DoScrollToCell(n, 0.5, 0);
 }
 
+long wxListBox::GetTopItem() const
+{
+    GtkTreePath *start;
+    long idx = 0;
+    
+    if(gtk_tree_view_get_visible_range(m_treeview, &start, NULL)) {
+        gint *ptr = gtk_tree_path_get_indices(start);	    
+        if(ptr) idx = *ptr;
+	gtk_tree_path_free(start);
+    }
+    
+    return idx;
+}
+
 // ----------------------------------------------------------------------------
 // hittest
 // ----------------------------------------------------------------------------
diff -uNr wxWidgets-orig/src/msw/listbox.cpp wxWidgets-mine/src/msw/listbox.cpp
--- wxWidgets-orig/src/msw/listbox.cpp	2014-10-06 23:34:04.000000000 +0200
+++ wxWidgets-mine/src/msw/listbox.cpp	2015-10-07 19:45:36.380310300 +0200
@@ -221,6 +221,20 @@
 // implementation of wxListBoxBase methods
 // ----------------------------------------------------------------------------
 
+long wxListBox::GetTopItem() const
+{	
+    return SendMessage(GetHwnd(), LB_GETTOPINDEX, 0, 0);	
+}
+    
+int wxListBox::GetCountPerPage() const
+{
+    RECT r;
+    
+    ::GetClientRect(GetHwnd(), &r);
+    	
+    return (r.bottom - r.top) / SendMessage(GetHwnd(), LB_GETITEMHEIGHT, 0, 0);
+}
+
 void wxListBox::DoSetFirstItem(int N)
 {
     wxCHECK_RET( IsValid(N),
diff -uNr wxWidgets-orig/src/osx/cocoa/listbox.mm wxWidgets-mine/src/osx/cocoa/listbox.mm
--- wxWidgets-orig/src/osx/cocoa/listbox.mm	2014-10-06 23:34:06.000000000 +0200
+++ wxWidgets-mine/src/osx/cocoa/listbox.mm	2015-10-07 19:43:36.372499900 +0200
@@ -131,6 +131,8 @@
 
     virtual void            ListScrollTo( unsigned int n ) ;
 
+    virtual long            ListGetTopItem() const;
+
     // accessing content
 
     virtual unsigned int    ListGetCount() const ;
@@ -536,7 +538,14 @@
     [m_tableView scrollRowToVisible:n];
 }
 
-
+long wxListWidgetCocoaImpl::ListGetTopItem() const
+{
+     NSScrollView *scrollView = [m_tableView enclosingScrollView];
+     NSRect visibleRect = scrollView.contentView.visibleRect;
+     NSRange range = [m_tableView rowsInRect:visibleRect];		
+     return range.location;
+}
+	
 void wxListWidgetCocoaImpl::UpdateLine( unsigned int WXUNUSED(n), wxListWidgetColumn* WXUNUSED(col) )
 {
     // TODO optimize
diff -uNr wxWidgets-orig/src/osx/listbox_osx.cpp wxWidgets-mine/src/osx/listbox_osx.cpp
--- wxWidgets-orig/src/osx/listbox_osx.cpp	2014-10-06 23:34:06.000000000 +0200
+++ wxWidgets-mine/src/osx/listbox_osx.cpp	2015-10-07 19:43:36.013699300 +0200
@@ -145,6 +145,11 @@
     GetListPeer()->ListScrollTo( n );
 }
 
+long wxListBox::GetTopItem() const
+{
+    return GetListPeer()->ListGetTopItem();
+}
+		
 void wxListBox::DoDeleteOneItem(unsigned int n)
 {
     wxCHECK_RET( IsValid(n), wxT("invalid index in wxListBox::Delete") );
