 samples/grid/griddemo.cpp     | 12 ++++++------
 samples/propgrid/tests.cpp    |  3 ++-
 samples/richtext/richtext.cpp |  4 ++--
 samples/splitter/splitter.cpp |  3 +--
 src/common/tarstrm.cpp        |  2 +-
 src/common/valgen.cpp         |  4 ++--
 src/propgrid/props.cpp        |  2 +-
 7 files changed, 15 insertions(+), 15 deletions(-)

diff --git a/samples/grid/griddemo.cpp b/samples/grid/griddemo.cpp
index 20eb366..b5ae580 100644
--- a/samples/grid/griddemo.cpp
+++ b/samples/grid/griddemo.cpp
@@ -512,15 +512,15 @@ GridFrame::GridFrame()
     // Some numeric columns with different formatting.
     grid->SetColFormatFloat(6);
     grid->SetCellValue(0, 6, "Default\nfloat format");
-    grid->SetCellValue(1, 6, wxString::Format(wxT("%g"), 3.1415));
-    grid->SetCellValue(2, 6, wxString::Format(wxT("%g"), 1415.0));
-    grid->SetCellValue(3, 6, wxString::Format(wxT("%g"), 12345.67890));
+    grid->SetCellValue(1, 6, wxString::FromDouble(3.1415));
+    grid->SetCellValue(2, 6, wxString::FromDouble(1415.0));
+    grid->SetCellValue(3, 6, wxString::FromDouble(12345.67890));
 
     grid->SetColFormatFloat(7, 6, 2);
     grid->SetCellValue(0, 7, "Width 6\nprecision 2");
-    grid->SetCellValue(1, 7, wxString::Format(wxT("%g"), 3.1415));
-    grid->SetCellValue(2, 7, wxString::Format(wxT("%g"), 1415.0));
-    grid->SetCellValue(3, 7, wxString::Format(wxT("%g"), 12345.67890));
+    grid->SetCellValue(1, 7, wxString::FromDouble(3.1415));
+    grid->SetCellValue(2, 7, wxString::FromDouble(1415.0));
+    grid->SetCellValue(3, 7, wxString::FromDouble(12345.67890));
 
     grid->SetColFormatCustom(8,
             wxString::Format("%s:%i,%i,%s", wxGRID_VALUE_FLOAT, -1, 4, "g"));
diff --git a/samples/propgrid/tests.cpp b/samples/propgrid/tests.cpp
index def59ef..39436dc 100644
--- a/samples/propgrid/tests.cpp
+++ b/samples/propgrid/tests.cpp
@@ -21,6 +21,7 @@
 #include <wx/propgrid/propgrid.h>
 #include <wx/propgrid/advprops.h>
 #include <wx/propgrid/manager.h>
+#include <wx/numformatter.h>
 
 #include "propgrid.h"
 #include "sampleprops.h"
@@ -913,7 +914,7 @@ bool FormMain::RunTests( bool fullTest, bool interactive )
         RT_START_TEST(DoubleToString)
 
         // Locale-specific decimal separator
-        wxString sep = wxString::Format(wxT("%g"), 1.1)[1];
+        wxString sep = wxNumberFormatter::GetDecimalSeparator();
 
         wxString s;
 
diff --git a/samples/richtext/richtext.cpp b/samples/richtext/richtext.cpp
index a78e963..4eb5794 100644
--- a/samples/richtext/richtext.cpp
+++ b/samples/richtext/richtext.cpp
@@ -2131,7 +2131,7 @@ void MyFrame::OnPageSetup(wxCommandEvent& WXUNUSED(event))
 
 void MyFrame::OnSetFontScale(wxCommandEvent& WXUNUSED(event))
 {
-    wxString value = wxString::Format(wxT("%g"), m_richTextCtrl->GetFontScale());
+    wxString value = wxString::FromDouble(m_richTextCtrl->GetFontScale());
     wxString text = wxGetTextFromUser(wxT("Enter a text scale factor:"), wxT("Text Scale Factor"), value, wxGetTopLevelParent(this));
     if (!text.IsEmpty() && value != text)
     {
@@ -2143,7 +2143,7 @@ void MyFrame::OnSetFontScale(wxCommandEvent& WXUNUSED(event))
 
 void MyFrame::OnSetDimensionScale(wxCommandEvent& WXUNUSED(event))
 {
-    wxString value = wxString::Format(wxT("%g"), m_richTextCtrl->GetDimensionScale());
+    wxString value = wxString::FromDouble(m_richTextCtrl->GetDimensionScale());
     wxString text = wxGetTextFromUser(wxT("Enter a dimension scale factor:"), wxT("Dimension Scale Factor"), value, wxGetTopLevelParent(this));
     if (!text.IsEmpty() && value != text)
     {
diff --git a/samples/splitter/splitter.cpp b/samples/splitter/splitter.cpp
index 1eae2c9..12724de 100644
--- a/samples/splitter/splitter.cpp
+++ b/samples/splitter/splitter.cpp
@@ -429,8 +429,7 @@ void MyFrame::OnSetMinSize(wxCommandEvent& WXUNUSED(event) )
 
 void MyFrame::OnSetGravity(wxCommandEvent& WXUNUSED(event) )
 {
-    wxString str;
-    str.Printf( wxT("%g"), m_splitter->GetSashGravity());
+    wxString str = wxString::FromDouble(m_splitter->GetSashGravity());
 #if wxUSE_TEXTDLG
     str = wxGetTextFromUser(wxT("Enter sash gravity (0,1):"), wxT(""), str, this);
 #endif
diff --git a/src/common/tarstrm.cpp b/src/common/tarstrm.cpp
index 944835e..26404ed 100644
--- a/src/common/tarstrm.cpp
+++ b/src/common/tarstrm.cpp
@@ -1429,7 +1429,7 @@ void wxTarOutputStream::SetHeaderDate(const wxString& key,
     {
         wxString str;
         if (ll >= LONG_MIN && ll <= LONG_MAX) {
-            str.Printf(wxT("%g"), ll.ToLong() / 1000.0);
+            str = wxString::FromDouble(ll.ToLong() / 1000.0);
         } else {
             str = ll.ToString();
             str.insert(str.end() - 3, '.');
diff --git a/src/common/valgen.cpp b/src/common/valgen.cpp
index 3f09530..29106f8 100644
--- a/src/common/valgen.cpp
+++ b/src/common/valgen.cpp
@@ -349,12 +349,12 @@ bool wxGenericValidator::TransferToWindow(void)
         }
         else if (m_pFloat)
         {
-            pControl->SetValue(wxString::Format(wxT("%g"), *m_pFloat));
+            pControl->SetValue(wxString::FromDouble(*m_pFloat));
             return true;
         }
         else if (m_pDouble)
         {
-            pControl->SetValue(wxString::Format(wxT("%g"), *m_pDouble));
+            pControl->SetValue(wxString::FromDouble(*m_pDouble));
             return true;
         }
     } else
diff --git a/src/propgrid/props.cpp b/src/propgrid/props.cpp
index cf5d557..a301d29 100644
--- a/src/propgrid/props.cpp
+++ b/src/propgrid/props.cpp
@@ -197,7 +197,7 @@ wxNumericPropertyValidator::
         arr.Add(wxS("e")); arr.Add(wxS("E"));
 
         // Use locale-specific decimal point
-        arr.Add(wxString::Format(wxS("%g"), 1.1)[1]);
+        arr.Add(wxNumberFormatter::GetDecimalSeparator());
     }
 
     SetIncludes(arr);
