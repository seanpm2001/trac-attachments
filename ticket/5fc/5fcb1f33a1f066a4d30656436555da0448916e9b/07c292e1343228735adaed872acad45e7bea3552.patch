 include/wx/generic/grideditors.h       |  2 +-
 include/wx/richtext/richtextxml.h      |  4 ++--
 include/wx/string.h                    |  4 +++-
 interface/wx/string.h                  | 10 ++++++++++
 src/common/fileconf.cpp                |  2 +-
 src/common/numformatter.cpp            |  2 +-
 src/common/string.cpp                  |  6 ++++++
 src/common/textcmn.cpp                 |  2 +-
 src/common/xti.cpp                     |  4 ++--
 src/generic/grideditors.cpp            |  4 ++--
 src/generic/spinctlg.cpp               |  2 +-
 src/msw/iniconf.cpp                    |  2 +-
 src/richtext/richtextindentspage.cpp   |  6 +++---
 src/richtext/richtextliststylepage.cpp |  6 +++---
 src/richtext/richtextxml.cpp           |  2 +-
 15 files changed, 38 insertions(+), 20 deletions(-)

diff --git a/include/wx/generic/grideditors.h b/include/wx/generic/grideditors.h
index faa1007..b214d31 100644
--- a/include/wx/generic/grideditors.h
+++ b/include/wx/generic/grideditors.h
@@ -151,7 +151,7 @@ protected:
 
     // string representation of our value
     wxString GetString() const
-        { return wxString::Format(wxT("%ld"), m_value); }
+        { return wxString::FromLong(m_value); }
 
 private:
     int m_min,
diff --git a/include/wx/richtext/richtextxml.h b/include/wx/richtext/richtextxml.h
index 9557d5d..d80dd70 100644
--- a/include/wx/richtext/richtextxml.h
+++ b/include/wx/richtext/richtextxml.h
@@ -50,7 +50,7 @@ public:
     static wxColour HexStringToColour(const wxString& hex);
 
     static wxString MakeString(const int& v) { return wxString::Format(wxT("%d"), v); }
-    static wxString MakeString(const long& v) { return wxString::Format(wxT("%ld"), v); }
+    static wxString MakeString(const long& v) { return wxString::FromLong(v); }
     static wxString MakeString(const double& v) { return wxString::Format(wxT("%.2f"), (float) v); }
     static wxString MakeString(const wxString& s) { return s; }
     static wxString MakeString(const wxColour& col) { return wxT("#") + ColourToHexString(col); }
@@ -100,7 +100,7 @@ public:
     void OutputStringEnt(wxOutputStream& stream, const wxString& str);
     
     static void AddString(wxString& str, const int& v) { str << wxString::Format(wxT("%d"), v); }
-    static void AddString(wxString& str, const long& v) { str << wxString::Format(wxT("%ld"), v); }
+    static void AddString(wxString& str, const long& v) { str << wxString::FromLong(v); }
     static void AddString(wxString& str, const double& v) { str << wxString::Format(wxT("%.2f"), (float) v); }
     static void AddString(wxString& str, const wxChar* s) { str << s; }
     static void AddString(wxString& str, const wxString& s) { str << s; }
diff --git a/include/wx/string.h b/include/wx/string.h
index c23586e..4f7b5df 100644
--- a/include/wx/string.h
+++ b/include/wx/string.h
@@ -1957,7 +1957,7 @@ public:
     { return (*this) << Format(wxT("%u"), ui); }
       // insert a long into string
   wxString& operator<<(long l)
-    { return (*this) << Format(wxT("%ld"), l); }
+    { return (*this) << FromLong(l); }
       // insert an unsigned long into string
   wxString& operator<<(unsigned long ul)
     { return (*this) << Format(wxT("%lu"), ul); }
@@ -2173,6 +2173,8 @@ public:
     // in C locale
   static wxString FromCDouble(double val, int precision = -1);
 
+  static wxString FromLong(long val);
+
   // formatted input/output
     // as sprintf(), returns the number of characters written or < 0 on error
     // (take 'this' into account in attribute parameter count)
diff --git a/interface/wx/string.h b/interface/wx/string.h
index fbd4e45..f3dd603 100644
--- a/interface/wx/string.h
+++ b/interface/wx/string.h
@@ -1814,6 +1814,16 @@ public:
      */
     static wxString FromDouble(double val, int precision = -1);
 
+    /**
+        Returns a string with the textual representation of the number.
+        This function behaves as a simple wrapper for @code wxString::Format("%ld", val) @endcode.
+
+        @param val
+            The value to format.
+        @since 3.1.0
+     */
+    static wxString FromLong(long val);
+
     //@{
     /**
         Converts C string encoded in UTF-8 to wxString.
diff --git a/src/common/fileconf.cpp b/src/common/fileconf.cpp
index ed884fd..7e34206 100644
--- a/src/common/fileconf.cpp
+++ b/src/common/fileconf.cpp
@@ -982,7 +982,7 @@ bool wxFileConfig::DoWriteString(const wxString& key, const wxString& szValue)
 
 bool wxFileConfig::DoWriteLong(const wxString& key, long lValue)
 {
-  return Write(key, wxString::Format(wxT("%ld"), lValue));
+  return Write(key, wxString::FromLong(lValue));
 }
 
 #if wxUSE_BASE64
diff --git a/src/common/numformatter.cpp b/src/common/numformatter.cpp
index 2428ef3..ada7b0a 100644
--- a/src/common/numformatter.cpp
+++ b/src/common/numformatter.cpp
@@ -195,7 +195,7 @@ wxString wxNumberFormatter::PostProcessIntString(wxString s, int style)
 
 wxString wxNumberFormatter::ToString(long val, int style)
 {
-    return PostProcessIntString(wxString::Format("%ld", val), style);
+    return PostProcessIntString(wxString::FromLong(val), style);
 }
 
 #ifdef wxHAS_LONG_LONG_T_DIFFERENT_FROM_LONG
diff --git a/src/common/string.cpp b/src/common/string.cpp
index 930b488..4da6ebeb 100644
--- a/src/common/string.cpp
+++ b/src/common/string.cpp
@@ -1874,6 +1874,12 @@ wxString wxString::FromCDouble(double val, int precision)
     return s;
 }
 
+//static
+wxString wxString::FromLong(long val)
+{
+    return wxString::Format(wxT("%ld"), val);
+}
+
 // ---------------------------------------------------------------------------
 // formatted output
 // ---------------------------------------------------------------------------
diff --git a/src/common/textcmn.cpp b/src/common/textcmn.cpp
index baefa1c..f5c433c 100644
--- a/src/common/textcmn.cpp
+++ b/src/common/textcmn.cpp
@@ -1012,7 +1012,7 @@ wxTextCtrl& wxTextCtrlBase::operator<<(int i)
 
 wxTextCtrl& wxTextCtrlBase::operator<<(long l)
 {
-    return *this << wxString::Format("%ld", l);
+    return *this << wxString::FromLong(l);
 }
 
 // ----------------------------------------------------------------------------
diff --git a/src/common/xti.cpp b/src/common/xti.cpp
index e7dc6d1..5c4da4b 100644
--- a/src/common/xti.cpp
+++ b/src/common/xti.cpp
@@ -186,7 +186,7 @@ template<> void wxStringReadValue(const wxString &s, long &data )
 
 template<> void wxStringWriteValue(wxString &s, const long &data )
 {
-    s = wxString::Format(wxT("%ld"), data );
+    s = wxString::FromLong(data );
 }
 
 // unsigned long
@@ -198,7 +198,7 @@ template<> void wxStringReadValue(const wxString &s, unsigned long &data )
 
 template<> void wxStringWriteValue(wxString &s, const unsigned long &data )
 {
-    s = wxString::Format(wxT("%ld"), data );
+    s = wxString::FromLong(data );
 }
 
 #ifdef wxLongLong_t
diff --git a/src/generic/grideditors.cpp b/src/generic/grideditors.cpp
index 4cc103c..ef31ebe 100644
--- a/src/generic/grideditors.cpp
+++ b/src/generic/grideditors.cpp
@@ -786,7 +786,7 @@ void wxGridCellNumberEditor::ApplyEdit(int row, int col, wxGrid* grid)
     if ( table->CanSetValueAs(row, col, wxGRID_VALUE_NUMBER) )
         table->SetValueAsLong(row, col, m_value);
     else
-        table->SetValue(row, col, wxString::Format("%ld", m_value));
+        table->SetValue(row, col, wxString::FromLong(m_value));
 }
 
 void wxGridCellNumberEditor::Reset()
@@ -1692,7 +1692,7 @@ void wxGridCellEnumEditor::ApplyEdit(int row, int col, wxGrid* grid)
     if ( table->CanSetValueAs(row, col, wxGRID_VALUE_NUMBER) )
         table->SetValueAsLong(row, col, m_index);
     else
-        table->SetValue(row, col, wxString::Format("%ld", m_index));
+        table->SetValue(row, col, wxString::FromLong(m_index));
 }
 
 #endif // wxUSE_COMBOBOX
diff --git a/src/generic/spinctlg.cpp b/src/generic/spinctlg.cpp
index f48ff32..dae834b 100644
--- a/src/generic/spinctlg.cpp
+++ b/src/generic/spinctlg.cpp
@@ -654,7 +654,7 @@ wxString wxSpinCtrl::DoValueToText(double val)
             wxFALLTHROUGH;
 
         case 10:
-            return wxString::Format("%ld", static_cast<long>(val));
+            return wxString::FromLong(static_cast<long>(val));
     }
 }
 
diff --git a/src/msw/iniconf.cpp b/src/msw/iniconf.cpp
index 34748ac..a21298c 100644
--- a/src/msw/iniconf.cpp
+++ b/src/msw/iniconf.cpp
@@ -358,7 +358,7 @@ bool wxIniConfig::DoWriteString(const wxString& szKey, const wxString& szValue)
 
 bool wxIniConfig::DoWriteLong(const wxString& szKey, long lValue)
 {
-  return Write(szKey, wxString::Format(wxT("%ld"), lValue));
+  return Write(szKey, wxString::FromLong(lValue));
 }
 
 bool wxIniConfig::DoReadBinary(const wxString& WXUNUSED(key),
diff --git a/src/richtext/richtextindentspage.cpp b/src/richtext/richtextindentspage.cpp
index b694c6b..f71cb50 100644
--- a/src/richtext/richtextindentspage.cpp
+++ b/src/richtext/richtextindentspage.cpp
@@ -482,8 +482,8 @@ bool wxRichTextIndentsSpacingPage::TransferDataToWindow()
 
     if (attr->HasLeftIndent())
     {
-        wxString leftIndent(wxString::Format(wxT("%ld"), attr->GetLeftIndent() + attr->GetLeftSubIndent()));
-        wxString leftFirstIndent(wxString::Format(wxT("%ld"), attr->GetLeftIndent()));
+        wxString leftIndent(wxString::FromLong(attr->GetLeftIndent() + attr->GetLeftSubIndent()));
+        wxString leftFirstIndent(wxString::FromLong(attr->GetLeftIndent()));
 
         m_indentLeft->SetValue(leftIndent);
         m_indentLeftFirst->SetValue(leftFirstIndent);
@@ -496,7 +496,7 @@ bool wxRichTextIndentsSpacingPage::TransferDataToWindow()
 
     if (attr->HasRightIndent())
     {
-        wxString rightIndent(wxString::Format(wxT("%ld"), attr->GetRightIndent()));
+        wxString rightIndent(wxString::FromLong(attr->GetRightIndent()));
 
         m_indentRight->SetValue(rightIndent);
     }
diff --git a/src/richtext/richtextliststylepage.cpp b/src/richtext/richtextliststylepage.cpp
index 4296f56..605b896 100644
--- a/src/richtext/richtextliststylepage.cpp
+++ b/src/richtext/richtextliststylepage.cpp
@@ -738,8 +738,8 @@ void wxRichTextListStylePage::DoTransferDataToWindow()
 
     if (attr->HasLeftIndent())
     {
-        wxString leftIndent(wxString::Format(wxT("%ld"), attr->GetLeftIndent() + attr->GetLeftSubIndent()));
-        wxString leftFirstIndent(wxString::Format(wxT("%ld"), attr->GetLeftIndent()));
+        wxString leftIndent(wxString::FromLong(attr->GetLeftIndent() + attr->GetLeftSubIndent()));
+        wxString leftFirstIndent(wxString::FromLong(attr->GetLeftIndent()));
 
         m_indentLeft->SetValue(leftIndent);
         m_indentLeftFirst->SetValue(leftFirstIndent);
@@ -752,7 +752,7 @@ void wxRichTextListStylePage::DoTransferDataToWindow()
 
     if (attr->HasRightIndent())
     {
-        wxString rightIndent(wxString::Format(wxT("%ld"), attr->GetRightIndent()));
+        wxString rightIndent(wxString::FromLong(attr->GetRightIndent()));
 
         m_indentRight->SetValue(rightIndent);
     }
diff --git a/src/richtext/richtextxml.cpp b/src/richtext/richtextxml.cpp
index d470d69..4c25b30 100644
--- a/src/richtext/richtextxml.cpp
+++ b/src/richtext/richtextxml.cpp
@@ -2030,7 +2030,7 @@ void wxRichTextXMLHelper::AddAttribute(wxString& str, const wxString& name, cons
 
 void wxRichTextXMLHelper::AddAttribute(wxString& str, const wxString& name, const long& v)
 {
-    str << wxT(" ") << name << wxT("=\"") << wxString::Format(wxT("%ld"), v) << wxT("\"");
+    str << wxT(" ") << name << wxT("=\"") << wxString::FromLong(v) << wxT("\"");
 }
 
 void wxRichTextXMLHelper::AddAttribute(wxString& str, const wxString& name, const double& v)
