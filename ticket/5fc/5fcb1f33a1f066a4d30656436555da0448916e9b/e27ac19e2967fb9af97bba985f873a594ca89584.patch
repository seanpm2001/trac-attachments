 include/wx/richtext/richtextxml.h      |  4 ++--
 include/wx/string.h                    |  4 +++-
 interface/wx/string.h                  | 10 ++++++++++
 src/common/cshelp.cpp                  |  2 +-
 src/common/datavcmn.cpp                |  8 +++-----
 src/common/datetimefmt.cpp             |  9 ++++-----
 src/common/fontpickercmn.cpp           |  2 +-
 src/common/ftp.cpp                     |  4 ++--
 src/common/image.cpp                   |  3 +--
 src/common/prntbase.cpp                |  2 +-
 src/common/string.cpp                  |  6 ++++++
 src/common/sysopt.cpp                  |  2 +-
 src/common/textcmn.cpp                 |  2 +-
 src/common/valgen.cpp                  |  3 +--
 src/common/variant.cpp                 |  2 +-
 src/common/xti.cpp                     | 10 +++++-----
 src/common/xtixml.cpp                  |  4 ++--
 src/generic/calctrlg.cpp               |  6 +++---
 src/generic/dirdlgg.cpp                |  3 +--
 src/generic/filectrlg.cpp              |  3 +--
 src/generic/prntdlgg.cpp               | 14 +++++++-------
 src/gtk/slider.cpp                     |  6 ++----
 src/gtk1/font.cpp                      |  2 +-
 src/gtk1/utilsres.cpp                  |  3 +--
 src/osx/printdlg_osx.cpp               | 10 +++++-----
 src/osx/slider_osx.cpp                 | 19 +++++++++----------
 src/richtext/richtextbuffer.cpp        |  6 +++---
 src/richtext/richtextfontpage.cpp      | 10 +++++-----
 src/richtext/richtextformatdlg.cpp     |  6 +++---
 src/richtext/richtextindentspage.cpp   |  4 ++--
 src/richtext/richtextliststylepage.cpp |  4 ++--
 src/richtext/richtextsizepage.cpp      |  4 ++--
 src/richtext/richtexttabspage.cpp      |  8 ++++----
 src/richtext/richtextxml.cpp           | 10 +++++-----
 src/univ/slider.cpp                    |  2 +-
 src/unix/fontutil.cpp                  |  6 +++---
 36 files changed, 105 insertions(+), 98 deletions(-)

diff --git a/include/wx/richtext/richtextxml.h b/include/wx/richtext/richtextxml.h
index 9557d5d..e4a4e9c 100644
--- a/include/wx/richtext/richtextxml.h
+++ b/include/wx/richtext/richtextxml.h
@@ -49,7 +49,7 @@ public:
     // Convert 6-digit hex string to a colour
     static wxColour HexStringToColour(const wxString& hex);
 
-    static wxString MakeString(const int& v) { return wxString::Format(wxT("%d"), v); }
+    static wxString MakeString(const int& v) { return wxString::FromInt(v); }
     static wxString MakeString(const long& v) { return wxString::Format(wxT("%ld"), v); }
     static wxString MakeString(const double& v) { return wxString::Format(wxT("%.2f"), (float) v); }
     static wxString MakeString(const wxString& s) { return s; }
@@ -99,7 +99,7 @@ public:
     void OutputString(wxOutputStream& stream, const wxString& str);
     void OutputStringEnt(wxOutputStream& stream, const wxString& str);
     
-    static void AddString(wxString& str, const int& v) { str << wxString::Format(wxT("%d"), v); }
+    static void AddString(wxString& str, const int& v) { str << wxString::FromInt(v); }
     static void AddString(wxString& str, const long& v) { str << wxString::Format(wxT("%ld"), v); }
     static void AddString(wxString& str, const double& v) { str << wxString::Format(wxT("%.2f"), (float) v); }
     static void AddString(wxString& str, const wxChar* s) { str << s; }
diff --git a/include/wx/string.h b/include/wx/string.h
index c23586e..ffa8345 100644
--- a/include/wx/string.h
+++ b/include/wx/string.h
@@ -1951,7 +1951,7 @@ public:
   // stream-like functions
       // insert an int into string
   wxString& operator<<(int i)
-    { return (*this) << Format(wxT("%d"), i); }
+    { return (*this) << FromInt(i); }
       // insert an unsigned int into string
   wxString& operator<<(unsigned int ui)
     { return (*this) << Format(wxT("%u"), ui); }
@@ -2173,6 +2173,8 @@ public:
     // in C locale
   static wxString FromCDouble(double val, int precision = -1);
 
+  static wxString FromInt(int val);
+
   // formatted input/output
     // as sprintf(), returns the number of characters written or < 0 on error
     // (take 'this' into account in attribute parameter count)
diff --git a/interface/wx/string.h b/interface/wx/string.h
index fbd4e45..373d8f9 100644
--- a/interface/wx/string.h
+++ b/interface/wx/string.h
@@ -1814,6 +1814,16 @@ public:
      */
     static wxString FromDouble(double val, int precision = -1);
 
+    /**
+        Returns a string with the textual representation of the number.
+        This function behaves as a simple wrapper for @code wxString::Format("%d", val) @endcode.
+
+        @param val
+            The value to format.
+        @since 3.1.0
+     */
+    static wxString FromInt(int val);
+
     //@{
     /**
         Converts C string encoded in UTF-8 to wxString.
diff --git a/src/common/cshelp.cpp b/src/common/cshelp.cpp
index 67e7860..eb29051 100644
--- a/src/common/cshelp.cpp
+++ b/src/common/cshelp.cpp
@@ -462,7 +462,7 @@ bool wxHelpControllerHelpProvider::ShowHelp(wxWindowBase *window)
 // Convenience function for turning context id into wxString
 wxString wxContextId(int id)
 {
-    return wxString::Format(wxT("%d"), id);
+    return wxString::FromInt(id);
 }
 
 // ----------------------------------------------------------------------------
diff --git a/src/common/datavcmn.cpp b/src/common/datavcmn.cpp
index e94da72..53b9e1c 100644
--- a/src/common/datavcmn.cpp
+++ b/src/common/datavcmn.cpp
@@ -1587,8 +1587,7 @@ wxDataViewSpinRenderer::wxDataViewSpinRenderer( int min, int max, wxDataViewCell
 wxWindow* wxDataViewSpinRenderer::CreateEditorCtrl( wxWindow *parent, wxRect labelRect, const wxVariant &value )
 {
     long l = value;
-    wxString str;
-    str.Printf( wxT("%d"), (int) l );
+    wxString str = wxString::FromInt((int)l);
     wxSpinCtrl *sc = new wxSpinCtrl( parent, wxID_ANY, str,
                labelRect.GetTopLeft(), labelRect.GetSize(), wxSP_ARROW_KEYS|wxTE_PROCESS_ENTER, m_min, m_max, l );
 #ifdef __WXMAC__
@@ -1610,15 +1609,14 @@ bool wxDataViewSpinRenderer::GetValueFromEditorCtrl( wxWindow* editor, wxVariant
 
 bool wxDataViewSpinRenderer::Render( wxRect rect, wxDC *dc, int state )
 {
-    wxString str;
-    str.Printf(wxT("%d"), (int) m_data );
+    wxString str = wxString::FromInt((int)m_data);
     RenderText( str, 0, rect, dc, state );
     return true;
 }
 
 wxSize wxDataViewSpinRenderer::GetSize() const
 {
-    wxSize sz = GetTextExtent(wxString::Format("%d", (int)m_data));
+    wxSize sz = GetTextExtent(wxString::FromInt((int)m_data));
 
     // Allow some space for the spin buttons, which is approximately the size
     // of a scrollbar (and getting pixel-exact value would be complicated).
diff --git a/src/common/datetimefmt.cpp b/src/common/datetimefmt.cpp
index 0d2bb34..865ffb1 100644
--- a/src/common/datetimefmt.cpp
+++ b/src/common/datetimefmt.cpp
@@ -579,12 +579,11 @@ wxString wxDateTime::Format(const wxString& formatp, const TimeZone& tz) const
                         while ( str.find(replacement) != wxString::npos )
                             replacement += '|';
 
-                        str.Replace(wxString::Format("%d", year),
-                                    replacement);
-                        str.Replace(wxString::Format("%d", year % 100),
-                                    wxString::Format("%d", yearReal % 100));
+                        str.Replace(wxString::FromInt(year), replacement);
+                        str.Replace(wxString::FromInt(year % 100),
+                                    wxString::FromInt(yearReal % 100));
                         str.Replace(replacement,
-                                    wxString::Format("%d", yearReal));
+                                    wxString::FromInt(yearReal));
 
                         res += str;
                     }
diff --git a/src/common/fontpickercmn.cpp b/src/common/fontpickercmn.cpp
index 3e7e1f8..e95bad5 100644
--- a/src/common/fontpickercmn.cpp
+++ b/src/common/fontpickercmn.cpp
@@ -103,7 +103,7 @@ wxFont wxFontPickerCtrl::String2Font(const wxString &s)
             str = str.Left(str.length() - size.length()) + wxT("1");
         else if (n >= m_nMaxPointSize)
             str = str.Left(str.length() - size.length()) +
-                  wxString::Format(wxT("%d"), m_nMaxPointSize);
+                  wxString::FromInt(m_nMaxPointSize);
     }
 
     if (!ret.SetNativeFontInfoUserDesc(str))
diff --git a/src/common/ftp.cpp b/src/common/ftp.cpp
index 4dca4bd..748989e 100644
--- a/src/common/ftp.cpp
+++ b/src/common/ftp.cpp
@@ -566,8 +566,8 @@ wxString wxFTP::GetPortCmdArgument(const wxIPV4address& addrLocal,
     // We need to break the PORT number in bytes
     addrIP.Replace(wxT("."), wxT(","));
     addrIP << wxT(',')
-           << wxString::Format(wxT("%d"), portNew >> 8) << wxT(',')
-           << wxString::Format(wxT("%d"), portNew & 0xff);
+           << wxString::FromInt(portNew >> 8) << wxT(',')
+           << wxString::FromInt(portNew & 0xff);
 
     // Now we have a value like "10,0,0,1,5,23"
     return addrIP;
diff --git a/src/common/image.cpp b/src/common/image.cpp
index f28abb2..54cad82 100644
--- a/src/common/image.cpp
+++ b/src/common/image.cpp
@@ -2318,8 +2318,7 @@ void wxImage::SetOption(const wxString& name, const wxString& value)
 
 void wxImage::SetOption(const wxString& name, int value)
 {
-    wxString valStr;
-    valStr.Printf(wxT("%d"), value);
+    wxString valStr = wxString::FromInt(value);
     SetOption(name, valStr);
 }
 
diff --git a/src/common/prntbase.cpp b/src/common/prntbase.cpp
index 2ca6b47..0a86b3d 100644
--- a/src/common/prntbase.cpp
+++ b/src/common/prntbase.cpp
@@ -1178,7 +1178,7 @@ public:
 private:
     static wxString PageAsString(int page)
     {
-        return wxString::Format("%d", page);
+        return wxString::FromInt(page);
     }
 
     bool IsValidPage(int page) const
diff --git a/src/common/string.cpp b/src/common/string.cpp
index 930b488..176c366 100644
--- a/src/common/string.cpp
+++ b/src/common/string.cpp
@@ -1874,6 +1874,12 @@ wxString wxString::FromCDouble(double val, int precision)
     return s;
 }
 
+//static
+wxString wxString::FromInt(int val)
+{
+    return wxString::Format(wxT("%d"), val);
+}
+
 // ---------------------------------------------------------------------------
 // formatted output
 // ---------------------------------------------------------------------------
diff --git a/src/common/sysopt.cpp b/src/common/sysopt.cpp
index ede2e7a..22a2329 100644
--- a/src/common/sysopt.cpp
+++ b/src/common/sysopt.cpp
@@ -63,7 +63,7 @@ void wxSystemOptions::SetOption(const wxString& name, const wxString& value)
 
 void wxSystemOptions::SetOption(const wxString& name, int value)
 {
-    SetOption(name, wxString::Format(wxT("%d"), value));
+    SetOption(name, wxString::FromInt(value));
 }
 
 wxString wxSystemOptions::GetOption(const wxString& name)
diff --git a/src/common/textcmn.cpp b/src/common/textcmn.cpp
index baefa1c..d6da320 100644
--- a/src/common/textcmn.cpp
+++ b/src/common/textcmn.cpp
@@ -1007,7 +1007,7 @@ wxTextCtrl& wxTextCtrlBase::operator<<(double d)
 
 wxTextCtrl& wxTextCtrlBase::operator<<(int i)
 {
-    return *this << wxString::Format("%d", i);
+    return *this << wxString::FromInt(i);
 }
 
 wxTextCtrl& wxTextCtrlBase::operator<<(long l)
diff --git a/src/common/valgen.cpp b/src/common/valgen.cpp
index 3f09530..334e2bb 100644
--- a/src/common/valgen.cpp
+++ b/src/common/valgen.cpp
@@ -337,8 +337,7 @@ bool wxGenericValidator::TransferToWindow(void)
         }
         else if (m_pInt)
         {
-            wxString str;
-            str.Printf(wxT("%d"), *m_pInt);
+            wxString str = wxString::FromInt(*m_pInt);
             pControl->SetValue(str);
             return true;
         }
diff --git a/src/common/variant.cpp b/src/common/variant.cpp
index a869320..6f0c950 100644
--- a/src/common/variant.cpp
+++ b/src/common/variant.cpp
@@ -601,7 +601,7 @@ bool wxVariantDataBool::Write(wxSTD ostream& str) const
 
 bool wxVariantDataBool::Write(wxString& str) const
 {
-    str.Printf(wxT("%d"), (int) m_value);
+    str = wxString::FromInt((int) m_value);
     return true;
 }
 
diff --git a/src/common/xti.cpp b/src/common/xti.cpp
index e7dc6d1..e2a0211 100644
--- a/src/common/xti.cpp
+++ b/src/common/xti.cpp
@@ -122,7 +122,7 @@ template<> void wxStringReadValue(const wxString &s, bool &data )
 
 template<> void wxStringWriteValue(wxString &s, const bool &data )
 {
-    s = wxString::Format(wxT("%d"), data );
+    s = wxString::FromInt(data);
 }
 
 // char
@@ -136,7 +136,7 @@ template<> void wxStringReadValue(const wxString &s, char &data )
 
 template<> void wxStringWriteValue(wxString &s, const char &data )
 {
-    s = wxString::Format(wxT("%d"), data );
+    s = wxString::FromInt(data);
 }
 
 // unsigned char
@@ -150,7 +150,7 @@ template<> void wxStringReadValue(const wxString &s, unsigned char &data )
 
 template<> void wxStringWriteValue(wxString &s, const unsigned char &data )
 {
-    s = wxString::Format(wxT("%d"), data );
+    s = wxString::FromInt(data);
 }
 
 // int
@@ -162,7 +162,7 @@ template<> void wxStringReadValue(const wxString &s, int &data )
 
 template<> void wxStringWriteValue(wxString &s, const int &data )
 {
-    s = wxString::Format(wxT("%d"), data );
+    s = wxString::FromInt(data);
 }
 
 // unsigned int
@@ -174,7 +174,7 @@ template<> void wxStringReadValue(const wxString &s, unsigned int &data )
 
 template<> void wxStringWriteValue(wxString &s, const unsigned int &data )
 {
-    s = wxString::Format(wxT("%d"), data );
+    s = wxString::FromInt(data);
 }
 
 // long
diff --git a/src/common/xtixml.cpp b/src/common/xtixml.cpp
index 4a37afe..e879c75 100644
--- a/src/common/xtixml.cpp
+++ b/src/common/xtixml.cpp
@@ -115,7 +115,7 @@ void wxObjectXmlWriter::DoBeginWriteObject(const wxObject *WXUNUSED(object),
     wxXmlNode *pnode;
     pnode = new wxXmlNode(wxXML_ELEMENT_NODE, wxT("object"));
     pnode->AddProperty(wxT("class"), wxString(classInfo->GetClassName()));
-    pnode->AddProperty(wxT("id"), wxString::Format( wxT("%d"), objectID ) );
+    pnode->AddProperty(wxT("id"), wxString::FromInt(objectID) );
 
     wxStringToAnyHashMap::const_iterator it, en;
     for( it = metadata.begin(), en = metadata.end(); it != en; ++it )
@@ -170,7 +170,7 @@ void wxObjectXmlWriter::DoWriteRepeatedObject( int objectID )
 {
     wxXmlNode *pnode;
     pnode = new wxXmlNode(wxXML_ELEMENT_NODE, wxT("object"));
-    pnode->AddProperty(wxString(wxT("href")), wxString::Format( wxT("%d"), objectID ) );
+    pnode->AddProperty(wxString(wxT("href")), wxString::FromInt(objectID) );
     m_data->m_current->AddChild(pnode);
 }
 
diff --git a/src/generic/calctrlg.cpp b/src/generic/calctrlg.cpp
index a03cfbd..a6d49b8 100644
--- a/src/generic/calctrlg.cpp
+++ b/src/generic/calctrlg.cpp
@@ -761,7 +761,7 @@ void wxGenericCalendarCtrl::RecalcGeometry()
     for ( int day = 10; day <= 31; day++)
     {
         wxCoord width;
-        dc.GetTextExtent(wxString::Format(wxT("%d"), day), &width, &m_heightRow);
+        dc.GetTextExtent(wxString::FromInt(day), &width, &m_heightRow);
         if ( width > m_widthCol )
         {
             // 1.5 times the width gives nice margins even if the weekday
@@ -781,7 +781,7 @@ void wxGenericCalendarCtrl::RecalcGeometry()
     }
 
     m_calendarWeekWidth = HasFlag( wxCAL_SHOW_WEEK_NUMBERS )
-        ? dc.GetTextExtent( wxString::Format( wxT( "%d" ), 42 )).GetWidth() + 4 : 0;
+        ? dc.GetTextExtent( wxString::FromInt(42)).GetWidth() + 4 : 0;
 
     // leave some margins
     m_widthCol += 2;
@@ -924,7 +924,7 @@ void wxGenericCalendarCtrl::OnPaint(wxPaintEvent& WXUNUSED(event))
         for ( size_t i = 0; i < 6; ++i )
         {
             const int weekNr = date.GetWeekOfYear();
-            wxString text = wxString::Format( wxT( "%d" ), weekNr );
+            wxString text = wxString::FromInt(weekNr);
             dc.DrawText( text, m_calendarWeekWidth - dc.GetTextExtent( text ).GetWidth() - 2, y + m_heightRow * i );
             date += wxDateSpan::Week();
         }
diff --git a/src/generic/dirdlgg.cpp b/src/generic/dirdlgg.cpp
index d1c5890..b135bf9 100644
--- a/src/generic/dirdlgg.cpp
+++ b/src/generic/dirdlgg.cpp
@@ -305,8 +305,7 @@ void wxGenericDirDialog::OnNew( wxCommandEvent& WXUNUSED(event) )
         int i = 0;
         do {
             new_name = _("NewName");
-            wxString num;
-            num.Printf( wxT("%d"), i );
+            wxString num = wxString::FromInt(i);
             new_name += num;
 
             path = data->m_path;
diff --git a/src/generic/filectrlg.cpp b/src/generic/filectrlg.cpp
index 45765a7..bd46a84 100644
--- a/src/generic/filectrlg.cpp
+++ b/src/generic/filectrlg.cpp
@@ -624,8 +624,7 @@ void wxFileListCtrl::MakeDir()
         int i = 0;
         do {
             new_name = _("NewName");
-            wxString num;
-            num.Printf( wxT("%d"), i );
+            wxString num = wxString::FromInt(i);
             new_name += num;
 
             path = m_dirName;
diff --git a/src/generic/prntdlgg.cpp b/src/generic/prntdlgg.cpp
index 5140283..231169f 100644
--- a/src/generic/prntdlgg.cpp
+++ b/src/generic/prntdlgg.cpp
@@ -350,9 +350,9 @@ bool wxGenericPrintDialog::TransferDataToWindow()
              m_fromText->Enable(true);
              m_toText->Enable(true);
              if (m_printDialogData.GetFromPage() > 0)
-                m_fromText->SetValue(wxString::Format(wxT("%d"), m_printDialogData.GetFromPage()));
+                m_fromText->SetValue(wxString::FromInt(m_printDialogData.GetFromPage()));
              if (m_printDialogData.GetToPage() > 0)
-                m_toText->SetValue(wxString::Format(wxT("%d"), m_printDialogData.GetToPage()));
+                m_toText->SetValue(wxString::FromInt(m_printDialogData.GetToPage()));
              if(m_rangeRadioBox)
              {
                 if (m_printDialogData.GetAllPages() || m_printDialogData.GetFromPage() == 0)
@@ -374,7 +374,7 @@ bool wxGenericPrintDialog::TransferDataToWindow()
        }
     }
     m_noCopiesText->SetValue(
-        wxString::Format(wxT("%d"), m_printDialogData.GetNoCopies()));
+        wxString::FromInt(m_printDialogData.GetNoCopies()));
 
     m_printToFileCheckBox->SetValue(m_printDialogData.GetPrintToFile());
     m_printToFileCheckBox->Enable(m_printDialogData.GetEnablePrintToFile());
@@ -952,13 +952,13 @@ wxPageSetupDialogData& wxGenericPageSetupDialog::GetPageSetupDialogData()
 bool wxGenericPageSetupDialog::TransferDataToWindow()
 {
     if (m_marginLeftText)
-        m_marginLeftText->SetValue(wxString::Format(wxT("%d"), m_pageData.GetMarginTopLeft().x));
+        m_marginLeftText->SetValue(wxString::FromInt(m_pageData.GetMarginTopLeft().x));
     if (m_marginTopText)
-        m_marginTopText->SetValue(wxString::Format(wxT("%d"), m_pageData.GetMarginTopLeft().y));
+        m_marginTopText->SetValue(wxString::FromInt(m_pageData.GetMarginTopLeft().y));
     if (m_marginRightText)
-        m_marginRightText->SetValue(wxString::Format(wxT("%d"), m_pageData.GetMarginBottomRight().x));
+        m_marginRightText->SetValue(wxString::FromInt(m_pageData.GetMarginBottomRight().x));
     if (m_marginBottomText)
-        m_marginBottomText->SetValue(wxString::Format(wxT("%d"), m_pageData.GetMarginBottomRight().y));
+        m_marginBottomText->SetValue(wxString::FromInt(m_pageData.GetMarginBottomRight().y));
 
     if (m_orientationRadioBox)
     {
diff --git a/src/gtk/slider.cpp b/src/gtk/slider.cpp
index 69d994a..cbcf96c 100644
--- a/src/gtk/slider.cpp
+++ b/src/gtk/slider.cpp
@@ -439,15 +439,13 @@ void wxSlider::SetRange( int minValue, int maxValue )
 
     if (HasFlag(wxSL_MIN_MAX_LABELS))
     {
-        wxString str;
-
-        str.Printf( "%d", minValue );
+        wxString str = wxString::FromInt(minValue);
         if (HasFlag(wxSL_INVERSE))
             gtk_label_set_text( GTK_LABEL(m_maxLabel), str.utf8_str() );
         else
             gtk_label_set_text( GTK_LABEL(m_minLabel), str.utf8_str() );
 
-        str.Printf( "%d", maxValue );
+        str = wxString::FromInt(maxValue);
         if (HasFlag(wxSL_INVERSE))
             gtk_label_set_text( GTK_LABEL(m_minLabel), str.utf8_str() );
         else
diff --git a/src/gtk1/font.cpp b/src/gtk1/font.cpp
index 57ba87c..4a462df 100644
--- a/src/gtk1/font.cpp
+++ b/src/gtk1/font.cpp
@@ -329,7 +329,7 @@ void wxFontRefData::SetPointSize(int pointSize)
         if ( pointSize == -1 )
             size = wxT('*');
         else
-            size.Printf(wxT("%d"), 10*pointSize);
+            size = wxString::FromInt(10*pointSize);
 
         m_nativeFontInfo.SetXFontComponent(wxXLFD_POINTSIZE, size);
     }
diff --git a/src/gtk1/utilsres.cpp b/src/gtk1/utilsres.cpp
index 682ff88..f22e29a 100644
--- a/src/gtk1/utilsres.cpp
+++ b/src/gtk1/utilsres.cpp
@@ -54,8 +54,7 @@ bool wxWriteResource(const wxString& section, const wxString& entry, long value,
 
 bool wxWriteResource(const wxString& section, const wxString& entry, int value, const wxString& file )
 {
-    wxString buf;
-    buf.Printf(wxT("%d"), value);
+    wxString buf = wxString::FromInt(value);
 
     return wxWriteResource(section, entry, buf, file);
 }
diff --git a/src/osx/printdlg_osx.cpp b/src/osx/printdlg_osx.cpp
index f1db3b8..d2ff996 100644
--- a/src/osx/printdlg_osx.cpp
+++ b/src/osx/printdlg_osx.cpp
@@ -136,13 +136,13 @@ bool wxMacPageMarginsDialog::TransferToWindow()
   wxPoint bottomRight = m_pageSetupDialogData->GetMarginBottomRight();
   wxPoint minTopLeft = m_pageSetupDialogData->GetMinMarginTopLeft();
   wxPoint minBottomRight = m_pageSetupDialogData->GetMinMarginBottomRight();
-  m_LeftMargin->SetValue(wxString::Format(wxT("%d"), wxMax(topLeft.x, minTopLeft.x)));
+  m_LeftMargin->SetValue(wxString::FromInt(wxMax(topLeft.x, minTopLeft.x)));
   m_LeftMargin->SetSelection(-1, -1);
-  m_TopMargin->SetValue(wxString::Format(wxT("%d"), wxMax(topLeft.y, minTopLeft.y)));
+  m_TopMargin->SetValue(wxString::FromInt(wxMax(topLeft.y, minTopLeft.y)));
   m_TopMargin->SetSelection(-1, -1);
-  m_RightMargin->SetValue(wxString::Format(wxT("%d"), wxMax(bottomRight.x, minBottomRight.x)));
+  m_RightMargin->SetValue(wxString::FromInt(wxMax(bottomRight.x, minBottomRight.x)));
   m_RightMargin->SetSelection(-1, -1);
-  m_BottomMargin->SetValue(wxString::Format(wxT("%d"), wxMax(bottomRight.y, minBottomRight.y)));
+  m_BottomMargin->SetValue(wxString::FromInt(wxMax(bottomRight.y, minBottomRight.y)));
   m_BottomMargin->SetSelection(-1, -1);
   m_LeftMargin->SetFocus();
   return true;
@@ -171,7 +171,7 @@ bool wxMacPageMarginsDialog::CheckValue(wxTextCtrl* textCtrl, int *value, int mi
   if (lvalue < minValue)
     {
     wxMessageBox(wxString::Format(wxT("Sorry, \"%s\" is not a valid value for the %s, which must be >= %d"), textCtrl->GetValue().c_str(), name.c_str(), minValue), wxT("Page Margin Error"));
-    textCtrl->SetValue(wxString::Format(wxT("%d"), minValue));
+    textCtrl->SetValue(wxString::FromInt(minValue));
     textCtrl->SetSelection(-1, -1);
     textCtrl->SetFocus();
     return false;
diff --git a/src/osx/slider_osx.cpp b/src/osx/slider_osx.cpp
index 8a4cad4..0c926af 100644
--- a/src/osx/slider_osx.cpp
+++ b/src/osx/slider_osx.cpp
@@ -154,8 +154,7 @@ void wxSlider::SetValue(int value)
 {
     if ( m_macValueStatic )
     {
-        wxString valuestring;
-        valuestring.Printf( wxT("%d"), value );
+        wxString valuestring = wxString::FromInt(value);
         m_macValueStatic->SetLabel( valuestring );
     }
 
@@ -181,13 +180,13 @@ void wxSlider::SetRange(int minValue, int maxValue)
 
     if (m_macMinimumStatic)
     {
-        value.Printf( wxT("%d"), ValueInvertOrNot( m_rangeMin ) );
+        value = wxString::FromInt(ValueInvertOrNot(m_rangeMin));
         m_macMinimumStatic->SetLabel( value );
     }
 
     if (m_macMaximumStatic)
     {
-        value.Printf( wxT("%d"), ValueInvertOrNot( m_rangeMax ) );
+        value = wxString::FromInt(ValueInvertOrNot(m_rangeMax));
         m_macMaximumStatic->SetLabel( value );
     }
 
@@ -348,9 +347,9 @@ wxSize wxSlider::DoGetBestSize() const
         wxString text;
 
         // Get maximum text label width and height
-        text.Printf( wxT("%d"), ValueInvertOrNot( m_rangeMin ) );
+        text = wxString::FromInt(ValueInvertOrNot(m_rangeMin));
         GetTextExtent(text, &mintwidth, &mintheight);
-        text.Printf( wxT("%d"), ValueInvertOrNot( m_rangeMax ) );
+        text = wxString::FromInt(ValueInvertOrNot(m_rangeMax));
         GetTextExtent(text, &maxtwidth, &maxtheight);
 
         if (maxtheight > mintheight)
@@ -408,9 +407,9 @@ void wxSlider::DoSetSize(int x, int y, int w, int h, int sizeFlags)
         int ht, valValWidth;
 
         // Get maximum text label width and height
-        text.Printf(wxT("%d"), ValueInvertOrNot( m_rangeMin ) );
+        text = wxString::FromInt(ValueInvertOrNot(m_rangeMin));
         GetTextExtent(text, &minValWidth, &textheight);
-        text.Printf(wxT("%d"), ValueInvertOrNot( m_rangeMax ) );
+        text = wxString::FromInt(ValueInvertOrNot(m_rangeMax));
         GetTextExtent(text, &maxValWidth, &ht);
 
         if (ht > textheight)
@@ -437,10 +436,10 @@ void wxSlider::DoSetSize(int x, int y, int w, int h, int sizeFlags)
 
         if (GetWindowStyle() & wxSL_VERTICAL)
             // If vertical, use current value
-            text.Printf(wxT("%d"), (int)GetPeer()->GetValue());
+            text = wxString::FromInt((int)GetPeer()->GetValue());
         else
             // Use max so that the current value doesn't drift as centering would need to change
-            text.Printf(wxT("%d"), m_rangeMax);
+            text = wxString::FromInt(m_rangeMax);
 
         GetTextExtent(text, &valValWidth, &ht);
 
diff --git a/src/richtext/richtextbuffer.cpp b/src/richtext/richtextbuffer.cpp
index af6b6a5..fd17527 100644
--- a/src/richtext/richtextbuffer.cpp
+++ b/src/richtext/richtextbuffer.cpp
@@ -4639,7 +4639,7 @@ bool wxRichTextParagraphLayoutBox::DoNumberList(const wxRichTextRange& range, co
                         {
                             if (!text.IsEmpty())
                                 text += wxT(".");
-                            text += wxString::Format(wxT("%d"), levels[i]);
+                            text += wxString::FromInt(levels[i]);
                         }
                         newPara->GetAttributes().SetBulletText(text);
                     }
@@ -4760,7 +4760,7 @@ bool wxRichTextParagraphLayoutBox::FindNextParagraphNumber(wxRichTextParagraph*
                         text = wxEmptyString;
                     if (!text.IsEmpty())
                         text += wxT(".");
-                    text += wxString::Format(wxT("%d"), nextNumber);
+                    text += wxString::FromInt(nextNumber);
                     attr.SetBulletText(text);
                 }
             }
@@ -6471,7 +6471,7 @@ wxString wxRichTextParagraph::GetBulletText()
     wxString text;
     if ((GetAttributes().GetBulletStyle() & wxTEXT_ATTR_BULLET_STYLE_ARABIC) || (GetAttributes().GetBulletStyle() & wxTEXT_ATTR_BULLET_STYLE_OUTLINE))
     {
-        text.Printf(wxT("%d"), number);
+        text = wxString::FromInt(number);
     }
     else if (GetAttributes().GetBulletStyle() & wxTEXT_ATTR_BULLET_STYLE_LETTERS_UPPER)
     {
diff --git a/src/richtext/richtextfontpage.cpp b/src/richtext/richtextfontpage.cpp
index c93a8a8..0708701 100644
--- a/src/richtext/richtextfontpage.cpp
+++ b/src/richtext/richtextfontpage.cpp
@@ -362,7 +362,7 @@ void wxRichTextFontPage::CreateControls()
     int i;
     for (i = 8; i < 40; i++)
     {
-        nStr.Printf(wxT("%d"), i);
+        nStr = wxString::FromInt(i);
         m_sizeListBox->Append(nStr);
     }
     m_sizeListBox->Append(wxT("48"));
@@ -579,7 +579,7 @@ bool wxRichTextFontPage::TransferDataToWindow()
 
     if (attr->HasFontPointSize())
     {
-        wxString strSize = wxString::Format(wxT("%d"), attr->GetFontSize());
+        wxString strSize = wxString::FromInt(attr->GetFontSize());
         m_sizeTextCtrl->SetValue(strSize);
         m_fontSizeSpinButtons->SetValue(attr->GetFontSize());
         m_sizeUnitsCtrl->SetSelection(0);
@@ -588,7 +588,7 @@ bool wxRichTextFontPage::TransferDataToWindow()
     }
     else if (attr->HasFontPixelSize())
     {
-        wxString strSize = wxString::Format(wxT("%d"), attr->GetFontSize());
+        wxString strSize = wxString::FromInt(attr->GetFontSize());
         m_sizeTextCtrl->SetValue(strSize);
         m_fontSizeSpinButtons->SetValue(attr->GetFontSize());
         m_sizeUnitsCtrl->SetSelection(1);
@@ -1159,7 +1159,7 @@ void wxRichTextFontPage::OnRichtextfontpageSpinbuttonsUp( wxSpinEvent& WXUNUSED(
     if (m_fontSizeSpinButtons->GetValue() != size)
         m_fontSizeSpinButtons->SetValue(size);
 
-    wxString newText(wxString::Format(wxT("%d"), size));
+    wxString newText(wxString::FromInt(size));
 
     m_sizeTextCtrl->SetValue(newText);
     if (!newText.IsEmpty() && m_sizeListBox->FindString(newText) != wxNOT_FOUND)
@@ -1195,7 +1195,7 @@ void wxRichTextFontPage::OnRichtextfontpageSpinbuttonsDown( wxSpinEvent& WXUNUSE
     if (m_fontSizeSpinButtons->GetValue() != size)
         m_fontSizeSpinButtons->SetValue(size);
 
-    wxString newText(wxString::Format(wxT("%d"), size));
+    wxString newText(wxString::FromInt(size));
 
     m_sizeTextCtrl->SetValue(newText);
     if (!newText.IsEmpty() && m_sizeListBox->FindString(newText) != wxNOT_FOUND)
diff --git a/src/richtext/richtextformatdlg.cpp b/src/richtext/richtextformatdlg.cpp
index 30017cf..9c0d6bd 100644
--- a/src/richtext/richtextformatdlg.cpp
+++ b/src/richtext/richtextformatdlg.cpp
@@ -615,7 +615,7 @@ void wxRichTextFormattingDialog::SetDimensionValue(wxTextAttrDimension& dim, wxT
         if (dim.GetUnits() == wxTEXT_ATTR_UNITS_PIXELS)
         {
             unitsIdx = 0;  // By default, the 1st in the list.
-            valueCtrl->SetValue(wxString::Format(wxT("%d"), (int) dim.GetValue()));
+            valueCtrl->SetValue(wxString::FromInt((int) dim.GetValue()));
         }
         else if (dim.GetUnits() == wxTEXT_ATTR_UNITS_TENTHS_MM)
         {
@@ -626,7 +626,7 @@ void wxRichTextFormattingDialog::SetDimensionValue(wxTextAttrDimension& dim, wxT
         else if (dim.GetUnits() == wxTEXT_ATTR_UNITS_PERCENTAGE)
         {
             unitsIdx = 2; // By default, the 3rd in the list.
-            valueCtrl->SetValue(wxString::Format(wxT("%d"), (int) dim.GetValue()));
+            valueCtrl->SetValue(wxString::FromInt((int) dim.GetValue()));
         }
         else if (dim.GetUnits() == wxTEXT_ATTR_UNITS_HUNDREDTHS_POINT)
         {
@@ -637,7 +637,7 @@ void wxRichTextFormattingDialog::SetDimensionValue(wxTextAttrDimension& dim, wxT
         else if (dim.GetUnits() == wxTEXT_ATTR_UNITS_POINTS)
         {
             unitsIdx = 3; // By default, the 4th in the list (we don't have points and hundredths of points in the same list)
-            valueCtrl->SetValue(wxString::Format(wxT("%d"), (int) dim.GetValue()));
+            valueCtrl->SetValue(wxString::FromInt((int) dim.GetValue()));
         }
         
         if (units)
diff --git a/src/richtext/richtextindentspage.cpp b/src/richtext/richtextindentspage.cpp
index b694c6b..0debc34 100644
--- a/src/richtext/richtextindentspage.cpp
+++ b/src/richtext/richtextindentspage.cpp
@@ -505,7 +505,7 @@ bool wxRichTextIndentsSpacingPage::TransferDataToWindow()
 
     if (attr->HasParagraphSpacingAfter())
     {
-        wxString spacingAfter(wxString::Format(wxT("%d"), attr->GetParagraphSpacingAfter()));
+        wxString spacingAfter(wxString::FromInt(attr->GetParagraphSpacingAfter()));
 
         m_spacingAfter->SetValue(spacingAfter);
     }
@@ -514,7 +514,7 @@ bool wxRichTextIndentsSpacingPage::TransferDataToWindow()
 
     if (attr->HasParagraphSpacingBefore())
     {
-        wxString spacingBefore(wxString::Format(wxT("%d"), attr->GetParagraphSpacingBefore()));
+        wxString spacingBefore(wxString::FromInt(attr->GetParagraphSpacingBefore()));
 
         m_spacingBefore->SetValue(spacingBefore);
     }
diff --git a/src/richtext/richtextliststylepage.cpp b/src/richtext/richtextliststylepage.cpp
index 4296f56..841b1a1 100644
--- a/src/richtext/richtextliststylepage.cpp
+++ b/src/richtext/richtextliststylepage.cpp
@@ -761,7 +761,7 @@ void wxRichTextListStylePage::DoTransferDataToWindow()
 
     if (attr->HasParagraphSpacingAfter())
     {
-        wxString spacingAfter(wxString::Format(wxT("%d"), attr->GetParagraphSpacingAfter()));
+        wxString spacingAfter(wxString::FromInt(attr->GetParagraphSpacingAfter()));
 
         m_spacingAfter->SetValue(spacingAfter);
     }
@@ -770,7 +770,7 @@ void wxRichTextListStylePage::DoTransferDataToWindow()
 
     if (attr->HasParagraphSpacingBefore())
     {
-        wxString spacingBefore(wxString::Format(wxT("%d"), attr->GetParagraphSpacingBefore()));
+        wxString spacingBefore(wxString::FromInt(attr->GetParagraphSpacingBefore()));
 
         m_spacingBefore->SetValue(spacingBefore);
     }
diff --git a/src/richtext/richtextsizepage.cpp b/src/richtext/richtextsizepage.cpp
index 585c88e..3a10561 100644
--- a/src/richtext/richtextsizepage.cpp
+++ b/src/richtext/richtextsizepage.cpp
@@ -803,8 +803,8 @@ bool wxRichTextSizePage::TransferDataToWindow()
         m_heightCheckbox->SetValue(false);
         m_unitsW->SetSelection(0);
         m_unitsH->SetSelection(0);
-        m_width->SetValue(wxString::Format(wxT("%d"), (int) imageObj->GetOriginalImageSize().GetWidth()));
-        m_height->SetValue(wxString::Format(wxT("%d"), (int) imageObj->GetOriginalImageSize().GetHeight()));
+        m_width->SetValue(wxString::FromInt((int) imageObj->GetOriginalImageSize().GetWidth()));
+        m_height->SetValue(wxString::FromInt((int) imageObj->GetOriginalImageSize().GetHeight()));
     }
     else
     {
diff --git a/src/richtext/richtexttabspage.cpp b/src/richtext/richtexttabspage.cpp
index cf4f9f8..42d4eb0 100644
--- a/src/richtext/richtexttabspage.cpp
+++ b/src/richtext/richtexttabspage.cpp
@@ -185,7 +185,7 @@ bool wxRichTextTabsPage::TransferDataToWindow()
         size_t i;
         for (i = 0; i < attr->GetTabs().GetCount(); i++)
         {
-            wxString s(wxString::Format(wxT("%d"), attr->GetTabs()[i]));
+            wxString s(wxString::FromInt(attr->GetTabs()[i]));
             m_tabListCtrl->Append(s);
         }
     }
@@ -217,7 +217,7 @@ void wxRichTextTabsPage::SortTabs()
     m_tabListCtrl->Clear();
     for (i = 0; i < tabs.GetCount(); i++)
     {
-        wxString s(wxString::Format(wxT("%d"), tabs[i]));
+        wxString s(wxString::FromInt(tabs[i]));
         m_tabListCtrl->Append(s);
     }
 }
@@ -271,7 +271,7 @@ void wxRichTextTabsPage::OnNewTabClick( wxCommandEvent& WXUNUSED(event) )
     wxString str = m_tabEditCtrl->GetValue();
     if (!str.empty() && str.IsNumber())
     {
-        wxString s(wxString::Format(wxT("%d"), wxAtoi(str)));
+        wxString s(wxString::FromInt(wxAtoi(str)));
 
         m_tabListCtrl->Append(s);
         m_tabsPresent = true;
@@ -291,7 +291,7 @@ void wxRichTextTabsPage::OnNewTabUpdate( wxUpdateUIEvent& event )
     wxString str = m_tabEditCtrl->GetValue();
     if (!str.empty() && str.IsNumber())
     {
-        wxString s(wxString::Format(wxT("%d"), wxAtoi(str)));
+        wxString s(wxString::FromInt(wxAtoi(str)));
         event.Enable(m_tabListCtrl->FindString(s) == wxNOT_FOUND);
     }
     else
diff --git a/src/richtext/richtextxml.cpp b/src/richtext/richtextxml.cpp
index d470d69..aa8409f 100644
--- a/src/richtext/richtextxml.cpp
+++ b/src/richtext/richtextxml.cpp
@@ -575,7 +575,7 @@ bool wxRichTextPlainText::ExportXML(wxOutputStream& stream, int indent, wxRichTe
             handler->GetHelper().OutputString(stream, wxT("<symbol"));
 
             handler->GetHelper().OutputString(stream, style + wxT(">"));
-            handler->GetHelper().OutputString(stream, wxString::Format(wxT("%d"), c));
+            handler->GetHelper().OutputString(stream, wxString::FromInt(c));
 
             if (GetProperties().GetCount() > 0)
             {
@@ -680,7 +680,7 @@ bool wxRichTextPlainText::ExportXML(wxXmlNode* parent, wxRichTextXMLHandler* han
 
             wxXmlNode* textNode = new wxXmlNode(wxXML_TEXT_NODE, wxT("text"));
             elementNode->AddChild(textNode);
-            textNode->SetContent(wxString::Format(wxT("%d"), c));
+            textNode->SetContent(wxString::FromInt(c));
 
             last = i + 1;
         }
@@ -1042,8 +1042,8 @@ bool wxRichTextTable::ExportXML(wxXmlNode* parent, wxRichTextXMLHandler* handler
     handler->GetHelper().AddAttributes(elementNode, this, true);
     handler->GetHelper().WriteProperties(elementNode, GetProperties());
 
-    elementNode->AddAttribute(wxT("rows"), wxString::Format(wxT("%d"), m_rowCount));
-    elementNode->AddAttribute(wxT("cols"), wxString::Format(wxT("%d"), m_colCount));
+    elementNode->AddAttribute(wxT("rows"), wxString::FromInt(m_rowCount));
+    elementNode->AddAttribute(wxT("cols"), wxString::FromInt(m_colCount));
 
     int i, j;
     for (i = 0; i < m_rowCount; i++)
@@ -2025,7 +2025,7 @@ void wxRichTextXMLHelper::OutputStringEnt(wxOutputStream& stream, const wxString
 
 void wxRichTextXMLHelper::AddAttribute(wxString& str, const wxString& name, const int& v)
 {
-    str << wxT(" ") << name << wxT("=\"") << wxString::Format(wxT("%d"), v) << wxT("\"");
+    str << wxT(" ") << name << wxT("=\"") << wxString::FromInt(v) << wxT("\"");
 }
 
 void wxRichTextXMLHelper::AddAttribute(wxString& str, const wxString& name, const long& v)
diff --git a/src/univ/slider.cpp b/src/univ/slider.cpp
index 1a0883f..6de2dd7 100644
--- a/src/univ/slider.cpp
+++ b/src/univ/slider.cpp
@@ -682,7 +682,7 @@ void wxSlider::CalcThumbRect(const wxRect *rectShaftIn,
 
 wxString wxSlider::FormatValue(int value) const
 {
-    return wxString::Format(wxT("%d"), value);
+    return wxString::FromInt(value);
 }
 
 void wxSlider::DoDraw(wxControlRenderer *renderer)
diff --git a/src/unix/fontutil.cpp b/src/unix/fontutil.cpp
index 22f6594..d15845c 100644
--- a/src/unix/fontutil.cpp
+++ b/src/unix/fontutil.cpp
@@ -803,7 +803,7 @@ wxFontEncoding wxNativeFontInfo::GetEncoding() const
 
 void wxNativeFontInfo::SetPointSize(int pointsize)
 {
-    SetXFontComponent(wxXLFD_POINTSIZE, wxString::Format(wxT("%d"), pointsize));
+    SetXFontComponent(wxXLFD_POINTSIZE, wxString::FromInt(pointsize));
 }
 
 void wxNativeFontInfo::SetStyle(wxFontStyle style)
@@ -923,7 +923,7 @@ bool wxGetNativeFontEncoding(wxFontEncoding encoding,
             {
                 int cp = encoding - wxFONTENCODING_ISO8859_1 + 1;
                 info->xregistry = wxT("iso8859");
-                info->xencoding.Printf(wxT("%d"), cp);
+                info->xencoding = wxString::FromInt(cp);
             }
             break;
 
@@ -1473,7 +1473,7 @@ static wxNativeFont wxLoadQueryFont(int pointSize,
     }
     else
     {
-        sizeSpec.Printf(wxT("%d"), pointSize);
+        sizeSpec = wxString::FromInt(pointSize);
     }
 
     // construct the X font spec from our data
