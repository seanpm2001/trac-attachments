? wxuselog.patch
? include/wx/tipdlg.h
Index: src/common/zipstrm.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/zipstrm.cpp,v
retrieving revision 1.41
diff -u -r1.41 zipstrm.cpp
--- src/common/zipstrm.cpp	2006/01/18 22:58:32	1.41
+++ src/common/zipstrm.cpp	2006/03/15 08:28:26
@@ -117,7 +117,7 @@
 //
 static wxFileOffset QuietSeek(wxInputStream& stream, wxFileOffset pos)
 {
-#ifdef __WXDEBUG__
+#ifdef __WXDEBUG__ && wxUSE_LOG
     wxLogLevel level = wxLog::GetLogLevel();
     wxLog::SetLogLevel(wxLOG_Debug - 1);
     wxFileOffset result = stream.SeekI(pos);
Index: src/msw/mediactrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/mediactrl.cpp,v
retrieving revision 1.72
diff -u -r1.72 mediactrl.cpp
--- src/msw/mediactrl.cpp	2006/03/11 14:32:36	1.72
+++ src/msw/mediactrl.cpp	2006/03/15 08:28:52
@@ -1683,9 +1683,15 @@
     void name args \
     { if (m_ok) pfn_ ## name shortargs ; }
 
+#if wxUSE_LOG
 #define wxDL_METHOD_LOAD( lib, name, success ) \
     pfn_ ## name = (name ## Type) lib.GetSymbol( wxT(#name), &success ); \
     if (!success) { wxLog::EnableLogging(bWasLoggingEnabled); return false; }
+#else
+#define wxDL_METHOD_LOAD( lib, name, success ) \
+    pfn_ ## name = (name ## Type) lib.GetSymbol( wxT(#name), &success ); \
+    if (!success) { return false; }
+#endif
 
 
 class WXDLLIMPEXP_MEDIA wxQuickTimeLibrary
@@ -1800,11 +1806,15 @@
     m_ok = false;
 
     // Turn off the wxDynamicLibrary logging
-    bool bWasLoggingEnabled = wxLog::EnableLogging(false);
+#if wxUSE_LOG
+    bool bWasLoggingEnabled = wxLog::EnableLogging(false);    //Turn off the wxDynamicLibrary logging
+#endif
 
     if (!m_dll.Load(wxT("qtmlClient.dll")))
     {
+#if wxUSE_LOG
         wxLog::EnableLogging(bWasLoggingEnabled);
+#endif
         return false;
     }
 
@@ -1864,7 +1874,9 @@
     wxDL_METHOD_LOAD( m_dll, EndUpdate, m_ok );
     wxDL_METHOD_LOAD( m_dll, GetMoviesStickyError, m_ok );
 
+#if wxUSE_LOG
     wxLog::EnableLogging(bWasLoggingEnabled);
+#endif
     m_ok = true;
 
     return true;

 	  	 
