Index: samples/dnd/dnd.cpp
===================================================================
--- samples/dnd/dnd.cpp	(revision 48141)
+++ samples/dnd/dnd.cpp	(working copy)
@@ -25,6 +25,7 @@
 #include "wx/clipbrd.h"
 #include "wx/colordlg.h"
 #include "wx/metafile.h"
+#include "wx/dirctrl.h"
 
 #if defined(__WXGTK__) || defined(__WXX11__) || defined(__WXMOTIF__) || defined(__WXMAC__)
     #include "../sample.xpm"
@@ -56,7 +57,7 @@
 class DnDFile : public wxFileDropTarget
 {
 public:
-    DnDFile(wxListBox *pOwner) { m_pOwner = pOwner; }
+    DnDFile(wxListBox *pOwner = NULL) { m_pOwner = pOwner; }
 
     virtual bool OnDropFiles(wxCoord x, wxCoord y,
                              const wxArrayString& filenames);
@@ -211,6 +212,7 @@
     void OnDragMoveAllow(wxCommandEvent& event);
     void OnNewFrame(wxCommandEvent& event);
     void OnHelp (wxCommandEvent& event);
+	void OnBeginDrag (wxTreeEvent& event);
 #if wxUSE_LOG
     void OnLogClear(wxCommandEvent& event);
 #endif // wxUSE_LOG
@@ -243,6 +245,7 @@
     // GUI controls
     wxListBox  *m_ctrlFile,
                *m_ctrlText;
+	wxGenericDirCtrl *m_ctrlDir;
 
 #if wxUSE_LOG
     wxTextCtrl *m_ctrlLog;
@@ -987,6 +990,7 @@
                                 wxLB_HSCROLL | wxLB_ALWAYS_SB );
     m_ctrlText  = new wxListBox(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, 1, &strText,
                                 wxLB_HSCROLL | wxLB_ALWAYS_SB );
+	m_ctrlDir   = new wxGenericDirCtrl(this);
 
 #if wxUSE_LOG
     m_ctrlLog   = new wxTextCtrl(this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize,
@@ -1002,6 +1006,17 @@
     // associate drop targets with the controls
     m_ctrlFile->SetDropTarget(new DnDFile(m_ctrlFile));
     m_ctrlText->SetDropTarget(new DnDText(m_ctrlText));
+	m_ctrlDir->SetDropTarget(new DnDFile());
+
+    m_ctrlDir->Connect
+    (
+        wxID_ANY,
+        wxEVT_COMMAND_TREE_BEGIN_DRAG,
+        wxTreeEventHandler (DnDFrame::OnBeginDrag),
+        NULL,
+        this
+    );
+
 #if wxUSE_LOG
     m_ctrlLog->SetDropTarget(new URLDropTarget);
 #endif // wxUSE_LOG
@@ -1010,6 +1025,7 @@
     wxBoxSizer *sizer_top = new wxBoxSizer( wxHORIZONTAL );
     sizer_top->Add(m_ctrlFile, 1, wxEXPAND );
     sizer_top->Add(m_ctrlText, 1, wxEXPAND );
+	sizer_top->Add(m_ctrlDir,  1, wxEXPAND );
 
     wxBoxSizer *sizer = new wxBoxSizer( wxVERTICAL );
     sizer->Add(sizer_top, 1, wxEXPAND );
@@ -1028,6 +1044,18 @@
     menu_bar->Check(Menu_DragMoveAllow, true);
 }
 
+void DnDFrame::OnBeginDrag (wxTreeEvent& event)
+{
+    wxFileDataObject    my_data;
+    wxDropSource        dragSource  ( this );
+
+    // selected the currently draging item
+    my_data.AddFile(m_ctrlDir->GetPath());
+    dragSource.SetData(my_data);
+
+    wxDragResult result = dragSource.DoDragDrop( TRUE );
+}
+
 void DnDFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
 {
     Close(true);
@@ -1503,9 +1531,12 @@
     size_t nFiles = filenames.GetCount();
     wxString str;
     str.Printf( _T("%d files dropped"), (int)nFiles);
-    m_pOwner->Append(str);
-    for ( size_t n = 0; n < nFiles; n++ ) {
-        m_pOwner->Append(filenames[n]);
+
+	if (m_pOwner != NULL)
+	{
+		m_pOwner->Append(str);
+		for ( size_t n = 0; n < nFiles; n++ )
+			m_pOwner->Append(filenames[n]);
     }
 
     return true;

 	  	 
