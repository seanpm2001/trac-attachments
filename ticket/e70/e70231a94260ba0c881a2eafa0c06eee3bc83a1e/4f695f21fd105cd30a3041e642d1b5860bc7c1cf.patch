Index: src/html/htmlcell.cpp
===================================================================
--- src/html/htmlcell.cpp	(revision 72369)
+++ src/html/htmlcell.cpp	(working copy)
@@ -493,21 +493,22 @@
 {
     wxColour fg = info.GetState().GetFgColour();
     wxColour bg = info.GetState().GetBgColour();
+    wxBrushStyle mode = info.GetState().GetBgMode();
 
     if ( toSelection )
     {
-        dc.SetBackgroundMode(wxBRUSHSTYLE_SOLID);
+        dc.SetBackgroundMode(mode);
         dc.SetTextForeground(info.GetStyle().GetSelectedTextColour(fg));
         dc.SetTextBackground(info.GetStyle().GetSelectedTextBgColour(bg));
         dc.SetBackground(wxBrush(info.GetStyle().GetSelectedTextBgColour(bg),
-                                 wxBRUSHSTYLE_SOLID));
+                                 mode));
     }
     else
     {
-        dc.SetBackgroundMode(wxBRUSHSTYLE_TRANSPARENT);
+        dc.SetBackgroundMode(mode);
         dc.SetTextForeground(fg);
         dc.SetTextBackground(bg);
-        dc.SetBackground(wxBrush(bg, wxBRUSHSTYLE_SOLID));
+        dc.SetBackground(wxBrush(bg, mode));
     }
 }
 
@@ -572,16 +573,7 @@
     {
         wxHtmlSelectionState selstate = info.GetState().GetSelectionState();
         // Not changing selection state, draw the word in single mode:
-        if ( selstate != wxHTML_SEL_OUT &&
-             dc.GetBackgroundMode() != wxBRUSHSTYLE_SOLID )
-        {
-            SwitchSelState(dc, info, true);
-        }
-        else if ( selstate == wxHTML_SEL_OUT &&
-                  dc.GetBackgroundMode() == wxBRUSHSTYLE_SOLID )
-        {
-            SwitchSelState(dc, info, false);
-        }
+        SwitchSelState(dc, info, selstate != wxHTML_SEL_OUT);
         dc.DrawText(m_Word, x + m_PosX, y + m_PosY);
         drawSelectionAfterCell = (selstate != wxHTML_SEL_OUT);
     }
@@ -1552,17 +1544,13 @@
     if (m_Flags & wxHTML_CLR_BACKGROUND)
     {
         state.SetBgColour(m_Colour);
-        if (state.GetSelectionState() != wxHTML_SEL_IN)
-        {
-            dc.SetTextBackground(m_Colour);
-            dc.SetBackground(wxBrush(m_Colour, wxBRUSHSTYLE_SOLID));
-        }
-        else
-        {
-            wxColour c = info.GetStyle().GetSelectedTextBgColour(m_Colour);
-            dc.SetTextBackground(c);
-            dc.SetBackground(wxBrush(c, wxBRUSHSTYLE_SOLID));
-        }
+        state.SetBgMode(m_BackgroundMode);
+        const wxColour c = state.GetSelectionState() == wxHTML_SEL_IN
+                         ? info.GetStyle().GetSelectedTextBgColour(m_Colour)
+                         : m_Colour;
+        dc.SetTextBackground(c);
+        dc.SetBackground(wxBrush(c, m_BackgroundMode));
+        dc.SetBackgroundMode(m_BackgroundMode);
     }
 }
 
Index: src/html/m_span.cpp
===================================================================
--- src/html/m_span.cpp	(revision 72369)
+++ src/html/m_span.cpp	(working copy)
@@ -34,6 +34,8 @@
     TAG_HANDLER_PROC(tag)
     {
         wxColour oldclr = m_WParser->GetActualColor();
+        wxColour oldbackclr = m_WParser->GetActualBackgroundColor();
+        wxBrushStyle oldbackmode = m_WParser->GetActualBackgroundMode();
         int oldsize = m_WParser->GetFontSize();
         int oldbold = m_WParser->GetFontBold();
         int olditalic = m_WParser->GetFontItalic();
@@ -56,6 +58,18 @@
             }
         }
 
+        str = styleParams.GetParam(wxS("background-color"));
+        if ( !str.empty() )
+        {
+            wxColour clr;
+            if ( wxHtmlTag::ParseAsColour(str, &clr) )
+            {
+                m_WParser->SetActualBackgroundColor(clr);
+                m_WParser->SetActualBackgroundMode(wxBRUSHSTYLE_SOLID);
+                m_WParser->GetContainer()->InsertCell(new wxHtmlColourCell(wxBRUSHSTYLE_SOLID, clr));
+            }
+        }
+
         str = styleParams.GetParam(wxS("font-size"));
         if ( !str.empty() )
         {
@@ -151,6 +165,15 @@
                 new wxHtmlColourCell(oldclr));
         }
 
+        if (oldbackmode != m_WParser->GetActualBackgroundMode() ||
+            oldbackclr != m_WParser->GetActualBackgroundColor())
+        {
+            m_WParser->SetActualBackgroundMode(oldbackmode);
+            m_WParser->SetActualBackgroundColor(oldbackclr);
+            m_WParser->GetContainer()->InsertCell(
+                new wxHtmlColourCell(oldbackmode, oldbackclr));
+        }
+
         return true;
     }
 
Index: src/html/winpars.cpp
===================================================================
--- src/html/winpars.cpp	(revision 72369)
+++ src/html/winpars.cpp	(working copy)
@@ -214,6 +214,11 @@
     m_Link = wxHtmlLinkInfo( wxEmptyString );
     m_LinkColor.Set(0, 0, 0xFF);
     m_ActualColor.Set(0, 0, 0);
+    const wxColour windowColour = wxSystemSettings::GetColour(wxSYS_COLOUR_WINDOW) ;
+    m_ActualBackgroundColor = m_windowInterface
+                            ? m_windowInterface->GetHTMLBackgroundColour()
+                            : windowColour;
+    m_ActualBackgroundMode = wxBRUSHSTYLE_TRANSPARENT;
     m_Align = wxHTML_ALIGN_LEFT;
     m_ScriptMode = wxHTML_SCRIPT_NORMAL;
     m_ScriptBaseline = 0;
@@ -238,16 +243,13 @@
 #endif
 
     m_Container->InsertCell(new wxHtmlColourCell(m_ActualColor));
-    wxColour windowColour = wxSystemSettings::GetColour(wxSYS_COLOUR_WINDOW) ;
 
     m_Container->InsertCell
                  (
                    new wxHtmlColourCell
                        (
-                         m_windowInterface
-                            ? m_windowInterface->GetHTMLBackgroundColour()
-                            : windowColour,
-                         wxHTML_CLR_BACKGROUND
+                         m_ActualBackgroundMode,
+                         m_ActualBackgroundColor
                        )
                   );
 
Index: src/html/m_layout.cpp
===================================================================
--- src/html/m_layout.cpp	(revision 72369)
+++ src/html/m_layout.cpp	(working copy)
@@ -355,7 +355,7 @@
         if (tag.GetParamAsColour(wxT("BGCOLOR"), &clr))
         {
             m_WParser->GetContainer()->InsertCell(
-                new wxHtmlColourCell(clr, wxHTML_CLR_BACKGROUND));
+                new wxHtmlColourCell(wxBRUSHSTYLE_SOLID, clr));
             winIface->SetHTMLBackgroundColour(clr);
         }
 
Index: include/wx/html/htmlcell.h
===================================================================
--- include/wx/html/htmlcell.h	(revision 72369)
+++ include/wx/html/htmlcell.h	(working copy)
@@ -91,10 +91,13 @@
     const wxColour& GetFgColour() const { return m_fgColour; }
     void SetBgColour(const wxColour& c) { m_bgColour = c; }
     const wxColour& GetBgColour() const { return m_bgColour; }
+    void SetBgMode(wxBrushStyle m) { m_bgMode = m; }
+    wxBrushStyle GetBgMode() const { return m_bgMode; }
 
 private:
     wxHtmlSelectionState  m_selState;
     wxColour              m_fgColour, m_bgColour;
+    wxBrushStyle          m_bgMode;
 };
 
 
@@ -562,7 +565,13 @@
 class WXDLLIMPEXP_HTML wxHtmlColourCell : public wxHtmlCell
 {
 public:
-    wxHtmlColourCell(const wxColour& clr, int flags = wxHTML_CLR_FOREGROUND) : wxHtmlCell() {m_Colour = clr; m_Flags = flags;}
+    explicit wxHtmlColourCell(const wxColour& clr) : wxHtmlCell() {m_Colour = clr; m_Flags = wxHTML_CLR_FOREGROUND;}
+    wxHtmlColourCell(wxBrushStyle mode, const wxColour& clr) : wxHtmlCell()
+    {
+       m_Colour = clr;
+       m_Flags = wxHTML_CLR_BACKGROUND;
+       m_BackgroundMode = mode;
+    }
     virtual void Draw(wxDC& dc, int x, int y, int view_y1, int view_y2,
                       wxHtmlRenderingInfo& info);
     virtual void DrawInvisible(wxDC& dc, int x, int y,
@@ -571,6 +580,7 @@
 protected:
     wxColour m_Colour;
     unsigned m_Flags;
+    wxBrushStyle m_BackgroundMode;
 
     DECLARE_ABSTRACT_CLASS(wxHtmlColourCell)
     wxDECLARE_NO_COPY_CLASS(wxHtmlColourCell);
Index: include/wx/html/winpars.h
===================================================================
--- include/wx/html/winpars.h	(revision 72369)
+++ include/wx/html/winpars.h	(working copy)
@@ -132,6 +132,10 @@
     void SetLinkColor(const wxColour& clr) { m_LinkColor = clr; }
     const wxColour& GetActualColor() const { return m_ActualColor; }
     void SetActualColor(const wxColour& clr) { m_ActualColor = clr ;}
+    const wxColour& GetActualBackgroundColor() const { return m_ActualBackgroundColor; }
+    void SetActualBackgroundColor(const wxColour& clr) { m_ActualBackgroundColor = clr;}
+    wxBrushStyle GetActualBackgroundMode() const { return m_ActualBackgroundMode; }
+    void SetActualBackgroundMode(wxBrushStyle mode) { m_ActualBackgroundMode = mode;}
     const wxHtmlLinkInfo& GetLink() const { return m_Link; }
     void SetLink(const wxHtmlLinkInfo& link);
 
@@ -188,6 +192,8 @@
     int m_FontSize; // From 1 (smallest) to 7, default is 3.
     wxColour m_LinkColor;
     wxColour m_ActualColor;
+    wxColour m_ActualBackgroundColor;
+    wxBrushStyle m_ActualBackgroundMode;
             // basic font parameters.
     wxHtmlLinkInfo m_Link;
             // actual hypertext link or empty string
Index: samples/html/test/test.htm
===================================================================
--- samples/html/test/test.htm	(revision 72369)
+++ samples/html/test/test.htm	(working copy)
@@ -10,7 +10,7 @@
   <table border="0" cellspacing="0" cellpadding="5" style="width:100%; background:#C0C0C0;">
    <tr style="vertical-align:middle">
     <td style="text-align:left">
-     <span style="font-size: 24pt; font-weight: bold;">Header using styles</span>
+     <span style="font-size: 24pt; font-weight: bold; background-color: #00BF00;">Header using styles</span>
     </td>
 
     <td style="text-align:right">
