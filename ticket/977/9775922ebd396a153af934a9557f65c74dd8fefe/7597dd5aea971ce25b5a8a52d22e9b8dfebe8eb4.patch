--- wxWindows/samples/access/accesstest.cpp	2003-05-19 16:00:14.000000000 +0200
+++ wxWin/samples/access/accesstest.cpp	2003-09-12 12:17:10.000000000 +0200
@@ -32,3 +32,6 @@
 
-#include "wx/access.h"
+#if wxUSE_ACCESSIBILITY
+    #include "wx/access.h"
+#endif // wxUSE_ACCESSIBILITY
+
 #include "wx/splitter.h"
@@ -37,13 +40,16 @@
 #ifdef __WXMSW__
-#include "windows.h"
-#include <ole2.h>
-#include <oleauto.h>
-#include <oleacc.h>
-#include "wx/msw/ole/oleutils.h"
-#include "wx/msw/winundef.h"
-
-#ifndef OBJID_CLIENT
-#define OBJID_CLIENT 0xFFFFFFFC
-#endif
-
+    #include "windows.h"
+    #include <ole2.h>
+    #include <oleauto.h>
+
+    #if wxUSE_ACCESSIBILITY
+        #include <oleacc.h>
+    #endif // wxUSE_ACCESSIBILITY
+
+    #include "wx/msw/ole/oleutils.h"
+    #include "wx/msw/winundef.h"
+
+    #ifndef OBJID_CLIENT
+        #define OBJID_CLIENT 0xFFFFFFFC
+    #endif
 #endif
@@ -77,2 +83,4 @@
 
+#if wxUSE_ACCESSIBILITY
+
 // Define a new frame type: this is going to be our main frame
@@ -137,2 +145,4 @@
 
+#endif // wxUSE_ACCESSIBILITY
+
 // Create a new application object: this macro will allow wxWindows to create
@@ -155,2 +165,3 @@
 {
+#if wxUSE_ACCESSIBILITY
     // Note: JAWS for Windows will only speak the context-sensitive
@@ -174,4 +185,10 @@
     return TRUE;
+#else
+    wxMessageBox( _T("This sample has to be compiled with wxUSE_ACCESSIBILITY"), _T("Building error"), wxOK);
+    return FALSE;
+#endif // wxUSE_ACCESSIBILITY
 }
 
+#if wxUSE_ACCESSIBILITY
+
 class FrameAccessible: public wxWindowAccessible
@@ -612,3 +629,3 @@
 // representing the child element, starting from 1.
-wxAccStatus SplitterWindowAccessible::HitTest(const wxPoint& pt, int* childId, wxAccessible** childObject)
+wxAccStatus SplitterWindowAccessible::HitTest(const wxPoint& pt, int* childId, wxAccessible** WXUNUSED(childObject))
 {
@@ -672,8 +689,3 @@
             {
-                if (splitter->GetSplitMode() == wxSPLIT_VERTICAL)
-                {
-                    // Can't go down spatially if split vertically.
-                    return wxACC_FALSE;           
-                }
-                else
+                if (splitter->GetSplitMode() != wxSPLIT_VERTICAL)
                 {
@@ -691,7 +703,8 @@
                     }
-                    else
-                        return wxACC_FALSE;
                 }
-
+                return wxACC_FALSE;
+                #if 0
+                // below line is not executed due to earlier return
                 break;
+                #endif
             }
@@ -713,8 +726,3 @@
             {
-                if (splitter->GetSplitMode() == wxSPLIT_HORIZONTAL)
-                {
-                    // Can't go left spatially if split horizontally.
-                    return wxACC_FALSE;           
-                }
-                else
+                if (splitter->GetSplitMode() != wxSPLIT_HORIZONTAL)
                 {
@@ -732,7 +740,9 @@
                     }
-                    else
-                        return wxACC_FALSE;
                 }
+                return wxACC_FALSE;
             }
+            #if 0
+            // below line is not executed due to earlier return
             break;
+            #endif
             
@@ -752,6 +762,8 @@
                 }
-                else
                     return wxACC_FALSE;
             }
+            #if 0
+            // below line is not executed due to earlier return
             break;
+            #endif
             
@@ -771,6 +783,8 @@
                 }
-                else
                     return wxACC_FALSE;
             }
+            #if 0
+            // below line is not executed due to earlier return
             break;
+            #endif
             
@@ -778,8 +792,3 @@
             {
-                if (splitter->GetSplitMode() == wxSPLIT_HORIZONTAL)
-                {
-                    // Can't go right spatially if split horizontally.
-                    return wxACC_FALSE;           
-                }
-                else
+                if (splitter->GetSplitMode() != wxSPLIT_HORIZONTAL)
                 {
@@ -797,7 +806,10 @@
                     }
-                    else
-                        return wxACC_FALSE;
                 }
+                // Can't go right spatially if split horizontally.
+                return wxACC_FALSE;           
             }
+            #if 0
+            // below line is not executed due to earlier return
             break;
+            #endif
             
@@ -805,8 +817,3 @@
             {
-                if (splitter->GetSplitMode() == wxSPLIT_VERTICAL)
-                {
-                    // Can't go up spatially if split vertically.
-                    return wxACC_FALSE;           
-                }
-                else
+                if (splitter->GetSplitMode() != wxSPLIT_VERTICAL)
                 {
@@ -823,7 +830,10 @@
                     }
-                    else
-                        return wxACC_FALSE;
                 }
 
+                // Can't go up spatially if split vertically.
+                return wxACC_FALSE;           
+                #if 0
+                // below line is not executed due to earlier return
                 break;
+                #endif
             }
@@ -932,3 +942,3 @@
 // Gets the parent, or NULL.
-wxAccStatus SplitterWindowAccessible::GetParent(wxAccessible** parent)
+wxAccStatus SplitterWindowAccessible::GetParent(wxAccessible** WXUNUSED(parent))
 {
@@ -941,3 +951,3 @@
 // window (e.g. an edit control).
-wxAccStatus SplitterWindowAccessible::DoDefaultAction(int childId)
+wxAccStatus SplitterWindowAccessible::DoDefaultAction(int WXUNUSED(childId))
 {
@@ -952,3 +962,3 @@
 // a document has a default action of "Press" rather than "Prints the current document."
-wxAccStatus SplitterWindowAccessible::GetDefaultAction(int childId, wxString* actionName)
+wxAccStatus SplitterWindowAccessible::GetDefaultAction(int childId, wxString* WXUNUSED(actionName))
 {
@@ -1004,3 +1014,3 @@
 // Return e.g. ALT+K
-wxAccStatus SplitterWindowAccessible::GetKeyboardShortcut(int childId, wxString* shortcut)
+wxAccStatus SplitterWindowAccessible::GetKeyboardShortcut(int childId, wxString* WXUNUSED(shortcut))
 {
@@ -1068,3 +1078,3 @@
 // Selects the object or child.
-wxAccStatus SplitterWindowAccessible::Select(int childId, wxAccSelectionFlags selectFlags)
+wxAccStatus SplitterWindowAccessible::Select(int childId, wxAccSelectionFlags WXUNUSED(selectFlags))
 {
@@ -1084,3 +1094,3 @@
 // If this object has the focus, child should be 'this'.
-wxAccStatus SplitterWindowAccessible::GetFocus(int* childId, wxAccessible** child)
+wxAccStatus SplitterWindowAccessible::GetFocus(int* WXUNUSED(childId), wxAccessible** WXUNUSED(child))
 {
@@ -1097,3 +1107,3 @@
 // - a "void*" pointer to a wxAccessible child object
-wxAccStatus SplitterWindowAccessible::GetSelections(wxVariant* selections)
+wxAccStatus SplitterWindowAccessible::GetSelections(wxVariant* WXUNUSED(selections))
 {
@@ -1102 +1112,2 @@
 
+#endif // wxUSE_ACCESSIBILITY

 	  	 
