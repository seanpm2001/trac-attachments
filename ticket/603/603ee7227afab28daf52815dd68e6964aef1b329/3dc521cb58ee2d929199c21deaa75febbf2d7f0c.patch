Index: include/wx/compositewin.h
===================================================================
--- include/wx/compositewin.h	(révision 78049)
+++ include/wx/compositewin.h	(copie de travail)
@@ -112,7 +112,14 @@
             this->SetSize(-1, -1, -1, -1, wxSIZE_AUTO | wxSIZE_FORCE);
     }
 
-#if wxUSE_TOOLTIPS
+#if wxUSE_TOOLTIPS    
+    virtual void DoSetToolTipText(const wxString &tip)
+    {
+        BaseWindowClass::DoSetToolTipText(tip);
+        
+        SetForAllParts<const wxString &, const wxString &, void> (&wxWindowBase::SetToolTip, tip);
+    }
+
     virtual void DoSetToolTip(wxToolTip *tip)
     {
         BaseWindowClass::DoSetToolTip(tip);
@@ -119,6 +126,7 @@
 
         SetForAllParts(&wxWindowBase::CopyToolTip, tip);
     }
+
 #endif // wxUSE_TOOLTIPS
 
     virtual void SetFocus()
Index: include/wx/generic/spinctlg.h
===================================================================
--- include/wx/generic/spinctlg.h	(révision 78049)
+++ include/wx/generic/spinctlg.h	(copie de travail)
@@ -83,9 +83,6 @@
     // forward these functions to all subcontrols
     virtual bool Enable(bool enable = true);
     virtual bool Show(bool show = true);
-#if wxUSE_TOOLTIPS
-    virtual void DoSetToolTip(wxToolTip *tip);
-#endif // wxUSE_TOOLTIPS
 
     virtual bool SetBackgroundColour(const wxColour& colour);
 
Index: include/wx/window.h
===================================================================
--- include/wx/window.h	(révision 78049)
+++ include/wx/window.h	(copie de travail)
@@ -1312,7 +1312,7 @@
 
 #if wxUSE_TOOLTIPS
         // the easiest way to set a tooltip for a window is to use this method
-    void SetToolTip( const wxString &tip );
+    void SetToolTip( const wxString &tip ) { DoSetToolTipText(tip); }
         // attach a tooltip to the window, pointer can be NULL to remove
         // existing tooltip
     void SetToolTip( wxToolTip *tip ) { DoSetToolTip(tip); }
@@ -1787,6 +1787,7 @@
     virtual void DoCentre(int dir);
 
 #if wxUSE_TOOLTIPS
+    virtual void DoSetToolTipText( const wxString &tip );
     virtual void DoSetToolTip( wxToolTip *tip );
 #endif // wxUSE_TOOLTIPS
 
Index: src/common/wincmn.cpp
===================================================================
--- src/common/wincmn.cpp	(révision 78049)
+++ src/common/wincmn.cpp	(copie de travail)
@@ -2282,7 +2282,7 @@
     return m_tooltip ? m_tooltip->GetTip() : wxString();
 }
 
-void wxWindowBase::SetToolTip( const wxString &tip )
+void wxWindowBase::DoSetToolTipText( const wxString &tip )
 {
     // don't create the new tooltip if we already have one
     if ( m_tooltip )
Index: src/generic/spinctlg.cpp
===================================================================
--- src/generic/spinctlg.cpp	(révision 78049)
+++ src/generic/spinctlg.cpp	(copie de travail)
@@ -353,33 +353,7 @@
     return true;
 }
 
-#if wxUSE_TOOLTIPS
-void wxSpinCtrlGenericBase::DoSetToolTip(wxToolTip *tip)
-{
-    // Notice that we must check for the subcontrols not being NULL (as they
-    // could be if we were created with the default ctor and this is called
-    // before Create() for some reason) and that we can't call SetToolTip(tip)
-    // because this would take ownership of the wxToolTip object (twice).
-    if ( m_textCtrl )
-    {
-        if ( tip )
-            m_textCtrl->SetToolTip(tip->GetTip());
-        else
-            m_textCtrl->SetToolTip(NULL);
-    }
 
-    if ( m_spinButton )
-    {
-        if( tip )
-            m_spinButton->SetToolTip(tip->GetTip());
-        else
-            m_spinButton->SetToolTip(NULL);
-    }
-
-    wxWindowBase::DoSetToolTip(tip);
-}
-#endif // wxUSE_TOOLTIPS
-
 bool wxSpinCtrlGenericBase::SetBackgroundColour(const wxColour& colour)
 {
     // We need to provide this otherwise the entire composite window
