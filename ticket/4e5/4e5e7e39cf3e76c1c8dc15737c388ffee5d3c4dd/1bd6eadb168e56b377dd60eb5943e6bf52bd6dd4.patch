Index: include/wx/utils.h
===================================================================
--- include/wx/utils.h	(revision 53930)
+++ include/wx/utils.h	(working copy)
@@ -59,6 +59,14 @@
 #define wxMin(a,b)            (((a) < (b)) ? (a) : (b))
 #define wxClip(a,b,c)         (((a) < (b)) ? (b) : (((a) > (c)) ? (c) : (a)))
 
+// Set/clear flags. Using long, like wxWindow::GetWindowStyleFlag
+inline long wxModifyStyle(long flags, long remove, long add)
+{
+   flags &=~remove;
+   flags |=add;
+   return flags;
+}
+
 // wxGetFreeMemory can return huge amount of memory on 32-bit platforms as well
 // so to always use long long for its result type on all platforms which
 // support it
Index: include/wx/window.h
===================================================================
--- include/wx/window.h	(revision 53930)
+++ include/wx/window.h	(working copy)
@@ -589,6 +589,7 @@
         // just some (somewhat shorter) synonims
     void SetWindowStyle( long style ) { SetWindowStyleFlag(style); }
     long GetWindowStyle() const { return GetWindowStyleFlag(); }
+    bool ModifyStyle(long remove, long add);
 
         // check if the flag is set
     bool HasFlag(int flag) const { return (m_windowStyle & flag) != 0; }
Index: samples/calendar/calendar.cpp
===================================================================
--- samples/calendar/calendar.cpp	(revision 53930)
+++ samples/calendar/calendar.cpp	(working copy)
@@ -723,11 +723,7 @@
 
 void MyPanel::ToggleCalStyle(bool on, int flag)
 {
-    long style = m_calendar->GetWindowStyle();
-    if ( on )
-        style |= flag;
-    else
-        style &= ~flag;
+    long style = ::wxModifyStyle(m_calendar->GetWindowStyle(), on ? 0 : flag, on ? flag : 0);
 
     if ( flag == wxCAL_SEQUENTIAL_MONTH_SELECTION 
         || flag == wxCAL_SHOW_WEEK_NUMBERS)
Index: src/common/calctrlcmn.cpp
===================================================================
--- src/common/calctrlcmn.cpp	(revision 53930)
+++ src/common/calctrlcmn.cpp	(working copy)
@@ -49,15 +49,7 @@
 
 bool wxCalendarCtrlBase::EnableMonthChange(bool enable)
 {
-    const long styleOrig = GetWindowStyle();
-    long style = enable ? styleOrig & ~wxCAL_NO_MONTH_CHANGE
-                        : styleOrig | wxCAL_NO_MONTH_CHANGE;
-    if ( style == styleOrig )
-        return false;
-
-    SetWindowStyle(style);
-
-    return true;
+    return ModifyStyle(enable ? wxCAL_NO_MONTH_CHANGE : 0, enable ? 0 : wxCAL_NO_MONTH_CHANGE);
 }
 
 void wxCalendarCtrlBase::GenerateAllChangeEvents(const wxDateTime& dateOld)
Index: src/common/utilscmn.cpp
===================================================================
--- src/common/utilscmn.cpp	(revision 53930)
+++ src/common/utilscmn.cpp	(working copy)
@@ -1424,13 +1424,8 @@
                         wxCoord x, wxCoord y, bool centre )
 {
     wxString str;
-    long style = wxTextEntryDialogStyle;
+    long style = wxModifyStyle(wxTextEntryDialogStyle, centre ? 0 : wxCENTRE, centre ? wxCENTRE : 0);
 
-    if (centre)
-        style |= wxCENTRE;
-    else
-        style &= ~wxCENTRE;
-
     wxTextEntryDialog dialog(parent, message, caption, defaultValue, style, wxPoint(x, y));
 
     if (dialog.ShowModal() == wxID_OK)
@@ -1448,13 +1443,8 @@
                                wxCoord x, wxCoord y, bool centre )
 {
     wxString str;
-    long style = wxTextEntryDialogStyle;
+    long style = wxModifyStyle(wxTextEntryDialogStyle, centre ? 0 : wxCENTRE, centre ? wxCENTRE : 0);
 
-    if (centre)
-        style |= wxCENTRE;
-    else
-        style &= ~wxCENTRE;
-
     wxPasswordEntryDialog dialog(parent, message, caption, defaultValue,
                              style, wxPoint(x, y));
     if ( dialog.ShowModal() == wxID_OK )
Index: src/common/wincmn.cpp
===================================================================
--- src/common/wincmn.cpp	(revision 53930)
+++ src/common/wincmn.cpp	(working copy)
@@ -275,26 +275,26 @@
     return true;
 }
 
+bool wxWindowBase::ModifyStyle(long remove, long add)
+{
+   long style = GetWindowStyleFlag();
+   long newstyle = ::wxModifyStyle(style, remove, add);
+   bool ok = (style != newstyle);
+   if (ok)
+   {
+      SetWindowStyleFlag(newstyle);
+   }
+   return ok;
+}
+
 bool wxWindowBase::ToggleWindowStyle(int flag)
 {
     wxASSERT_MSG( flag, _T("flags with 0 value can't be toggled") );
 
-    bool rc;
     long style = GetWindowStyleFlag();
-    if ( style & flag )
-    {
-        style &= ~flag;
-        rc = false;
-    }
-    else // currently off
-    {
-        style |= flag;
-        rc = true;
-    }
-
-    SetWindowStyleFlag(style);
-
-    return rc;
+    bool set = ((style & flag) == 0);
+    ModifyStyle(set ? 0 : flag, set ? flag : 0);
+    return set;
 }
 
 // ----------------------------------------------------------------------------
Index: src/generic/calctrlg.cpp
===================================================================
--- src/generic/calctrlg.cpp	(revision 53930)
+++ src/generic/calctrlg.cpp	(working copy)
@@ -458,12 +458,7 @@
 {
     if ( enable != AllowYearChange() )
     {
-        long style = GetWindowStyle();
-        if ( enable )
-            style &= ~wxCAL_NO_YEAR_CHANGE;
-        else
-            style |= wxCAL_NO_YEAR_CHANGE;
-        SetWindowStyle(style);
+        ModifyStyle(enable ? 0 : wxCAL_NO_YEAR_CHANGE, enable ? wxCAL_NO_YEAR_CHANGE : 0);
 
         ShowCurrentControls();
         if ( GetWindowStyle() & wxCAL_SEQUENTIAL_MONTH_SELECTION )
@@ -1762,14 +1757,8 @@
 
 void wxGenericCalendarCtrl::EnableHolidayDisplay(bool display)
 {
-    long style = GetWindowStyle();
-    if ( display )
-        style |= wxCAL_SHOW_HOLIDAYS;
-    else
-        style &= ~wxCAL_SHOW_HOLIDAYS;
+    ModifyStyle(display ? 0 : wxCAL_SHOW_HOLIDAYS, display ? wxCAL_SHOW_HOLIDAYS : 0);
 
-    SetWindowStyle(style);
-
     if ( display )
         SetHolidayAttrs();
     else
Index: src/msw/button.cpp
===================================================================
--- src/msw/button.cpp	(revision 53930)
+++ src/msw/button.cpp	(working copy)
@@ -242,13 +242,9 @@
     // doesn't seem to do anything very useful but it shouldn't hurt and we do
     // have to set it whenever the label becomes multi line as otherwise it
     // wouldn't be shown correctly)
-    long styleOld = ::GetWindowLong(GetHwnd(), GWL_STYLE),
-         styleNew;
-    if ( label.find(_T('\n')) != wxString::npos )
-        styleNew = styleOld | BS_MULTILINE;
-    else
-        styleNew = styleOld & ~BS_MULTILINE;
-
+    bool set = label.find(_T('\n')) != wxString::npos;
+    long styleOld = ::GetWindowLong(GetHwnd(), GWL_STYLE);
+    long styleNew = wxModifyStyle(styleOld, set ? 0 : BS_MULTILINE, set ? BS_MULTILINE : 0);
     if ( styleNew != styleOld )
         ::SetWindowLong(GetHwnd(), GWL_STYLE, styleNew);
 
Index: src/msw/listctrl.cpp
===================================================================
--- src/msw/listctrl.cpp	(revision 53930)
+++ src/msw/listctrl.cpp	(working copy)
@@ -520,25 +520,24 @@
 // Add or remove a single window style
 void wxListCtrl::SetSingleStyle(long style, bool add)
 {
-    long flag = GetWindowStyleFlag();
+    long remove;
 
     // Get rid of conflicting styles
     if ( add )
     {
+        remove = 0;
         if ( style & wxLC_MASK_TYPE)
-            flag = flag & ~wxLC_MASK_TYPE;
+            remove |= wxLC_MASK_TYPE;
         if ( style & wxLC_MASK_ALIGN )
-            flag = flag & ~wxLC_MASK_ALIGN;
+            remove |= wxLC_MASK_ALIGN;
         if ( style & wxLC_MASK_SORT )
-            flag = flag & ~wxLC_MASK_SORT;
+            remove |= wxLC_MASK_SORT;
     }
-
-    if ( add )
-        flag |= style;
     else
-        flag &= ~style;
-
-    SetWindowStyleFlag(flag);
+    {
+        remove = style;
+    }
+    ModifyStyle(remove, add ? style : 0);
 }
 
 // Set the whole window style
Index: src/msw/window.cpp
===================================================================
--- src/msw/window.cpp	(revision 53930)
+++ src/msw/window.cpp	(working copy)
@@ -4274,13 +4274,13 @@
     long exstyle = ::GetWindowLong(GetHwnd(), GWL_EXSTYLE);
 
     // Twiddle the bit as needed
-    if ( on )
-        exstyle |= WS_EX_COMPOSITED;
-    else
-        exstyle &= ~WS_EX_COMPOSITED;
+    long newstyle = ::wxModifyStyle(exstyle, on ? 0 : WS_EX_COMPOSITED, on ? WS_EX_COMPOSITED : 0);
 
     // put it back
-    ::SetWindowLong(GetHwnd(), GWL_EXSTYLE, exstyle);
+    if (newstyle != exstyle)
+    {
+        ::SetWindowLong(GetHwnd(), GWL_EXSTYLE, newstyle);
+    }
 }
 
 // ---------------------------------------------------------------------------
