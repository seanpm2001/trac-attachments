Index: src/msw/treectrl.cpp
===================================================================
--- src/msw/treectrl.cpp	(revision 55112)
+++ src/msw/treectrl.cpp	(working copy)
@@ -686,6 +686,8 @@
     gs_expandEvents[IDX_COLLAPSE][IDX_DOING] = wxEVT_COMMAND_TREE_ITEM_COLLAPSING;
     gs_expandEvents[IDX_EXPAND][IDX_DONE] = wxEVT_COMMAND_TREE_ITEM_EXPANDED;
     gs_expandEvents[IDX_EXPAND][IDX_DOING] = wxEVT_COMMAND_TREE_ITEM_EXPANDING;
+
+    SetBackgroundStyle(wxBG_STYLE_CUSTOM); // don't redraw background, producing flicker
 }
 
 bool wxTreeCtrl::Create(wxWindow *parent,
Index: src/msw/window.cpp
===================================================================
--- src/msw/window.cpp	(revision 55112)
+++ src/msw/window.cpp	(working copy)
@@ -4726,6 +4726,14 @@
 
 void wxWindowMSW::OnEraseBackground(wxEraseEvent& event)
 {
+    if ( GetBackgroundStyle() == wxBG_STYLE_CUSTOM )
+    {
+        // don't skip the event here, custom background means that the app
+        // is drawing it itself in its OnPaint(), so don't draw it at all
+        // now to avoid flicker
+        return;
+    }
+
     // standard non top level controls (i.e. except the dialogs) always erase
     // their background themselves in HandleCtlColor() or have some control-
     // specific ways to set the colours (common controls)
@@ -4735,14 +4743,6 @@
         return;
     }
 
-    if ( GetBackgroundStyle() == wxBG_STYLE_CUSTOM )
-    {
-        // don't skip the event here, custom background means that the app
-        // is drawing it itself in its OnPaint(), so don't draw it at all
-        // now to avoid flicker
-        return;
-    }
-
     wxDC *dc = event.GetDC();
     if (!dc) return;
     wxMSWDCImpl *impl = (wxMSWDCImpl*) dc->GetImpl();
