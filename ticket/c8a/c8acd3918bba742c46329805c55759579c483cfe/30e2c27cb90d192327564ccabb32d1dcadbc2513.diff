diff -ur ../wxWidgets/include/wx/debug.h include/wx/debug.h
--- ../wxWidgets/include/wx/debug.h	2005-07-23 08:29:00.000000000 -0700
+++ include/wx/debug.h	2006-03-18 10:13:00.000000000 -0800
@@ -89,11 +89,6 @@
   /*  the program is running under debugger, of course) */
   extern void WXDLLIMPEXP_BASE wxTrap();
 
-  /*  helper function used to implement wxASSERT and wxASSERT_MSG */
-  /*  */
-  /*  note using "int" and not "bool" for cond to avoid VC++ warnings about */
-  /*  implicit conversions when doing "wxAssert( pointer )" and also use of */
-  /*  "!!cond" below to ensure that everything is converted to int */
   extern void WXDLLIMPEXP_BASE wxAssert(int cond,
                                         const wxChar *szFile,
                                         int nLine,
@@ -101,11 +96,17 @@
                                         const wxChar *szMsg = NULL) ;
 
   /*  generic assert macro */
-  #define wxASSERT(cond) wxAssert(!!(cond), __TFILE__, __LINE__, _T(#cond))
+  #define wxASSERT(cond) wxASSERT_MSG(cond, NULL)
 
   /*  assert with additional message explaining it's cause */
   #define wxASSERT_MSG(cond, msg) \
-    wxAssert(!!(cond), __TFILE__, __LINE__, _T(#cond), msg)
+    if (cond) ; else wxOnAssert(__TFILE__, __LINE__, _T(#cond), msg)
+
+  /*  special form of assert: always triggers it (in debug mode) */
+  #define wxFAIL wxFAIL_MSG(NULL)
+
+  /*  FAIL with some message */
+  #define wxFAIL_MSG(msg) wxOnAssert(__TFILE__, __LINE__, wxT("wxAssertFailure"), msg)
 
   /*  an assert helper used to avoid warning when testing constant expressions, */
   /*  i.e. wxASSERT( sizeof(int) == 4 ) can generate a compiler warning about */
@@ -122,6 +123,8 @@
   /*  no more bugs ;-) */
   #define wxASSERT(cond)
   #define wxASSERT_MSG(x, m)
+  #define wxFAIL
+  #define wxFAIL_MSG(msg)
 #endif  /* __WXDEBUG__ */
 
 #ifdef __cplusplus
@@ -132,12 +135,6 @@
 
 #define wxAssertFailure wxFalse
 
-/*  special form of assert: always triggers it (in debug mode) */
-#define wxFAIL                 wxASSERT(wxAssertFailure)
-
-/*  FAIL with some message */
-#define wxFAIL_MSG(msg)        wxASSERT_MSG(wxAssertFailure, msg)
-
 /*  NB: the following macros work also in release mode! */
 
 /*
@@ -148,16 +145,16 @@
 */
 
 /*  check that expression is true, "return" if not (also FAILs in debug mode) */
-#define wxCHECK(x, rc)            if (!(x)) {wxFAIL; return rc; }
+#define wxCHECK(x, rc)            wxCHECK_MSG(x, rc, NULL)
 
 /*  as wxCHECK but with a message explaining why we fail */
-#define wxCHECK_MSG(x, rc, msg)   if (!(x)) {wxFAIL_MSG(msg); return rc; }
+#define wxCHECK_MSG(x, rc, msg)   wxCHECK2_MSG(x, return rc, msg)
 
 /*  check that expression is true, perform op if not */
-#define wxCHECK2(x, op)           if (!(x)) {wxFAIL; op; }
+#define wxCHECK2(x, op)           wxCHECK2_MSG(x, op, NULL)
 
 /*  as wxCHECK2 but with a message explaining why we fail */
-#define wxCHECK2_MSG(x, op, msg)  if (!(x)) {wxFAIL_MSG(msg); op; }
+#define wxCHECK2_MSG(x, op, msg)  if (x) ; else do { wxFAIL_MSG(msg); op; } while (0)
 
 /*  special form of wxCHECK2: as wxCHECK, but for use in void functions */
 /*  */
@@ -165,7 +162,7 @@
 /*      there is no other way to tell the caller what exactly went wrong */
 /*      from the void function (of course, the function shouldn't be void */
 /*      to begin with...) */
-#define wxCHECK_RET(x, msg)       if (!(x)) {wxFAIL_MSG(msg); return; }
+#define wxCHECK_RET(x, msg)       wxCHECK2_MSG(x, return, msg)
 
 /*  ---------------------------------------------------------------------------- */
 /*  Compile time asserts */
diff -ur ../wxWidgets/src/cocoa/bitmap.mm ./src/cocoa/bitmap.mm
--- ../wxWidgets/src/cocoa/bitmap.mm	2005-05-23 09:32:36.000000000 -0700
+++ ./src/cocoa/bitmap.mm	2006-03-17 21:01:08.000000000 -0800
@@ -415,11 +415,11 @@
 #if wxUSE_IMAGE && wxUSE_XPM
     UnRef();
 
-    wxCHECK_MSG( xpm, false, wxT("invalid XPM data") )
+    wxCHECK_MSG( xpm, false, wxT("invalid XPM data") );
 
     wxXPMDecoder decoder;
     wxImage img = decoder.ReadData(xpm);
-    wxCHECK_MSG( img.Ok(), false, wxT("invalid XPM data") )
+    wxCHECK_MSG( img.Ok(), false, wxT("invalid XPM data") );
 
     *this = wxBitmap(img);
     return true;
diff -ur ../wxWidgets/src/common/datetime.cpp ./src/common/datetime.cpp
--- ../wxWidgets/src/common/datetime.cpp	2006-02-06 19:18:01.000000000 -0800
+++ ./src/common/datetime.cpp	2006-03-17 21:11:35.000000000 -0800
@@ -204,13 +204,8 @@
 // ----------------------------------------------------------------------------
 
 // debugging helper: just a convenient replacement of wxCHECK()
-#define wxDATETIME_CHECK(expr, msg)     \
-        if ( !(expr) )                  \
-        {                               \
-            wxFAIL_MSG(msg);            \
-            *this = wxInvalidDateTime;  \
-            return *this;               \
-        }
+#define wxDATETIME_CHECK(expr, msg) \
+    wxCHECK2_MSG(expr, *this = wxInvalidDateTime; return *this, msg)
 
 // ----------------------------------------------------------------------------
 // private classes
diff -ur ../wxWidgets/src/gtk/bitmap.cpp ./src/gtk/bitmap.cpp
--- ../wxWidgets/src/gtk/bitmap.cpp	2006-03-07 18:31:40.000000000 -0800
+++ ./src/gtk/bitmap.cpp	2006-03-17 20:42:54.000000000 -0800
@@ -298,7 +298,7 @@
         depth = visual->depth;
 
     wxCHECK_MSG( (depth == visual->depth) || (depth == 1) || (depth == 32), false,
-                    wxT("invalid bitmap depth") )
+                    wxT("invalid bitmap depth") );
 
     m_refData = new wxBitmapRefData();
     M_BMPDATA->m_mask = (wxMask *) NULL;
@@ -328,7 +328,7 @@
 {
     UnRef();
 
-    wxCHECK_MSG( bits != NULL, false, wxT("invalid bitmap data") )
+    wxCHECK_MSG( bits != NULL, false, wxT("invalid bitmap data") );
 
     GdkVisual *visual = wxTheApp->GetGdkVisual();
 
@@ -557,8 +557,8 @@
 {
     UnRef();
 
-    wxCHECK_MSG( image.Ok(), false, wxT("invalid image") )
-    wxCHECK_MSG( depth == -1 || depth == 1, false, wxT("invalid bitmap depth") )
+    wxCHECK_MSG( image.Ok(), false, wxT("invalid image") );
+    wxCHECK_MSG( depth == -1 || depth == 1, false, wxT("invalid bitmap depth") );
 
     if (image.GetWidth() <= 0 || image.GetHeight() <= 0)
         return false;
diff -ur ../wxWidgets/src/gtk/dnd.cpp ./src/gtk/dnd.cpp
--- ../wxWidgets/src/gtk/dnd.cpp	2006-03-09 08:53:38.000000000 -0800
+++ ./src/gtk/dnd.cpp	2006-03-17 20:43:39.000000000 -0800
@@ -345,7 +345,7 @@
         GdkAtom format = drop_target->GetMatchingPair();
 
         // this does happen somehow, see bug 555111
-        wxCHECK_MSG( format, FALSE, _T("no matching GdkAtom for format?") )
+        wxCHECK_MSG( format, FALSE, _T("no matching GdkAtom for format?") );
 
 /*
         GdkDragAction action = GDK_ACTION_MOVE;
diff -ur ../wxWidgets/src/gtk1/bitmap.cpp ./src/gtk1/bitmap.cpp
--- ../wxWidgets/src/gtk1/bitmap.cpp	2006-02-10 08:32:11.000000000 -0800
+++ ./src/gtk1/bitmap.cpp	2006-03-17 20:49:30.000000000 -0800
@@ -315,7 +315,7 @@
 {
     UnRef();
 
-    wxCHECK_MSG( bits != NULL, false, wxT("invalid bitmap data") )
+    wxCHECK_MSG( bits != NULL, false, wxT("invalid bitmap data") );
 
     GdkVisual *visual = wxTheApp->GetGdkVisual();
 
@@ -527,8 +527,8 @@
 {
     UnRef();
 
-    wxCHECK_MSG( image.Ok(), false, wxT("invalid image") )
-    wxCHECK_MSG( depth == -1 || depth == 1, false, wxT("invalid bitmap depth") )
+    wxCHECK_MSG( image.Ok(), false, wxT("invalid image") );
+    wxCHECK_MSG( depth == -1 || depth == 1, false, wxT("invalid bitmap depth") );
 
     if (image.GetWidth() <= 0 || image.GetHeight() <= 0)
         return false;
diff -ur ../wxWidgets/src/gtk1/dnd.cpp ./src/gtk1/dnd.cpp
--- ../wxWidgets/src/gtk1/dnd.cpp	2006-01-22 17:14:19.000000000 -0800
+++ ./src/gtk1/dnd.cpp	2006-03-17 20:49:57.000000000 -0800
@@ -359,7 +359,7 @@
         GdkAtom format = drop_target->GetMatchingPair();
 
         // this does happen somehow, see bug 555111
-        wxCHECK_MSG( format, FALSE, _T("no matching GdkAtom for format?") )
+        wxCHECK_MSG( format, FALSE, _T("no matching GdkAtom for format?") );
 
 /*
         GdkDragAction action = GDK_ACTION_MOVE;
diff -ur ../wxWidgets/src/gtk1/font.cpp ./src/gtk1/font.cpp
--- ../wxWidgets/src/gtk1/font.cpp	2006-02-10 08:32:11.000000000 -0800
+++ ./src/gtk1/font.cpp	2006-03-17 20:50:06.000000000 -0800
@@ -757,7 +757,7 @@
 {
     GdkFont *font = (GdkFont *) NULL;
 
-    wxCHECK_MSG( Ok(), font, wxT("invalid font") )
+    wxCHECK_MSG( Ok(), font, wxT("invalid font") );
 
     long int_scale = long(scale * 100.0 + 0.5); // key for fontlist
     int point_scale = (int)((M_FONTDATA->m_pointSize * 10 * int_scale) / 100);
diff -ur ../wxWidgets/src/mac/carbon/bitmap.cpp ./src/mac/carbon/bitmap.cpp
--- ../wxWidgets/src/mac/carbon/bitmap.cpp	2006-03-10 20:57:11.000000000 -0800
+++ ./src/mac/carbon/bitmap.cpp	2006-03-17 20:50:14.000000000 -0800
@@ -876,11 +876,11 @@
 bool wxBitmap::CreateFromXpm(const char **bits)
 {
 #if wxUSE_IMAGE
-    wxCHECK_MSG( bits != NULL, false, wxT("invalid bitmap data") )
+    wxCHECK_MSG( bits != NULL, false, wxT("invalid bitmap data") );
 
     wxXPMDecoder decoder;
     wxImage img = decoder.ReadData(bits);
-    wxCHECK_MSG( img.Ok(), false, wxT("invalid bitmap data") )
+    wxCHECK_MSG( img.Ok(), false, wxT("invalid bitmap data") );
 
     *this = wxBitmap(img);
 
@@ -1027,7 +1027,7 @@
 
 wxBitmap::wxBitmap(const wxImage& image, int depth)
 {
-    wxCHECK_RET( image.Ok(), wxT("invalid image") )
+    wxCHECK_RET( image.Ok(), wxT("invalid image") );
 
     // width and height of the device-dependent bitmap
     int width = image.GetWidth();
diff -ur ../wxWidgets/src/mac/carbon/cursor.cpp ./src/mac/carbon/cursor.cpp
--- ../wxWidgets/src/mac/carbon/cursor.cpp	2006-02-20 10:35:11.000000000 -0800
+++ ./src/mac/carbon/cursor.cpp	2006-03-17 20:50:22.000000000 -0800
@@ -262,10 +262,10 @@
 bool wxCursor::CreateFromXpm(const char **bits)
 {
 #if wxUSE_IMAGE
-    wxCHECK_MSG( bits != NULL, false, wxT("invalid cursor data") )
+    wxCHECK_MSG( bits != NULL, false, wxT("invalid cursor data") );
     wxXPMDecoder decoder;
     wxImage img = decoder.ReadData(bits);
-    wxCHECK_MSG( img.Ok(), false, wxT("invalid cursor data") )
+    wxCHECK_MSG( img.Ok(), false, wxT("invalid cursor data") );
     CreateFromImage( img ) ;
     return true;
 #else
diff -ur ../wxWidgets/src/mac/classic/bitmap.cpp ./src/mac/classic/bitmap.cpp
--- ../wxWidgets/src/mac/classic/bitmap.cpp	2005-09-28 19:00:57.000000000 -0700
+++ ./src/mac/classic/bitmap.cpp	2006-03-17 20:50:51.000000000 -0800
@@ -508,10 +508,10 @@
 
 bool wxBitmap::CreateFromXpm(const char **bits)
 {
-    wxCHECK_MSG( bits != NULL, FALSE, wxT("invalid bitmap data") )
+    wxCHECK_MSG( bits != NULL, FALSE, wxT("invalid bitmap data") );
     wxXPMDecoder decoder;
     wxImage img = decoder.ReadData(bits);
-    wxCHECK_MSG( img.Ok(), FALSE, wxT("invalid bitmap data") )
+    wxCHECK_MSG( img.Ok(), FALSE, wxT("invalid bitmap data") );
     *this = wxBitmap(img);
     return TRUE;
 }
@@ -718,8 +718,8 @@
 
 wxBitmap::wxBitmap(const wxImage& image, int depth)
 {
-    wxCHECK_RET( image.Ok(), wxT("invalid image") )
-    wxCHECK_RET( depth == -1, wxT("invalid bitmap depth") )
+    wxCHECK_RET( image.Ok(), wxT("invalid image") );
+    wxCHECK_RET( depth == -1, wxT("invalid bitmap depth") );
 
     m_refData = new wxBitmapRefData();
 
diff -ur ../wxWidgets/src/mac/classic/cursor.cpp ./src/mac/classic/cursor.cpp
--- ../wxWidgets/src/mac/classic/cursor.cpp	2005-09-28 19:00:57.000000000 -0700
+++ ./src/mac/classic/cursor.cpp	2006-03-17 20:51:23.000000000 -0800
@@ -94,10 +94,10 @@
 
 bool wxCursor::CreateFromXpm(const char **bits)
 {
-    wxCHECK_MSG( bits != NULL, FALSE, wxT("invalid cursor data") )
+    wxCHECK_MSG( bits != NULL, FALSE, wxT("invalid cursor data") );
     wxXPMDecoder decoder;
     wxImage img = decoder.ReadData(bits);
-    wxCHECK_MSG( img.Ok(), FALSE, wxT("invalid cursor data") )    
+    wxCHECK_MSG( img.Ok(), FALSE, wxT("invalid cursor data") );
 	CreateFromImage( img ) ;
     return TRUE;
 }
diff -ur ../wxWidgets/src/mgl/bitmap.cpp ./src/mgl/bitmap.cpp
--- ../wxWidgets/src/mgl/bitmap.cpp	2006-02-08 20:21:34.000000000 -0800
+++ ./src/mgl/bitmap.cpp	2006-03-17 20:57:45.000000000 -0800
@@ -205,7 +205,7 @@
 {
     UnRef();
 
-    wxCHECK_MSG( (width > 0) && (height > 0), false, wxT("invalid bitmap size") )
+    wxCHECK_MSG( (width > 0) && (height > 0), false, wxT("invalid bitmap size") );
 
     pixel_format_t pf_dummy;
     pixel_format_t *pf;
@@ -267,11 +267,11 @@
 
 bool wxBitmap::CreateFromXpm(const char **bits)
 {
-    wxCHECK_MSG( bits != NULL, false, wxT("invalid bitmap data") )
+    wxCHECK_MSG( bits != NULL, false, wxT("invalid bitmap data") );
 
     wxXPMDecoder decoder;
     wxImage img = decoder.ReadData(bits);
-    wxCHECK_MSG( img.Ok(), false, wxT("invalid bitmap data") )
+    wxCHECK_MSG( img.Ok(), false, wxT("invalid bitmap data") );
 
     *this = wxBitmap(img);
 
@@ -282,7 +282,7 @@
 {
     long width, height;
 
-    wxCHECK_RET( image.Ok(), wxT("invalid image") )
+    wxCHECK_RET( image.Ok(), wxT("invalid image") );
 
     width = image.GetWidth();
     height = image.GetHeight();
diff -ur ../wxWidgets/src/msw/bitmap.cpp ./src/msw/bitmap.cpp
--- ../wxWidgets/src/msw/bitmap.cpp	2006-02-08 20:21:34.000000000 -0800
+++ ./src/msw/bitmap.cpp	2006-03-17 20:48:51.000000000 -0800
@@ -476,11 +476,11 @@
 bool wxBitmap::CreateFromXpm(const char **data)
 {
 #if wxUSE_IMAGE && wxUSE_XPM && wxUSE_WXDIB
-    wxCHECK_MSG( data != NULL, false, wxT("invalid bitmap data") )
+    wxCHECK_MSG( data != NULL, false, wxT("invalid bitmap data") );
 
     wxXPMDecoder decoder;
     wxImage img = decoder.ReadData(data);
-    wxCHECK_MSG( img.Ok(), false, wxT("invalid bitmap data") )
+    wxCHECK_MSG( img.Ok(), false, wxT("invalid bitmap data") );
 
     *this = wxBitmap(img);
     return true;
diff -ur ../wxWidgets/src/msw/spinbutt.cpp ./src/msw/spinbutt.cpp
--- ../wxWidgets/src/msw/spinbutt.cpp	2006-03-09 08:53:39.000000000 -0800
+++ ./src/msw/spinbutt.cpp	2006-03-17 20:58:08.000000000 -0800
@@ -277,7 +277,7 @@
 bool wxSpinButton::MSWOnScroll(int WXUNUSED(orientation), WXWORD wParam,
                                WXWORD pos, WXHWND control)
 {
-    wxCHECK_MSG( control, false, wxT("scrolling what?") )
+    wxCHECK_MSG( control, false, wxT("scrolling what?") );
 
     if ( wParam != SB_THUMBPOSITION )
     {
diff -ur ../wxWidgets/src/os2/bitmap.cpp ./src/os2/bitmap.cpp
--- ../wxWidgets/src/os2/bitmap.cpp	2006-01-04 20:58:36.000000000 -0800
+++ ./src/os2/bitmap.cpp	2006-03-17 20:52:47.000000000 -0800
@@ -389,12 +389,12 @@
 #if wxUSE_IMAGE && wxUSE_XPM
     Init();
 
-    wxCHECK_MSG(ppData != NULL, false, wxT("invalid bitmap data"))
+    wxCHECK_MSG(ppData != NULL, false, wxT("invalid bitmap data"));
 
     wxXPMDecoder                    vDecoder;
     wxImage                         vImg = vDecoder.ReadData(ppData);
 
-    wxCHECK_MSG(vImg.Ok(), false, wxT("invalid bitmap data"))
+    wxCHECK_MSG(vImg.Ok(), false, wxT("invalid bitmap data"));
 
     *this = wxBitmap(vImg);
     return true;
diff -ur ../wxWidgets/src/os2/spinbutt.cpp ./src/os2/spinbutt.cpp
--- ../wxWidgets/src/os2/spinbutt.cpp	2006-01-04 20:58:38.000000000 -0800
+++ ./src/os2/spinbutt.cpp	2006-03-17 20:52:35.000000000 -0800
@@ -192,7 +192,7 @@
                                 WXWORD wPos,
                                 WXHWND hControl )
 {
-    wxCHECK_MSG(hControl, false, wxT("scrolling what?") )
+    wxCHECK_MSG(hControl, false, wxT("scrolling what?") );
 
     wxSpinEvent vEvent( wxEVT_SCROLL_THUMBTRACK, m_windowId );
     int nVal = (int)wPos;    // cast is important for negative values!
diff -ur ../wxWidgets/src/x11/bitmap.cpp ./src/x11/bitmap.cpp
--- ../wxWidgets/src/x11/bitmap.cpp	2006-02-08 20:21:34.000000000 -0800
+++ ./src/x11/bitmap.cpp	2006-03-17 20:57:27.000000000 -0800
@@ -312,7 +312,7 @@
 {
     UnRef();
 
-    wxCHECK_MSG( (width > 0) && (height > 0), false, wxT("invalid bitmap size") )
+    wxCHECK_MSG( (width > 0) && (height > 0), false, wxT("invalid bitmap size") );
 
     m_refData = new wxBitmapRefData();
 
@@ -534,8 +534,8 @@
 
     UnRef();
 
-    wxCHECK_MSG( image.Ok(), false, wxT("invalid image") )
-    wxCHECK_MSG( depth == -1, false, wxT("invalid bitmap depth") )
+    wxCHECK_MSG( image.Ok(), false, wxT("invalid image") );
+    wxCHECK_MSG( depth == -1, false, wxT("invalid bitmap depth") );
 
     m_refData = new wxBitmapRefData();
 
@@ -1445,7 +1445,7 @@
                               int WXUNUSED(width), int WXUNUSED(height), int WXUNUSED(depth))
 {
 #if wxHAVE_LIB_XPM
-    wxCHECK_MSG( bits != NULL, false, wxT("invalid bitmap data") )
+    wxCHECK_MSG( bits != NULL, false, wxT("invalid bitmap data") );
 
     if (!bitmap->GetRefData())
         bitmap->SetRefData( new wxBitmapRefData() );

 	  	 
