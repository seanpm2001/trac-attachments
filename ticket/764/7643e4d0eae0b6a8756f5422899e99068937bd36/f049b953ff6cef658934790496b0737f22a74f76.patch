diff -uNr wxWidgets-orig/include/wx/osx/dataview.h wxWidgets-mine/include/wx/osx/dataview.h
--- wxWidgets-orig/include/wx/osx/dataview.h	2020-12-09 16:42:05.000000000 +0100
+++ wxWidgets-mine/include/wx/osx/dataview.h	2020-12-09 16:49:10.000000000 +0100
@@ -270,6 +270,8 @@
 
   static wxVisualAttributes
   GetClassDefaultAttributes(wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL);
+        
+  void AdjustAutosizedColumns() const;
 
 protected:
  // inherited methods from wxDataViewCtrlBase
diff -uNr wxWidgets-orig/src/osx/cocoa/dataview.mm wxWidgets-mine/src/osx/cocoa/dataview.mm
--- wxWidgets-orig/src/osx/cocoa/dataview.mm	2020-12-09 16:42:07.000000000 +0100
+++ wxWidgets-mine/src/osx/cocoa/dataview.mm	2020-12-18 15:50:34.000000000 +0100
@@ -1643,6 +1643,7 @@
         currentlyEditedColumn =
             currentlyEditedRow = -1;
 
+        [self setAutoresizesOutlineColumn:NO];
         [self registerForDraggedTypes:[NSArray arrayWithObjects:DataViewPboardType,NSStringPboardType,nil]];
         [self setDelegate:self];
         [self setDoubleAction:@selector(actionDoubleClick:)];
@@ -1900,6 +1901,8 @@
                     [[notification userInfo] objectForKey:@"NSObject"]);
     wxDataViewEvent event(wxEVT_DATAVIEW_ITEM_COLLAPSED, dvc, item);
     dvc->GetEventHandler()->ProcessEvent(event);
+    
+    dvc->AdjustAutosizedColumns();
 }
 
 -(void) outlineViewItemDidExpand:(NSNotification*)notification
@@ -1910,6 +1913,8 @@
                     [[notification userInfo] objectForKey:@"NSObject"]);
     wxDataViewEvent event(wxEVT_DATAVIEW_ITEM_EXPANDED, dvc, item);
     dvc->GetEventHandler()->ProcessEvent(event);
+        
+    dvc->AdjustAutosizedColumns();
 }
 
 -(void) outlineViewSelectionDidChange:(NSNotification*)notification
@@ -2174,6 +2179,7 @@
         MaxWidthCalculator(wxCocoaOutlineView *view,
                            NSTableColumn *column, unsigned columnIndex)
             : m_width(0),
+              m_height(0),
               m_view(view),
               m_column(columnIndex),
               m_indent(0),
@@ -2194,6 +2200,7 @@
         {
             NSCell *cell = [m_view preparedCellAtColumn:m_column row:row];
             unsigned cellWidth = [cell cellSize].width + 1/*round the float up*/;
+            unsigned cellHeight = [cell cellSize].height + 1;
 
             if ( m_indent )
                 cellWidth += m_indent * [m_view levelForRow:row];
@@ -2205,13 +2212,16 @@
             }
 
             m_width = wxMax(m_width, cellWidth);
+            m_height = wxMax(m_height, cellHeight);
         }
 
         int GetMaxWidth() const { return m_width; }
+        int GetMaxHeight() const { return m_height; }
         int GetExpanderWidth() const { return m_expander; }
 
     private:
         int m_width;
+        int m_height;
         wxCocoaOutlineView *m_view;
         unsigned m_column;
         int m_indent;
@@ -2293,6 +2303,14 @@
         m_expanderWidth = calculator.GetExpanderWidth();
 
     [column setWidth:calculator.GetMaxWidth() + m_expanderWidth];
+        
+    if ( !(GetDataViewCtrl()->GetWindowStyle() & wxDV_VARIABLE_LINE_HEIGHT) )
+    {
+        int curHeight = [m_OutlineView rowHeight] + 1;
+        int rowHeight = calculator.GetMaxHeight();
+        if ( rowHeight > curHeight )
+            SetRowHeight(rowHeight);
+    }
 }
 
 //
diff -uNr wxWidgets-orig/src/osx/dataview_osx.cpp wxWidgets-mine/src/osx/dataview_osx.cpp
--- wxWidgets-orig/src/osx/dataview_osx.cpp	2020-12-09 16:42:07.000000000 +0100
+++ wxWidgets-mine/src/osx/dataview_osx.cpp	2020-12-09 16:50:53.000000000 +0100
@@ -503,12 +503,19 @@
   return GetDataViewPeer()->GetColumnPosition(columnPtr);
 }
 
+void wxDataViewCtrl::AdjustAutosizedColumns() const
+{
+  if ( m_ModelNotifier )
+  {
+    wxOSXDataViewModelNotifier *modelNotifier = (wxOSXDataViewModelNotifier *) m_ModelNotifier;
+    modelNotifier->AdjustAutosizedColumns();
+  }
+}
+
 void wxDataViewCtrl::Collapse(wxDataViewItem const& item)
 {
   GetDataViewPeer()->Collapse(item);
-
-  if ( m_ModelNotifier )
-    m_ModelNotifier->AdjustAutosizedColumns();
+  AdjustAutosizedColumns();
 }
 
 void wxDataViewCtrl::EnsureVisible(wxDataViewItem const& item, wxDataViewColumn const* columnPtr)
@@ -523,9 +530,7 @@
 void wxDataViewCtrl::DoExpand(wxDataViewItem const& item, bool expandChildren)
 {
   GetDataViewPeer()->DoExpand(item, expandChildren);
-
-  if ( m_ModelNotifier )
-    m_ModelNotifier->AdjustAutosizedColumns();
+  AdjustAutosizedColumns();
 }
 
 bool wxDataViewCtrl::IsExpanded( const wxDataViewItem & item ) const
