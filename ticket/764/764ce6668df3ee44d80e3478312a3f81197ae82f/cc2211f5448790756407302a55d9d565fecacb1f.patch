Index: src/richtext/richtextctrl.cpp
===================================================================
--- src/richtext/richtextctrl.cpp	(revision 61731)
+++ src/richtext/richtextctrl.cpp	(working copy)
@@ -692,23 +692,7 @@
 
     if (event.GetEventType() == wxEVT_KEY_DOWN)
     {
-        if (event.GetKeyCode() == WXK_LEFT ||
-            event.GetKeyCode() == WXK_RIGHT ||
-            event.GetKeyCode() == WXK_UP ||
-            event.GetKeyCode() == WXK_DOWN ||
-            event.GetKeyCode() == WXK_HOME ||
-            event.GetKeyCode() == WXK_PAGEUP ||
-            event.GetKeyCode() == WXK_PAGEDOWN ||
-            event.GetKeyCode() == WXK_END ||
-
-            event.GetKeyCode() == WXK_NUMPAD_LEFT ||
-            event.GetKeyCode() == WXK_NUMPAD_RIGHT ||
-            event.GetKeyCode() == WXK_NUMPAD_UP ||
-            event.GetKeyCode() == WXK_NUMPAD_DOWN ||
-            event.GetKeyCode() == WXK_NUMPAD_HOME ||
-            event.GetKeyCode() == WXK_NUMPAD_PAGEUP ||
-            event.GetKeyCode() == WXK_NUMPAD_PAGEDOWN ||
-            event.GetKeyCode() == WXK_NUMPAD_END)
+        if (event.IsKeyInCategory(WXK_CAT_NAVIGATION))
         {
             KeyboardNavigate(event.GetKeyCode(), flags);
             return;
Index: src/osx/textctrl_osx.cpp
===================================================================
--- src/osx/textctrl_osx.cpp	(revision 61731)
+++ src/osx/textctrl_osx.cpp	(working copy)
@@ -473,7 +473,7 @@
         return ;
     }
 
-    if ( !IsEditable() && key != WXK_LEFT && key != WXK_RIGHT && key != WXK_DOWN && key != WXK_UP && key != WXK_TAB &&
+    if ( !IsEditable() && !event.IsKeyInCategory(WXK_CAT_ARROW | WXK_CAT_TAB ) &&
         !( key == WXK_RETURN && ( (m_windowStyle & wxTE_PROCESS_ENTER) || (m_windowStyle & wxTE_MULTILINE) ) )
 //        && key != WXK_PAGEUP && key != WXK_PAGEDOWN && key != WXK_HOME && key != WXK_END
         )
@@ -486,8 +486,8 @@
     // allow navigation and deletion
     GetSelection( &from, &to );
     if ( !IsMultiLine() && m_maxLength && GetValue().length() >= m_maxLength &&
-        key != WXK_LEFT && key != WXK_RIGHT && key != WXK_TAB && key != WXK_UP && key != WXK_DOWN &&
-        key != WXK_BACK && key != WXK_DELETE && !( key == WXK_RETURN && (m_windowStyle & wxTE_PROCESS_ENTER) ) &&
+        !event.IsKeyInCategory(WXK_CAT_ARROW | WXK_CAT_TAB | WXK_CAT_CUT ) &&
+        !( key == WXK_RETURN && (m_windowStyle & wxTE_PROCESS_ENTER) ) &&
         from == to )
     {
         // eat it, we don't want to add more than allowed # of characters
Index: include/wx/event.h
===================================================================
--- include/wx/event.h	(revision 61731)
+++ include/wx/event.h	(working copy)
@@ -1504,6 +1504,30 @@
  wxEVT_HOTKEY
  */
 
+// key categories
+// the enum values used may change in future version of wx
+// use the named constants only, or bitwise combinations thereof
+enum wxKeyCategoryFlags
+{
+        // arrow keys, on and off numeric keypads
+    WXK_CAT_ARROW  = 1,
+
+        // page up and page down keys, on and off numeric keypads
+    WXK_CAT_PAGING = 2,
+
+        // home and end keys, on and off numeric keypads
+    WXK_CAT_JUMP   = 4,
+
+        // tab key
+    WXK_CAT_TAB    = 8,
+
+        // backspace and delete keys, on and off numeric keypads
+    WXK_CAT_CUT    = 16,
+
+        // union of WXK_CAT_ARROW, WXK_CAT_PAGING, and WXK_CAT_JUMP categories
+    WXK_CAT_NAVIGATION = WXK_CAT_ARROW | WXK_CAT_PAGING | WXK_CAT_JUMP
+};
+
 class WXDLLIMPEXP_CORE wxKeyEvent : public wxEvent,
                                     public wxKeyboardState
 {
@@ -1514,6 +1538,46 @@
     // get the key code: an ASCII7 char or an element of wxKeyCode enum
     int GetKeyCode() const { return (int)m_keyCode; }
 
+    // returns true iff this event's key code is of a certain type
+    bool IsKeyInCategory(int category) const
+    {
+        switch ( GetKeyCode() )
+        {
+            case WXK_LEFT:
+            case WXK_RIGHT:
+            case WXK_UP:
+            case WXK_DOWN:
+            case WXK_NUMPAD_LEFT:
+            case WXK_NUMPAD_RIGHT:
+            case WXK_NUMPAD_UP:
+            case WXK_NUMPAD_DOWN:
+                return category & WXK_CAT_ARROW;
+
+            case WXK_PAGEDOWN:
+            case WXK_END:
+            case WXK_NUMPAD_PAGEUP:
+            case WXK_NUMPAD_PAGEDOWN:
+                return category & WXK_CAT_PAGING;
+
+            case WXK_HOME:
+            case WXK_PAGEUP:
+            case WXK_NUMPAD_HOME:
+            case WXK_NUMPAD_END:
+                return category & WXK_CAT_JUMP;
+
+            case WXK_TAB:
+                return category & WXK_CAT_TAB;
+
+            case WXK_BACK:
+            case WXK_DELETE:
+            case WXK_NUMPAD_DELETE:
+                return category & WXK_CAT_CUT;
+
+            default:
+                return false;
+        }
+    }
+
 #if wxUSE_UNICODE
     // get the Unicode character corresponding to this key
     wxChar GetUnicodeKey() const { return m_uniChar; }
Index: include/wx/defs.h
===================================================================
--- include/wx/defs.h	(revision 61731)
+++ include/wx/defs.h	(working copy)
@@ -2254,9 +2254,9 @@
        (note that there isn't a real widely used standard for the meaning
        of these values; avoid them in portable apps!) */
 
-    /* These are, by design, not compatible with unicode characters.
+    /* These are not compatible with unicode characters.
        If you want to get a unicode character from a key event, use
-       wxKeyEvent::GetUnicodeKey instead.                           */
+       wxKeyEvent::GetUnicodeKey                                    */
     WXK_START   = 300,
     WXK_LBUTTON,
     WXK_RBUTTON,
Index: interface/wx/event.h
===================================================================
--- interface/wx/event.h	(revision 61731)
+++ interface/wx/event.h	(working copy)
@@ -1084,6 +1084,32 @@
 
 
 /**
+    Flags for categories of keys. Used by wxKeyEvent::IsKeyInCategory.
+    They may be combined via the bitwise operators |, &, and ~.
+*/
+enum wxKeyCategoryFlags
+{
+        /// arrow keys, on and off numeric keypads
+    WXK_CAT_ARROW,
+
+        /// page up and page down keys, on and off numeric keypads
+    WXK_CAT_PAGING,
+
+        /// home and end keys, on and off numeric keypads
+    WXK_CAT_JUMP,
+
+        /// tab key
+    WXK_CAT_TAB,
+
+        /// backspace and delete keys, on and off numeric keypads
+    WXK_CAT_CUT,
+
+        /// union of WXK_CAT_ARROW, WXK_CAT_PAGING, and WXK_CAT_JUMP categories
+    WXK_CAT_NAVIGATION
+};
+
+
+/**
     @class wxKeyEvent
 
     This event class contains information about keypress (character) events.
@@ -1177,6 +1203,12 @@
     */
     int GetKeyCode() const;
 
+    /**
+        Returns true if the key is in the given key @a category,
+        a bitwise combination of named ::wxKeyCategoryFlags constants.
+    */
+    bool IsKeyInCategory(int category) const;
+
     //@{
     /**
         Obtains the position (in client coordinates) at which the key was pressed.
