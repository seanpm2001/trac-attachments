Index: src/richtext/richtextctrl.cpp
===================================================================
--- src/richtext/richtextctrl.cpp	(revision 57293)
+++ src/richtext/richtextctrl.cpp	(working copy)
@@ -660,23 +660,7 @@
 
     if (event.GetEventType() == wxEVT_KEY_DOWN)
     {
-        if (event.GetKeyCode() == WXK_LEFT ||
-            event.GetKeyCode() == WXK_RIGHT ||
-            event.GetKeyCode() == WXK_UP ||
-            event.GetKeyCode() == WXK_DOWN ||
-            event.GetKeyCode() == WXK_HOME ||
-            event.GetKeyCode() == WXK_PAGEUP ||
-            event.GetKeyCode() == WXK_PAGEDOWN ||
-            event.GetKeyCode() == WXK_END ||
-
-            event.GetKeyCode() == WXK_NUMPAD_LEFT ||
-            event.GetKeyCode() == WXK_NUMPAD_RIGHT ||
-            event.GetKeyCode() == WXK_NUMPAD_UP ||
-            event.GetKeyCode() == WXK_NUMPAD_DOWN ||
-            event.GetKeyCode() == WXK_NUMPAD_HOME ||
-            event.GetKeyCode() == WXK_NUMPAD_PAGEUP ||
-            event.GetKeyCode() == WXK_NUMPAD_PAGEDOWN ||
-            event.GetKeyCode() == WXK_NUMPAD_END)
+        if (event.KeyCodeIsA(WXKT_NAVIGATION))
         {
             KeyboardNavigate(event.GetKeyCode(), flags);
             return;
Index: src/osx/textctrl_osx.cpp
===================================================================
--- src/osx/textctrl_osx.cpp	(revision 57293)
+++ src/osx/textctrl_osx.cpp	(working copy)
@@ -498,7 +498,7 @@
         return ;
     }
 
-    if ( !IsEditable() && key != WXK_LEFT && key != WXK_RIGHT && key != WXK_DOWN && key != WXK_UP && key != WXK_TAB &&
+    if ( !IsEditable() && !event.KeyCodeIsA(WXKT_ARROW | WXKT_TAB) &&
         !( key == WXK_RETURN && ( (m_windowStyle & wxTE_PROCESS_ENTER) || (m_windowStyle & wxTE_MULTILINE) ) )
 //        && key != WXK_PAGEUP && key != WXK_PAGEDOWN && key != WXK_HOME && key != WXK_END
         )
@@ -511,8 +511,8 @@
     // allow navigation and deletion
     GetSelection( &from, &to );
     if ( !IsMultiLine() && m_maxLength && GetValue().length() >= m_maxLength &&
-        key != WXK_LEFT && key != WXK_RIGHT && key != WXK_TAB && key != WXK_UP && key != WXK_DOWN && 
-        key != WXK_BACK && key != WXK_DELETE && !( key == WXK_RETURN && (m_windowStyle & wxTE_PROCESS_ENTER) ) &&
+        !event.KeyCodeIsA(WXKT_ARROW | WXKT_TAB | WXKT_CUT) &&
+        !( key == WXK_RETURN && (m_windowStyle & wxTE_PROCESS_ENTER) ) &&
         from == to )
     {
         // eat it, we don't want to add more than allowed # of characters
Index: include/wx/event.h
===================================================================
--- include/wx/event.h	(revision 57293)
+++ include/wx/event.h	(working copy)
@@ -859,6 +859,29 @@
  wxEVT_HOTKEY
  */
 
+// key code types
+// the enum values used may change in future version of wx
+// use the named constants only, or bitwise combinations thereof
+enum
+{
+        // an arrow key, on or off numeric keypad
+    WXKT_ARROW  = 1,
+
+        // page up and page down, on or off numeric keypad
+    WXKT_PAGING = 2,
+
+        // home and end, on or off numeric keypad
+    WXKT_JUMP   = 4,
+
+        // tab
+    WXKT_TAB    = 8,
+
+        // backspace or delete
+    WXKT_CUT    = 16,
+
+    WXKT_NAVIGATION = WXKT_ARROW | WXKT_PAGING | WXKT_JUMP
+};
+
 class WXDLLIMPEXP_CORE wxKeyEvent : public wxEvent,
                                     public wxKeyboardState
 {
@@ -869,6 +892,45 @@
     // get the key code: an ASCII7 char or an element of wxKeyCode enum
     int GetKeyCode() const { return (int)m_keyCode; }
 
+    // returns true iff this event's key code is of a certain type
+    bool KeyCodeIsA(int type) const
+    {
+        switch (GetKeyCode())
+        {
+            case WXK_LEFT:
+            case WXK_RIGHT:
+            case WXK_UP:
+            case WXK_DOWN:
+            case WXK_NUMPAD_LEFT:
+            case WXK_NUMPAD_RIGHT:
+            case WXK_NUMPAD_UP:
+            case WXK_NUMPAD_DOWN:
+                return type & WXKT_ARROW;
+
+            case WXK_PAGEDOWN:
+            case WXK_END:
+            case WXK_NUMPAD_PAGEUP:
+            case WXK_NUMPAD_PAGEDOWN:
+                return type & WXKT_PAGING;
+
+            case WXK_HOME:
+            case WXK_PAGEUP:
+            case WXK_NUMPAD_HOME:
+            case WXK_NUMPAD_END:
+                return type & WXKT_JUMP;
+
+            case WXK_TAB:
+                return type & WXKT_TAB;
+
+            case WXK_BACK:
+            case WXK_DELETE:
+                return type & WXKT_CUT;
+
+            default:
+                return false;
+        }
+    }
+
 #if wxUSE_UNICODE
     // get the Unicode character corresponding to this key
     wxChar GetUnicodeKey() const { return m_uniChar; }
Index: include/wx/defs.h
===================================================================
--- include/wx/defs.h	(revision 57293)
+++ include/wx/defs.h	(working copy)
@@ -2228,9 +2228,9 @@
     WXK_SPACE   =    32,
     WXK_DELETE  =    127,
 
-    /* These are, by design, not compatible with unicode characters.
+    /* These are not compatible with unicode characters.
        If you want to get a unicode character from a key event, use
-       wxKeyEvent::GetUnicodeKey instead.                           */
+       wxKeyEvent::GetUnicodeKey                                    */
     WXK_START   = 300,
     WXK_LBUTTON,
     WXK_RBUTTON,
