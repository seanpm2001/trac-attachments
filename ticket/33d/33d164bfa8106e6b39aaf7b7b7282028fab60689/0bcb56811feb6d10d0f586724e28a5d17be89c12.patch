Index: src/msw/progdlg.cpp
===================================================================
--- src/msw/progdlg.cpp	(revision 65547)
+++ src/msw/progdlg.cpp	(working copy)
@@ -156,7 +156,8 @@
 // only, i.e. not a "Cancel" one.
 bool UsesCloseButtonOnly(long style)
 {
-    return !(style & (wxPD_CAN_ABORT | wxPD_AUTO_HIDE));
+    return !(style & (wxPD_CAN_ABORT | wxPD_CAN_SKIP))
+           || !(style & (wxPD_CAN_ABORT | wxPD_AUTO_HIDE));
 }
 
 BOOL CALLBACK DisplayCloseButton(HWND hwnd, LPARAM lParam)
@@ -645,7 +646,8 @@
             m_sharedData->m_state = Continue;
             m_sharedData->m_labelCancel = _("Cancel");
         }
-        else if ( !HasPDFlag(wxPD_AUTO_HIDE) )
+        else if ( !HasPDFlag(wxPD_AUTO_HIDE)
+                  || UsesCloseButtonOnly( GetPDStyle() ) )
         {
             m_sharedData->m_labelCancel = _("Close");
         }
@@ -682,12 +684,8 @@
 bool wxProgressDialog::HasNativeProgressDialog() const
 {
 #ifdef wxHAS_MSW_TASKDIALOG
-    // Native task dialog, if available, can't be used without any buttons so
-    // we fall back to the generic one if none of "Skip", "Cancel" and "Close"
-    // buttons is used.
-    return HasNativeTaskDialog()
-            && (HasPDFlag(wxPD_CAN_SKIP | wxPD_CAN_ABORT) ||
-                    !HasPDFlag(wxPD_AUTO_HIDE));
+    // Use native progress dialog if task dialogs are available.
+    return HasNativeTaskDialog();
 #else // !wxHAS_MSW_TASKDIALOG
     // This shouldn't be even called in !wxHAS_MSW_TASKDIALOG case but as we
     // still must define the function as returning something, return false.
@@ -787,7 +785,8 @@
         // Use a Cancel button when requested or use a Close button when
         // the dialog does not automatically hide.
         if ( (m_sharedData.m_style & wxPD_CAN_ABORT)
-             || !(m_sharedData.m_style & wxPD_AUTO_HIDE) )
+             || !(m_sharedData.m_style & wxPD_AUTO_HIDE)
+             || UsesCloseButtonOnly( m_sharedData.m_style ) )
         {
             wxTdc.AddTaskDialogButton( tdc, IDCANCEL, 0,
                                        m_sharedData.m_labelCancel );
