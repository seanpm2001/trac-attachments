Index: include/wx/aui/auibook.h
===================================================================
--- include/wx/aui/auibook.h	(revision 47190)
+++ include/wx/aui/auibook.h	(working copy)
@@ -35,7 +35,7 @@
     wxAUI_NB_TOP                 = 1 << 0,
     wxAUI_NB_LEFT                = 1 << 1,  // not implemented yet
     wxAUI_NB_RIGHT               = 1 << 2,  // not implemented yet
-    wxAUI_NB_BOTTOM              = 1 << 3,  // not implemented yet
+    wxAUI_NB_BOTTOM              = 1 << 3,
     wxAUI_NB_TAB_SPLIT           = 1 << 4,
     wxAUI_NB_TAB_MOVE            = 1 << 5,
     wxAUI_NB_TAB_EXTERNAL_MOVE   = 1 << 6,
Index: samples/aui/auidemo.cpp
===================================================================
--- samples/aui/auidemo.cpp	(revision 47190)
+++ samples/aui/auidemo.cpp	(working copy)
@@ -97,6 +97,8 @@
         ID_NotebookTabFixedWidth,
         ID_NotebookArtGloss,
         ID_NotebookArtSimple,
+		ID_NotebookAlignTop,
+		ID_NotebookAlignBottom,
         ID_FirstPerspective = ID_CreatePerspective+1000
     };
 
@@ -144,6 +146,7 @@
     void OnNotebookPageClose(wxAuiNotebookEvent& evt);
     void OnExit(wxCommandEvent& evt);
     void OnAbout(wxCommandEvent& evt);
+	void OnTabAlignment(wxCommandEvent &evt);
 
     void OnGradient(wxCommandEvent& evt);
     void OnManagerFlag(wxCommandEvent& evt);
@@ -594,6 +597,8 @@
     EVT_MENU(ID_NotebookWindowList, MyFrame::OnNotebookFlag)
     EVT_MENU(ID_NotebookArtGloss, MyFrame::OnNotebookFlag)
     EVT_MENU(ID_NotebookArtSimple, MyFrame::OnNotebookFlag)
+	EVT_MENU(ID_NotebookAlignTop,     MyFrame::OnTabAlignment)
+	EVT_MENU(ID_NotebookAlignBottom,  MyFrame::OnTabAlignment)
     EVT_MENU(ID_NoGradient, MyFrame::OnGradient)
     EVT_MENU(ID_VerticalGradient, MyFrame::OnGradient)
     EVT_MENU(ID_HorizontalGradient, MyFrame::OnGradient)
@@ -701,6 +706,9 @@
     notebook_menu->AppendRadioItem(ID_NotebookCloseButtonAll, _("Close Button on All Tabs"));
     notebook_menu->AppendRadioItem(ID_NotebookCloseButtonActive, _("Close Button on Active Tab"));
     notebook_menu->AppendSeparator();
+	notebook_menu->AppendRadioItem(ID_NotebookAlignTop, _("Tab Top Alignment"));
+	notebook_menu->AppendRadioItem(ID_NotebookAlignBottom, _("Tab Bottom Alignment"));
+	notebook_menu->AppendSeparator();
     notebook_menu->AppendCheckItem(ID_NotebookAllowTabMove, _("Allow Tab Move"));
     notebook_menu->AppendCheckItem(ID_NotebookAllowTabExternalMove, _("Allow External Tab Move"));
     notebook_menu->AppendCheckItem(ID_NotebookAllowTabSplit, _("Allow Notebook Split"));
@@ -1346,6 +1354,26 @@
     m_mgr.Update();
 }
 
+void MyFrame::OnTabAlignment(wxCommandEvent &evt)
+{
+	size_t i, count;
+    wxAuiPaneInfoArray& all_panes = m_mgr.GetAllPanes();
+    for (i = 0, count = all_panes.GetCount(); i < count; ++i)
+    {  
+        wxAuiPaneInfo& pane = all_panes.Item(i);
+        if (pane.window->IsKindOf(CLASSINFO(wxAuiNotebook)))
+        {
+            wxAuiNotebook* nb = (wxAuiNotebook*)pane.window;
+            
+            if (evt.GetId() == ID_NotebookAlignTop)
+				 nb->SetWindowStyleFlag(nb->GetWindowStyleFlag()^wxAUI_NB_BOTTOM|wxAUI_NB_TOP);
+			else if (evt.GetId() == ID_NotebookAlignBottom)
+				nb->SetWindowStyleFlag(nb->GetWindowStyleFlag()^wxAUI_NB_TOP|wxAUI_NB_BOTTOM);
+            nb->Refresh();
+        }
+    }
+}
+
 void MyFrame::OnExit(wxCommandEvent& WXUNUSED(event))
 {
     Close(true);
Index: src/aui/auibook.cpp
===================================================================
--- src/aui/auibook.cpp	(revision 47190)
+++ src/aui/auibook.cpp	(working copy)
@@ -282,18 +282,39 @@
                                         wxWindow* WXUNUSED(wnd),
                                         const wxRect& rect)
 {
-    // draw background
-    wxRect r(rect.x, rect.y, rect.width+2, rect.height-3);
-    wxColor top_color = wxAuiStepColour(m_base_colour, 90);
-    wxColor bottom_color = wxAuiStepColour(m_base_colour, 170);
+    // draw background    
+
+	wxColor top_color		= wxAuiStepColour(m_base_colour, 90);
+    wxColor bottom_color	= wxAuiStepColour(m_base_colour, 170);
+	wxRect r;
+
+	if (m_flags &wxAUI_NB_BOTTOM)
+		r = wxRect(rect.x, rect.y, rect.width+2, rect.height);
+	// TODO: else if (m_flags &wxAUI_NB_LEFT) {}
+	// TODO: else if (m_flags &wxAUI_NB_RIGHT) {}
+	else //for wxAUI_NB_TOP
+		r = wxRect(rect.x, rect.y, rect.width+2, rect.height-3);
     dc.GradientFillLinear(r, top_color, bottom_color, wxSOUTH);
 
-    // draw base lines
-    int y = rect.GetHeight();
-    int w = rect.GetWidth();
-    dc.SetPen(m_border_pen);
-    dc.SetBrush(m_base_colour_brush);
-    dc.DrawRectangle(-1, y-4, w+2, 4);
+	
+	// draw base lines
+
+	dc.SetPen(m_border_pen);
+	int y = rect.GetHeight();
+	int w = rect.GetWidth();
+
+	if (m_flags &wxAUI_NB_BOTTOM)
+	{
+		dc.SetBrush(wxBrush(bottom_color));
+		dc.DrawRectangle(-1, 0, w+2, 4);
+	}
+	// TODO: else if (m_flags &wxAUI_NB_LEFT) {}
+	// TODO: else if (m_flags &wxAUI_NB_RIGHT) {}
+	else //for wxAUI_NB_TOP
+	{
+		dc.SetBrush(m_base_colour_brush);
+		dc.DrawRectangle(-1, y-4, w+2, 4);
+	}
 }
 
 
@@ -390,12 +411,26 @@
 
 
     wxPoint border_points[6];
-    border_points[0] = wxPoint(tab_x,             tab_y+tab_height-4);
-    border_points[1] = wxPoint(tab_x,             tab_y+2);
-    border_points[2] = wxPoint(tab_x+2,           tab_y);
-    border_points[3] = wxPoint(tab_x+tab_width-2, tab_y);
-    border_points[4] = wxPoint(tab_x+tab_width,   tab_y+2);
-    border_points[5] = wxPoint(tab_x+tab_width,   tab_y+tab_height-4);
+	if (m_flags &wxAUI_NB_BOTTOM)
+	{
+		border_points[0] = wxPoint(tab_x,             tab_y);
+		border_points[1] = wxPoint(tab_x,             tab_y+tab_height-6);
+		border_points[2] = wxPoint(tab_x+2,           tab_y+tab_height-4);
+		border_points[3] = wxPoint(tab_x+tab_width-2, tab_y+tab_height-4);
+		border_points[4] = wxPoint(tab_x+tab_width,	  tab_y+tab_height-6);
+		border_points[5] = wxPoint(tab_x+tab_width,	  tab_y);
+	}
+	else //if (m_flags & wxAUI_NB_TOP) {}
+	{
+		border_points[0] = wxPoint(tab_x,             tab_y+tab_height-4);
+		border_points[1] = wxPoint(tab_x,             tab_y+2);
+		border_points[2] = wxPoint(tab_x+2,           tab_y);
+		border_points[3] = wxPoint(tab_x+tab_width-2, tab_y);
+		border_points[4] = wxPoint(tab_x+tab_width,   tab_y+2);
+		border_points[5] = wxPoint(tab_x+tab_width,   tab_y+tab_height-4);
+	}
+	// TODO: else if (m_flags &wxAUI_NB_LEFT) {}
+	// TODO: else if (m_flags &wxAUI_NB_RIGHT) {}
 
 
     int drawn_tab_yoff = border_points[1].y;
@@ -472,7 +507,12 @@
     // this gets rid of the top one of those lines in the tab control
     if (page.active)
     {
-        dc.SetPen(m_base_colour_pen);
+		if (m_flags &wxAUI_NB_BOTTOM)
+			dc.SetPen(wxPen(wxColour(wxAuiStepColour(m_base_colour, 170))));
+		// TODO: else if (m_flags &wxAUI_NB_LEFT) {}
+		// TODO: else if (m_flags &wxAUI_NB_RIGHT) {}
+		else //for wxAUI_NB_TOP
+			dc.SetPen(m_base_colour_pen);
         dc.DrawLine(border_points[0].x+1,
                     border_points[0].y,
                     border_points[5].x,
@@ -2317,9 +2357,21 @@
         if (!m_tabs)
             return;
 
-        m_tab_rect = wxRect(m_rect.x, m_rect.y, m_rect.width, m_tab_ctrl_height);
-        m_tabs->SetSize(m_rect.x, m_rect.y, m_rect.width, m_tab_ctrl_height);
-        m_tabs->SetRect(wxRect(0, 0, m_rect.width, m_tab_ctrl_height));
+		if (m_tabs->GetFlags() & wxAUI_NB_BOTTOM)
+		{
+			m_tab_rect = wxRect	(m_rect.x, m_rect.y + m_rect.height - m_tab_ctrl_height, m_rect.width, m_tab_ctrl_height);
+			m_tabs->SetSize		(m_rect.x, m_rect.y + m_rect.height - m_tab_ctrl_height, m_rect.width, m_tab_ctrl_height);
+			m_tabs->SetRect		(wxRect(0, 0, m_rect.width, m_tab_ctrl_height));
+		}
+		else //TODO: if (GetFlags() & wxAUI_NB_TOP)
+		{
+			m_tab_rect = wxRect	(m_rect.x, m_rect.y, m_rect.width, m_tab_ctrl_height);
+			m_tabs->SetSize		(m_rect.x, m_rect.y, m_rect.width, m_tab_ctrl_height);
+			m_tabs->SetRect		(wxRect(0, 0,		 m_rect.width, m_tab_ctrl_height));
+		}
+		// TODO: else if (GetFlags() & wxAUI_NB_LEFT){}
+		// TODO: else if (GetFlags() & wxAUI_NB_RIGHT){}
+
         m_tabs->Refresh();
         m_tabs->Update();
 
@@ -2329,8 +2381,18 @@
         for (i = 0; i < page_count; ++i)
         {
             wxAuiNotebookPage& page = pages.Item(i);
-            page.window->SetSize(m_rect.x, m_rect.y + m_tab_ctrl_height,
+			if (m_tabs->GetFlags() & wxAUI_NB_BOTTOM)
+			{
+				page.window->SetSize(m_rect.x, m_rect.y,
+									 m_rect.width, m_rect.height - m_tab_ctrl_height);						 
+			}
+			else //TODO: if (GetFlags() & wxAUI_NB_TOP)
+			{
+				page.window->SetSize(m_rect.x, m_rect.y + m_tab_ctrl_height,
                                  m_rect.width, m_rect.height - m_tab_ctrl_height);
+			}
+			// TODO: else if (GetFlags() & wxAUI_NB_LEFT){}
+			// TODO: else if (GetFlags() & wxAUI_NB_RIGHT){}
 
             if (page.window->IsKindOf(CLASSINFO(wxAuiMDIChildFrame)))
             {

 	  	 
