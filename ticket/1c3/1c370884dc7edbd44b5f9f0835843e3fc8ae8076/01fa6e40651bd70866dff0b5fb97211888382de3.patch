diff -bu1 -P -r wxWidgets/samples/drawing/drawing.cpp wxW/samples/drawing/drawing.cpp
--- wxWidgets/samples/drawing/drawing.cpp	2004-02-29 23:30:59.000000000 +0100
+++ wxW/samples/drawing/drawing.cpp	2004-04-21 12:06:59.000000000 +0200
@@ -275,3 +275,3 @@
     if ( !path )
-        return FALSE;
+        return false;
 
@@ -286,3 +286,3 @@
     if ( !path )
-        return FALSE;
+        return false;
     gs_bmp36->LoadFile(path, wxBITMAP_TYPE_BMP);
@@ -293,3 +293,3 @@
     if ( !path )
-        return FALSE;
+        return false;
     gs_bmpNoMask->LoadFile(path, wxBITMAP_TYPE_BMP);
@@ -300,3 +300,3 @@
     if ( !path )
-        return FALSE;
+        return false;
     gs_bmpMask->LoadFile(path, wxBITMAP_TYPE_BMP);
@@ -309,3 +309,3 @@
 
-    return TRUE;
+    return true;
 }
@@ -320,3 +320,3 @@
     // Show it and tell the application that it's our main window
-    frame->Show(TRUE);
+    frame->Show(true);
     SetTopWindow(frame);
@@ -332,3 +332,3 @@
 
-        return FALSE;
+        return false;
     }
@@ -336,3 +336,3 @@
     // ok, continue
-    return TRUE;
+    return true;
 }
@@ -372,3 +372,3 @@
 MyCanvas::MyCanvas(MyFrame *parent)
-        : wxScrolledWindow(parent, -1, wxDefaultPosition, wxDefaultSize,
+        : wxScrolledWindow(parent, wxID_ANY, wxDefaultPosition, wxDefaultSize,
                            wxHSCROLL | wxVSCROLL | wxNO_FULL_REPAINT_ON_RESIZE)
@@ -379,3 +379,3 @@
     m_std_icon = wxArtProvider::GetIcon(wxART_INFORMATION);
-    m_clip = FALSE;
+    m_clip = false;
 }
@@ -527,3 +527,3 @@
     dc.DrawRectangle(x, 10, rectSize, rectSize);
-    dc.DrawBitmap(m_std_icon, x + 5, 15, TRUE);
+    dc.DrawBitmap(m_std_icon, x + 5, 15, true);
     x += rectSize + 10;
@@ -539,3 +539,3 @@
     if (m_smile_bmp.Ok())
-        dc.DrawBitmap(m_smile_bmp, x + rectSize - 20, rectSize - 10, TRUE);
+        dc.DrawBitmap(m_smile_bmp, x + rectSize - 20, rectSize - 10, true);
 
@@ -710,3 +710,3 @@
     // set underlined font for testing
-    dc.SetFont( wxFont(12, wxMODERN, wxNORMAL, wxNORMAL, TRUE) );
+    dc.SetFont( wxFont(12, wxMODERN, wxNORMAL, wxNORMAL, true) );
     dc.DrawText( _T("This is text"), 110, 10 );
@@ -790,3 +790,3 @@
     dc.DrawText(_T("with colour mask"), 0, 100);
-    dc.DrawBitmap(*gs_bmpWithColMask, 0, 120, TRUE);
+    dc.DrawBitmap(*gs_bmpWithColMask, 0, 120, true);
     dc.DrawText(_T("the mask image"), 0, 200);
@@ -794,3 +794,3 @@
     dc.DrawText(_T("masked image"), 0, 300);
-    dc.DrawBitmap(*gs_bmpWithMask, 0, 320, TRUE);
+    dc.DrawBitmap(*gs_bmpWithMask, 0, 320, true);
 
@@ -807,3 +807,3 @@
         memDC.SelectObject(*gs_bmpWithColMask);
-        dc.Blit(x, y, cx, cy, &memDC, 0, 0, rasterOperations[n].rop, TRUE);
+        dc.Blit(x, y, cx, cy, &memDC, 0, 0, rasterOperations[n].rop, true);
     }
@@ -887,4 +887,4 @@
 
-    DrawRegionsHelper(dc, 10, TRUE);
-    DrawRegionsHelper(dc, 350, FALSE);
+    DrawRegionsHelper(dc, 10, true);
+    DrawRegionsHelper(dc, 350, false);
 }
@@ -924,7 +924,7 @@
     {
-        dc.DrawBitmap( m_smile_bmp, x + 150, y + 150, TRUE );
-        dc.DrawBitmap( m_smile_bmp, x + 130, y + 10,  TRUE );
-        dc.DrawBitmap( m_smile_bmp, x + 130, y + 280, TRUE );
-        dc.DrawBitmap( m_smile_bmp, x + 100, y + 70,  TRUE );
-        dc.DrawBitmap( m_smile_bmp, x + 200, y + 70,  TRUE );
+        dc.DrawBitmap( m_smile_bmp, x + 150, y + 150, true );
+        dc.DrawBitmap( m_smile_bmp, x + 130, y + 10,  true );
+        dc.DrawBitmap( m_smile_bmp, x + 130, y + 280, true );
+        dc.DrawBitmap( m_smile_bmp, x + 100, y + 70,  true );
+        dc.DrawBitmap( m_smile_bmp, x + 200, y + 70,  true );
     }
@@ -1042,3 +1042,3 @@
 MyFrame::MyFrame(const wxString& title, const wxPoint& pos, const wxSize& size)
-       : wxFrame((wxFrame *)NULL, -1, title, pos, size,
+       : wxFrame((wxFrame *)NULL, wxID_ANY, title, pos, size,
                  wxDEFAULT_FRAME_STYLE | wxNO_FULL_REPAINT_ON_RESIZE)
@@ -1081,4 +1081,4 @@
     wxMenu *menuAxis = new wxMenu;
-    menuAxis->Append( AxisMirror_Horiz, _T("Mirror horizontally\tCtrl-M"), _T(""), TRUE );
-    menuAxis->Append( AxisMirror_Vertic, _T("Mirror vertically\tCtrl-N"), _T(""), TRUE );
+    menuAxis->Append( AxisMirror_Horiz, _T("Mirror horizontally\tCtrl-M"), _T(""), true );
+    menuAxis->Append( AxisMirror_Vertic, _T("Mirror vertically\tCtrl-N"), _T(""), true );
 
@@ -1097,4 +1097,4 @@
     menuColour->Append( Colour_Background, _T("Background &colour...") );
-    menuColour->Append( Colour_BackgroundMode, _T("&Opaque/transparent\tCtrl-B"), _T(""), TRUE );
-    menuColour->Append( Colour_TextureBackgound, _T("Draw textured back&ground\tCtrl-T"), _T(""), TRUE);
+    menuColour->Append( Colour_BackgroundMode, _T("&Opaque/transparent\tCtrl-B"), _T(""), true );
+    menuColour->Append( Colour_TextureBackgound, _T("Draw textured back&ground\tCtrl-T"), _T(""), true);
 
@@ -1122,3 +1122,3 @@
     m_xAxisReversed =
-    m_yAxisReversed = FALSE;
+    m_yAxisReversed = false;
     m_backgroundMode = wxSOLID;
@@ -1126,3 +1126,3 @@
     m_colourBackground = *wxBLUE;
-    m_textureBackground = FALSE;
+    m_textureBackground = false;
 
@@ -1136,4 +1136,4 @@
 {
-    // TRUE is to force the frame to close
-    Close(TRUE);
+    // true is to force the frame to close
+    Close(true);
 }
diff -bu1 -P -r wxWidgets/samples/font/font.cpp wxW/samples/font/font.cpp
--- wxWidgets/samples/font/font.cpp	2004-04-13 08:10:47.000000000 +0200
+++ wxW/samples/font/font.cpp	2004-04-21 12:06:58.000000000 +0200
@@ -101,5 +101,5 @@
     void OnEnumerateFamilies(wxCommandEvent& WXUNUSED(event))
-        { DoEnumerateFamilies(FALSE); }
+        { DoEnumerateFamilies(false); }
     void OnEnumerateFixedFamilies(wxCommandEvent& WXUNUSED(event))
-        { DoEnumerateFamilies(TRUE); }
+        { DoEnumerateFamilies(true); }
     void OnEnumerateEncodings(wxCommandEvent& event);
@@ -111,3 +111,3 @@
                              wxFontEncoding encoding = wxFONTENCODING_SYSTEM,
-                             bool silent = FALSE);
+                             bool silent = false);
 
@@ -212,3 +212,3 @@
     // Show it and tell the application that it's our main window
-    frame->Show(TRUE);
+    frame->Show(true);
     SetTopWindow(frame);
@@ -216,5 +216,5 @@
     // success: wxApp::OnRun() will be called which will enter the main message
-    // loop and the application will run. If we returned FALSE here, the
+    // loop and the application will run. If we returned false here, the
     // application would exit immediately.
-    return TRUE;
+    return true;
 }
@@ -227,3 +227,3 @@
 MyFrame::MyFrame(const wxString& title, const wxPoint& pos, const wxSize& size)
-       : wxFrame((wxFrame *)NULL, -1, title, pos, size), m_textctrl(NULL)
+       : wxFrame((wxFrame *)NULL, wxID_ANY, title, pos, size), m_textctrl(NULL)
 {
@@ -245,6 +245,6 @@
     menuFont->AppendSeparator();
-    menuFont->Append(Font_Bold, wxT("&Bold\tCtrl-B"), wxT("Toggle bold state"), TRUE);
-    menuFont->Append(Font_Italic, wxT("&Oblique\tCtrl-O"), wxT("Toggle italic state"), TRUE);
+    menuFont->Append(Font_Bold, wxT("&Bold\tCtrl-B"), wxT("Toggle bold state"), true);
+    menuFont->Append(Font_Italic, wxT("&Oblique\tCtrl-O"), wxT("Toggle italic state"), true);
     menuFont->Append(Font_Underlined, wxT("&Underlined\tCtrl-U"),
-                     wxT("Toggle underlined state"), TRUE);
+                     wxT("Toggle underlined state"), true);
 
@@ -286,3 +286,3 @@
 
-    m_textctrl = new wxTextCtrl(splitter, -1,
+    m_textctrl = new wxTextCtrl(splitter, wxID_ANY,
                                 wxT("Paste text here to see how it looks\nlike in the given font"),
@@ -319,3 +319,3 @@
         m_text += text;
-        return TRUE;
+        return true;
     }
@@ -352,3 +352,3 @@
         m_facenames.Add(facename);
-        return TRUE;
+        return true;
     }
@@ -402,3 +402,3 @@
             wxFont font(12, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL,
-                        wxFONTWEIGHT_NORMAL, FALSE, facename, encoding);
+                        wxFONTWEIGHT_NORMAL, false, facename, encoding);
 
@@ -407,3 +407,3 @@
 
-        return TRUE;
+        return true;
     }
@@ -414,3 +414,3 @@
 
-    return FALSE;
+    return false;
 }
@@ -454,3 +454,3 @@
     {
-        DoEnumerateFamilies(FALSE, encodings[n]);
+        DoEnumerateFamilies(false, encodings[n]);
     }
@@ -523,5 +523,5 @@
 
-    GetMenuBar()->Check(Font_Bold, FALSE);
-    GetMenuBar()->Check(Font_Italic, FALSE);
-    GetMenuBar()->Check(Font_Underlined, FALSE);
+    GetMenuBar()->Check(Font_Bold, false);
+    GetMenuBar()->Check(Font_Italic, false);
+    GetMenuBar()->Check(Font_Underlined, false);
 
@@ -570,4 +570,4 @@
 {
-    // TRUE is to force the frame to close
-    Close(TRUE);
+    // true is to force the frame to close
+    Close(true);
 }
@@ -672,6 +672,6 @@
     // and now create the correct font
-    if ( !DoEnumerateFamilies(FALSE, fontenc, TRUE /* silent */) )
+    if ( !DoEnumerateFamilies(false, fontenc, true /* silent */) )
     {
         wxFont font(12, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL,
-                    wxFONTWEIGHT_NORMAL, FALSE /* !underlined */,
+                    wxFONTWEIGHT_NORMAL, false /* !underlined */,
                     wxEmptyString /* facename */, fontenc);
@@ -706,3 +706,3 @@
 MyCanvas::MyCanvas( wxWindow *parent )
-        : wxWindow( parent, -1 ),
+        : wxWindow( parent, wxID_ANY ),
           m_colour(*wxRED), m_font(*wxNORMAL_FONT)
diff -bu1 -P -r wxWidgets/samples/keyboard/keyboard.cpp wxW/samples/keyboard/keyboard.cpp
--- wxWidgets/samples/keyboard/keyboard.cpp	2004-04-07 09:15:51.000000000 +0200
+++ wxW/samples/keyboard/keyboard.cpp	2004-04-21 12:06:58.000000000 +0200
@@ -139,7 +139,7 @@
     TextWindow(wxWindow *parent)
-        : wxWindow(parent, -1, wxDefaultPosition, wxDefaultSize,
+        : wxWindow(parent, wxID_ANY, wxDefaultPosition, wxDefaultSize,
                    wxRAISED_BORDER)
     {
-        m_skip = TRUE;
-        m_showRaw = FALSE;
+        m_skip = true;
+        m_showRaw = false;
 
@@ -244,8 +244,8 @@
     // created initially)
-    frame->Show(TRUE);
+    frame->Show(true);
 
     // success: wxApp::OnRun() will be called which will enter the main message
-    // loop and the application will run. If we returned FALSE here, the
+    // loop and the application will run. If we returned false here, the
     // application would exit immediately.
-    return TRUE;
+    return true;
 }
@@ -258,3 +258,3 @@
 MyFrame::MyFrame(const wxString& title, const wxPoint& pos, const wxSize& size, long style)
-       : wxFrame(NULL, -1, title, pos, size, style),
+       : wxFrame(NULL, wxID_ANY, title, pos, size, style),
          m_winText(NULL)
@@ -286,6 +286,6 @@
 
-    menuBar->Check(Keyboard_Skip, TRUE);
+    menuBar->Check(Keyboard_Skip, true);
 
 #ifndef wxHAS_RAW_KEY_CODES
-    menuBar->Enable(Keyboard_ShowRaw, FALSE);
+    menuBar->Enable(Keyboard_ShowRaw, false);
 #endif // !wxHAS_RAW_KEY_CODES
@@ -294,3 +294,3 @@
     m_winText = new TextWindow(this);
-    m_lboxLog = new wxListBox(this, -1);
+    m_lboxLog = new wxListBox(this, wxID_ANY);
 
@@ -310,4 +310,4 @@
 {
-    // TRUE is to force the frame to close
-    Close(TRUE);
+    // true is to force the frame to close
+    Close(true);
 }
diff -bu1 -P -r wxWidgets/samples/listbox/lboxtest.cpp wxW/samples/listbox/lboxtest.cpp
--- wxWidgets/samples/listbox/lboxtest.cpp	2004-04-07 09:15:51.000000000 +0200
+++ wxW/samples/listbox/lboxtest.cpp	2004-04-21 12:06:58.000000000 +0200
@@ -292,5 +292,5 @@
     EVT_LISTBOX(LboxTest_Listbox, LboxTestFrame::OnListbox)
-    EVT_LISTBOX_DCLICK(-1, LboxTestFrame::OnListboxDClick)
-    EVT_CHECKBOX(-1, LboxTestFrame::OnCheckOrRadioBox)
-    EVT_RADIOBOX(-1, LboxTestFrame::OnCheckOrRadioBox)
+    EVT_LISTBOX_DCLICK(wxID_ANY, LboxTestFrame::OnListboxDClick)
+    EVT_CHECKBOX(wxID_ANY, LboxTestFrame::OnCheckOrRadioBox)
+    EVT_RADIOBOX(wxID_ANY, LboxTestFrame::OnCheckOrRadioBox)
 END_EVENT_TABLE()
@@ -313,3 +313,3 @@
 
-    return TRUE;
+    return true;
 }
@@ -321,6 +321,6 @@
 LboxTestFrame::LboxTestFrame(const wxString& title)
-             : wxFrame(NULL, -1, title, wxPoint(100, 100))
+             : wxFrame(NULL, wxID_ANY, title, wxPoint(100, 100))
 {
     // init everything
-    m_dirty = FALSE;
+    m_dirty = false;
     m_radioSelMode = (wxRadioBox *)NULL;
@@ -337,3 +337,3 @@
 
-    wxPanel *panel = new wxPanel(this, -1);
+    wxPanel *panel = new wxPanel(this, wxID_ANY);
 
@@ -358,4 +358,4 @@
 
-    wxStaticBox *box = new wxStaticBox(panel, -1, _T("&Set listbox parameters"));
-    m_radioSelMode = new wxRadioBox(panel, -1, _T("Selection &mode:"),
+    wxStaticBox *box = new wxStaticBox(panel, wxID_ANY, _T("&Set listbox parameters"));
+    m_radioSelMode = new wxRadioBox(panel, wxID_ANY, _T("Selection &mode:"),
                                     wxDefaultPosition, wxDefaultSize,
@@ -364,5 +364,5 @@
 
-    m_chkVScroll = new wxCheckBox(panel, -1, _T("Always show &vertical scrollbar"));
-    m_chkHScroll = new wxCheckBox(panel, -1, _T("Show &horizontal scrollbar"));
-    m_chkSort = new wxCheckBox(panel, -1, _T("&Sort items"));
+    m_chkVScroll = new wxCheckBox(panel, wxID_ANY, _T("Always show &vertical scrollbar"));
+    m_chkHScroll = new wxCheckBox(panel, wxID_ANY, _T("Show &horizontal scrollbar"));
+    m_chkSort = new wxCheckBox(panel, wxID_ANY, _T("&Sort items"));
 
@@ -384,3 +384,3 @@
     // middle pane
-    wxStaticBox *box2 = new wxStaticBox(panel, -1, _T("&Change listbox contents"));
+    wxStaticBox *box2 = new wxStaticBox(panel, wxID_ANY, _T("&Change listbox contents"));
     wxSizer *sizerMiddle = new wxStaticBoxSizer(box2, wxVERTICAL);
@@ -437,6 +437,6 @@
                              (
-                               new wxStaticBox(panel, -1, _T("&Log window")),
+                               new wxStaticBox(panel, wxID_ANY, _T("&Log window")),
                                wxVERTICAL
                              );
-    m_lboxLog = new wxListBox(panel, -1);
+    m_lboxLog = new wxListBox(panel, wxID_ANY);
     sizerDown->Add(m_lboxLog, 1, wxGROW | wxALL, 5);
@@ -457,5 +457,5 @@
     Reset();
-    m_dirty = FALSE;
+    m_dirty = false;
 
-    panel->SetAutoLayout(TRUE);
+    panel->SetAutoLayout(true);
     panel->SetSizer(sizerTop);
@@ -492,7 +492,7 @@
     m_radioSelMode->SetSelection(LboxSel_Single);
-    m_chkSort->SetValue(FALSE);
-    m_chkHScroll->SetValue(TRUE);
-    m_chkVScroll->SetValue(FALSE);
+    m_chkSort->SetValue(false);
+    m_chkHScroll->SetValue(true);
+    m_chkVScroll->SetValue(false);
 
-    m_dirty = TRUE;
+    m_dirty = true;
 }
@@ -532,3 +532,3 @@
 
-    m_lbox = new wxListBox(this, -1,
+    m_lbox = new wxListBox(this, wxID_ANY,
                            wxDefaultPosition, wxDefaultSize,
@@ -540,3 +540,3 @@
 
-    m_dirty = FALSE;
+    m_dirty = false;
 }
@@ -681,3 +681,3 @@
 {
-    m_dirty = TRUE;
+    m_dirty = true;
 }
diff -bu1 -P -r wxWidgets/samples/listctrl/listtest.cpp wxW/samples/listctrl/listtest.cpp
--- wxWidgets/samples/listctrl/listtest.cpp	2004-03-23 22:18:06.000000000 +0100
+++ wxW/samples/listctrl/listtest.cpp	2004-04-21 12:06:59.000000000 +0200
@@ -135,3 +135,3 @@
   // Show the frame
-  frame->Show(TRUE);
+  frame->Show(true);
 
@@ -139,3 +139,3 @@
 
-  return TRUE;
+  return true;
 }
@@ -144,3 +144,3 @@
 MyFrame::MyFrame(const wxChar *title, int x, int y, int w, int h)
-       : wxFrame((wxFrame *)NULL, -1, title, wxPoint(x, y), wxSize(w, h))
+       : wxFrame((wxFrame *)NULL, wxID_ANY, title, wxPoint(x, y), wxSize(w, h))
 {
@@ -153,4 +153,4 @@
     // Make an image list containing large icons
-    m_imageListNormal = new wxImageList(32, 32, TRUE);
-    m_imageListSmall = new wxImageList(16, 16, TRUE);
+    m_imageListNormal = new wxImageList(32, 32, true);
+    m_imageListSmall = new wxImageList(16, 16, true);
 
@@ -218,3 +218,3 @@
     menuList->Append(LIST_TOGGLE_MULTI_SEL, _T("&Multiple selection\tCtrl-M"),
-            _T("Toggle multiple selection"), TRUE);
+            _T("Toggle multiple selection"), true);
 
@@ -231,4 +231,4 @@
 
-    m_panel = new wxPanel(this, -1);
-    m_logWindow = new wxTextCtrl(m_panel, -1, wxEmptyString,
+    m_panel = new wxPanel(this, wxID_ANY);
+    m_logWindow = new wxTextCtrl(m_panel, wxID_ANY, wxEmptyString,
                                  wxDefaultPosition, wxDefaultSize,
@@ -282,3 +282,3 @@
 {
-    Close(TRUE);
+    Close(true);
 }
@@ -375,3 +375,3 @@
             case wxLC_SMALL_ICON:
-                InitWithIconItems(withText, TRUE);
+                InitWithIconItems(withText, true);
                 break;
@@ -492,3 +492,3 @@
 {
-    RecreateList(wxLC_ICON, FALSE);
+    RecreateList(wxLC_ICON, false);
 }
@@ -502,3 +502,3 @@
 {
-    RecreateList(wxLC_SMALL_ICON, FALSE);
+    RecreateList(wxLC_SMALL_ICON, false);
 }
diff -bu1 -P -r wxWidgets/samples/listctrl/listtest.h wxW/samples/listctrl/listtest.h
--- wxWidgets/samples/listctrl/listtest.h	2004-03-23 22:18:06.000000000 +0100
+++ wxW/samples/listctrl/listtest.h	2004-04-21 11:41:43.000000000 +0200
@@ -128,3 +128,3 @@
     // recreate the list control with the new flags
-    void RecreateList(long flags, bool withText = TRUE);
+    void RecreateList(long flags, bool withText = true);
 
@@ -133,3 +133,3 @@
     void InitWithReportItems();
-    void InitWithIconItems(bool withText, bool sameIcon = FALSE);
+    void InitWithIconItems(bool withText, bool sameIcon = false);
     void InitWithVirtualItems();
diff -bu1 -P -r wxWidgets/samples/notebook/notebook.cpp wxW/samples/notebook/notebook.cpp
--- wxWidgets/samples/notebook/notebook.cpp	2004-03-28 15:09:56.000000000 +0200
+++ wxW/samples/notebook/notebook.cpp	2004-04-21 12:06:59.000000000 +0200
@@ -38,3 +38,3 @@
     frame->GetSize(& width, & height);
-    frame->SetSize(-1, -1, width, height);
+    frame->SetSize(wxDefaultPosition.x, wxDefaultPosition.y, width, height);
 #endif
@@ -43,3 +43,3 @@
 
-    return TRUE;
+    return true;
 }
@@ -94,4 +94,4 @@
 
-    (void) new wxButton( panel, -1, wxT("Button"),
-        wxPoint(10, 10), wxSize(-1, -1) );
+    (void) new wxButton( panel, wxID_ANY, wxT("Button"),
+        wxPoint(10, 10), wxDefaultSize );
 
@@ -107,3 +107,3 @@
 
-    wxRadioBox *radiobox1 = new wxRadioBox(panel, -1, wxT("Choose one"),
+    wxRadioBox *radiobox1 = new wxRadioBox(panel, wxID_ANY, wxT("Choose one"),
         wxDefaultPosition, wxDefaultSize, 5, animals, 2, wxRA_SPECIFY_ROWS);
@@ -113,3 +113,3 @@
 
-    wxRadioBox *radiobox2 = new wxRadioBox(panel, -1,
+    wxRadioBox *radiobox2 = new wxRadioBox(panel, wxID_ANY,
         wxT("Choose your favourite"), wxDefaultPosition, wxDefaultSize,
@@ -129,3 +129,3 @@
 
-    (void) new wxStaticText( panel, -1,
+    (void) new wxStaticText( panel, wxID_ANY,
         wxT("This page intentionally left blank"), wxPoint(10, 10) );
@@ -139,3 +139,3 @@
 
-    wxButton *buttonBig = new wxButton( panel, -1, wxT("Maximized button"),
+    wxButton *buttonBig = new wxButton( panel, wxID_ANY, wxT("Maximized button"),
         wxPoint(0, 0), wxSize(480, 360) );
@@ -155,3 +155,3 @@
     panel->SetBackgroundColour( wxColour( wxT("MAROON") ) );
-    (void) new wxStaticText( panel, -1,
+    (void) new wxStaticText( panel, wxID_ANY,
         wxT("This page has been inserted, not added."), wxPoint(10, 10) );
@@ -166,12 +166,12 @@
     wxPanel *panel = CreateRadioButtonsPage();
-    AddPage( panel, RADIOBUTTONS_PAGE_NAME, FALSE, GetIconIndex() );
+    AddPage( panel, RADIOBUTTONS_PAGE_NAME, false, GetIconIndex() );
 
     panel = CreateVetoPage();
-    AddPage( panel, VETO_PAGE_NAME, FALSE, GetIconIndex() );
+    AddPage( panel, VETO_PAGE_NAME, false, GetIconIndex() );
 
     panel = CreateBigButtonPage();
-    AddPage( panel, MAXIMIZED_BUTTON_PAGE_NAME, FALSE, GetIconIndex() );
+    AddPage( panel, MAXIMIZED_BUTTON_PAGE_NAME, false, GetIconIndex() );
 
     panel = CreateInsertPage();
-    InsertPage( 0, panel, I_WAS_INSERTED_PAGE_NAME, FALSE, GetIconIndex() );
+    InsertPage( 0, panel, I_WAS_INSERTED_PAGE_NAME, false, GetIconIndex() );
 
@@ -197,3 +197,3 @@
                  long style)
-    : wxFrame((wxWindow *) NULL, -1, title, pos, size, style)
+    : wxFrame((wxWindow *) NULL, wxID_ANY, title, pos, size, style)
 {
@@ -228,3 +228,3 @@
 
-    m_panel = new wxPanel(this, -1, wxDefaultPosition, wxDefaultSize,
+    m_panel = new wxPanel(this, wxID_ANY, wxDefaultPosition, wxDefaultSize,
         wxTAB_TRAVERSAL | wxCLIP_CHILDREN | wxNO_BORDER | wxNO_FULL_REPAINT_ON_RESIZE);
@@ -278,3 +278,3 @@
 
-    m_text = new wxTextCtrl(m_panel, -1, wxEmptyString,
+    m_text = new wxTextCtrl(m_panel, wxID_ANY, wxEmptyString,
         wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE | wxTE_READONLY);
@@ -318,3 +318,3 @@
 
-    m_panel->SetAutoLayout(TRUE);
+    m_panel->SetAutoLayout(true);
 
@@ -391,3 +391,3 @@
             wxWindow *page = m_notebook->CreatePage(str);
-            m_notebook->AddPage(page, str, FALSE, m_notebook->GetIconIndex() );
+            m_notebook->AddPage(page, str, false, m_notebook->GetIconIndex() );
         }
@@ -447,10 +447,10 @@
 
-    wxPanel *panel = new wxPanel( m_notebook, -1 );
-    (void) new wxButton( panel, -1, wxT("First button"),
-        wxPoint(10, 10), wxSize(-1, -1) );
-    (void) new wxButton( panel, -1, wxT("Second button"),
-        wxPoint(50, 100), wxSize(-1, -1) );
+    wxPanel *panel = new wxPanel( m_notebook, wxID_ANY );
+    (void) new wxButton( panel, wxID_ANY, wxT("First button"),
+        wxPoint(10, 10), wxDefaultSize );
+    (void) new wxButton( panel, wxID_ANY, wxT("Second button"),
+        wxPoint(50, 100), wxDefaultSize );
 
     m_notebook->AddPage(panel, wxString::Format(ADDED_PAGE_NAME wxT("%u"),
-        ++s_pageAdded), TRUE, m_notebook->GetIconIndex() );
+        ++s_pageAdded), true, m_notebook->GetIconIndex() );
 }
@@ -464,3 +464,3 @@
     m_notebook->InsertPage( 0, panel,
-        wxString::Format(INSERTED_PAGE_NAME wxT("%u"), ++s_pageIns), FALSE,
+        wxString::Format(INSERTED_PAGE_NAME wxT("%u"), ++s_pageIns), false,
         m_notebook->GetIconIndex() );
diff -bu1 -P -r wxWidgets/samples/notebook/notebook.h wxW/samples/notebook/notebook.h
--- wxWidgets/samples/notebook/notebook.h	2004-02-07 20:20:29.000000000 +0100
+++ wxW/samples/notebook/notebook.h	2004-04-21 12:06:59.000000000 +0200
@@ -50,3 +50,3 @@
 public:
-    MyNotebook(wxWindow *parent, wxWindowID id = -1,
+    MyNotebook(wxWindow *parent, wxWindowID id = wxID_ANY,
         const wxPoint& pos = wxDefaultPosition,
diff -bu1 -P -r wxWidgets/samples/statbar/statbar.cpp wxW/samples/statbar/statbar.cpp
--- wxWidgets/samples/statbar/statbar.cpp	2004-04-07 09:15:52.000000000 +0200
+++ wxW/samples/statbar/statbar.cpp	2004-04-21 12:06:58.000000000 +0200
@@ -107,3 +107,3 @@
 
-    wxBitmap CreateBitmapForButton(bool on = FALSE);
+    wxBitmap CreateBitmapForButton(bool on = false);
 
@@ -218,4 +218,4 @@
     EVT_CHECKBOX(StatusBar_Checkbox, MyStatusBar::OnToggleClock)
-    EVT_BUTTON(-1, MyStatusBar::OnButton)
-    EVT_TIMER(-1, MyStatusBar::OnTimer)
+    EVT_BUTTON(wxID_ANY, MyStatusBar::OnButton)
+    EVT_TIMER(wxID_ANY, MyStatusBar::OnTimer)
 END_EVENT_TABLE()
@@ -246,8 +246,8 @@
     // created initially)
-    frame->Show(TRUE);
+    frame->Show(true);
 
     // success: wxApp::OnRun() will be called which will enter the main message
-    // loop and the application will run. If we returned FALSE here, the
+    // loop and the application will run. If we returned false here, the
     // application would exit immediately.
-    return TRUE;
+    return true;
 }
@@ -261,5 +261,5 @@
 #ifdef USE_MDI_PARENT_FRAME
-       : wxMDIParentFrame((wxWindow *)NULL, -1, title, pos, size)
+       : wxMDIParentFrame((wxWindow *)NULL, wxID_ANY, title, pos, size)
 #else
-       : wxFrame((wxWindow *)NULL, -1, title, pos, size)
+       : wxFrame((wxWindow *)NULL, wxID_ANY, title, pos, size)
 #endif
@@ -447,4 +447,4 @@
 {
-    // TRUE is to force the frame to close
-    Close(TRUE);
+    // true is to force the frame to close
+    Close(true);
 }
@@ -462,3 +462,3 @@
 MyAboutDialog::MyAboutDialog(wxWindow *parent)
-             : wxDialog(parent, -1, wxString(_T("About statbar")),
+             : wxDialog(parent, wxID_ANY, wxString(_T("About statbar")),
                         wxDefaultPosition, wxDefaultSize,
@@ -466,3 +466,3 @@
 {
-    wxStaticText *text = new wxStaticText(this, -1,
+    wxStaticText *text = new wxStaticText(this, wxID_ANY,
                                           _T("wxStatusBar sample\n")
@@ -474,3 +474,3 @@
     // otherwise it looks weird
-    wxStatusBar *statbarTop = new wxStatusBar(this, -1, 0);
+    wxStatusBar *statbarTop = new wxStatusBar(this, wxID_ANY, 0);
     statbarTop->SetFieldsCount(3);
@@ -480,3 +480,3 @@
 
-    wxStatusBar *statbarBottom = new wxStatusBar(this, -1);
+    wxStatusBar *statbarBottom = new wxStatusBar(this, wxID_ANY);
     statbarBottom->SetFieldsCount(2);
@@ -494,3 +494,3 @@
 
-    SetAutoLayout(TRUE);
+    SetAutoLayout(true);
     SetSizer(sizerTop);
@@ -511,3 +511,3 @@
 MyStatusBar::MyStatusBar(wxWindow *parent)
-           : wxStatusBar(parent, -1), m_timer(this), m_checkbox(NULL)
+           : wxStatusBar(parent, wxID_ANY), m_timer(this), m_checkbox(NULL)
 {
@@ -519,8 +519,8 @@
     m_checkbox = new wxCheckBox(this, StatusBar_Checkbox, _T("&Toggle clock"));
-    m_checkbox->SetValue(TRUE);
+    m_checkbox->SetValue(true);
 
 #ifdef USE_STATIC_BITMAP
-    m_statbmp = new wxStaticBitmap(this, -1, wxIcon(green_xpm));
+    m_statbmp = new wxStaticBitmap(this, wxID_ANY, wxIcon(green_xpm));
 #else
-    m_statbmp = new wxBitmapButton(this, -1, CreateBitmapForButton(),
+    m_statbmp = new wxBitmapButton(this, wxID_ANY, CreateBitmapForButton(),
                                    wxDefaultPosition, wxDefaultSize,
@@ -605,3 +605,3 @@
 #else
-        m_statbmp->SetBitmapLabel(CreateBitmapForButton(FALSE));
+        m_statbmp->SetBitmapLabel(CreateBitmapForButton(false));
         m_statbmp->Refresh();
@@ -618,3 +618,3 @@
 #else
-        m_statbmp->SetBitmapLabel(CreateBitmapForButton(TRUE));
+        m_statbmp->SetBitmapLabel(CreateBitmapForButton(true));
         m_statbmp->Refresh();
diff -bu1 -P -r wxWidgets/samples/taskbar/tbtest.cpp wxW/samples/taskbar/tbtest.cpp
--- wxWidgets/samples/taskbar/tbtest.cpp	2004-03-23 23:20:16.000000000 +0100
+++ wxW/samples/taskbar/tbtest.cpp	2004-04-21 12:06:59.000000000 +0200
@@ -38,7 +38,7 @@
     // Create the main frame window
-    dialog = new MyDialog(NULL, -1, wxT("wxTaskBarIcon Test Dialog"), wxPoint(-1, -1), wxSize(365, 290), wxDIALOG_MODELESS|wxDEFAULT_DIALOG_STYLE);
+    dialog = new MyDialog(NULL, wxID_ANY, wxT("wxTaskBarIcon Test Dialog"), wxDefaultPosition, wxSize(365, 290), wxDIALOG_MODELESS|wxDEFAULT_DIALOG_STYLE);
 
-    dialog->Show(TRUE);
+    dialog->Show(true);
 
-    return TRUE;
+    return true;
 }
@@ -68,3 +68,3 @@
 {
-    Show(FALSE);
+    Show(false);
 }
@@ -73,3 +73,3 @@
 {
-    Close(TRUE);
+    Close(true);
 }
@@ -83,6 +83,6 @@
 {
-  (void)new wxStaticText(this, -1, _T("Press OK to hide me, Exit to quit."),
+  (void)new wxStaticText(this, wxID_ANY, _T("Press OK to hide me, Exit to quit."),
                          wxPoint(10, 20));
 
-  (void)new wxStaticText(this, -1, _T("Double-click on the taskbar icon to show me again."),
+  (void)new wxStaticText(this, wxID_ANY, _T("Double-click on the taskbar icon to show me again."),
                          wxPoint(10, 40));
@@ -117,3 +117,3 @@
 {
-    dialog->Show(TRUE);
+    dialog->Show(true);
 }
@@ -122,3 +122,3 @@
 {
-    dialog->Close(TRUE);
+    dialog->Close(true);
 
@@ -156,3 +156,3 @@
 {
-    dialog->Show(TRUE);
+    dialog->Show(true);
 }
diff -bu1 -P -r wxWidgets/samples/treectrl/treetest.cpp wxW/samples/treectrl/treetest.cpp
--- wxWidgets/samples/treectrl/treetest.cpp	2004-02-29 15:21:11.000000000 +0100
+++ wxW/samples/treectrl/treetest.cpp	2004-04-21 12:06:59.000000000 +0200
@@ -157,6 +157,6 @@
     // Show the frame
-    frame->Show(TRUE);
+    frame->Show(true);
     SetTopWindow(frame);
 
-    return TRUE;
+    return true;
 }
@@ -166,3 +166,3 @@
 MyFrame::MyFrame(const wxString& title, int x, int y, int w, int h)
-       : wxFrame((wxFrame *)NULL, -1, title, wxPoint(x, y), wxSize(w, h)),
+       : wxFrame((wxFrame *)NULL, wxID_ANY, title, wxPoint(x, y), wxSize(w, h)),
          m_treeCtrl(NULL), m_textCtrl(NULL)
@@ -188,16 +188,16 @@
 
-    style_menu->Append(TreeTest_TogButtons, wxT("Toggle &normal buttons"), wxT(""), TRUE);
-    style_menu->Append(TreeTest_TogTwist, wxT("Toggle &twister buttons"), wxT(""), TRUE);
-    style_menu->Append(TreeTest_ToggleButtons, wxT("Toggle image &buttons"), wxT(""), TRUE);
+    style_menu->Append(TreeTest_TogButtons, wxT("Toggle &normal buttons"), wxT(""), true);
+    style_menu->Append(TreeTest_TogTwist, wxT("Toggle &twister buttons"), wxT(""), true);
+    style_menu->Append(TreeTest_ToggleButtons, wxT("Toggle image &buttons"), wxT(""), true);
     style_menu->AppendSeparator();
-    style_menu->Append(TreeTest_TogLines, wxT("Toggle &connecting lines"), wxT(""), TRUE);
-    style_menu->Append(TreeTest_TogRootLines, wxT("Toggle &lines at root"), wxT(""), TRUE);
-    style_menu->Append(TreeTest_TogHideRoot, wxT("Toggle &hidden root"), wxT(""), TRUE);
-    style_menu->Append(TreeTest_TogBorder, wxT("Toggle &item border"), wxT(""), TRUE);
-    style_menu->Append(TreeTest_TogFullHighlight, wxT("Toggle &full row highlight"), wxT(""), TRUE);
-    style_menu->Append(TreeTest_TogEdit, wxT("Toggle &edit mode"), wxT(""), TRUE);
+    style_menu->Append(TreeTest_TogLines, wxT("Toggle &connecting lines"), wxT(""), true);
+    style_menu->Append(TreeTest_TogRootLines, wxT("Toggle &lines at root"), wxT(""), true);
+    style_menu->Append(TreeTest_TogHideRoot, wxT("Toggle &hidden root"), wxT(""), true);
+    style_menu->Append(TreeTest_TogBorder, wxT("Toggle &item border"), wxT(""), true);
+    style_menu->Append(TreeTest_TogFullHighlight, wxT("Toggle &full row highlight"), wxT(""), true);
+    style_menu->Append(TreeTest_TogEdit, wxT("Toggle &edit mode"), wxT(""), true);
 #ifndef NO_MULTIPLE_SELECTION
-    style_menu->Append(TreeTest_ToggleSel, wxT("Toggle &selection mode"), wxT(""), TRUE);
+    style_menu->Append(TreeTest_ToggleSel, wxT("Toggle &selection mode"), wxT(""), true);
 #endif // NO_MULTIPLE_SELECTION
-    style_menu->Append(TreeTest_ToggleImages, wxT("Toggle show ima&ges"), wxT(""), TRUE);
+    style_menu->Append(TreeTest_ToggleImages, wxT("Toggle show ima&ges"), wxT(""), true);
     style_menu->Append(TreeTest_SetImageSize, wxT("Set image si&ze..."));
@@ -258,3 +258,3 @@
     // create the controls
-    m_textCtrl = new wxTextCtrl(this, -1, wxT(""),
+    m_textCtrl = new wxTextCtrl(this, wxID_ANY, wxT(""),
                                 wxDefaultPosition, wxDefaultSize,
@@ -264,3 +264,3 @@
 
-    menu_bar->Check(TreeTest_ToggleImages, TRUE);
+    menu_bar->Check(TreeTest_ToggleImages, true);
 
@@ -373,3 +373,3 @@
 {
-    Close(TRUE);
+    Close(true);
 }
@@ -411,3 +411,3 @@
 
-    int i = m_treeCtrl->GetChildrenCount( item, FALSE );
+    int i = m_treeCtrl->GetChildrenCount( item, false );
 
@@ -530,3 +530,3 @@
     m_treeCtrl->CreateImageList(size);
-    wxGetApp().SetShowImages(TRUE);
+    wxGetApp().SetShowImages(true);
 }
@@ -538,3 +538,3 @@
         m_treeCtrl->CreateImageList(-1);
-        wxGetApp().SetShowImages(FALSE);
+        wxGetApp().SetShowImages(false);
     }
@@ -543,3 +543,3 @@
         m_treeCtrl->CreateImageList(0);
-        wxGetApp().SetShowImages(TRUE);
+        wxGetApp().SetShowImages(true);
     }
@@ -553,3 +553,3 @@
         m_treeCtrl->CreateButtonsImageList(-1);
-        wxGetApp().SetShowButtons(FALSE);
+        wxGetApp().SetShowButtons(false);
     }
@@ -558,3 +558,3 @@
         m_treeCtrl->CreateButtonsImageList(15);
-        wxGetApp().SetShowButtons(TRUE);
+        wxGetApp().SetShowButtons(true);
     }
@@ -654,3 +654,3 @@
 {
-    m_reverseSort = FALSE;
+    m_reverseSort = false;
 
@@ -675,3 +675,3 @@
     // Make an image list containing small icons
-    wxImageList *images = new wxImageList(size, size, TRUE);
+    wxImageList *images = new wxImageList(size, size, true);
 
@@ -712,3 +712,3 @@
     // Make an image list containing small icons
-    wxImageList *images = new wxImageList(size, size, TRUE);
+    wxImageList *images = new wxImageList(size, size, true);
 
@@ -1220,3 +1220,3 @@
                  tree->GetChildrenCount(GetId()),
-                 tree->GetChildrenCount(GetId(), FALSE));
+                 tree->GetChildrenCount(GetId(), false));
 }
diff -bu1 -P -r wxWidgets/samples/treectrl/treetest.h wxW/samples/treectrl/treetest.h
--- wxWidgets/samples/treectrl/treetest.h	2004-02-12 16:35:36.000000000 +0100
+++ wxW/samples/treectrl/treetest.h	2004-04-21 11:41:43.000000000 +0200
@@ -25,3 +25,3 @@
 public:
-    MyApp() { m_showImages = TRUE; m_showButtons = FALSE; }
+    MyApp() { m_showImages = true; m_showButtons = false; }
 
@@ -98,3 +98,3 @@
 
-    void DoSortChildren(const wxTreeItemId& item, bool reverse = FALSE)
+    void DoSortChildren(const wxTreeItemId& item, bool reverse = false)
         { m_reverseSort = reverse; wxTreeCtrl::SortChildren(item); }
@@ -192,4 +192,4 @@
 
-    void OnSetBold(wxCommandEvent& WXUNUSED(event)) { DoSetBold(TRUE); }
-    void OnClearBold(wxCommandEvent& WXUNUSED(event)) { DoSetBold(FALSE); }
+    void OnSetBold(wxCommandEvent& WXUNUSED(event)) { DoSetBold(true); }
+    void OnClearBold(wxCommandEvent& WXUNUSED(event)) { DoSetBold(false); }
 
@@ -202,3 +202,3 @@
     void OnSort(wxCommandEvent& WXUNUSED(event)) { DoSort(); }
-    void OnSortRev(wxCommandEvent& WXUNUSED(event)) { DoSort(TRUE); }
+    void OnSortRev(wxCommandEvent& WXUNUSED(event)) { DoSort(true); }
 
@@ -221,3 +221,3 @@
 
-    void DoSort(bool reverse = FALSE);
+    void DoSort(bool reverse = false);
 
@@ -231,3 +231,3 @@
 
-    void DoSetBold(bool bold = TRUE);
+    void DoSetBold(bool bold = true);
 

 	  	 
