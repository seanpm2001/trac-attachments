Index: include/wx/msw/treectrl.h
===================================================================
--- include/wx/msw/treectrl.h	(revision 63133)
+++ include/wx/msw/treectrl.h	(working copy)
@@ -162,6 +162,7 @@
     virtual void Unselect();
     virtual void UnselectAll();
     virtual void SelectItem(const wxTreeItemId& item, bool select = true);
+    virtual void SelectAll(const wxTreeItemId& parent);
 
     virtual void EnsureVisible(const wxTreeItemId& item);
     virtual void ScrollTo(const wxTreeItemId& item);
@@ -276,6 +277,7 @@
     void DoToggleItemSelection(const wxTreeItemId& item);
 
     void DoUnselectAll();
+    void DoSelectAll(const wxTreeItemId& parent);
 
     void DeleteTextCtrl();
 
Index: src/msw/treectrl.cpp
===================================================================
--- src/msw/treectrl.cpp	(revision 63133)
+++ src/msw/treectrl.cpp	(working copy)
@@ -1873,6 +1873,37 @@
     }
 }
 
+void wxTreeCtrl::DoSelectAll(const wxTreeItemId& parent)
+{
+    DoUnselectAll();
+    wxTreeItemIdValue cookie;
+    const wxTreeItemId first = GetFirstChild(parent, cookie);
+    const wxTreeItemId last = GetLastChild(parent);
+
+    SelectRange(GetHwnd(), HITEM(first), HITEM(last), 0);
+}
+
+void wxTreeCtrl::SelectAll(const wxTreeItemId& parent)
+{
+    wxCHECK_RET( HasFlag(wxTR_MULTIPLE), wxT("this only works with multiple selection controls") );
+
+    HTREEITEM htFocus = (HTREEITEM)TreeView_GetSelection(GetHwnd());
+    if ( !htFocus ) return;
+
+    wxTreeEvent changingEvent(wxEVT_COMMAND_TREE_SEL_CHANGING, this);
+    changingEvent.m_itemOld = htFocus;
+
+    if ( IsTreeEventAllowed(changingEvent) )
+    {
+        DoSelectAll(parent);
+
+        wxTreeEvent changedEvent(wxEVT_COMMAND_TREE_SEL_CHANGED, this);
+        changedEvent.m_itemOld = htFocus;
+        (void)HandleTreeEvent(changedEvent);
+    }
+}
+
+
 void wxTreeCtrl::DoSelectItem(const wxTreeItemId& item, bool select)
 {
     TempSetter set(m_changingSelection);
