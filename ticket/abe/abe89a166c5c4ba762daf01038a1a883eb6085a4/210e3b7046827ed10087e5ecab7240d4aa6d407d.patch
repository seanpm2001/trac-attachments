diff -ru wxWidgets.orig/src/msw/mediactrl_am.cpp wxWidgets/src/msw/mediactrl_am.cpp
--- wxWidgets.orig/src/msw/mediactrl_am.cpp	2007-02-12 14:50:32.000000000 +0100
+++ wxWidgets/src/msw/mediactrl_am.cpp	2007-03-10 20:22:23.000000000 +0100
@@ -1483,6 +1483,7 @@
     LPAMGETERRORTEXT m_lpAMGetErrorText;
     wxString GetErrorString(HRESULT hrdsv);
 #endif // __WXDEBUG__
+    wxEvtHandler* m_evthandler;
 
     friend class wxAMMediaEvtHandler;
     DECLARE_DYNAMIC_CLASS(wxAMMediaBackend)
@@ -1573,6 +1574,7 @@
 #endif
                   m_bestSize(wxDefaultSize)
 {
+   m_evthandler = NULL;
 }
 
 //---------------------------------------------------------------------------
@@ -1591,7 +1593,11 @@
         if (GetMP())
             GetMP()->Release();
 
-        m_ctrl->PopEventHandler(true);
+        if (m_evthandler)
+        {
+            m_ctrl->RemoveEventHandler(m_evthandler);
+            delete m_evthandler;
+        }
     }
 }
 
@@ -1683,7 +1689,8 @@
 #endif
                                   );
     // Connect for events
-    m_ctrl->PushEventHandler(new wxAMMediaEvtHandler(this));
+    m_evthandler = new wxAMMediaEvtHandler(this);
+    m_ctrl->PushEventHandler(m_evthandler);
 
     //
     //  Here we set up wx-specific stuff for the default
diff -ru wxWidgets.orig/src/msw/mediactrl_qt.cpp wxWidgets/src/msw/mediactrl_qt.cpp
--- wxWidgets.orig/src/msw/mediactrl_qt.cpp	2007-02-12 14:50:32.000000000 +0100
+++ wxWidgets/src/msw/mediactrl_qt.cpp	2007-03-10 20:25:33.000000000 +0100
@@ -429,6 +429,7 @@
     wxTimer* m_timer;               // Load or Play timer
     wxQuickTimeLibrary m_lib;       // DLL to load functions from
     ComponentInstance m_pMC;        // Movie Controller
+    wxEvtHandler* m_evthandler;
 
     friend class wxQTMediaEvtHandler;
 
@@ -605,6 +606,7 @@
 wxQTMediaBackend::wxQTMediaBackend()
 : m_movie(NULL), m_bPlaying(false), m_timer(NULL), m_pMC(NULL)
 {
+    m_evthandler = NULL;
 }
 
 //---------------------------------------------------------------------------
@@ -630,7 +632,11 @@
         }
 
         // destroy wxQTMediaEvtHandler we pushed on it
-        m_ctrl->PopEventHandler(true);
+        if (m_evthandler)
+        {
+            m_ctrl->RemoveEventHandler(m_evthandler);
+            delete m_evthandler;
+        }
 
         m_lib.DestroyPortAssociation(
             (CGrafPtr)m_lib.GetNativeWindowPort(m_ctrl->GetHWND()));
@@ -689,7 +695,8 @@
 
     // Part of a suggestion from Greg Hazel
     // to repaint movie when idle
-    m_ctrl->PushEventHandler(new wxQTMediaEvtHandler(this, m_ctrl->GetHWND()));
+    m_evthandler = new wxQTMediaEvtHandler(this, m_ctrl->GetHWND());
+    m_ctrl->PushEventHandler(m_evthandler);
 
     // done
     return true;
diff -ru wxWidgets.orig/src/msw/mediactrl_wmp10.cpp wxWidgets/src/msw/mediactrl_wmp10.cpp
--- wxWidgets.orig/src/msw/mediactrl_wmp10.cpp	2007-02-12 14:50:32.000000000 +0100
+++ wxWidgets/src/msw/mediactrl_wmp10.cpp	2007-03-10 20:24:28.000000000 +0100
@@ -675,6 +675,7 @@
     wxSize m_bestSize;              // Actual movie size
 
     bool m_bWasStateChanged;        // See the "introduction"
+    wxEvtHandler* m_evthandler;
 
     friend class wxWMP10MediaEvtHandler;
     DECLARE_DYNAMIC_CLASS(wxWMP10MediaBackend)
@@ -726,6 +727,7 @@
                 m_pWMPPlayer(NULL)
 
 {
+    m_evthandler = NULL;
 }
 
 //---------------------------------------------------------------------------
@@ -739,7 +741,11 @@
         m_pAX->DissociateHandle();
         delete m_pAX;
 
-        m_ctrl->PopEventHandler(true);
+        if (m_evthandler)
+        {
+            m_ctrl->RemoveEventHandler(m_evthandler);
+            delete m_evthandler;
+        }
 #else
         AtlAxWinTerm();
         _Module.Term();
@@ -812,7 +818,8 @@
     m_pAX = new wxActiveXContainer(ctrl, IID_IWMPPlayer, m_pWMPPlayer);
 
     // Connect for events
-    m_ctrl->PushEventHandler(new wxWMP10MediaEvtHandler(this));
+    m_evthandler = new wxWMP10MediaEvtHandler(this);
+    m_ctrl->PushEventHandler(m_evthandler);
 #else
     _Module.Init(NULL, ::GetModuleHandle(NULL));
     AtlAxWinInit();

 	  	 
