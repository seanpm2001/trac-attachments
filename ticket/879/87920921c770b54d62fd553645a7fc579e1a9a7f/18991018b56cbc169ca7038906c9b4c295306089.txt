Index: include/wx/univ/menu.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/univ/menu.h,v
retrieving revision 1.9
diff -r1.9 menu.h
117a118,120
>     // terminate the current radio group, if any
>     void EndRadioGroup();
> 
128a132,134
> 
>     // the position of the first item in the current radio group or -1
>     int m_startRadioGroup;

Index: include/wx/univ/menuitem.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/univ/menuitem.h,v
retrieving revision 1.7
diff -r1.7 menuitem.h
50a51,55
>     // mark item as belonging to the given radio group
>     void SetAsRadioGroupStart();
>     void SetRadioGroupStart(int start);
>     void SetRadioGroupEnd(int end);
> 
90a96,108
> 
>     // the positions of the first and last items of the radio group this item
>     // belongs to or -1: start is the radio group start and is valid for all
>     // but first radio group items (m_isRadioGroupStart == FALSE), end is valid
>     // only for the first one
>     union
>     {
>         int start;
>         int end;
>     } m_radioGroup;
> 
>     // does this item start a radio group?
>     bool m_isRadioGroupStart;

Index: src/univ/menu.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/univ/menu.cpp,v
retrieving revision 1.30
diff -r1.30 menu.cpp
1020a1021,1022
> 
>     m_startRadioGroup = -1;
1083a1086,1091
> void wxMenu::EndRadioGroup()
> {
>     // we're not inside a radio group any longer
>     m_startRadioGroup = -1;
> }
> 
1085a1094,1132
>     bool check = FALSE;
> 
>     if ( item->GetKind() == wxITEM_RADIO )
>     {
>         int count = GetMenuItemCount();
> 
>         if ( m_startRadioGroup == -1 )
>         {
>             // start a new radio group
>             m_startRadioGroup = count;
> 
>             // for now it has just one element
>             item->SetAsRadioGroupStart();
>             item->SetRadioGroupEnd(m_startRadioGroup);
> 
>             // ensure that we have a checked item in the radio group
>             check = TRUE;
>         }
>         else // extend the current radio group
>         {
>             // we need to update its end item
>             item->SetRadioGroupStart(m_startRadioGroup);
>             wxMenuItemList::Node *node = GetMenuItems().Item(m_startRadioGroup);
> 
>             if ( node )
>             {
>                 node->GetData()->SetRadioGroupEnd(count);
>             }
>             else
>             {
>                 wxFAIL_MSG( _T("where is the radio group start item?") );
>             }
>         }
>     }
>     else // not a radio item
>     {
>         EndRadioGroup();
>     }
> 
1412a1460,1462
>     m_radioGroup.start = -1;
>     m_isRadioGroupStart = FALSE;
> 
1502c1552,1557
<     if ( check != m_isChecked )
---
>     wxCHECK_RET( IsCheckable(), wxT("only checkable items may be checked") );
> 
>     if ( m_isChecked == check )
>         return;
> 
>     if ( GetKind() == wxITEM_RADIO )
1504c1559,1561
<         wxMenuItemBase::Check(check);
---
>         // it doesn't make sense to uncheck a radio item - what would this do?
>         if ( !check )
>             return;
1506c1563,1595
<         NotifyMenu();
---
>         // get the index of this item in the menu
>         const wxMenuItemList& items = m_parentMenu->GetMenuItems();
>         int pos = items.IndexOf(this);
>         wxCHECK_RET( pos != wxNOT_FOUND,
>                      _T("menuitem not found in the menu items list?") );
> 
>         // get the radio group range
>         int start,
>             end;
> 
>         if ( m_isRadioGroupStart )
>         {
>             // we already have all information we need
>             start = pos;
>             end = m_radioGroup.end;
>         }
>         else // next radio group item
>         {
>             // get the radio group end from the start item
>             start = m_radioGroup.start;
>             end = items.Item(start)->GetData()->m_radioGroup.end;
>         }
> 
>         // also uncheck all the other items in this radio group
>         wxMenuItemList::Node *node = items.Item(start);
>         for ( int n = start; n <= end && node; n++ )
>         {
>             if ( n != pos )
>             {
>                 node->GetData()->m_isChecked = FALSE;
>             }
>             node = node->GetNext();
>         }
1507a1597,1624
> 
>     wxMenuItemBase::Check(check);
> 
>     NotifyMenu();
> }
> 
> // radio group stuff
> // -----------------
> 
> void wxMenuItem::SetAsRadioGroupStart()
> {
>     m_isRadioGroupStart = TRUE;
> }
> 
> void wxMenuItem::SetRadioGroupStart(int start)
> {
>     wxASSERT_MSG( !m_isRadioGroupStart,
>                   _T("should only be called for the next radio items") );
> 
>     m_radioGroup.start = start;
> }
> 
> void wxMenuItem::SetRadioGroupEnd(int end)
> {
>     wxASSERT_MSG( m_isRadioGroupStart,
>                   _T("should only be called for the first radio item") );
> 
>     m_radioGroup.end = end;

 	  	 
