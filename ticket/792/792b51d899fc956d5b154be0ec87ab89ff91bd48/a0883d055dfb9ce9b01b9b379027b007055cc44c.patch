Index: src/common/ftp.cpp
===================================================================
--- src/common/ftp.cpp	(Revision 71365)
+++ src/common/ftp.cpp	(Arbeitskopie)
@@ -684,7 +684,7 @@
 
         // when checking the result, the stream will
         // almost always show an error, even if the file was
-        // properly transfered, thus, let's just grab the result
+        // properly transferred, thus, let's just grab the result
 
         // we are looking for "226 transfer completed"
         char code = m_ftp->GetResult();
@@ -900,7 +900,7 @@
 
     int filesize = -1;
 
-    // Check for existance of file via wxFTP::FileExists(...)
+    // Check for existence of file via wxFTP::FileExists(...)
     if ( FileExists(fileName) )
     {
         wxString command;
@@ -937,7 +937,7 @@
         }
 
         // Set transfermode back to the original. Only the "SIZE"-command
-        // is dependant on transfermode
+        // is dependent on transfermode
         if ( oldTransfermode != NONE )
         {
             SetTransferMode(oldTransfermode);
Index: src/common/pickerbase.cpp
===================================================================
--- src/common/pickerbase.cpp	(Revision 71365)
+++ src/common/pickerbase.cpp	(Arbeitskopie)
@@ -82,7 +82,7 @@
             return false;
         }
 
-        // set the maximum lenght allowed for this textctrl.
+        // set the maximum length allowed for this textctrl.
         // This is very important since any change to it will trigger an update in
         // the m_picker; for very long strings, this real-time synchronization could
         // become a CPU-blocker and thus should be avoided.
Index: src/common/stream.cpp
===================================================================
--- src/common/stream.cpp	(Revision 71365)
+++ src/common/stream.cpp	(Arbeitskopie)
@@ -955,7 +955,7 @@
 
         wxASSERT(bytes_read == (size_t)pos);
 
-        // we should now have seeked to the right position...
+        // we should now have sought to the right position...
         return TellI();
     }
 
Index: src/common/sizer.cpp
===================================================================
--- src/common/sizer.cpp	(Revision 71365)
+++ src/common/sizer.cpp	(Arbeitskopie)
@@ -486,7 +486,7 @@
             // have changed alignment or some other property which would
             // not change the size of the window. In such a case, no
             // wxSizeEvent would normally be generated and thus the
-            // control wouldn't get layed out correctly here.
+            // control wouldn't get laid out correctly here.
 #if 1
             m_window->SetSize(pos.x, pos.y, size.x, size.y,
                               wxSIZE_ALLOW_MINUS_ONE|wxSIZE_FORCE_EVENT );
Index: src/common/gifdecod.cpp
===================================================================
--- src/common/gifdecod.cpp	(Revision 71365)
+++ src/common/gifdecod.cpp	(Arbeitskopie)
@@ -354,7 +354,7 @@
     ab_clr = (1 << bits);
     ab_fin = (1 << bits) + 1;
 
-    // these will change through the decompression proccess
+    // these will change through the decompression process
     ab_bits  = bits + 1;
     ab_free  = (1 << bits) + 2;
     ab_max   = (1 << ab_bits) - 1;
Index: src/common/gbsizer.cpp
===================================================================
--- src/common/gbsizer.cpp	(Revision 71365)
+++ src/common/gbsizer.cpp	(Arbeitskopie)
@@ -471,7 +471,7 @@
             item->GetPos(row, col);
             item->GetEndPos(endrow, endcol);
 
-            // fill heights and widths upto this item if needed
+            // fill heights and widths up to this item if needed
             while ( (int)m_rowHeights.GetCount() <= endrow )
                 m_rowHeights.Add(m_emptyCellSize.GetHeight());
             while ( (int)m_colWidths.GetCount() <= endcol )
