--- minimal-orig.cpp	2008-12-10 16:16:10.000000000 -0500
+++ minimal.cpp	2009-09-14 13:06:55.382979500 -0400
@@ -18,8 +18,8 @@
 // ----------------------------------------------------------------------------
  
 // For compilers that support precompilation, includes "wx/wx.h".
-#include "wx/wxprec.h"
- #include "wx/dcbuffer.h"
+#include <wx/wxprec.h>
+ #include <wx/dcbuffer.h>
 
 #ifdef __BORLANDC__
     #pragma hdrstop
@@ -28,7 +28,7 @@
 // for all others, include the necessary headers (this file is usually all you
 // need because it includes almost all "standard" wxWidgets headers)
 #ifndef WX_PRECOMP
-    #include "wx/wx.h"
+    #include <wx/wx.h>
 #endif
 
 // ----------------------------------------------------------------------------
@@ -68,7 +68,8 @@
     // ctor(s)
     MyFrame(const wxString& title);
 	void OnErase(wxEraseEvent& event);
-
+	
+	void OnButtonClick(wxCommandEvent& WXUNUSED(event));
 };
 
 // ----------------------------------------------------------------------------
@@ -98,6 +99,9 @@
     if ( !wxApp::OnInit() )
         return false;
 
+	// Add PNG image handler
+	wxImage::AddHandler( new wxPNGHandler() );
+
     // create the main application window
     MyFrame *frame = new MyFrame(_T("Minimal wxWidgets App"));
 
@@ -128,10 +132,22 @@
 	margins.cxLeftWidth = -1;
 	margins.cxRightWidth = -1;
 		
-		// Expand Glass Area
+	// Expand Glass Area
 	HRESULT hr = ::DwmExtendFrameIntoClientArea((HWND)GetHWND(), &margins);
 
 	Connect(wxEVT_ERASE_BACKGROUND, wxEraseEventHandler(MyFrame::OnErase));
+	
+	// Create button for alternate sample
+	wxButton *button = new wxButton(this, 123, _("create bitmap"), wxPoint(100, 100), wxSize(100, 20), wxBU_EXACTFIT);
+	Connect(123, wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MyFrame::OnButtonClick));
+
+	wxGridSizer *sizer = new wxGridSizer(1, 2, 0, 40);
+	sizer->AddSpacer(100);
+	sizer->Add(button, 0, wxALIGN_BOTTOM);
+	
+	sizer->Fit( this );
+	sizer->SetSizeHints( this );
+	SetSizer(sizer);
 }
 
 
@@ -143,7 +159,7 @@
 	wxBufferedDC bdc(dc);
 	wxGCDC gdc(bdc);
 
-	gdc.SetBackground(wxBrush(wxColour(0, 255, 0, wxALPHA_OPAQUE)));
+//	gdc.SetBackground(wxBrush(wxColour(0, 255, 0, wxALPHA_OPAQUE)));
 	gdc.Clear();
 
 	gdc.SetBrush(wxBrush(wxColour(0, 255, 0, wxALPHA_OPAQUE)));
@@ -153,9 +169,44 @@
 	gdc.SetFont(font);
 
 	// uncomment this to get an opaque text
-	//wxFont font2(11, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, _T("Chiller"));
+	//wxFont font2(30, wxFONTFAMILY_SWISS, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_BOLD, false, _T("Segoe UI"));
 	//gdc.SetFont(font2);
 
 	gdc.SetTextForeground(wxColour(0, 0, 0, wxALPHA_OPAQUE));
 	gdc.DrawText(_("wxWidgets"), 120, 20);
 }
+
+void MyFrame::OnButtonClick(wxCommandEvent& WXUNUSED(event))
+{
+	wxFont font = wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT);
+	wxBitmap bitmap(200, 120, 32);
+	bitmap.UseAlpha();
+
+	wxMemoryDC memDC(bitmap);
+	wxGCDC dc(memDC); 	
+
+	// Clear background
+	dc.SetBackground(*wxTRANSPARENT_BRUSH); 
+	dc.Clear();
+
+	// Draw some text
+	font.SetPointSize(12);
+	font.SetWeight(wxBOLD);
+	dc.SetFont(font);
+	dc.SetTextForeground(*wxBLACK);
+
+	// Uncomment the following line to make the text in the image draw correctly
+	// dc.SetBackgroundMode( wxSOLID );
+
+	dc.DrawText(_("wxWidgets"), 2, 2);
+	dc.DrawText(_("is"), 2, 20);
+	dc.DrawText(_("cool"), 2, 35);
+
+	memDC.SelectObject( wxNullBitmap ); 
+	wxFileDialog *fd = new wxFileDialog(this, _("Where to save the image?"), wxEmptyString, _("test.png"), _("PNG files (*.png)|*.png"), wxSAVE | wxOVERWRITE_PROMPT);
+	if (fd->ShowModal() == wxID_OK)
+	{
+		bitmap.SaveFile(fd->GetPath(), wxBITMAP_TYPE_PNG);
+	}
+	delete fd;
+}
