Index: samples/minimal/minimal.cpp
===================================================================
--- samples/minimal/minimal.cpp	(revision 72304)
+++ samples/minimal/minimal.cpp	(working copy)
@@ -67,6 +67,9 @@
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    void OnBtnLeftDown(wxMouseEvent& event);
+    void OnBtnLeftUp(wxMouseEvent& event);
+    void OnBtnCaptureLost(wxMouseCaptureLostEvent& event);
 
 private:
     // any class wishing to process wxWidgets events must use this macro
@@ -172,6 +175,11 @@
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+
+    wxButton *theButton = new wxButton(this, wxID_ANY, "Press Me");
+    theButton->Bind(wxEVT_LEFT_DOWN, &MyFrame::OnBtnLeftDown, this);
+    theButton->Bind(wxEVT_LEFT_UP, &MyFrame::OnBtnLeftUp, this);
+    theButton->Bind(wxEVT_MOUSE_CAPTURE_LOST, &MyFrame::OnBtnCaptureLost, this);
 }
 
 
@@ -198,3 +206,24 @@
                  wxOK | wxICON_INFORMATION,
                  this);
 }
+
+void MyFrame::OnBtnLeftDown(wxMouseEvent& event)
+{
+    static_cast<wxWindow*>(event.GetEventObject())->CaptureMouse();
+    SetStatusText("down");
+    event.Skip();
+}
+
+void MyFrame::OnBtnLeftUp(wxMouseEvent& event)
+{
+    if (static_cast<wxWindow*>(event.GetEventObject())->HasCapture()) {
+        static_cast<wxWindow*>(event.GetEventObject())->ReleaseMouse();
+    }
+    SetStatusText("up");
+    event.Skip();
+}
+
+void MyFrame::OnBtnCaptureLost(wxMouseCaptureLostEvent& WXUNUSED(event))
+{
+    SetStatusText("capture lost");
+}
