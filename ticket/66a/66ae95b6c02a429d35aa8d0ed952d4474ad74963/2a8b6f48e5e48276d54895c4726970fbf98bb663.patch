--- src\generic\grid_r67384.cpp	2011-06-29 09:33:42.000000000 +0200
+++ src\generic\grid.cpp	2011-07-19 14:04:41.796875000 +0200
@@ -163,5 +163,5 @@
 namespace
 {
-    
+
     // ensure that first is less or equal to second, swapping the values if
     // necessary
@@ -171,5 +171,5 @@
             wxSwap(first, second);
     }
-    
+
 } // anonymous namespace
 
@@ -1653,4 +1653,7 @@
 void wxGridRowLabelWindow::OnPaint( wxPaintEvent& WXUNUSED(event) )
 {
+    if ( IsBeingDeleted() )
+        return;
+
     wxPaintDC dc(this);
 
@@ -1691,4 +1694,7 @@
 void wxGridColLabelWindow::OnPaint( wxPaintEvent& WXUNUSED(event) )
 {
+    if ( IsBeingDeleted() )
+        return;
+
     wxPaintDC dc(this);
 
@@ -1732,4 +1738,7 @@
 void wxGridCornerLabelWindow::OnPaint( wxPaintEvent& WXUNUSED(event) )
 {
+    if ( IsBeingDeleted() )
+        return;
+
     wxPaintDC dc(this);
 
@@ -1764,4 +1773,7 @@
 void wxGridWindow::OnPaint( wxPaintEvent &WXUNUSED(event) )
 {
+    if ( IsBeingDeleted() )
+        return;
+
     wxPaintDC dc( this );
     m_owner->PrepareDC( dc );
@@ -1825,4 +1837,7 @@
 void wxGridWindow::OnFocus(wxFocusEvent& event)
 {
+    if ( IsBeingDeleted() )
+        return;
+
     // and if we have any selection, it has to be repainted, because it
     // uses different colour when the grid is not focused:
@@ -4434,4 +4449,7 @@
 void wxGrid::Refresh(bool eraseb, const wxRect* rect)
 {
+    if ( IsBeingDeleted() )
+        return;
+
     // Don't do anything if between Begin/EndBatch...
     // EndBatch() will do all this on the last nested one anyway.
@@ -4769,4 +4787,7 @@
 bool wxGrid::SetCurrentCell( const wxGridCellCoords& coords )
 {
+    if ( IsBeingDeleted() )
+        return false;
+
     if ( SendEvent(wxEVT_GRID_SELECT_CELL, coords) == -1 )
     {
@@ -4825,4 +4846,7 @@
                                  int bottomRow, int rightCol)
 {
+    if ( IsBeingDeleted() )
+        return;
+
     MakeCellVisible(m_selectedBlockCorner);
     m_selectedBlockCorner = wxGridCellCoords(bottomRow, rightCol);
@@ -5013,4 +5037,7 @@
 void wxGrid::DrawGridCellArea( wxDC& dc, const wxGridCellCoordsArray& cells )
 {
+    if ( IsBeingDeleted() )
+        return;
+
     if ( !m_numRows || !m_numCols )
         return;
@@ -5129,4 +5156,7 @@
 void wxGrid::DrawGridSpace( wxDC& dc )
 {
+  if ( IsBeingDeleted() )
+      return;
+
   int cw, ch;
   m_gridWin->GetClientSize( &cw, &ch );
@@ -5160,4 +5190,7 @@
 void wxGrid::DrawCell( wxDC& dc, const wxGridCellCoords& coords )
 {
+    if ( IsBeingDeleted() )
+        return;
+
     int row = coords.GetRow();
     int col = coords.GetCol();
@@ -5200,4 +5233,7 @@
 void wxGrid::DrawCellHighlight( wxDC& dc, const wxGridCellAttr *attr )
 {
+    if ( IsBeingDeleted() )
+        return;
+
     // don't show highlight when the grid doesn't have focus
     if ( !HasFocus() )
@@ -5258,4 +5294,7 @@
 void wxGrid::DrawCellBorder( wxDC& dc, const wxGridCellCoords& coords )
 {
+    if ( IsBeingDeleted() )
+        return;
+
     int row = coords.GetRow();
     int col = coords.GetCol();
@@ -5279,4 +5318,7 @@
 void wxGrid::DrawHighlight(wxDC& dc, const wxGridCellCoordsArray& cells)
 {
+    if ( IsBeingDeleted() )
+        return;
+
     // This if block was previously in wxGrid::OnPaint but that doesn't
     // seem to get called under wxGTK - MB
@@ -5335,4 +5377,7 @@
 void wxGrid::DrawAllGridLines( wxDC& dc, const wxRegion & WXUNUSED(reg) )
 {
+    if ( IsBeingDeleted() )
+        return;
+
     if ( !m_gridLinesEnabled )
          return;
@@ -5443,4 +5488,7 @@
 void wxGrid::DrawRowLabels( wxDC& dc, const wxArrayInt& rows)
 {
+    if ( IsBeingDeleted() )
+        return;
+
     if ( !m_numRows )
         return;
@@ -5455,4 +5503,7 @@
 void wxGrid::DrawRowLabel( wxDC& dc, int row )
 {
+    if ( IsBeingDeleted() )
+        return;
+
     if ( GetRowHeight(row) <= 0 || m_rowLabelWidth <= 0 )
         return;
@@ -5481,4 +5532,7 @@
 void wxGrid::UseNativeColHeader(bool native)
 {
+    if ( IsBeingDeleted() )
+        return;
+
     if ( native == m_useNativeHeader )
         return;
@@ -5496,4 +5550,7 @@
 void wxGrid::SetUseNativeColLabels( bool native )
 {
+    if ( IsBeingDeleted() )
+        return;
+
     wxASSERT_MSG( !m_useNativeHeader,
                   "doesn't make sense when using native header" );
@@ -5512,4 +5569,7 @@
 void wxGrid::DrawColLabels( wxDC& dc,const wxArrayInt& cols )
 {
+    if ( IsBeingDeleted() )
+        return;
+
     if ( !m_numCols )
         return;
@@ -5524,4 +5584,7 @@
 void wxGrid::DrawCornerLabel(wxDC& dc)
 {
+    if ( IsBeingDeleted() )
+        return;
+
     wxRect rect(wxSize(m_rowLabelWidth, m_colLabelHeight));
 
@@ -5550,4 +5613,7 @@
 void wxGrid::DrawColLabel(wxDC& dc, int col)
 {
+    if ( IsBeingDeleted() )
+        return;
+
     if ( GetColWidth(col) <= 0 || m_colLabelHeight <= 0 )
         return;
@@ -5605,4 +5671,7 @@
                                 int textOrientation ) const
 {
+    if ( IsBeingDeleted() )
+        return;
+
     wxArrayString lines;
 
@@ -5619,4 +5688,7 @@
                                int textOrientation) const
 {
+    if ( IsBeingDeleted() )
+        return;
+
     if ( lines.empty() )
         return;
@@ -5779,4 +5851,7 @@
         if ( !m_batchCount )
         {
+            if ( IsBeingDeleted() )
+                return;
+
             CalcDimensions();
             m_rowLabelWin->Refresh();
@@ -6336,4 +6411,7 @@
 void wxGrid::MakeCellVisible( int row, int col )
 {
+    if ( IsBeingDeleted() )
+        return;
+
     int i;
     int xpos = -1, ypos = -1;
@@ -6951,4 +7029,7 @@
 void wxGrid::RedrawGridLines()
 {
+    if ( IsBeingDeleted() )
+        return;
+
     // the lines will be redrawn when the window is thawn
     if ( GetBatchCount() )
@@ -8086,4 +8167,7 @@
 void wxGrid::AutoSize()
 {
+    if ( IsBeingDeleted() )
+        return;
+
     wxGridUpdateLocker locker(this);
 
