Index: slider.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/samples/widgets/slider.cpp,v
retrieving revision 1.10
diff -r1.10 slider.cpp
38a39,42
> #if wxUSE_TOOLTIPS
>     #include "wx/tooltip.h"
> #endif
> 
61c65,66
<     SliderPage_OtherSide,
---
>     SliderPage_RadioSides,
>     SliderPage_BothSides,
64a70,78
> // sides radiobox values
> enum
> {
>     StaticSides_Top,
>     StaticSides_Bottom,
>     StaticSides_Left,
>     StaticSides_Right
> };
> 
87d100
<     void OnUpdateUIOtherSide(wxUpdateUIEvent& event);
90a104,105
>     void OnUpdateUIRadioSides(wxUpdateUIEvent& event);
>     void OnUpdateUIBothSides(wxUpdateUIEvent& event);
117d131
<                *m_chkOtherSide,
119c133,136
<                *m_chkTicks;
---
>                *m_chkTicks,
>                *m_chkBothSides;
> 
>     wxRadioBox *m_radioSides;
146,147d162
<     EVT_UPDATE_UI(SliderPage_OtherSide, SliderWidgetsPage::OnUpdateUIOtherSide)
< 
151a167,168
>     EVT_UPDATE_UI(SliderPage_RadioSides, SliderWidgetsPage::OnUpdateUIRadioSides)
>     EVT_UPDATE_UI(SliderPage_BothSides, SliderWidgetsPage::OnUpdateUIBothSides)
182c199,201
<     m_chkOtherSide = (wxCheckBox *)NULL;
---
>     m_chkBothSides = (wxCheckBox *)NULL;
> 
>     m_radioSides = (wxRadioBox *)NULL;
196,201c215,231
<     m_chkOtherSide = CreateCheckBoxAndAddToSizer
<                      (
<                         sizerLeft,
<                         _T("On &other side"),
<                         SliderPage_OtherSide
<                      );
---
>     static const wxString sides[] =
>     {
>         _T("top"),
>         _T("bottom"),
>         _T("left"),
>         _T("right"),
>     };
>     m_radioSides = new wxRadioBox(this, SliderPage_RadioSides, _T("&Ticks/Labels"),
>                                  wxDefaultPosition, wxDefaultSize,
>                                  WXSIZEOF(sides), sides,
>                                  1, wxRA_SPECIFY_COLS);
>     sizerLeft->Add(m_radioSides, 0, wxGROW | wxALL, 5);
>     m_chkBothSides = CreateCheckBoxAndAddToSizer
>                      (sizerLeft, _T("&Both sides"), SliderPage_BothSides);
> #if wxUSE_TOOLTIPS
>     m_chkBothSides->SetToolTip( _T("\"Both sides\" is only supported \nin Win95 and Universal") );
> #endif // wxUSE_TOOLTIPS
250c280
<     sizerRight->SetMinSize(150, 0);
---
>     sizerRight->SetMinSize(150, 40);
278,279d307
<     m_chkLabels->SetValue(TRUE);
<     m_chkTicks->SetValue(FALSE);
281c309,313
<     m_chkOtherSide->SetValue(FALSE);
---
>     m_chkTicks->SetValue(TRUE);
>     m_chkLabels->SetValue(TRUE);
>     m_chkBothSides->SetValue(FALSE);
> 
>     m_radioSides->SetSelection(StaticSides_Top);
297,301d328
< 
<         if ( m_chkOtherSide->GetValue() )
<             flags |= isVert ? wxSL_RIGHT : wxSL_BOTTOM;
<         else
<             flags |= isVert ? wxSL_LEFT : wxSL_TOP;
308a336,359
>     switch ( m_radioSides->GetSelection() )
>     {
>         case StaticSides_Top:
>             flags |= wxSL_TOP;
>             break;
>         case StaticSides_Left:
>             flags |= wxSL_LEFT;
>             break;
>         case StaticSides_Bottom:
>             flags |= wxSL_BOTTOM;
>             break;
>         case StaticSides_Right:
>             flags |= wxSL_RIGHT;
>             break;
>         default:
>             wxFAIL_MSG(_T("unexpected radiobox selection"));
>             // fall through
>     }
> 
>     if ( m_chkBothSides->GetValue() )
>     {
>         flags |= wxSL_BOTH;
>     }
> 
439a491
>                   !m_chkTicks->GetValue() ||
441,442c493
<                   m_chkOtherSide->GetValue() ||
<                   m_chkTicks->GetValue() );
---
>                   m_chkBothSides->GetValue() );
455c506,511
< void SliderWidgetsPage::OnUpdateUIOtherSide(wxUpdateUIEvent& event)
---
> void SliderWidgetsPage::OnUpdateUIRadioSides(wxUpdateUIEvent& event)
> {
>     event.Enable( m_chkLabels->GetValue() || m_chkTicks->GetValue() );
> }
> 
> void SliderWidgetsPage::OnUpdateUIBothSides(wxUpdateUIEvent& event)
457c513,517
<     event.Enable( m_chkLabels->GetValue() );
---
> #if defined(__WIN95__) || defined(__WXUNIVERSAL__)
>     event.Enable( m_chkTicks->GetValue() );
> #else
>     event.Enable( FALSE );
> #endif // defined(__WIN95__) || defined(__WXUNIVERSAL__)

 	  	 
