Index: mutex.tex
===================================================================
RCS file: /home/wxcvs/wxWindows/docs/latex/wx/mutex.tex,v
retrieving revision 1.7 diff -b -u -2 -r1.7 mutex.tex
--- mutex.tex   8 Apr 2001 22:49:09 -0000   1.7
+++ mutex.tex   10 Aug 2002 02:59:23 -0000 @@ -89,10 +89,4 @@
 Destroys the wxMutex object.

-\membersection{wxMutex::IsLocked}\label{wxmutexislocked} -
-\constfunc{bool}{IsLocked}{\void} - -Returns TRUE if the mutex
is locked, FALSE otherwise. -
 \membersection{wxMutex::Lock}\label{wxmutexlock}

@@ -146,3 +140,2 @@
 \twocolitem{{\bf wxMUTEX\_UNLOCKED}}{The calling thread tries to unlock an unlocked mutex.}
 \end{twocollist}


Index: semaphor.tex
===================================================================
RCS file: /home/wxcvs/wxWindows/docs/latex/wx/semaphor.tex,v
retrieving revision 1.3
diff -b -u -2 -r1.3 semaphor.tex
--- semaphor.tex    7 Jun 2002 20:15:24 -0000   1.3
+++ semaphor.tex    11 Aug 2002 00:53:18 -0000
@@ -58,27 +58,77 @@
 \membersection{wxSemaphore::Post}\label{wxsemaphorepost}

-\func{void}{Post}{\void}
+\func{wxSemaError }{Post}{\void}
+
+Increments the semaphore count and signals one of the waiting
+threads in an atomic way. Returns wxSEMA_OVERFLOW if the count
+would increase the counter past the maximum.
+
+\wxheading{Return value}
+
+One of:
+
+\twocolwidtha{7cm}
+\begin{twocollist}\itemsep=0pt
+\twocolitem{{\bf wxSEMA\_NO\_ERROR}}{There was no error.}
+\twocolitem{{\bf wxSEMA\_INVALID}}{Semaphore hasn't been initialized successfully.}
+\twocolitem{{\bf wxSEMA\_OVERFLOW}}{Post() would increase counter past the max.}
+\twocolitem{{\bf wxSEMA\_MISC\_ERROR}}{Miscellaneous error.}
+\end{twocollist}

-Increments the semaphore count and signals one of the waiting threads in an
-atomic way.

 \membersection{wxSemaphore::TryWait}\label{wxsemaphoretrywait}

-\func{bool}{TryWait}{\void}
+\func{wxSemaError }{TryWait}{\void}
+
+Same as \helpref{Wait()}{wxsemaphorewait}, but returns immediately.
+
+\wxheading{Return value}
+
+One of:
+
+\twocolwidtha{7cm}
+\begin{twocollist}\itemsep=0pt
+\twocolitem{{\bf wxSEMA\_NO\_ERROR}}{There was no error.}
+\twocolitem{{\bf wxSEMA\_INVALID}}{Semaphore hasn't been initialized successfully.}
+\twocolitem{{\bf wxSEMA\_BUSY}}{Returned by TryWait() if Wait() would block, i.e. the count is zero.}
+\twocolitem{{\bf wxSEMA\_MISC\_ERROR}}{Miscellaneous error.}
+\end{twocollist}

-Same as \helpref{Wait()}{wxsemaphorewait}, but does not block, returns
-{\tt TRUE} if the semaphore was successfully acquired and {\tt FALSE} if the
-count is zero and it couldn't be done.

 \membersection{wxSemaphore::Wait}\label{wxsemaphorewait}

-\func{void}{Wait}{\void}
+\func{wxSemaError }{Wait}{\void}

 Wait indefinitely until the semaphore count becomes strictly positive
 and then decrement it and return.

-\func{bool}{Wait}{\param{unsigned long }{timeout\_millis}}
+\wxheading{Return value}
+
+One of:
+
+\twocolwidtha{7cm}
+\begin{twocollist}\itemsep=0pt
+\twocolitem{{\bf wxSEMA\_NO\_ERROR}}{There was no error.}
+\twocolitem{{\bf wxSEMA\_INVALID}}{Semaphore hasn't been initialized successfully.}
+\twocolitem{{\bf wxSEMA\_MISC\_ERROR}}{Miscellaneous error.}
+\end{twocollist}
+
+\membersection{wxSemaphore::WaitTimeout}\label{wxsemaphorewaittimeout}
+
+\func{wxSemaError }{WaitTimeout}{\param{unsigned
+long}{timeout\_millis}}
+
+Same as \helpref{Wait()}{wxsemaphorewait}, but with a timeout
+limit.
+
+\wxheading{Return value}

-Same as the version above, but with a timeout limit: returns {\tt TRUE} if the
-semaphore was acquired and {\tt FALSE} if the timeout has elapsed
+One of:

+\twocolwidtha{7cm}
+\begin{twocollist}\itemsep=0pt
+\twocolitem{{\bf wxSEMA\_NO\_ERROR}}{There was no error.}
+\twocolitem{{\bf wxSEMA\_INVALID}}{Semaphore hasn't been initialized successfully.}
+\twocolitem{{\bf wxSEMA\_TIMEOUT}}{Timeout occurred without receiving semaphore.}
+\twocolitem{{\bf wxSEMA\_MISC\_ERROR}}{Miscellaneous error.}
+\end{twocollist}

 	  	 
