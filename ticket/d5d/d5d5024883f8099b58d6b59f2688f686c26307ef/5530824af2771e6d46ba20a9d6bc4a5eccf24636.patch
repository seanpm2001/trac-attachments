--- wxWidgets.orig/docs/latex/wx/tlw.tex
+++ wxWidgets/docs/latex/wx/tlw.tex
@@ -40,6 +40,13 @@
 \helpref{wxTopLevelWindow::SetTransparent}{wxtoplevelwindowsettransparent}
 
 
+\membersection{wxTopLevelWindow::FindTopLevelWindowById}\label{wxtoplevelwindowfindtoplevelwindowbyid}
+
+\func{static wxTopLevelWindow*}{FindTopLevelWindowById}{\param{wxWindowID}{ id}}
+
+Search top level window list for the first window of the 
+specified id.  Does not recurse into child windows.
+
 \membersection{wxTopLevelWindow::EnableCloseButton}\label{wxtoplevelenableclosebutton}
 
 \func{bool}{EnableCloseButton}{\param{bool}{ enable = true}}
--- wxWidgets.orig/include/wx/toplevel.h
+++ wxWidgets/include/wx/toplevel.h
@@ -248,6 +248,10 @@
     // do the window-specific processing after processing the update event
     virtual void DoUpdateWindowUI(wxUpdateUIEvent& event) ;
 
+    // search top level window list for the first window of the
+    // specified id (does not recurse into child windows)
+    static wxTopLevelWindowBase* FindTopLevelWindowById( wxWindowID id );
+
 protected:
 
     // a different API for SetSizeHints
--- wxWidgets.orig/src/common/toplvcmn.cpp
+++ wxWidgets/src/common/toplvcmn.cpp
@@ -407,6 +407,23 @@
     }
 }
 
+// search top level window list for the first window of the
+// specified id (does not recurse into child windows)
+/*static*/ wxTopLevelWindowBase* wxTopLevelWindowBase::FindTopLevelWindowById( wxWindowID id )
+{
+    wxWindowList::compatibility_iterator node = wxTopLevelWindows.GetFirst();
+    while (node)
+    {
+        wxTopLevelWindow* topLevel = (wxTopLevelWindow*)node->GetData();
+        if ( topLevel->GetId() == id )
+        {
+            return topLevel;
+        }
+        node = node->GetNext();
+    }
+    return 0;
+}
+
 void wxTopLevelWindowBase::RequestUserAttention(int WXUNUSED(flags))
 {
     // it's probably better than do nothing, isn't it?

 	  	 
