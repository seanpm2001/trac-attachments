--- /cygdrive/c/Dev/os_x_beta/SDK/wxWidgets/wxWidgets-2.9.0/samples/minimal/minimal.cpp	2009-09-04 06:52:31.000000000 +0200
+++ minimal.cpp	2010-05-21 13:51:12.453125000 +0200
@@ -60,6 +60,7 @@
 // Define a new frame type: this is going to be our main frame
 class MyFrame : public wxFrame
 {
+	static bool mIsTimerCreated;
 public:
     // ctor(s)
     MyFrame(const wxString& title);
@@ -67,8 +68,13 @@
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+	void OnCreateFrame(wxCommandEvent& event);
+	void OnAttentionTimer(wxTimerEvent& event);
 
 private:
+
+	wxTimer* mAttentionTimer;
+
     // any class wishing to process wxWidgets events must use this macro
     DECLARE_EVENT_TABLE()
 };
@@ -86,7 +92,9 @@
     // it is important for the id corresponding to the "About" command to have
     // this standard value as otherwise it won't be handled properly under Mac
     // (where it is special and put into the "Apple" menu)
-    Minimal_About = wxID_ABOUT
+    Minimal_About = wxID_ABOUT,
+	Minimal_CreateFrame = wxID_LOWEST,
+	Minimal_AttentionTimer
 };
 
 // ----------------------------------------------------------------------------
@@ -99,6 +107,8 @@
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+	EVT_MENU(Minimal_CreateFrame, MyFrame::OnCreateFrame )
+	EVT_TIMER(Minimal_AttentionTimer, MyFrame::OnAttentionTimer )
 END_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -137,13 +147,16 @@
     return true;
 }
 
+static int TIMER_ID = Minimal_AttentionTimer;
+bool MyFrame::mIsTimerCreated = false;
+
 // ----------------------------------------------------------------------------
 // main frame
 // ----------------------------------------------------------------------------
 
 // frame constructor
 MyFrame::MyFrame(const wxString& title)
-       : wxFrame(NULL, wxID_ANY, title)
+       : wxFrame(NULL, wxID_ANY, title), mAttentionTimer(0)
 {
     // set the frame icon
     SetIcon(wxICON(sample));
@@ -157,6 +170,7 @@
     helpMenu->Append(Minimal_About, "&About...\tF1", "Show about dialog");
 
     fileMenu->Append(Minimal_Quit, "E&xit\tAlt-X", "Quit this program");
+	fileMenu->Append(Minimal_CreateFrame, "Create Frame\tCtrl+N", "Create new frame");
 
     // now append the freshly created menu to the menu bar...
     wxMenuBar *menuBar = new wxMenuBar();
@@ -172,6 +186,16 @@
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+
+	// Create the timer
+	if ( !mIsTimerCreated )
+	{
+		mAttentionTimer = new wxTimer(this, TIMER_ID);
+		//this->Connect( TIMER_ID, wxTimerEventHandler( MyFrame::OnAttentionTimer ), NULL, this );
+		mAttentionTimer->Start( 2000, false );
+		mIsTimerCreated = true;
+	}
+	
 }
 
 
@@ -180,6 +204,10 @@
 void MyFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
 {
     // true is to force the frame to close
+	if ( mAttentionTimer )
+	{
+		mAttentionTimer->Stop();
+	}
     Close(true);
 }
 
@@ -198,3 +226,18 @@
                  wxOK | wxICON_INFORMATION,
                  this);
 }
+
+void MyFrame::OnCreateFrame(wxCommandEvent& WXUNUSED(event))
+{
+	// create the main application window
+    MyFrame *frame = new MyFrame("Minimal wxWidgets App");
+
+    // and show it (the frames, unlike simple controls, are not shown when
+    // created initially)
+    frame->Show(true);
+}
+
+void MyFrame::OnAttentionTimer(wxTimerEvent& WXUNUSED(event))
+{
+	RequestUserAttention( wxUSER_ATTENTION_ERROR );
+}
