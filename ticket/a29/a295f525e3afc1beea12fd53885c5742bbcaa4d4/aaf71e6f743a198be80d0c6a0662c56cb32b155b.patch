? compile
? greg_install.sh
? mimelog.txt
? wxBufferedDC_rect.patch
? wxGLCanvasScope_MSW_only.patch
? wxWindowBase_Associate.patch
? wxWindowBase_Associate_MSW.patch
? wxWindowBase_Associate_MSW_Mac.patch
? wxbase
? include/wx/threadloog.txt
? include/wx/thrimpl.txt
? samples/console/Makefile
? samples/console/console
? samples/opengl/penguin/Makefile
? samples/opengl/penguin/penguin
? samples/splitter/a.out
? samples/splitter/splitter.log
? samples/splitter/test_splitter
? samples/splitter/test_splitter.cpp
? src/common/memlog.txt
? src/common/memory.cpp.cvs
? src/common/memory.cpp.gah
? src/common/objectlog.txt
? src/generic/splitter.log
? src/generic/splitter.recent.cpp
? src/gtk/memlog.txt
? src/gtk/statbox.cpp.log
? src/mac/carbon/window.cpp,bak
Index: include/wx/window.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/window.h,v
retrieving revision 1.156
diff -b -u -2 -r1.156 window.h
--- include/wx/window.h	2004/07/04 11:19:44	1.156
+++ include/wx/window.h	2004/07/26 02:56:08
@@ -1006,4 +1006,8 @@
         // platform-specific APIs
     virtual WXWidget GetHandle() const = 0;
+        // associate the window with a new native handle
+    virtual void AssociateHandle(WXWidget WXUNUSED(handle)) {}
+        // dissociate the current native handle from the window
+    virtual void DissociateHandle() {}
 
 #if wxUSE_PALETTE
Index: include/wx/msw/window.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/msw/window.h,v
retrieving revision 1.116
diff -b -u -2 -r1.116 window.h
--- include/wx/msw/window.h	2004/07/25 12:30:08	1.116
+++ include/wx/msw/window.h	2004/07/26 02:56:10
@@ -174,4 +174,8 @@
     void UnsubclassWin();
 
+    // Window association (part of wxWindowBase)
+    void AssociateHandle(WXWidget handle);
+    void DissociateHandle();
+
     WXFARPROC MSWGetOldWndProc() const { return m_oldWndProc; }
     void MSWSetOldWndProc(WXFARPROC proc) { m_oldWndProc = proc; }
Index: src/msw/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/window.cpp,v
retrieving revision 1.504
diff -b -u -2 -r1.504 window.cpp
--- src/msw/window.cpp	2004/07/22 20:23:46	1.504
+++ src/msw/window.cpp	2004/07/26 02:56:37
@@ -1004,5 +1004,5 @@
     if ( hwnd )
     {
-        m_hWnd = 0;
+      SetHWND(0);
 
         wxCHECK_RET( ::IsWindow(hwnd), wxT("invalid HWND in UnsubclassWin") );
@@ -1019,4 +1019,27 @@
     }
 }
+
+void wxWindowMSW::AssociateHandle(WXWidget handle) 
+{
+    if ( m_hWnd )
+    {
+      if ( !::DestroyWindow(GetHwnd()) )
+        wxLogLastError(wxT("DestroyWindow"));
+    }
+    
+    SetHWND((WXHWND) handle);
+    SubclassWin((WXHWND) handle);
+    if (m_parent)
+    {
+        m_parent->AddChild(this);
+    }
+}
+
+void wxWindowMSW::UnassociateHandle()
+{ 
+    UnsubclassWin(); 
+    //UnsubclassWin() calls SetHWND(0) for us
+}
+
 
 bool wxCheckWindowWndProc(WXHWND hWnd, WXFARPROC wndProc)

 	  	 
