diff --git a/samples/minimal/minimal.cpp b/samples/minimal/minimal.cpp
index 135595c..eb07dba 100644
--- a/samples/minimal/minimal.cpp
+++ b/samples/minimal/minimal.cpp
@@ -23,6 +23,7 @@
 #ifdef __BORLANDC__
     #pragma hdrstop
 #endif
+#include "wx/glcanvas.h"
 
 // for all others, include the necessary headers (this file is usually all you
 // need because it includes almost all "standard" wxWidgets headers)
@@ -44,6 +45,16 @@
 // private classes
 // ----------------------------------------------------------------------------
 
+class MyCanvas : public wxGLCanvas
+{
+public:
+    void OnKey(wxKeyEvent &WXUNUSED(event));
+    void OnDraw(wxDC &dc);
+    MyCanvas(wxWindow *parent) : wxGLCanvas( parent, -1, wxDefaultPosition, wxDefaultSize ) {};
+private:
+    DECLARE_EVENT_TABLE()
+};
+
 // Define a new application type, each program should derive a class from wxApp
 class MyApp : public wxApp
 {
@@ -101,6 +112,10 @@ wxBEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
 wxEND_EVENT_TABLE()
 
+BEGIN_EVENT_TABLE(MyCanvas, wxGLCanvas)
+    EVT_CHAR(MyCanvas::OnKey)
+END_EVENT_TABLE()
+
 // Create a new application object: this macro will allow wxWidgets to create
 // the application object during program execution (it's better than using a
 // static object for many reasons) and also implements the accessor function
@@ -126,7 +141,7 @@ bool MyApp::OnInit()
 
     // create the main application window
     MyFrame *frame = new MyFrame("Minimal wxWidgets App");
-
+    MyCanvas *canvas = new MyCanvas( frame );
     // and show it (the frames, unlike simple controls, are not shown when
     // created initially)
     frame->Show(true);
@@ -137,6 +152,21 @@ bool MyApp::OnInit()
     return true;
 }
 
+void MyCanvas::OnKey(wxKeyEvent &WXUNUSED(event))
+{
+    wxClientDC dc( this );
+    OnDraw( dc );
+}
+
+void MyCanvas::OnDraw(wxDC &dc)
+{
+    dc.SetBrush( *wxWHITE_BRUSH );
+    dc.SetPen( *wxBLACK_PEN );
+    dc.DrawLine( 0, 0, 99, 99 );
+    dc.DrawLine( 99, 0, 0, 99 );
+    dc.DrawRectangle( 33, 33, 33, 33 );
+}
+
 // ----------------------------------------------------------------------------
 // main frame
 // ----------------------------------------------------------------------------
