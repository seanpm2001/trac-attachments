Index: E:/Dev/wxWindows/docs/latex/wx/event.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/docs/latex/wx/event.tex,v
retrieving revision 1.7
diff -u -2 -r1.7 event.tex
--- E:/Dev/wxWindows/docs/latex/wx/event.tex	2003/01/18 00:16:31	1.7
+++ E:/Dev/wxWindows/docs/latex/wx/event.tex	2003/06/06 21:06:20
@@ -45,4 +45,14 @@
 Identifier for the window.
 
+\membersection{wxEvent::m\_propagationLevel}
+
+\member{int}{m\_propagationLevel}
+
+Indicates how many levels the event can propagate.
+
+The initial value is either set to wxNO\_EVENT\_PROPAGATION, wxMAX\_EVENT\_PROPAGATION 
+or a custom number indicating the max amount of levels to propagate. 
+Note: for every level the event propagates m\_propagationLevel is decremented by one.
+
 \membersection{wxEvent::m\_skipped}
 
@@ -93,5 +103,5 @@
 \membersection{wxEvent::GetId}
 
-\func{int}{GetId}{\void}
+\constfunc{int}{GetId}{\void}
 
 Returns the identifier associated with this event, such as a button command id.
@@ -99,5 +109,5 @@
 \membersection{wxEvent::GetSkipped}
 
-\func{bool}{GetSkipped}{\void}
+\constfunc{bool}{GetSkipped}{\void}
 
 Returns true if the event handler should be skipped, false otherwise.
@@ -109,4 +119,12 @@
 Gets the timestamp for the event.
 
+\membersection{wxEvent::IsCommandEvent}\label{wxeventiscommandevent}
+
+\constfunc{bool}{IsCommandEvent}{\void}
+
+Returns true if the event is or is derived from
+\helpref{wxCommandEvent}{wxcommandevent} else it returns false.
+Note: Exists only for optimization purposes.
+
 \membersection{wxEvent::SetEventObject}
 
@@ -135,4 +153,10 @@
 Sets the originating object.
 
+\membersection{wxEvent::ShouldPropagate}\label{wxeventshouldpropagate}
+
+\constfunc{bool}{ShouldPropagate}{\void}
+
+Test if this event should be propagated or not.
+
 \membersection{wxEvent::Skip}\label{wxeventskip}
 
@@ -143,2 +167,7 @@
 instead.
 
+\membersection{wxEvent::StopPropagation}
+
+\func{void}{StopPropagation}{\void}
+
+Stop the event from propagating to its parent window.
Index: E:/Dev/wxWindows/docs/latex/wx/tevent.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/docs/latex/wx/tevent.tex,v
retrieving revision 1.16
diff -u -2 -r1.16 tevent.tex
--- E:/Dev/wxWindows/docs/latex/wx/tevent.tex	2003/02/19 18:54:07	1.16
+++ E:/Dev/wxWindows/docs/latex/wx/tevent.tex	2003/06/06 21:06:22
@@ -143,6 +143,7 @@
 \item The search is applied down the entire chain of event handlers (usually the chain has a length
 of one). If this succeeds, the function exits.
-\item If the object is a wxWindow and the event is a wxCommandEvent, {\bf ProcessEvent} is
-recursively applied to the parent window's event handler. If this returns true, the function exits.
+\item If the object is a wxWindow and the event is set to set to propagate (in the library only
+wxCommandEvent based events are set to propagate), {\bf ProcessEvent} is recursively applied
+to the parent window's event handler. If this returns true, the function exits.
 \item Finally, {\bf ProcessEvent} is called on the wxApp object.
 \end{enumerate}
@@ -150,9 +151,10 @@
 {\bf Pay close attention to Step 5.}  People often overlook or get
 confused by this powerful feature of the wxWindows event processing
-system.  To put it a different way, events derived either directly or
-indirectly from wxCommandEvent will travel up the containment
-hierarchy from child to parent until an event handler is found that
-doesn't call event.Skip().  Events not derived from wxCommandEvent are
-sent only to the window they occurred in and then stop.
+system.  To put it a different way, events set to propagate 
+(\helpref{See: wxEvent::ShouldPropagate}{wxeventshouldpropagate})
+(Most likely derived either directly or indirectly from wxCommandEvent)
+will travel up the containment hierarchy from child to parent until the 
+max propagation level is reached or an event handler is found that
+doesn't call event.Skip().
 
 Finally, there is another additional complication (which, in fact, simplifies
@@ -183,10 +185,11 @@
 events. This is done in the document/view framework, for example, to allow event handlers
 to be defined in the document or view. To test for command events (which will probably
-be the only events you wish to redirect), you may use wxEvent::IsCommandEvent for
-efficiency, instead of using the slower run-time type system.
+be the only events you wish to redirect), you may use 
+\helpref{wxEvent::IsCommandEvent}{wxeventiscommandevent} for efficiency, 
+instead of using the slower run-time type system.
 
 As mentioned above, only command events are recursively applied to the parents event
-handler. As this quite often causes confusion for users, here is a list of system
-events which will NOT get sent to the parent's event handler:
+handler in the libary itself. As this quite often causes confusion for users,
+here is a list of system events which will NOT get sent to the parent's event handler:
 
 \begin{twocollist}\itemsep=0pt

 	  	 
