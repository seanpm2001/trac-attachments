diff --git a/src/common/fontcmn.cpp b/src/common/fontcmn.cpp
index b850783..ed14f6e 100644
--- a/src/common/fontcmn.cpp
+++ b/src/common/fontcmn.cpp
@@ -51,16 +51,17 @@ extern const char *wxDumpFont(const wxFont *font)
 {
     static char buf[256];
 
-    const wxFontWeight weight = font->GetWeight();
-
+//    const wxFontWeight weight = font->GetWeight();
+    const wxString weightStr = font->GetWeightString();
     wxString s;
     s.Printf(wxS("%s-%s-%s-%d-%d"),
              font->GetFaceName(),
-             weight == wxFONTWEIGHT_NORMAL
+             weightStr,
+/*             weight == wxFONTWEIGHT_NORMAL
                 ? wxT("normal")
                 : weight == wxFONTWEIGHT_BOLD
                     ? wxT("bold")
-                    : wxT("light"),
+                    : wxT("light"),*/
              font->GetStyle() == wxFONTSTYLE_NORMAL
                 ? wxT("regular")
                 : wxT("italic"),
@@ -453,9 +454,15 @@ wxString wxFontBase::GetWeightString() const
 
     switch ( GetWeight() )
     {
+       case wxFONTWEIGHT_THIN:     return "wxFONTWEIGHT_THIN";
+	case wxFONTWEIGHT_EXTRALIGHT: return "wxFONTWEIGHT_EXTRALIGHT";
+	case wxFONTWEIGHT_LIGHT:    return "wxFONTWEIGHT_LIGHT";
         case wxFONTWEIGHT_NORMAL:   return "wxFONTWEIGHT_NORMAL";
+	case wxFONTWEIGHT_MEDIUM:   return "wxFONTWEIGHT_MEDIUM";
+	case wxFONTWEIGHT_SEMIBOLD: return "wxFONTWEIGHT_SEMIBOLD";
         case wxFONTWEIGHT_BOLD:     return "wxFONTWEIGHT_BOLD";
-        case wxFONTWEIGHT_LIGHT:    return "wxFONTWEIGHT_LIGHT";
+	case wxFONTWEIGHT_EXTRABOLD: return "wxFONTWEIGHT_EXTRABOLD";
+	case wxFONTWEIGHT_HEAVY:    return "wxFONTWEIGHT_HEAVY";
         default:                    return "wxFONTWEIGHT_DEFAULT";
     }
 }
@@ -807,10 +814,14 @@ wxString wxNativeFontInfo::ToUserString() const
 
     switch ( GetWeight() )
     {
-        default:
-            wxFAIL_MSG( wxT("unknown font weight") );
-            wxFALLTHROUGH;
-
+        case wxFONTWEIGHT_THIN:
+	    desc << _(" thin");
+	    break;
+
+	case wxFONTWEIGHT_EXTRALIGHT:
+	    desc << _(" extralight");
+	    break;
+	    
         case wxFONTWEIGHT_NORMAL:
             break;
 
@@ -818,9 +829,29 @@ wxString wxNativeFontInfo::ToUserString() const
             desc << _(" light");
             break;
 
+	case wxFONTWEIGHT_MEDIUM:
+	    desc << _(" medium");
+	    break;
+	    
+	case wxFONTWEIGHT_SEMIBOLD:
+	    desc << _(" semi-bold");
+	    break;
+	    
         case wxFONTWEIGHT_BOLD:
             desc << _(" bold");
             break;
+	    
+	case wxFONTWEIGHT_EXTRABOLD:
+	    desc << _(" extra-bold");
+	    break;
+	    
+	case wxFONTWEIGHT_HEAVY:
+	    desc << _(" heavy");
+	    break;
+	    
+        default:
+            wxFAIL_MSG( wxT("unknown font weight") );
+            wxFALLTHROUGH;
     }
 
     switch ( GetStyle() )
@@ -981,16 +1012,51 @@ bool wxNativeFontInfo::FromUserString(const wxString& s)
         {
             SetStrikethrough(true);
         }
+        else if ( token == wxT("thin") || token == _("thin") )
+	{
+	    SetWeight(wxFONTWEIGHT_THIN);
+	    weightfound = true;
+	}
+	else if ( token == wxT("extralight") || token == _("extralight") )
+	{
+	    SetWeight(wxFONTWEIGHT_EXTRALIGHT);
+	    weightfound = true;
+	}
         else if ( token == wxT("light") || token == _("light") )
         {
             SetWeight(wxFONTWEIGHT_LIGHT);
             weightfound = true;
         }
+        else if ( token == wxT("normal") || token == _("normal") )
+	{
+	    SetWeight(wxFONTWEIGHT_NORMAL);
+	    weightfound = true;
+	}
+	else if ( token == wxT("medium") || token == _T("medium") )
+	{
+	    SetWeight(wxFONTWEIGHT_MEDIUM);
+	    weightfound = true;
+	}
+	else if ( token == wxT("semi-bold") || token == _("semi-bold") )
+	{
+	    SetWeight(wxFONTWEIGHT_SEMIBOLD);
+	    weightfound = true;
+	}
         else if ( token == wxT("bold") || token == _("bold") )
         {
             SetWeight(wxFONTWEIGHT_BOLD);
             weightfound = true;
         }
+        else if ( token == wxT("extra-bold") || token == _("extra-bold") )
+	{
+	    SetWeight(wxFONTWEIGHT_EXTRABOLD);
+	    weightfound = true;
+	}
+	else if ( token == wxT("heavy") || token == _("heavy") )
+	{
+	    SetWeight(wxFONTWEIGHT_HEAVY);
+	    weightfound = true;
+	}
         else if ( token == wxT("italic") || token == _("italic") )
         {
             SetStyle(wxFONTSTYLE_ITALIC);
diff --git a/src/unix/fontutil.cpp b/src/unix/fontutil.cpp
index 22f6594..9bbb40d 100644
--- a/src/unix/fontutil.cpp
+++ b/src/unix/fontutil.cpp
@@ -129,12 +129,24 @@ wxFontWeight wxNativeFontInfo::GetWeight() const
     // wxFONTWEIGHT_NORMAL: 350 .. 599 - range of 250
     // wxFONTWEIGHT_BOLD:   600 .. 900 - range of 301 (600 is "semibold" already)
 
-    if (pango_weight >= 600)
-        return wxFONTWEIGHT_BOLD;
-
-    if (pango_weight < 350)
+    if (pango_weight == PANGO_WEIGHT_THIN)
+        return wxFONTWEIGHT_THIN;
+    if (pango_weight == PANGO_WEIGHT_ULTRALIGHT)
+        return wxFONTWEIGHT_EXTRALIGHT;
+    if (pango_weight == PANGO_WEIGHT_LIGHT)
         return wxFONTWEIGHT_LIGHT;
-
+    if (pango_weight == PANGO_WEIGHT_NORMAL)
+        return wxFONTWEIGHT_NORMAL;
+    if (pango_weight == PANGO_WEIGHT_MEDIUM)
+        return wxFONTWEIGHT_MEDIUM;
+    if (pango_weight == PANGO_WEIGHT_SEMIBOLD)
+        return wxFONTWEIGHT_SEMIBOLD;
+    if (pango_weight == PANGO_WEIGHT_BOLD)
+        return wxFONTWEIGHT_BOLD;
+    if (pango_weight == PANGO_WEIGHT_ULTRABOLD)
+        return wxFONTWEIGHT_EXTRABOLD;
+    if (pango_weight == PANGO_WEIGHT_HEAVY)
+        return wxFONTWEIGHT_HEAVY;
     return wxFONTWEIGHT_NORMAL;
 }
 
@@ -254,17 +266,36 @@ void wxNativeFontInfo::SetWeight(wxFontWeight weight)
 {
     switch (weight)
     {
+        case wxFONTWEIGHT_THIN:
+	    pango_font_description_set_weight(description, PANGO_WEIGHT_THIN);
+	    break;
+	case wxFONTWEIGHT_EXTRALIGHT:
+	    pango_font_description_set_weight(description, PANGO_WEIGHT_ULTRALIGHT);
+	    break;
+        case wxFONTWEIGHT_LIGHT:
+            pango_font_description_set_weight(description, PANGO_WEIGHT_LIGHT);
+            break;
+        case wxFONTWEIGHT_NORMAL:
+            pango_font_description_set_weight(description, PANGO_WEIGHT_NORMAL);
+	    break;
+        case wxFONTWEIGHT_MEDIUM:
+            pango_font_description_set_weight(description, PANGO_WEIGHT_MEDIUM);
+            break;
+        case wxFONTWEIGHT_SEMIBOLD:
+            pango_font_description_set_weight(description, PANGO_WEIGHT_SEMIBOLD);
+            break;
         case wxFONTWEIGHT_BOLD:
             pango_font_description_set_weight(description, PANGO_WEIGHT_BOLD);
             break;
-        case wxFONTWEIGHT_LIGHT:
-            pango_font_description_set_weight(description, PANGO_WEIGHT_LIGHT);
+        case wxFONTWEIGHT_EXTRABOLD:
+            pango_font_description_set_weight(description, PANGO_WEIGHT_ULTRABOLD);
+            break;
+        case wxFONTWEIGHT_HEAVY:
+            pango_font_description_set_weight(description, PANGO_WEIGHT_HEAVY);
             break;
         default:
             wxFAIL_MSG( "unknown font weight" );
             // fall through
-        case wxFONTWEIGHT_NORMAL:
-            pango_font_description_set_weight(description, PANGO_WEIGHT_NORMAL);
     }
 }
 
@@ -1243,12 +1274,17 @@ static wxNativeFont wxLoadQueryFont(int pointSize,
     int xweight;
     switch (weight)
     {
-         case wxFONTWEIGHT_BOLD:
+         case wxFONTWEIGHT_THIN:
+	     {
+	         xweight = MWLF_WEIGHT_THIN;
+		 break;
+	     }
+         case wxFONTWEIGHT_EXTRALIGHT:
              {
-                 xweight = MWLF_WEIGHT_BOLD;
+                 xweight = MWLF_WEIGHT_EXTRALIGHT;
                  break;
              }
-        case wxFONTWEIGHT_LIGHT:
+         case wxFONTWEIGHT_LIGHT:
              {
                  xweight = MWLF_WEIGHT_LIGHT;
                  break;
@@ -1258,6 +1294,31 @@ static wxNativeFont wxLoadQueryFont(int pointSize,
                  xweight = MWLF_WEIGHT_NORMAL;
                  break;
              }
+         case wxFONTWEIGHT_MEDIUM:
+             {
+                 xweight = MWLF_WEIGHT_MEDIUM;
+                 break;
+             }
+         case wxFONTWEIGHT_SEMIBOLD:
+             {
+                 xweight = MWLF_WEIGHT_DEMIBOLD;
+                 break;
+             }
+         case wxFONTWEIGHT_BOLD:
+             {
+                 xweight = MWLF_WEIGHT_BOLD;
+                 break;
+             }
+         case wxFONTWEIGHT_EXTRABOLD:
+             {
+                 xweight = MWLF_WEIGHT_EXTRABOLD;
+                 break;
+             }
+         case wxFONTWEIGHT_HEAVY:
+             {
+                 xweight = MWLF_WEIGHT_BLACK;
+                 break;
+             }
 
      default:
              {
