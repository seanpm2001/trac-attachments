Index: docs/latex/wx/function.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/function.tex,v
retrieving revision 1.173
diff -u -r1.173 function.tex
--- docs/latex/wx/function.tex	2004/05/04 08:25:44	1.173
+++ docs/latex/wx/function.tex	2004/05/04 12:30:24
@@ -230,7 +230,7 @@
 \helpref{wxUninitialize}{wxuninitialize}\\
 \helpref{wxUnix2DosFilename}{wxunix2dosfilename}\\
 \helpref{wxUnsetEnv}{wxunsetenv}\\
-\helpref{wxUsleep}{wxusleep}\\
+\helpref{wxMsleep}{wxmsleep}\\
 \helpref{wxVsnprintf}{wxvsnprintf}\\
 \helpref{wxWakeUpIdle}{wxwakeupidle}\\
 \helpref{wxWriteResource}{wxwriteresource}\\
@@ -3872,13 +3872,17 @@
 <wx/timer.h>
 
 
-\membersection{::wxUsleep}\label{wxusleep}
+\membersection{::wxMsleep}\label{wxmsleep}
 
-\func{void}{wxUsleep}{\param{unsigned long}{ milliseconds}}
+\func{void}{wxMsleep}{\param{unsigned long}{ milliseconds}}
 
 Sleeps for the specified number of milliseconds. Notice that usage of this
 function is encouraged instead of calling usleep(3) directly because the
 standard usleep() function is not MT safe.
+Note that this function used to be called wxUsleep, yet is using a milliseconds
+parameter!! wxUsleep will be reimplemented using a proper microseconds parameter
+once the original screwed-up wxUsleep has been forgotten about,
+some wx versions later.
 
 \wxheading{Include files}
 
Index: include/wx/utils.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/utils.h,v
retrieving revision 1.97
diff -u -r1.97 utils.h
--- include/wx/utils.h	2004/01/14 01:28:42	1.97
+++ include/wx/utils.h	2004/05/04 12:30:25
@@ -260,7 +260,7 @@
 WXDLLIMPEXP_BASE void wxSleep(int nSecs);
 
 // Sleep for a given amount of milliseconds
-WXDLLIMPEXP_BASE void wxUsleep(unsigned long milliseconds);
+WXDLLIMPEXP_BASE void wxMsleep(unsigned long milliseconds);
 
 // Get the process id of the current process
 WXDLLIMPEXP_BASE unsigned long wxGetProcessId();
Index: samples/console/console.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/console/console.cpp,v
retrieving revision 1.173
diff -u -r1.173 console.cpp
--- samples/console/console.cpp	2004/04/30 20:26:14	1.173
+++ samples/console/console.cpp	2004/05/04 12:30:28
@@ -5853,10 +5853,10 @@
     TestScopeGuard();
 #endif
 
-#ifdef TEST_USLEEP
+#ifdef TEST_MSLEEP
     wxPuts(_T("Sleeping for 3 seconds... z-z-z-z-z..."));
-    wxUsleep(3000);
-#endif // TEST_USLEEP
+    wxMsleep(3000);
+#endif // TEST_MSLEEP
 
 #ifdef TEST_VCARD
     TestVCardRead();
Index: samples/dialogs/dialogs.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/dialogs/dialogs.cpp,v
retrieving revision 1.103
diff -u -r1.103 dialogs.cpp
--- samples/dialogs/dialogs.cpp	2004/02/29 15:20:54	1.103
+++ samples/dialogs/dialogs.cpp	2004/05/04 12:30:29
@@ -750,7 +750,7 @@
 
     for ( int i = 0; i < 18; i++ )
     {
-        //wxUsleep(100);
+        //wxMsleep(100);
         wxTheApp->Yield();
     }
 
Index: src/mac/carbon/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/utils.cpp,v
retrieving revision 1.63
diff -u -r1.63 utils.cpp
--- src/mac/carbon/utils.cpp	2004/03/27 09:56:36	1.63
+++ src/mac/carbon/utils.cpp	2004/05/04 12:30:31
@@ -196,7 +196,10 @@
     return FreeMem() ;
 }
 
-void wxUsleep(unsigned long milliseconds)
+/* FIXME: re-implement a *PROPER* wxUsleep once the wxUsleep millisecond
+	  screwup is old enough - i.e. somewhere quite some time after wx 2.6 */
+
+void wxMsleep(unsigned long milliseconds)
 {
     clock_t start = clock() ;
     do
@@ -207,7 +210,7 @@
 
 void wxSleep(int nSecs)
 {
-    wxUsleep(1000*nSecs);
+    wxMsleep(1000*nSecs);
 }
 
 // Consume all events until no more left
Index: src/mac/classic/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/classic/utils.cpp,v
retrieving revision 1.1
diff -u -r1.1 utils.cpp
--- src/mac/classic/utils.cpp	2004/03/20 07:43:01	1.1
+++ src/mac/classic/utils.cpp	2004/05/04 12:30:31
@@ -196,7 +196,10 @@
     return FreeMem() ;
 }
 
-void wxUsleep(unsigned long milliseconds)
+/* FIXME: re-implement a *PROPER* wxUsleep once the wxUsleep millisecond
+	  screwup is old enough - i.e. somewhere quite some time after wx 2.6 */
+
+void wxMsleep(unsigned long milliseconds)
 {
     clock_t start = clock() ;
     do
@@ -207,7 +210,7 @@
 
 void wxSleep(int nSecs)
 {
-    wxUsleep(1000*nSecs);
+    wxMsleep(1000*nSecs);
 }
 
 // Consume all events until no more left
Index: src/mgl/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mgl/utils.cpp,v
retrieving revision 1.18
diff -u -r1.18 utils.cpp
--- src/mgl/utils.cpp	2004/02/05 23:13:30	1.18
+++ src/mgl/utils.cpp	2004/05/04 12:30:31
@@ -51,14 +51,17 @@
 
 void wxSleep(int nSecs)
 {
-    wxUsleep(1000 * nSecs);
+    wxMsleep(1000 * nSecs);
 }
 
-void wxUsleep(unsigned long milliseconds)
+void wxMsleep(unsigned long milliseconds)
 {
     PM_sleep(milliseconds);
 }
 
+
+/* FIXME: re-implement a *PROPER* wxUsleep once the wxUsleep millisecond
+	  screwup is old enough - i.e. somewhere quite some time after wx 2.6 */
 
 bool wxGetEnv(const wxString& var, wxString *value)
 {
Index: src/mgl/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mgl/window.cpp,v
retrieving revision 1.59
diff -u -r1.59 window.cpp
--- src/mgl/window.cpp	2004/02/05 23:13:30	1.59
+++ src/mgl/window.cpp	2004/05/04 12:30:32
@@ -1130,7 +1130,7 @@
     {
         dc->setColorRGB(255,0,255);
         dc->fillRect(-1000,-1000,2000,2000);
-        wxUsleep(50);
+        wxMsleep(50);
     }
 #endif
 
Index: src/motif/evtloop.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/evtloop.cpp,v
retrieving revision 1.11
diff -u -r1.11 evtloop.cpp
--- src/motif/evtloop.cpp	2004/01/31 14:45:30	1.11
+++ src/motif/evtloop.cpp	2004/05/04 12:30:32
@@ -360,7 +360,7 @@
         // leave the main loop to give other threads a chance to
         // perform their GUI work
         wxMutexGuiLeave();
-        wxUsleep(20);
+        wxMsleep(20);
         wxMutexGuiEnter();
     }
 #endif
Index: src/msw/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/utils.cpp,v
retrieving revision 1.140
diff -u -r1.140 utils.cpp
--- src/msw/utils.cpp	2004/03/28 13:10:08	1.140
+++ src/msw/utils.cpp	2004/05/04 12:30:33
@@ -1030,14 +1030,17 @@
 // sleep functions
 // ----------------------------------------------------------------------------
 
-void wxUsleep(unsigned long milliseconds)
+/* FIXME: re-implement a *PROPER* wxUsleep once the wxUsleep millisecond
+          screwup is old enough - i.e. somewhere quite some time after wx 2.6 */
+
+void wxMsleep(unsigned long milliseconds)
 {
     ::Sleep(milliseconds);
 }
 
 void wxSleep(int nSecs)
 {
-    wxUsleep(1000*nSecs);
+    wxMsleep(1000*nSecs);
 }
 
 // ----------------------------------------------------------------------------
Index: src/os2/evtloop.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/evtloop.cpp,v
retrieving revision 1.6
diff -u -r1.6 evtloop.cpp
--- src/os2/evtloop.cpp	2004/03/04 00:16:56	1.6
+++ src/os2/evtloop.cpp	2004/05/04 12:30:33
@@ -296,7 +296,7 @@
         while ( !Pending() && m_impl->SendIdleMessage() )
 	{
 	    wxTheApp->HandleSockets();
-	    wxUsleep(10);
+	    wxMsleep(10);
 	}
 
         wxTheApp->HandleSockets();
@@ -309,7 +309,7 @@
 	    }
 	}
         else
-            wxUsleep(10);
+            wxMsleep(10);
     }
 
     return m_impl->GetExitCode();
Index: src/os2/thread.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/thread.cpp,v
retrieving revision 1.25
diff -u -r1.25 thread.cpp
--- src/os2/thread.cpp	2004/03/18 10:54:24	1.25
+++ src/os2/thread.cpp	2004/05/04 12:30:34
@@ -793,10 +793,10 @@
                       return wxTHREAD_KILLED;
                   }
                   else
-                    wxUsleep(10);
+                    wxMsleep(10);
             }
             else
-                wxUsleep(10);
+                wxMsleep(10);
         } while ( result != NO_ERROR );
 #else // !wxUSE_GUI
         // simply wait for the thread to terminate
Index: src/os2/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/utils.cpp,v
retrieving revision 1.55
diff -u -r1.55 utils.cpp
--- src/os2/utils.cpp	2004/03/08 11:29:15	1.55
+++ src/os2/utils.cpp	2004/05/04 12:30:34
@@ -260,7 +260,10 @@
 #endif
 }
 
-void wxUsleep(
+/* FIXME: re-implement a *PROPER* wxUsleep once the wxUsleep millisecond
+          screwup is old enough - i.e. somewhere quite some time after wx 2.6 */
+
+void wxMsleep(
   unsigned long                     ulMilliseconds
 )
 {
Index: src/os2/wx25.def
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/wx25.def,v
retrieving revision 1.9
diff -u -r1.9 wx25.def
--- src/os2/wx25.def	2004/02/02 13:36:12	1.9
+++ src/os2/wx25.def	2004/05/04 12:30:39
@@ -13942,8 +13942,8 @@
       wxSetEnv__FRC8wxStringPCc
       ;wxGetHomeDir(wxString*)
       wxGetHomeDir__FP8wxString
-      ;wxUsleep(unsigned long)
-      wxUsleep__FUl
+      ;wxMsleep(unsigned long)
+      wxMsleep__FUl
       ;wxPMErrorToStr(unsigned long)
       wxPMErrorToStr__FUl
       ;wxOS2SetFont(unsigned long,const wxFont&)
Index: src/unix/sound_sdl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/sound_sdl.cpp,v
retrieving revision 1.7
diff -u -r1.7 sound_sdl.cpp
--- src/unix/sound_sdl.cpp	2004/02/10 22:15:11	1.7
+++ src/unix/sound_sdl.cpp	2004/05/04 12:30:40
@@ -304,7 +304,7 @@
             if (wxThread::IsMain())
                 wxMutexGuiLeave();
 #endif
-            wxUsleep(10);
+            wxMsleep(10);
 #if wxUSE_THREADS
             if (wxThread::IsMain())
                 wxMutexGuiEnter();
Index: src/unix/threadpsx.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/threadpsx.cpp,v
retrieving revision 1.74
diff -u -r1.74 threadpsx.cpp
--- src/unix/threadpsx.cpp	2004/03/31 15:43:19	1.74
+++ src/unix/threadpsx.cpp	2004/05/04 12:30:40
@@ -969,7 +969,7 @@
 
 void wxThread::Sleep(unsigned long milliseconds)
 {
-    wxUsleep(milliseconds);
+    wxMsleep(milliseconds);
 }
 
 int wxThread::GetCPUCount()
Index: src/unix/utilsunx.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/utilsunx.cpp,v
retrieving revision 1.104
diff -u -r1.104 utilsunx.cpp
--- src/unix/utilsunx.cpp	2004/04/18 16:28:31	1.104
+++ src/unix/utilsunx.cpp	2004/05/04 12:30:41
@@ -149,7 +149,7 @@
     sleep(nSecs);
 }
 
-void wxUsleep(unsigned long milliseconds)
+void wxMsleep(unsigned long milliseconds)
 {
 #if defined(HAVE_NANOSLEEP)
     timespec tmReq;
@@ -172,10 +172,13 @@
     // under BeOS sleep() takes seconds (what about other platforms, if any?)
     sleep(milliseconds * 1000);
 #else // !sleep function
-    #error "usleep() or nanosleep() function required for wxUsleep"
+    #error "usleep() or nanosleep() function required for wxMsleep"
 #endif // sleep function
 }
 
+/* FIXME: re-implement a *PROPER* wxUsleep once the wxUsleep millisecond
+          screwup is old enough - i.e. somewhere quite some time after wx 2.6 */
+
 // ----------------------------------------------------------------------------
 // process management
 // ----------------------------------------------------------------------------
@@ -1161,7 +1164,7 @@
             // don't consume 100% of the CPU while we're sitting this in this
             // loop
             if ( idle )
-                wxUsleep(1);
+                wxMsleep(1);
 
             // give GTK+ a chance to call GTK_EndProcessDetector here and
             // also repaint the GUI
Index: src/x11/evtloop.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/x11/evtloop.cpp,v
retrieving revision 1.17
diff -u -r1.17 evtloop.cpp
--- src/x11/evtloop.cpp	2003/08/09 12:46:50	1.17
+++ src/x11/evtloop.cpp	2004/05/04 12:30:41
@@ -388,7 +388,7 @@
                 // leave the main loop to give other threads a chance to
                 // perform their GUI work
                 wxMutexGuiLeave();
-                wxUsleep(20);
+                wxMsleep(20);
                 wxMutexGuiEnter();
 #endif
                 // Break out of while loop
Index: wxPython/docs/xml/wxPython-metadata.xml
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/wxPython/docs/xml/wxPython-metadata.xml,v
retrieving revision 1.9
diff -u -r1.9 wxPython-metadata.xml
--- wxPython/docs/xml/wxPython-metadata.xml	2004/03/26 22:16:25	1.9
+++ wxPython/docs/xml/wxPython-metadata.xml	2004/05/04 12:31:22
@@ -19793,8 +19793,8 @@
         <param name="secs" type="int" default=""/>
       </paramlist>
     </method>
-    <method name="Usleep" oldname="wxUsleep" type="" overloaded="no">
-      <autodoc>Usleep(unsigned long milliseconds)</autodoc>
+    <method name="Msleep" oldname="wxMsleep" type="" overloaded="no">
+      <autodoc>Msleep(unsigned long milliseconds)</autodoc>
       <paramlist>
         <param name="milliseconds" type="unsigned long" default=""/>
       </paramlist>
Index: wxPython/src/__misc_rename.i
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/wxPython/src/__misc_rename.i,v
retrieving revision 1.1
diff -u -r1.1 __misc_rename.i
--- wxPython/src/__misc_rename.i	2004/04/25 06:50:53	1.1
+++ wxPython/src/__misc_rename.i	2004/05/04 12:31:23
@@ -114,7 +114,7 @@
 %rename(SHUTDOWN_REBOOT)                    wxSHUTDOWN_REBOOT;
 %rename(Shutdown)                           wxShutdown;
 %rename(Sleep)                              wxSleep;
-%rename(Usleep)                             wxUsleep;
+%rename(Msleep)                             wxMsleep;
 %rename(EnableTopLevelWindows)              wxEnableTopLevelWindows;
 %rename(StripMenuCodes)                     wxStripMenuCodes;
 %rename(GetEmailAddress)                    wxGetEmailAddress;
Index: wxPython/src/_functions.i
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/wxPython/src/_functions.i,v
retrieving revision 1.7
diff -u -r1.7 _functions.i
--- wxPython/src/_functions.i	2003/12/20 19:54:08	1.7
+++ wxPython/src/_functions.i	2004/05/04 12:31:23
@@ -67,7 +67,7 @@
 
 
 void wxSleep(int secs);
-void wxUsleep(unsigned long milliseconds);
+void wxMsleep(unsigned long milliseconds);
 void wxEnableTopLevelWindows(bool enable);
 
 wxString wxStripMenuCodes(const wxString& in);
Index: wxPython/src/gtk/_misc.py
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/wxPython/src/gtk/_misc.py,v
retrieving revision 1.2
diff -u -r1.2 _misc.py
--- wxPython/src/gtk/_misc.py	2004/04/30 06:30:13	1.2
+++ wxPython/src/gtk/_misc.py	2004/05/04 12:31:27
@@ -295,9 +295,9 @@
     """Sleep(int secs)"""
     return _misc_.Sleep(*args, **kwargs)
 
-def Usleep(*args, **kwargs):
-    """Usleep(unsigned long milliseconds)"""
-    return _misc_.Usleep(*args, **kwargs)
+def Msleep(*args, **kwargs):
+    """Msleep(unsigned long milliseconds)"""
+    return _misc_.Msleep(*args, **kwargs)
 
 def EnableTopLevelWindows(*args, **kwargs):
     """EnableTopLevelWindows(bool enable)"""
Index: wxPython/src/gtk/_misc_wrap.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/wxPython/src/gtk/_misc_wrap.cpp,v
retrieving revision 1.1
diff -u -r1.1 _misc_wrap.cpp
--- wxPython/src/gtk/_misc_wrap.cpp	2004/04/25 06:50:35	1.1
+++ wxPython/src/gtk/_misc_wrap.cpp	2004/05/04 12:31:47
@@ -2371,7 +2371,7 @@
 }
 
 
-static PyObject *_wrap_Usleep(PyObject *self, PyObject *args, PyObject *kwargs) {
+static PyObject *_wrap_Msleep(PyObject *self, PyObject *args, PyObject *kwargs) {
     PyObject *resultobj;
     unsigned long arg1 ;
     PyObject * obj0 = 0 ;
@@ -2379,12 +2379,12 @@
         (char *) "milliseconds", NULL 
     };
     
-    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Usleep",kwnames,&obj0)) goto fail;
+    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Msleep",kwnames,&obj0)) goto fail;
     arg1 = (unsigned long) SWIG_AsUnsignedLong(obj0); 
     if (PyErr_Occurred()) SWIG_fail;
     {
         PyThreadState* __tstate = wxPyBeginAllowThreads();
-        wxUsleep(arg1);
+        wxMsleep(arg1);
         
         wxPyEndAllowThreads(__tstate);
         if (PyErr_Occurred()) SWIG_fail;
@@ -28064,7 +28064,7 @@
 	 { (char *)"GetFreeMemory", (PyCFunction) _wrap_GetFreeMemory, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"Shutdown", (PyCFunction) _wrap_Shutdown, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"Sleep", (PyCFunction) _wrap_Sleep, METH_VARARGS | METH_KEYWORDS },
-	 { (char *)"Usleep", (PyCFunction) _wrap_Usleep, METH_VARARGS | METH_KEYWORDS },
+	 { (char *)"Msleep", (PyCFunction) _wrap_Msleep, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"EnableTopLevelWindows", (PyCFunction) _wrap_EnableTopLevelWindows, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"StripMenuCodes", (PyCFunction) _wrap_StripMenuCodes, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"GetEmailAddress", (PyCFunction) _wrap_GetEmailAddress, METH_VARARGS | METH_KEYWORDS },
Index: wxPython/src/mac/_misc.py
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/wxPython/src/mac/_misc.py,v
retrieving revision 1.2
diff -u -r1.2 _misc.py
--- wxPython/src/mac/_misc.py	2004/05/02 03:32:42	1.2
+++ wxPython/src/mac/_misc.py	2004/05/04 12:31:49
@@ -295,9 +295,9 @@
     """Sleep(int secs)"""
     return _misc_.Sleep(*args, **kwargs)
 
-def Usleep(*args, **kwargs):
-    """Usleep(unsigned long milliseconds)"""
-    return _misc_.Usleep(*args, **kwargs)
+def Msleep(*args, **kwargs):
+    """Msleep(unsigned long milliseconds)"""
+    return _misc_.Msleep(*args, **kwargs)
 
 def EnableTopLevelWindows(*args, **kwargs):
     """EnableTopLevelWindows(bool enable)"""
Index: wxPython/src/mac/_misc_wrap.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/wxPython/src/mac/_misc_wrap.cpp,v
retrieving revision 1.1
diff -u -r1.1 _misc_wrap.cpp
--- wxPython/src/mac/_misc_wrap.cpp	2004/04/25 07:02:38	1.1
+++ wxPython/src/mac/_misc_wrap.cpp	2004/05/04 12:31:59
@@ -2365,7 +2365,7 @@
 }
 
 
-static PyObject *_wrap_Usleep(PyObject *self, PyObject *args, PyObject *kwargs) {
+static PyObject *_wrap_Msleep(PyObject *self, PyObject *args, PyObject *kwargs) {
     PyObject *resultobj;
     unsigned long arg1 ;
     PyObject * obj0 = 0 ;
@@ -2373,12 +2373,12 @@
         (char *) "milliseconds", NULL 
     };
     
-    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Usleep",kwnames,&obj0)) goto fail;
+    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Msleep",kwnames,&obj0)) goto fail;
     arg1 = (unsigned long) SWIG_AsUnsignedLong(obj0); 
     if (PyErr_Occurred()) SWIG_fail;
     {
         PyThreadState* __tstate = wxPyBeginAllowThreads();
-        wxUsleep(arg1);
+        wxMsleep(arg1);
         
         wxPyEndAllowThreads(__tstate);
         if (PyErr_Occurred()) SWIG_fail;
@@ -28122,7 +28122,7 @@
 	 { (char *)"GetFreeMemory", (PyCFunction) _wrap_GetFreeMemory, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"Shutdown", (PyCFunction) _wrap_Shutdown, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"Sleep", (PyCFunction) _wrap_Sleep, METH_VARARGS | METH_KEYWORDS },
-	 { (char *)"Usleep", (PyCFunction) _wrap_Usleep, METH_VARARGS | METH_KEYWORDS },
+	 { (char *)"Msleep", (PyCFunction) _wrap_Msleep, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"EnableTopLevelWindows", (PyCFunction) _wrap_EnableTopLevelWindows, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"StripMenuCodes", (PyCFunction) _wrap_StripMenuCodes, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"GetEmailAddress", (PyCFunction) _wrap_GetEmailAddress, METH_VARARGS | METH_KEYWORDS },
Index: wxPython/src/msw/_misc.py
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/wxPython/src/msw/_misc.py,v
retrieving revision 1.2
diff -u -r1.2 _misc.py
--- wxPython/src/msw/_misc.py	2004/05/02 03:13:18	1.2
+++ wxPython/src/msw/_misc.py	2004/05/04 12:32:00
@@ -295,9 +295,9 @@
     """Sleep(int secs)"""
     return _misc_.Sleep(*args, **kwargs)
 
-def Usleep(*args, **kwargs):
-    """Usleep(unsigned long milliseconds)"""
-    return _misc_.Usleep(*args, **kwargs)
+def Msleep(*args, **kwargs):
+    """Msleep(unsigned long milliseconds)"""
+    return _misc_.Msleep(*args, **kwargs)
 
 def EnableTopLevelWindows(*args, **kwargs):
     """EnableTopLevelWindows(bool enable)"""
Index: wxPython/src/msw/_misc_wrap.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/wxPython/src/msw/_misc_wrap.cpp,v
retrieving revision 1.1
diff -u -r1.1 _misc_wrap.cpp
--- wxPython/src/msw/_misc_wrap.cpp	2004/04/25 07:03:03	1.1
+++ wxPython/src/msw/_misc_wrap.cpp	2004/05/04 12:32:06
@@ -2356,7 +2356,7 @@
 }
 
 
-static PyObject *_wrap_Usleep(PyObject *self, PyObject *args, PyObject *kwargs) {
+static PyObject *_wrap_Msleep(PyObject *self, PyObject *args, PyObject *kwargs) {
     PyObject *resultobj;
     unsigned long arg1 ;
     PyObject * obj0 = 0 ;
@@ -2364,12 +2364,12 @@
         (char *) "milliseconds", NULL 
     };
     
-    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Usleep",kwnames,&obj0)) goto fail;
+    if(!PyArg_ParseTupleAndKeywords(args,kwargs,(char *)"O:Msleep",kwnames,&obj0)) goto fail;
     arg1 = (unsigned long) SWIG_AsUnsignedLong(obj0); 
     if (PyErr_Occurred()) SWIG_fail;
     {
         PyThreadState* __tstate = wxPyBeginAllowThreads();
-        wxUsleep(arg1);
+        wxMsleep(arg1);
         
         wxPyEndAllowThreads(__tstate);
         if (PyErr_Occurred()) SWIG_fail;
@@ -28113,7 +28113,7 @@
 	 { (char *)"GetFreeMemory", (PyCFunction) _wrap_GetFreeMemory, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"Shutdown", (PyCFunction) _wrap_Shutdown, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"Sleep", (PyCFunction) _wrap_Sleep, METH_VARARGS | METH_KEYWORDS },
-	 { (char *)"Usleep", (PyCFunction) _wrap_Usleep, METH_VARARGS | METH_KEYWORDS },
+	 { (char *)"Msleep", (PyCFunction) _wrap_Msleep, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"EnableTopLevelWindows", (PyCFunction) _wrap_EnableTopLevelWindows, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"StripMenuCodes", (PyCFunction) _wrap_StripMenuCodes, METH_VARARGS | METH_KEYWORDS },
 	 { (char *)"GetEmailAddress", (PyCFunction) _wrap_GetEmailAddress, METH_VARARGS | METH_KEYWORDS },
Index: wxPython/wxPython/_misc.py
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/wxPython/wxPython/_misc.py,v
retrieving revision 1.1
diff -u -r1.1 _misc.py
--- wxPython/wxPython/_misc.py	2004/04/25 06:49:40	1.1
+++ wxPython/wxPython/_misc.py	2004/05/04 12:32:06
@@ -146,7 +146,7 @@
 wxSHUTDOWN_REBOOT = wx._misc.SHUTDOWN_REBOOT
 wxShutdown = wx._misc.Shutdown
 wxSleep = wx._misc.Sleep
-wxUsleep = wx._misc.Usleep
+wxMsleep = wx._misc.Msleep
 wxEnableTopLevelWindows = wx._misc.EnableTopLevelWindows
 wxStripMenuCodes = wx._misc.StripMenuCodes
 wxGetEmailAddress = wx._misc.GetEmailAddress

 	  	 
