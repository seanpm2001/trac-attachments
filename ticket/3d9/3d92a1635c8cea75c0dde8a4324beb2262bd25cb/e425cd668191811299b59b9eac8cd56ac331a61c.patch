diff -bu1 -r wxWindows/samples/opengl/cube/cube.cpp wxWin/samples/opengl/cube/cube.cpp
--- wxWindows/samples/opengl/cube/cube.cpp	2003-01-13 05:17:29.000000000 +0100
+++ wxWin/samples/opengl/cube/cube.cpp	2003-09-08 16:40:19.000000000 +0200
@@ -29,6 +29,2 @@
 
-#if !wxUSE_GLCANVAS
-#error Please set wxUSE_GLCANVAS to 1 in setup.h.
-#endif
-
 #include "cube.h"
@@ -72,5 +68,5 @@
                              const wxPoint& pos, const wxSize& size )
-                  : wxTextCtrl( parent, id, "", pos, size )
+                  : wxTextCtrl( parent, id, wxEmptyString, pos, size )
 { wxString buf;
-  buf.Printf( "0x%04x", code );
+  buf.Printf( _T("0x%04x"), code );
   SetValue( buf );
@@ -79,4 +75,5 @@
 void ScanCodeCtrl::OnKeyDown( wxKeyEvent& event )
-{ wxString buf;
-  buf.Printf( "0x%04x", event.GetKeyCode() );
+{
+  wxString buf;
+  buf.Printf( _T("0x%04x"), event.GetKeyCode() );
   SetValue( buf );
@@ -103,3 +100,3 @@
 {
-  new wxStaticText( this, -1, "Scancode", wxPoint(4*2,3*2),
+  new wxStaticText( this, -1, _T("Scancode"), wxPoint(4*2,3*2),
                     wxSize(31*2,12*2) );
@@ -108,3 +105,3 @@
 
-  new wxStaticText( this, -1, "Description", wxPoint(4*2,24*2),
+  new wxStaticText( this, -1, _T("Description"), wxPoint(4*2,24*2),
                     wxSize(32*2,12*2) );
@@ -113,4 +110,4 @@
 
-  new wxButton( this, wxID_OK, "Ok", wxPoint(20*2,50*2), wxSize(20*2,13*2) );
-  new wxButton( this, wxID_CANCEL, "Cancel", wxPoint(44*2,50*2),
+  new wxButton( this, wxID_OK, _T("Ok"), wxPoint(20*2,50*2), wxSize(20*2,13*2) );
+  new wxButton( this, wxID_CANCEL, _T("Cancel"), wxPoint(44*2,50*2),
                 wxSize(25*2,13*2) );
@@ -122,3 +119,3 @@
   wxString buf = m_ScanCode->GetValue();
-  sscanf( buf.c_str(), "%i", &code );
+  wxSscanf( buf.c_str(), _T("%i"), &code );
   return( code );
@@ -162,2 +159,4 @@
 
+#if wxUSE_GLCANVAS
+
 BEGIN_EVENT_TABLE(TestGLCanvas, wxGLCanvas)
@@ -265,3 +264,3 @@
 
-void TestGLCanvas::OnEnterWindow( wxMouseEvent& event )
+void TestGLCanvas::OnEnterWindow( wxMouseEvent& WXUNUSED(event) )
 {
@@ -270,3 +269,3 @@
 
-void TestGLCanvas::OnPaint( wxPaintEvent& event )
+void TestGLCanvas::OnPaint( wxPaintEvent& WXUNUSED(event) )
 {
@@ -292,3 +291,3 @@
 
-void TestGLCanvas::OnEraseBackground(wxEraseEvent& event)
+void TestGLCanvas::OnEraseBackground(wxEraseEvent& WXUNUSED(event))
 {
@@ -417,2 +416,4 @@
 
+#endif // wxUSE_GLCANVAS
+
 /* -----------------------------------------------------------------------
@@ -437,3 +438,3 @@
 // Intercept menu commands
-void MyFrame::OnExit(wxCommandEvent& event)
+void MyFrame::OnExit(wxCommandEvent& WXUNUSED(event))
 {
@@ -442,5 +443,5 @@
 
-void MyFrame::OnNewWindow(wxCommandEvent& event)
+void MyFrame::OnNewWindow(wxCommandEvent& WXUNUSED(event))
 {
-  MyFrame *frame = new MyFrame(NULL, "Cube OpenGL Demo Clone",
+  MyFrame *frame = new MyFrame(NULL, _T("Cube OpenGL Demo Clone"),
                                wxPoint(50, 50), wxSize(400, 300));
@@ -448,3 +449,3 @@
 #ifdef __WXMSW__
-  frame->SetIcon(wxIcon("mondrian"));
+  frame->SetIcon(wxIcon(_T("mondrian")));
 #endif
@@ -454,11 +455,11 @@
 
-  winMenu->Append(wxID_EXIT, "&Close");
-  winMenu->Append(ID_NEW_WINDOW, "&New" );
+  winMenu->Append(wxID_EXIT, _T("&Close"));
+  winMenu->Append(ID_NEW_WINDOW, _T("&New") );
   wxMenuBar *menuBar = new wxMenuBar;
-  menuBar->Append(winMenu, "&Window");
+  menuBar->Append(winMenu, _T("&Window"));
 
   winMenu = new wxMenu;
-  winMenu->Append(ID_DEF_ROTATE_LEFT_KEY, "Rotate &left");
-  winMenu->Append(ID_DEF_ROTATE_RIGHT_KEY, "Rotate &right");
-  menuBar->Append(winMenu, "&Key");
+  winMenu->Append(ID_DEF_ROTATE_LEFT_KEY, _T("Rotate &left"));
+  winMenu->Append(ID_DEF_ROTATE_RIGHT_KEY, _T("Rotate &right"));
+  menuBar->Append(winMenu, _T("&Key"));
 
@@ -466,4 +467,6 @@
 
+#if wxUSE_GLCANVAS
   frame->m_canvas = new TestGLCanvas( frame, *m_canvas, -1,
                wxDefaultPosition, wxDefaultSize );
+#endif
 
@@ -473,6 +476,7 @@
 
-void MyFrame::OnDefRotateLeftKey(wxCommandEvent& event)
+void MyFrame::OnDefRotateLeftKey(wxCommandEvent& WXUNUSED(event))
 {
+#if wxUSE_GLCANVAS
   ScanCodeDialog dial( this, -1, m_canvas->m_rleft,
-                       wxString("Left"), "Define key" );
+                       wxString(_T("Left")), _T("Define key") );
   int result = dial.ShowModal();
@@ -480,7 +484,10 @@
     m_canvas->m_rleft = dial.GetValue();
+#endif
 }
-void MyFrame::OnDefRotateRightKey(wxCommandEvent& event)
+
+void MyFrame::OnDefRotateRightKey(wxCommandEvent& WXUNUSED(event))
 {
+#if wxUSE_GLCANVAS
   ScanCodeDialog dial( this, -1, m_canvas->m_rright,
-                       wxString("Right"), "Define key" );
+                       wxString(_T("Right")), _T("Define key") );
   int result = dial.ShowModal();
@@ -488,2 +495,3 @@
     m_canvas->m_rright = dial.GetValue();
+#endif
 }
@@ -501,3 +509,3 @@
   // Create the main frame window
-  MyFrame *frame = new MyFrame(NULL, "Cube OpenGL Demo", wxPoint(50, 50),
+  MyFrame *frame = new MyFrame(NULL, _T("Cube OpenGL Demo"), wxPoint(50, 50),
                                wxSize(400, 300));
@@ -511,11 +519,11 @@
 
-  winMenu->Append(wxID_EXIT, "&Close");
-  winMenu->Append(ID_NEW_WINDOW, "&New" );
+  winMenu->Append(wxID_EXIT, _T("&Close"));
+  winMenu->Append(ID_NEW_WINDOW, _T("&New") );
   wxMenuBar *menuBar = new wxMenuBar;
-  menuBar->Append(winMenu, "&Window");
+  menuBar->Append(winMenu, _T("&Window"));
 
   winMenu = new wxMenu;
-  winMenu->Append(ID_DEF_ROTATE_LEFT_KEY, "Rotate &left");
-  winMenu->Append(ID_DEF_ROTATE_RIGHT_KEY, "Rotate &right");
-  menuBar->Append(winMenu, "&Key");
+  winMenu->Append(ID_DEF_ROTATE_LEFT_KEY, _T("Rotate &left"));
+  winMenu->Append(ID_DEF_ROTATE_RIGHT_KEY, _T("Rotate &right"));
+  menuBar->Append(winMenu, _T("&Key"));
 
@@ -523,2 +531,4 @@
 
+#if wxUSE_GLCANVAS
+
   frame->m_canvas = new TestGLCanvas(frame, -1, wxDefaultPosition, wxDefaultSize);
@@ -529,2 +539,11 @@
   return TRUE;
+
+#else
+
+  wxMessageBox( _T("This sample has to be compiled with wxUSE_GLCANVAS"), _T("Building error"), wxOK);
+
+  return FALSE;
+
+#endif
+
 }
diff -bu1 -r wxWindows/samples/opengl/cube/cube.h wxWin/samples/opengl/cube/cube.h
--- wxWindows/samples/opengl/cube/cube.h	2002-03-17 14:15:52.000000000 +0100
+++ wxWin/samples/opengl/cube/cube.h	2003-09-08 15:25:11.000000000 +0200
@@ -42,2 +42,4 @@
 
+#if wxUSE_GLCANVAS
+
 class TestGLCanvas: public wxGLCanvas
@@ -48,3 +50,3 @@
     const wxPoint& pos = wxDefaultPosition, const wxSize& size = wxDefaultSize,
-    long style = 0, const wxString& name = "TestGLCanvas");
+    long style = 0, const wxString& name = _T("TestGLCanvas"));
  TestGLCanvas(wxWindow *parent, const TestGLCanvas &other,
@@ -52,3 +54,3 @@
           const wxSize& size = wxDefaultSize, long style = 0,
-          const wxString& name = "TestGLCanvas" );
+          const wxString& name = _T("TestGLCanvas") );
    
@@ -93 +95,3 @@
 
+#endif
+
diff -bu1 -r wxWindows/samples/opengl/isosurf/isosurf.cpp wxWin/samples/opengl/isosurf/isosurf.cpp
--- wxWindows/samples/opengl/isosurf/isosurf.cpp	2003-01-13 05:17:30.000000000 +0100
+++ wxWin/samples/opengl/isosurf/isosurf.cpp	2003-09-08 17:06:17.000000000 +0200
@@ -27,6 +27,2 @@
 
-#if !wxUSE_GLCANVAS
-#error Please set wxUSE_GLCANVAS to 1 in setup.h.
-#endif
-
 #include "wx/timer.h"
@@ -78,3 +74,3 @@
 
-static void read_surface( char *filename )
+static void read_surface( wxChar *filename )
 {
@@ -82,5 +78,5 @@
 
-   f = fopen(filename,"r");
+   f = wxFopen(filename,_T("r"));
    if (!f) {
-      wxString msg("Couldn't read ");
+      wxString msg(_T("Couldn't read "));
       msg += filename;
@@ -99,3 +95,3 @@
 
-   printf("%d vertices, %d triangles\n", numverts, numverts-2);
+   wxPrintf(_T("%d vertices, %d triangles\n"), numverts, numverts-2);
    fclose(f);
@@ -205,3 +201,3 @@
 
-static GLenum Args(int argc, char **argv)
+static GLenum Args(int argc, wxChar **argv)
 {
@@ -210,9 +206,9 @@
    for (i = 1; i < argc; i++) {
-      if (strcmp(argv[i], "-sb") == 0) {
+      if (wxStrcmp(argv[i], _T("-sb")) == 0) {
          doubleBuffer = GL_FALSE;
       }
-      else if (strcmp(argv[i], "-db") == 0) {
+      else if (wxStrcmp(argv[i], _T("-db")) == 0) {
          doubleBuffer = GL_TRUE;
       }
-      else if (strcmp(argv[i], "-speed") == 0) {
+      else if (wxStrcmp(argv[i], _T("-speed")) == 0) {
          speed_test = GL_TRUE;
@@ -220,3 +216,3 @@
       }
-      else if (strcmp(argv[i], "-va") == 0) {
+      else if (wxStrcmp(argv[i], _T("-va")) == 0) {
          use_vertex_arrays = GL_TRUE;
@@ -224,3 +220,3 @@
       else {
-         wxString msg("Bad option: ");
+         wxString msg(_T("Bad option: "));
          msg += argv[i];
@@ -245,6 +241,6 @@
   // Create the main frame window
-  frame = new MyFrame(NULL, "Isosurf GL Sample", wxPoint(50, 50), wxSize(200, 200));
+  frame = new MyFrame(NULL, _T("Isosurf GL Sample"), wxPoint(50, 50), wxSize(200, 200));
 
   // Give it an icon
-  frame->SetIcon(wxIcon("mondrian"));
+  frame->SetIcon(wxIcon(_T("mondrian")));
 
@@ -253,5 +249,5 @@
 
-  fileMenu->Append(wxID_EXIT, "E&xit");
+  fileMenu->Append(wxID_EXIT, _T("E&xit"));
   wxMenuBar *menuBar = new wxMenuBar;
-  menuBar->Append(fileMenu, "&File");
+  menuBar->Append(fileMenu, _T("&File"));
   frame->SetMenuBar(menuBar);
@@ -283,4 +279,6 @@
  
+#if wxUSE_GLCANVAS
+
   frame->m_canvas = new TestGLCanvas(frame, -1, wxDefaultPosition, wxDefaultSize,
-                                     0, "TestGLCanvas", gl_attrib );
+                                     0, _T("TestGLCanvas"), gl_attrib );
 
@@ -290,3 +288,3 @@
   frame->m_canvas->SetCurrent();
-  read_surface( "isosurf.dat" );
+  read_surface( _T("isosurf.dat") );
 
@@ -295,2 +293,9 @@
   return TRUE;
+
+#else
+
+  wxMessageBox( _T("This sample has to be compiled with wxUSE_GLCANVAS"), _T("Building error"), wxOK);
+
+  return FALSE;
+#endif
 }
@@ -306,3 +311,5 @@
 {
+#if wxUSE_GLCANVAS
     m_canvas = NULL;
+#endif
 }
@@ -310,3 +317,3 @@
 // Intercept menu commands
-void MyFrame::OnExit(wxCommandEvent& event)
+void MyFrame::OnExit(wxCommandEvent& WXUNUSED(event))
 {
@@ -319,2 +326,4 @@
 
+#if wxUSE_GLCANVAS
+
 BEGIN_EVENT_TABLE(TestGLCanvas, wxGLCanvas)
@@ -346,3 +355,3 @@
 
-void TestGLCanvas::OnPaint( wxPaintEvent& event )
+void TestGLCanvas::OnPaint( wxPaintEvent& WXUNUSED(event) )
 {
@@ -442,3 +451,3 @@
 
-void TestGLCanvas::OnEraseBackground(wxEraseEvent& event)
+void TestGLCanvas::OnEraseBackground(wxEraseEvent& WXUNUSED(event))
 {
@@ -447 +456,2 @@
 
+#endif
\ No newline at end of file
diff -bu1 -r wxWindows/samples/opengl/isosurf/isosurf.h wxWin/samples/opengl/isosurf/isosurf.h
--- wxWindows/samples/opengl/isosurf/isosurf.h	2002-03-17 14:15:53.000000000 +0100
+++ wxWin/samples/opengl/isosurf/isosurf.h	2003-09-08 16:58:25.000000000 +0200
@@ -20,2 +20,3 @@
 
+#if wxUSE_GLCANVAS
 class TestGLCanvas: public wxGLCanvas
@@ -24,3 +25,3 @@
    TestGLCanvas(wxWindow *parent, const wxWindowID id = -1, const wxPoint& pos = wxDefaultPosition,
-      const wxSize& size = wxDefaultSize, long style = 0, const wxString& name = "TestGLCanvas",
+      const wxSize& size = wxDefaultSize, long style = 0, const wxString& name = _T("TestGLCanvas"),
       int* gl_attrib = NULL);
@@ -36,2 +37,3 @@
 };
+#endif
 
@@ -45,3 +47,5 @@
 public:
+#if wxUSE_GLCANVAS
     TestGLCanvas*    m_canvas;
+#endif
 
diff -bu1 -r wxWindows/samples/opengl/penguin/lw.cpp wxWin/samples/opengl/penguin/lw.cpp
--- wxWindows/samples/opengl/penguin/lw.cpp	2002-05-10 14:56:51.000000000 +0200
+++ wxWin/samples/opengl/penguin/lw.cpp	2003-09-08 17:59:19.000000000 +0200
@@ -38,2 +38,4 @@
 
+#if wxUSE_GLCANVAS
+
 #define MK_ID(a,b,c,d) ((((wxUint32)(a))<<24)| \
@@ -437,2 +439,3 @@
 
+#endif
 
diff -bu1 -r wxWindows/samples/opengl/penguin/lw.h wxWin/samples/opengl/penguin/lw.h
--- wxWindows/samples/opengl/penguin/lw.h	2001-07-22 16:54:49.000000000 +0200
+++ wxWin/samples/opengl/penguin/lw.h	2003-09-08 17:58:58.000000000 +0200
@@ -63,2 +63,3 @@
 
+#if wxUSE_GLCANVAS
 int       lw_is_lwobject(const char     *lw_file);
@@ -70,2 +71,3 @@
 void      lw_object_scale (lwObject *lw_object, GLfloat scale);
+#endif
 
diff -bu1 -r wxWindows/samples/opengl/penguin/penguin.cpp wxWin/samples/opengl/penguin/penguin.cpp
--- wxWindows/samples/opengl/penguin/penguin.cpp	2003-05-06 09:22:13.000000000 +0200
+++ wxWin/samples/opengl/penguin/penguin.cpp	2003-09-08 18:11:09.000000000 +0200
@@ -27,6 +27,2 @@
 
-#if !wxUSE_GLCANVAS
-#error Please set wxUSE_GLCANVAS to 1 in setup.h.
-#endif
-
 #include "penguin.h"
@@ -59,2 +55,3 @@
 
+#if wxUSE_GLCANVAS
   frame->SetCanvas( new TestGLCanvas(frame, -1, wxPoint(0, 0), wxSize(200, 200), wxSUNKEN_BORDER) );
@@ -68,2 +65,9 @@
   return TRUE;
+#else
+
+  wxMessageBox( _T("This sample has to be compiled with wxUSE_GLCANVAS"), _T("Building error"), wxOK);
+
+  return FALSE;
+
+#endif
 }
@@ -81,3 +85,5 @@
 {
+#if wxUSE_GLCANVAS
     m_canvas = NULL;
+#endif
 }
@@ -85,3 +91,3 @@
 /* Intercept menu commands */
-void MyFrame::OnExit(wxCommandEvent& event)
+void MyFrame::OnExit(wxCommandEvent& WXUNUSED(event))
 {
@@ -90,2 +96,4 @@
 
+#if wxUSE_GLCANVAS
+
 BEGIN_EVENT_TABLE(TestGLCanvas, wxGLCanvas)
@@ -110,3 +118,3 @@
 
-void TestGLCanvas::OnPaint( wxPaintEvent& event )
+void TestGLCanvas::OnPaint( wxPaintEvent& WXUNUSED(event) )
 {
@@ -172,3 +180,3 @@
 
-void TestGLCanvas::OnEraseBackground(wxEraseEvent& event)
+void TestGLCanvas::OnEraseBackground(wxEraseEvent& WXUNUSED(event))
 {
@@ -251 +259,2 @@
 
+#endif
diff -bu1 -r wxWindows/samples/opengl/penguin/penguin.h wxWin/samples/opengl/penguin/penguin.h
--- wxWindows/samples/opengl/penguin/penguin.h	2003-05-06 09:22:13.000000000 +0200
+++ wxWin/samples/opengl/penguin/penguin.h	2003-09-08 17:22:13.000000000 +0200
@@ -57,2 +57,3 @@
     
+#if wxUSE_GLCANVAS
     void SetCanvas( TestGLCanvas *canvas )    { m_canvas = canvas; }
@@ -62,2 +63,3 @@
     TestGLCanvas*    m_canvas;
+#endif
 
@@ -66,2 +68,4 @@
 
+#if wxUSE_GLCANVAS
+
 class TestGLCanvas: public wxGLCanvas
@@ -89 +93,3 @@
 
+#endif
+

 	  	 
