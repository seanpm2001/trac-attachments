Index: interface/wx/dc.h
===================================================================
--- interface/wx/dc.h	(revision 55014)
+++ interface/wx/dc.h	(working copy)
@@ -445,10 +445,8 @@
         the string. See GetTextExtent() for how to get the dimensions of a text
         string, which can be used to position the text more precisely.
 
-        @note Under wxGTK, the current
-              @ref GetLogicalFunction() "logical function" is used by this
-              function but it is ignored by wxMSW. Thus, you should avoid using
-              logical functions with this function in portable programs.
+        @note The current @ref GetLogicalFunction() "logical function" is 
+              ignored by this function.
     */
     void DrawText(const wxString& text, wxCoord x, wxCoord y);
 
@@ -911,6 +909,7 @@
         determines how a source pixel (from a pen or brush colour, or source
         device context if using Blit()) combines with a destination pixel in
         the current device context.
+        Text drawing is not affected by this function.
 
         The possible values and their meaning in terms of source and
         destination pixel values are as follows:
Index: samples/drawing/drawing.cpp
===================================================================
--- samples/drawing/drawing.cpp	(revision 55014)
+++ samples/drawing/drawing.cpp	(working copy)
@@ -809,20 +824,20 @@
     // test the logical function effect
     wxCoord y = 150;
     dc.SetLogicalFunction(wxINVERT);
-    dc.DrawText( _T("There should be no text below"), 110, 150 );
+    // text drawing should ignore logical function
+    dc.DrawText( _T("There should be a text below"), 110, 150 );
     dc.DrawRectangle( 110, y, 100, height );
 
-    // twice drawn inverted should result in invisible
     y += height;
-    dc.DrawText( _T("Invisible text"), 110, y );
+    dc.DrawText( _T("Visible text"), 110, y );
     dc.DrawRectangle( 110, y, 100, height );
-    dc.DrawText( _T("Invisible text"), 110, y );
+    dc.DrawText( _T("Visible text"), 110, y );
     dc.DrawRectangle( 110, y, 100, height );
     dc.SetLogicalFunction(wxCOPY);
 
     y += height;
     dc.DrawRectangle( 110, y, 100, height );
-    dc.DrawText( _T("Visible text"), 110, y );
+    dc.DrawText( _T("Another visible text"), 110, y );
 }
 
 static const struct
