Index: interface/wx/sizer.h
===================================================================
--- interface/wx/sizer.h	(revision 54463)
+++ interface/wx/sizer.h	(working copy)
@@ -607,6 +607,16 @@
     int GetNonFlexibleGrowMode() const;
 
     /**
+        Returns @true if column @a idx is growable.
+    */
+    bool IsColGrowable(size_t idx);
+
+    /**
+        Returns @true if row @a idx is growable.
+    */
+    bool IsRowGrowable(size_t idx);
+
+    /**
         Specifies that column idx is no longer growable.
     */
     void RemoveGrowableCol(size_t idx);
Index: include/wx/sizer.h
===================================================================
--- include/wx/sizer.h	(revision 54463)
+++ include/wx/sizer.h	(working copy)
@@ -785,6 +785,8 @@
     void AddGrowableCol( size_t idx, int proportion = 0 );
     void RemoveGrowableCol( size_t idx );
 
+    bool IsRowGrowable( size_t idx );
+    bool IsColGrowable( size_t idx );
 
     // the sizer cells may grow in both directions, not grow at all or only
     // grow in one direction but not the other
Index: src/common/sizer.cpp
===================================================================
--- src/common/sizer.cpp	(revision 54463)
+++ src/common/sizer.cpp	(working copy)
@@ -1820,15 +1820,28 @@
     }
 }
 
+bool wxFlexGridSizer::IsRowGrowable( size_t idx )
+{
+    return m_growableRows.Index( idx ) != wxNOT_FOUND;
+}
 
+bool wxFlexGridSizer::IsColGrowable( size_t idx )
+{
+    return m_growableCols.Index( idx ) != wxNOT_FOUND;
+}
+
 void wxFlexGridSizer::AddGrowableRow( size_t idx, int proportion )
 {
+    wxASSERT_MSG( !IsRowGrowable( idx ), 
+                  "AddGrowableRow() called for growable row" );
     m_growableRows.Add( idx );
     m_growableRowsProportions.Add( proportion );
 }
 
 void wxFlexGridSizer::AddGrowableCol( size_t idx, int proportion )
 {
+    wxASSERT_MSG( !IsColGrowable( idx ), 
+                  "AddGrowableCol() called for growable column" );
     m_growableCols.Add( idx );
     m_growableColsProportions.Add( proportion );
 }
