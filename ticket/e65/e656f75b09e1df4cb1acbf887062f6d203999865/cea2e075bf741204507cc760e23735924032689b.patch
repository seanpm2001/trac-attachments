Index: include/wx/gtk/window.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/window.h,v
retrieving revision 1.140
diff -b -u -2 -r1.140 window.h
--- include/wx/gtk/window.h	2006/03/12 14:21:15	1.140
+++ include/wx/gtk/window.h	2006/03/13 06:41:03
@@ -278,4 +278,7 @@
     virtual void DoApplyWidgetStyle(GtkRcStyle *style);
 
+    // sets the border of a GtkScrolledWindow from a wxstyle
+    void GtkScrolledWindowSetBorder(GtkWidget* w, int style);
+
 protected:
     // GtkAdjustment to be used by Scroll{Lines,Pages}
Index: src/gtk/dataview.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/dataview.cpp,v
retrieving revision 1.24
diff -b -u -2 -r1.24 dataview.cpp
--- src/gtk/dataview.cpp	2006/03/09 13:36:49	1.24
+++ src/gtk/dataview.cpp	2006/03/13 06:41:09
@@ -1405,5 +1405,6 @@
 
     m_widget = gtk_scrolled_window_new (NULL, NULL);
-    gtk_scrolled_window_set_shadow_type (GTK_SCROLLED_WINDOW (m_widget), GTK_SHADOW_IN);
+
+    GtkScrolledWindowSetBorder(m_widget, style);
 
     m_treeview = gtk_tree_view_new();
Index: src/gtk/listbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/listbox.cpp,v
retrieving revision 1.172
diff -b -u -2 -r1.172 listbox.cpp
--- src/gtk/listbox.cpp	2006/03/11 13:24:07	1.172
+++ src/gtk/listbox.cpp	2006/03/13 06:41:15
@@ -470,4 +470,7 @@
     }
 
+
+    GtkScrolledWindowSetBorder(m_widget, style);
+
     m_treeview = GTK_TREE_VIEW( gtk_tree_view_new( ) );
 
Index: src/gtk/textctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/textctrl.cpp,v
retrieving revision 1.228
diff -b -u -2 -r1.228 textctrl.cpp
--- src/gtk/textctrl.cpp	2006/03/12 14:14:09	1.228
+++ src/gtk/textctrl.cpp	2006/03/13 06:41:22
@@ -601,6 +601,5 @@
         gtk_text_view_set_wrap_mode( GTK_TEXT_VIEW( m_text ), wrap );
 
-        if (!HasFlag(wxNO_BORDER))
-            gtk_scrolled_window_set_shadow_type( GTK_SCROLLED_WINDOW(m_widget), GTK_SHADOW_IN );
+        GtkScrolledWindowSetBorder(m_widget, style);
 
         gtk_widget_add_events( GTK_WIDGET(m_text), GDK_ENTER_NOTIFY_MASK | GDK_LEAVE_NOTIFY_MASK );
Index: src/gtk/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/window.cpp,v
retrieving revision 1.584
diff -b -u -2 -r1.584 window.cpp
--- src/gtk/window.cpp	2006/03/12 14:21:17	1.584
+++ src/gtk/window.cpp	2006/03/13 06:41:28
@@ -4345,4 +4345,27 @@
 }
 
+void wxWindowGTK::GtkScrolledWindowSetBorder(GtkWidget* w, int wxstyle)
+{
+    //RN: Note that static controls usually have no border on gtk, so maybe
+    //it makes sense to treat that as simply no border at the wx level 
+    //as well...
+    if (!(wxstyle & wxNO_BORDER) && !(wxstyle & wxBORDER_STATIC))
+    {
+        GtkShadowType gtkstyle;
+        
+        if(wxstyle & wxBORDER_RAISED)
+            gtkstyle = GTK_SHADOW_OUT;
+        else if (wxstyle & wxBORDER_SUNKEN)
+            gtkstyle = GTK_SHADOW_IN;
+        else if (wxstyle & wxBORDER_DOUBLE)
+            gtkstyle = GTK_SHADOW_ETCHED_IN;
+        else //default
+            gtkstyle = GTK_SHADOW_IN;
+
+        gtk_scrolled_window_set_shadow_type( GTK_SCROLLED_WINDOW(w), 
+                                             gtkstyle );
+    }
+}
+
 void wxWindowGTK::SetWindowStyleFlag( long style )
 {

 	  	 
