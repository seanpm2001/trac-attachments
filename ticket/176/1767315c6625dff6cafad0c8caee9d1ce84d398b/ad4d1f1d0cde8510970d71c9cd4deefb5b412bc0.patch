Index: src/cocoa/msgdlg.mm
===================================================================
--- src/cocoa/msgdlg.mm	(revision 63686)
+++ src/cocoa/msgdlg.mm	(working copy)
@@ -79,15 +79,18 @@
     const long style = GetMessageDialogStyle();
 
     NSAlertStyle nsStyle = NSInformationalAlertStyle;
-    if (style & wxICON_EXCLAMATION)
-        nsStyle = NSWarningAlertStyle;
-    else if (style & wxICON_HAND)
+
+    switch ( GetEffectiveIcon() )
+    {
+    case wxICON_ERROR:
         nsStyle = NSCriticalAlertStyle;
-    else if (style & wxICON_INFORMATION)
-        nsStyle = NSInformationalAlertStyle;
-    else if (style & wxICON_QUESTION)
-        nsStyle = NSInformationalAlertStyle;
+        break;
 
+    case wxICON_WARNING:
+        nsStyle = NSWarningAlertStyle;
+        break;
+    }
+
     [alert setAlertStyle:nsStyle];
 
 
Index: src/gtk/msgdlg.cpp
===================================================================
--- src/gtk/msgdlg.cpp	(revision 63686)
+++ src/gtk/msgdlg.cpp	(working copy)
@@ -90,20 +90,27 @@
     GtkWindow * const parent = m_parent ? GTK_WINDOW(m_parent->m_widget) : NULL;
 
 #if wxUSE_LIBHILDON || wxUSE_LIBHILDON2
-    const char *stockIcon;
-    if ( m_dialogStyle & wxICON_NONE )
-        stockIcon = "";
-    else if ( m_dialogStyle & wxICON_ERROR )
+    const char *stockIcon = "";
+
+    switch ( GetEffectiveIcon() )
+    {
+    case wxICON_ERROR:
         stockIcon = "qgn_note_gene_syserror";
-    else if ( m_dialogStyle & wxICON_EXCLAMATION )
+        break;
+
+    case wxICON_WARNING:
         stockIcon = "qgn_note_gene_syswarning";
-    else if ( m_dialogStyle & wxICON_INFORMATION )
-        stockIcon = "qgn_note_info";
-    else if ( m_dialogStyle & wxICON_QUESTION )
+        break;
+
+    case wxICON_QUESTION:
         stockIcon = "qgn_note_confirm";
-    else
-        stockIcon = "";
+        break;
 
+    case wxICON_INFORMATION:
+        stockIcon = "qgn_note_info";
+        break;
+    }
+
     // there is no generic note creation function in public API so we have no
     // choice but to use g_object_new() directly
     m_widget = (GtkWidget *)g_object_new
Index: src/palmos/msgdlg.cpp
===================================================================
--- src/palmos/msgdlg.cpp	(revision 63686)
+++ src/palmos/msgdlg.cpp	(working copy)
@@ -63,15 +63,26 @@
     }
 
     // Add the icon styles
-    if (style & wxICON_EXCLAMATION)
-        AlertID=AlertID+0; // Warning
-    else if (style & wxICON_HAND)
-        AlertID=AlertID+1; // Error
-    else if (style & wxICON_INFORMATION)
-        AlertID=AlertID+2; // Information
-    else if (style & wxICON_QUESTION)
-        AlertID=AlertID+3; // Confirmation
+    switch ( GetEffectiveIcon() )
+    {
+    case wxICON_ERROR:
+        AlertID = AlertID + 1;
+        break;
 
+    case wxICON_WARNING:
+        AlertID = AlertID + 0;
+        break;
+
+    case wxICON_QUESTION:
+        AlertID = AlertID + 3;
+        break;
+
+    case wxICON_NONE:
+    case wxICON_INFORMATION:
+        AlertID = AlertID + 2;
+        break;
+    }
+
     // The Palm OS Dialog API does not support custom titles in a dialog box.
     // So we have to set the title by manipulating the resource.
 
Index: src/os2/msgdlg.cpp
===================================================================
--- src/os2/msgdlg.cpp	(revision 63686)
+++ src/os2/msgdlg.cpp	(working copy)
@@ -73,15 +73,26 @@
         else
             ulStyle = MB_OK;
     }
-    if (lStyle & wxICON_EXCLAMATION)
-        ulStyle |= MB_ICONEXCLAMATION;
-    else if (lStyle & wxICON_HAND)
-        ulStyle |= MB_ICONHAND;
-    else if (lStyle & wxICON_INFORMATION)
-        ulStyle |= MB_ICONEXCLAMATION;
-    else if (lStyle & wxICON_QUESTION)
-        ulStyle |= MB_ICONQUESTION;
 
+    switch ( GetEffectiveIcon() )
+    {
+    case wxICON_ERROR:
+        ulStyle |= MB_ERROR;
+        break;
+
+    case wxICON_WARNING:
+        ulStyle |= MB_WARNING;
+        break;
+
+    case wxICON_QUESTION:
+        ulStyle |= MB_QUERY;
+        break;
+
+    case wxICON_INFORMATION:
+        ulStyle |= MB_INFORMATION;
+        break;
+    }
+
     if (hWnd != HWND_DESKTOP)
         ulStyle |= MB_APPLMODAL;
     else
Index: src/msw/msgdlg.cpp
===================================================================
--- src/msw/msgdlg.cpp	(revision 63686)
+++ src/msw/msgdlg.cpp	(working copy)
@@ -508,17 +508,25 @@
     }
 
     // set the icon style
-    if (wxStyle & wxICON_EXCLAMATION)
+    switch ( GetEffectiveIcon() )
+    {
+    case wxICON_ERROR:
+        msStyle |= MB_ICONHAND;
+        break;
+
+    case wxICON_WARNING:
         msStyle |= MB_ICONEXCLAMATION;
-    else if (wxStyle & wxICON_HAND)
-        msStyle |= MB_ICONHAND;
-    else if (wxStyle & wxICON_INFORMATION)
-        msStyle |= MB_ICONINFORMATION;
-    else if (wxStyle & wxICON_QUESTION)
+        break;
+
+    case wxICON_QUESTION:
         msStyle |= MB_ICONQUESTION;
-    else if (!(wxStyle & wxICON_NONE))
-        msStyle |= wxStyle & wxYES ? MB_ICONQUESTION : MB_ICONINFORMATION;
+        break;
 
+    case wxICON_INFORMATION:
+        msStyle |= MB_ICONINFORMATION;
+        break;
+    }
+
     if ( wxStyle & wxSTAY_ON_TOP )
         msStyle |= MB_TOPMOST;
 
Index: src/osx/carbon/msgdlg.cpp
===================================================================
--- src/osx/carbon/msgdlg.cpp	(revision 63686)
+++ src/osx/carbon/msgdlg.cpp	(working copy)
@@ -40,30 +40,49 @@
 
     const long style = GetMessageDialogStyle();
 
-    wxASSERT_MSG( (style & 0x3F) != wxYES, wxT("this style is not supported on Mac") );
+    wxASSERT_MSG( (style & 0x3F) != wxYES,
+        "this style is not supported on Mac" );
 
     AlertType alertType = kAlertPlainAlert;
-    if (style & wxICON_EXCLAMATION)
+
+    switch ( GetEffectiveIcon() )
+    {
+    case wxICON_ERROR:
+        alertType = kAlertStopAlert;
+        break;
+
+    case wxICON_WARNING:
         alertType = kAlertCautionAlert;
-    else if (style & wxICON_HAND)
-        alertType = kAlertStopAlert;
-    else if (style & wxICON_INFORMATION)
+        break;
+
+    case wxICON_QUESTION:
+    case wxICON_INFORMATION:
         alertType = kAlertNoteAlert;
-    else if (style & wxICON_QUESTION)
-        alertType = kAlertNoteAlert;
+        break;
+    }
 
-
     // work out what to display
-    // if the extended text is empty then we use the caption as the title
-    // and the message as the text (for backwards compatibility)
-    // but if the extended message is not empty then we use the message as the title
-    // and the extended message as the text because that makes more sense
+    // (the standard alert has two slots [title, text]
+    //  for the three wxStrings [caption, message, extended message])
+    //
+    // if the extended text is empty we use the caption and
+    // the message (for backwards compatibility)
+    //
+    // if the extended text is not empty we ignore the caption
+    // and use the message and the extended message
 
     wxString msgtitle,msgtext;
-    if(m_extendedMessage.IsEmpty())
+    if ( m_extendedMessage.IsEmpty() )
     {
-        msgtitle = m_caption;
-        msgtext  = m_message;
+        if ( m_caption.IsEmpty() )
+        {
+            msgtitle = m_message;
+        }
+        else
+        {
+            msgtitle = m_caption;
+            msgtext  = m_message;
+        }
     }
     else
     {
@@ -88,7 +107,7 @@
 
         int buttonId[4] = { 0, 0, 0, wxID_CANCEL /* time-out */ };
 
-        if (style & wxYES_NO)
+        if ( style & wxYES_NO )
         {
             if ( style & wxNO_DEFAULT )
             {
Index: include/wx/msgdlg.h
===================================================================
--- include/wx/msgdlg.h	(revision 63686)
+++ include/wx/msgdlg.h	(working copy)
@@ -168,7 +168,27 @@
 protected:
     long GetMessageDialogStyle() const { return m_dialogStyle; }
 
+    // based on message dialog style, returns exactly one of:
+    // wxICON_NONE, wxICON_ERROR, wxICON_WARNING, wxICON_QUESTION, wxICON_INFORMATION
+    long GetEffectiveIcon() const
+{
+    if ( m_dialogStyle & wxICON_NONE )
+        return wxICON_NONE;
+    else if ( m_dialogStyle & wxICON_ERROR )
+        return wxICON_ERROR;
+    else if ( m_dialogStyle & wxICON_WARNING )
+        return wxICON_WARNING;
+    else if ( m_dialogStyle & wxICON_QUESTION )
+        return wxICON_QUESTION;
+    else if ( m_dialogStyle & wxICON_INFORMATION )
+        return wxICON_INFORMATION;
+    else if ( m_dialogStyle & wxYES )
+        return wxICON_QUESTION;
+    else
+        return wxICON_INFORMATION;
+}
 
+
     // for the platforms not supporting separate main and extended messages
     // this function should be used to combine both of them in a single string
     wxString GetFullMessage() const
