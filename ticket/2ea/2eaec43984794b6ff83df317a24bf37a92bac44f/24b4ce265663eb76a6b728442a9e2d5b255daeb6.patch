--- a/tests/strings/vararg.cpp
+++ b/tests/strings/vararg.cpp
@@ -196,6 +196,7 @@ void VarArgTestCase::ArgsValidation()
     wxString::Format("a string(%s,%s), ptr %p, int %i",
                      wxString(), "foo", "char* as pointer", 1);
 
+#if !defined(_FORTIFY_SOURCE) || _FORTIFY_SOURCE < 2
 #if !wxCHECK_VISUALC_VERSION(8)
     // Microsoft has helpfully disabled support for "%n" in their CRT by
     // default starting from VC8 and somehow even calling
@@ -204,6 +205,7 @@ void VarArgTestCase::ArgsValidation()
     wxString::Format("foo%i%n", 42, &written);
     CPPUNIT_ASSERT_EQUAL( 5, written );
 #endif // VC8+
+#endif
 
     // but these are not:
     WX_ASSERT_FAILS_WITH_ASSERT( wxString::Format("%i: too many arguments", 42, 1, 2, 3) );
@@ -212,9 +214,11 @@ void VarArgTestCase::ArgsValidation()
 
     WX_ASSERT_FAILS_WITH_ASSERT( wxString::Format("%d", ptr) );
 
+#if !defined(_FORTIFY_SOURCE) || _FORTIFY_SOURCE < 2
     WX_ASSERT_FAILS_WITH_ASSERT( wxString::Format("foo%i%n", &written) );
     WX_ASSERT_FAILS_WITH_ASSERT( wxString::Format("foo%n", ptr) );
     WX_ASSERT_FAILS_WITH_ASSERT( wxString::Format("foo%i%n", 42, &swritten) );
+#endif
 
     // the following test (correctly) fails at compile-time with <type_traits>
     // and it also (wrongly) fails when using VC6 because it somehow tries to
