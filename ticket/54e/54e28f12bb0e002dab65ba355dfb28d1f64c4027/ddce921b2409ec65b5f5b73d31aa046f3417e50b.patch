--- ./build/bakefiles/build_cfg.bkl	2008-09-15 13:28:15.000000000 +0400
+++ ../../wxWidgets-2.8.9/build/bakefiles/build_cfg.bkl	2008-10-29 16:58:57.000000000 +0300
@@ -9,7 +9,7 @@
     -->
 
     <if cond="FORMAT not in ['autoconf','msvc6prj','msevc4prj','msvs2005prj','cbuilderx'] and
-              TOOLKIT in ['PM','MSW','MGL','MOTIF']">
+              TOOLKIT in ['PM','MSW','MGL','MOTIF', 'WINCE']">
 
         <set var="BUILD_CFG_FILE" make_var="1">
             $(SETUPHDIR)$(DIRSEP)build.cfg
--- ./build/bakefiles/files.bkl	2008-09-15 13:28:16.000000000 +0400
+++ ../../wxWidgets-2.8.9/build/bakefiles/files.bkl	2008-11-26 00:44:19.000000000 +0300
@@ -104,9 +104,13 @@ IMPORTANT: please read docs/tech/tn0016.
     src/msw/volume.cpp
 </set>
 <set var="BASE_WINCE_SRC" hints="files">
-    <if cond="TOOLKIT=='WINCE'">src/msw/wince/time.cpp</if>
+<!--    <if cond="TOOLKIT=='WINCE'">src/msw/wince/time.cpp</if> -->
+    src/msw/wince/time.cpp
+    src/msw/wince/filefnwce.cpp
+    src/msw/wince/crt.cpp
 </set>
 <set var="BASE_WIN32_HDR" hints="files">
+    wx/generic/dirdlgg.h
     wx/msw/apptrait.h
     wx/msw/apptbase.h
     wx/msw/chkconf.h
@@ -130,6 +134,7 @@ IMPORTANT: please read docs/tech/tn0016.
 </set>
 <set var="BASE_WINCE_HDR" hints="files">
     <if cond="TOOLKIT=='WINCE'">
+        wx/msw/wince/wince.rc
         wx/msw/wince/time.h
         wx/msw/wince/chkconf.h
     </if>
@@ -1727,15 +1732,16 @@ IMPORTANT: please read docs/tech/tn0016.
     src/generic/fontdlgg.cpp
     src/msw/wince/checklst.cpp
     src/msw/wince/choicece.cpp
-    src/msw/wince/crt.cpp
+<!--    src/msw/wince/crt.cpp -->
     src/msw/wince/filedlgwce.cpp
-    src/msw/wince/filefnwce.cpp
+<!--    src/msw/wince/filefnwce.cpp -->
     src/msw/wince/helpwce.cpp
     src/msw/wince/menuce.cpp
     src/msw/wince/tbarwce.cpp
     src/msw/wince/textctrlce.cpp
 </set>
 <set var="WINCE_HDR" hints="files">
+    wx/generic/dirdlgg.h
     wx/generic/fdrepdlg.h
     wx/generic/filedlgg.h
     wx/generic/fontdlgg.h
@@ -1747,6 +1753,9 @@ IMPORTANT: please read docs/tech/tn0016.
     wx/msw/wince/tbarwce.h
     wx/msw/wince/textctrlce.h
     wx/msw/wince/resources.h
+
+    wx/msw/wince/wince.rc
+    wx/msw/wince/smartphone.rc
 </set>
 
 
diff -uBpr ./include/wx/chkconf.h ../../wxWidgets-2.8.9/include/wx/chkconf.h
--- ./include/wx/chkconf.h	2008-09-15 13:28:12.000000000 +0400
+++ ../../wxWidgets-2.8.9/include/wx/chkconf.h	2008-10-29 17:26:49.000000000 +0300
@@ -91,7 +91,7 @@
 #ifndef wxUSE_CRASHREPORT
     /* this one is special: as currently it is Windows-only, don't force it
        to be defined on other platforms */
-#   if defined(wxABORT_ON_CONFIG_ERROR) && defined(__WXMSW__)
+#   if defined(wxABORT_ON_CONFIG_ERROR) && defined(__WXMSW__) && !defined(__WXWINCE__)
 #       error "wxUSE_CRASHREPORT must be defined."
 #   else
 #       define wxUSE_CRASHREPORT 0
diff -uBpr ./include/wx/defs.h ../../wxWidgets-2.8.9/include/wx/defs.h
--- ./include/wx/defs.h	2008-09-15 13:28:13.000000000 +0400
+++ ../../wxWidgets-2.8.9/include/wx/defs.h	2008-10-29 17:08:43.000000000 +0300
@@ -37,6 +37,7 @@
          !defined(__WXMGL__)   && \
          !defined(__WXDFB__)   && \
          !defined(__WXX11__)   && \
+	 !defined(__WXWINCE__) && \
           wxUSE_GUI
 #       ifdef __UNIX__
 #           error "No Target! You should use wx-config program for compilation flags!"
diff -uBpr ./include/wx/html/htmlcell.h ../../wxWidgets-2.8.9/include/wx/html/htmlcell.h
--- ./include/wx/html/htmlcell.h	2008-09-15 13:28:23.000000000 +0400
+++ ../../wxWidgets-2.8.9/include/wx/html/htmlcell.h	2008-11-29 20:09:51.000000000 +0300
@@ -609,7 +608,11 @@ protected:
     DECLARE_NO_COPY_CLASS(wxHtmlWidgetCell)
 };
 
-
+#ifdef __MINGW32CE__
+#ifdef SetEvent
+#undef SetEvent
+#endif
+#endif
 
 //--------------------------------------------------------------------------------
 // wxHtmlLinkInfo
@@ -630,7 +633,7 @@ public:
           { m_Href = l.m_Href, m_Target = l.m_Target, m_Event = l.m_Event;
             m_Cell = l.m_Cell; return *this; }
 
-    void SetEvent(const wxMouseEvent *e) { m_Event = e; }
+    void SetEvent(const wxMouseEvent *e)  { m_Event = e; }
     void SetHtmlCell(const wxHtmlCell *e) { m_Cell = e; }
 
     wxString GetHref() const { return m_Href; }
diff -uBpr ./include/wx/msw/frame.h ../../wxWidgets-2.8.9/include/wx/msw/frame.h
--- ./include/wx/msw/frame.h	2008-09-15 13:28:56.000000000 +0400
+++ ../../wxWidgets-2.8.9/include/wx/msw/frame.h	2008-11-28 03:41:15.000000000 +0300
@@ -117,6 +117,10 @@ protected:
     virtual void DoGetClientSize(int *width, int *height) const;
     virtual void DoSetClientSize(int width, int height);
 
+#ifdef __WXWINCE__
+    virtual void DoCentre(int dir) {}
+#endif
+
 #if wxUSE_MENUS_NATIVE
     // perform MSW-specific action when menubar is changed
     virtual void AttachMenuBar(wxMenuBar *menubar);
diff -uBpr ./include/wx/msw/wince/net.h ../../wxWidgets-2.8.9/include/wx/msw/wince/net.h
--- ./include/wx/msw/wince/net.h	2008-09-15 13:28:57.000000000 +0400
+++ ../../wxWidgets-2.8.9/include/wx/msw/wince/net.h	2008-10-29 17:10:18.000000000 +0300
@@ -12,9 +12,9 @@
 
 */
 
-struct servent * WINSOCKAPI getservbyport(int port, const char * proto) ;
+struct servent * WINAPI getservbyport(int port, const char * proto) ;
 
-struct servent * WINSOCKAPI getservbyname(const char * name,
+struct servent * WINAPI getservbyname(const char * name,
                                           const char * proto) ;
-struct protoent * WINSOCKAPI getprotobynumber(int proto) ;
+struct protoent * WINAPI getprotobynumber(int proto) ;
 
diff -uBpr ./include/wx/msw/wince/wince.rc ../../wxWidgets-2.8.9/include/wx/msw/wince/wince.rc
--- ./include/wx/msw/wince/wince.rc	2008-09-15 13:28:57.000000000 +0400
+++ ../../wxWidgets-2.8.9/include/wx/msw/wince/wince.rc	2008-11-21 05:34:56.000000000 +0300
@@ -18,7 +18,7 @@ END
 BEGIN
     POPUP "Dummy"
     BEGIN
-    MENUITEM "Dummy" 99
+    MENUITEM "Dummy", 99
     END
 END
 
diff -uBpr ./include/wx/msw/winundef.h ../../wxWidgets-2.8.9/include/wx/msw/winundef.h
--- ./include/wx/msw/winundef.h	2008-09-15 13:28:57.000000000 +0400
+++ ../../wxWidgets-2.8.9/include/wx/msw/winundef.h	2008-10-29 17:35:09.000000000 +0300
@@ -133,7 +133,7 @@
 
 // GetCharWidth
 
-#ifdef GetCharWidth
+#if defined(GetCharWidth) && !defined(__WXWINCE__)
    #undef GetCharWidth
    inline BOOL  GetCharWidth(HDC dc, UINT first, UINT last, LPINT buffer)
    {
diff -uBpr ./include/wx/wxchar.h ../../wxWidgets-2.8.9/include/wx/wxchar.h
--- ./include/wx/wxchar.h	2008-09-15 13:28:14.000000000 +0400
+++ ../../wxWidgets-2.8.9/include/wx/wxchar.h	2008-10-29 18:34:02.000000000 +0300
@@ -1238,6 +1238,36 @@ WXDLLIMPEXP_BASE double   wxAtof(const w
     #define wxNEED_WXSYSTEM
 #endif
 
+#if defined (__MINGW32CE__) && wxUSE_UNICODE
+    #if defined (wxAtoi)
+    #undef wxAtoi
+    #endif
+
+    #if defined (wxAtol)
+    #undef wxAtol
+    #endif
+
+    #ifndef wxNEED_WXATOI_MINGW32CE
+    #define wxNEED_WXATOI_MINGW32CE
+    #endif
+
+    #ifndef wxNEED_WXATOL_MINGW32CE
+    #define wxNEED_WXATOL_MINGW32CE
+    #endif
+
+    #if !defined(_tsystem)
+    #define wxNEED_WXSYSTEM
+    #endif
+#endif
+
+#ifdef wxNEED_WXATOI_MINGW32CE
+WXDLLIMPEXP_BASE int      wxAtoi(const wxChar *psz);
+#endif
+
+#ifdef wxNEED_WXATOL_MINGW32CE
+WXDLLIMPEXP_BASE long     wxAtol(const wxChar *psz);
+#endif
+
 #ifdef wxNEED_WX_STDLIB_H
 WXDLLIMPEXP_BASE int      wxAtoi(const wxChar *psz);
 WXDLLIMPEXP_BASE long     wxAtol(const wxChar *psz);
diff -uBpr ./src/common/dcbase.cpp ../../wxWidgets-2.8.9/src/common/dcbase.cpp
--- ./src/common/dcbase.cpp	2008-09-15 13:28:18.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/common/dcbase.cpp	2008-11-29 19:27:23.000000000 +0300
@@ -904,7 +904,7 @@ void wxDCBase::DoDrawEllipticArcRot( wxC
     int n = list.GetCount();
     wxPoint *points = new wxPoint[n];
     int i = 0;
-    wxNode* node = 0;
+    wxList::compatibility_iterator node;
     for ( node = list.GetFirst(); node; node = node->GetNext(), i++ )
     {
         wxPoint *point = (wxPoint *)node->GetData();
@@ -940,7 +940,7 @@ void wxDCBase::Rotate( wxList* points, d
         double pi(M_PI);
         double dSinA = -sin(angle*2.0*pi/360.0);
         double dCosA = cos(angle*2.0*pi/360.0);
-        for ( wxNode* node = points->GetFirst(); node; node = node->GetNext() )
+        for ( wxList::compatibility_iterator node = points->GetFirst(); node; node = node->GetNext() )
         {
             wxPoint* point = (wxPoint*)node->GetData();
 
@@ -1078,7 +1078,7 @@ void wxDCBase::CalculateEllipticPoints( 
         bool bForceTurn = ( sq == eq && sa > ea );
         while( !bReady )
         {
-            for( wxNode *node = pointsarray[q].GetFirst(); node; node = node->GetNext() )
+            for( wxList::compatibility_iterator node = pointsarray[q].GetFirst(); node; node = node->GetNext() )
             {
                 // once: go to starting point in start quadrant
                 if( !bStarted &&
@@ -1122,7 +1122,7 @@ void wxDCBase::CalculateEllipticPoints( 
         // delete points
         for( q = 0; q < 4; ++q )
         {
-            for( wxNode *node = pointsarray[q].GetFirst(); node; node = node->GetNext() )
+            for( wxList::compatibility_iterator node = pointsarray[q].GetFirst(); node; node = node->GetNext() )
             {
                 wxPoint *p = (wxPoint *)node->GetData();
                 delete p;
@@ -1131,7 +1131,7 @@ void wxDCBase::CalculateEllipticPoints( 
     }
     else
     {
-        wxNode* node;
+        wxList::compatibility_iterator node;
         // copy whole ellipse, wxPoints will be deleted outside
         for( node = pointsarray[0].GetFirst(); node; node = node->GetNext() )
         {
diff -uBpr ./src/common/filefn.cpp ../../wxWidgets-2.8.9/src/common/filefn.cpp
--- ./src/common/filefn.cpp	2008-09-15 13:28:18.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/common/filefn.cpp	2008-10-29 17:37:26.000000000 +0300
@@ -48,7 +48,7 @@
 #include <stdlib.h>
 #include <string.h>
 #if !wxONLY_WATCOM_EARLIER_THAN(1,4)
-    #if !(defined(_MSC_VER) && (_MSC_VER > 800))
+    #if !(defined(_MSC_VER) && (_MSC_VER > 800)) && !defined(__WXWINCE__)
         #include <errno.h>
     #endif
 #endif
diff -uBpr ./src/common/filename.cpp ../../wxWidgets-2.8.9/src/common/filename.cpp
--- ./src/common/filename.cpp	2008-09-15 13:28:18.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/common/filename.cpp	2008-10-29 17:16:51.000000000 +0300
@@ -89,6 +89,7 @@
 
 #ifdef __WXWINCE__
 #include "wx/msw/private.h"
+#include <fcntl.h>
 #endif
 
 #if defined(__WXMAC__)
diff -uBpr ./src/common/utilscmn.cpp ../../wxWidgets-2.8.9/src/common/utilscmn.cpp
--- ./src/common/utilscmn.cpp	2008-09-15 13:28:18.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/common/utilscmn.cpp	2008-10-29 19:04:45.000000000 +0300
@@ -62,7 +62,7 @@
 #include <string.h>
 
 #if !wxONLY_WATCOM_EARLIER_THAN(1,4)
-    #if !(defined(_MSC_VER) && (_MSC_VER > 800))
+    #if !(defined(_MSC_VER) && (_MSC_VER > 800)) && !defined(__WXWINCE__)
         #include <errno.h>
     #endif
 #endif
diff -uBpr ./src/common/wxchar.cpp ../../wxWidgets-2.8.9/src/common/wxchar.cpp
--- ./src/common/wxchar.cpp	2008-09-15 13:28:18.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/common/wxchar.cpp	2008-10-29 18:46:54.000000000 +0300
@@ -2135,17 +2135,27 @@ double   WXDLLEXPORT wxAtof(const wxChar
 }
 #endif
 
-#ifdef wxNEED_WX_STDLIB_H
+#if defined (wxNEED_WX_STDLIB_H ) || defined (wxNEED_WXATOI_MINGW32CE)
+
 int      WXDLLEXPORT wxAtoi(const wxChar *psz)
 {
   return atoi(wxConvLibc.cWX2MB(psz));
 }
 
+#endif
+
+
+#if defined (wxNEED_WX_STDLIB_H ) || defined (wxNEED_WXATOL_MINGW32CE)
+
 long     WXDLLEXPORT wxAtol(const wxChar *psz)
 {
   return atol(wxConvLibc.cWX2MB(psz));
 }
 
+#endif
+
+#if defined (wxNEED_WX_STDLIB_H)
+
 wxChar * WXDLLEXPORT wxGetenv(const wxChar *name)
 {
 #if wxUSE_UNICODE
@@ -2164,7 +2174,11 @@ wxChar * WXDLLEXPORT wxGetenv(const wxCh
 #ifdef wxNEED_WXSYSTEM
 int WXDLLEXPORT wxSystem(const wxChar *psz)
 {
+#if defined(__WXWINCE__)
+    return 0;
+#else
     return system(wxConvLibc.cWX2MB(psz));
+#endif
 }
 #endif // wxNEED_WXSYSTEM
 
diff -uBpr ./src/generic/dcpsg.cpp ../../wxWidgets-2.8.9/src/generic/dcpsg.cpp
--- ./src/generic/dcpsg.cpp	2008-09-15 13:28:20.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/generic/dcpsg.cpp	2008-10-29 20:09:14.000000000 +0300
@@ -37,7 +37,7 @@
 
 WXDLLIMPEXP_DATA_CORE(int) wxPageNumber;
 
-#ifdef __WXMSW__
+#if (defined (__WXMSW__) || defined(__WXWINCE__)) && !defined(__MINGW32CE__)
 
 #ifdef DrawText
 #undef DrawText
@@ -1475,6 +1475,7 @@ void wxPostScriptDC::DoDrawSpline( wxLis
 #endif // wxUSE_SPLINES
 
 wxCoord wxPostScriptDC::GetCharWidth() const
+//wxCoord wxPostScriptDC::GetCharWidth() const
 {
     // Chris Breeze: reasonable approximation using wxMODERN/Courier
     return (wxCoord) (GetCharHeight() * 72.0 / 120.0);
diff -uBpr ./src/generic/fontdlgg.cpp ../../wxWidgets-2.8.9/src/generic/fontdlgg.cpp
--- ./src/generic/fontdlgg.cpp	2008-09-15 13:28:20.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/generic/fontdlgg.cpp	2008-11-16 00:35:44.000000000 +0300
@@ -33,6 +33,7 @@
     #include "wx/settings.h"
     #include "wx/cmndata.h"
     #include "wx/sizer.h"
+    #include "wx/textctrl.h"
 #endif
 
 #include <string.h>
diff -uBpr ./src/jpeg/jconfig.vc ../../wxWidgets-2.8.9/src/jpeg/jconfig.vc
--- ./src/jpeg/jconfig.vc	2008-09-15 13:28:39.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/jpeg/jconfig.vc	2008-10-29 17:13:32.000000000 +0300
@@ -43,3 +43,8 @@ typedef unsigned char boolean;
 #undef PROGRESS_REPORT		/* optional */
 
 #endif /* JPEG_CJPEG_DJPEG */
+
+#ifdef _WIN32_WCE
+#define NO_GETENV 1
+#endif
+
diff -uBpr ./src/jpeg/jmemmgr.c ../../wxWidgets-2.8.9/src/jpeg/jmemmgr.c
--- ./src/jpeg/jmemmgr.c	2008-09-15 13:28:39.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/jpeg/jmemmgr.c	2008-10-30 00:52:57.000000000 +0300
@@ -30,6 +30,10 @@
 #include "jpeglib.h"
 #include "jmemsys.h"		/* import the system-dependent declarations */
 
+#if !defined (NO_GETENV) && defined(__MINGW32CE__)
+#define NO_GETENV
+#endif
+
 #ifndef NO_GETENV
 #ifndef HAVE_STDLIB_H		/* <stdlib.h> should declare getenv() */
 extern char * getenv JPP((const char * name));
diff -uBpr ./src/msw/dcprint.cpp ../../wxWidgets-2.8.9/src/msw/dcprint.cpp
--- ./src/msw/dcprint.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/dcprint.cpp	2008-10-29 19:16:12.000000000 +0300
@@ -321,14 +321,22 @@ WXHDC WXDLLEXPORT wxGetPrinterDC(const w
 
     HGLOBAL hDevMode = (HGLOBAL)(DWORD) data->GetDevMode();
 
+#if !defined(__MINGW32CE__)
     DEVMODE *lpDevMode = hDevMode ? (DEVMODE *)::GlobalLock(hDevMode) : NULL;
+#else
+    DEVMODE *lpDevMode = hDevMode ? (DEVMODE *)GlobalLock(hDevMode) : NULL;
+#endif
 
     HDC hDC = ::CreateDC(NULL, deviceName, NULL, lpDevMode);
     if ( !hDC )
         wxLogLastError(_T("CreateDC(printer)"));
 
     if ( lpDevMode )
+#if !defined(__MINGW32CE__)
         ::GlobalUnlock(hDevMode);
+#else
+        GlobalUnlock(hDevMode);
+#endif
 
     return (WXHDC) hDC;
 #endif // PostScript/Windows printing
diff -uBpr ./src/msw/display.cpp ../../wxWidgets-2.8.9/src/msw/display.cpp
--- ./src/msw/display.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/display.cpp	2008-10-30 01:57:00.000000000 +0300
@@ -507,6 +507,9 @@ int wxDisplayFactoryWin32Base::ms_suppor
 
 wxDisplayFactoryWin32Base::wxDisplayFactoryWin32Base()
 {
+#ifdef __WXWINCE__
+    return;
+#else
     if ( ms_supportsMultimon == -1 )
     {
         ms_supportsMultimon = 0;
@@ -535,6 +538,7 @@ wxDisplayFactoryWin32Base::wxDisplayFact
         // we can safely let dllUser32 go out of scope, the DLL itself will
         // still remain loaded as all Win32 programs use it
     }
+#endif
 }
 
 void wxDisplayFactoryWin32Base::Clear()
@@ -589,6 +593,9 @@ int wxDisplayFactoryWin32Base::GetFromWi
 
 wxDisplayFactoryMultimon::wxDisplayFactoryMultimon()
 {
+#ifdef __WXWINCE__
+    return;
+#else
     if ( !ms_supportsMultimon )
         return;
 
@@ -610,6 +617,7 @@ wxDisplayFactoryMultimon::wxDisplayFacto
     {
         wxLogLastError(wxT("EnumDisplayMonitors"));
     }
+#endif
 }
 
 /* static */
@@ -743,6 +751,16 @@ bool wxDisplayImplMultimon::ChangeMode(c
     static ChangeDisplaySettingsEx_t pfnChangeDisplaySettingsEx = NULL;
     if ( !pfnChangeDisplaySettingsEx )
     {
+
+#ifdef __WXWINCE__
+	wxDynamicLibrary dllUser32(_T("user32.dll"));
+	if ( dllUser32.IsLoaded() )
+	{
+	    pfnChangeDisplaySettingsEx = 
+		(ChangeDisplaySettingsEx_t)
+		dllUser32.GetSymbol(_T("ChangeDisplaySettingsEx"));
+	}
+#else
         wxDynamicLibrary dllUser32(_T("user32.dll"));
         if ( dllUser32.IsLoaded() )
         {
@@ -751,14 +769,13 @@ bool wxDisplayImplMultimon::ChangeMode(c
         }
         //else: huh, no user32.dll??
 
-#ifndef __WXWINCE__
         if ( !pfnChangeDisplaySettingsEx )
         {
             // we must be under Win95 and so there is no multiple monitors
             // support anyhow
             pfnChangeDisplaySettingsEx = ChangeDisplaySettingsExForWin95;
         }
-#endif // !__WXWINCE__
+#endif 
     }
 
     // do change the mode
diff -uBpr ./src/msw/font.cpp ../../wxWidgets-2.8.9/src/msw/font.cpp
--- ./src/msw/font.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/font.cpp	2008-10-29 19:20:19.000000000 +0300
@@ -90,6 +90,10 @@ wxEND_HANDLERS_TABLE()
     IMPLEMENT_DYNAMIC_CLASS(wxFont, wxGDIObject)
 #endif
 
+// according to wingdi.h
+#ifndef CLEARTYPE_QUALITY
+#define CLEARTYPE_QUALITY 5
+#endif
 
 // ----------------------------------------------------------------------------
 // constants
diff -uBpr ./src/msw/gsockmsw.cpp ../../wxWidgets-2.8.9/src/msw/gsockmsw.cpp
--- ./src/msw/gsockmsw.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/gsockmsw.cpp	2008-10-29 19:24:50.000000000 +0300
@@ -121,10 +121,12 @@ typedef int (PASCAL *WSAAsyncSelectFunc)
 #else
 /* Typedef the needed function prototypes and the WSANETWORKEVENTS structure
 */
+#if defined(__VISUALC__) || !defined(__MINGW32CE__)
 typedef struct _WSANETWORKEVENTS {
        long lNetworkEvents;
        int iErrorCode[10];
 } WSANETWORKEVENTS, FAR * LPWSANETWORKEVENTS;
+#endif
 typedef HANDLE (PASCAL *WSACreateEventFunc)(void);
 typedef int (PASCAL *WSAEventSelectFunc)(SOCKET,HANDLE,long);
 typedef int (PASCAL *WSAWaitForMultipleEventsFunc)(long,HANDLE,BOOL,long,BOOL);
diff -uBpr ./src/msw/menu.cpp ../../wxWidgets-2.8.9/src/msw/menu.cpp
--- ./src/msw/menu.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/menu.cpp	2008-10-29 21:06:34.000000000 +0300
@@ -439,7 +439,7 @@ bool wxMenu::DoInsertOrAppend(wxMenuItem
 
             // first compile-time check
             // MIIM_BITMAP only works under Win98/2000+
-#if defined(MIIM_BITMAP) && (_WIN32_WINNT >= 0x0500)
+#if defined(MIIM_BITMAP) && (_WIN32_WINNT >= 0x0500) && !defined(__WXWINCE__)
             WinStruct<wxMENUITEMINFO_> mii;
             if ( wxGetWinVersion() >= wxWinVersion_98 )
             {
diff -uBpr ./src/msw/notebook.cpp ../../wxWidgets-2.8.9/src/msw/notebook.cpp
--- ./src/msw/notebook.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/notebook.cpp	2008-11-20 22:23:45.000000000 +0300
@@ -16,6 +16,10 @@
     #pragma hdrstop
 #endif
 
+#ifdef __WXWINCE__
+    #include <aygshell.h>
+#endif
+
 #if wxUSE_NOTEBOOK
 
 #include "wx/notebook.h"
diff -uBpr ./src/msw/ownerdrw.cpp ../../wxWidgets-2.8.9/src/msw/ownerdrw.cpp
--- ./src/msw/ownerdrw.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/ownerdrw.cpp	2008-10-29 21:08:32.000000000 +0300
@@ -368,6 +368,7 @@ bool wxOwnerDrawn::OnDrawItem(wxDC& dc,
 
         SIZE sizeRect;
         ::GetTextExtentPoint32(hdc, strMenuText.c_str(), strMenuText.length(), &sizeRect);
+#ifndef _WIN32_WCE
         ::DrawState(hdc, NULL, NULL,
                     (LPARAM)strMenuText.c_str(), strMenuText.length(),
                     xText, rc.y + (int) ((rc.GetHeight()-sizeRect.cy)/2.0), // centre text vertically
@@ -375,7 +376,7 @@ bool wxOwnerDrawn::OnDrawItem(wxDC& dc,
                     DST_PREFIXTEXT |
                     (((st & wxODDisabled) && !(st & wxODSelected)) ? DSS_DISABLED : 0) |
                     (((st & wxODHidePrefix) && !wxMSWSystemMenuFontModule::ms_showCues) ? 512 : 0)); // 512 == DSS_HIDEPREFIX
-
+#endif
         // ::SetTextAlign(hdc, TA_RIGHT) doesn't work with DSS_DISABLED or DSS_MONO
         // as the last parameter in DrawState() (at least with Windows98). So we have
         // to take care of right alignment ourselves.
@@ -385,12 +386,14 @@ bool wxOwnerDrawn::OnDrawItem(wxDC& dc,
             dc.GetTextExtent(m_strAccel, &accel_width, &accel_height);
             // right align accel string with right edge of menu ( offset by the
             // margin width )
+#ifndef _WIN32_WCE
             ::DrawState(hdc, NULL, NULL,
                     (LPARAM)m_strAccel.c_str(), m_strAccel.length(),
                     rc.GetWidth()-16-accel_width, rc.y+(int) ((rc.GetHeight()-sizeRect.cy)/2.0),
                     0, 0,
                     DST_TEXT |
                     (((st & wxODDisabled) && !(st & wxODSelected)) ? DSS_DISABLED : 0));
+#endif
         }
 
         (void)SetBkMode(hdc, nPrevMode);
diff -uBpr ./src/msw/printdlg.cpp ../../wxWidgets-2.8.9/src/msw/printdlg.cpp
--- ./src/msw/printdlg.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/printdlg.cpp	2008-10-29 19:32:42.000000000 +0300
@@ -199,11 +199,15 @@ bool wxWindowsPrintNativeData::TransferT
         } else {
             data.SetBin(wxPRINTBIN_DEFAULT);
         }
+
+#if !defined (__MINGW32CE__)
         if (devMode->dmFields & DM_MEDIATYPE)
         {
             wxASSERT( (int)devMode->dmMediaType != wxPRINTMEDIA_DEFAULT );
             data.SetMedia(devMode->dmMediaType);
         }
+#endif
+
         //// Printer name
         if (devMode->dmDeviceName[0] != 0)
             // This syntax fixes a crash when using VS 7.1
@@ -556,8 +560,10 @@ bool wxWindowsPrintNativeData::TransferF
         }
         if (data.GetMedia() != wxPRINTMEDIA_DEFAULT)
         {
+#if !defined (__MINGW32CE__)
             devMode->dmMediaType = data.GetMedia();
             devMode->dmFields |= DM_MEDIATYPE;
+#endif
         }
         GlobalUnlock(hDevMode);
     }
diff -uBpr ./src/msw/settings.cpp ../../wxWidgets-2.8.9/src/msw/settings.cpp
--- ./src/msw/settings.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/settings.cpp	2008-10-29 19:36:35.000000000 +0300
@@ -41,6 +41,10 @@
 
 #include "wx/fontutil.h"
 
+#ifndef SYS_COLOR_INDEX_FLAG
+#define SYS_COLOR_INDEX_FLAG 0x40000000
+#endif
+
 // ----------------------------------------------------------------------------
 // private classes
 // ----------------------------------------------------------------------------
diff -uBpr ./src/msw/stdpaths.cpp ../../wxWidgets-2.8.9/src/msw/stdpaths.cpp
--- ./src/msw/stdpaths.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/stdpaths.cpp	2008-10-29 18:49:33.000000000 +0300
@@ -131,7 +131,7 @@ static void ResolveShellFunctions()
 
 #if wxUSE_UNICODE
     #ifdef __WXWINCE__
-        static const wchar_t UNICODE_SUFFIX = L''; // WinCE SH functions don't seem to have 'W'
+        static const wchar_t UNICODE_SUFFIX = L'\0'; // WinCE SH functions don't seem to have 'W'
     #else
         static const wchar_t UNICODE_SUFFIX = L'W';
     #endif
diff -uBpr ./src/msw/taskbar.cpp ../../wxWidgets-2.8.9/src/msw/taskbar.cpp
--- ./src/msw/taskbar.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/taskbar.cpp	2008-10-30 01:19:34.000000000 +0300
@@ -163,8 +163,13 @@ bool wxTaskBarIcon::SetIcon(const wxIcon
         wxStrncpy(notifyData.szTip, tooltip.c_str(), WXSIZEOF(notifyData.szTip));
     }
 
-    bool ok = Shell_NotifyIcon(m_iconAdded ? NIM_MODIFY
+    bool ok = 
+#ifndef __MINGW32CE__
+		Shell_NotifyIcon(m_iconAdded ? NIM_MODIFY
                                            : NIM_ADD, &notifyData) != 0;
+#else
+	true;
+#endif
 
     if ( !m_iconAdded && ok )
         m_iconAdded = true;
@@ -181,7 +186,12 @@ bool wxTaskBarIcon::RemoveIcon()
 
     NotifyIconData notifyData(GetHwndOf(m_win));
 
-    return Shell_NotifyIcon(NIM_DELETE, &notifyData) != 0;
+    return 
+#ifndef __MINGW32CE__
+	Shell_NotifyIcon(NIM_DELETE, &notifyData) != 0;
+#else
+	true;
+#endif
 }
 
 bool wxTaskBarIcon::PopupMenu(wxMenu *menu)
diff -uBpr ./src/msw/thread.cpp ../../wxWidgets-2.8.9/src/msw/thread.cpp
--- ./src/msw/thread.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/thread.cpp	2008-10-29 18:57:37.000000000 +0300
@@ -922,7 +922,12 @@ wxThread *wxThread::This()
 
 bool wxThread::IsMain()
 {
+// arm-mingw32ce-g++ doesn't seem to support '::' resolution
+#if !defined (__MINGW32CE__)
     return ::GetCurrentThreadId() == gs_idMainThread || gs_idMainThread == 0;
+#else
+    return GetCurrentThreadId() == gs_idMainThread || gs_idMainThread == 0;
+#endif
 }
 
 void wxThread::Yield()
@@ -947,7 +952,12 @@ int wxThread::GetCPUCount()
 
 unsigned long wxThread::GetCurrentId()
 {
+// arm-mingw32ce-g++ doesn't seem to support '::' resolution
+#if !defined (__MINGW32CE__)
     return (unsigned long)::GetCurrentThreadId();
+#else
+    return (unsigned long)GetCurrentThreadId();
+#endif
 }
 
 bool wxThread::SetConcurrency(size_t WXUNUSED_IN_WINCE(level))
@@ -1247,7 +1257,12 @@ IMPLEMENT_DYNAMIC_CLASS(wxThreadModule, 
 bool wxThreadModule::OnInit()
 {
     // allocate TLS index for storing the pointer to the current thread
+// arm-mingw32ce-g++ doesn't seem to support '::' resolution
+#if !defined (__MINGW32CE__)
     gs_tlsThisThread = ::TlsAlloc();
+#else
+    gs_tlsThisThread = TlsAlloc();
+#endif
     if ( gs_tlsThisThread == 0xFFFFFFFF )
     {
         // in normal circumstances it will only happen if all other
@@ -1260,9 +1275,20 @@ bool wxThreadModule::OnInit()
 
     // main thread doesn't have associated wxThread object, so store 0 in the
     // TLS instead
+
+// arm-mingw32ce-g++ doesn't seem to support '::' resolution
+#if !defined (__MINGW32CE__)
     if ( !::TlsSetValue(gs_tlsThisThread, (LPVOID)0) )
+#else
+    if ( !TlsSetValue(gs_tlsThisThread, (LPVOID)0) )
+#endif
     {
+// arm-mingw32ce-g++ doesn't seem to support '::' resolution
+#if !defined (__MINGW32CE__)
         ::TlsFree(gs_tlsThisThread);
+#else
+	TlsFree(gs_tlsThisThread);
+#endif
         gs_tlsThisThread = 0xFFFFFFFF;
 
         wxLogSysError(_("Thread module initialization failed: can not store value in thread local storage"));
@@ -1277,15 +1303,26 @@ bool wxThreadModule::OnInit()
 
     gs_critsectThreadDelete = new wxCriticalSection;
 
-    // no error return for GetCurrentThreadId()
+    // no error return for GetCurrentThreadId()a
+
+// arm-mingw32ce-g++ doesn't seem to support '::' resolution
+#if !defined (__MINGW32CE__)
     gs_idMainThread = ::GetCurrentThreadId();
+#else
+    gs_idMainThread = GetCurrentThreadId();
+#endif
 
     return true;
 }
 
 void wxThreadModule::OnExit()
 {
+// arm-mingw32ce-g++ doesn't seem to support '::' resolution
+#if !defined (__MINGW32CE__)
     if ( !::TlsFree(gs_tlsThisThread) )
+#else
+    if ( !TlsFree(gs_tlsThisThread) )
+#endif
     {
         wxLogLastError(wxT("TlsFree failed."));
     }
diff -uBpr ./src/msw/toplevel.cpp ../../wxWidgets-2.8.9/src/msw/toplevel.cpp
--- ./src/msw/toplevel.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/toplevel.cpp	2008-10-29 21:10:59.000000000 +0300
@@ -688,7 +688,7 @@ bool wxTopLevelWindowMSW::Show(bool show
 
     DoShowWindow(nShowCmd);
 
-#if defined(__WXWINCE__) && (_WIN32_WCE >= 400 && !defined(__POCKETPC__) && !defined(__SMARTPHONE__))
+#if defined(__WXWINCE__) && (_WIN32_WCE >= 400 && !defined(__POCKETPC__) && !defined(__SMARTPHONE__) && !defined(__MINGW32CE__))
     // Addornments have to be added when the frame is the correct size
     wxFrame* frame = wxDynamicCast(this, wxFrame);
     if (frame && frame->GetMenuBar())
@@ -743,7 +743,7 @@ void wxTopLevelWindowMSW::Maximize(bool 
 bool wxTopLevelWindowMSW::IsMaximized() const
 {
     return IsAlwaysMaximized() ||
-#if !defined(__SMARTPHONE__) && !defined(__POCKETPC__) && !defined(__WINCE_STANDARDSDK__)
+#if !defined(__SMARTPHONE__) && !defined(__POCKETPC__) && !defined(__WINCE_STANDARDSDK__) && !defined(_WIN32_WCE)
            (::IsZoomed(GetHwnd()) != 0) ||
 #endif
            m_maximizeOnShow;
diff -uBpr ./src/msw/utils.cpp ../../wxWidgets-2.8.9/src/msw/utils.cpp
--- ./src/msw/utils.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/utils.cpp	2008-10-29 18:59:30.000000000 +0300
@@ -97,7 +97,7 @@
 #endif
 
 #ifndef __WATCOMC__
-    #if !(defined(_MSC_VER) && (_MSC_VER > 800))
+    #if !(defined(_MSC_VER) && (_MSC_VER > 800)) && !defined(__WXWINCE__)
         #include <errno.h>
     #endif
 #endif
@@ -1025,7 +1025,11 @@ wxMemorySize wxGetFreeMemory()
 
 unsigned long wxGetProcessId()
 {
+#if !defined(__MINGW32CE__)
     return ::GetCurrentProcessId();
+#else
+    return GetCurrentProcessId();
+#endif
 }
 
 // Emit a beeeeeep
@@ -1191,7 +1195,11 @@ bool wxIsPlatform64Bit()
     BOOL wow64 = FALSE;
     if ( pfnIsWow64Process )
     {
+#if !defined (__MINGW32CE__)
         pfnIsWow64Process(::GetCurrentProcess(), &wow64);
+#else
+        pfnIsWow64Process(GetCurrentProcess(), &wow64);
+#endif
     }
     //else: running under a system without Win64 support
 
diff -uBpr ./src/msw/utilsexc.cpp ../../wxWidgets-2.8.9/src/msw/utilsexc.cpp
--- ./src/msw/utilsexc.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/utilsexc.cpp	2008-10-29 19:00:07.000000000 +0300
@@ -70,7 +70,7 @@
 #include <stdlib.h>
 #include <string.h>
 #ifndef __WATCOMC__
-    #if !(defined(_MSC_VER) && (_MSC_VER > 800))
+    #if !(defined(_MSC_VER) && (_MSC_VER > 800)) && !defined(__WXWINCE__)
         #include <errno.h>
     #endif
 #endif
diff -uBpr ./src/msw/utilsgui.cpp ../../wxWidgets-2.8.9/src/msw/utilsgui.cpp
--- ./src/msw/utilsgui.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/utilsgui.cpp	2008-10-29 19:38:16.000000000 +0300
@@ -222,7 +222,11 @@ wxChar *wxLoadUserResource(const wxStrin
     if ( hData == 0 )
         return NULL;
 
+#if !defined (__MINGW32CE__)
     wxChar *theText = (wxChar *)::LockResource(hData);
+#else
+    wxChar *theText = (wxChar *)LockResource(hData);
+#endif
     if ( !theText )
         return NULL;
 
diff -uBpr ./src/msw/wince/filefnwce.cpp ../../wxWidgets-2.8.9/src/msw/wince/filefnwce.cpp
--- ./src/msw/wince/filefnwce.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/wince/filefnwce.cpp	2008-11-16 00:09:33.000000000 +0300
@@ -20,6 +20,8 @@
 // For compilers that support precompilation, includes "wx.h".
 #include "wx/wxprec.h"
 
+#include "wx/wxchar.h"
+
 #ifdef __BORLANDC__
     #pragma hdrstop
 #endif
@@ -182,7 +184,7 @@ __int64 wxSeek(int fd, __int64 offset, i
     DWORD res = SetFilePointer((HANDLE) fd, offset, NULL, method) ;
     if (res == 0xFFFFFFFF && GetLastError() != NO_ERROR)
     {
-        wxLogSysError(_("can't seek on file descriptor %d"), fd);
+        wxLogSysError(wxT("can't seek on file descriptor %d"), fd);
         return wxInvalidOffset;
     }
     else
@@ -196,7 +198,7 @@ __int64 wxTell(int fd)
     DWORD res = SetFilePointer((HANDLE) fd, 0, NULL, FILE_CURRENT) ;
     if (res == 0xFFFFFFFF && GetLastError() != NO_ERROR)
     {
-        wxLogSysError(_("can't get seek position on file descriptor %d"), fd);
+        wxLogSysError(wxT("can't get seek position on file descriptor %d"), fd);
         return wxInvalidOffset;
     }
     else
diff -uBpr ./src/msw/wince/helpwce.cpp ../../wxWidgets-2.8.9/src/msw/wince/helpwce.cpp
--- ./src/msw/wince/helpwce.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/wince/helpwce.cpp	2008-10-29 19:49:15.000000000 +0300
@@ -116,7 +116,12 @@ bool wxWinceHelpController::ViewURL(cons
         url = url + wxT("#") + topic;
 
     return CreateProcess(wxT("peghelp.exe"),
-        url, NULL, NULL, FALSE, 0, NULL,
+#if !defined (__MINGW32CE__)
+        url, 
+#else
+	(WCHAR*)(const wchar_t*)url, 
+#endif
+	NULL, NULL, FALSE, 0, NULL,
         NULL, NULL, NULL) != 0 ;
 }
 
diff -uBpr ./src/msw/wince/net.cpp ../../wxWidgets-2.8.9/src/msw/wince/net.cpp
--- ./src/msw/wince/net.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/wince/net.cpp	2008-10-29 19:11:50.000000000 +0300
@@ -42,11 +42,19 @@
 
 static struct protoent RgProtoEnt[] =
 {
+#if !defined(__MINGW32CE__)
  { "tcp", {NULL}, 6 },
  { "udp", {NULL}, 17 },
  { "icmp", {NULL}, 1 },
  { "ip", {NULL}, 0 },
  { NULL, {NULL}, 0 }
+#else
+ { "tcp", NULL, 6 },
+ { "udp", NULL, 17 },
+ { "icmp", NULL, 1 },
+ { "ip", NULL, 0 },
+ { NULL, NULL, 0 }
+#endif
 };
 
 
@@ -62,6 +70,7 @@ static struct protoent RgProtoEnt[] =
 
 static struct servent RgServEnt[] =
 {
+#if !defined(__MINGW32CE__)
  { "ftp", {NULL}, 21, "tcp" },
  { "ftp-data", {NULL}, 20, "tcp" },
  { "telnet", {NULL}, 23, "tcp" },
@@ -88,6 +97,34 @@ static struct servent RgServEnt[] =
  { "qotd", {NULL}, 17, "tcp" },
  { "qotd", {NULL}, 17, "udp" },
  { NULL, {NULL}, 0, NULL }
+#else
+ { "ftp", NULL, 21, "tcp" },
+ { "ftp-data", NULL, 20, "tcp" },
+ { "telnet", NULL, 23, "tcp" },
+ { "smtp", NULL, 25, "tcp" },
+ { "http", NULL, 80, "tcp" },
+ { "http", NULL, 80, "udp" },
+ { "pop", NULL, 109, "tcp" },
+ { "pop2", NULL, 109, "tcp" },
+ { "pop3", NULL, 110, "tcp" },
+ { "nntp", NULL, 119, "tcp" },
+ { "finger", NULL, 79, "tcp" },
+ /* include most of the simple TCP services for testing */
+ { "echo", NULL, 7, "tcp" },
+ { "echo", NULL, 7, "udp" },
+ { "discard", NULL, 9, "tcp" },
+ { "discard", NULL, 9, "udp" },
+ { "chargen", NULL, 19, "tcp" },
+ { "chargen", NULL, 19, "udp" },
+ { "systat", NULL, 11, "tcp" },
+ { "systat", NULL, 11, "udp" },
+ { "daytime", NULL, 13, "tcp" },
+ { "daytime", NULL, 13, "udp" },
+ { "netstat", NULL, 15, "tcp" },
+ { "qotd", NULL, 17, "tcp" },
+ { "qotd", NULL, 17, "udp" },
+ { NULL, NULL, 0, NULL }
+#endif
 };
 
 // Since table kept in host byte order,
@@ -108,7 +145,7 @@ static void strcpyLC(char* szDst, const 
 }
 
 
-struct servent * WINSOCKAPI getservbyport(int port, const char * proto)
+struct servent * WINAPI getservbyport(int port, const char * proto)
 {
 
  port = ntohs((unsigned short)port); // arrives in network byte order
@@ -140,7 +177,7 @@ struct servent * WINSOCKAPI getservbypor
 }
 
 
-struct servent * WINSOCKAPI getservbyname(const char * name,
+struct servent * WINAPI getservbyname(const char * name,
                                           const char * proto)
 {
  struct servent *ps = &RgServEnt[0];
@@ -173,7 +210,7 @@ struct servent * WINSOCKAPI getservbynam
 }
 
 
-struct protoent * WINSOCKAPI getprotobynumber(int proto)
+struct protoent * WINAPI getprotobynumber(int proto)
 {
  struct protoent *pr = &RgProtoEnt[0];
  while (NULL != pr->p_name)
diff -uBpr ./src/msw/wince/tbarwce.cpp ../../wxWidgets-2.8.9/src/msw/wince/tbarwce.cpp
--- ./src/msw/wince/tbarwce.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/wince/tbarwce.cpp	2008-11-29 19:21:41.000000000 +0300
@@ -372,7 +372,7 @@ bool wxToolMenuBar::Realize()
 #endif // 0
 
     bool lastWasRadio = false;
-    wxToolBarToolsList::Node* node;
+    wxToolBarToolsList::compatibility_iterator node;
     for ( node = m_tools.GetFirst(); node; node = node->GetNext() )
     {
         wxToolMenuBarTool *tool = (wxToolMenuBarTool*) node->GetData();
diff -uBpr ./src/msw/wince/time.cpp ../../wxWidgets-2.8.9/src/msw/wince/time.cpp
--- ./src/msw/wince/time.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/wince/time.cpp	2008-11-15 21:44:57.000000000 +0300
@@ -20,6 +20,8 @@
 // For compilers that support precompilation, includes "wx.h".
 #include "wx/wxprec.h"
 
+#include "wx/longlong.h"
+
 #ifdef __BORLANDC__
     #pragma hdrstop
 #endif
@@ -169,6 +171,7 @@ _conv(const int n, const char * const fo
 	return _add(buf, pt, ptlim);
 }
 
+long timezone;
 
 static char *
 _fmt(const char * format, const struct tm * const t, char * pt, const char * const ptlim, int * warnp)
@@ -553,7 +556,7 @@ size_t wcsftime(wchar_t *s,
 #define DO_LOCALTIME                1
 
 
-long timezone ; // global variable
+//long timezone ; // global variable
 
 
 ////////////////////////////////////////////////////////////////////////
@@ -562,7 +565,7 @@ long timezone ; // global variable
 
 static struct tm * __cdecl common_localtime(const time_t *t, BOOL bLocal)
 {
-    wxLongLong i64;
+    wxLongLong i64, i64_2;
     FILETIME   ft;
     wxString str ;
     SYSTEMTIME SystemTime;
@@ -583,7 +586,9 @@ static struct tm * __cdecl common_localt
     else
     {
         i64 = *t;
-        i64 = i64 * 10000000 + 116444736000000000;
+	i64_2 = 1164447360;
+	i64_2 *= 100000000;
+	i64 = i64 * 10000000 + i64_2;
 
         ft.dwLowDateTime  = i64.GetLo();
         ft.dwHighDateTime = i64.GetHi();
diff -uBpr ./src/msw/window.cpp ../../wxWidgets-2.8.9/src/msw/window.cpp
--- ./src/msw/window.cpp	2008-09-15 13:28:55.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/msw/window.cpp	2008-10-29 21:05:01.000000000 +0300
@@ -132,7 +132,7 @@
     #define ETS_ASSIST          7
 #endif
 
-#if defined(TME_LEAVE) && defined(WM_MOUSELEAVE) && wxUSE_DYNLIB_CLASS
+#if defined(TME_LEAVE) && defined(WM_MOUSELEAVE) && wxUSE_DYNLIB_CLASS && !defined(__WXWINCE__)
     #define HAVE_TRACKMOUSEEVENT
 #endif // everything needed for TrackMouseEvent()
 
diff -uBpr ./src/zlib/gzio.c ../../wxWidgets-2.8.9/src/zlib/gzio.c
--- ./src/zlib/gzio.c	2008-09-15 13:28:12.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/zlib/gzio.c	2008-10-29 17:31:15.000000000 +0300
@@ -11,6 +11,11 @@
 
 #include "zutil.h"
 
+#ifdef _WIN32_WCE
+	#define errno z_errno
+#endif
+extern int errno;
+
 #ifdef NO_DEFLATE       /* for compatibility with old definition */
 #  define NO_GZCOMPRESS
 #endif
diff -uBpr ./src/zlib/zutil.h ../../wxWidgets-2.8.9/src/zlib/zutil.h
--- ./src/zlib/zutil.h	2008-09-15 13:28:12.000000000 +0400
+++ ../../wxWidgets-2.8.9/src/zlib/zutil.h	2008-10-29 17:12:26.000000000 +0300
@@ -151,7 +151,7 @@ extern const char * const z_errmsg[10]; 
 #  define fdopen(fd,mode) NULL /* No fdopen() */
 #endif
 
-#if (defined(_MSC_VER) && (_MSC_VER > 600))
+#if (defined(_MSC_VER) && (_MSC_VER > 600)) || defined(_WIN32_WCE)
 #  if defined(_WIN32_WCE)
 #    define fdopen(fd,mode) NULL /* No fdopen() */
 #    ifndef _PTRDIFF_T_DEFINED
--- ./configure.in	2008-09-15 13:28:15.000000000 +0400
+++ ../../wxWidgets-2.8.9/configure.in	2008-11-29 20:11:30.000000000 +0300
@@ -94,7 +94,7 @@ NEEDS_D_REENTRANT_FOR_R_FUNCS=0
 dnl the list of all available toolkits
 dnl
 dnl update NUM_TOOLKITS calculation below when adding a new toolkit here!
-ALL_TOOLKITS="COCOA GTK MAC MGL MICROWIN MOTIF MSW PM X11 DFB"
+ALL_TOOLKITS="COCOA GTK MAC MGL MICROWIN MOTIF MSW PM X11 DFB WINCE"
 
 dnl NB: these wxUSE_XXX constants have value of 0 or 1 unlike all the other ones
 dnl     which are either yes or no
@@ -108,6 +108,7 @@ DEFAULT_wxUSE_MSW=0
 DEFAULT_wxUSE_PM=0
 DEFAULT_wxUSE_X11=0
 DEFAULT_wxUSE_DFB=0
+DEFAULT_wxUSE_WINCE=0
 
 dnl these are the values which are really default for the given platform -
 dnl they're not cached and are only used if no --with-toolkit was given *and*
@@ -122,6 +123,7 @@ DEFAULT_DEFAULT_wxUSE_MSW=0
 DEFAULT_DEFAULT_wxUSE_PM=0
 DEFAULT_DEFAULT_wxUSE_X11=0
 DEFAULT_DEFAULT_wxUSE_DFB=0
+DEFAULT_DEFAULT_wxUSE_WINCE=0
 
 PROGRAM_EXT=
 SO_SUFFIX=so
@@ -262,6 +264,12 @@ case "${host}" in
     AC_DEFINE(__UNIXWARE__)
   ;;
 
+  *-*-mingw32ce*)
+    SO_SUFFIX=dll
+    PROGRAM_EXT=".exe"
+    DEFAULT_DEFAULT_wxUSE_WINCE=1
+  ;;
+
   *-*-cygwin* | *-*-mingw32* )
     dnl MBN: some of the defines have been moved after toolkit detection
     dnl      because for wxMotif/wxGTK/wxX11 to build on Cygwin
@@ -875,6 +883,10 @@ AC_ARG_WITH(mgl,           [  --with-mgl
 AC_ARG_WITH(directfb,      [  --with-directfb         use DirectFB], [wxUSE_DFB="$withval" wxUSE_UNIVERSAL="yes" CACHE_DFB=1 TOOLKIT_GIVEN=1])
 AC_ARG_WITH(microwin,      [  --with-microwin         use MicroWindows], [wxUSE_MICROWIN="$withval" CACHE_MICROWIN=1 TOOLKIT_GIVEN=1])
 AC_ARG_WITH(x11,           [  --with-x11              use X11], [wxUSE_X11="$withval" wxUSE_UNIVERSAL="yes" CACHE_X11=1 TOOLKIT_GIVEN=1])
+AC_ARG_WITH(wince,	   [  --with-wince	      use WinCE], [wxUSE_WINCE="$withval" CACHE_WINCE=1 TOOLKIT_GIVEN=1])
+AC_ARG_WITH(winceversion,  [  --with-winceversion=420 use specified WinCE version: 420 is for 4.2, 500 is for 5.0 and so on], [wxWINCE_VERSION="$withval"])
+AC_ARG_WITH(winceplatform, [  --with-winceplatform=pocketpc     or smartphone or handheldpc], [wxWINCE_PLATFORM="$withval"])
+AC_ARG_WITH(winceie,       [  --with-winceie=400      use specified IE version], [wxWINCE_IE="$withval"])
 WX_ARG_ENABLE(nanox,       [  --enable-nanox          use NanoX], wxUSE_NANOX)
 
 AC_ARG_ENABLE(gtk2,        [  --disable-gtk2          use GTK+ 1.2 instead of 2.0], [wxUSE_GTK2="$enableval"])
@@ -1425,7 +1438,8 @@ if test "$wxUSE_GUI" = "yes"; then
     dnl this? what about using ALL_TOOLKITS? TODO)
     NUM_TOOLKITS=`expr ${wxUSE_COCOA:-0} + ${wxUSE_GTK:-0} + ${wxUSE_MAC:-0} \
                   + ${wxUSE_MGL:-0} + ${wxUSE_DFB:-0} + ${wxUSE_MICROWIN:-0} \
-                  + ${wxUSE_MOTIF:-0} + ${wxUSE_MSW:-0} + ${wxUSE_X11:-0}`
+                  + ${wxUSE_MOTIF:-0} + ${wxUSE_MSW:-0} + ${wxUSE_X11:-0} \
+                  + ${wxUSE_WINCE:-0}`
 
     dnl Allow wxUSE_PM only for OS/2 with EMX.
     case "${host}" in
@@ -3292,7 +3306,12 @@ if test "$USE_WIN32" = 1 ; then
 
     dnl --- FIXME: This is still a somewhat random list of libs,
     dnl ---        some of them should probably be included conditionally.
-    case "${host}" in
+    case "${host}" in 
+        *-*-mingw32ce*)
+            if test "$wxUSE_WINCE" = 1 ; then
+                LIBS="$LIBS -lcommctrl -lcommdlg -lws2 -lceshell -laygshell"
+            fi
+        ;;
 	x86_64-*-mingw32* )
             dnl --- For mingw-w64 lctl3d32's name has changed
             LIBS="$LIBS -lwinspool -lwinmm -lshell32 -lcomctl32 -lcomdlg32 -lwctl3d32 -ladvapi32 -lwsock32 -lgdi32"
@@ -3305,6 +3324,53 @@ if test "$USE_WIN32" = 1 ; then
         LIBS="$LIBS -loleacc"
     fi
 
+    if test "$wxUSE_WINCE" = 1 ; then
+
+        case "${wxWINCE_IE}" in
+            ''|default )
+                WXWINCE_IE=400
+            ;;
+            * )
+                WXWINCE_IE=${wxWINCE_IE}
+            ;;
+        esac
+
+        case "${wxWINCE_PLATFORM}" in
+            ''|default )
+                WXWINCE_PLATFORM="__POCKETPC__"
+            ;;
+            smartphone )
+                WXWINCE_PLATFORM="__SMARTPHONE__"
+            ;;
+            handheldpc )
+                WXWINCE_PLATFORM="__HANDHELDPC__"
+            ;;
+            * )
+                WXWINCE_PLATFORM="__POCKETPC__"
+            ;;
+        esac
+
+        case "${wxWINCE_VERSION}" in
+            ''|default )
+                WXWINCE_VERSION=420
+            ;;
+            420 )
+                WXWINCE_VERSION=420
+            ;;
+            500 )
+                WXWINCE_VERSION=500
+            ;;
+            * )
+                WXWINCE_VERSION=${wxWINCE_VERSION}
+            ;;
+        esac
+
+        TOOLKIT=WINCE
+        GUIDIST=WINCE_DIST
+        CPPFLAGS="${CPPFLAGS} -D__WXWINCE__ -D_WIN32_WCE=0x${WXWINCE_VERSION} -D_WIN32_IE=0x${WXWINCE_IE} -D${WXWINCE_PLATFORM}"
+        WXCONFIG_CPPFLAGS="${WXCONFIG_CPPFLAGS} -D__WXWINCE__ -D${WXWINCE_PLATFORM}"
+    fi
+
     case "${host}" in
         *-*-cygwin* )
             dnl Cygwin doesn't include these by default
@@ -5388,7 +5454,8 @@ dnl                          the next ma
 dnl ---------------------------------------------------------------------------
 
 dnl under MSW (except mingw32) we always have thread support
-if test "$TOOLKIT" != "MSW" -a "$USE_OS2" != 1; then
+dnl if test "$TOOLKIT" != "MSW" -a "$USE_OS2" != 1; then
+if test "$TOLKIT" != "MSW" -a "$USE_OS2" != 1 -a "$TOOLKIT" != "WINCE" ; then
 
     dnl the code below:
     dnl
@@ -5962,7 +6029,7 @@ dnl DLL support
 dnl ------------------------------------------------------------------------
 
 dnl under MSW we always have LoadLibrary/GetProcAddress
-if test "$TOOLKIT" != "MSW" -a "$USE_OS2" != 1; then
+if test "$TOOLKIT" != "MSW" -a "$USE_OS2" != 1 -a "$TOOLKIT" != "WINCE"; then
 
     HAVE_DL_FUNCS=0
     HAVE_SHL_FUNCS=0
@@ -6348,6 +6415,10 @@ if test "$wxUSE_CONFIG" = "yes" ; then
   fi
 fi
 
+if test "$wxUSE_WINCE" = 1 ; then
+    wxUSE_INTL="no"
+fi
+
 if test "$wxUSE_INTL" = "yes" ; then
   if test "$wxUSE_FILE" != "yes"; then
     AC_MSG_WARN(I18n code requires wxFile... disabled)
@@ -6611,7 +6682,7 @@ fi
 
 if test "$wxUSE_SOCKETS" = "yes"; then
     dnl under MSW we always have sockets
-    if test "$TOOLKIT" != "MSW"; then
+    if test "$TOOLKIT" != "MSW" -a "$TOOLKIT" != "WINCE" ; then
         dnl under Solaris and OS/2, socket functions live in -lsocket
         AC_CHECK_FUNC(socket,,
             [
@@ -6633,7 +6704,7 @@ if test "$wxUSE_SOCKETS" = "yes" ; then
     dnl this test may be appropriate if building under cygwin
     dnl right now I'm assuming it also uses the winsock stuff
     dnl like mingw does..  -- RL
-    if test "$TOOLKIT" != "MSW"; then
+    if test "$TOOLKIT" != "MSW" -a "$TOOLKIT" != "WINCE" ; then
         dnl determine the type of third argument for getsockname
         dnl This test needs to be done in C++ mode since gsocket.cpp now
         dnl is C++ code and pointer cast that are possible even without
@@ -6912,6 +6983,11 @@ if test "$wxUSE_CONSTRAINTS" = "yes"; th
     SAMPLES_SUBDIRS="$SAMPLES_SUBDIRS layout"
 fi
 
+if test "$wxUSE_WINCE" = 1 ; then
+    wxUSE_MDI="no"
+    wxUSE_MDI_ARCHITECTURE="no"
+fi
+
 if test "$wxUSE_MDI" = "yes"; then
     AC_DEFINE(wxUSE_MDI)
 
@@ -6994,7 +7070,12 @@ if test "$USE_WIN32" = 1 -a \( "$wxUSE_D
                            [AC_MSG_RESULT(no)],
                            [AC_MSG_RESULT(yes)
                             WXCONFIG_CXXFLAGS="$WXCONFIG_CXXFLAGS -fvtable-thunks"])
-            LIBS=" -lrpcrt4 -loleaut32 -lole32 -luuid$LIBS"
+	    if test "$wxUSE_WINCE" = 1 ; then
+	        LIBS="  -loleaut32 -lole32 -luuid$LIBS"
+	    else
+                LIBS=" -lrpcrt4 -loleaut32 -lole32 -luuid$LIBS"
+	    fi
+
             if test "$wxUSE_OLE" = "yes" ; then
                 AC_DEFINE(wxUSE_OLE)
                 AC_DEFINE(wxUSE_OLE_AUTOMATION)
@@ -7490,6 +7571,11 @@ if test "$wxUSE_EXCEPTIONS" = "yes"; the
 fi
 
 USE_HTML=0
+
+if test "$wxUSE_WINCE" = 1 ; then
+    wxUSE_HTML="yes"
+fi
+
 if test "$wxUSE_HTML" = "yes"; then
     AC_DEFINE(wxUSE_HTML)
     USE_HTML=1
@@ -7524,6 +7610,11 @@ if test "$wxUSE_WEBKIT" = "yes"; then
 fi
 
 USE_XRC=0
+
+if test "$wxUSE_WINCE" = 1 ; then
+    wxUSE_XRC="no"
+fi
+
 if test "$wxUSE_XRC" = "yes"; then
     if test "$wxUSE_XML" != "yes"; then
         AC_MSG_WARN([XML library not built, XRC resources disabled])
@@ -7536,6 +7627,11 @@ if test "$wxUSE_XRC" = "yes"; then
 fi
 
 USE_AUI=0
+
+if test "$wxUSE_WINCE" = 1 ; then
+    wxUSE_AUI="no"
+fi
+
 if test "$wxUSE_AUI" = "yes"; then
    AC_DEFINE(wxUSE_AUI)
    USE_AUI=1
@@ -7551,6 +7647,10 @@ if test "$wxUSE_METAFILE" = "yes"; then
     AC_DEFINE(wxUSE_METAFILE)
 fi
 
+if test "$wxUSE_WINCE" = 1 ; then
+    wxUSE_MIMETYPE="no"
+fi
+
 if test "$wxUSE_MIMETYPE" = "yes"; then
     AC_DEFINE(wxUSE_MIMETYPE)
 fi
@@ -7583,6 +7683,10 @@ if test "$wxUSE_UNICODE" = "yes" -a "$wx
   LIBS=" -lunicows $LIBS"
 fi
 
+if test "$wxUSE_WINCE" = 1; then
+    wxUSE_RICHTEXT="no"
+fi
+
 USE_RICHTEXT=0
 if test "$wxUSE_RICHTEXT" = "yes"; then
     AC_DEFINE(wxUSE_RICHTEXT)
@@ -7590,6 +7694,18 @@ if test "$wxUSE_RICHTEXT" = "yes"; then
     SAMPLES_SUBDIRS="$SAMPLES_SUBDIRS richtext"
 fi
 
+if test "$wxUSE_WINCE" = 1 ; then
+
+if test "$wxUSE_DIB" = "yes"; then
+	AC_DEFINE(wxUSE_WXDIB)
+fi
+
+if test "$wxUSE_REGKEY" = "yes"; then
+	AC_DEFINE(wxUSE_REGKEY)
+fi
+
+fi
+
 dnl ---------------------------------------------------------------------------
 dnl wxImage options
 dnl ---------------------------------------------------------------------------
