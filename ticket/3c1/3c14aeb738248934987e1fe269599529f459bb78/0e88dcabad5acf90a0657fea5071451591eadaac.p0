--- samples/samples-svn.bkl	2007-09-14 11:35:16.000000000 +0200
+++ samples/samples.bkl	2008-01-21 18:51:10.000000000 +0100
@@ -83,6 +83,7 @@
     <subproject id="vscroll" template="sub"/>
     <subproject id="widgets" template="sub"/>
     <subproject id="wizard" template="sub"/>
+    <subproject id="wrapsizer" template="sub"/>
     <!-- Put samples most likely to fail at the end -->
     <subproject id="mfc" template="sub"/>
 
--- samples/wrapsizer/wrapsizer-svn.rc	1970-01-01 01:00:00.000000000 +0100
+++ samples/wrapsizer/wrapsizer.rc	2007-09-14 11:34:39.000000000 +0200
@@ -0,0 +1,2 @@
+#include "wx/msw/wx.rc"
+
--- samples/wrapsizer/wrapsizer-svn.cpp	1970-01-01 01:00:00.000000000 +0100
+++ samples/wrapsizer/wrapsizer.cpp	2008-01-21 19:11:51.000000000 +0100
@@ -0,0 +1,144 @@
+
+/////////////////////////////////////////////////////////////////////////////
+// Name:        wrapsizer.cpp
+// Purpose:     wxWidgets sample demonstrating wxWrapSizer use (and wxSHAPED+wxEXPAND)
+// Author:      Arne Steinarson
+// Modified by: 
+// Created:     21.01.2008
+// RCS-ID:      
+// Copyright:   (c) Arne Steinarson
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+
+#include <wx/wxprec.h>
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+#ifndef WX_PRECOMP
+    #include <wx/wx.h>
+#endif
+
+
+
+#include "wx/log.h"
+#include "wx/artprov.h"
+
+// #include "wx/wrapsizer.h"
+
+#define ID_MOVE_NEW		1001
+#define ID_MOVE_SAME 	1002
+
+class WrapDialog: public wxDialog {
+public:
+
+    wxToolBar *MakeToolBar( ){
+        wxBitmap bm1, bm2, bm3, bm4;
+        bm1 = wxArtProvider::GetBitmap( wxART_HELP_BOOK, wxART_TOOLBAR, wxSize(16,16) );
+        bm2 = wxArtProvider::GetBitmap( wxART_FILE_OPEN, wxART_TOOLBAR, wxSize(16,16) );
+        bm3 = wxArtProvider::GetBitmap( wxART_GO_DIR_UP, wxART_TOOLBAR, wxSize(16,16) );
+        bm4 = wxArtProvider::GetBitmap( wxART_EXECUTABLE_FILE, wxART_TOOLBAR, wxSize(16,16) );
+        
+        bool have_bms = bm1.IsOk();
+        wxToolBar *ptb = new wxToolBar( this, -1, wxDefaultPosition, wxDefaultSize, wxTB_HORIZONTAL|wxTB_FLAT|wxTB_NODIVIDER | (have_bms?0:wxTB_TEXT|wxTB_NOICONS) );
+        ptb->AddTool( 1000, _T("Tool1"), bm1, wxNullBitmap, wxITEM_NORMAL, _T("Save log") );
+        ptb->AddSeparator( );
+        ptb->AddTool( 1001, _T("Tool2"), bm2, wxNullBitmap, wxITEM_NORMAL, _T("Copy log to clipboard") );
+        ptb->AddSeparator( );
+        ptb->AddTool( 1002, _T("Tool3"), bm3, wxNullBitmap, wxITEM_NORMAL, _T("Clear log") );
+        ptb->AddTool( 1003, _T("Tool4"), bm4, wxNullBitmap, wxITEM_NORMAL, _T("...") );
+        
+        ptb->Realize( );
+        return ptb;
+    }
+
+	WrapDialog( wxWindow *prnt, int id, const wxChar *title, wxPoint pos, wxSize size ) :
+		wxDialog(prnt,id,title,pos,size,wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER) { 
+
+        // Root sizer, vertical
+        wxSizer *ps_root = new wxBoxSizer(wxVERTICAL);
+        
+        // Some toolbars in a wrap sizer
+        wxSizer *ps_top = new wxWrapSizer( wxHORIZONTAL );
+        ps_top->Add( MakeToolBar() );
+        ps_top->Add( 20,1 );
+        ps_top->Add( MakeToolBar() );
+        ps_top->Add( 20,1 );
+        ps_top->Add( MakeToolBar() );
+        ps_root->Add( ps_top, 0, wxEXPAND | wxALL, 5 );
+        
+        // A number of checkboxes inside a wrap sizer 
+        wxSizer *ps_mid = new wxStaticBoxSizer( wxVERTICAL, this, _T("With check-boxes") );
+        wxSizer *ps_mid_wrap = new wxWrapSizer(wxHORIZONTAL);
+        ps_mid->Add( ps_mid_wrap, 100, wxEXPAND );
+        for( int ix=0; ix<6; ix++ )
+            ps_mid_wrap->Add( new wxCheckBox(this,wxID_ANY,wxString::Format(_T("Option %d"),ix+1)), 0, wxALIGN_CENTRE|wxALIGN_CENTER_VERTICAL, 5 );
+        ps_root->Add( ps_mid, 100, wxEXPAND | wxALL, 5 );
+        
+
+        // A shaped item inside a box sizer
+        wxSizer *ps_bottom = new wxStaticBoxSizer( wxVERTICAL, this, _T("With wxSHAPED item") );
+        wxSizer *ps_bottom_box = new wxBoxSizer(wxHORIZONTAL);
+        ps_bottom->Add( ps_bottom_box, 100, wxEXPAND );
+        ps_bottom_box->Add( new wxListBox(this,wxID_ANY,wxPoint(0,0),wxSize(70,70)), 0, wxEXPAND|wxSHAPED );
+        ps_bottom_box->Add( 10,10 );
+        ps_bottom_box->Add( new wxCheckBox(this,wxID_ANY,_T("A much longer option...")), 100, 0, 5 );
+        //ps_root->Add( ps_bottom_box, 100, wxEXPAND | wxALL, 5 );
+        ps_root->Add( ps_bottom, 100, wxEXPAND | wxALL, 5 );
+
+        
+        // OK Button 
+        ps_root->Add( new wxButton(this,wxID_OK,_T("OK"),wxDefaultPosition,wxSize(100,30)),
+        			  0, wxALIGN_CENTER, 20 );
+        ps_root->Add( 20,20 );
+        
+        
+        // Set sizer for window
+        SetSizer( ps_root );
+	}
+	
+private:
+	void OnSize( wxSizeEvent& e ){
+		// Calculate min size of window with this geometry 
+		// NOTE: With wrap sizers, min size will be different depending on 
+		// how the window is currently laid out.
+		wxSizer *psz = GetSizer();
+		if( psz ){
+			wxSize sz = psz->CalcMin();
+			wxSize frame_sz = GetSize()-GetClientSize();
+			SetMinSize( sz + frame_sz );
+		}
+		e.Skip();
+	}
+
+	DECLARE_EVENT_TABLE();
+};
+
+
+BEGIN_EVENT_TABLE(WrapDialog, wxDialog)
+	EVT_SIZE(WrapDialog::OnSize)
+END_EVENT_TABLE()
+
+
+
+class MyApp : public wxApp {
+public:
+	MyApp(){ }
+
+	virtual bool OnInit() {
+		int s = sizeof(wxSizerItem);
+		WrapDialog dlg(NULL,wxID_ANY,_T("Wrap Sizer Test"), 
+                        wxPoint(200,200), wxSize(250,350));
+		dlg.ShowModal();
+        return false;
+	}
+	
+	DECLARE_EVENT_TABLE();
+};
+
+IMPLEMENT_APP(MyApp);
+
+BEGIN_EVENT_TABLE(MyApp, wxApp)
+END_EVENT_TABLE()
+
--- samples/wrapsizer/wrapsizer-svn.bkl	1970-01-01 01:00:00.000000000 +0100
+++ samples/wrapsizer/wrapsizer.bkl	2008-01-21 18:52:45.000000000 +0100
@@ -0,0 +1,13 @@
+<?xml version="1.0" ?>
+<makefile>
+
+    <include file="../../build/bakefiles/common_samples.bkl"/>
+
+    <exe id="wrapsizer" template="wx_sample" template_append="wx_append">
+        <sources>wrapsizer.cpp</sources>
+        <wx-lib>core</wx-lib>
+        <wx-lib>base</wx-lib>
+        <win32-res>wrapsizer.rc</win32-res>
+    </exe>
+
+</makefile>

 	  	 
