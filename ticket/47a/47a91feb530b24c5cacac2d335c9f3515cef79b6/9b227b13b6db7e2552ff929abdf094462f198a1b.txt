diff U3 D:/wxWidgets-2.8.4/include/wx/msw/ole/oleutils.h D:/wxWidgets-2.8.4/include/wx/msw/ole/oleutils.new.h
--- D:/wxWidgets-2.8.4/include/wx/msw/ole/oleutils.h	Mon Sep 25 08:06:08 2006
+++ D:/wxWidgets-2.8.4/include/wx/msw/ole/oleutils.new.h	Mon Nov 12 22:02:21 2007
@@ -208,24 +208,21 @@
 {
 public:
     // ctors & dtor
-    wxBasicString(const char *sz);
     wxBasicString(const wxString& str);
+    wxBasicString(const wxBasicString&);
+    wxBasicString& operator=(const wxBasicString&);
     ~wxBasicString();
 
     void Init(const char* sz);
 
     // accessors
     // just get the string
-    operator BSTR() const { return m_wzBuf; }
+    operator BSTR() const { return m_bstrBuf; }
     // retrieve a copy of our string - caller must SysFreeString() it later!
-    BSTR Get() const { return SysAllocString(m_wzBuf); }
+    BSTR Get() const { return SysAllocString(m_bstrBuf); }
 
 private:
-    // @@@ not implemented (but should be)
-    wxBasicString(const wxBasicString&);
-    wxBasicString& operator=(const wxBasicString&);
-
-    OLECHAR *m_wzBuf;     // actual string
+    BSTR	*m_bstrBuf;     // actual string
 };
 
 #if wxUSE_VARIANT
diff U3 D:/wxWidgets-2.8.4/src/msw/ole/oleutils.cpp D:/wxWidgets-2.8.4/src/msw/ole/oleutils.new.cpp
--- D:/wxWidgets-2.8.4/src/msw/ole/oleutils.cpp	Mon Apr 23 09:18:12 2007
+++ D:/wxWidgets-2.8.4/src/msw/ole/oleutils.new.cpp	Mon Nov 12 22:01:40 2007
@@ -70,16 +70,7 @@
 
 WXDLLEXPORT BSTR wxConvertStringToOle(const wxString& str)
 {
-/*
-    unsigned int len = strlen((const char*) str);
-    unsigned short* s = new unsigned short[len*2+2];
-    unsigned int i;
-    memset(s, 0, len*2+2);
-    for (i=0; i < len; i++)
-        s[i*2] = str[i];
-*/
-    wxBasicString bstr(str.mb_str());
-    return bstr.Get();
+    return wxBasicString(str.mb_str()).Get();
 }
 
 WXDLLEXPORT wxString wxConvertStringFromOle(BSTR bStr)
@@ -100,49 +91,27 @@
 // wxBasicString
 // ----------------------------------------------------------------------------
 
-// ctor takes an ANSI string and transforms it to Unicode
-wxBasicString::wxBasicString(const char *sz)
-{
-    Init(sz);
-}
-
 // ctor takes an ANSI or Unicode string and transforms it to Unicode
 wxBasicString::wxBasicString(const wxString& str)
 {
-#if wxUSE_UNICODE
-    m_wzBuf = new OLECHAR[str.length() + 1];
-    memcpy(m_wzBuf, str.c_str(), str.length()*2);
-    m_wzBuf[str.length()] = L'\0';
-#else
-    Init(str.c_str());
-#endif
+    m_bstrBuf = SysAllocString(str.wc_str(*wxConvCurrent));
 }
 
-// Takes an ANSI string and transforms it to Unicode
-void wxBasicString::Init(const char *sz)
+wxBasicString::wxBasicString(const wxBasicString& src)
 {
-    // get the size of required buffer
-    UINT lenAnsi = strlen(sz);
-#ifdef __MWERKS__
-    UINT lenWide = lenAnsi * 2 ;
-#else
-    UINT lenWide = mbstowcs(NULL, sz, lenAnsi);
-#endif
+	m_bstrBuf = src.Get();
+}
 
-    if ( lenWide > 0 ) {
-        m_wzBuf = new OLECHAR[lenWide + 1];
-        mbstowcs(m_wzBuf, sz, lenAnsi);
-        m_wzBuf[lenWide] = L'\0';
-    }
-    else {
-        m_wzBuf = NULL;
-    }
+wxBasicString::wxBasicString& operator=(const wxBasicString& src)
+{
+	SysReAllocString(&m_bstrBuf, src);
+	return *this;
 }
 
 // dtor frees memory
 wxBasicString::~wxBasicString()
 {
-  delete [] m_wzBuf;
+  SysFreeString(m_bstrBuf);
 }
 
 #if wxUSE_DATAOBJ

 	  	 
