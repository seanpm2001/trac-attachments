Index: include/wx/mac/listbox.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/mac/listbox.h,v
retrieving revision 1.6
diff -r1.6 listbox.h
69a70,71
>     virtual void Refresh(bool eraseBack = TRUE, const wxRect *rect = NULL);
> 
Index: src/mac/listbox.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/mac/listbox.cpp,v
retrieving revision 1.14
diff -r1.14 listbox.cpp
23,25c23
< #ifdef __UNIX__
<   #include "ldef/extldef.h"
< #else
---
> #ifndef __UNIX__
30c28
<   IMPLEMENT_DYNAMIC_CLASS(wxListBox, wxControl)
---
> IMPLEMENT_DYNAMIC_CLASS(wxListBox, wxControl)
33c31
< 	EVT_SIZE( wxListBox::OnSize ) 
---
> 	EVT_SIZE( wxListBox::OnSize )
69a68
> #ifndef TARGET_CARBON
71,72c70,113
< 	  	kControlListBoxProc , (long) this ) ;
< 	
---
>                                   kControlListBoxProc , (long) this ) ;
> #else
>     ListDefSpec listDef;
>     OptionBits  options;
>     Size asize;
> 
>     listDef.defType = kListDefStandardTextType;
> 
>     CreateListBoxControl( parent->GetMacRootWindow(), &bounds, false, 0, 1, false, true,
>                           14, 14, false, &listDef, &m_macControl );
> 
>     GetControlData(m_macControl, kControlNoPart, kControlListBoxListHandleTag,
>                    sizeof(ListHandle), (Ptr) &m_macList, &asize);
> 
>     SetControlReference(m_macControl, (long) this);
>     SetControlVisibility(m_macControl, false, false);
> 
>     options = 0;
>     if ( style & wxLB_MULTIPLE )
>     {
>         options += lNoExtend ;
>     }
>     else if ( style & wxLB_EXTENDED )
>     {
>         options += lExtendDrag ;
>     }
>     else
>     {
>         options = lOnlyOne ;
>     }
>     SetListSelectionFlags(m_macList, options);
> 
>     //Cell cell = {0,0};
>     for ( int i = 0 ; i < n ; i++ )
>     {
>         //cell.v = i;
>         //LSetCell(choices[i].c_str(), choices[i].Length(), cell, m_macList);
>         Append( choices[i] ) ;
>     }
> 
>     MacPostControlCreate();
> #endif
> 
> #ifndef TARGET_CARBON
104c145
< 	::UMASetControlFontStyle( m_macControl , &controlstyle ) ;
---
> 	//::UMASetControlFontStyle( m_macControl , &controlstyle ) ;
112c153
< 
---
> #endif
121c162
< 		DisposeExtLDEFInfo( m_macList ) ;
---
> 		//DisposeExtLDEFInfo( m_macList ) ;
338c379
<                  "invalid index in wxListBox::GetClientData" );
---
>                  wxT("invalid index in wxListBox::GetClientData") );
463a505,514
> void wxListBox::Refresh(bool eraseBack, const wxRect *rect)
> {
>     // Set up port
>     WindowRef rootwindow = GetMacRootWindow() ;
>     wxWindow* wxrootwindow = wxFindWinFromMacWindow( rootwindow ) ;
>     wxMacDrawingHelper focus( wxrootwindow );
> 
>     UMADrawControl(m_macControl);
> }
> 
490a542
>     printf("Hello\n");
501d552
< 		
506,509c557,558
< 	ListHandle list ;
< 	long	result ;
< 	UMAGetControlData( m_macControl , kControlNoPart , kControlListBoxListHandleTag , sizeof( ListHandle ) , (char*) &list  , &result ) ;
< 	LDelRow( 1 , N , list ) ;
---
> 	LDelRow( 1 , N , m_macList );
>     Refresh();
519a569,570
>     LSetCell(text, strlen(text), cell, m_macList);
>     Refresh();
526a578,579
>     LSetCell(text, strlen(text), cell, m_macList);
>     Refresh();
531a585
>     Refresh();
537c591
< 	if ( LGetSelect( TRUE , &cell , m_macList ) )
---
> 	if ( LGetSelect( true , &cell , m_macList ) )
544a599
>     Refresh();
592c647,648
< 	LDraw( cell , m_macList ) ;
---
> 	LSetCell(text, strlen(text), cell, m_macList);
>     Refresh();
602c658,660
< 	Point pt = (**m_macList).cellSize ;
---
> 	Point pt;
> 
>     GetListCellSize(m_macList, &pt);
626d683
< 	

 	  	 
