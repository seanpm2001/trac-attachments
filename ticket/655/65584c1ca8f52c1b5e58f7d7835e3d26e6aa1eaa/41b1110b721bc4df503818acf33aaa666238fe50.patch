Index: samples/minimal/minimal.cpp
===================================================================
--- samples/minimal/minimal.cpp	(revision 74271)
+++ samples/minimal/minimal.cpp	(working copy)
@@ -30,6 +30,8 @@
     #include "wx/wx.h"
 #endif
 
+#include "wx/timer.h"
+
 // ----------------------------------------------------------------------------
 // resources
 // ----------------------------------------------------------------------------
@@ -67,8 +69,11 @@
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    void OnTimer(wxTimerEvent& event);
 
 private:
+    wxTimer m_timer;
+
     // any class wishing to process wxWidgets events must use this macro
     DECLARE_EVENT_TABLE()
 };
@@ -99,6 +104,7 @@
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_TIMER(wxID_ANY, MyFrame::OnTimer)
 END_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -147,7 +153,7 @@
 {
     // set the frame icon
     SetIcon(wxICON(sample));
-
+ 
 #if wxUSE_MENUS
     // create a menu bar
     wxMenu *fileMenu = new wxMenu;
@@ -172,10 +178,20 @@
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+
+    m_timer.SetOwner( this );
+
+    // changing this value from 1 to 2 (or any higher) value
+    // will drop cpu load from 100% to practically 0%
+    m_timer.Start( 1 );
 }
 
 
 // event handlers
+void MyFrame::OnTimer(wxTimerEvent& WXUNUSED(event))
+{
+    // do nothing here
+}
 
 void MyFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
 {
