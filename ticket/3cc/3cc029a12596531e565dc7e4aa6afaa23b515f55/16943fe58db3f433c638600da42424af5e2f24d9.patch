Index: include/wx/generic/private/grid.h
===================================================================
--- include/wx/generic/private/grid.h	(revision 67929)
+++ include/wx/generic/private/grid.h	(working copy)
@@ -559,6 +559,11 @@
     // This class is never used polymorphically but give it a virtual dtor
     // anyhow to suppress g++ complaints about it
     virtual ~wxGridOperations() { }
+
+    // Return the index of the line just before (by display order) the given one.
+    virtual int GetLineAtPrevPos(const wxGrid* grid, int line) const = 0;
+    // Return the index of the line just after (by display order) the given one.
+    virtual int GetLineAtNextPos(const wxGrid* grid, int line) const = 0;
 };
 
 class wxGridRowOperations : public wxGridOperations
@@ -623,6 +628,11 @@
         { return grid->GetGridRowLabelWindow(); }
     virtual int GetHeaderWindowSize(wxGrid *grid) const
         { return grid->GetRowLabelSize(); }
+
+    virtual int GetLineAtPrevPos(const wxGrid* WXUNUSED(grid), int line) const
+        { return line ? line - 1 : line; }
+    virtual int GetLineAtNextPos(const wxGrid* grid, int line) const
+        { return line < (GetNumberOfLines(grid)-1) ? line + 1 : line; }
 };
 
 class wxGridColumnOperations : public wxGridOperations
@@ -687,6 +697,11 @@
         { return grid->GetGridColLabelWindow(); }
     virtual int GetHeaderWindowSize(wxGrid *grid) const
         { return grid->GetColLabelSize(); }
+
+    virtual int GetLineAtPrevPos(const wxGrid* grid, int line) const
+        { return PosToLine(grid, GetLineStartPos(grid, line)-1, true); }
+    virtual int GetLineAtNextPos(const wxGrid* grid, int line) const
+        { return PosToLine(grid, GetLineEndPos(grid, line)+1, true); }
 };
 
 // This class abstracts the difference between operations going forward
@@ -743,14 +758,14 @@
     {
         wxASSERT_MSG( m_oper.Select(coords) >= 0, "invalid row/column" );
 
-        return m_oper.Select(coords) == 0;
+        return m_oper.Select(coords) == m_oper.GetLineAtPrevPos(m_grid, m_oper.Select(coords));
     }
 
     virtual void Advance(wxGridCellCoords& coords) const
     {
         wxASSERT( !IsAtBoundary(coords) );
 
-        m_oper.Set(coords, m_oper.Select(coords) - 1);
+        m_oper.Set(coords, m_oper.GetLineAtPrevPos(m_grid, m_oper.Select(coords)));
     }
 
     virtual int MoveByPixelDistance(int line, int distance) const
@@ -773,14 +788,14 @@
     {
         wxASSERT_MSG( m_oper.Select(coords) < m_numLines, "invalid row/column" );
 
-        return m_oper.Select(coords) == m_numLines - 1;
+        return m_oper.Select(coords) == m_oper.GetLineAtNextPos(m_grid, m_oper.Select(coords));
     }
 
     virtual void Advance(wxGridCellCoords& coords) const
     {
         wxASSERT( !IsAtBoundary(coords) );
 
-        m_oper.Set(coords, m_oper.Select(coords) + 1);
+        m_oper.Set(coords, m_oper.GetLineAtNextPos(m_grid, m_oper.Select(coords)));
     }
 
     virtual int MoveByPixelDistance(int line, int distance) const
