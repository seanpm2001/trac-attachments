Index: include/wx/sckaddr.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/sckaddr.h,v
retrieving revision 1.23
diff -b -u -t -r1.23 sckaddr.h
--- include/wx/sckaddr.h	2003/08/09 12:37:14	1.23
+++ include/wx/sckaddr.h	2003/11/05 12:20:58
@@ -52,23 +52,40 @@
   void Init();
 };
 
-class WXDLLIMPEXP_NET wxIPV4address : public wxSockAddress {
+// Interface to an IP address (either IPV4 or IPV6)
+class WXDLLIMPEXP_NET wxIPaddress : public wxSockAddress {
+  DECLARE_ABSTRACT_CLASS(wxIPaddress)
+public:
+  wxIPaddress();
+  wxIPaddress(const wxIPaddress& other);
+  virtual ~wxIPaddress();
+
+  virtual bool Hostname(const wxString& name) = 0;
+  virtual bool Service(const wxString& name) = 0;
+  virtual bool Service(unsigned short port) = 0;
+  virtual bool LocalHost() = 0;
+
+  virtual wxString Hostname() = 0;
+  virtual unsigned short Service() = 0;
+};
+
+class WXDLLIMPEXP_NET wxIPV4address : public wxIPaddress {
   DECLARE_DYNAMIC_CLASS(wxIPV4address)
 public:
   wxIPV4address();
   wxIPV4address(const wxIPV4address& other);
   virtual ~wxIPV4address();
 
-  bool Hostname(const wxString& name);
+  virtual bool Hostname(const wxString& name);
   bool Hostname(unsigned long addr);
-  bool Service(const wxString& name);
-  bool Service(unsigned short port);
-  bool LocalHost();
+  virtual bool Service(const wxString& name);
+  virtual bool Service(unsigned short port);
+  virtual bool LocalHost();
   bool AnyAddress();
 
-  wxString Hostname();
+  virtual wxString Hostname();
   wxString OrigHostname() { return m_origHostname; }
-  unsigned short Service();
+  virtual unsigned short Service();
   wxString IPAddress() const;
 
   virtual int Type() { return wxSockAddress::IPV4; }
@@ -79,7 +96,7 @@
 };
 
 #ifdef ENABLE_IPV6
-class WXDLLIMPEXP_NET wxIPV6address : public wxSockAddress {
+class WXDLLIMPEXP_NET wxIPV6address : public wxIPaddress {
   DECLARE_DYNAMIC_CLASS(wxIPV6address)
 private:
   struct sockaddr_in6 *m_addr;
@@ -88,14 +105,14 @@
   wxIPV6address(const wxIPV6address& other);
   virtual ~wxIPV6address();
 
-  bool Hostname(const wxString& name);
+  virtual bool Hostname(const wxString& name);
   bool Hostname(unsigned char addr[16]);
-  bool Service(const wxString& name);
-  bool Service(unsigned short port);
-  bool LocalHost();
+  virtual bool Service(const wxString& name);
+  virtual bool Service(unsigned short port);
+  virtual bool LocalHost();
 
-  wxString Hostname() const;
-  unsigned short Service() const;
+  virtual wxString Hostname() const;
+  virtual unsigned short Service() const;
 
   virtual int Type() { return wxSockAddress::IPV6; }
   virtual wxSockAddress *Clone() const { return new wxIPV6address(*this); }
Index: src/common/sckaddr.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/sckaddr.cpp,v
retrieving revision 1.38
diff -b -u -t -r1.38 sckaddr.cpp
--- src/common/sckaddr.cpp	2003/08/09 12:45:48	1.38
+++ src/common/sckaddr.cpp	2003/11/05 12:21:12
@@ -42,16 +42,17 @@
 #include "wx/sckaddr.h"
 
 IMPLEMENT_ABSTRACT_CLASS(wxSockAddress, wxObject)
-IMPLEMENT_DYNAMIC_CLASS(wxIPV4address, wxSockAddress)
+IMPLEMENT_ABSTRACT_CLASS(wxIPaddress, wxSockAddress)
+IMPLEMENT_DYNAMIC_CLASS(wxIPV4address, wxIPaddress)
 #ifdef ENABLE_IPV6
-IMPLEMENT_DYNAMIC_CLASS(wxIPV6address, wxSockAddress)
+IMPLEMENT_DYNAMIC_CLASS(wxIPV6address, wxIPaddress)
 #endif
 #if defined(__UNIX__) && !defined(__WINE__) && (!defined(__WXMAC__) || defined(__DARWIN__))
 IMPLEMENT_DYNAMIC_CLASS(wxUNIXaddress, wxSockAddress)
 #endif
 
 // ---------------------------------------------------------------------------
-// wxIPV4address
+// wxSockAddress
 // ---------------------------------------------------------------------------
 
 void wxSockAddress::Init()
@@ -102,15 +103,34 @@
 }
 
 // ---------------------------------------------------------------------------
+// wxIPaddress
+// ---------------------------------------------------------------------------
+
+wxIPaddress::wxIPaddress()
+            : wxSockAddress()
+{
+}
+
+wxIPaddress::wxIPaddress(const wxIPaddress& other)
+            : wxSockAddress(other)
+{
+}
+
+wxIPaddress::~wxIPaddress()
+{
+}
+
+// ---------------------------------------------------------------------------
 // wxIPV4address
 // ---------------------------------------------------------------------------
 
 wxIPV4address::wxIPV4address()
+             : wxIPaddress()
 {
 }
 
 wxIPV4address::wxIPV4address(const wxIPV4address& other)
-             : wxSockAddress(other)
+             : wxIPaddress(other)
 {
 }
 
@@ -199,12 +219,12 @@
 // ---------------------------------------------------------------------------
 
 wxIPV6address::wxIPV6address()
-  : wxSockAddress()
+  : wxIPaddress()
 {
 }
 
 wxIPV6address::wxIPV6address(const wxIPV6address& other)
-             : wxSockAddress(other)
+             : wxIPaddress(other)
 {
 }
 

 	  	 
