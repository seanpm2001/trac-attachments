Index: samples/listbox/lboxtest.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/listbox/lboxtest.cpp,v
retrieving revision 1.12
diff -b -u -2 -r1.12 lboxtest.cpp
--- samples/listbox/lboxtest.cpp	2006/03/09 12:46:27	1.12
+++ samples/listbox/lboxtest.cpp	2006/03/10 06:34:19
@@ -177,4 +177,7 @@
     wxSizer *m_sizerLbox;
 
+    // panel the controls such as the listbox are in
+    wxPanel* m_panel;
+
 #if wxUSE_LOG
     // the listbox for logging messages
@@ -350,5 +353,5 @@
 #endif // wxUSE_LOG
 
-    wxPanel *panel = new wxPanel(this, wxID_ANY);
+    m_panel = new wxPanel(this, wxID_ANY);
 
     /*
@@ -371,13 +374,13 @@
     };
 
-    wxStaticBox *box = new wxStaticBox(panel, wxID_ANY, _T("&Set listbox parameters"));
-    m_radioSelMode = new wxRadioBox(panel, wxID_ANY, _T("Selection &mode:"),
+    wxStaticBox *box = new wxStaticBox(m_panel, wxID_ANY, _T("&Set listbox parameters"));
+    m_radioSelMode = new wxRadioBox(m_panel, wxID_ANY, _T("Selection &mode:"),
                                     wxDefaultPosition, wxDefaultSize,
                                     WXSIZEOF(modes), modes,
                                     1, wxRA_SPECIFY_COLS);
 
-    m_chkVScroll = new wxCheckBox(panel, wxID_ANY, _T("Always show &vertical scrollbar"));
-    m_chkHScroll = new wxCheckBox(panel, wxID_ANY, _T("Show &horizontal scrollbar"));
-    m_chkSort = new wxCheckBox(panel, wxID_ANY, _T("&Sort items"));
+    m_chkVScroll = new wxCheckBox(m_panel, wxID_ANY, _T("Always show &vertical scrollbar"));
+    m_chkHScroll = new wxCheckBox(m_panel, wxID_ANY, _T("Show &horizontal scrollbar"));
+    m_chkSort = new wxCheckBox(m_panel, wxID_ANY, _T("&Sort items"));
 
     sizerLeft = new wxStaticBoxSizer(box, wxVERTICAL);
@@ -390,30 +393,30 @@
 
     wxSizer *sizerBtn = new wxBoxSizer(wxHORIZONTAL);
-    wxButton *btn = new wxButton(panel, LboxTest_Reset, _T("&Reset"));
+    wxButton *btn = new wxButton(m_panel, LboxTest_Reset, _T("&Reset"));
     sizerBtn->Add(btn, 0, wxLEFT | wxRIGHT, 5);
-    btn = new wxButton(panel, LboxTest_Create, _T("&Create"));
+    btn = new wxButton(m_panel, LboxTest_Create, _T("&Create"));
     sizerBtn->Add(btn, 0, wxLEFT | wxRIGHT, 5);
     sizerLeft->Add(sizerBtn, 0, wxALIGN_CENTRE_HORIZONTAL | wxALL, 15);
 
     // middle pane
-    wxStaticBox *box2 = new wxStaticBox(panel, wxID_ANY, _T("&Change listbox contents"));
+    wxStaticBox *box2 = new wxStaticBox(m_panel, wxID_ANY, _T("&Change listbox contents"));
     wxSizer *sizerMiddle = new wxStaticBoxSizer(box2, wxVERTICAL);
 
     wxSizer *sizerRow = new wxBoxSizer(wxHORIZONTAL);
-    btn = new wxButton(panel, LboxTest_Add, _T("&Add this string"));
-    m_textAdd = new wxTextCtrl(panel, LboxTest_AddText, _T("test item 0"));
+    btn = new wxButton(m_panel, LboxTest_Add, _T("&Add this string"));
+    m_textAdd = new wxTextCtrl(m_panel, LboxTest_AddText, _T("test item 0"));
     sizerRow->Add(btn, 0, wxRIGHT, 5);
     sizerRow->Add(m_textAdd, 1, wxLEFT, 5);
     sizerMiddle->Add(sizerRow, 0, wxALL | wxGROW, 5);
 
-    btn = new wxButton(panel, LboxTest_AddSeveral, _T("&Insert a few strings"));
+    btn = new wxButton(m_panel, LboxTest_AddSeveral, _T("&Insert a few strings"));
     sizerMiddle->Add(btn, 0, wxALL | wxGROW, 5);
 
-    btn = new wxButton(panel, LboxTest_AddMany, _T("Add &many strings"));
+    btn = new wxButton(m_panel, LboxTest_AddMany, _T("Add &many strings"));
     sizerMiddle->Add(btn, 0, wxALL | wxGROW, 5);
 
     sizerRow = new wxBoxSizer(wxHORIZONTAL);
-    btn = new wxButton(panel, LboxTest_Change, _T("C&hange current"));
-    m_textChange = new wxTextCtrl(panel, LboxTest_ChangeText, wxEmptyString);
+    btn = new wxButton(m_panel, LboxTest_Change, _T("C&hange current"));
+    m_textChange = new wxTextCtrl(m_panel, LboxTest_ChangeText, wxEmptyString);
     sizerRow->Add(btn, 0, wxRIGHT, 5);
     sizerRow->Add(m_textChange, 1, wxLEFT, 5);
@@ -421,22 +424,17 @@
 
     sizerRow = new wxBoxSizer(wxHORIZONTAL);
-    btn = new wxButton(panel, LboxTest_Delete, _T("&Delete this item"));
-    m_textDelete = new wxTextCtrl(panel, LboxTest_DeleteText, wxEmptyString);
+    btn = new wxButton(m_panel, LboxTest_Delete, _T("&Delete this item"));
+    m_textDelete = new wxTextCtrl(m_panel, LboxTest_DeleteText, wxEmptyString);
     sizerRow->Add(btn, 0, wxRIGHT, 5);
     sizerRow->Add(m_textDelete, 1, wxLEFT, 5);
     sizerMiddle->Add(sizerRow, 0, wxALL | wxGROW, 5);
 
-    btn = new wxButton(panel, LboxTest_DeleteSel, _T("Delete &selection"));
+    btn = new wxButton(m_panel, LboxTest_DeleteSel, _T("Delete &selection"));
     sizerMiddle->Add(btn, 0, wxALL | wxGROW, 5);
 
-    btn = new wxButton(panel, LboxTest_Clear, _T("&Clear"));
+    btn = new wxButton(m_panel, LboxTest_Clear, _T("&Clear"));
     sizerMiddle->Add(btn, 0, wxALL | wxGROW, 5);
 
     // right pane
-    m_lbox = new wxListBox(panel, LboxTest_Listbox,
-                           wxDefaultPosition, wxDefaultSize,
-                           0, NULL,
-                           wxLB_HSCROLL);
-    sizerRight->Add(m_lbox, 1, wxGROW | wxALL, 5);
     sizerRight->SetMinSize(250, 0);
     m_sizerLbox = sizerRight; // save it to modify it later
@@ -451,8 +449,8 @@
     wxSizer *sizerDown = new wxStaticBoxSizer
                              (
-                               new wxStaticBox(panel, wxID_ANY, _T("&Log window")),
+                               new wxStaticBox(m_panel, wxID_ANY, _T("&Log window")),
                                wxVERTICAL
                              );
-    m_lboxLog = new wxListBox(panel, wxID_ANY);
+    m_lboxLog = new wxListBox(m_panel, wxID_ANY);
     sizerDown->Add(m_lboxLog, 1, wxGROW | wxALL, 5);
 #else
@@ -461,9 +459,9 @@
     wxBoxSizer *sizerBtns = new wxBoxSizer(wxHORIZONTAL);
 #if wxUSE_LOG
-    btn = new wxButton(panel, LboxTest_ClearLog, _T("Clear &log"));
+    btn = new wxButton(m_panel, LboxTest_ClearLog, _T("Clear &log"));
     sizerBtns->Add(btn);
     sizerBtns->Add(10, 0); // spacer
 #endif // wxUSE_LOG
-    btn = new wxButton(panel, LboxTest_Quit, _T("E&xit"));
+    btn = new wxButton(m_panel, LboxTest_Quit, _T("E&xit"));
     sizerBtns->Add(btn);
     sizerDown->Add(sizerBtns, 0, wxALL | wxALIGN_RIGHT, 5);
@@ -474,9 +472,9 @@
     sizerTop->Add(sizerDown, 0,  wxGROW | (wxALL & ~wxTOP), 10);
 
-    // final initialization
+    // final initialization and create the listbox
     Reset();
-    m_dirty = false;
+    CreateLbox();
 
-    panel->SetSizer(sizerTop);
+    m_panel->SetSizer(sizerTop);
 
     sizerTop->Fit(this);
@@ -526,5 +524,4 @@
 void LboxTestFrame::CreateLbox()
 {
-    wxWindow *parent = m_lbox->GetParent();
     int flags = 0;
     switch ( m_radioSelMode->GetSelection() )
@@ -546,4 +543,7 @@
 
     wxArrayString items;
+    
+    if(m_lbox) //cache old items to restore later if listbox existed
+    {
     int count = m_lbox->GetCount();
     for ( int n = 0; n < count; n++ )
@@ -554,9 +554,11 @@
     m_sizerLbox->Detach(m_lbox);
     delete m_lbox;
+    }
 
-    m_lbox = new wxListBox(parent, LboxTest_Listbox,
+    m_lbox = new wxListBox(m_panel, LboxTest_Listbox,
                            wxDefaultPosition, wxDefaultSize,
                            0, NULL,
                            flags);
+
     m_lbox->Set(items);
     m_sizerLbox->Add(m_lbox, 1, wxGROW | wxALL, 5);
@@ -564,4 +566,7 @@
 
     m_dirty = false;
+
+    m_lbox->Connect(wxEVT_RIGHT_DOWN, 
+        wxMouseEventHandler(LboxTestFrame::OnListboxRDown), NULL, this);
 }
 

 	  	 
