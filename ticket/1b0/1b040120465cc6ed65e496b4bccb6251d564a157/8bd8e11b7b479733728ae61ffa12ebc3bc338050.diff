Index: src/msw/ole/activex.cpp
===================================================================
--- src/msw/ole/activex.cpp	(revision 63570)
+++ src/msw/ole/activex.cpp	(working copy)
@@ -928,6 +928,7 @@
 
     // FrameSite
     m_frameSite = new FrameSite(m_realparent, this);
+    m_frameSite->AddRef();
     // oleClientSite
     hret = m_clientSite.QueryInterface(
         IID_IOleClientSite, (IDispatch *) m_frameSite);
@@ -990,6 +991,8 @@
             if (impTypeFlags & IMPLTYPEFLAG_FSOURCE)
             {
                 // WXOLE_TRACEOUT("Default Event Sink");
+                // Not tested for
+                // IMPLTYPEFLAG_FRESTRICTED (0x4) the member should not be displayed or programmable by users. 
                 defEventSink = true;
                 if (impTypeFlags & IMPLTYPEFLAG_FDEFAULTVTABLE)
                 {
@@ -1020,12 +1023,19 @@
 
                 HRESULT hret =
                     cpContainer->FindConnectionPoint(ta->guid, cp.GetRef());
-                CHECK_HR(hret);
+                // hret vals are S_OK
+                // E_POINTER The address in pointer to (out param) IConnectionPoint cp.GetRef() is not valid. 
+                // CONNECT_E_NOCONNECTION This connectable object does not support the outgoing interface specified by ta->guid.
+                //      so cp is NULL
+                // We do not need a log message just because there is no connection point
+                if(hret != CONNECT_E_NOCONNECTION)
+                    CHECK_HR(hret);
 
                 if ( cp )
                 {
-                    IDispatch* disp;
-                    m_frameSite->QueryInterface(IID_IDispatch, (void**)&disp);
+
+                  //IDispatch* disp;
+                  //m_frameSite->QueryInterface(IID_IDispatch, (void**)&disp);
                     hret = cp->Advise(new wxActiveXEvents(this, ta->guid),
                                       &adviseCookie);
                     CHECK_HR(hret);
