Index: wxWidgets/src/propgrid/property.cpp
===================================================================
--- wxWidgets/src/propgrid/property.cpp	(revision 66779)
+++ wxWidgets/src/propgrid/property.cpp	(working copy)
@@ -2326,9 +2326,9 @@
     else
         allChildrenSpecified = true;
 
-    wxVariant childValue = list[0];
     unsigned int i;
     unsigned int n = 0;
+    wxVariant childValue = list[n];
 
     //wxLogDebug(wxT(">> %s.AdaptListToValue()"),GetBaseName().c_str());
 
Index: wxWidgets/src/richtext/richtextbuffer.cpp
===================================================================
--- wxWidgets/src/richtext/richtextbuffer.cpp	(revision 66779)
+++ wxWidgets/src/richtext/richtextbuffer.cpp	(working copy)
@@ -8914,7 +8914,7 @@
         return wxDynamicCast(obj, wxRichTextCell);
     }
     else
-        return false;
+        return NULL;
 }
 
 // Returns a selection object specifying the selections between start and end character positions.
Index: wxWidgets/src/regex/regc_nfa.c
===================================================================
--- wxWidgets/src/regex/regc_nfa.c	(revision 66779)
+++ wxWidgets/src/regex/regc_nfa.c	(working copy)
@@ -36,7 +36,7 @@
  */
 
 #define	NISERR()	VISERR(nfa->v)
-#define	NERR(e)		VERR(nfa->v, (e))
+#define	NERR(e)		(void)VERR(nfa->v, (e))
 
 
 /*
Index: wxWidgets/src/regex/regc_color.c
===================================================================
--- wxWidgets/src/regex/regc_color.c	(revision 66779)
+++ wxWidgets/src/regex/regc_color.c	(working copy)
@@ -37,7 +37,7 @@
 
 
 #define	CISERR()	VISERR(cm->v)
-#define	CERR(e)		VERR(cm->v, (e))
+#define	CERR(e)		(void)VERR(cm->v, (e))
 
 
 
Index: wxWidgets/src/regex/regexec.c
===================================================================
--- wxWidgets/src/regex/regexec.c	(revision 66779)
+++ wxWidgets/src/regex/regexec.c	(working copy)
@@ -110,7 +110,7 @@
 #define	VISERR(vv)	((vv)->err != 0)	/* have we seen an error yet? */
 #define	ISERR()	VISERR(v)
 #define	VERR(vv,e)	(((vv)->err) ? (vv)->err : ((vv)->err = (e)))
-#define	ERR(e)	VERR(v, e)		/* record an error */
+#define	ERR(e)	(void)VERR(v, e)		/* record an error */
 #define	NOERR()	{if (ISERR()) return v->err;}	/* if error seen, return it */
 #define	OFF(p)	((p) - v->start)
 #define	LOFF(p)	((long)OFF(p))
Index: wxWidgets/src/regex/regc_lex.c
===================================================================
--- wxWidgets/src/regex/regc_lex.c	(revision 66779)
+++ wxWidgets/src/regex/regc_lex.c	(working copy)
@@ -42,7 +42,7 @@
 #define	SETV(c, n)	(v->nexttype = (c), v->nextvalue = (n))
 #define	RET(c)		return (SET(c), 1)
 #define	RETV(c, n)	return (SETV(c, n), 1)
-#define	FAILW(e)	return (ERR(e), 0)	/* ERR does SET(EOS) */
+#define	FAILW(e)	(void)ERR(e)		/* ERR does SET(EOS) */
 #define	LASTTYPE(t)	(v->lasttype == (t))
 
 /* lexical contexts */
@@ -804,6 +804,7 @@
 		break;
 	}
 	assert(NOTREACHED);
+	return 0;			/* for benefit of blind compilers */
 }
 
 /*
Index: wxWidgets/src/regex/regcomp.c
===================================================================
--- wxWidgets/src/regex/regcomp.c	(revision 66779)
+++ wxWidgets/src/regex/regcomp.c	(working copy)
@@ -235,11 +235,11 @@
 #define	ISERR()	VISERR(v)
 #define	VERR(vv,e)	((vv)->nexttype = EOS, ((vv)->err) ? (vv)->err :\
 							((vv)->err = (e)))
-#define	ERR(e)	VERR(v, e)		/* record an error */
+#define	ERR(e)	(void)VERR(v, e)	/* record an error */
 #define	NOERR()	{if (ISERR()) return;}	/* if error seen, return */
 #define	NOERRN()	{if (ISERR()) return NULL;}	/* NOERR with retval */
 #define	NOERRZ()	{if (ISERR()) return 0;}	/* NOERR with retval */
-#define	INSIST(c, e)	((c) ? 0 : ERR(e))	/* if condition false, error */
+#define	INSIST(c, e)	(void)((c) ? 0 : ERR(e))	/* if condition false, error */
 #define	NOTE(b)	(v->re->re_info |= (b))		/* note visible condition */
 #define	EMPTYARC(x, y)	newarc(v->nfa, EMPTY, 0, x, y)
 
Index: wxWidgets/src/tiff/libtiff/tif_config.h
===================================================================
--- wxWidgets/src/tiff/libtiff/tif_config.h	(revision 66779)
+++ wxWidgets/src/tiff/libtiff/tif_config.h	(working copy)
@@ -32,7 +32,7 @@
 #define SIZEOF_LONG 4
 #endif
 
-#if __BIG_ENDIAN__
+#if defined __BIG_ENDIAN__ && __BIG_ENDIAN__
     /* Set the native cpu bit order */
     #define HOST_FILLORDER FILLORDER_MSB2LSB
     
Index: wxWidgets/src/osx/cocoa/window.mm
===================================================================
--- wxWidgets/src/osx/cocoa/window.mm	(revision 66779)
+++ wxWidgets/src/osx/cocoa/window.mm	(working copy)
@@ -2031,9 +2031,9 @@
     // this will fire higher level events, like insertText, to help
     // us handle EVT_CHAR, etc.
 
-    if ( m_wxPeer->MacIsUserPane() && [event type] == NSKeyDown)
+    if ( !result )
     {
-        if ( !result )
+        if ( m_wxPeer->MacIsUserPane() && [event type] == NSKeyDown)
         {
             if ( wxevent.GetKeyCode() < WXK_SPACE || wxevent.GetKeyCode() == WXK_DELETE || wxevent.GetKeyCode() >= WXK_START )
             {
Index: wxWidgets/src/osx/cocoa/glcanvas.mm
===================================================================
--- wxWidgets/src/osx/cocoa/glcanvas.mm	(revision 66779)
+++ wxWidgets/src/osx/cocoa/glcanvas.mm	(working copy)
@@ -187,7 +187,7 @@
                         if ( !attribList[arg++] )
                             break;
 
-                        return false;
+                        return nil;
                     }
 
                     data[p++] = NSOpenGLPFASampleBuffers;
@@ -204,7 +204,7 @@
                         if ( !attribList[arg++] )
                             break;
 
-                        return false;
+                        return nil;
                     }
 
                     data[p++] = NSOpenGLPFASamples;
Index: wxWidgets/src/osx/cocoa/toolbar.mm
===================================================================
--- wxWidgets/src/osx/cocoa/toolbar.mm	(revision 66779)
+++ wxWidgets/src/osx/cocoa/toolbar.mm	(working copy)
@@ -987,7 +987,7 @@
                     }
 
                     wxCFStringRef cfidentifier;
-                    const NSString *nsItemId;
+                    NSString *nsItemId;
                     if (tool->GetStyle() == wxTOOL_STYLE_SEPARATOR)
                     {
                         nsItemId = tool->IsStretchable() ? NSToolbarFlexibleSpaceItemIdentifier
@@ -1249,7 +1249,7 @@
 #if wxOSX_USE_NATIVE_TOOLBAR
                 if (m_macToolbar != NULL)
                 {
-                    const NSString * const
+                    NSString * const
                         nsItemId = tool->IsStretchable() ? NSToolbarFlexibleSpaceItemIdentifier
                                                          : NSToolbarSeparatorItemIdentifier;
                     NSToolbarItem* item = [[NSToolbarItem alloc] initWithItemIdentifier:nsItemId];
Index: wxWidgets/src/osx/carbon/graphics.cpp
===================================================================
--- wxWidgets/src/osx/carbon/graphics.cpp	(revision 66779)
+++ wxWidgets/src/osx/carbon/graphics.cpp	(working copy)
@@ -1240,7 +1240,7 @@
     virtual void Transform( const wxGraphicsMatrixData* matrix );
 
     // gets the bounding box enclosing all points (possibly including control points)
-    virtual void GetBox(wxDouble *x, wxDouble *y, wxDouble *w, wxDouble *y) const;
+    virtual void GetBox(wxDouble *x, wxDouble *y, wxDouble *w, wxDouble *h) const;
 
     virtual bool Contains( wxDouble x, wxDouble y, wxPolygonFillMode fillStyle = wxODDEVEN_RULE) const;
 private :
Index: wxWidgets/src/osx/carbon/region.cpp
===================================================================
--- wxWidgets/src/osx/carbon/region.cpp	(revision 66779)
+++ wxWidgets/src/osx/carbon/region.cpp	(working copy)
@@ -288,7 +288,7 @@
         return true ;
 }
 
-const WXHRGN wxRegion::GetWXHRGN() const
+WXHRGN wxRegion::GetWXHRGN() const
 {
     return M_REGION ;
 }
Index: wxWidgets/src/generic/grid.cpp
===================================================================
--- wxWidgets/src/generic/grid.cpp	(revision 66779)
+++ wxWidgets/src/generic/grid.cpp	(working copy)
@@ -156,6 +156,23 @@
 wxDEFINE_EVENT( wxEVT_GRID_EDITOR_HIDDEN, wxGridEvent );
 wxDEFINE_EVENT( wxEVT_GRID_EDITOR_CREATED, wxGridEditorCreatedEvent );
 
+// ----------------------------------------------------------------------------
+// private helpers
+// ----------------------------------------------------------------------------
+
+namespace
+{
+
+// ensure that first is less or equal to second, swapping the values if
+// necessary
+void EnsureFirstLessThanSecond(int& first, int& second)
+{
+    if ( first > second )
+        wxSwap(first, second);
+}
+
+} // anonymous namespace
+
 // ============================================================================
 // implementation
 // ============================================================================
Index: wxWidgets/include/wx/wxcrt.h
===================================================================
--- wxWidgets/include/wx/wxcrt.h	(revision 66779)
+++ wxWidgets/include/wx/wxcrt.h	(working copy)
@@ -467,7 +467,7 @@
 // forward-declare the template and implement it below WX_STRCMP_FUNC. OTOH,
 // this fails to compile with VC6, so don't do it for VC. It also causes
 // problems with GCC visibility in newer GCC versions.
-#if !(defined(__VISUALC__) || wxCHECK_GCC_VERSION(3,5))
+#if !(defined(__VISUALC__) || wxCHECK_GCC_VERSION(3,5)) || defined(__clang__)
     #define wxNEEDS_DECL_BEFORE_TEMPLATE
 #endif
 
@@ -880,7 +880,7 @@
         { return implW(nptr, endptr, base); }                                 \
     template<typename T>                                                      \
     inline rettype name(const wxScopedCharTypeBuffer<T>& nptr, T **endptr, int base)\
-        { return name(nptr.data(), endptr); }                                 \
+        { (void)base; return name(nptr.data(), endptr); }                     \
     template<typename T>                                                      \
     inline rettype name(const wxString& nptr, T endptr, int base)             \
     {                                                                         \
Index: wxWidgets/include/wx/valnum.h
===================================================================
--- wxWidgets/include/wx/valnum.h	(revision 66779)
+++ wxWidgets/include/wx/valnum.h	(working copy)
@@ -192,7 +192,7 @@
             else if ( !BaseValidator::FromString(s, &value) )
                 return false;
 
-            if ( !IsInRange(value) )
+            if ( !this->IsInRange(value) )
                 return false;
 
             *m_value = static_cast<ValueType>(value);
@@ -225,7 +225,7 @@
     {
         wxString s;
         if ( value != 0 || !BaseValidator::HasFlag(wxNUM_VAL_ZERO_AS_BLANK) )
-            s = ToString(value);
+            s = this->ToString(value);
 
         return s;
     }
@@ -314,8 +314,8 @@
     wxIntegerValidator(ValueType *value = NULL, int style = wxNUM_VAL_DEFAULT)
         : Base(value, style)
     {
-        DoSetMin(std::numeric_limits<ValueType>::min());
-        DoSetMax(std::numeric_limits<ValueType>::max());
+        this->DoSetMin(std::numeric_limits<ValueType>::min());
+        this->DoSetMax(std::numeric_limits<ValueType>::max());
     }
 
     virtual wxObject *Clone() const { return new wxIntegerValidator(*this); }
@@ -418,7 +418,7 @@
                       int style = wxNUM_VAL_DEFAULT)
         : Base(value, style)
     {
-        DoSetMinMax();
+        this->DoSetMinMax();
 
         this->SetPrecision(precision);
     }
@@ -434,8 +434,8 @@
         // NB: Do not use min(), it's not the smallest representable value for
         //     the floating point types but rather the smallest representable
         //     positive value.
-        DoSetMin(-std::numeric_limits<ValueType>::max());
-        DoSetMax( std::numeric_limits<ValueType>::max());
+        this->DoSetMin(-std::numeric_limits<ValueType>::max());
+        this->DoSetMax( std::numeric_limits<ValueType>::max());
     }
 };
 
Index: wxWidgets/include/wx/weakref.h
===================================================================
--- wxWidgets/include/wx/weakref.h	(revision 66779)
+++ wxWidgets/include/wx/weakref.h	(working copy)
@@ -218,7 +218,7 @@
     // below is not used by at least g++4 when a literal NULL is used
     wxWeakRef(T *pobj)
     {
-        Assign(pobj);
+        this->Assign(pobj);
     }
 #endif // !__VISUALC6__
 
@@ -239,7 +239,7 @@
 
     wxWeakRef<T>& operator=(const wxWeakRef<T>& wr)
     {
-        AssignCopy(wr);
+        this->AssignCopy(wr);
         return *this;
     }
 
Index: wxWidgets/include/wx/dataview.h
===================================================================
--- wxWidgets/include/wx/dataview.h	(revision 66779)
+++ wxWidgets/include/wx/dataview.h	(working copy)
@@ -772,7 +772,7 @@
         m_model(event.m_model),
         m_value(event.m_value),
         m_column(event.m_column),
-        m_pos(m_pos),
+        m_pos(event.m_pos),
         m_cacheFrom(event.m_cacheFrom),
         m_cacheTo(event.m_cacheTo)
 #if wxUSE_DRAG_AND_DROP
Index: wxWidgets/include/wx/html/webkit.h
===================================================================
--- wxWidgets/include/wx/html/webkit.h	(revision 66779)
+++ wxWidgets/include/wx/html/webkit.h	(working copy)
@@ -19,6 +19,7 @@
 #endif
 
 #include "wx/control.h"
+DECLARE_WXCOCOA_OBJC_CLASS(WebView);
 
 // ----------------------------------------------------------------------------
 // Web Kit Control
@@ -107,13 +108,11 @@
     wxString m_currentURL;
     wxString m_pageTitle;
 
-    struct objc_object *m_webView;
+    WX_WebView m_webView;
 
     // we may use this later to setup our own mouse events,
     // so leave it in for now.
     void* m_webKitCtrlEventHandler;
-    //It should be WebView*, but WebView is an Objective-C class
-    //TODO: look into using DECLARE_WXCOCOA_OBJC_CLASS rather than this.
 };
 
 // ----------------------------------------------------------------------------
Index: wxWidgets/include/wx/buffer.h
===================================================================
--- wxWidgets/include/wx/buffer.h	(revision 66779)
+++ wxWidgets/include/wx/buffer.h	(working copy)
@@ -260,7 +260,7 @@
         {
             if ( len == wxNO_LEN )
                 len = wxStrlen(str);
-            this->m_data = new Data(StrCopy(str, len), len);
+            this->m_data = new Data(this->StrCopy(str, len), len);
         }
         else
         {
@@ -295,7 +295,7 @@
 
     wxCharTypeBuffer(const wxScopedCharTypeBuffer<T>& src)
     {
-        MakeOwnedCopyOf(src);
+        this->MakeOwnedCopyOf(src);
     }
 
     wxCharTypeBuffer& operator=(const wxScopedCharTypeBuffer<T>& src)
Index: wxWidgets/include/wx/osx/carbon/region.h
===================================================================
--- wxWidgets/include/wx/osx/carbon/region.h	(revision 66779)
+++ wxWidgets/include/wx/osx/carbon/region.h	(working copy)
@@ -40,7 +40,7 @@
     virtual bool IsEmpty() const;
 
     // Internal
-    const WXHRGN GetWXHRGN() const ;
+    WXHRGN GetWXHRGN() const ;
 
 protected:
     virtual wxGDIRefData *CreateGDIRefData() const;
Index: wxWidgets/include/wx/generic/private/grid.h
===================================================================
--- wxWidgets/include/wx/generic/private/grid.h	(revision 66779)
+++ wxWidgets/include/wx/generic/private/grid.h	(working copy)
@@ -794,23 +794,6 @@
 };
 
 // ----------------------------------------------------------------------------
-// private helpers
-// ----------------------------------------------------------------------------
-
-namespace
-{
-
-// ensure that first is less or equal to second, swapping the values if
-// necessary
-void EnsureFirstLessThanSecond(int& first, int& second)
-{
-    if ( first > second )
-        wxSwap(first, second);
-}
-
-} // anonymous namespace
-
-// ----------------------------------------------------------------------------
 // data structures used for the data type registry
 // ----------------------------------------------------------------------------
 
