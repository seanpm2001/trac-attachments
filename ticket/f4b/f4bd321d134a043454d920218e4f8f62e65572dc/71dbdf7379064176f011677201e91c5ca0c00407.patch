Index: P:/dev-fix/2.5.x/dev/sdk/wxWidgets-ec/interface/wx/stream.h
===================================================================
--- P:/dev-fix/2.5.x/dev/sdk/wxWidgets-ec/interface/wx/stream.h	(revision 3429)
+++ P:/dev-fix/2.5.x/dev/sdk/wxWidgets-ec/interface/wx/stream.h	(revision 3430)
@@ -1059,3 +1059,37 @@
 };
 
 
+/**
+    @class wxWrapperInputStream
+
+    A wrapper input stream is a kind of filter stream which forwards all the
+    operations to its base stream. This is useful to build utility classes such
+    as wxFSInputStream.
+
+    @note
+    The interface of this class is the same as that of wxInputStream.
+    Only a constructor differs and it is documented below.
+
+    @library{wxbase}
+    @category{streams}
+
+    @see wxFSInputStream, wxFilterInputStream
+    @since 2.9.4
+*/
+class wxWrapperInputStream : public wxFilterInputStream
+{
+public:
+    wxWrapperInputStream();
+
+    //@{
+    /**
+        Initializes a wrapper stream.
+
+        If the parent stream is passed as a pointer then the new wrapper stream
+        takes ownership of it. If it is passed by reference then it does not.
+    */
+    wxWrapperInputStream(wxInputStream& stream);
+    wxWrapperInputStream(wxInputStream *stream);
+    //@}
+};
+
Index: P:/dev-fix/2.5.x/dev/sdk/wxWidgets-ec/interface/wx/filesys.h
===================================================================
--- P:/dev-fix/2.5.x/dev/sdk/wxWidgets-ec/interface/wx/filesys.h	(revision 3429)
+++ P:/dev-fix/2.5.x/dev/sdk/wxWidgets-ec/interface/wx/filesys.h	(revision 3430)
@@ -463,3 +463,42 @@
     static wxString GetRightLocation(const wxString& location);
 };
 
+
+/**
+    @class wxFSInputStream
+
+    This class represents data read in from a wxFileSystem file.
+
+    @library{wxbase}
+    @category{streams}
+
+    @see wxWrapperInputStream, wxFSFile
+*/
+class wxFSInputStream : public wxWrapperInputStream
+{
+public:
+    /**
+        Opens the specified file using its @a ifileName name in read-only mode,
+        the file is opened through wxFileSystem::OpenFile.
+
+        @param flags
+            Combination of flags from wxFileSystemOpenFlags. wxFS_READ is implied.
+
+        @warning
+        You should use wxStreamBase::IsOk() to verify if the constructor succeeded.
+    */
+    wxFileInputStream(const wxString& ifileName, int flags=0);
+
+    /**
+        Destructor.
+    */
+    virtual ~wxFileInputStream();
+
+    /**
+        Returns @true if the stream is initialized and ready.
+    */
+    bool IsOk() const;
+};
+
+
+
