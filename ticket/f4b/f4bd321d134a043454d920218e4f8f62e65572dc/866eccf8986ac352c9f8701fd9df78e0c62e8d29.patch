Index: include/wx/stream.h
===================================================================
--- include/wx/stream.h	(revision 3396)
+++ include/wx/stream.h	(working copy)
@@ -307,6 +307,22 @@
     wxInputStream *m_parent_i_stream;
     bool m_owns;
 
+    struct LastErrorSynchronizer
+    {
+        LastErrorSynchronizer(const wxFilterInputStream& stream)
+            : m_stream(stream) {}
+
+        ~LastErrorSynchronizer() {
+            m_stream.SynchronizeLastError();
+        }
+
+        const wxFilterInputStream& m_stream;
+    };
+
+    void SynchronizeLastError() const {
+        const_cast<wxFilterInputStream*>(this)->Reset(m_parent_i_stream->GetLastError());
+    }
+
     DECLARE_ABSTRACT_CLASS(wxFilterInputStream)
     wxDECLARE_NO_COPY_CLASS(wxFilterInputStream);
 };
@@ -640,6 +656,30 @@
     inline wxStreamBuffer *wxBufferedOutputStream::OutputStreamBuffer() const { return m_o_streambuf; }
 #endif // WXWIN_COMPATIBILITY_2_6
 
+// ---------------------------------------------------------------------------
+// wxWrapperInputStream
+// ---------------------------------------------------------------------------
+
+class WXDLLIMPEXP_BASE wxWrapperInputStream : public wxFilterInputStream
+{
+public:
+    wxWrapperInputStream();
+    wxWrapperInputStream(wxInputStream& stream);
+    wxWrapperInputStream(wxInputStream *stream);
+    virtual ~wxWrapperInputStream();
+
+    virtual wxFileOffset GetLength() const;
+    virtual bool IsSeekable() const;
+
+protected:
+    size_t OnSysRead(void *buffer, size_t size);
+    wxFileOffset OnSysSeek(wxFileOffset pos, wxSeekMode mode);
+    wxFileOffset OnSysTell() const;
+
+    wxDECLARE_NO_COPY_CLASS(wxWrapperInputStream);
+};
+
+
 #endif // wxUSE_STREAMS
 
 #endif // _WX_WXSTREAM_H__
Index: src/common/stream.cpp
===================================================================
--- src/common/stream.cpp	(revision 3397)
+++ src/common/stream.cpp	(working copy)
@@ -1446,6 +1446,74 @@
     m_o_streambuf = buffer;
 }
 
+// ---------------------------------------------------------------------------
+// wxWrapperInputStream
+// ---------------------------------------------------------------------------
+
+wxWrapperInputStream::wxWrapperInputStream()
+{
+    m_lasterror = wxSTREAM_READ_ERROR;
+}
+
+wxWrapperInputStream::wxWrapperInputStream(wxInputStream& stream)
+    : wxFilterInputStream(stream)
+{
+    SynchronizeLastError();
+}
+
+wxWrapperInputStream::wxWrapperInputStream(wxInputStream *stream)
+    : wxFilterInputStream(stream)
+{
+    if (m_parent_i_stream)
+        SynchronizeLastError();
+    else
+        m_lasterror = wxSTREAM_READ_ERROR;
+}
+
+wxWrapperInputStream::~wxWrapperInputStream()
+{
+}
+
+wxFileOffset wxWrapperInputStream::GetLength() const
+{
+    wxCHECK_MSG(m_parent_i_stream, wxInvalidOffset, "Stream not valid");
+
+    LastErrorSynchronizer les(*this);
+    return m_parent_i_stream->GetLength();
+}
+
+bool wxWrapperInputStream::IsSeekable() const
+{
+    wxCHECK_MSG(m_parent_i_stream, false, "Stream not valid");
+    return m_parent_i_stream->IsSeekable();
+}
+
+size_t wxWrapperInputStream::OnSysRead(void *buffer, size_t size)
+{
+    wxCHECK_MSG(m_parent_i_stream, false, "Stream not valid");
+
+    LastErrorSynchronizer les(*this);
+
+    m_parent_i_stream->Read (buffer, size);
+    return m_parent_i_stream->LastRead();
+}
+
+wxFileOffset wxWrapperInputStream::OnSysSeek(wxFileOffset pos, wxSeekMode mode)
+{
+    wxCHECK_MSG(IsSeekable(), false, "Stream not seekable");
+
+    LastErrorSynchronizer les(*this);
+    return m_parent_i_stream->SeekI (pos, mode);
+}
+
+wxFileOffset wxWrapperInputStream::OnSysTell() const
+{
+    wxCHECK_MSG(m_parent_i_stream, false, "Stream not valid");
+
+    LastErrorSynchronizer les(*this);
+    return m_parent_i_stream->TellI();
+}
+
 // ----------------------------------------------------------------------------
 // Some IOManip function
 // ----------------------------------------------------------------------------
