From aac1def41827f69c600985c4131bdc6413f8b5d1 Mon Sep 17 00:00:00 2001
From: Oliver Buchtala <oliver.buchtala@googlemail.com>
Date: Tue, 8 May 2012 10:23:10 +0200
Subject: [PATCH 5/6] Add a sample for webview jsc extension support.

---
 configure.in                                |    2 +-
 samples/webview/javascript/gcd.c            |   12 +++++++
 samples/webview/javascript/gcd_jsc_wrap.c   |   43 +++++++++++++++++++++++
 samples/webview/javascript/javascript.bkl   |   34 +++++++++++++++++++
 samples/webview/javascript/main.cpp         |   38 +++++++++++++++++++++
 samples/webview/javascript/webframe.cpp     |   49 +++++++++++++++++++++++++++
 samples/webview/javascript/webframe.h       |   47 +++++++++++++++++++++++++
 samples/webview/javascript/webinspector.cpp |   37 ++++++++++++++++++++
 samples/webview/javascript/webinspector.h   |   26 ++++++++++++++
 samples/webview/webview_samples.bkl         |    2 +-
 10 files changed, 288 insertions(+), 2 deletions(-)
 create mode 100644 samples/webview/javascript/gcd.c
 create mode 100644 samples/webview/javascript/gcd_jsc_wrap.c
 create mode 100644 samples/webview/javascript/javascript.bkl
 create mode 100644 samples/webview/javascript/main.cpp
 create mode 100644 samples/webview/javascript/webframe.cpp
 create mode 100644 samples/webview/javascript/webframe.h
 create mode 100644 samples/webview/javascript/webinspector.cpp
 create mode 100644 samples/webview/javascript/webinspector.h

diff --git a/configure.in b/configure.in
index b6b6322..267cf74 100644
--- a/configure.in
+++ b/configure.in
@@ -7313,7 +7313,7 @@ fi
 if test "$wxUSE_WEBVIEW" = "yes"; then
     USE_WEBVIEW=1
     AC_DEFINE(wxUSE_WEBVIEW)
-    SAMPLES_SUBDIRS="$SAMPLES_SUBDIRS webview webview/browser"
+    SAMPLES_SUBDIRS="$SAMPLES_SUBDIRS webview webview/browser webview/javascript"
 else
     USE_WEBVIEW=0
 fi
diff --git a/samples/webview/javascript/gcd.c b/samples/webview/javascript/gcd.c
new file mode 100644
index 0000000..af8d338
--- /dev/null
+++ b/samples/webview/javascript/gcd.c
@@ -0,0 +1,12 @@
+
+/* Compute the greatest common divisor of positive integers */
+int gcd(int x, int y) {
+  int g;
+  g = y;
+  while (x > 0) {
+    g = x;
+    x = y % x;
+    y = g;
+  }
+  return g;
+}
diff --git a/samples/webview/javascript/gcd_jsc_wrap.c b/samples/webview/javascript/gcd_jsc_wrap.c
new file mode 100644
index 0000000..9d0ead3
--- /dev/null
+++ b/samples/webview/javascript/gcd_jsc_wrap.c
@@ -0,0 +1,43 @@
+#include <JavaScriptCore/JavaScript.h>
+
+extern int  gcd(int x, int y);
+
+JSValueRef _wrap_gcd(JSContextRef context, JSObjectRef function, JSObjectRef thisObject, size_t argc, const JSValueRef argv[], JSValueRef* exception)
+{
+  JSValueRef jsresult;
+  int arg1 ;
+  int arg2 ;
+  int result;
+
+  arg1 = (int)JSValueToNumber(context, argv[0], NULL);
+  arg2 = (int)JSValueToNumber(context, argv[1], NULL);
+  result = (int)gcd(arg1,arg2);
+  jsresult = JSValueMakeNumber(context, result);
+  return jsresult;
+}
+
+bool JSC_initFunction(JSGlobalContextRef rContext, JSObjectRef rObject, const char* szFunctionName,
+                               JSObjectCallAsFunctionCallback cbFunction)
+{
+    JSStringRef functionString = JSStringCreateWithUTF8CString(szFunctionName);
+    JSObjectSetProperty(
+            rContext,
+            rObject,
+            functionString,
+            JSObjectMakeFunctionWithCallback(
+                rContext,
+                functionString,
+                cbFunction),
+            kJSPropertyAttributeNone,
+            NULL);
+    JSStringRelease(functionString);
+    return true;
+}
+
+bool JSC_gcd_load_extension(JSGlobalContextRef context) {
+    JSObjectRef globalObject = JSContextGetGlobalObject(context);
+
+    JSC_initFunction(context, globalObject, "gcd", _wrap_gcd);
+
+    return true;
+}
diff --git a/samples/webview/javascript/javascript.bkl b/samples/webview/javascript/javascript.bkl
new file mode 100644
index 0000000..13c2192
--- /dev/null
+++ b/samples/webview/javascript/javascript.bkl
@@ -0,0 +1,34 @@
+<?xml version="1.0" ?>
+<!-- $Id: widgets.bkl 59311 2009-03-04 11:47:32Z FM $ -->
+<makefile>
+
+    <include file="../../../build/bakefiles/common_samples.bkl"/>
+
+    <set var="WEBVIEW_JSEXT_PLATFORM_SOURCES" hints="files">
+        <if cond="TOOLKIT=='GTK'">
+            webinspector.cpp
+        </if>
+    </set>
+
+    <exe id="javascript" template="wx_sample" template_append="wx_append">
+        <sources>
+            webframe.cpp
+            gcd.c
+            gcd_jsc_wrap.c
+            main.cpp
+            $(WEBVIEW_JSEXT_PLATFORM_SOURCES)
+        </sources>
+        <headers></headers>
+        <wx-lib>webview</wx-lib>
+        <wx-lib>stc</wx-lib>
+        <wx-lib>adv</wx-lib>
+        <wx-lib>core</wx-lib>
+        <wx-lib>base</wx-lib>
+        <win32-res>../../sample.rc</win32-res>
+
+        <if cond="OUT_OF_TREE_MAKEFILES=='0'">
+            <sys-lib>$(LIB_SCINTILLA)</sys-lib>
+        </if>
+    </exe>
+
+</makefile>
diff --git a/samples/webview/javascript/main.cpp b/samples/webview/javascript/main.cpp
new file mode 100644
index 0000000..68ca07d
--- /dev/null
+++ b/samples/webview/javascript/main.cpp
@@ -0,0 +1,38 @@
+#include <JavaScriptCore/JavaScript.h>
+
+#include <wx/wx.h>
+#include <wx/webkit_jsc_extension.h>
+#include "webframe.h"
+
+extern "C" bool JSC_gcd_load_extension(JSGlobalContextRef context);
+
+class MyApp: public wxApp
+{
+    virtual bool OnInit();
+
+    WebFrame *frame;
+};
+
+IMPLEMENT_APP(MyApp)
+
+
+bool MyApp::OnInit()
+{
+
+    wxString url = "http://www.wxwidgets.org";
+
+    frame = new WebFrame(url);
+
+    // create a extension instance for the SWIG generated module
+    wxSharedPtr<wxWebkitJSCExtension> gcdExtension(new wxWebkitJSCExtension(JSC_gcd_load_extension));
+
+    // create the white list of URLs for that the extension will be applied
+    gcdExtension->RegisterURL(url);
+
+    // register the extension in the browser widget
+    frame->GetWebView()->RegisterJSCExtension(gcdExtension);
+
+    frame->Show();
+
+    return true;
+}
diff --git a/samples/webview/javascript/webframe.cpp b/samples/webview/javascript/webframe.cpp
new file mode 100644
index 0000000..0240df0
--- /dev/null
+++ b/samples/webview/javascript/webframe.cpp
@@ -0,0 +1,49 @@
+#include "webframe.h"
+#include <wx/sizer.h>
+
+#if defined(__WXOSX__)
+#include <wx/osx/webview_webkit.h>
+#endif
+
+#if !defined(__WXMSW__) && !defined(__WXPM__)
+    #include "../../sample.xpm"
+#endif
+
+WebFrame::WebFrame(const wxString& url): wxFrame(NULL, wxID_ANY, "webframe")
+{
+
+#if defined(__WXOSX__)
+    // TODO: is it really necessary to enable the webinspector in advance?
+    wxWebViewWebKit::EnableWebInspector();
+#endif
+
+    SetIcon(wxICON(sample));
+    SetTitle("Javascript Extension");
+
+    wxBoxSizer* top_sizer = new wxBoxSizer(wxVERTICAL);
+
+    m_browser = new wxWebViewWebKit(this, wxID_ANY, url);
+    top_sizer->Add(m_browser, wxSizerFlags().Expand().Proportion(1));
+    SetSizer(top_sizer);
+    SetSize(wxSize(800, 600));
+
+    Connect(GetId(), wxEVT_CLOSE_WINDOW, wxCloseEventHandler(WebFrame::OnClose), NULL, this);
+
+#ifdef WXGTK_CREATE_WEBINSPECTOR
+    m_inspector = new WebInspector(m_browser);
+#endif
+
+}
+
+WebFrame::~WebFrame()
+{
+}
+
+void WebFrame::OnClose(wxCloseEvent& evt)
+{
+#ifdef WXGTK_CREATE_WEBINSPECTOR
+    if(m_inspector)
+        m_inspector->Destroy();
+#endif
+    evt.Skip();
+}
diff --git a/samples/webview/javascript/webframe.h b/samples/webview/javascript/webframe.h
new file mode 100644
index 0000000..811eaf9
--- /dev/null
+++ b/samples/webview/javascript/webframe.h
@@ -0,0 +1,47 @@
+#ifndef WEBVIEW_WEBFRAME_H_
+#define WEBVIEW_WEBFRAME_H_
+
+#include <wx/setup.h>
+
+#if !wxUSE_WEBVIEW_WEBKIT
+#error "A wxWebViewWebKit backend is required by this sample"
+#endif
+
+#include <wx/webview.h>
+#include <wx/sharedptr.h>
+#include <wx/frame.h>
+
+#if defined(__WXGTK__)
+#define WXGTK_CREATE_WEBINSPECTOR 1
+#include <wx/gtk/webview_webkit.h>
+#endif
+
+#if defined(__WXOSX__)
+#include <wx/osx/webview_webkit.h>
+#endif
+
+#ifdef WXGTK_CREATE_WEBINSPECTOR
+#include "webinspector.h"
+#endif
+
+class WebFrame : public wxFrame {
+
+public:
+    WebFrame(const wxString& url);
+    ~WebFrame();
+
+    void OnClose(wxCloseEvent& evt);
+
+    wxWebViewWebKit* GetWebView() { return m_browser; }
+
+private:
+
+    wxWebViewWebKit* m_browser;
+
+#ifdef WXGTK_CREATE_WEBINSPECTOR
+    WebInspector* m_inspector;
+#endif
+
+};
+
+#endif // #ifndef WEBVIEW_WEBFRAME_H_
diff --git a/samples/webview/javascript/webinspector.cpp b/samples/webview/javascript/webinspector.cpp
new file mode 100644
index 0000000..9bdbe04
--- /dev/null
+++ b/samples/webview/javascript/webinspector.cpp
@@ -0,0 +1,37 @@
+#include "webinspector.h"
+#include <webkit/webkit.h>
+
+#if !defined(__WXMSW__) && !defined(__WXPM__)
+    #include "../../sample.xpm"
+#endif
+
+#include <wx/sizer.h>
+
+WebInspector::WebInspector(wxWebViewWebKit* browser):
+    wxFrame(NULL, wxID_ANY, "")
+{
+
+    SetIcon(wxICON(sample));
+    SetTitle("WebInspector");
+
+    wxBoxSizer* topsizer = new wxBoxSizer(wxVERTICAL);
+
+    m_inspector_view =  browser->CreateWebInspector(this, wxID_ANY);
+    topsizer->Add(m_inspector_view, wxSizerFlags().Expand().Proportion(1));
+    SetSizer(topsizer);
+
+    SetSize(wxSize(800, 600));
+
+    // don't close the inspector window, instead hide on close
+    Connect(GetId(), wxEVT_CLOSE_WINDOW,
+            wxCloseEventHandler(WebInspector::HideOnClose));
+}
+
+WebInspector::~WebInspector()
+{
+}
+
+void WebInspector::HideOnClose(wxCloseEvent&)
+{
+    Hide();
+}
diff --git a/samples/webview/javascript/webinspector.h b/samples/webview/javascript/webinspector.h
new file mode 100644
index 0000000..eeb59cb
--- /dev/null
+++ b/samples/webview/javascript/webinspector.h
@@ -0,0 +1,26 @@
+#ifndef _WEBINSPECTOR_H
+#define _WEBINSPECTOR_H
+
+#if defined(__WXGTK__)
+
+#include "wx/setup.h"
+
+#include <wx/frame.h>
+#include <wx/gtk/webview_webkit.h>
+
+class WebInspector: public wxFrame
+{
+public:
+    WebInspector(wxWebViewWebKit *web_view);
+
+    ~WebInspector();
+
+    void HideOnClose(wxCloseEvent& event);
+
+private:
+    wxWebViewWebKit* m_inspector_view;
+};
+
+#endif // #if defined(__WXGTK__)
+
+#endif // _WEBINSPECTOR_H
diff --git a/samples/webview/webview_samples.bkl b/samples/webview/webview_samples.bkl
index b73a096..a5e2ca7 100644
--- a/samples/webview/webview_samples.bkl
+++ b/samples/webview/webview_samples.bkl
@@ -11,6 +11,6 @@
 
     <!-- all samples are enumerated here: -->
     <subproject id="browser" template="sub"/>
-    <subproject id="jscext" template="sub"/>
+    <subproject id="javascript" template="sub"/>
 
 </makefile>
-- 
1.7.9.5

