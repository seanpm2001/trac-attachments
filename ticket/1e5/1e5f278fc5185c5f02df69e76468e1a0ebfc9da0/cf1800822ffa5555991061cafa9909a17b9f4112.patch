From 549c71265a709deadd716aa08b29ca8c655c53de Mon Sep 17 00:00:00 2001
From: Oliver Buchtala <oliver.buchtala@googlemail.com>
Date: Tue, 8 May 2012 13:07:37 +0200
Subject: [PATCH 6/6] Change webview/javascript sample to be a real hybrid
 application using a local html file which integrates
 the provided extension.

---
 samples/webview/javascript/html/gcd.html  |   46 +++++++++++++++++++++++++++++
 samples/webview/javascript/javascript.bkl |    8 +++++
 samples/webview/javascript/main.cpp       |   20 ++++++++++---
 3 files changed, 70 insertions(+), 4 deletions(-)
 create mode 100644 samples/webview/javascript/html/gcd.html

diff --git a/samples/webview/javascript/html/gcd.html b/samples/webview/javascript/html/gcd.html
new file mode 100644
index 0000000..cf4c66b
--- /dev/null
+++ b/samples/webview/javascript/html/gcd.html
@@ -0,0 +1,46 @@
+<html>
+    <script>
+        var elem_first_arg;
+        var elem_second_arg;
+        var elem_result;
+
+        function on_document_load(evt) {
+            elem_first_arg =  document.getElementById("gcd_first_arg");
+            elem_second_arg =  document.getElementById("gcd_second_arg");
+            elem_result =  document.getElementById("gcd_result");
+        }
+
+        function update_result() {
+            var result = gcd( Number(elem_first_arg.value), Number(elem_second_arg.value));
+            console.log("Computed gcd: " + result);
+            elem_result.innerHTML = ""+result;
+        }
+
+        window.onload = on_document_load;
+    </script>
+
+<body">
+    <h1>JSC extension example: gcd(int, int)</h1>
+    Computes the greatest common divisor of two integers.
+    <p>
+    The implementation is provided as native JSC extension.
+    </p>
+
+    <table>
+        <tr>
+            <td>gcd(</td>
+            <td>
+                <textarea id="gcd_first_arg" rows="1" cols="2" onchange="update_result();">1</textarea>
+            </td>
+            <td>, </td>
+            <td>
+                <textarea id="gcd_second_arg" rows="1" cols="2" onchange="update_result();">1</textarea>
+            </td>
+            <td>) = </td>
+            <td>
+                <div id="gcd_result">1</div>
+            </td>
+        </tr>
+    </table>
+</body>
+</html>
diff --git a/samples/webview/javascript/javascript.bkl b/samples/webview/javascript/javascript.bkl
index 13c2192..cfa1664 100644
--- a/samples/webview/javascript/javascript.bkl
+++ b/samples/webview/javascript/javascript.bkl
@@ -31,4 +31,12 @@
         </if>
     </exe>
 
+    <wx-data id="data">
+        <dstdir>$(BUILDDIR)/html</dstdir>
+        <srcdir>$(SRCDIR)/html</srcdir>
+        <files>
+            gcd.html
+        </files>
+    </wx-data>
+
 </makefile>
diff --git a/samples/webview/javascript/main.cpp b/samples/webview/javascript/main.cpp
index 68ca07d..89d3e67 100644
--- a/samples/webview/javascript/main.cpp
+++ b/samples/webview/javascript/main.cpp
@@ -2,6 +2,9 @@
 
 #include <wx/wx.h>
 #include <wx/webkit_jsc_extension.h>
+#include <wx/webviewarchivehandler.h>
+#include <wx/filesys.h>
+
 #include "webframe.h"
 
 extern "C" bool JSC_gcd_load_extension(JSGlobalContextRef context);
@@ -15,23 +18,32 @@ class MyApp: public wxApp
 
 IMPLEMENT_APP(MyApp)
 
-
 bool MyApp::OnInit()
 {
 
-    wxString url = "http://www.wxwidgets.org";
+    // Create an url to access the local gcd.html
+    // NOTE: this of course makes it necessary to run the program in the correct place
+    wxString scheme = "vfs";
+    wxFileName cwd(::wxGetCwd());
+    wxString baseUrl = wxFileSystem::FileNameToURL(cwd);
+    baseUrl.Replace("file:", scheme + "://");
+    wxString url = baseUrl + "/html/gcd.html";
+
+    frame = new WebFrame("");
+    wxSharedPtr<wxWebViewHandler> vfs(new wxWebViewArchiveHandler(scheme));
 
-    frame = new WebFrame(url);
+    frame->GetWebView()->RegisterHandler(vfs);
 
     // create a extension instance for the SWIG generated module
     wxSharedPtr<wxWebkitJSCExtension> gcdExtension(new wxWebkitJSCExtension(JSC_gcd_load_extension));
 
     // create the white list of URLs for that the extension will be applied
-    gcdExtension->RegisterURL(url);
+    gcdExtension->RegisterURL(baseUrl);
 
     // register the extension in the browser widget
     frame->GetWebView()->RegisterJSCExtension(gcdExtension);
 
+    frame->GetWebView()->LoadURL(url);
     frame->Show();
 
     return true;
-- 
1.7.9.5

