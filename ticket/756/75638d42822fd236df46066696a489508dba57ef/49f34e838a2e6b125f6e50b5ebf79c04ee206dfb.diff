--- D:/wxWidgets-2.9.5/samples/minimal/minimal.cpp	Fri Sep 13 19:09:12 2013
+++ D:/wxWidgets-2.9.5/samples/minimal/myminimal.cpp	Fri Sep 13 17:13:48 2013
@@ -4,7 +4,7 @@
 // Author:      Julian Smart
 // Modified by:
 // Created:     04/01/98
-// RCS-ID:      $Id$
+// RCS-ID:      $Id: minimal.cpp 70789 2012-03-04 00:28:58Z VZ $
 // Copyright:   (c) Julian Smart
 // Licence:     wxWindows licence
 /////////////////////////////////////////////////////////////////////////////
@@ -43,6 +43,8 @@
 // ----------------------------------------------------------------------------
 // private classes
 // ----------------------------------------------------------------------------
+#define ID_BUTTONConfirm      10002
+#define ID_RADIOBUTTONConfirm 10003
 
 // Define a new application type, each program should derive a class from wxApp
 class MyApp : public wxApp
@@ -63,11 +65,14 @@
 public:
     // ctor(s)
     MyFrame(const wxString& title);
-
+		wxButton*  cb_Confirm;
+		wxRadioButton* rb_Confirm;
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
 
+    void OnBUTTONConfirmLeftUp( wxMouseEvent& event );
+
 private:
     // any class wishing to process wxWidgets events must use this macro
     DECLARE_EVENT_TABLE()
@@ -101,6 +106,7 @@
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
 END_EVENT_TABLE()
 
+
 // Create a new application object: this macro will allow wxWidgets to create
 // the application object during program execution (it's better than using a
 // static object for many reasons) and also implements the accessor function
@@ -172,8 +178,25 @@
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+
+    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
+    this->SetSizer(itemBoxSizer2);
+
+		cb_Confirm = new wxButton( this, ID_BUTTONConfirm,_("Confirm"), wxDefaultPosition, wxDefaultSize, 0 );
+    itemBoxSizer2->Add(cb_Confirm, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);
+
+		rb_Confirm = new wxRadioButton( this, ID_RADIOBUTTONConfirm, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
+    rb_Confirm->SetValue(false);
+    itemBoxSizer2->Add(rb_Confirm, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);
+
+    cb_Confirm->Connect(ID_BUTTONConfirm, wxEVT_LEFT_UP, wxMouseEventHandler(MyFrame::OnBUTTONConfirmLeftUp), NULL, this);
 }
 
+void MyFrame::OnBUTTONConfirmLeftUp( wxMouseEvent& event )
+{
+    wxUnusedVar(event);
+    cb_Confirm->Disable();
+}
 
 // event handlers
 
