Index: src/gtk/choice.cpp
===================================================================
--- src/gtk/choice.cpp	(revision 53642)
+++ src/gtk/choice.cpp	(working copy)
@@ -314,6 +314,37 @@
     return m_widget->window;
 }
 
+// This function is moved from wxComboBox. This shouldn't be necessary,
+// because gtk calculates properly size of the combobox (in gtk apps)
+// but for unknown (to me - MW) reasons it is necessary in wx.
+wxSize wxChoice::DoGetBestSize() const 
+{ 
+    // strangely, this returns a width of 188 pixels from GTK+ (?) 
+    wxSize ret( wxControl::DoGetBestSize() ); 
+ 
+    // we know better our horizontal extent: it depends on the longest string 
+    // in the combobox 
+    if ( m_widget ) 
+    { 
+        ret.x = 60;  // start with something "sensible" 
+        int width; 
+        unsigned int count = GetCount(); 
+        for ( unsigned int n = 0; n < count; n++ ) 
+        { 
+            GetTextExtent(GetString(n), &width, NULL, NULL, NULL ); 
+            if ( width + 40 > ret.x ) // 40 for drop down arrow and space around text 
+                ret.x = width + 40; 
+        } 
+    } 
+ 
+    // empty combobox should have some reasonable default size too 
+    if ((GetCount() == 0) && (ret.x < 80)) 
+        ret.x = 80; 
+ 
+    CacheBestSize(ret); 
+    return ret; 
+} 
+ 
 // static
 wxVisualAttributes
 wxChoice::GetClassDefaultAttributes(wxWindowVariant WXUNUSED(variant))
Index: include/wx/gtk/choice.h
===================================================================
--- include/wx/gtk/choice.h	(revision 53642)
+++ include/wx/gtk/choice.h	(working copy)
@@ -85,6 +85,7 @@
     // contains the client data for the items
     wxArrayPtrVoid m_clientData;
 
+    wxSize DoGetBestSize() const;
     virtual int DoInsertItems(const wxArrayStringsAdapter& items,
                               unsigned int pos,
                               void **clientData, wxClientDataType type);
