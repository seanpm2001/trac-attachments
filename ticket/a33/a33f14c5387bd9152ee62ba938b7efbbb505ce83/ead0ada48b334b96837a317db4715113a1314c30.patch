Index: include/wx/msw/private.h
===================================================================
--- include/wx/msw/private.h	(revisione 7192)
+++ include/wx/msw/private.h	(copia locale)
@@ -127,7 +127,6 @@
 #define CHECK_IS_FAFA    FALSE
 #define RADIO_CLASS      wxT("BUTTON")
 #define RADIO_FLAGS      (BS_AUTORADIOBUTTON|WS_CHILD|WS_VISIBLE)
-#define RADIO_SIZE       20
 #define RADIO_IS_FAFA    FALSE
 #define PURE_WINDOWS
 #define GROUP_CLASS      wxT("BUTTON")
Index: include/wx/msw/radiobox.h
===================================================================
--- include/wx/msw/radiobox.h	(revisione 7192)
+++ include/wx/msw/radiobox.h	(copia locale)
@@ -139,6 +139,9 @@
     // subclass one radio button
     void SubclassRadioButton(WXHWND hWndBtn);
 
+    // estimate the width of the button
+    int GetButtonWidth() const;
+
     // get the max size of radio buttons
     wxSize GetMaxButtonSize() const;
 
Index: src/msw/radiobox.cpp
===================================================================
--- src/msw/radiobox.cpp	(revisione 7192)
+++ src/msw/radiobox.cpp	(copia locale)
@@ -558,6 +558,11 @@
 // size calculations
 // ----------------------------------------------------------------------------
 
+int wxRadioBox::GetButtonWidth() const
+{
+    return ConvertDialogToPixels(wxSize(12, 8)).x;
+}
+
 wxSize wxRadioBox::GetMaxButtonSize() const
 {
     // calculate the max button size
@@ -573,7 +578,7 @@
 
             // adjust the size to take into account the radio box itself
             // FIXME this is totally bogus!
-            width += RADIO_SIZE;
+            width += GetButtonWidth();
             height *= 3;
             height /= 2;
         }
@@ -610,7 +615,7 @@
     // and also wide enough for its label
     int widthLabel;
     GetTextExtent(GetLabelText(), &widthLabel, NULL);
-    widthLabel += RADIO_SIZE; // FIXME this is bogus too
+    widthLabel += GetButtonWidth(); // FIXME this is bogus too
     if ( widthLabel > width )
         width = widthLabel;
 
