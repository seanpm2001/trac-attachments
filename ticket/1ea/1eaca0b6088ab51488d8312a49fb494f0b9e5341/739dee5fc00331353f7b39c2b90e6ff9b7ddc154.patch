diff -wdup wxWidgets-3.1.0_orig/src/ribbon/bar.cpp wxWidgets-3.1.0/src/ribbon/bar.cpp
--- wxWidgets-3.1.0_orig/src/ribbon/bar.cpp	2016-02-29 07:33:37.000000000 +1000
+++ wxWidgets-3.1.0/src/ribbon/bar.cpp	2016-03-14 14:25:56.702794500 +1000
@@ -1280,15 +1280,22 @@ void wxRibbonBar::HitTestRibbonButton(co
     }
 }
 
-void wxRibbonBar::HideIfExpanded()
+void wxRibbonBar::HideIfExpanded( wxWindow *focus_wnd )
 {
-    if ( m_ribbon_state == wxRIBBON_BAR_EXPANDED)
+	if( m_ribbon_state == wxRIBBON_BAR_EXPANDED
+		&& !IsDescendant( focus_wnd ) )//only if child is not the one getting the focus (passing NULL will bypass this check)
+	{
+		if( m_current_page == -1 || !m_pages.Item( m_current_page ).page->hasExpandedPanel() )
+		{//only when there is no expanded panel displayed - the panel must close first.
         HidePanels();
 }
+	}
+}
 
-void wxRibbonBar::OnKillFocus(wxFocusEvent& WXUNUSED(evt))
+void wxRibbonBar::OnKillFocus(wxFocusEvent& evt)
 {
-    HideIfExpanded();
+	evt.Skip();
+	HideIfExpanded( evt.GetWindow() );
 }
 
 #endif // wxUSE_RIBBON
diff -wdup wxWidgets-3.1.0_orig/src/ribbon/buttonbar.cpp wxWidgets-3.1.0/src/ribbon/buttonbar.cpp
--- wxWidgets-3.1.0_orig/src/ribbon/buttonbar.cpp	2016-02-29 07:33:37.000000000 +1000
+++ wxWidgets-3.1.0/src/ribbon/buttonbar.cpp	2016-03-14 14:24:46.154397100 +1000
@@ -1166,7 +1166,7 @@ void wxRibbonButtonBar::OnMouseUp(wxMous
                 ProcessWindowEvent(notification);
                 m_lock_active_state = false;
 
-                wxStaticCast(m_parent, wxRibbonPanel)->HideIfExpanded();
+                wxStaticCast(m_parent, wxRibbonPanel)->HideIfExpanded( NULL );
             } while(false);
             if(m_active_button) // may have been NULLed by event handler
             {
diff -wdup wxWidgets-3.1.0_orig/src/ribbon/page.cpp wxWidgets-3.1.0/src/ribbon/page.cpp
--- wxWidgets-3.1.0_orig/src/ribbon/page.cpp	2016-02-29 07:33:37.000000000 +1000
+++ wxWidgets-3.1.0/src/ribbon/page.cpp	2016-03-14 14:59:27.814750200 +1000
@@ -152,6 +152,7 @@ wxBEGIN_EVENT_TABLE(wxRibbonPage, wxRibb
     EVT_ERASE_BACKGROUND(wxRibbonPage::OnEraseBackground)
     EVT_PAINT(wxRibbonPage::OnPaint)
     EVT_SIZE(wxRibbonPage::OnSize)
+	EVT_KILL_FOCUS( wxRibbonPage::OnKillFocus )
 wxEND_EVENT_TABLE()
 
 wxRibbonPage::wxRibbonPage()
@@ -1097,6 +1102,23 @@ bool wxRibbonPage::CollapsePanels(wxOrie
     return collapsed_something;
 }
 
+bool wxRibbonPage::hasExpandedPanel()
+{
+	for( wxWindowList::compatibility_iterator node = GetChildren().GetFirst();
+		node;
+		node = node->GetNext() )
+	{
+		wxRibbonPanel* panel = wxDynamicCast( node->GetData(), wxRibbonPanel );
+		if( panel == NULL )
+		{
+			continue;
+		}
+		if( panel->GetExpandedPanel() != NULL )
+			return true;
+	}
+	return false;
+}
+
 bool wxRibbonPage::DismissExpandedPanel()
 {
     for ( wxWindowList::compatibility_iterator node = GetChildren().GetFirst();
@@ -1110,7 +1132,7 @@ bool wxRibbonPage::DismissExpandedPanel(
         }
         if(panel->GetExpandedPanel() != NULL)
         {
-            return panel->HideExpanded();
+            return panel->HideExpanded( NULL );
         }
     }
     return false;
@@ -1218,9 +1240,15 @@ wxSize wxRibbonPage::DoGetBestSize() con
     return best;
 }
 
-void wxRibbonPage::HideIfExpanded()
+void wxRibbonPage::HideIfExpanded( wxWindow *focus_wnd )
 {
-    wxStaticCast(m_parent, wxRibbonBar)->HideIfExpanded();
+	wxStaticCast( m_parent, wxRibbonBar )->HideIfExpanded( focus_wnd );
+}
+
+void wxRibbonPage::OnKillFocus( wxFocusEvent& evt )
+{
+	evt.Skip();
+	HideIfExpanded( evt.GetWindow() );
 }
 
 #endif // wxUSE_RIBBON
diff -wdup wxWidgets-3.1.0_orig/src/ribbon/panel.cpp wxWidgets-3.1.0/src/ribbon/panel.cpp
--- wxWidgets-3.1.0_orig/src/ribbon/panel.cpp	2016-02-29 07:33:37.000000000 +1000
+++ wxWidgets-3.1.0/src/ribbon/panel.cpp	2016-03-14 14:59:27.844727000 +1000
@@ -766,7 +766,7 @@ void wxRibbonPanel::OnMouseClick(wxMouse
     {
         if(m_expanded_panel != NULL)
         {
-            HideExpanded();
+            HideExpanded( this );
         }
         else
         {
@@ -803,6 +803,16 @@ bool wxRibbonPanel::ShowExpanded()
         return false;
     }
 
+	wxRibbonPage* const containingPage = wxDynamicCast( m_parent, wxRibbonPage );
+	if( containingPage != NULL )
+	{
+		wxRibbonBar* const containingBar = wxDynamicCast( containingPage->GetParent(), wxRibbonBar );
+		if( containingBar != NULL && !containingBar->ArePanelsShown() )
+		{
+			containingBar->ShowPanels( wxRIBBON_BAR_EXPANDED );
+		}
+	}
+
     wxSize size = GetBestSize();
 
     // Special case for flexible panel layout, where GetBestSize doesn't work
@@ -908,8 +918,13 @@ void wxRibbonPanel::OnKillFocus(wxFocusE
         }
         else if(receiver == NULL || receiver != m_expanded_dummy)
         {
-            HideExpanded();
+            HideExpanded( evt.GetWindow() );
+        }
         }
+	else
+	{
+		evt.Skip();
+		HideIfExpanded( evt.GetWindow() );
     }
 }
 
@@ -932,7 +947,7 @@ void wxRibbonPanel::OnChildKillFocus(wxF
     }
     else if(receiver == NULL || receiver != m_expanded_dummy)
     {
-        HideExpanded();
+		HideExpanded( evt.GetWindow() );
         // Do not skip event, as the panel has been de-expanded, causing the
         // child with focus to be reparented (and hidden). If the event
         // continues propagation then bad things happen.
@@ -943,13 +958,13 @@ void wxRibbonPanel::OnChildKillFocus(wxF
     }
 }
 
-bool wxRibbonPanel::HideExpanded()
+bool wxRibbonPanel::HideExpanded( wxWindow *focus_wnd )
 {
     if(m_expanded_dummy == NULL)
     {
         if(m_expanded_panel)
         {
-            return m_expanded_panel->HideExpanded();
+			return m_expanded_panel->HideExpanded( focus_wnd );
         }
         else
         {
@@ -978,6 +993,7 @@ bool wxRibbonPanel::HideExpanded()
     m_expanded_dummy->m_expanded_panel = NULL;
     m_expanded_dummy->Realize();
     m_expanded_dummy->Refresh();
+	m_expanded_dummy->HideIfExpanded( focus_wnd );
     wxWindow *parent = GetParent();
     Destroy();
     parent->Destroy();
@@ -1098,11 +1114,11 @@ wxRect wxRibbonPanel::GetExpandedPositio
     return best;
 }
 
-void wxRibbonPanel::HideIfExpanded()
+void wxRibbonPanel::HideIfExpanded( wxWindow *focus_wnd )
 {
     wxRibbonPage* const containingPage = wxDynamicCast(m_parent, wxRibbonPage);
     if (containingPage)
-        containingPage->HideIfExpanded();
+		containingPage->HideIfExpanded( focus_wnd );
 }
 
 #endif // wxUSE_RIBBON
diff -wdup wxWidgets-3.1.0_orig/src/ribbon/toolbar.cpp wxWidgets-3.1.0/src/ribbon/toolbar.cpp
--- wxWidgets-3.1.0_orig/src/ribbon/toolbar.cpp	2016-02-29 07:33:37.000000000 +1000
+++ wxWidgets-3.1.0/src/ribbon/toolbar.cpp	2016-03-14 14:24:46.132315600 +1000
@@ -1151,7 +1151,7 @@ void wxRibbonToolBar::OnMouseUp(wxMouseE
             notification.SetBar(this);
             ProcessEvent(notification);
 
-            wxStaticCast(m_parent, wxRibbonPanel)->HideIfExpanded();
+            wxStaticCast(m_parent, wxRibbonPanel)->HideIfExpanded( NULL );
         }
 
         // Notice that m_active_tool could have been reset by the event handler
diff -wdup wxWidgets-3.1.0_orig/include/wx/ribbon/bar.h wxWidgets-3.1.0/include/wx/ribbon/bar.h
--- wxWidgets-3.1.0_orig/include/wx/ribbon/bar.h	2016-02-29 07:33:37.000000000 +1000
+++ wxWidgets-3.1.0/include/wx/ribbon/bar.h	2016-03-14 14:24:46.168505900 +1000
@@ -156,7 +156,7 @@ public:
     bool IsToggleButtonHovered() const { return m_toggle_button_hovered; }
     bool IsHelpButtonHovered() const { return m_help_button_hovered; }
 
-    void HideIfExpanded();
+    void HideIfExpanded( wxWindow *focus_wnd );
 
 protected:
     friend class wxRibbonPage;
diff -wdup wxWidgets-3.1.0_orig/include/wx/ribbon/page.h wxWidgets-3.1.0/include/wx/ribbon/page.h
--- wxWidgets-3.1.0_orig/include/wx/ribbon/page.h	2016-02-29 07:33:37.000000000 +1000
+++ wxWidgets-3.1.0/include/wx/ribbon/page.h	2016-03-14 14:59:27.851737000 +1000
@@ -48,6 +48,7 @@ public:
     void SetSizeWithScrollButtonAdjustment(int x, int y, int width, int height);
     void AdjustRectToIncludeScrollButtons(wxRect* rect) const;
 
+	bool hasExpandedPanel();
     bool DismissExpandedPanel();
 
     virtual bool Realize() wxOVERRIDE;
@@ -61,7 +62,7 @@ public:
 
     virtual void RemoveChild(wxWindowBase *child) wxOVERRIDE;
 
-    void HideIfExpanded();
+	void HideIfExpanded( wxWindow *focus_wnd );
 
 protected:
     virtual wxSize DoGetBestSize() const wxOVERRIDE;
@@ -72,6 +73,7 @@ protected:
     void OnEraseBackground(wxEraseEvent& evt);
     void OnPaint(wxPaintEvent& evt);
     void OnSize(wxSizeEvent& evt);
+	void OnKillFocus( wxFocusEvent& evt );
 
     bool ExpandPanels(wxOrientation direction, int maximum_amount);
     bool CollapsePanels(wxOrientation direction, int minimum_amount);
diff -wdup wxWidgets-3.1.0_orig/include/wx/ribbon/panel.h wxWidgets-3.1.0/include/wx/ribbon/panel.h
--- wxWidgets-3.1.0_orig/include/wx/ribbon/panel.h	2016-02-29 07:33:37.000000000 +1000
+++ wxWidgets-3.1.0/include/wx/ribbon/panel.h	2016-03-14 14:34:09.282327900 +1000
@@ -60,7 +60,7 @@ public:
     bool CanAutoMinimise() const;
 
     bool ShowExpanded();
-    bool HideExpanded();
+	bool HideExpanded( wxWindow *focus_wnd );//to hide expanded panel, focus_wnd is used to decide is the bar should be colapsed as well
 
     void SetArtProvider(wxRibbonArtProvider* art) wxOVERRIDE;
 
@@ -83,7 +83,7 @@ public:
 
     long GetFlags() { return m_flags; }
 
-    void HideIfExpanded();
+	void HideIfExpanded( wxWindow *focus_wnd );//to hide the bar (if expanded)
 
 protected:
     virtual wxSize DoGetBestSize() const wxOVERRIDE;
