Index: include/wx/mac/carbon/spinctrl.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/include/wx/mac/carbon/spinctrl.h,v
retrieving revision 1.4
diff -b -u -2 -r1.4 spinctrl.h
--- include/wx/mac/carbon/spinctrl.h	2004/05/23 20:51:03	1.4
+++ include/wx/mac/carbon/spinctrl.h	2004/06/17 23:42:13
@@ -94,4 +94,10 @@
     bool GetTextValue(int *val) const;
 
+    // set formatter/interpreter object. use 0 to clear.
+    void SetTextFormatter(wxSpinTextFormatter* f);
+    
+    // get formatter/interpreter object, or 0 if none.
+    wxSpinTextFormatter* GetTextFormatter();
+
 protected:
     // override the base class virtuals involved into geometry calculations
@@ -102,8 +108,13 @@
     void Init();
 
+    // Format or interpret text in text control
+    wxString FormatText(const int value);
+    bool InterpretText(const wxString& text, int* value);
+
 private:
     // the subcontrols
     wxTextCtrl *m_text;
     wxSpinButton *m_btn;
+    wxSpinTextFormatter *m_textFormatter;
     
 private:
@@ -145,4 +156,7 @@
                 const wxString& name = _T("wxSpinCtrl"))
     {
+
+        m_textFormatter = 0;
+
         SetRange(min, max);
 
Index: src/mac/carbon/spinctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/src/mac/carbon/spinctrl.cpp,v
retrieving revision 1.9
diff -b -u -2 -r1.9 spinctrl.cpp
--- src/mac/carbon/spinctrl.cpp	2004/05/23 20:52:32	1.9
+++ src/mac/carbon/spinctrl.cpp	2004/06/17 23:42:15
@@ -50,7 +50,5 @@
         int val;
         if ( m_spin->GetTextValue(&val) )
-        {
             m_spin->GetSpinButton()->SetValue(val);
-        }
 
         event.Skip();
@@ -135,4 +133,5 @@
     m_text = NULL;
     m_btn = NULL;
+    m_textFormatter = NULL;
 }
 
@@ -148,4 +147,6 @@
                         const wxString& name)
 {
+    m_textFormatter = 0;
+
     if ( !wxControl::Create(parent, id, wxDefaultPosition, wxDefaultSize, style,
                             wxDefaultValidator, name) )
@@ -237,22 +238,9 @@
 // ----------------------------------------------------------------------------
 
+
 bool wxSpinCtrl::GetTextValue(int *val) const
 {
-    long l;
-    if ( !m_text->GetValue().ToLong(&l) )
-    {
-        // not a number at all
-        return FALSE;
-    }
-
-    if ( l < GetMin() || l > GetMax() )
-    {
-        // out of range
-        return FALSE;
-    }
-
-    *val = l;
-
-    return TRUE;
+    return (InterpretText(m_text->GetValue(), val) 
+        && (*val >= GetMin()) && (*val <= GetMax()) );
 }
 
@@ -280,5 +268,5 @@
     wxCHECK_RET( m_text, _T("invalid call to wxSpinCtrl::SetTextValue") );
 
-    m_text->SetValue(wxString::Format(_T("%d"), val));
+    m_text->SetValue(FormatText(val));
 
     // select all text
@@ -302,11 +290,8 @@
     wxCHECK_RET( m_text, _T("invalid call to wxSpinCtrl::SetValue") );
 
-    long val;
-    if ( text.ToLong(&val) && ((val > INT_MIN) && (val < INT_MAX)) )
-    {
-        SetValue((int)val);
-    }
-    else // not a number at all or out of range
-    {
+    int val;
+    if(InterpretText(text, &val)) {
+        SetValue(val);
+    } else {
         m_text->SetValue(text);
         m_text->SetSelection(0, -1);
@@ -331,4 +316,35 @@
     m_text->SetSelection(from, to);
 }     
+
+void wxSpinCtrl::SetTextFormatter(wxSpinTextFormatter* f) {
+    if(m_textFormatter)
+        delete m_textFormatter;
+    m_textFormatter = f;
+}
+
+wxSpinTextFormatter* wxSpinCtrl::GetTextFormatter() {
+    return m_textFormatter;
+}
+
+wxString wxSpinCtrl::FormatText(const int value) {
+    if(m_textFormatter) 
+        return m_textFormatter->FormatText(value);
+    else
+        return wxString::Format(wxT("%d"), value);
+}
+
+bool wxSpinCtrl::InterpretText(const wxString& text, int* value) {
+    if(m_textFormatter) {
+        return m_textFormatter->InterpretText(text, value);
+    } else {
+        long l;
+        if(text.ToLong(&l) && (l > INT_MIN) && (l < INT_MAX)) {
+            *value = (int)l;
+            return TRUE;
+        } else {
+            return FALSE;
+        }
+    }
+}
 
 #endif // wxUSE_SPINCTRL

 	  	 
