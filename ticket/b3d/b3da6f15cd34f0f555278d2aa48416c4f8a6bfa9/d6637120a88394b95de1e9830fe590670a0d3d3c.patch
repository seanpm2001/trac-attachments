Index: interface/wx/help.h
===================================================================
--- interface/wx/help.h	(revision 56649)
+++ interface/wx/help.h	(working copy)
@@ -26,10 +26,9 @@
     names of the form wxXXXHelpController or wxHelpControllerXXX. An
     appropriate class is aliased to the name wxHelpController for each platform, as
     follows:
-
-     On desktop Windows, wxCHMHelpController is used (MS HTML Help).
-     On Windows CE, wxWinceHelpController is used.
-     On all other platforms, wxHtmlHelpController is used if wxHTML is
+    @li On desktop Windows, wxCHMHelpController is used (MS HTML Help).
+    @li On Windows CE, wxWinceHelpController is used.
+    @li On all other platforms, wxHtmlHelpController is used if wxHTML is
     compiled into wxWidgets; otherwise wxExtHelpController is used (for invoking an
     external
     browser).
@@ -37,37 +36,28 @@
     The remaining help controller classes need to be named
     explicitly by an application that wishes to make use of them.
 
-    There are currently the following help controller classes defined:
-
-     wxWinHelpController, for controlling Windows Help.
-     wxCHMHelpController, for controlling MS HTML Help. To use this, you need to
-    set wxUSE_MS_HTML_HELP
-    to 1 in setup.h and have htmlhelp.h header from Microsoft's HTML Help kit (you
-    don't need
-    VC++ specific htmlhelp.lib because wxWidgets loads necessary DLL at runtime and
-    so it
-    works with all compilers).
-     wxBestHelpController, for controlling MS HTML Help or, if Microsoft's runtime
-    is
-    not available, wxHtmlHelpController. You need to provide
-    @b both CHM and HTB versions of the help file. For 32bit Windows only.
-     wxExtHelpController, for controlling external browsers under Unix.
+    The following help controller classes are defined:
+    @li wxWinHelpController, for controlling Windows Help.
+    @li wxCHMHelpController, for controlling MS HTML Help. To use this, you need to
+    set wxUSE_MS_HTML_HELP to 1 in setup.h and have the htmlhelp.h header from
+    Microsoft's HTML Help kit. (You don't need VC++ specific htmlhelp.lib because
+    wxWidgets loads the necessary DLL at runtime and it works with all compilers).
+    @li wxBestHelpController, for controlling MS HTML Help or, if Microsoft's
+    runtime is not available, wxHtmlHelpController. You need to provide @b both 
+    CHM and HTB versions of the help file. For 32bit Windows only.
+    @li wxExtHelpController, for controlling external browsers under Unix.
     The default browser is Netscape Navigator. The 'help' sample shows its use.
-     wxWinceHelpController, for controlling a simple @c .htm help controller for
-    Windows CE applications.
-     wxHtmlHelpController, a sophisticated help controller using wxHTML(), in
-    a similar style to the Microsoft HTML Help viewer and using some of the same
-    files.
-    Although it has an API compatible with other help controllers, it has more
-    advanced features, so it is
-    recommended that you use the specific API for this class instead. Note that if
-    you
-    use .zip or .htb formats for your books, you
-    must add this line to your application initialization: @c
-    wxFileSystem::AddHandler(new wxArchiveFSHandler);
-    or nothing will be shown in your help window.
+    @li wxWinceHelpController, for controlling a simple @c .htm help controller
+    for Windows CE applications.
+    @li wxHtmlHelpController, a sophisticated help controller using wxHTML(), in
+    a style similar to the Microsoft HTML Help viewer and using some of the same
+    files. Although it has an API compatible with other help controllers, it has 
+    more advanced features, so it is recommended that you use the specific API 
+    for this class instead. Note that if you use .zip or .htb formats for your 
+    books, you must add this line to your application initialization:
+    @c wxFileSystem::AddHandler(new wxArchiveFSHandler); or nothing will be shown
+    in your help window.
 
-
     @library{wxbase}
     @category{help}
 
@@ -78,12 +68,10 @@
 public:
     /**
         Constructs a help instance object, but does not invoke the help viewer.
-        If you provide a window, it will be used by some help controller classes, such
-        as
-        wxCHMHelpController, wxWinHelpController and wxHtmlHelpController, as the
-        parent for the help window instead of the value of wxApp::GetTopWindow. You can
-        also change the parent window later with
-        SetParentWindow().
+        If you provide a window, it will be used by some help controller classes,
+        such as wxCHMHelpController, wxWinHelpController and wxHtmlHelpController,
+        as the parent for the help window instead of the value of wxApp::GetTopWindow.
+        You can also change the parent window later with SetParentWindow().
     */
     wxHelpController(wxWindow* parentWindow = NULL);
 
@@ -98,10 +86,10 @@
         @e WinHelp: Refers to the context number.
         @e MS HTML Help: Refers to the context number.
         @e External HTML help: the same as for DisplaySection().
-        @e wxHtmlHelpController: @e sectionNo is an identifier as specified in the @c
-        .hhc file. See @ref overview_helpformat "Help files format".
+        @e wxHtmlHelpController: @e sectionNo is an identifier as specified in the
+        @c .hhc file. See @ref overview_html_helpformats "Help Files Format".
         This function is for backward compatibility only, and applications should use
-        @ref displaysection() wxHelpController instead.
+        @ref DisplaySection() wxHelpController instead.
     */
     virtual bool DisplayBlock(long blockNo);
 
@@ -117,21 +105,19 @@
     */
     virtual bool DisplayContextPopup(int contextId);
 
-    //@{
     /**
         If the help viewer is not running, runs it and displays the given section.
         @e WinHelp, MS HTML Help @a sectionNo is a context id.
         @e External HTML help: wxExtHelpController implements @a sectionNo as an id in
         a map file, which is of the form:
 
-        @e wxHtmlHelpController: @a sectionNo is an identifier as specified in the @c
-        .hhc file. See @ref overview_helpformat "Help files format".
+        @e wxHtmlHelpController: @a sectionNo is an identifier as specified in the
+        @c .hhc file. See @ref overview_html_helpformats "Help Files Format".
         See also the help sample for notes on how to specify section numbers for
         various help file formats.
     */
     virtual bool DisplaySection(const wxString& section);
     virtual bool DisplaySection(int sectionNo);
-    //@}
 
     /**
         Displays the text in a popup window, if possible.
@@ -141,28 +127,27 @@
                                   const wxPoint& pos);
 
     /**
-        wxHtmlHelpController returns the frame, size and position.
-        For all other help controllers, this function does nothing
-        and just returns @NULL.
-
-        @param viewer
-            This defaults to "netscape" for wxExtHelpController.
-        @param flags
-            This defaults to wxHELP_NETSCAPE for wxExtHelpController, indicating
-            that the viewer is a variant of Netscape Navigator.
+        For wxHtmlHelpController, returns the latest frame size and position
+        settings and whether a new frame is drawn with each invocation. For all
+        other help controllers, this function does nothing and just returns @NULL.
+        @param size
+            The most recent frame size
+        @param pos
+            The most recent frame position
+        @param newFrameEachTime
+            @true if a new frame is drawn with each invocation
     */
     virtual wxFrame* GetFrameParameters(const wxSize* size = NULL,
                                         const wxPoint* pos = NULL,
                                         bool* newFrameEachTime = NULL);
 
     /**
-        Returns the window to be used as the parent for the help window. This window is
-        used
-        by wxCHMHelpController, wxWinHelpController and wxHtmlHelpController.
+        Returns the window to be used as the parent for the help window. This
+        window is used by wxCHMHelpController, wxWinHelpController and 
+        wxHtmlHelpController.
     */
     virtual wxWindow* GetParentWindow() const;
 
-    //@{
     /**
         Initializes the help instance with a help filename, and optionally a server
         socket
@@ -177,7 +162,6 @@
     */
     virtual bool Initialize(const wxString& file);
     virtual bool Initialize(const wxString& file, int server);
-    //@}
 
     /**
         If the help viewer is not running, runs it, and searches for sections matching
@@ -239,6 +223,12 @@
         Sets detailed viewer information. So far this is only relevant to
         wxExtHelpController.
         Some examples of usage:
+        
+        @param viewer
+            This defaults to "netscape" for wxExtHelpController.
+        @param flags
+            This defaults to wxHELP_NETSCAPE for wxExtHelpController, indicating
+            that the viewer is a variant of Netscape Navigator.
     */
     virtual void SetViewer(const wxString& viewer, long flags);
 };
