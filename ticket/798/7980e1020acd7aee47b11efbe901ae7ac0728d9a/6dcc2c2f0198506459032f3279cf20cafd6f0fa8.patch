Index: src/unix/glx11.cpp
===================================================================
--- src/unix/glx11.cpp	(revision 50465)
+++ src/unix/glx11.cpp	(working copy)
@@ -68,26 +68,26 @@
     glXDestroyContext( wxGetX11Display(), m_glContext );
 }
 
-void wxGLContext::SetCurrent(const wxGLCanvas& win) const
+bool wxGLContext::SetCurrent(const wxGLCanvas& win) const
 {
     if ( !m_glContext )
-        return;
+        return false;
 
     const Window xid = win.GetXWindow();
-    wxCHECK_RET( xid, _T("window must be shown") );
+    wxCHECK2_MSG( xid, return false, _T("window must be shown") );
 
-    MakeCurrent(xid, m_glContext);
+    return MakeCurrent(xid, m_glContext);
 }
 
 // wrapper around glXMakeContextCurrent/glXMakeCurrent depending on GLX
 // version
 /* static */
-void wxGLContext::MakeCurrent(GLXDrawable drawable, GLXContext context)
+bool wxGLContext::MakeCurrent(GLXDrawable drawable, GLXContext context)
 {
     if (wxGLCanvas::GetGLXVersion() >= 13)
-        glXMakeContextCurrent( wxGetX11Display(), drawable, drawable, context);
+        return glXMakeContextCurrent( wxGetX11Display(), drawable, drawable, context);
     else // GLX <= 1.2 doesn't have glXMakeContextCurrent()
-        glXMakeCurrent( wxGetX11Display(), drawable, context);
+        return glXMakeCurrent( wxGetX11Display(), drawable, context);
 }
 
 // ============================================================================
@@ -351,12 +351,13 @@
     return s_glxVersion;
 }
 
-void wxGLCanvasX11::SwapBuffers()
+bool wxGLCanvasX11::SwapBuffers()
 {
     const Window xid = GetXWindow();
-    wxCHECK_RET( xid, _T("window must be shown") );
+    wxCHECK2_MSG( xid, return false, _T("window must be shown") );
 
     glXSwapBuffers(wxGetX11Display(), xid);
+    return true;
 }
 
 bool wxGLCanvasX11::IsShownOnScreen() const
Index: src/common/glcmn.cpp
===================================================================
--- src/common/glcmn.cpp	(revision 50465)
+++ src/common/glcmn.cpp	(working copy)
@@ -52,14 +52,14 @@
     SetBackgroundStyle(wxBG_STYLE_CUSTOM);
 }
 
-void wxGLCanvasBase::SetCurrent(const wxGLContext& context) const
+bool wxGLCanvasBase::SetCurrent(const wxGLContext& context) const
 {
     // although on MSW it works even if the window is still hidden, it doesn't
     // work in other ports (notably X11-based ones) and documentation mentions
     // that SetCurrent() can only be called for a shown window, so check for it
     wxASSERT_MSG( IsShownOnScreen(), _T("can't make hidden GL canvas current") );
 
-    context.SetCurrent(*wx_static_cast(const wxGLCanvas *, this));
+    return context.SetCurrent(*wx_static_cast(const wxGLCanvas *, this));
 }
 
 bool wxGLCanvasBase::SetColour(const wxString& colour)
@@ -103,10 +103,11 @@
     return m_glContext;
 }
 
-void wxGLCanvasBase::SetCurrent()
+bool wxGLCanvasBase::SetCurrent()
 {
     if ( m_glContext )
-        SetCurrent(*m_glContext);
+        return SetCurrent(*m_glContext);
+    return false;
 }
 
 void wxGLCanvasBase::OnSize(wxSizeEvent& WXUNUSED(event))
Index: src/msw/glcanvas.cpp
===================================================================
--- src/msw/glcanvas.cpp	(revision 50465)
+++ src/msw/glcanvas.cpp	(working copy)
@@ -200,12 +200,14 @@
     wglDeleteContext(m_glContext);
 }
 
-void wxGLContext::SetCurrent(const wxGLCanvas& win) const
+bool wxGLContext::SetCurrent(const wxGLCanvas& win) const
 {
     if ( !wglMakeCurrent(win.GetHDC(), m_glContext) )
     {
         wxLogLastError(_T("wglMakeCurrent"));
+        return false;
     }
+    return true;
 }
 
 // ============================================================================
@@ -313,10 +315,14 @@
 // operations
 // ----------------------------------------------------------------------------
 
-void wxGLCanvas::SwapBuffers()
+bool wxGLCanvas::SwapBuffers()
 {
     if ( !::SwapBuffers(m_hDC) )
+    {
+        return false;
         wxLogLastError(_T("SwapBuffers"));
+    }
+    return true;
 }
 
 // ----------------------------------------------------------------------------
Index: include/wx/unix/glx11.h
===================================================================
--- include/wx/unix/glx11.h	(revision 50465)
+++ include/wx/unix/glx11.h	(working copy)
@@ -23,11 +23,11 @@
     wxGLContext(wxGLCanvas *win, const wxGLContext *other = NULL);
     virtual ~wxGLContext();
 
-    virtual void SetCurrent(const wxGLCanvas& win) const;
+    virtual bool SetCurrent(const wxGLCanvas& win) const;
 
 private:
     // attach context to the drawable or unset it (if NULL)
-    static void MakeCurrent(GLXDrawable drawable, GLXContext context);
+    static bool MakeCurrent(GLXDrawable drawable, GLXContext context);
 
     GLXContext m_glContext;
 
@@ -57,7 +57,7 @@
     // implement wxGLCanvasBase methods
     // --------------------------------
 
-    virtual void SwapBuffers();
+    virtual bool SwapBuffers();
 
 
     // X11-specific methods
Index: include/wx/msw/glcanvas.h
===================================================================
--- include/wx/msw/glcanvas.h	(revision 50465)
+++ include/wx/msw/glcanvas.h	(working copy)
@@ -28,7 +28,7 @@
     wxGLContext(wxGLCanvas *win, const wxGLContext* other = NULL);
     virtual ~wxGLContext();
 
-    virtual void SetCurrent(const wxGLCanvas& win) const;
+    virtual bool SetCurrent(const wxGLCanvas& win) const;
 
     HGLRC GetGLRC() const { return m_glContext; }
 
@@ -67,7 +67,7 @@
     virtual ~wxGLCanvas();
 
     // implement wxGLCanvasBase methods
-    virtual void SwapBuffers();
+    virtual bool SwapBuffers();
 
 
     // MSW-specific helpers
Index: include/wx/glcanvas.h
===================================================================
--- include/wx/glcanvas.h	(revision 50465)
+++ include/wx/glcanvas.h	(working copy)
@@ -66,7 +66,7 @@
      */
 
     // set this context as the current one
-    virtual void SetCurrent(const wxGLCanvas& win) const = 0;
+    virtual bool SetCurrent(const wxGLCanvas& win) const = 0;
 };
 
 // ----------------------------------------------------------------------------
@@ -99,10 +99,10 @@
     // ----------
 
     // set the given context associated with this window as the current one
-    void SetCurrent(const wxGLContext& context) const;
+    bool SetCurrent(const wxGLContext& context) const;
 
     // flush the back buffer (if we have it)
-    virtual void SwapBuffers() = 0;
+    virtual bool SwapBuffers() = 0;
 
 
     // accessors

 	  	 
