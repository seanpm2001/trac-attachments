Index: include/wx/generic/scrolwin.h
===================================================================
--- include/wx/generic/scrolwin.h	(revision 78482)
+++ include/wx/generic/scrolwin.h	(working copy)
@@ -10,6 +10,8 @@
 #ifndef _WX_GENERIC_SCROLLWIN_H_
 #define _WX_GENERIC_SCROLLWIN_H_
 
+#include "wx/recguard.h"
+
 // ----------------------------------------------------------------------------
 // generic wxScrollHelper implementation
 // ----------------------------------------------------------------------------
@@ -45,6 +47,7 @@
 
     wxScrollbarVisibility m_xVisibility,
                           m_yVisibility;
+    wxRecursionGuardFlag m_adjustScrollFlagReentrancy;
 
     wxDECLARE_NO_COPY_CLASS(wxScrollHelper);
 };
Index: src/generic/scrlwing.cpp
===================================================================
--- src/generic/scrlwing.cpp	(revision 78482)
+++ src/generic/scrlwing.cpp	(working copy)
@@ -39,8 +39,6 @@
 #include "wx/scrolbar.h"
 #endif
 
-#include "wx/recguard.h"
-
 #ifdef __WXMSW__
     #include <windows.h> // for DLGC_WANTARROWS
     #include "wx/msw/winundef.h"
@@ -1205,6 +1203,7 @@
 {
     m_xVisibility =
     m_yVisibility = wxSHOW_SB_DEFAULT;
+    m_adjustScrollFlagReentrancy = 0;
 }
 
 bool wxScrollHelper::IsScrollbarShown(int orient) const
@@ -1305,8 +1304,7 @@
 
 void wxScrollHelper::AdjustScrollbars()
 {
-    static wxRecursionGuardFlag s_flagReentrancy;
-    wxRecursionGuard guard(s_flagReentrancy);
+    wxRecursionGuard guard(m_adjustScrollFlagReentrancy);
     if ( guard.IsInside() )
     {
         // don't reenter AdjustScrollbars() while another call to
