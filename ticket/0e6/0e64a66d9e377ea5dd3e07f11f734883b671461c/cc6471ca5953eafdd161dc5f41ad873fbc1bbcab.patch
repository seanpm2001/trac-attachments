Index: include/wx/graphics.h
===================================================================
--- include/wx/graphics.h	(revision 76253)
+++ include/wx/graphics.h	(working copy)
@@ -870,6 +870,8 @@
     // create a subimage from a native image representation
     virtual wxGraphicsBitmap CreateSubBitmap( const wxGraphicsBitmap &bitmap, wxDouble x, wxDouble y, wxDouble w, wxDouble h  ) = 0;
 
+    virtual wxString GetName() const = 0;
+
 private:
     wxDECLARE_NO_COPY_CLASS(wxGraphicsRenderer);
     DECLARE_ABSTRACT_CLASS(wxGraphicsRenderer)
Index: interface/wx/graphics.h
===================================================================
--- interface/wx/graphics.h	(revision 76253)
+++ interface/wx/graphics.h	(working copy)
@@ -1212,6 +1212,21 @@
                                              wxDouble w, wxDouble h) = 0;
 
     /**
+        Returns the name of the technology used by the renderer.
+
+        Currently this function returns "GDI+" for Windows GDI+ implementation,
+        "Cairo" for Cairo implementation and "CoreGraphics" for OS X
+        CoreGraphics implementation.
+
+        Note: the string returned by this method is considered proper to be
+        included in a filename (it is not a label and is not expected to be
+        translated).
+
+        @since 3.1.0
+     */
+    virtual wxString GetName() const = 0;
+
+    /**
         Returns the default renderer on this platform. On OS X this is the Core
         Graphics (a.k.a. Quartz 2D) renderer, on MSW the GDIPlus renderer, and
         on GTK we currently default to the cairo renderer.
Index: src/generic/graphicc.cpp
===================================================================
--- src/generic/graphicc.cpp	(revision 76253)
+++ src/generic/graphicc.cpp	(working copy)
@@ -2398,6 +2398,7 @@
     // create a subimage from a native image representation
     virtual wxGraphicsBitmap CreateSubBitmap( const wxGraphicsBitmap &bitmap, wxDouble x, wxDouble y, wxDouble w, wxDouble h  );
 
+    wxString GetName() const;
     DECLARE_DYNAMIC_CLASS_NO_COPY(wxCairoRenderer)
 } ;
 
@@ -2651,6 +2652,11 @@
     return p;
 }
 
+wxString wxCairoRenderer::GetName() const
+{
+    return "Cairo";
+}
+
 wxGraphicsRenderer* wxGraphicsRenderer::GetCairoRenderer()
 {
     return &gs_cairoGraphicsRenderer;
Index: src/msw/graphics.cpp
===================================================================
--- src/msw/graphics.cpp	(revision 76253)
+++ src/msw/graphics.cpp	(working copy)
@@ -587,6 +587,8 @@
     // create a subimage from a native image representation
     virtual wxGraphicsBitmap CreateSubBitmap( const wxGraphicsBitmap &bitmap, wxDouble x, wxDouble y, wxDouble w, wxDouble h  );
 
+    virtual wxString GetName() const;
+
 protected :
     bool EnsureIsLoaded();
     void Load();
@@ -2280,6 +2282,11 @@
         return wxNullGraphicsBitmap;
 }
 
+wxString wxGDIPlusRenderer::GetName() const
+{
+    return "GDI+";
+}
+
 // Shutdown GDI+ at app exit, before possible dll unload
 class wxGDIPlusRendererModule : public wxModule
 {
Index: src/osx/carbon/graphics.cpp
===================================================================
--- src/osx/carbon/graphics.cpp	(revision 76253)
+++ src/osx/carbon/graphics.cpp	(working copy)
@@ -2654,6 +2654,8 @@
 
     // create a native bitmap representation
     virtual wxGraphicsBitmap CreateSubBitmap( const wxGraphicsBitmap &bitmap, wxDouble x, wxDouble y, wxDouble w, wxDouble h  ) wxOVERRIDE ;
+
+    virtual wxString GetName() const;
 private :
     DECLARE_DYNAMIC_CLASS_NO_COPY(wxMacCoreGraphicsRenderer)
 } ;
@@ -2875,6 +2877,11 @@
         return wxNullGraphicsBitmap;
 }
 
+wxString wxMacCoreGraphicsRenderer::GetName() const
+{
+    return "CoreGraphics";
+}
+
 wxGraphicsBrush
 wxMacCoreGraphicsRenderer::CreateLinearGradientBrush(wxDouble x1, wxDouble y1,
                                                      wxDouble x2, wxDouble y2,
