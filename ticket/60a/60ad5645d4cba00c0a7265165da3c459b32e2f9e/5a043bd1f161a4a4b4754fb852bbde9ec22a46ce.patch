Index: include/wx/filename.h
===================================================================
--- include/wx/filename.h	(revision 55550)
+++ include/wx/filename.h	(working copy)
@@ -75,8 +75,11 @@
 // what exactly should GetPath() return?
 enum
 {
-    wxPATH_GET_VOLUME    = 0x0001,  // include the volume if applicable
-    wxPATH_GET_SEPARATOR = 0x0002   // terminate the path with the separator
+#if defined(__WINDOWS__) || defined(__DOS__) || defined(__OS2__)
+    wxPATH_GET_COLON     = 0x0001,  // wxFileName::GetVolumeString only: append colon
+#endif
+    wxPATH_GET_VOLUME    = 0x0002,  // include the volume if applicable
+    wxPATH_GET_SEPARATOR = 0x0004   // terminate the path with the separator
 };
 
 // MkDir flags
@@ -451,6 +454,11 @@
         // get the canonical path format for this platform
     static wxPathFormat GetFormat( wxPathFormat format = wxPATH_NATIVE );
 
+#if defined(__WINDOWS__) || defined(__DOS__) || defined(__OS2__)
+        // get the volume name, C, C: or C:\\
+        // note: The wxPATH_GET_VOLUME flag does not apply
+    static wxString GetVolumeString(char drive, int flags = wxPATH_GET_COLON|wxPATH_GET_SEPARATOR);
+#endif
         // split a fullpath into the volume, path, (base) name and extension
         // (all of the pointers can be NULL)
     static void SplitPath(const wxString& fullpath,
Index: interface/wx/filename.h
===================================================================
--- interface/wx/filename.h	(revision 55550)
+++ interface/wx/filename.h	(working copy)
@@ -373,6 +373,24 @@
     static wxPathFormat GetFormat(wxPathFormat format = wxPATH_NATIVE);
 
     /**
+        This function builds a volume path string formatted as "C", "C:" or "C:\\".
+        Implemented in MSW and OS/2 only.
+
+        @since 2.9.0
+
+        @param drive
+           Specify drive character, 'A' through 'Z'
+
+        @param flags
+           Zero, or @c wxPATH_GET_COLON, optionally or'ed with @c wxPATH_GET_SEPARATOR.
+
+        @return Volume path string.
+
+        @header{wx/filename.h}
+    */
+    static wxString GetVolumeString(char drive, int flags = wxPATH_GET_COLON|wxPATH_GET_SEPARATOR);
+
+    /**
         Returns the full name (including extension but excluding directories).
     */
     wxString GetFullName() const;
Index: src/common/filename.cpp
===================================================================
--- src/common/filename.cpp	(revision 55550)
+++ src/common/filename.cpp	(working copy)
@@ -1953,6 +1953,17 @@
     return format;
 }
 
+#if defined(__WINDOWS__) || defined(__DOS__) || defined(__OS2__)
+/*static*/
+wxString wxFileName::GetVolumeString(char drive, int flags)
+{
+   wxString path = drive;
+   if (flags & wxPATH_GET_COLON    ) path << wxT(":");
+   if (flags & wxPATH_GET_SEPARATOR) path << wxFILE_SEP_PATH;
+   return path;
+}
+#endif
+
 // ----------------------------------------------------------------------------
 // path splitting function
 // ----------------------------------------------------------------------------
Index: src/generic/dirctrlg.cpp
===================================================================
--- src/generic/dirctrlg.cpp	(revision 55550)
+++ src/generic/dirctrlg.cpp	(working copy)
@@ -164,9 +164,8 @@
         {
             if (ulDriveMap & ( 1 << i ))
             {
-                wxString path, name;
-                path.Printf(wxT("%c:\\"), 'A' + i);
-                name.Printf(wxT("%c:"), 'A' + i);
+                const wxString path = wxFileName::GetVolumeString('A' + i, wxPATH_GET_COLON|wxPATH_GET_SEPARATOR);
+                const wxString name = wxFileName::GetVolumeString('A' + i, wxPATH_GET_COLON);
 
                 // Note: If _filesys is unsupported by some compilers,
                 //       we can always replace it by DosQueryFSAttach
@@ -206,10 +205,9 @@
     /* If we can switch to the drive, it exists. */
     for( drive = 1; drive <= 26; drive++ )
     {
-        wxString path, name;
-        path.Printf(wxT("%c:\\"), (char) (drive + 'a' - 1));
-        name.Printf(wxT("%c:"), (char) (drive + 'A' - 1));
-
+        const wxString path = wxFileName::GetVolumeString(drive + 'A' - 1, wxPATH_GET_COLON|wxPATH_GET_SEPARATOR);
+        const wxString name = wxFileName::GetVolumeString(drive + 'A' - 1, wxPATH_GET_COLON);
+        
         if (wxIsDriveAvailable(path))
         {
             paths.Add(path);
