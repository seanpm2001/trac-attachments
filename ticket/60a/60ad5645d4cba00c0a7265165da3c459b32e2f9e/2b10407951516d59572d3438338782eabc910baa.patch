Index: include/wx/filefn.h
===================================================================
--- include/wx/filefn.h	(revision 55459)
+++ include/wx/filefn.h	(working copy)
@@ -736,6 +736,15 @@
 // "All files (*)|*|Image Files (*.jpeg *.png)|*.jpg;*.png"
 WXDLLIMPEXP_BASE int wxParseCommonDialogsFilter(const wxString& wildCard, wxArrayString& descriptions, wxArrayString& filters);
 
+#if defined(__WINDOWS__) || defined(__DOS__) || defined(__OS2__)
+enum wxVOLUMESTRING
+{
+   wxVOLUMESTRING_COLON = 0x01,
+   wxVOLUMESTRING_SEP   = 0x012,
+};
+WXDLLIMPEXP_BASE wxString wxMakeVolumeString(wxChar drive, int flags);
+#endif
+
 // ----------------------------------------------------------------------------
 // classes
 // ----------------------------------------------------------------------------
Index: interface/wx/filefn.h
===================================================================
--- interface/wx/filefn.h	(revision 55459)
+++ interface/wx/filefn.h	(working copy)
@@ -140,7 +140,26 @@
 */
 wxString wxGetOSDirectory();
 
+
 /**
+    This function builds a volume path string formatted as "C", "C:" or "C:\\".
+    Implemented in MSW and OS/2 only.
+
+    @since 2.9.0
+
+    @param drive
+        Specify drive character, 'A' through 'Z'
+
+    @param flags
+        Zero, or @c wxVOLUMESTRING_COLON, optionally or'ed with @c wxVOLUMESTRING_SEP.
+
+    @return Volume path string.
+
+    @header{wx/filefn.h}
+*/
+bool wxString wxMakeVolumeString(wxChar drive, int flags);
+
+/**
     Parses the @a wildCard, returning the number of filters. Returns 0 if none
     or if there's a problem.
 
Index: src/common/filefn.cpp
===================================================================
--- src/common/filefn.cpp	(revision 55459)
+++ src/common/filefn.cpp	(working copy)
@@ -1907,6 +1907,16 @@
 #endif
 }
 
+#if defined(__WINDOWS__) || defined(__DOS__) || defined(__OS2__)
+wxString wxMakeVolumeString(wxChar drive, int flags)
+{
+   wxString path = drive;
+   if (flags & wxVOLUMESTRING_COLON) path << wxT(":");
+   if (flags & wxVOLUMESTRING_SEP  ) path << wxFILE_SEP_PATH;
+   return path;
+}
+#endif
+
 // Return the type of an open file
 //
 // Some file types on some platforms seem seekable but in fact are not.
Index: src/generic/dirctrlg.cpp
===================================================================
--- src/generic/dirctrlg.cpp	(revision 55459)
+++ src/generic/dirctrlg.cpp	(working copy)
@@ -164,9 +164,8 @@
         {
             if (ulDriveMap & ( 1 << i ))
             {
-                wxString path, name;
-                path.Printf(wxT("%c:\\"), 'A' + i);
-                name.Printf(wxT("%c:"), 'A' + i);
+                const wxString path = wxMakeVolumeString('A' + i, wxVOLUMESTRING_COLON | wxVOLUMESTRING_SEP);
+                const wxString name = wxMakeVolumeString('A' + i, wxVOLUMESTRING_COLON);
 
                 // Note: If _filesys is unsupported by some compilers,
                 //       we can always replace it by DosQueryFSAttach
@@ -206,9 +205,8 @@
     /* If we can switch to the drive, it exists. */
     for( drive = 1; drive <= 26; drive++ )
     {
-        wxString path, name;
-        path.Printf(wxT("%c:\\"), (char) (drive + 'a' - 1));
-        name.Printf(wxT("%c:"), (char) (drive + 'A' - 1));
+        const wxString path = wxMakeVolumeString(drive + 'A' - 1, wxVOLUMESTRING_COLON | wxVOLUMESTRING_SEP);
+        const wxString name = wxMakeVolumeString(drive + 'A' - 1, wxVOLUMESTRING_COLON);
 
         if (wxIsDriveAvailable(path))
         {
