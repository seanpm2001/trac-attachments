Index: printing.cpp
===================================================================
--- printing.cpp	(revision 53478)
+++ printing.cpp	(working copy)
@@ -342,106 +342,11 @@
 
     dc.SetPen(*wxBLACK_PEN);
     dc.SetBrush(*wxLIGHT_GREY_BRUSH);
-    
-    dc.DrawRectangle(0, 0, 230, 350);
-    dc.DrawLine(0, 0, 229, 349);
-    dc.DrawLine(229, 0, 0, 349);
-    dc.SetBrush(*wxTRANSPARENT_BRUSH);
 
-    dc.SetBrush(*wxCYAN_BRUSH);
-    dc.SetPen(*wxRED_PEN);
-
-    dc.DrawRoundedRectangle(0, 20, 200, 80, 20);
-    
-    dc.DrawText( wxT("Rectangle 200 by 80"), 40, 40);
-
-    dc.SetPen( wxPen(*wxBLACK,0,wxDOT_DASH) );
-    dc.DrawEllipse(50, 140, 100, 50);
-    dc.SetPen(*wxRED_PEN);
-
-    dc.DrawText( wxT("Test message: this is in 10 point text"), 10, 180);
-    
-#if wxUSE_UNICODE
-    const char *test = "Hebrew    שלום -- Japanese (日本語)";
-    wxString tmp = wxConvUTF8.cMB2WC( test );
-    dc.DrawText( tmp, 10, 200 );
-#endif
-
-    wxPoint points[5];
-    points[0].x = 0;
-    points[0].y = 0;
-    points[1].x = 20;
-    points[1].y = 0;
-    points[2].x = 20;
-    points[2].y = 20;
-    points[3].x = 10;
-    points[3].y = 20;
-    points[4].x = 10;
-    points[4].y = -20;
-    dc.DrawPolygon( 5, points, 20, 250, wxODDEVEN_RULE );
-    dc.DrawPolygon( 5, points, 50, 250, wxWINDING_RULE );
-
-    dc.DrawEllipticArc( 80, 250, 60, 30, 0.0, 270.0 );
-
-    points[0].x = 150;
-    points[0].y = 250;
-    points[1].x = 180;
-    points[1].y = 250;
-    points[2].x = 180;
-    points[2].y = 220;
-    points[3].x = 200;
-    points[3].y = 220;
-    dc.DrawSpline( 4, points );
-
-    dc.DrawArc( 20,10, 10,10, 25,40 );
-        
-    wxString str;
-    int i = 0;
-    str.Printf( wxT("---- Text at angle %d ----"), i );
-    dc.DrawRotatedText( str, 100, 300, i );
-
-    i = m_angle;
-    str.Printf( wxT("---- Text at angle %d ----"), i );
-    dc.DrawRotatedText( str, 100, 300, i );
-
-    wxIcon my_icon = wxICON(mondrian) ;
-
-    dc.DrawIcon( my_icon, 100, 100);
-
+    m_bitmap = wxBitmap(mondrian_xpm);
     if (m_bitmap.Ok())
         dc.DrawBitmap( m_bitmap, 10, 10 );
 
-#if wxUSE_GRAPHICS_CONTEXT
-    wxGraphicsContext *gc = NULL;
-
-    wxPrinterDC *printer_dc = wxDynamicCast( &dc, wxPrinterDC );
-    if (printer_dc)
-        gc = wxGraphicsContext::Create( *printer_dc );
-
-    wxWindowDC *window_dc = wxDynamicCast( &dc, wxWindowDC );
-    if (window_dc)
-        gc = wxGraphicsContext::Create( *window_dc );
-   
-    if (gc)
-    {
-        // make a path that contains a circle and some lines, centered at 100,100
-        gc->SetPen( *wxRED_PEN );
-        gc->SetFont( wxGetApp().m_testFont, *wxGREEN );
-        wxGraphicsPath path = gc->CreatePath();
-        path.AddCircle( 50.0, 50.0, 50.0 );
-        path.MoveToPoint(0.0, 50.0);
-        path.AddLineToPoint(100.0, 50.0);
-        path.MoveToPoint(50.0, 0.0);
-        path.AddLineToPoint(50.0, 100.0 );
-        path.CloseSubpath();
-        path.AddRectangle(25.0, 25.0, 50.0, 50.0);
-        
-        gc->StrokePath(path);
-        
-        delete gc;
-    }
-#endif
-
 }
 
 void MyFrame::OnSize(wxSizeEvent& event )

 	  	 
