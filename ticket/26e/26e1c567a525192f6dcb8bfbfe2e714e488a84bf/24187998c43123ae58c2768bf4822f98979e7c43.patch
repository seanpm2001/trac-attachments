Index: include/wx/wx.h
===================================================================
--- include/wx/wx.h	(revision 56670)
+++ include/wx/wx.h	(working copy)
@@ -87,6 +87,7 @@
 #include "wx/dirdlg.h"
 #include "wx/toolbar.h"
 #include "wx/combobox.h"
+#include "wx/combo.h"
 #include "wx/layout.h"
 #include "wx/sizer.h"
 #include "wx/mdi.h"
Index: include/wx/xrc/xh_combo.h
===================================================================
--- include/wx/xrc/xh_combo.h	(revision 56670)
+++ include/wx/xrc/xh_combo.h	(working copy)
@@ -13,7 +13,8 @@
 
 #include "wx/xrc/xmlres.h"
 
-#if wxUSE_XRC && wxUSE_COMBOBOX
+#if wxUSE_XRC
+#    if wxUSE_COMBOBOX
 
 class WXDLLIMPEXP_XRC wxComboBoxXmlHandler : public wxXmlResourceHandler
 {
@@ -28,7 +29,24 @@
     bool m_insideBox;
     wxArrayString strList;
 };
+#    endif // wxUSE_COMBOBOX
 
-#endif // wxUSE_XRC && wxUSE_COMBOBOX
+#    if wxUSE_COMBOCTRL
+class WXDLLIMPEXP_XRC wxComboCtrlXmlHandler : public wxXmlResourceHandler
+{
+    DECLARE_DYNAMIC_CLASS(wxComboCtrlXmlHandler)
 
+public:
+    wxComboCtrlXmlHandler();
+    virtual wxObject *DoCreateResource();
+    virtual bool CanHandle(wxXmlNode *node);
+
+private:
+    bool m_insideBox;
+    wxArrayString strList;
+};
+#    endif // wxUSE_COMBOCTRL
+
+#endif // wxUSE_XRC
+
 #endif // _WX_XH_COMBO_H_
Index: src/xrc/xh_combo.cpp
===================================================================
--- src/xrc/xh_combo.cpp	(revision 56670)
+++ src/xrc/xh_combo.cpp	(working copy)
@@ -15,16 +15,22 @@
     #pragma hdrstop
 #endif
 
-#if wxUSE_XRC && wxUSE_COMBOBOX
+#if wxUSE_XRC
 
 #include "wx/xrc/xh_combo.h"
 
 #ifndef WX_PRECOMP
+#if wxUSE_COMBOBOX
     #include "wx/intl.h"
-    #include "wx/combobox.h"
+    #include "wx/combo.h"
     #include "wx/textctrl.h"    // for wxTE_PROCESS_ENTER
 #endif
+#if wxUSE_COMBOCTRL
+    #include "wx/combobox.h"
+#endif
+#endif
 
+#if wxUSE_COMBOBOX
 IMPLEMENT_DYNAMIC_CLASS(wxComboBoxXmlHandler, wxXmlResourceHandler)
 
 wxComboBoxXmlHandler::wxComboBoxXmlHandler()
@@ -90,5 +96,74 @@
     return (IsOfClass(node, wxT("wxComboBox")) ||
            (m_insideBox && node->GetName() == wxT("item")));
 }
+#endif // wxUSE_COMBOBOX
 
-#endif // wxUSE_XRC && wxUSE_COMBOBOX
+// wxComboCtrlXmlHandler
+
+#if wxUSE_COMBOCTRL
+IMPLEMENT_DYNAMIC_CLASS(wxComboCtrlXmlHandler, wxXmlResourceHandler)
+
+wxComboCtrlXmlHandler::wxComboCtrlXmlHandler()
+: wxXmlResourceHandler(), m_insideBox(false)
+{
+    XRC_ADD_STYLE(wxCB_READONLY);	
+	XRC_ADD_STYLE(wxCB_SORT);
+    XRC_ADD_STYLE(wxTE_PROCESS_ENTER);
+    XRC_ADD_STYLE(wxCC_SPECIAL_DCLICK);
+    XRC_ADD_STYLE(wxCC_STD_BUTTON);
+    AddWindowStyles();
+}
+ 
+wxObject *wxComboCtrlXmlHandler::DoCreateResource()
+{
+    if( m_class == wxT("wxComboCtrl"))
+    {
+        // find the selection
+        long selection = GetLong( wxT("selection"), -1 );
+
+        // need to build the list of strings from children
+        m_insideBox = true;
+        CreateChildrenPrivately(NULL, GetParamNode(wxT("content")));
+
+        XRC_MAKE_INSTANCE(control, wxComboCtrl)
+
+        control->Create(m_parentAsWindow,
+                        GetID(),
+                        GetText(wxT("value")),
+                        GetPosition(), GetSize(),
+                        GetStyle(),
+                        wxDefaultValidator,
+                        GetName());
+
+        if (selection != -1)
+            control->SetSelection(selection, selection);
+
+        SetupWindow(control);
+
+        strList.Clear();    // dump the strings
+
+        return control;
+    }
+    else
+    {
+        // on the inside now.
+        // handle <item>Label</item>
+
+        // add to the list
+        wxString str = GetNodeContent(m_node);
+        if (m_resource->GetFlags() & wxXRC_USE_LOCALE)
+            str = wxGetTranslation(str, m_resource->GetDomain());
+        strList.Add(str);
+
+        return NULL;
+    }
+}
+ 
+bool wxComboCtrlXmlHandler::CanHandle(wxXmlNode *node)
+{
+    return (IsOfClass(node, wxT("wxComboCtrl")) ||
+           (m_insideBox && node->GetName() == wxT("item")));
+}
+#endif // wxUSE_COMBOCTR
+
+#endif // wxUSE_XRC
Index: src/xrc/xmlrsall.cpp
===================================================================
--- src/xrc/xmlrsall.cpp	(revision 56670)
+++ src/xrc/xmlrsall.cpp	(working copy)
@@ -75,6 +75,9 @@
 #if wxUSE_COMBOBOX
     AddHandler(new wxComboBoxXmlHandler);
 #endif
+#if wxUSE_COMBOCTRL
+    AddHandler(new wxComboCtrlXmlHandler);
+#endif
 #if wxUSE_DATEPICKCTRL
     AddHandler(new wxDateCtrlXmlHandler);
 #endif
