Index: src/generic/choicdgg.cpp
===================================================================
--- src/generic/choicdgg.cpp	(revision 76928)
+++ src/generic/choicdgg.cpp	(working copy)
@@ -52,31 +52,11 @@
 // private functions
 // ----------------------------------------------------------------------------
 
-// convert wxArrayString into a wxString[] which must be delete[]d by caller
-static int ConvertWXArrayToC(const wxArrayString& aChoices, wxString **choices);
-
 // ============================================================================
 // implementation
 // ============================================================================
 
 // ----------------------------------------------------------------------------
-// helpers
-// ----------------------------------------------------------------------------
-
-int ConvertWXArrayToC(const wxArrayString& aChoices, wxString **choices)
-{
-    int n = aChoices.GetCount();
-    *choices = new wxString[n];
-
-    for ( int i = 0; i < n; i++ )
-    {
-        (*choices)[i] = aChoices[i];
-    }
-
-    return n;
-}
-
-// ----------------------------------------------------------------------------
 // wrapper functions
 // ----------------------------------------------------------------------------
 
@@ -92,31 +72,26 @@
     wxSingleChoiceDialog dialog(parent, message, caption, n, choices);
 
     dialog.SetSelection(initialSelection);
-
-    wxString choice;
-    if ( dialog.ShowModal() == wxID_OK )
-        choice = dialog.GetStringSelection();
-
-    return choice;
+    return (dialog.ShowModal() == wxID_OK)
+        ? dialog.GetStringSelection()
+        : wxString();
 }
 
 wxString wxGetSingleChoice( const wxString& message,
                             const wxString& caption,
-                            const wxArrayString& aChoices,
+                            const wxArrayString& choices,
                             wxWindow *parent,
-                            int x, int y,
-                            bool centre,
-                            int width, int height,
+                            int WXUNUSED(x), int WXUNUSED(y),
+                            bool WXUNUSED(centre),
+                            int WXUNUSED(width), int WXUNUSED(height),
                             int initialSelection)
 {
-    wxString *choices;
-    int n = ConvertWXArrayToC(aChoices, &choices);
-    wxString res = wxGetSingleChoice(message, caption, n, choices, parent,
-                                     x, y, centre, width, height,
-                                     initialSelection);
-    delete [] choices;
+    wxSingleChoiceDialog dialog(parent, message, caption, choices);
 
-    return res;
+    dialog.SetSelection(initialSelection);
+    return (dialog.ShowModal() == wxID_OK)
+        ? dialog.GetStringSelection()
+        : wxString();
 }
 
 wxString wxGetSingleChoice( const wxString& message,
@@ -155,33 +130,26 @@
     wxSingleChoiceDialog dialog(parent, message, caption, n, choices);
 
     dialog.SetSelection(initialSelection);
-
-    int choice;
-    if ( dialog.ShowModal() == wxID_OK )
-        choice = dialog.GetSelection();
-    else
-        choice = -1;
-
-    return choice;
+    return (dialog.ShowModal() == wxID_OK)
+        ? dialog.GetSelection()
+        : -1;
 }
 
 int wxGetSingleChoiceIndex( const wxString& message,
                             const wxString& caption,
-                            const wxArrayString& aChoices,
+                            const wxArrayString& choices,
                             wxWindow *parent,
-                            int x, int y,
-                            bool centre,
-                            int width, int height,
+                            int WXUNUSED(x), int WXUNUSED(y),
+                            bool WXUNUSED(centre),
+                            int WXUNUSED(width), int WXUNUSED(height),
                             int initialSelection)
 {
-    wxString *choices;
-    int n = ConvertWXArrayToC(aChoices, &choices);
-    int res = wxGetSingleChoiceIndex(message, caption, n, choices, parent,
-                                     x, y, centre, width, height,
-                                     initialSelection);
-    delete [] choices;
+    wxSingleChoiceDialog dialog(parent, message, caption, choices);
 
-    return res;
+    dialog.SetSelection(initialSelection);
+    return (dialog.ShowModal() == wxID_OK)
+        ? dialog.GetSelection()
+        : -1;
 }
 
 int wxGetSingleChoiceIndex( const wxString& message,
@@ -224,35 +192,28 @@
                                 client_data);
 
     dialog.SetSelection(initialSelection);
-
-    void *data;
-    if ( dialog.ShowModal() == wxID_OK )
-        data = dialog.GetSelectionData();
-    else
-        data = NULL;
-
-    return data;
+    return (dialog.ShowModal() == wxID_OK)
+        ? dialog.GetSelectionData()
+        : NULL;
 }
 
 void *wxGetSingleChoiceData( const wxString& message,
                              const wxString& caption,
-                             const wxArrayString& aChoices,
+                             const wxArrayString& choices,
                              void **client_data,
                              wxWindow *parent,
-                             int x, int y,
-                             bool centre,
-                             int width, int height,
+                             int WXUNUSED(x), int WXUNUSED(y),
+                             bool WXUNUSED(centre),
+                             int WXUNUSED(width), int WXUNUSED(height),
                              int initialSelection)
 {
-    wxString *choices;
-    int n = ConvertWXArrayToC(aChoices, &choices);
-    void *res = wxGetSingleChoiceData(message, caption, n, choices,
-                                      client_data, parent,
-                                      x, y, centre, width, height,
-                                      initialSelection);
-    delete [] choices;
+    wxSingleChoiceDialog dialog(parent, message, caption, choices,
+                                client_data);
 
-    return res;
+    dialog.SetSelection(initialSelection);
+    return (dialog.ShowModal() == wxID_OK)
+        ? dialog.GetSelectionData()
+        : NULL;
 }
 
 void* wxGetSingleChoiceData( const wxString& message,
@@ -284,14 +245,14 @@
 }
 
 
-int wxGetSelectedChoices(wxArrayInt& selections,
-                            const wxString& message,
-                            const wxString& caption,
-                            int n, const wxString *choices,
-                            wxWindow *parent,
-                            int WXUNUSED(x), int WXUNUSED(y),
-                            bool WXUNUSED(centre),
-                            int WXUNUSED(width), int WXUNUSED(height))
+int wxGetSelectedChoices( wxArrayInt& selections,
+                          const wxString& message,
+                          const wxString& caption,
+                          int n, const wxString *choices,
+                          wxWindow *parent,
+                          int WXUNUSED(x), int WXUNUSED(y),
+                          bool WXUNUSED(centre),
+                          int WXUNUSED(width), int WXUNUSED(height))
 {
     wxMultiChoiceDialog dialog(parent, message, caption, n, choices);
 
@@ -308,26 +269,34 @@
     }
 
     selections = dialog.GetSelections();
-    return selections.GetCount();
+    return (int)selections.GetCount();
 }
 
-int wxGetSelectedChoices(wxArrayInt& selections,
-                            const wxString& message,
-                            const wxString& caption,
-                            const wxArrayString& aChoices,
-                            wxWindow *parent,
-                            int x, int y,
-                            bool centre,
-                            int width, int height)
+int wxGetSelectedChoices( wxArrayInt& selections,
+                          const wxString& message,
+                          const wxString& caption,
+                          const wxArrayString& choices,
+                          wxWindow *parent,
+                          int WXUNUSED(x), int WXUNUSED(y),
+                          bool WXUNUSED(centre),
+                          int WXUNUSED(width), int WXUNUSED(height))
 {
-    wxString *choices;
-    int n = ConvertWXArrayToC(aChoices, &choices);
-    int res = wxGetSelectedChoices(selections, message, caption,
-                                      n, choices, parent,
-                                      x, y, centre, width, height);
-    delete [] choices;
+    wxMultiChoiceDialog dialog(parent, message, caption, choices);
 
-    return res;
+    // call this even if selections array is empty and this then (correctly)
+    // deselects the first item which is selected by default
+    dialog.SetSelections(selections);
+
+    if ( dialog.ShowModal() != wxID_OK )
+    {
+        // NB: intentionally do not clear the selections array here, the caller
+        //     might want to preserve its original contents if the dialog was
+        //     cancelled
+        return -1;
+    }
+
+    selections = dialog.GetSelections();
+    return (int)selections.GetCount();
 }
 
 #if WXWIN_COMPATIBILITY_2_8
