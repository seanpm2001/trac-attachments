diff -ur ../../wxWidgets/src/common/fontcmn.cpp ./src/common/fontcmn.cpp
--- ../../wxWidgets/src/common/fontcmn.cpp	2005-01-03 11:48:20.000000000 -0800
+++ ./src/common/fontcmn.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -602,7 +602,7 @@
     wxFontEncoding enc = GetEncoding();
     if ( enc != wxFONTENCODING_DEFAULT && enc != wxFONTENCODING_SYSTEM )
     {
-        desc << _T(' ') << wxFontMapper::Get()->GetEncodingName(enc);
+        desc << _T(' ') << wxFontMapper::GetEncodingName(enc);
     }
 #endif // wxUSE_FONTMAP
 
diff -ur ../../wxWidgets/src/common/log.cpp ./src/common/log.cpp
--- ../../wxWidgets/src/common/log.cpp	2004-11-30 17:29:08.000000000 -0800
+++ ./src/common/log.cpp	2005-03-27 14:27:54.000000000 -0800
@@ -209,8 +209,7 @@
 void wxVLogVerbose(const wxChar *szFormat, va_list argptr)
 {
     if ( IsLoggingEnabled() ) {
-        wxLog *pLog = wxLog::GetActiveTarget();
-        if ( pLog != NULL && pLog->GetVerbose() ) {
+        if ( wxLog::GetActiveTarget() != NULL && wxLog::GetVerbose() ) {
             wxCRIT_SECT_LOCKER(locker, gs_csLogBuf);
 
             wxVsnprintf(s_szBuf, s_szBufSize, szFormat, argptr);
diff -ur ../../wxWidgets/src/common/zstream.cpp ./src/common/zstream.cpp
--- ../../wxWidgets/src/common/zstream.cpp	2004-11-24 14:50:11.000000000 -0800
+++ ./src/common/zstream.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -162,7 +162,7 @@
     default:
       wxString msg(m_inflate->msg, *wxConvCurrent);
       if (!msg)
-        msg.Format(_("zlib error %d"), err);
+        msg = wxString::Format(_("zlib error %d"), err);
       wxLogError(_("Can't read from inflate stream: %s"), msg.c_str());
       m_lasterror = wxSTREAM_READ_ERROR;
   }
@@ -312,7 +312,7 @@
     m_lasterror = wxSTREAM_WRITE_ERROR;
     wxString msg(m_deflate->msg, *wxConvCurrent);
     if (!msg)
-      msg.Format(_("zlib error %d"), err);
+      msg = wxString::Format(_("zlib error %d"), err);
     wxLogError(_("Can't write to deflate stream: %s"), msg.c_str());
   }
 
diff -ur ../../wxWidgets/src/mac/carbon/toplevel.cpp ./src/mac/carbon/toplevel.cpp
--- ../../wxWidgets/src/mac/carbon/toplevel.cpp	2005-03-07 19:05:33.000000000 -0800
+++ ./src/mac/carbon/toplevel.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -242,31 +242,31 @@
                 event.SetTimestamp(when);
                 event.SetEventObject(focus);
 
-                if ( focus && (modifiers ^ wxTheApp->s_lastModifiers ) & controlKey )
+                if ( focus && (modifiers ^ wxApp::s_lastModifiers ) & controlKey )
                 {
                     event.m_keyCode = WXK_CONTROL ;
                     event.SetEventType( ( modifiers & controlKey ) ? wxEVT_KEY_DOWN : wxEVT_KEY_UP ) ;
                     focus->GetEventHandler()->ProcessEvent( event ) ;
                 }
-                if ( focus && (modifiers ^ wxTheApp->s_lastModifiers ) & shiftKey )
+                if ( focus && (modifiers ^ wxApp::s_lastModifiers ) & shiftKey )
                 {
                     event.m_keyCode = WXK_SHIFT ;
                     event.SetEventType( ( modifiers & shiftKey ) ? wxEVT_KEY_DOWN : wxEVT_KEY_UP ) ;
                     focus->GetEventHandler()->ProcessEvent( event ) ;
                 }
-                if ( focus && (modifiers ^ wxTheApp->s_lastModifiers ) & optionKey )
+                if ( focus && (modifiers ^ wxApp::s_lastModifiers ) & optionKey )
                 {
                     event.m_keyCode = WXK_ALT ;
                     event.SetEventType( ( modifiers & optionKey ) ? wxEVT_KEY_DOWN : wxEVT_KEY_UP ) ;
                     focus->GetEventHandler()->ProcessEvent( event ) ;
                 }
-                if ( focus && (modifiers ^ wxTheApp->s_lastModifiers ) & cmdKey )
+                if ( focus && (modifiers ^ wxApp::s_lastModifiers ) & cmdKey )
                 {
                     event.m_keyCode = WXK_COMMAND ;
                     event.SetEventType( ( modifiers & cmdKey ) ? wxEVT_KEY_DOWN : wxEVT_KEY_UP ) ;
                     focus->GetEventHandler()->ProcessEvent( event ) ;
                 }
-                wxTheApp->s_lastModifiers = modifiers ;
+                wxApp::s_lastModifiers = modifiers ;
             }
              break ;
     }
@@ -464,9 +464,9 @@
     {
         QDGlobalToLocalPoint( UMAGetWindowPort(window ) ,  &windowMouseLocation ) ;
 
-        if ( wxTheApp->s_captureWindow && wxTheApp->s_captureWindow->MacGetTopLevelWindowRef() == (WXWindow) window && windowPart == inContent )
+        if ( wxApp::s_captureWindow && wxApp::s_captureWindow->MacGetTopLevelWindowRef() == (WXWindow) window && windowPart == inContent )
         {
-            currentMouseWindow = wxTheApp->s_captureWindow ;
+            currentMouseWindow = wxApp::s_captureWindow ;
         }
         else if ( (IsWindowActive(window) && windowPart == inContent) )
         {
@@ -601,9 +601,9 @@
                 result = noErr ;
             }
         }
-        if ( cEvent.GetKind() == kEventMouseUp && wxTheApp->s_captureWindow )
+        if ( cEvent.GetKind() == kEventMouseUp && wxApp::s_captureWindow )
         {
-            wxTheApp->s_captureWindow = NULL ;
+            wxApp::s_captureWindow = NULL ;
             // update cursor ?
          }
 
diff -ur ../../wxWidgets/src/mac/carbon/window.cpp ./src/mac/carbon/window.cpp
--- ../../wxWidgets/src/mac/carbon/window.cpp	2005-03-26 20:28:02.000000000 -0800
+++ ./src/mac/carbon/window.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -1115,17 +1115,17 @@
 
 void wxWindowMac::DoCaptureMouse()
 {
-    wxTheApp->s_captureWindow = this ;
+    wxApp::s_captureWindow = this ;
 }
 
 wxWindow* wxWindowBase::GetCapture()
 {
-    return wxTheApp->s_captureWindow ;
+    return wxApp::s_captureWindow ;
 }
 
 void wxWindowMac::DoReleaseMouse()
 {
-    wxTheApp->s_captureWindow = NULL ;
+    wxApp::s_captureWindow = NULL ;
 }
 
 #if    wxUSE_DRAG_AND_DROP
diff -ur ../../wxWidgets/src/msw/datectrl.cpp ./src/msw/datectrl.cpp
--- ../../wxWidgets/src/msw/datectrl.cpp	2005-03-01 13:37:07.000000000 -0800
+++ ./src/msw/datectrl.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -104,7 +104,7 @@
     static bool s_initDone = false; // MT-ok: used from GUI thread only
     if ( !s_initDone )
     {
-        if ( wxTheApp->GetComCtl32Version() < 470 )
+        if ( wxApp::GetComCtl32Version() < 470 )
         {
             wxLogError(_("This system doesn't support date picker control, please upgrade your version of comctl32.dll"));
 
@@ -153,7 +153,7 @@
 
     // although MSDN doesn't mention it, DTS_UPDOWN doesn't work with
     // comctl32.dll 4.72
-    if ( wxTheApp->GetComCtl32Version() > 472 && (style & wxDP_SPIN) )
+    if ( wxApp::GetComCtl32Version() > 472 && (style & wxDP_SPIN) )
         styleMSW |= DTS_UPDOWN;
     //else: drop down by default
 
diff -ur ../../wxWidgets/src/msw/dialup.cpp ./src/msw/dialup.cpp
--- ../../wxWidgets/src/msw/dialup.cpp	2004-11-09 12:55:57.000000000 -0800
+++ ./src/msw/dialup.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -1285,7 +1285,7 @@
 
     wxCHECK_RET( dialUpManager, wxT("who started to dial then?") );
 
-    SendMessage(dialUpManager->GetRasWindow(), wxWM_RAS_DIALING_PROGRESS,
+    SendMessage(wxDialUpManagerMSW::GetRasWindow(), wxWM_RAS_DIALING_PROGRESS,
                 rasconnstate, dwError);
 }
 
diff -ur ../../wxWidgets/src/msw/listctrl.cpp ./src/msw/listctrl.cpp
--- ../../wxWidgets/src/msw/listctrl.cpp	2005-03-26 20:28:02.000000000 -0800
+++ ./src/msw/listctrl.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -359,7 +359,7 @@
 
     // for comctl32.dll v 4.70+ we want to have this attribute because it's
     // prettier (and also because wxGTK does it like this)
-    if ( InReportView() && wxTheApp->GetComCtl32Version() >= 470 )
+    if ( InReportView() && wxApp::GetComCtl32Version() >= 470 )
     {
         ::SendMessage(GetHwnd(), LVM_SETEXTENDEDLISTVIEWSTYLE,
                       0, LVS_EX_FULLROWSELECT);
@@ -428,7 +428,7 @@
 #if !( defined(__GNUWIN32__) && !wxCHECK_W32API_VERSION( 1, 0 ) )
     if ( style & wxLC_VIRTUAL )
     {
-        int ver = wxTheApp->GetComCtl32Version();
+        int ver = wxApp::GetComCtl32Version();
         if ( ver < 470 )
         {
             wxLogWarning(_("Please install a newer version of comctl32.dll\n(at least version 4.70 is required but you have %d.%02d)\nor this program won't operate correctly."),
diff -ur ../../wxWidgets/src/msw/spinbutt.cpp ./src/msw/spinbutt.cpp
--- ../../wxWidgets/src/msw/spinbutt.cpp	2005-02-08 18:56:40.000000000 -0800
+++ ./src/msw/spinbutt.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -257,7 +257,7 @@
     wxSpinButtonBase::SetRange(minVal, maxVal);
 
 #ifdef UDM_SETRANGE32
-    if ( wxTheApp->GetComCtl32Version() >= 471 )
+    if ( wxApp::GetComCtl32Version() >= 471 )
     {
         // use the full 32 bit range if available
         ::SendMessage(GetHwnd(), UDM_SETRANGE32, minVal, maxVal);
diff -ur ../../wxWidgets/src/msw/tbar95.cpp ./src/msw/tbar95.cpp
--- ../../wxWidgets/src/msw/tbar95.cpp	2005-03-26 20:28:03.000000000 -0800
+++ ./src/msw/tbar95.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -387,7 +387,7 @@
     if ( style & (wxTB_FLAT | wxTB_HORZ_LAYOUT) )
     {
         // static as it doesn't change during the program lifetime
-        static int s_verComCtl = wxTheApp->GetComCtl32Version();
+        static int s_verComCtl = wxApp::GetComCtl32Version();
 
         // comctl32.dll 4.00 doesn't support the flat toolbars and using this
         // style with 6.00 (part of Windows XP) leads to the toolbar with
@@ -652,7 +652,7 @@
         if ( oldToolBarBitmap )
         {
 #ifdef TB_REPLACEBITMAP
-            if ( wxTheApp->GetComCtl32Version() >= 400 )
+            if ( wxApp::GetComCtl32Version() >= 400 )
             {
                 TBREPLACEBITMAP replaceBitmap;
                 replaceBitmap.hInstOld = NULL;
@@ -721,7 +721,7 @@
         // don't add separators to the vertical toolbar with old comctl32.dll
         // versions as they didn't handle this properly
         if ( isVertical && tool->IsSeparator() &&
-                wxTheApp->GetComCtl32Version() <= 472 )
+                wxApp::GetComCtl32Version() <= 472 )
         {
             continue;
         }
@@ -854,7 +854,7 @@
 #ifdef TB_SETBUTTONINFO
         // available in headers, now check whether it is available now
         // (during run-time)
-        if ( wxTheApp->GetComCtl32Version() >= 471 )
+        if ( wxApp::GetComCtl32Version() >= 471 )
         {
             // set the (underlying) separators width to be that of the
             // control
@@ -1068,7 +1068,7 @@
 #if defined(_WIN32_IE) && (_WIN32_IE >= 0x300 ) \
     && !( defined(__GNUWIN32__) && !wxCHECK_W32API_VERSION( 1, 0 ) ) \
     && !defined (__DIGITALMARS__)
-    if ( wxTheApp->GetComCtl32Version() >= 470 )
+    if ( wxApp::GetComCtl32Version() >= 470 )
     {
         DWORD dw = ::SendMessage(GetHwnd(), TB_GETBUTTONSIZE, 0, 0);
 
@@ -1121,7 +1121,7 @@
 
     // if comctl32 version < 4.71 wxToolBar95 adds dummy spacers
 #if defined(_WIN32_IE) && (_WIN32_IE >= 0x400 )
-    if ( wxTheApp->GetComCtl32Version() >= 471 )
+    if ( wxApp::GetComCtl32Version() >= 471 )
     {
         return m_tools.Item((size_t)index)->GetData();
     }
diff -ur ../../wxWidgets/src/msw/tooltip.cpp ./src/msw/tooltip.cpp
--- ../../wxWidgets/src/msw/tooltip.cpp	2004-05-23 13:53:01.000000000 -0700
+++ ./src/msw/tooltip.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -289,7 +289,7 @@
         if ( index != wxNOT_FOUND )
         {
 #ifdef TTM_SETMAXTIPWIDTH
-            if ( wxTheApp->GetComCtl32Version() >= 470 )
+            if ( wxApp::GetComCtl32Version() >= 470 )
             {
                 // use TTM_SETMAXTIPWIDTH to make tooltip multiline using the
                 // extent of its first line as max value
diff -ur ../../wxWidgets/src/msw/treectrl.cpp ./src/msw/treectrl.cpp
--- ../../wxWidgets/src/msw/treectrl.cpp	2005-03-18 20:05:42.000000000 -0800
+++ ./src/msw/treectrl.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -659,7 +659,7 @@
 
     if ( m_windowStyle & wxTR_FULL_ROW_HIGHLIGHT )
     {
-        if ( wxTheApp->GetComCtl32Version() >= 471 )
+        if ( wxApp::GetComCtl32Version() >= 471 )
             wstyle |= TVS_FULLROWSELECT;
     }
 
diff -ur ../../wxWidgets/src/msw/uxtheme.cpp ./src/msw/uxtheme.cpp
--- ../../wxWidgets/src/msw/uxtheme.cpp	2004-09-07 04:11:05.000000000 -0700
+++ ./src/msw/uxtheme.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -108,7 +108,7 @@
 
 bool wxUxThemeEngine::Initialize()
 {
-    if ( wxTheApp->GetComCtl32Version() < 600 )
+    if ( wxApp::GetComCtl32Version() < 600 )
     {
         // not using theme-aware comctl32.dll anyhow, don't even try to use
         // themes
diff -ur ../../wxWidgets/samples/font/font.cpp ./samples/font/font.cpp
--- ../../wxWidgets/samples/font/font.cpp	2005-03-18 20:06:18.000000000 -0800
+++ ./samples/font/font.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -741,7 +741,7 @@
     fontInfo.Printf(wxT("Font size is %d points, family: %s, encoding: %s"),
                     m_font.GetPointSize(),
                     m_font.GetFamilyString().c_str(),
-                    wxFontMapper::Get()->
+                    wxFontMapper::
                         GetEncodingDescription(m_font.GetEncoding()).c_str());
 
     dc.DrawText(fontInfo, x, y);
diff -ur ../../wxWidgets/samples/grid/griddemo.cpp ./samples/grid/griddemo.cpp
--- ../../wxWidgets/samples/grid/griddemo.cpp	2004-10-21 10:43:26.000000000 -0700
+++ ./samples/grid/griddemo.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -246,8 +246,8 @@
                              wxTE_MULTILINE );
 
     logger = new wxLogTextCtrl( logWin );
-    m_logOld = logger->SetActiveTarget( logger );
-    logger->SetTimestamp( NULL );
+    m_logOld = wxLog::SetActiveTarget( logger );
+    wxLog::SetTimestamp( NULL );
 #endif // wxUSE_LOG
 
     // this will create a grid and, by default, an associated grid
diff -ur ../../wxWidgets/samples/typetest/typetest.cpp ./samples/typetest/typetest.cpp
--- ../../wxWidgets/samples/typetest/typetest.cpp	2005-03-01 13:37:37.000000000 -0800
+++ ./samples/typetest/typetest.cpp	2005-03-27 14:23:51.000000000 -0800
@@ -189,7 +189,7 @@
 
     char std_buf[200];
     std_file_input >> std_buf;
-    str.FromAscii(std_buf);
+    str = wxString::FromAscii(std_buf);
     tmp.Printf( _T("String: %s\n"), str.c_str() );
     textCtrl.WriteText( tmp );
 

 	  	 
