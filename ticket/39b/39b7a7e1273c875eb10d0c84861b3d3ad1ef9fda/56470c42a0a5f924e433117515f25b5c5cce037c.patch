Index: include/wx/msw/listctrl.h
===================================================================
--- include/wx/msw/listctrl.h	(Revision 56008)
+++ include/wx/msw/listctrl.h	(Arbeitskopie)
@@ -398,7 +398,7 @@
 
     // get the item attribute, either by quering it for virtual control, or by
     // returning the one previously set using setter methods for a normal one
-    wxListItemAttr *DoGetItemAttr(long item) const;
+    wxListItemAttr *DoGetItemColumnAttr(long item, long column) const;
 
 
     wxTextCtrl*       m_textCtrl;        // The control used for editing a label
@@ -438,6 +438,12 @@
     // return the attribute for the item (may return NULL if none)
     virtual wxListItemAttr *OnGetItemAttr(long item) const;
 
+    // return the attribute for the given item and column (may return NULL if none)
+    virtual wxListItemAttr *OnGetItemColumnAttr(long item, long WXUNUSED(column)) const
+    {
+        return OnGetItemAttr(item);
+    }
+
 private:
     // process NM_CUSTOMDRAW notification message
     WXLPARAM OnCustomDraw(WXLPARAM lParam);
Index: interface/wx/listctrl.h
===================================================================
--- interface/wx/listctrl.h	(Revision 56008)
+++ interface/wx/listctrl.h	(Arbeitskopie)
@@ -22,13 +22,14 @@
     wxListCtrl::SetItemCount first and overload at least
     wxListCtrl::OnGetItemText (and optionally
     wxListCtrl::OnGetItemImage or wxListCtrl::OnGetItemColumnImage and
-    wxListCtrl::OnGetItemAttr) to return the information
-    about the items when the control requests it. Virtual list control can be used
-    as a normal one except that no operations which can take time proportional to
-    the number of items in the control happen -- this is required to allow having a
-    practically infinite number of items. For example, in a multiple selection
-    virtual list control, the selections won't be sent when many items are selected
-    at once because this could mean iterating over all the items.
+    wxListCtrl::OnGetItemAttr or wxListCtrl::OnGetItemColumnAttr) to return the
+    information about the items when the control requests it. Virtual list control
+    can be used as a normal one except that no operations which can take time
+    proportional to the number of items in the control happen -- this is required
+    to allow having a practically infinite number of items. For example, in a
+    multiple selection virtual list control, the selections won't be sent when
+    many items are selected at once because this could mean iterating over all
+    the items.
 
     Using many of wxListCtrl features is shown in the
     @ref overview_samplelistctrl "corresponding sample".
@@ -616,11 +617,26 @@
         The base class version always returns @NULL.
 
         @see OnGetItemImage(), OnGetItemColumnImage(),
-             OnGetItemText()
+             OnGetItemText(), OnGetItemColumnAttr()
     */
     virtual wxListItemAttr* OnGetItemAttr(long item) const;
 
     /**
+        This function may be overloaded in the derived class for a control with
+        @c wxLC_VIRTUAL style. It should return the attribute for the
+        for the specified @c item and @c column or @NULL to use the default
+        appearance parameters.
+        wxListCtrl will not delete the pointer or keep a reference of it. You can
+        return the same wxListItemAttr pointer for every OnGetItemAttr call.
+        The base class version returns OnGetItemAttr(item).
+        Currently this function only works for the MSW port.
+
+        @see OnGetItemAttr(), OnGetItemText(),
+             OnGetItemImage(), OnGetItemColumnImage(),
+    */
+    virtual wxListItemAttr* OnGetItemColumnAttr(long item, long column) const;
+
+    /**
         Overload this function in the derived class for a control with
         @c wxLC_VIRTUAL and @c wxLC_REPORT styles in order to specify the image
         index for the given line and column.
@@ -628,7 +644,7 @@
         it returns -1.
 
         @see OnGetItemText(), OnGetItemImage(),
-             OnGetItemAttr()
+             OnGetItemAttr(), OnGetItemColumnAttr()
     */
     virtual int OnGetItemColumnImage(long item, long column) const;
 
Index: src/msw/listctrl.cpp
===================================================================
--- src/msw/listctrl.cpp	(Revision 56008)
+++ src/msw/listctrl.cpp	(Arbeitskopie)
@@ -2826,14 +2826,22 @@
             break;
 
         case CDDS_ITEMPREPAINT:
+            // get a message for each subitem
+            return CDRF_NOTIFYITEMDRAW;
+
+        case CDDS_SUBITEM | CDDS_ITEMPREPAINT:
             const int item = nmcd.dwItemSpec;
+            const int column = pLVCD->iSubItem;
 
             // we get this message with item == 0 for an empty control, we
             // must ignore it as calling OnGetItemAttr() would be wrong
             if ( item < 0 || item >= GetItemCount() )
                 break;
+            // same for columns
+            if ( column < 0 || column >= GetColumnCount() )
+                break;
 
-            return HandleItemPrepaint(this, pLVCD, DoGetItemAttr(item));
+            return HandleItemPrepaint(this, pLVCD, DoGetItemColumnAttr(item, column));
     }
 
     return CDRF_DODEFAULT;
@@ -2994,9 +3002,9 @@
     return NULL;
 }
 
-wxListItemAttr *wxListCtrl::DoGetItemAttr(long item) const
+wxListItemAttr *wxListCtrl::DoGetItemColumnAttr(long item, long column) const
 {
-    return IsVirtual() ? OnGetItemAttr(item)
+    return IsVirtual() ? OnGetItemColumnAttr(item, column)
                        : wxGetInternalDataAttr(this, item);
 }
 
