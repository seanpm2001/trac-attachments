diff -ur ../wxWidgets/samples/minimal/minimal.cpp ./samples/minimal/minimal.cpp
--- ../wxWidgets/samples/minimal/minimal.cpp	2005-02-25 22:59:23.000000000 -0800
+++ ./samples/minimal/minimal.cpp	2005-09-03 20:56:08.000000000 -0700
@@ -57,6 +57,34 @@
     virtual bool OnInit();
 };
 
+class ScrolWin: public wxScrolledWindow {
+private:
+	void OnPaint(wxPaintEvent&);
+    DECLARE_EVENT_TABLE()
+};
+
+BEGIN_EVENT_TABLE(ScrolWin, wxScrolledWindow)
+	EVT_PAINT(ScrolWin::OnPaint)
+END_EVENT_TABLE()
+
+void ScrolWin::OnPaint(wxPaintEvent&)
+{
+	wxPaintDC dc(this);
+	dc.Clear();
+	int vy;
+	GetViewStart(NULL, &vy);
+	int lineHeight;
+	GetScrollPixelsPerUnit(NULL, &lineHeight);
+	int size = GetClientSize().y;
+	int n = size / lineHeight + 1;
+	for (int i = vy; i <= vy + n; i++) {
+		int y = (i - vy) * lineHeight;
+		char buf[16];
+		sprintf(buf, "%d", i);
+		dc.DrawText(buf, 8, y);
+	}
+}
+
 // Define a new frame type: this is going to be our main frame
 class MyFrame : public wxFrame
 {
@@ -69,10 +97,22 @@
     void OnAbout(wxCommandEvent& event);
 
 private:
+	ScrolWin* sw;
+	void scroll(wxCommandEvent& event);
     // any class wishing to process wxWidgets events must use this macro
     DECLARE_EVENT_TABLE()
 };
 
+void MyFrame::scroll(wxCommandEvent& event)
+{
+	switch (event.GetId()) {
+	case 6000: wxLogMessage("%u", sw->ScrollLines(1)); break;
+	case 6001: wxLogMessage("%u", sw->ScrollLines(-1)); break;
+	case 6002: wxLogMessage("%u", sw->ScrollPages(1)); break;
+	case 6003: wxLogMessage("%u", sw->ScrollPages(-1)); break;
+	}
+}
+
 // ----------------------------------------------------------------------------
 // constants
 // ----------------------------------------------------------------------------
@@ -99,6 +139,10 @@
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_MENU(6000, MyFrame::scroll)
+    EVT_MENU(6001, MyFrame::scroll)
+    EVT_MENU(6002, MyFrame::scroll)
+    EVT_MENU(6003, MyFrame::scroll)
 END_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -153,6 +197,18 @@
 
     fileMenu->Append(Minimal_Quit, _T("E&xit\tAlt-X"), _T("Quit this program"));
 
+    fileMenu->Append(6000, "line 1");
+    fileMenu->Append(6001, "line -1");
+    fileMenu->Append(6002, "page 1");
+    fileMenu->Append(6003, "page -1");
+	sw = new ScrolWin;
+	sw->Create(this, -1);
+	sw->SetVirtualSize(500, 500);
+	sw->SetScrollRate(20, 20);
+	wxSizer* sizer = new wxBoxSizer(wxVERTICAL);
+	sizer->Add(sw, 1, wxEXPAND);
+	SetSizer(sizer);
+
     // now append the freshly created menu to the menu bar...
     wxMenuBar *menuBar = new wxMenuBar();
     menuBar->Append(fileMenu, _T("&File"));
diff -ur ../wxWidgets/samples/text/text.cpp ./samples/text/text.cpp
--- ../wxWidgets/samples/text/text.cpp	2005-06-02 09:53:15.000000000 -0700
+++ ./samples/text/text.cpp	2005-09-03 21:08:53.000000000 -0700
@@ -786,6 +786,10 @@
 {
     switch ( event.GetKeyCode() )
     {
+		case '1': wxLogMessage(_T("%u"), ScrollLines(1)); return;
+		case '2': wxLogMessage(_T("%u"), ScrollLines(-1)); return;
+		case '3': wxLogMessage(_T("%u"), ScrollPages(1)); return;
+		case '4': wxLogMessage(_T("%u"), ScrollPages(-1)); return;
         case WXK_F1:
             // show current position and text length
             {

 	  	 
