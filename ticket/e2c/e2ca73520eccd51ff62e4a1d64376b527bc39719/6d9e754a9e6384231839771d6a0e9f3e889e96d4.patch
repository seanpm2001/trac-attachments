Index: wincmn.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/common/wincmn.cpp,v
retrieving revision 1.113
diff -b -u -2 -r1.113 wincmn.cpp
--- wincmn.cpp	20 Apr 2002 13:51:28 -0000	1.113
+++ wincmn.cpp	23 May 2002 19:44:49 -0000
@@ -871,5 +871,5 @@
 
 // ----------------------------------------------------------------------------
-// find window by id or name
+// find child window by id or name
 // ----------------------------------------------------------------------------
 
@@ -906,4 +906,169 @@
 }
 
+// ----------------------------------------------------------------------------
+// find *any* window by id or name or label
+// ----------------------------------------------------------------------------
+
+/*
+ * If parent is non-NULL, look through children for a label or title
+ * matching the specified string. If NULL, look through all top-level windows.
+ *
+ */
+
+/* static */ wxWindow *
+wxWindowBase::FindWindowByLabel(const wxString& title, const wxWindow * const parent)
+{
+    if (parent)
+    { // just check parent and all its children
+        return FindWindowByLabelR(title, parent);
+    }
+    else
+    { // start at very top of wx's windows
+        for ( wxWindowList::Node * node = wxTopLevelWindows.GetFirst();
+              node;
+              node = node->GetNext() )
+        { // recursively check each window & its children
+            wxWindow *win = node->GetData();
+            wxWindow *retwin = FindWindowByLabelR(title, win);
+            if (retwin)
+                return retwin;
+        }
+    }
+
+    return NULL;
+}
+
+// Recursive
+
+/* static */ wxWindow *
+wxWindowBase::FindWindowByLabelR(const wxString& title, const wxWindow * const parent)
+{
+    if ( parent )
+    { // see if this is the one we're looking for
+        if ( parent->GetLabel() == title)
+            return (wxWindow*)parent;
+
+        // It wasn't, so check all its children
+        for ( wxWindowList::Node * node = parent->GetChildren().GetFirst();
+              node;
+              node = node->GetNext() )
+        { // recursively check each child
+            wxWindow *win = (wxWindow *)node->GetData();
+            wxWindow *retwin = FindWindowByLabelR(title, win);
+            if (retwin)
+                return retwin;
+        }
+    }
+
+    return NULL;                // Not found
+}
+
+/*
+ * If parent is non-NULL, look through children for a name
+ * matching the specified string. If NULL, look through all top-level windows.
+ *
+ */
+
+/* static */ wxWindow *
+wxWindowBase::FindWindowByName (const wxString& title, const wxWindow * const parent)
+{
+    if (parent)
+    { // just check parent and all its children
+        return FindWindowByNameR(title, parent);
+    }
+    else
+    { // start at very top of wx's windows
+        for ( wxWindowList::Node * node = wxTopLevelWindows.GetFirst();
+              node;
+              node = node->GetNext() )
+        { // recursively check each window & its children
+            wxWindow *win = node->GetData();
+            wxWindow *retwin = FindWindowByNameR(title, win);
+            if (retwin)
+                return retwin;
+        }
+    }
+
+    return NULL;
+}
+
+
+// Recursive
+/* static */ wxWindow *
+wxWindowBase::FindWindowByNameR(const wxString& title, const wxWindow * const parent)
+{
+    if ( parent )
+    { // see if this is the one we're looking for
+        if ( parent->GetName() == title)
+            return (wxWindow*)parent;
+
+        // It wasn't, so check all its children
+        for ( wxWindowList::Node * node = parent->GetChildren().GetFirst();
+              node;
+              node = node->GetNext() )
+        { // recursively check each child
+            wxWindow *win = (wxWindow *)node->GetData();
+            wxWindow *retwin = FindWindowByNameR (title, win);
+            if (retwin)
+                return retwin;
+        }
+    }
+
+    return NULL;                // Not found
+}
+
+/*
+ * If parent is non-NULL, look through children for a Id
+ * matching the specified Id. If NULL, look through all top-level windows.
+ *
+ */
+
+/* static */ wxWindow *
+wxWindowBase::FindWindowById( long id, const wxWindow* const parent )
+{
+    if (parent)
+    { // just check parent and all its children
+        return FindWindowByIdR(id, parent);
+    }
+    else
+    { // start at very top of wx's windows
+        for ( wxWindowList::Node * node = wxTopLevelWindows.GetFirst();
+              node;
+              node = node->GetNext() )
+        { // recursively check each window & its children
+            wxWindow *win = node->GetData();
+            wxWindow *retwin = FindWindowByIdR(id, win);
+            if (retwin)
+                return retwin;
+        }
+    }
+
+    return NULL;
+}
+
+
+// Recursive
+/* static */ wxWindow *
+wxWindowBase::FindWindowByIdR(long id, const wxWindow * const parent)
+{
+    if ( parent )
+    { // see if this is the one we're looking for
+        if ( parent->GetId() == id)
+            return (wxWindow*)parent;
+
+        // It wasn't, so check all its children
+        for ( wxWindowList::Node * node = parent->GetChildren().GetFirst();
+              node;
+              node = node->GetNext() )
+        { // recursively check each child
+            wxWindow *win = (wxWindow *)node->GetData();
+            wxWindow *retwin = FindWindowByIdR(id, win);
+            if (retwin)
+                return retwin;
+        }
+    }
+
+    return NULL;                // Not found
+}
 // ----------------------------------------------------------------------------
 // dialog oriented functions
Index: window.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/window.h,v
retrieving revision 1.89
diff -b -u -2 -r1.89 window.h
--- window.h	11 May 2002 22:31:04 -0000	1.89
+++ window.h	23 May 2002 19:45:30 -0000
@@ -429,4 +429,9 @@
     wxWindow *FindWindow( const wxString& name );
 
+    // Find a window among any window
+    static wxWindow* FindWindowById( long id, const wxWindow* const parent=0 );
+    static wxWindow* FindWindowByName( const wxString& name, const wxWindow* const parent=0 );
+    static wxWindow* FindWindowByLabel( const wxString& label, const wxWindow* const parent=0 );
+    
         // implementation mostly
     virtual void AddChild( wxWindowBase *child );
@@ -1018,4 +1023,9 @@
 
 private:
+
+    // Helper (recursive) functions for the FindWindowBy trio
+    static wxWindow* FindWindowByIdR( long id, const wxWindow* const parent=0 );
+    static wxWindow* FindWindowByNameR( const wxString& name, const wxWindow* const parent=0 );
+    static wxWindow* FindWindowByLabelR( const wxString& label, const wxWindow* const parent=0 );
 
     // contains the last id generated by NewControlId

 	  	 
