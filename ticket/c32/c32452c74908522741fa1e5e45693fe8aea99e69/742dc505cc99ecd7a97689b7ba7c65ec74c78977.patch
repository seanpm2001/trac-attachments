Index: src/stc/ScintillaWX.cpp
===================================================================
--- src/stc/ScintillaWX.cpp	(revision 76435)
+++ src/stc/ScintillaWX.cpp	(working copy)
@@ -270,6 +270,27 @@
     stc->SetDropTarget(dropTarget);
 #endif // wxUSE_DRAG_AND_DROP
     vs.extraFontFlag = true;   // UseAntiAliasing
+
+
+    //Configure default key mappings for scintilla editor
+#if __WXMAC__
+    kmap.AssignCmdKey(SCK_LEFT, SCI_META, SCI_VCHOME);
+    kmap.AssignCmdKey(SCK_RIGHT, SCI_META, SCI_LINEEND);
+    kmap.AssignCmdKey(SCK_LEFT, SCI_CTRL, SCI_WORDLEFT);
+    kmap.AssignCmdKey(SCK_RIGHT, SCI_CTRL, SCI_WORDRIGHT);    
+    kmap.AssignCmdKey(SCK_LEFT, SCI_ALT, SCI_WORDLEFT);
+    kmap.AssignCmdKey(SCK_RIGHT, SCI_ALT, SCI_WORDRIGHT);   
+    kmap.AssignCmdKey(SCK_LEFT, SCI_ALT | SCI_SHIFT, SCI_WORDLEFTEXTEND);
+    kmap.AssignCmdKey(SCK_RIGHT, SCI_ALT | SCI_SHIFT, SCI_WORDRIGHTEXTEND);       
+    kmap.AssignCmdKey(SCK_LEFT, SCI_META | SCI_SHIFT, SCI_VCHOMEEXTEND);   
+    kmap.AssignCmdKey(SCK_RIGHT, SCI_META | SCI_SHIFT, SCI_LINEENDEXTEND);   
+    kmap.AssignCmdKey(SCK_UP, SCI_META | SCI_SHIFT, SCI_DOCUMENTSTARTEXTEND);   
+    kmap.AssignCmdKey(SCK_DOWN, SCI_META | SCI_SHIFT, SCI_DOCUMENTENDEXTEND);         
+    kmap.AssignCmdKey(SCK_UP, SCI_META, SCI_DOCUMENTSTART);   
+    kmap.AssignCmdKey(SCK_DOWN, SCI_META, SCI_DOCUMENTEND);         
+#endif
+
+
 }
 
 
@@ -976,6 +997,7 @@
 
     bool shift = evt.ShiftDown(),
          ctrl  = evt.ControlDown(),
+         raw_ctrl = evt.RawControlDown(),
          alt   = evt.AltDown();
 
     if (ctrl && key >= 1 && key <= 26 && key != WXK_BACK)
@@ -1033,9 +1055,14 @@
             break;
         }
     }
-#endif
 
+    //cocoa:window.mm wxWidgetCocoaImpl::SetupKeyEvent maps command key to ctrl and ctrl to 
+    //  raw_ctrl. KeyDown does not support meta so we use the WithModifiers version to allow 
+    //  passing the meta key state and setting up the correct set of keyboard shortcuts
+    int rv = KeyDownWithModifiers(key, ModifierFlags(shift, raw_ctrl, alt, ctrl), consumed);
+#else
     int rv = KeyDown(key, shift, ctrl, alt, consumed);
+#endif
 
     if (key)
         return rv;
