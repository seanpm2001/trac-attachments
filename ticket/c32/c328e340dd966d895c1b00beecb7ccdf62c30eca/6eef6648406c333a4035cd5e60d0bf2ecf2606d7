diff -Nbur --exclude-from=diffexcludes wxCurrent/include/wx/font.h wxMain/include/wx/font.h
--- wxCurrent/include/wx/font.h	Sat Jul 15 12:49:56 2000
+++ wxMain/include/wx/font.h	Mon Nov 27 18:34:40 2000
@@ -67,6 +67,30 @@
     wxFONTWEIGHT_MAX
 };
 
+struct WXDLLEXPORT wxNativeFontInfo
+{
+#if defined(__WXGTK__)
+    wxString	  xFontName;
+#else
+    //
+    //  This is a generic implementation that should work on all ports
+    //  without specific support by the port.
+    //
+    int           pointSize;
+    int           family;
+    int           style;
+    int           weight;
+    bool          underlined;
+    wxString      faceName;
+    wxFontEncoding encoding;
+#endif
+
+    bool FromString(const wxString& s);
+    wxString ToString() const;
+};
+
+WXDLLEXPORT_DATA(extern wxNativeFontInfo)       wxNullNativeFontInfo;
+
 // ----------------------------------------------------------------------------
 // wxFontBase represents a font object
 // ----------------------------------------------------------------------------
@@ -85,6 +109,7 @@
         bool underlined = FALSE,    // not underlined by default
         const wxString& face = wxEmptyString,              // facename
         wxFontEncoding encoding = wxFONTENCODING_DEFAULT); // ISO8859-X, ...
+    static wxFont *New(const wxNativeFontInfo& info);
 
     // was the font successfully created?
     bool Ok() const { return m_refData != NULL; }
@@ -101,6 +126,7 @@
     virtual bool GetUnderlined() const = 0;
     virtual wxString GetFaceName() const = 0;
     virtual wxFontEncoding GetEncoding() const = 0;
+    virtual wxNativeFontInfo GetNativeFontInfo() const;
 
     // change the font characteristics
     virtual void SetPointSize( int pointSize ) = 0;
@@ -110,6 +136,7 @@
     virtual void SetFaceName( const wxString& faceName ) = 0;
     virtual void SetUnderlined( bool underlined ) = 0;
     virtual void SetEncoding(wxFontEncoding encoding) = 0;
+    virtual void SetNativeFontInfo(const wxNativeFontInfo& info);
 
     // translate the fonts into human-readable string (i.e. GetStyleString()
     // will return "wxITALIC" for an italic font, ...)
diff -Nbur --exclude-from=diffexcludes wxCurrent/include/wx/gtk/font.h wxMain/include/wx/gtk/font.h
--- wxCurrent/include/wx/gtk/font.h	Fri Nov  5 11:03:13 1999
+++ wxMain/include/wx/gtk/font.h	Mon Nov 27 18:36:14 2000
@@ -36,7 +36,8 @@
     // ctors and such
     wxFont() { Init(); }
     wxFont(const wxFont& font) { Init(); Ref(font); }
-    wxFont(const wxString& fontname, const wxFontData& fontdata);
+    wxFont(const wxString& fontname, const wxFontData& fontdata) { Create(fontname, fontdata); }
+    wxFont(const wxNativeFontInfo& info);
 
     // assignment
     wxFont& operator=(const wxFont& font);
@@ -60,7 +61,10 @@
                 int weight,
                 bool underlined = FALSE,
                 const wxString& face = wxEmptyString,
-                wxFontEncoding encoding = wxFONTENCODING_DEFAULT);
+                wxFontEncoding encoding = wxFONTENCODING_DEFAULT,
+                const wxNativeFontInfo& info = wxNullNativeFontInfo);
+                
+    bool Create(const wxString& fontname, const wxFontData& fontdata);
 
     ~wxFont();
 
@@ -72,6 +76,7 @@
     virtual wxString GetFaceName() const;
     virtual bool GetUnderlined() const;
     virtual wxFontEncoding GetEncoding() const;
+    virtual wxNativeFontInfo GetNativeFontInfo() const;
 
     virtual void SetPointSize( int pointSize );
     virtual void SetFamily( int family );
@@ -80,6 +85,7 @@
     virtual void SetFaceName( const wxString& faceName );
     virtual void SetUnderlined( bool underlined );
     virtual void SetEncoding(wxFontEncoding encoding);
+    virtual void SetNativeFontInfo( const wxNativeFontInfo& info );
 
     // implementation from now on
     void Unshare();
diff -Nbur --exclude-from=diffexcludes wxCurrent/include/wx/mac/font.h wxMain/include/wx/mac/font.h
--- wxCurrent/include/wx/mac/font.h	Wed Aug  9 04:02:59 2000
+++ wxMain/include/wx/mac/font.h	Mon Nov 27 14:21:19 2000
@@ -100,6 +100,14 @@
         (void)Create(size, family, style, weight, underlined, face, encoding);
     }
 
+    wxFont(const wxNativeFontInfo& info)
+    {
+        Init();
+
+        (void)Create(info.pointSize, info.family, info.style, info.weight,
+                     info.underlined, info.faceName, info.encoding);
+    }
+
     bool Create(int size,
                 int family,
                 int style,
diff -Nbur --exclude-from=diffexcludes wxCurrent/include/wx/motif/font.h wxMain/include/wx/motif/font.h
--- wxCurrent/include/wx/motif/font.h	Fri Oct  1 07:59:47 1999
+++ wxMain/include/wx/motif/font.h	Mon Nov 27 14:22:12 2000
@@ -37,6 +37,14 @@
         (void)Create(size, family, style, weight, underlined, face, encoding);
     }
 
+    wxFont(const wxNativeFontInfo& info)
+    {
+        Init();
+
+        (void)Create(info.pointSize, info.family, info.style, info.weight,
+                     info.underlined, info.faceName, info.encoding);
+    }
+
     bool Create(int size,
                 int family,
                 int style,
diff -Nbur --exclude-from=diffexcludes wxCurrent/include/wx/msw/font.h wxMain/include/wx/msw/font.h
--- wxCurrent/include/wx/msw/font.h	Sat Jul 15 12:50:00 2000
+++ wxMain/include/wx/msw/font.h	Mon Nov 27 14:20:26 2000
@@ -40,6 +40,14 @@
         (void)Create(size, family, style, weight, underlined, face, encoding);
     }
 
+    wxFont(const wxNativeFontInfo& info)
+    {
+        Init();
+
+        (void)Create(info.pointSize, info.family, info.style, info.weight,
+                     info.underlined, info.faceName, info.encoding);
+    }
+
     bool Create(int size,
                 int family,
                 int style,
diff -Nbur --exclude-from=diffexcludes wxCurrent/include/wx/os2/FONT.H wxMain/include/wx/os2/FONT.H
--- wxCurrent/include/wx/os2/FONT.H	Wed Oct  6 21:44:20 1999
+++ wxMain/include/wx/os2/FONT.H	Mon Nov 27 14:21:42 2000
@@ -40,6 +40,14 @@
         (void)Create(size, family, style, weight, underlined, face, encoding);
     }
 
+    wxFont(const wxNativeFontInfo& info)
+    {
+        Init();
+
+        (void)Create(info.pointSize, info.family, info.style, info.weight,
+                     info.underlined, info.faceName, info.encoding);
+    }
+
     bool Create(int size,
                 int family,
                 int style,
diff -Nbur --exclude-from=diffexcludes wxCurrent/include/wx/unix/fontutil.h wxMain/include/wx/unix/fontutil.h
--- wxCurrent/include/wx/unix/fontutil.h	Mon Nov  8 07:59:33 1999
+++ wxMain/include/wx/unix/fontutil.h	Mon Nov 27 11:44:10 2000
@@ -27,6 +27,7 @@
                                            int weight,
                                            bool underlined,
                                            const wxString &facename,
-                                           wxFontEncoding encoding);
+                                           wxFontEncoding encoding,
+                                           wxString* xFontName = 0);
 
 #endif // _WX_UNIX_FONTUTIL_H_
diff -Nbur --exclude-from=diffexcludes wxCurrent/samples/font/font.cpp wxMain/samples/font/font.cpp
--- wxCurrent/samples/font/font.cpp	Sat Jul 15 12:50:10 2000
+++ wxMain/samples/font/font.cpp	Tue Nov 28 11:42:12 2000
@@ -96,6 +96,8 @@
         { DoEnumerateFamilies(TRUE); }
     void OnEnumerateEncodings(wxCommandEvent& event);
 
+    void OnCheckNativeToFromString(wxCommandEvent& event);
+
     void OnSize(wxSizeEvent& event);
 
 protected:
@@ -136,7 +138,8 @@
     Font_EnumFamilies,
     Font_EnumFixedFamilies,
     Font_EnumEncodings,
-    Font_Max
+    Font_Max,
+    Font_CheckNativeToFromString
 };
 
 // ----------------------------------------------------------------------------
@@ -157,6 +160,7 @@
     EVT_MENU(Font_EnumFamilies, MyFrame::OnEnumerateFamilies)
     EVT_MENU(Font_EnumFixedFamilies, MyFrame::OnEnumerateFixedFamilies)
     EVT_MENU(Font_EnumEncodings, MyFrame::OnEnumerateEncodings)
+    EVT_MENU(Font_CheckNativeToFromString, MyFrame::OnCheckNativeToFromString)
 
     EVT_SIZE(MyFrame::OnSize)
 END_EVENT_TABLE()
@@ -228,6 +232,9 @@
     menuFont->Append(Font_EnumFamiliesForEncoding,
                      "Find font for en&coding...\tCtrl-C",
                      "Find font families for given encoding");
+    menuFont->AppendSeparator();
+    menuFont->Append(Font_CheckNativeToFromString,
+                     "Check Native Font Info To/From String");
 
     // now append the freshly created menu to the menu bar...
     wxMenuBar *menuBar = new wxMenuBar;
@@ -382,7 +389,7 @@
         wxFONTENCODING_CP1252,
     };
 
-    static const char *encodingNames[] =
+    static const wxString encodingNames[] =
     {
         "West European (Latin 1)",
         "Central European (Latin 2)",
@@ -397,7 +404,7 @@
 
     int n = wxGetSingleChoiceIndex("Choose an encoding", "Font demo",
                                    WXSIZEOF(encodingNames),
-                                   (char **)encodingNames,
+                                   encodingNames,
                                    this);
 
     if ( n != -1 )
@@ -406,6 +413,27 @@
     }
 }
 
+void MyFrame::OnCheckNativeToFromString(wxCommandEvent& WXUNUSED(event))
+{
+    wxString fontInfo = m_canvas->GetTextFont().GetNativeFontInfo().ToString();
+  
+    if(fontInfo.IsEmpty())
+        wxMessageBox("Native font info string is empty!", "Font demo",
+                     wxOK);
+    else
+    {
+        wxNativeFontInfo info;
+        info.FromString(fontInfo);
+        wxFont font(info);
+        if(fontInfo == font.GetNativeFontInfo().ToString())
+            wxMessageBox("wxNativeFontInfo ToString()/FromString() works!",
+                         "Font demo", wxOK);
+        else
+            wxMessageBox("wxNativeFontInfo ToString()/FromString() doesn't work!",
+                         "Font demo", wxOK);
+     }
+}
+
 void MyFrame::DoResizeFont(int diff)
 {
     wxFont fontOld = m_canvas->GetTextFont();
@@ -650,6 +678,13 @@
 
     dc.DrawText(fontInfo, 5, 5);
 
+    if(m_font.Ok())
+    {
+      dc.SetFont(wxFont(m_font.GetNativeFontInfo()));
+      fontInfo.Printf("Native font info: %s", m_font.GetNativeFontInfo().ToString().GetData());
+      dc.DrawText(fontInfo, 5, 5 + dc.GetCharHeight());
+    }
+    
     // prepare to draw the font
     dc.SetFont(m_font);
     dc.SetTextForeground(m_colour);
diff -Nbur --exclude-from=diffexcludes wxCurrent/src/common/fontcmn.cpp wxMain/src/common/fontcmn.cpp
--- wxCurrent/src/common/fontcmn.cpp	Fri Nov  5 11:03:15 1999
+++ wxMain/src/common/fontcmn.cpp	Mon Nov 27 20:53:01 2000
@@ -32,6 +32,8 @@
     #include "wx/font.h"
 #endif // WX_PRECOMP
 
+#include "wx/tokenzr.h"
+
 // ============================================================================
 // implementation
 // ============================================================================
@@ -54,6 +56,44 @@
     return new wxFont(size, family, style, weight, underlined, face, encoding);
 }
 
+/* static */
+wxFont *wxFontBase::New(const wxNativeFontInfo& info)
+{
+    return new wxFont(info);
+}
+
+wxNativeFontInfo wxFontBase::GetNativeFontInfo() const
+{
+#if !defined(__WXGTK__)
+    wxNativeFontInfo fontInfo;
+
+    fontInfo.pointSize = GetPointSize();
+    fontInfo.family = GetFamily();
+    fontInfo.style = GetStyle();
+    fontInfo.weight = GetWeight();
+    fontInfo.underlined = GetUnderlined();
+    fontInfo.faceName = GetFaceName();
+    fontInfo.encoding = GetEncoding();
+
+    return fontInfo;
+#else
+    return wxNullNativeFontInfo;    
+#endif  
+}
+
+void wxFontBase::SetNativeFontInfo(const wxNativeFontInfo& info)
+{
+#if !defined(__WXGTK__)
+    SetPointSize(info.pointSize);
+    SetFamily(info.family);
+    SetStyle(info.style);
+    SetWeight(info.weight);
+    SetUnderlined(info.underlined);
+    SetFaceName(info.faceName);
+    SetEncoding(info.encoding);
+#endif  
+}
+
 wxFont& wxFont::operator=(const wxFont& font)
 {
     if ( this != &font )
@@ -114,4 +154,76 @@
         default:         return wxT("wxDEFAULT");
     }
 }
+
+#if !defined(__WXGTK__)
+
+// ----------------------------------------------------------------------------
+// wxNativeFontInfo
+// ----------------------------------------------------------------------------
+
+// These are the generic forms of FromString()/ToString.
+//
+// convert to/from the string representation: format is
+//      pointsize;family;style;weight;underlined;facename;encoding
+
+bool wxNativeFontInfo::FromString(const wxString& s)
+{
+    long l;
+
+    wxStringTokenizer tokenizer(s, _T(";"));
+
+    wxString token = tokenizer.GetNextToken();
+    if ( !token.ToLong(&l) )
+        return FALSE;
+    pointSize = (int)l;
+
+    token = tokenizer.GetNextToken();
+    if ( !token.ToLong(&l) )
+        return FALSE;
+    family = (int)l;
+
+    token = tokenizer.GetNextToken();
+    if ( !token.ToLong(&l) )
+        return FALSE;
+    style = (int)l;
+
+    token = tokenizer.GetNextToken();
+    if ( !token.ToLong(&l) )
+        return FALSE;
+    weight = (int)l;
+
+    token = tokenizer.GetNextToken();
+    if ( !token.ToLong(&l) )
+        return FALSE;
+    underlined = (int)l;
+
+    faceName = tokenizer.GetNextToken();
+    if( !faceName )
+        return FALSE;
+
+    token = tokenizer.GetNextToken();
+    if ( !token.ToLong(&l) )
+        return FALSE;
+    encoding = (wxFontEncoding)l;
+
+    return TRUE;
+}
+
+wxString wxNativeFontInfo::ToString() const
+{
+    wxString s;
+
+    s.Printf("%d;%d;%d;%d;%d;%s;%d",
+             pointSize,
+             family,
+             style,
+             weight,
+             underlined,
+             faceName.GetData(),
+             (int)encoding);
+             
+    return s;
+}
+
+#endif
 
diff -Nbur --exclude-from=diffexcludes wxCurrent/src/gtk/data.cpp wxMain/src/gtk/data.cpp
--- wxCurrent/src/gtk/data.cpp	Sat Jul 15 12:50:29 2000
+++ wxMain/src/gtk/data.cpp	Mon Nov 27 18:37:52 2000
@@ -126,6 +126,7 @@
 wxFont     wxNullFont;
 wxColour   wxNullColour;
 wxPalette  wxNullPalette;
+wxNativeFontInfo wxNullNativeFontInfo;
 
 /* Default window names */
 const wxChar *wxControlNameStr = wxT("control");
diff -Nbur --exclude-from=diffexcludes wxCurrent/src/gtk/font.cpp wxMain/src/gtk/font.cpp
--- wxCurrent/src/gtk/font.cpp	Sat Jul 15 12:50:29 2000
+++ wxMain/src/gtk/font.cpp	Tue Nov 28 12:44:22 2000
@@ -47,7 +47,8 @@
                   int weight = wxDEFAULT,
                   bool underlined = FALSE,
                   const wxString& faceName = wxEmptyString,
-                  wxFontEncoding encoding = wxFONTENCODING_DEFAULT);
+                  wxFontEncoding encoding = wxFONTENCODING_DEFAULT,
+                  const wxNativeFontInfo& info = wxNullNativeFontInfo);
     wxFontRefData( const wxFontRefData& data );
     virtual ~wxFontRefData();
 
@@ -59,7 +60,8 @@
               int weight,
               bool underlined,
               const wxString& faceName,
-              wxFontEncoding encoding);
+              wxFontEncoding encoding,
+              const wxNativeFontInfo& info);
 
 private:
     wxList          m_scaled_xfonts;
@@ -70,6 +72,7 @@
     bool            m_underlined;
     wxString        m_faceName;
     wxFontEncoding  m_encoding;
+    wxNativeFontInfo m_nativeFontInfo;
 
     friend class wxFont;
 };
@@ -88,7 +91,8 @@
                          int weight,
                          bool underlined,
                          const wxString& faceName,
-                         wxFontEncoding encoding)
+                         wxFontEncoding encoding,
+                         const wxNativeFontInfo& info = wxNullNativeFontInfo)
 {
     if (family == wxDEFAULT)
         m_family = wxSWISS;
@@ -114,21 +118,24 @@
 
     m_underlined = underlined;
     m_encoding = encoding;
+    m_nativeFontInfo = info;
 }
 
 wxFontRefData::wxFontRefData( const wxFontRefData& data )
     : m_scaled_xfonts(wxKEY_INTEGER)
 {
     Init(data.m_pointSize, data.m_family, data.m_style, data.m_weight,
-        data.m_underlined, data.m_faceName, data.m_encoding);
+        data.m_underlined, data.m_faceName, data.m_encoding,
+        data.m_nativeFontInfo );
 }
 
 wxFontRefData::wxFontRefData(int size, int family, int style,
-    int weight, bool underlined, const wxString& faceName, wxFontEncoding encoding )
+    int weight, bool underlined, const wxString& faceName, wxFontEncoding encoding,
+    const wxNativeFontInfo& info = wxNullNativeFontInfo)
     : m_scaled_xfonts(wxKEY_INTEGER)
 {
     Init(size, family, style, weight,
-        underlined, faceName, encoding);
+        underlined, faceName, encoding, info);
 }
 
 wxFontRefData::~wxFontRefData()
@@ -144,6 +151,21 @@
 }
 
 // ----------------------------------------------------------------------------
+// wxNativeFontInfo
+// ----------------------------------------------------------------------------
+
+bool wxNativeFontInfo::FromString(const wxString& s)
+{
+    xFontName = s; 
+    return TRUE;
+}
+
+wxString wxNativeFontInfo::ToString() const
+{
+    return xFontName;
+}
+
+// ----------------------------------------------------------------------------
 // wxFont
 // ----------------------------------------------------------------------------
 
@@ -155,14 +177,40 @@
         wxTheFontList->Append( this );
 }
 
-wxFont::wxFont( const wxString& fontname, const wxFontData& fontdata )
+wxFont::wxFont(const wxNativeFontInfo& info)
+{
+    Create(info.xFontName, wxFontData());
+}
+
+bool wxFont::Create( int pointSize,
+                     int family,
+                     int style,
+                     int weight,
+                     bool underlined,
+                     const wxString& face,
+                     wxFontEncoding encoding,
+                     const wxNativeFontInfo& info )
+{
+    m_refData = new wxFontRefData(pointSize, family, style, weight,
+                                  underlined, face, encoding, info);
+
+    return TRUE;
+}
+
+bool wxFont::Create(const wxString& fontname, const wxFontData& fontdata)
 {
     Init();
 
-    wxCHECK_RET( !!fontname, _T("invalid font spec") );
+    if(!fontname)
+    {
+         *this = wxSystemSettings::GetSystemFont( wxSYS_DEFAULT_GUI_FONT);        
+         return TRUE;
+    }
 
     m_refData = new wxFontRefData();
 
+    M_FONTDATA->m_nativeFontInfo.xFontName = fontname;  // X font name
+    
     wxString tmp;
 
     wxStringTokenizer tn( fontname, wxT("-") );
@@ -170,6 +218,7 @@
     tn.GetNextToken();                           // skip initial empty token
     tn.GetNextToken();                           // foundry
 
+    
     M_FONTDATA->m_faceName = tn.GetNextToken();  // family
 
     tmp = tn.GetNextToken().MakeUpper();         // weight
@@ -247,20 +296,9 @@
             M_FONTDATA->m_encoding = wxFONTENCODING_KOI8;
         }
         //else: unknown encoding - may be give a warning here?
+        else
+            return FALSE;
     }
-}
-
-bool wxFont::Create( int pointSize,
-                     int family,
-                     int style,
-                     int weight,
-                     bool underlined,
-                     const wxString& face,
-                     wxFontEncoding encoding )
-{
-    m_refData = new wxFontRefData(pointSize, family, style, weight,
-                                  underlined, face, encoding);
-
     return TRUE;
 }
 
@@ -338,6 +376,16 @@
     return M_FONTDATA->m_encoding;
 }
 
+wxNativeFontInfo wxFont::GetNativeFontInfo() const
+{
+    wxCHECK_MSG( Ok(), wxNullNativeFontInfo, wxT("invalid font") );
+
+    if(M_FONTDATA->m_nativeFontInfo.xFontName.IsEmpty())
+        GetInternalFont();
+    return M_FONTDATA->m_nativeFontInfo;
+}
+
+
 // ----------------------------------------------------------------------------
 // change font attributes
 // ----------------------------------------------------------------------------
@@ -347,6 +395,7 @@
     Unshare();
 
     M_FONTDATA->m_pointSize = pointSize;
+    M_FONTDATA->m_nativeFontInfo.xFontName.Clear();            // invalid now
 }
 
 void wxFont::SetFamily(int family)
@@ -354,6 +403,7 @@
     Unshare();
 
     M_FONTDATA->m_family = family;
+    M_FONTDATA->m_nativeFontInfo.xFontName.Clear();            // invalid now
 }
 
 void wxFont::SetStyle(int style)
@@ -361,6 +411,7 @@
     Unshare();
 
     M_FONTDATA->m_style = style;
+    M_FONTDATA->m_nativeFontInfo.xFontName.Clear();            // invalid now
 }
 
 void wxFont::SetWeight(int weight)
@@ -368,6 +419,7 @@
     Unshare();
 
     M_FONTDATA->m_weight = weight;
+    M_FONTDATA->m_nativeFontInfo.xFontName.Clear();            // invalid now
 }
 
 void wxFont::SetFaceName(const wxString& faceName)
@@ -375,6 +427,7 @@
     Unshare();
 
     M_FONTDATA->m_faceName = faceName;
+    M_FONTDATA->m_nativeFontInfo.xFontName.Clear();            // invalid now
 }
 
 void wxFont::SetUnderlined(bool underlined)
@@ -389,6 +442,14 @@
     Unshare();
 
     M_FONTDATA->m_encoding = encoding;
+    M_FONTDATA->m_nativeFontInfo.xFontName.Clear();            // invalid now
+}
+
+void wxFont::SetNativeFontInfo(const wxNativeFontInfo& info)
+{
+    Unshare();
+
+    M_FONTDATA->m_nativeFontInfo = info;
 }
 
 // ----------------------------------------------------------------------------
@@ -450,7 +511,8 @@
                                            M_FONTDATA->m_weight,
                                            M_FONTDATA->m_underlined,
                                            M_FONTDATA->m_faceName,
-                                           M_FONTDATA->m_encoding );
+                                           M_FONTDATA->m_encoding,
+                                           &M_FONTDATA->m_nativeFontInfo.xFontName );
         }
 
         M_FONTDATA->m_scaled_xfonts.Append( int_scale, (wxObject*)font );
diff -Nbur --exclude-from=diffexcludes wxCurrent/src/gtk/fontdlg.cpp wxMain/src/gtk/fontdlg.cpp
--- wxCurrent/src/gtk/fontdlg.cpp	Thu Aug 10 06:24:55 2000
+++ wxMain/src/gtk/fontdlg.cpp	Mon Nov 27 11:44:10 2000
@@ -174,6 +174,15 @@
 
     gtk_signal_connect( GTK_OBJECT(m_widget), "delete_event",
         GTK_SIGNAL_FUNC(gtk_fontdialog_delete_callback), (gpointer)this );
+
+    if(m_fontData.GetInitialFont().Ok())
+    {
+        wxNativeFontInfo info = m_fontData.GetInitialFont().GetNativeFontInfo();
+        
+        if(info.xFontName.IsEmpty())
+            m_fontData.GetInitialFont().GetInternalFont();
+        gtk_font_selection_dialog_set_font_name(sel, wxConvCurrent->cWX2MB(m_fontData.GetInitialFont().GetNativeFontInfo().xFontName.GetData()));
+    }
 }
 
 wxFontDialog::~wxFontDialog()
diff -Nbur --exclude-from=diffexcludes wxCurrent/src/mac/data.cpp wxMain/src/mac/data.cpp
--- wxCurrent/src/mac/data.cpp	Wed Aug  9 03:10:14 2000
+++ wxMain/src/mac/data.cpp	Mon Nov 27 18:38:20 2000
@@ -90,6 +90,7 @@
 wxPalette wxNullPalette;
 wxFont   wxNullFont;
 wxColour wxNullColour;
+wxNativeFontInfo wxNullNativeFontInfo;
 
 // Default window names
 const wxChar *wxButtonNameStr = wxT("button");
diff -Nbur --exclude-from=diffexcludes wxCurrent/src/motif/data.cpp wxMain/src/motif/data.cpp
--- wxCurrent/src/motif/data.cpp	Tue Dec 14 15:53:06 1999
+++ wxMain/src/motif/data.cpp	Mon Nov 27 18:38:57 2000
@@ -87,6 +87,7 @@
 wxPalette wxNullPalette;
 wxFont   wxNullFont;
 wxColour wxNullColour;
+wxNativeFontInfo wxNullNativeFontInfo;
 
 // Default window names
 const char *wxButtonNameStr = "button";
diff -Nbur --exclude-from=diffexcludes wxCurrent/src/msw/data.cpp wxMain/src/msw/data.cpp
--- wxCurrent/src/msw/data.cpp	Sat Jul 15 12:50:36 2000
+++ wxMain/src/msw/data.cpp	Mon Nov 27 18:37:32 2000
@@ -96,6 +96,7 @@
 wxPalette wxNullPalette;
 wxFont    wxNullFont;
 wxColour  wxNullColour;
+wxNativeFontInfo wxNullNativeFontInfo;
 
 // Default window names
 const wxChar *wxControlNameStr = wxT("control");
diff -Nbur --exclude-from=diffexcludes wxCurrent/src/os2/DATA.CPP wxMain/src/os2/DATA.CPP
--- wxCurrent/src/os2/DATA.CPP	Sat Jul 15 12:50:38 2000
+++ wxMain/src/os2/DATA.CPP	Mon Nov 27 18:38:39 2000
@@ -96,6 +96,7 @@
 wxPalette wxNullPalette;
 wxFont   wxNullFont;
 wxColour wxNullColour;
+wxNativeFontInfo wxNullNativeFontInfo;
 
 // Default window names
 const wxChar *wxButtonNameStr = wxT("button");
diff -Nbur --exclude-from=diffexcludes wxCurrent/src/unix/fontutil.cpp wxMain/src/unix/fontutil.cpp
--- wxCurrent/src/unix/fontutil.cpp	Wed Oct 11 16:21:32 2000
+++ wxMain/src/unix/fontutil.cpp	Tue Nov 28 11:22:05 2000
@@ -95,7 +95,8 @@
                                     bool underlined,
                                     const wxString& facename,
                                     const wxString& xregistry,
-                                    const wxString& xencoding);
+                                    const wxString& xencoding,
+                                    wxString* xFontName);
 
 // ============================================================================
 // implementation
@@ -240,7 +241,8 @@
                                     int weight,
                                     bool underlined,
                                     const wxString &facename,
-                                    wxFontEncoding encoding)
+                                    wxFontEncoding encoding,
+                                    wxString* xFontName)
 {
     if ( encoding == wxFONTENCODING_DEFAULT )
     {
@@ -274,9 +276,16 @@
     }
     
     // OK, we have the correct xregistry/xencoding in info structure
-    wxNativeFont font = wxLoadQueryFont( pointSize, family, style, weight,
+    wxNativeFont font = 0;
+    
+    if(xFontName && !xFontName->IsEmpty())
+        font = wxLoadFont(*xFontName);
+        
+    if( !font )
+        font = wxLoadQueryFont( pointSize, family, style, weight,
                                          underlined, facename,
-                                         info.xregistry, info.xencoding );
+                                info.xregistry, info.xencoding,
+                                xFontName );
 
     if ( !font )
     {
@@ -290,14 +299,16 @@
         for ( i = pointSize - 10; !font && i >= 10 && i >= min_size; i -= 10 )
         {
             font = wxLoadQueryFont(i, family, style, weight, underlined,
-                                   facename, info.xregistry, info.xencoding);
+                                   facename, info.xregistry, info.xencoding,
+                                   xFontName);
         }
 
         // Search for larger size (approx.)
         for ( i = pointSize + 10; !font && i <= max_size; i += 10 )
         {
             font = wxLoadQueryFont(i, family, style, weight, underlined,
-                                   facename, info.xregistry, info.xencoding);
+                                   facename, info.xregistry, info.xencoding,
+                                   xFontName);
         }
 
         // Try default family
@@ -305,7 +316,8 @@
         {
             font = wxLoadQueryFont(pointSize, wxDEFAULT, style, weight,
                                    underlined, facename,
-                                   info.xregistry, info.xencoding );
+                                   info.xregistry, info.xencoding,
+                                   xFontName );
         }
 
         // Bogus font I
@@ -313,7 +325,8 @@
         {
             font = wxLoadQueryFont(120, wxDEFAULT, wxNORMAL, wxNORMAL,
                                    underlined, facename,
-                                   info.xregistry, info.xencoding);
+                                   info.xregistry, info.xencoding,
+                                   xFontName);
         }
 
         // Bogus font II
@@ -321,7 +334,8 @@
         {
             font = wxLoadQueryFont(120, wxDEFAULT, wxNORMAL, wxNORMAL,
                                    underlined, wxEmptyString,
-                                   info.xregistry, info.xencoding);
+                                   info.xregistry, info.xencoding,
+                                   xFontName);
         }
     }
 
@@ -371,7 +385,8 @@
                                     bool WXUNUSED(underlined),
                                     const wxString& facename,
                                     const wxString& xregistry,
-                                    const wxString& xencoding)
+                                    const wxString& xencoding,
+                                    wxString* xFontName)
 {
     wxString xfamily;
     switch (family)
@@ -544,6 +559,9 @@
     fontSpec.Printf(wxT("-*-%s-%s-%s-normal-*-*-%d-*-*-*-*-%s-%s"),
                     xfamily.c_str(), xweight.c_str(), xstyle.c_str(),
                     pointSize, xregistry.c_str(), xencoding.c_str());
+
+    if(xFontName)
+        *xFontName = fontSpec;
 
     return wxLoadFont(fontSpec);
 }

 	  	 
