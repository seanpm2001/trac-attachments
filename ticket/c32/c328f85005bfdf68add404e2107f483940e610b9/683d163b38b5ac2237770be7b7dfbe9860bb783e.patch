Index: src/mac/carbon/bmpbuttn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/bmpbuttn.cpp,v
retrieving revision 1.41
diff -r1.41 bmpbuttn.cpp
17a18
> #include "wx/image.h"
74a76,125
> 		static const int icon_sizes[] = { 128, 48, 32, 16, 0 };
> 		
> 		int new_width = 0, new_height = 0;
> 		
> 		if ( ( width >= icon_sizes[0] ) || ( height >= icon_sizes[0] ) )
> 		{
> 			//  If the size is bigger than 128x128, we have to crop the image.
> 			wxFAIL_MSG( wxT("This icon is too big and will be cropped.") );
> 			new_width = new_height = 128;
> 		}
> 		else
> 		{
> 			// We will round up the size of the image to one that Apple allows
> 			// and make the image square.
> 			for( size_t i = 0; i < WXSIZEOF( icon_sizes ) - 1; i++ )
> 			{
> 				if ( ( width <= icon_sizes[i] ) && 
> 					 ( width > icon_sizes[i+1] ) && 
> 					 ( icon_sizes[i] >= new_height ) )
> 				{
> 					new_width = icon_sizes[i];
> 					new_height = icon_sizes[i];
> 					break;
> 				}
> 				
> 				if ( ( height <= icon_sizes[i] ) && 
> 					 ( height > icon_sizes[i+1] ) && 
> 					 ( icon_sizes[i] >= new_width ) )
> 				{
> 					new_width = icon_sizes[i];
> 					new_height = icon_sizes[i];
> 					break;
> 				}
> 			}
> 		}
> 
> 		if ( ( new_width != width ) ||
> 			 ( new_height != height ) ||
> 			 ( width != height ) )
> 		{
> 			// Here, we do the actual resizing.  The original icon is centered in the
> 			// new icon.  This could be made smarter, but optimally, the icons we are
> 			// given will already be the correct size.
> 			wxASSERT( ( new_width == new_height ) && ( new_width != 0 ) );
> 			wxImage square_image = bitmap.ConvertToImage();
> 			m_bmpNormal = square_image.Size( wxSize( new_width, new_height ), 
> 							   wxPoint( new_width/2-width/2, new_height/2-height/2 ) );
> 		}
> 		
> 

 	  	 
