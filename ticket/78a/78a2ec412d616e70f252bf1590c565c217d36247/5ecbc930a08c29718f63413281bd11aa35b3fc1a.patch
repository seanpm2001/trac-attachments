Index: include/wx/mac/carbon/dc.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/dc.h,v
retrieving revision 1.18
diff -u -r1.18 dc.h
--- include/wx/mac/carbon/dc.h	2006/05/26 16:11:57	1.18
+++ include/wx/mac/carbon/dc.h	2006/08/24 18:25:19
@@ -67,9 +67,9 @@
 
     virtual void FillPath( const wxGraphicPath *path, const wxColor &fillColor, int fillStyle = wxWINDING_RULE ) = 0;
 
-    virtual void SetPen( const wxPen &pen ) = 0;
+    virtual void SetPen( const wxPen &pen , float alpha = 1.0 ) = 0;
 
-    virtual void SetBrush( const wxBrush &brush ) = 0;
+    virtual void SetBrush( const wxBrush &brush, float alpha = 1.0 ) = 0;
 
     virtual wxGraphicPath * CreatePath() = 0;
 };
Index: include/wx/mac/carbon/private.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/private.h,v
retrieving revision 1.58
diff -u -r1.58 private.h
--- include/wx/mac/carbon/private.h	2006/08/11 04:11:40	1.58
+++ include/wx/mac/carbon/private.h	2006/08/24 18:25:21
@@ -1042,8 +1042,8 @@
     virtual void FillPath( const wxGraphicPath *p , const wxColor &fillColor , int fillStyle = wxWINDING_RULE );
 
     virtual wxGraphicPath* CreatePath();
-    virtual void SetPen( const wxPen &pen ) ;
-    virtual void SetBrush( const wxBrush &brush );
+    virtual void SetPen( const wxPen &pen , float alpha = 1.0 ) ;
+    virtual void SetBrush( const wxBrush &brush , float alpha = 1.0 );
     CGContextRef GetNativeContext();
     void SetNativeContext( CGContextRef cg );
     CGPathDrawingMode GetDrawingMode() const { return m_mode; }
Index: src/mac/carbon/dccg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/dccg.cpp,v
retrieving revision 1.48
diff -u -r1.48 dccg.cpp
--- src/mac/carbon/dccg.cpp	2006/08/11 04:32:56	1.48
+++ src/mac/carbon/dccg.cpp	2006/08/24 18:25:33
@@ -531,7 +531,7 @@
 
 #pragma mark -
 
-void wxMacCGContext::SetPen( const wxPen &pen )
+void wxMacCGContext::SetPen( const wxPen &pen , float alpha )
 {
     m_pen = pen ;
     if ( m_cgContext == NULL )
@@ -553,7 +553,7 @@
         if ( stroke )
         {
             RGBColor col = MAC_WXCOLORREF( pen.GetColour().GetPixel() ) ;
-            CGContextSetRGBStrokeColor( m_cgContext , col.red / 65536.0 , col.green / 65536.0 , col.blue / 65536.0 , 1.0 ) ;
+            CGContextSetRGBStrokeColor( m_cgContext , col.red / 65536.0 , col.green / 65536.0 , col.blue / 65536.0 , alpha ) ;
 
             // TODO: * m_dc->m_scaleX
             CGFloat penWidth = pen.GetWidth();
@@ -679,7 +679,7 @@
                         wxMacCFRefHolder<CGPatternRef> pattern( *( new HatchPattern( pen.GetStyle() , CGContextGetCTM( m_cgContext ) ) ) );
 
                         RGBColor col = MAC_WXCOLORREF( pen.GetColour().GetPixel() ) ;
-                        CGFloat  colorArray[4] = { col.red / 65536.0 , col.green / 65536.0 , col.blue / 65536.0 , 1.0 } ;
+                        CGFloat  colorArray[4] = { col.red / 65536.0 , col.green / 65536.0 , col.blue / 65536.0 , alpha } ;
 
                         CGContextSetStrokePattern( m_cgContext, pattern , colorArray ) ;
                     }
@@ -708,7 +708,7 @@
     }
 }
 
-void wxMacCGContext::SetBrush( const wxBrush &brush )
+void wxMacCGContext::SetBrush( const wxBrush &brush , float alpha )
 {
     m_brush = brush ;
     if ( m_cgContext == NULL )
@@ -732,7 +732,7 @@
             if ( brush.GetStyle() == wxSOLID )
             {
                 RGBColor col = MAC_WXCOLORREF( brush.GetColour().GetPixel() ) ;
-                CGContextSetRGBFillColor( m_cgContext , col.red / 65536.0 , col.green / 65536.0 , col.blue / 65536.0 , 1.0 ) ;
+                CGContextSetRGBFillColor( m_cgContext , col.red / 65536.0 , col.green / 65536.0 , col.blue / 65536.0 , alpha ) ;
             }
             else if ( brush.IsHatch() )
             {
@@ -741,7 +741,7 @@
                 wxMacCFRefHolder<CGPatternRef> pattern( *( new HatchPattern( brush.GetStyle() , CGContextGetCTM( m_cgContext ) ) ) );
 
                 RGBColor col = MAC_WXCOLORREF( brush.GetColour().GetPixel() ) ;
-                CGFloat  colorArray[4] = { col.red / 65536.0 , col.green / 65536.0 , col.blue / 65536.0 , 1.0 } ;
+                CGFloat  colorArray[4] = { col.red / 65536.0 , col.green / 65536.0 , col.blue / 65536.0 , alpha } ;
 
                 CGContextSetFillPattern( m_cgContext, pattern , colorArray ) ;
             }

 	  	 
