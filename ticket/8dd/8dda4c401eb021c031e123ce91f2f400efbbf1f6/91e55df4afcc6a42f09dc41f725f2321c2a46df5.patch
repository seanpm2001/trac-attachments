Index: include/wx/msw/filedlg.h
===================================================================
--- include/wx/msw/filedlg.h	(revision 49603)
+++ include/wx/msw/filedlg.h	(working copy)
@@ -39,6 +39,7 @@
 
 #if !(defined(__SMARTPHONE__) && defined(__WXWINCE__))
     virtual void DoMoveWindow(int x, int y, int width, int height);
+    virtual void DoCentre(int dir);
     virtual void DoGetSize( int *width, int *height ) const;
     virtual void DoGetPosition( int *x, int *y ) const;
 #endif // !(__SMARTPHONE__ && __WXWINCE__)
Index: src/msw/filedlg.cpp
===================================================================
--- src/msw/filedlg.cpp	(revision 49603)
+++ src/msw/filedlg.cpp	(working copy)
@@ -64,9 +64,14 @@
 // globals
 // ----------------------------------------------------------------------------
 
-// standard dialog size
-static wxRect gs_rectDialog(0, 0, 428, 266);
+// standard dialog size -  for the pre-XP systems
+static wxRect gs_rectDialog(0, 0, 428, 266); 
 
+// gs_rectDialog -> is different on different MS platforms 
+//  Centre() -> won't work correctly.  
+// This is work around do get dialog centralized.
+static bool gs_centerDialog = false;
+
 // ============================================================================
 // implementation
 // ============================================================================
@@ -74,6 +79,39 @@
 IMPLEMENT_CLASS(wxFileDialog, wxFileDialogBase)
 
 // ----------------------------------------------------------------------------
+// function for centering the dialog
+// ----------------------------------------------------------------------------
+
+static bool CenterWindowOnParent(HWND hWnd)
+{
+    HWND hWndToCenterOn = GetParent(hWnd);
+
+    // Get the client rectangle of the window on which we want to center
+    // Make sure the pointer is not NULL first
+    if (hWndToCenterOn == NULL)
+        return false;
+
+    RECT rectToCenterOn;
+    GetWindowRect(hWndToCenterOn, &rectToCenterOn);
+	
+	// Get this window's area
+	RECT rectSubDialog;
+	GetWindowRect(hWnd, &rectSubDialog);
+	
+	// find the upper left of where we should center to
+	int xLeft = (rectToCenterOn.left + rectToCenterOn.right) / 2 - 
+		(rectSubDialog.right - rectSubDialog.left ) / 2;
+	int yTop = (rectToCenterOn.top + rectToCenterOn.bottom) / 2 -
+		(rectSubDialog.bottom -  rectSubDialog.top) / 2;
+
+	// still not correct, should be done check on the monitor bounds..
+	SetWindowPos(hWnd, NULL, xLeft, yTop, -1, -1, 
+		SWP_NOSIZE | SWP_NOZORDER | SWP_NOACTIVATE);
+
+	return true;
+}
+
+// ----------------------------------------------------------------------------
 // hook function for moving the dialog
 // ----------------------------------------------------------------------------
 
@@ -83,23 +121,37 @@
                          WPARAM    WXUNUSED(wParam),
                          LPARAM    lParam)
 {
+	if ( hDlg == NULL )
+	{
+		return 0;
+	}
+
     switch ( iMsg )
     {
-        case WM_NOTIFY:
+	    case WM_NOTIFY:
             {
                 OFNOTIFY *pNotifyCode = wx_reinterpret_cast(OFNOTIFY *, lParam);
                 if ( pNotifyCode->hdr.code == CDN_INITDONE )
                 {
-                    // note that we need to move the parent window: hDlg is a
-                    // child of it when OFN_EXPLORER is used
-                    ::SetWindowPos
-                      (
-                        ::GetParent(hDlg),
-                        HWND_TOP,
-                        gs_rectDialog.x, gs_rectDialog.y,
-                        0, 0,
-                        SWP_NOZORDER | SWP_NOSIZE
-                      );
+                    HWND hFileDlg = ::GetParent(hDlg);
+
+                    if (gs_centerDialog)
+					{
+                        ::CenterWindowOnParent(hFileDlg);
+					}
+					else
+					{
+						// note that we need to move the parent window: hDlg is a
+						// child of it when OFN_EXPLORER is used
+						::SetWindowPos
+						  (
+							hFileDlg,
+							HWND_TOP,
+							gs_rectDialog.x, gs_rectDialog.y,
+							0, 0,
+							SWP_NOZORDER | SWP_NOSIZE 
+						  );
+					}
                  }
             }
             break;
@@ -145,7 +197,9 @@
     gs_rectDialog.x =
     gs_rectDialog.y = 0;
 
+    gs_centerDialog = false;
 }
+
 void wxFileDialog::GetPaths(wxArrayString& paths) const
 {
     paths.Empty();
@@ -205,6 +259,11 @@
     // out correctly then
 }
 
+void wxFileDialog::DoCentre(int dir)
+{
+	gs_centerDialog = true;
+	wxFileDialogBase::DoCentre(dir);
+}
 // helper used below in ShowModal(): style is used to determine whether to show
 // the "Save file" dialog (if it contains wxFD_SAVE bit) or "Open file" one;
 // returns true on success or false on failure in which case err is filled with

 	  	 
