Index: include/wx/msw/filedlg.h
===================================================================
--- include/wx/msw/filedlg.h	(revision 49603)
+++ include/wx/msw/filedlg.h	(working copy)
@@ -39,6 +39,7 @@
 
 #if !(defined(__SMARTPHONE__) && defined(__WXWINCE__))
     virtual void DoMoveWindow(int x, int y, int width, int height);
+    virtual void DoCentre(int dir);
     virtual void DoGetSize( int *width, int *height ) const;
     virtual void DoGetPosition( int *x, int *y ) const;
 #endif // !(__SMARTPHONE__ && __WXWINCE__)
Index: src/msw/filedlg.cpp
===================================================================
--- src/msw/filedlg.cpp	(revision 49603)
+++ src/msw/filedlg.cpp	(working copy)
@@ -64,9 +64,14 @@
 // globals
 // ----------------------------------------------------------------------------
 
-// standard dialog size
-static wxRect gs_rectDialog(0, 0, 428, 266);
+// standard dialog size -  for the pre-XP systems
+static wxRect gs_rectDialog(0, 0, 428, 266); 
 
+// gs_rectDialog -> is different on different MS platforms 
+//  Centre() -> won't work correctly.  
+// This is work around do get dialog centralized.
+static bool gs_centerDialog = false;
+
 // ============================================================================
 // implementation
 // ============================================================================
@@ -90,16 +95,35 @@
                 OFNOTIFY *pNotifyCode = wx_reinterpret_cast(OFNOTIFY *, lParam);
                 if ( pNotifyCode->hdr.code == CDN_INITDONE )
                 {
-                    // note that we need to move the parent window: hDlg is a
-                    // child of it when OFN_EXPLORER is used
-                    ::SetWindowPos
-                      (
-                        ::GetParent(hDlg),
-                        HWND_TOP,
-                        gs_rectDialog.x, gs_rectDialog.y,
-                        0, 0,
-                        SWP_NOZORDER | SWP_NOSIZE
-                      );
+                    // same as in the wxColourDialogHookProc 
+                    wxFileDialog *dialog = (wxFileDialog *)pNotifyCode->lpOFN->lCustData;
+
+                    HWND hFileDlg = ::GetParent(hDlg);
+
+                    dialog->SetHWND((WXHWND)hFileDlg); 
+                    dialog->AdoptAttributesFromHWND(); 
+
+                    RECT rect;
+                    GetWindowRect(hFileDlg, &rect);
+                    // set right width and height 
+                    gs_rectDialog.width  = rect.right  - rect.left;
+                    gs_rectDialog.height = rect.bottom - rect.top;
+
+                    if (gs_centerDialog)
+                    {
+                        gs_rectDialog.x = 0;
+                        gs_rectDialog.y = 0;
+                        dialog->CenterOnParent();
+                    }
+                    else
+                    {
+                        // note that we need to move the parent window: hDlg is a
+                        // child of it when OFN_EXPLORER is used
+                        wxPoint pos = dialog->GetPosition();
+                        dialog->SetPosition(pos);
+                    }
+
+                    dialog->SetHWND((WXHWND)NULL);
                  }
             }
             break;
@@ -145,7 +169,9 @@
     gs_rectDialog.x =
     gs_rectDialog.y = 0;
 
+    gs_centerDialog = false;
 }
+
 void wxFileDialog::GetPaths(wxArrayString& paths) const
 {
     paths.Empty();
@@ -185,7 +211,6 @@
         *y = gs_rectDialog.y;
 }
 
-
 void wxFileDialog::DoGetSize(int *width, int *height) const
 {
     if ( width )
@@ -203,8 +228,19 @@
 
     // size of the dialog can't be changed because the controls are not laid
     // out correctly then
+
+    HWND hWnd = (HWND)GetHWND();
+    if (hWnd)
+    {
+       ::SetWindowPos(hWnd, HWND_TOP, x, y, 0, 0, SWP_NOZORDER|SWP_NOSIZE);	
+    }
 }
 
+void wxFileDialog::DoCentre(int dir)
+{
+    gs_centerDialog = true;
+    wxFileDialogBase::DoCentre(dir);
+}
 // helper used below in ShowModal(): style is used to determine whether to show
 // the "Save file" dialog (if it contains wxFD_SAVE bit) or "Open file" one;
 // returns true on success or false on failure in which case err is filled with
@@ -373,6 +409,7 @@
 
     of.Flags             = msw_flags;
     of.lpfnHook          = wxFileDialogHookFunction;
+    of.lCustData         = (LPARAM)this;
 
     wxArrayString wildDescriptions, wildFilters;
 

 	  	 
