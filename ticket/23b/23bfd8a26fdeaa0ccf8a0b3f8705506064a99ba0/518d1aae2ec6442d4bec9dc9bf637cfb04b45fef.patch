Only in wxWidgets.patched: buildGTK
diff -bru wxWidgets/include/wx/generic/private/listctrl.h wxWidgets.patched/include/wx/generic/private/listctrl.h
--- wxWidgets/include/wx/generic/private/listctrl.h	2012-03-06 11:14:14.000000000 -0800
+++ wxWidgets.patched/include/wx/generic/private/listctrl.h	2012-03-10 00:17:00.000000000 -0800
@@ -488,8 +488,8 @@
     void HighlightLines( size_t lineFrom, size_t lineTo, bool on = true );
 
     // toggle the line state and refresh it
-    void ReverseHighlight( size_t line )
-        { HighlightLine(line, !IsHighlighted(line)); RefreshLine(line); }
+    bool ReverseHighlight( size_t line )
+        { if( HighlightLine(line, !IsHighlighted(line)) ) { RefreshLine(line); return true; } else return false; }
 
     // return true if the line is highlighted
     bool IsHighlighted(size_t line) const;
diff -bru wxWidgets/include/wx/listbase.h wxWidgets.patched/include/wx/listbase.h
--- wxWidgets/include/wx/listbase.h	2012-03-06 11:14:15.000000000 -0800
+++ wxWidgets.patched/include/wx/listbase.h	2012-03-09 21:54:53.000000000 -0800
@@ -538,7 +538,7 @@
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_COMMAND_LIST_END_LABEL_EDIT, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_COMMAND_LIST_DELETE_ITEM, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_COMMAND_LIST_DELETE_ALL_ITEMS, wxListEvent );
-
+wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_COMMAND_LIST_ITEM_SELECTING, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_COMMAND_LIST_ITEM_SELECTED, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_COMMAND_LIST_ITEM_DESELECTED, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_COMMAND_LIST_KEY_DOWN, wxListEvent );
@@ -576,7 +576,7 @@
 #define EVT_LIST_COL_BEGIN_DRAG(id, fn) wx__DECLARE_LISTEVT(COL_BEGIN_DRAG, id, fn)
 #define EVT_LIST_COL_DRAGGING(id, fn) wx__DECLARE_LISTEVT(COL_DRAGGING, id, fn)
 #define EVT_LIST_COL_END_DRAG(id, fn) wx__DECLARE_LISTEVT(COL_END_DRAG, id, fn)
-
+#define EVT_LIST_ITEM_SELECTING(id, fn) wx__DECLARE_LISTEVT(ITEM_SELECTING, id, fn)
 #define EVT_LIST_ITEM_SELECTED(id, fn) wx__DECLARE_LISTEVT(ITEM_SELECTED, id, fn)
 #define EVT_LIST_ITEM_DESELECTED(id, fn) wx__DECLARE_LISTEVT(ITEM_DESELECTED, id, fn)
 #define EVT_LIST_ITEM_RIGHT_CLICK(id, fn) wx__DECLARE_LISTEVT(ITEM_RIGHT_CLICK, id, fn)
Only in wxWidgets.patched/include/wx: listbase.h.orig
diff -bru wxWidgets/interface/wx/listctrl.h wxWidgets.patched/interface/wx/listctrl.h
--- wxWidgets/interface/wx/listctrl.h	2012-03-06 11:14:31.000000000 -0800
+++ wxWidgets.patched/interface/wx/listctrl.h	2012-03-15 12:35:35.000000000 -0700
@@ -102,6 +102,9 @@
     @event{EVT_LIST_DELETE_ALL_ITEMS(id, func)}
            All items were deleted.
            Processes a @c wxEVT_COMMAND_LIST_DELETE_ALL_ITEMS event type.
+    @event{EVT_LIST_ITEM_SELECTING(id, func)}
+           The item is about to be selected. This can be prevented by calling Veto().
+           Process a @c wxEVT_COMMAND_LIST_ITEM_SELECTING event type.
     @event{EVT_LIST_ITEM_SELECTED(id, func)}
            The item has been selected.
            Processes a @c wxEVT_COMMAND_LIST_ITEM_SELECTED event type.
@@ -1127,6 +1130,9 @@
         Delete an item.
     @event{EVT_LIST_DELETE_ALL_ITEMS(id, func)}
         Delete all items.
+    @event{EVT_LIST_ITEM_SELECTING(id, func)}
+        The item is about to be selected. This can be prevented by calling Veto().
+        This event is not sent for the virtual list control.
     @event{EVT_LIST_ITEM_SELECTED(id, func)}
         The item has been selected.
     @event{EVT_LIST_ITEM_DESELECTED(id, func)}
Only in wxWidgets.patched/interface/wx: listctrl.h.orig
diff -bru wxWidgets/samples/listctrl/listtest.cpp wxWidgets.patched/samples/listctrl/listtest.cpp
--- wxWidgets/samples/listctrl/listtest.cpp	2012-03-06 11:15:00.000000000 -0800
+++ wxWidgets.patched/samples/listctrl/listtest.cpp	2012-03-10 00:17:00.000000000 -0800
@@ -177,7 +177,7 @@
     m_imageListNormal = new wxImageList(32, 32, true);
     m_imageListSmall = new wxImageList(16, 16, true);
 
-#if wxHAS_IMAGES_IN_RESOURCES
+#ifdef wxHAS_IMAGES_IN_RESOURCES
     m_imageListNormal->Add( wxIcon(wxT("icon1"), wxBITMAP_TYPE_ICO_RESOURCE) );
     m_imageListNormal->Add( wxIcon(wxT("icon2"), wxBITMAP_TYPE_ICO_RESOURCE) );
     m_imageListNormal->Add( wxIcon(wxT("icon3"), wxBITMAP_TYPE_ICO_RESOURCE) );
@@ -905,6 +905,7 @@
     EVT_LIST_DELETE_ITEM(LIST_CTRL, MyListCtrl::OnDeleteItem)
     EVT_LIST_DELETE_ALL_ITEMS(LIST_CTRL, MyListCtrl::OnDeleteAllItems)
     EVT_LIST_ITEM_SELECTED(LIST_CTRL, MyListCtrl::OnSelected)
+    EVT_LIST_ITEM_SELECTING(LIST_CTRL, MyListCtrl::OnSelecting)
     EVT_LIST_ITEM_DESELECTED(LIST_CTRL, MyListCtrl::OnDeselected)
     EVT_LIST_KEY_DOWN(LIST_CTRL, MyListCtrl::OnListKeyDown)
     EVT_LIST_ITEM_ACTIVATED(LIST_CTRL, MyListCtrl::OnActivated)
@@ -1001,6 +1002,18 @@
     LogColEvent( event, wxT("OnColEndDrag") );
 }
 
+void MyListCtrl::OnSelecting(wxListEvent& event)
+{
+    if( event.m_itemIndex == 3 )
+    {
+        int responce = wxMessageBox( "Change the selection?", "Message", wxYES_NO | wxICON_QUESTION );
+        if( responce == wxNO )
+            event.Veto();
+    }
+    else
+        event.Skip();
+}
+
 void MyListCtrl::OnBeginDrag(wxListEvent& event)
 {
     const wxPoint& pt = event.m_pointDrag;
Only in wxWidgets.patched/samples/listctrl: listtest.cpp.orig
diff -bru wxWidgets/samples/listctrl/listtest.h wxWidgets.patched/samples/listctrl/listtest.h
--- wxWidgets/samples/listctrl/listtest.h	2012-03-06 11:15:00.000000000 -0800
+++ wxWidgets.patched/samples/listctrl/listtest.h	2012-03-09 21:54:53.000000000 -0800
@@ -62,6 +62,7 @@
     void OnDeleteItem(wxListEvent& event);
     void OnDeleteAllItems(wxListEvent& event);
     void OnSelected(wxListEvent& event);
+    void OnSelecting(wxListEvent& event);
     void OnDeselected(wxListEvent& event);
     void OnListKeyDown(wxListEvent& event);
     void OnActivated(wxListEvent& event);
Only in wxWidgets.patched/samples/listctrl: listtest.h.orig
diff -bru wxWidgets/src/common/filename.cpp wxWidgets.patched/src/common/filename.cpp
--- wxWidgets/src/common/filename.cpp	2012-03-06 11:13:06.000000000 -0800
+++ wxWidgets.patched/src/common/filename.cpp	2012-03-11 01:04:13.000000000 -0800
@@ -2664,7 +2664,7 @@
 #elif defined(__UNIX_LIKE__) || defined(__WXMAC__) || defined(__OS2__) || (defined(__DOS__) && defined(__WATCOMC__))
     // no need to test for IsDir() here
     wxStructStat stBuf;
-    if ( wxStat( GetFullPath(), &stBuf) == 0 )
+    if ( wxLstat( GetFullPath(), &stBuf) == 0 )
     {
         // Android defines st_*time fields as unsigned long, but time_t as long,
         // hence the static_casts.
diff -bru wxWidgets/src/common/listctrlcmn.cpp wxWidgets.patched/src/common/listctrlcmn.cpp
--- wxWidgets/src/common/listctrlcmn.cpp	2012-03-06 11:13:07.000000000 -0800
+++ wxWidgets.patched/src/common/listctrlcmn.cpp	2012-03-09 21:54:53.000000000 -0800
@@ -41,6 +41,7 @@
 wxDEFINE_EVENT( wxEVT_COMMAND_LIST_DELETE_ITEM, wxListEvent );
 wxDEFINE_EVENT( wxEVT_COMMAND_LIST_DELETE_ALL_ITEMS, wxListEvent );
 wxDEFINE_EVENT( wxEVT_COMMAND_LIST_ITEM_SELECTED, wxListEvent );
+wxDEFINE_EVENT( wxEVT_COMMAND_LIST_ITEM_SELECTING, wxListEvent );
 wxDEFINE_EVENT( wxEVT_COMMAND_LIST_ITEM_DESELECTED, wxListEvent );
 wxDEFINE_EVENT( wxEVT_COMMAND_LIST_KEY_DOWN, wxListEvent );
 wxDEFINE_EVENT( wxEVT_COMMAND_LIST_INSERT_ITEM, wxListEvent );
Only in wxWidgets.patched/src/common: listctrlcmn.cpp.orig
diff -bru wxWidgets/src/generic/listctrl.cpp wxWidgets.patched/src/generic/listctrl.cpp
--- wxWidgets/src/generic/listctrl.cpp	2012-03-06 11:13:31.000000000 -0800
+++ wxWidgets.patched/src/generic/listctrl.cpp	2012-03-10 01:00:32.000000000 -0800
@@ -1884,6 +1884,14 @@
 
     if ( changed )
     {
+        if( highlight )
+        {
+            wxListEvent le( wxEVT_COMMAND_LIST_ITEM_SELECTING, GetParent()->GetId() );
+            le.SetEventObject( GetParent() );
+            le.m_item.m_itemId = le.m_itemIndex = line;
+            if( GetEventHandler()->ProcessEvent( le ) && !le.IsAllowed() )
+                return false;
+        }
         SendNotify( line, highlight ? wxEVT_COMMAND_LIST_ITEM_SELECTED
                                     : wxEVT_COMMAND_LIST_ITEM_DESELECTED );
     }
@@ -2525,7 +2533,13 @@
 
                 ChangeCurrent(current);
 
-                ReverseHighlight(m_current);
+                if( !ReverseHighlight(m_current) )
+                {
+                    HighlightAll( false );
+                    m_current = oldCurrent;
+                    ChangeCurrent( m_current );
+                    ReverseHighlight( m_current );
+                }
             }
             else // multi sel & current is highlighted & no mod keys
             {
diff -bru wxWidgets/src/msw/listctrl.cpp wxWidgets.patched/src/msw/listctrl.cpp
--- wxWidgets/src/msw/listctrl.cpp	2012-03-06 11:13:22.000000000 -0800
+++ wxWidgets.patched/src/msw/listctrl.cpp	2012-03-15 12:26:56.000000000 -0700
@@ -1935,6 +1935,7 @@
     // prepare the event
     // -----------------
 
+    static int oldItem;
     wxListEvent event(wxEVT_NULL, m_windowId);
     event.SetEventObject(this);
 
@@ -2164,6 +2165,19 @@
                 event.m_itemIndex = iItem;
                 break;
 
+			case LVN_ITEMCHANGING:
+                if( !IsVirtual() )
+                {
+                    if( nmLV->uOldState & LVIS_SELECTED )
+                        oldItem = iItem;
+                    if( ( (nmLV->uNewState & LVIS_SELECTED) != (nmLV->uOldState & LVIS_SELECTED) ) && (nmLV->uNewState & LVIS_SELECTED) )
+                    {
+                        eventType = wxEVT_COMMAND_LIST_ITEM_SELECTING;
+                        event.m_itemIndex = iItem;
+                    }
+                }
+                break;
+
             case LVN_ITEMCHANGED:
                 // we translate this catch all message into more interesting
                 // (and more easy to process) wxWidgets events
@@ -2542,6 +2556,14 @@
     // ---------------
     switch ( nmhdr->code )
     {
+        case LVN_ITEMCHANGING:
+            if( !event.IsAllowed() )
+            {
+                SetItemState( oldItem, wxLIST_STATE_SELECTED | wxLIST_STATE_FOCUSED, wxLIST_STATE_SELECTED | wxLIST_STATE_FOCUSED );
+            }
+            *result = !event.IsAllowed();
+            return true;
+            break;
         case LVN_DELETEALLITEMS:
             // always return true to suppress all additional LVN_DELETEITEM
             // notifications - this makes deleting all items from a list ctrl
Only in wxWidgets.patched/src/msw: listctrl.cpp.orig
Only in wxWidgets.patched/src/msw: listctrl_orig.cpp
