diff -bru wxWidgets/include/wx/fontdlg.h wxWidgets.patched/include/wx/fontdlg.h
--- wxWidgets/include/wx/fontdlg.h	2012-03-17 21:25:59.000000000 -0700
+++ wxWidgets.patched/include/wx/fontdlg.h	2012-03-19 23:22:33.000000000 -0700
@@ -37,7 +37,7 @@
     bool Create(wxWindow *parent, const wxFontData& data)
         { InitFontData(&data); return Create(parent); }
 
-    virtual ~wxFontDialogBase();
+    virtual ~wxFontDialogBase() { };
 
     // retrieve the font data
     const wxFontData& GetFontData() const { return m_fontData; }
diff -bru wxWidgets/include/wx/generic/private/listctrl.h wxWidgets.patched/include/wx/generic/private/listctrl.h
--- wxWidgets/include/wx/generic/private/listctrl.h	2012-03-17 21:25:57.000000000 -0700
+++ wxWidgets.patched/include/wx/generic/private/listctrl.h	2012-03-21 00:21:07.000000000 -0700
@@ -661,6 +661,7 @@
     void SendNotify( size_t line,
                      wxEventType command,
                      const wxPoint& point = wxDefaultPosition );
+    bool SendNotifyWithVeto( size_t line, wxEventType command, const wxPoint& point = wxDefaultPosition );
 
     // override base class virtual to reset m_lineHeight when the font changes
     virtual bool SetFont(const wxFont& font)
@@ -699,6 +700,7 @@
     }
 
 protected:
+    void HighlightLinesIfAllowed( size_t lineFrom, size_t lineTo, bool highlight = true );
     // the array of all line objects for a non virtual list control (for the
     // virtual list control we only ever use m_lines[0])
     wxListLineDataArray  m_lines;
diff -bru wxWidgets/include/wx/listbase.h wxWidgets.patched/include/wx/listbase.h
--- wxWidgets/include/wx/listbase.h	2012-03-17 21:25:59.000000000 -0700
+++ wxWidgets.patched/include/wx/listbase.h	2012-03-21 00:20:24.000000000 -0700
@@ -538,7 +538,7 @@
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_COMMAND_LIST_END_LABEL_EDIT, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_COMMAND_LIST_DELETE_ITEM, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_COMMAND_LIST_DELETE_ALL_ITEMS, wxListEvent );
-
+wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_COMMAND_LIST_ITEM_SELECTING, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_COMMAND_LIST_ITEM_SELECTED, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_COMMAND_LIST_ITEM_DESELECTED, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_COMMAND_LIST_KEY_DOWN, wxListEvent );
@@ -576,7 +576,7 @@
 #define EVT_LIST_COL_BEGIN_DRAG(id, fn) wx__DECLARE_LISTEVT(COL_BEGIN_DRAG, id, fn)
 #define EVT_LIST_COL_DRAGGING(id, fn) wx__DECLARE_LISTEVT(COL_DRAGGING, id, fn)
 #define EVT_LIST_COL_END_DRAG(id, fn) wx__DECLARE_LISTEVT(COL_END_DRAG, id, fn)
-
+#define EVT_LIST_ITEM_SELECTING(id, fn) wx__DECLARE_LISTEVT(ITEM_SELECTING, id, fn)
 #define EVT_LIST_ITEM_SELECTED(id, fn) wx__DECLARE_LISTEVT(ITEM_SELECTED, id, fn)
 #define EVT_LIST_ITEM_DESELECTED(id, fn) wx__DECLARE_LISTEVT(ITEM_DESELECTED, id, fn)
 #define EVT_LIST_ITEM_RIGHT_CLICK(id, fn) wx__DECLARE_LISTEVT(ITEM_RIGHT_CLICK, id, fn)
diff -bru wxWidgets/interface/wx/listctrl.h wxWidgets.patched/interface/wx/listctrl.h
--- wxWidgets/interface/wx/listctrl.h	2012-03-17 21:26:13.000000000 -0700
+++ wxWidgets.patched/interface/wx/listctrl.h	2012-03-21 00:20:25.000000000 -0700
@@ -102,6 +102,9 @@
     @event{EVT_LIST_DELETE_ALL_ITEMS(id, func)}
            All items were deleted.
            Processes a @c wxEVT_COMMAND_LIST_DELETE_ALL_ITEMS event type.
+    @event{EVT_LIST_ITEM_SELECTING(id, func)}
+           The item is about to be selected. This can be prevented by calling Veto().
+           Process a @c wxEVT_COMMAND_LIST_ITEM_SELECTING event type.
     @event{EVT_LIST_ITEM_SELECTED(id, func)}
            The item has been selected.
            Processes a @c wxEVT_COMMAND_LIST_ITEM_SELECTED event type.
@@ -1143,6 +1146,9 @@
         Delete an item.
     @event{EVT_LIST_DELETE_ALL_ITEMS(id, func)}
         Delete all items.
+    @event{EVT_LIST_ITEM_SELECTING(id, func)}
+        The item is about to be selected. This can be prevented by calling Veto().
+        This event is not sent to the virtual list control.
     @event{EVT_LIST_ITEM_SELECTED(id, func)}
         The item has been selected.
     @event{EVT_LIST_ITEM_DESELECTED(id, func)}
diff -bru wxWidgets/samples/listctrl/listtest.cpp wxWidgets.patched/samples/listctrl/listtest.cpp
--- wxWidgets/samples/listctrl/listtest.cpp	2012-03-17 21:26:37.000000000 -0700
+++ wxWidgets.patched/samples/listctrl/listtest.cpp	2012-03-21 00:20:25.000000000 -0700
@@ -905,6 +905,7 @@
     EVT_LIST_DELETE_ITEM(LIST_CTRL, MyListCtrl::OnDeleteItem)
     EVT_LIST_DELETE_ALL_ITEMS(LIST_CTRL, MyListCtrl::OnDeleteAllItems)
     EVT_LIST_ITEM_SELECTED(LIST_CTRL, MyListCtrl::OnSelected)
+    EVT_LIST_ITEM_SELECTING(LIST_CTRL, MyListCtrl::OnSelecting)
     EVT_LIST_ITEM_DESELECTED(LIST_CTRL, MyListCtrl::OnDeselected)
     EVT_LIST_KEY_DOWN(LIST_CTRL, MyListCtrl::OnListKeyDown)
     EVT_LIST_ITEM_ACTIVATED(LIST_CTRL, MyListCtrl::OnActivated)
@@ -1001,6 +1002,18 @@
     LogColEvent( event, wxT("OnColEndDrag") );
 }
 
+void MyListCtrl::OnSelecting(wxListEvent& event)
+{
+    if( event.m_itemIndex == 3 )
+    {
+        int responce = wxMessageBox( "Change the selection?", "Message", wxYES_NO | wxICON_QUESTION );
+        if( responce == wxNO )
+            event.Veto();
+    }
+    else
+        event.Skip();
+}
+
 void MyListCtrl::OnBeginDrag(wxListEvent& event)
 {
     const wxPoint& pt = event.m_pointDrag;
diff -bru wxWidgets/samples/listctrl/listtest.h wxWidgets.patched/samples/listctrl/listtest.h
--- wxWidgets/samples/listctrl/listtest.h	2012-03-17 21:26:37.000000000 -0700
+++ wxWidgets.patched/samples/listctrl/listtest.h	2012-03-21 00:20:24.000000000 -0700
@@ -62,6 +62,7 @@
     void OnDeleteItem(wxListEvent& event);
     void OnDeleteAllItems(wxListEvent& event);
     void OnSelected(wxListEvent& event);
+    void OnSelecting(wxListEvent& event);
     void OnDeselected(wxListEvent& event);
     void OnListKeyDown(wxListEvent& event);
     void OnActivated(wxListEvent& event);
diff -bru wxWidgets/src/common/fontmap.cpp wxWidgets.patched/src/common/fontmap.cpp
--- wxWidgets/src/common/fontmap.cpp	2012-03-17 21:24:49.000000000 -0700
+++ wxWidgets.patched/src/common/fontmap.cpp	2012-03-19 23:22:34.000000000 -0700
@@ -518,10 +518,10 @@
     return wxTestFontEncoding(info);
 }
 
-#if wxUSE_FONTDLG
+/*#if wxUSE_FONTDLG
 wxFontDialogBase::~wxFontDialogBase()
 {
 }
 #endif
-
+*/
 #endif // wxUSE_FONTMAP
diff -bru wxWidgets/src/common/listctrlcmn.cpp wxWidgets.patched/src/common/listctrlcmn.cpp
--- wxWidgets/src/common/listctrlcmn.cpp	2012-03-17 21:24:49.000000000 -0700
+++ wxWidgets.patched/src/common/listctrlcmn.cpp	2012-03-21 00:20:24.000000000 -0700
@@ -41,6 +41,7 @@
 wxDEFINE_EVENT( wxEVT_COMMAND_LIST_DELETE_ITEM, wxListEvent );
 wxDEFINE_EVENT( wxEVT_COMMAND_LIST_DELETE_ALL_ITEMS, wxListEvent );
 wxDEFINE_EVENT( wxEVT_COMMAND_LIST_ITEM_SELECTED, wxListEvent );
+wxDEFINE_EVENT( wxEVT_COMMAND_LIST_ITEM_SELECTING, wxListEvent );
 wxDEFINE_EVENT( wxEVT_COMMAND_LIST_ITEM_DESELECTED, wxListEvent );
 wxDEFINE_EVENT( wxEVT_COMMAND_LIST_KEY_DOWN, wxListEvent );
 wxDEFINE_EVENT( wxEVT_COMMAND_LIST_INSERT_ITEM, wxListEvent );
diff -bru wxWidgets/src/generic/listctrl.cpp wxWidgets.patched/src/generic/listctrl.cpp
--- wxWidgets/src/generic/listctrl.cpp	2012-03-17 21:25:14.000000000 -0700
+++ wxWidgets.patched/src/generic/listctrl.cpp	2012-03-21 01:08:55.000000000 -0700
@@ -1834,6 +1834,21 @@
     }
 }
 
+void wxListMainWindow::HighlightLinesIfAllowed( size_t lineFrom, size_t lineTo, bool highlight )
+{
+    if( !IsVirtual() )
+    {
+        for( size_t line = lineFrom; line <= lineTo; line++ )
+        {
+            if( SendNotifyWithVeto( line, wxEVT_COMMAND_LIST_ITEM_SELECTING ) )
+            {
+                if( HighlightLine( line, highlight ) )
+                    RefreshLine( line );
+            }
+        }
+    }
+}
+
 void wxListMainWindow::HighlightLines( size_t lineFrom,
                                        size_t lineTo,
                                        bool highlight )
@@ -1860,6 +1875,11 @@
     {
         for ( size_t line = lineFrom; line <= lineTo; line++ )
         {
+/*            wxListEvent le( wxEVT_COMMAND_LIST_ITEM_SELECTING, GetParent()->GetId() );
+            le.SetEventObject( GetParent() );
+            le.m_item.m_itemId = le.m_itemIndex = m_current;
+            if( GetEventHandler()->ProcessEvent( le ) && !le.IsAllowed() )
+                return;*/
             if ( HighlightLine(line, highlight) )
                 RefreshLine(line);
         }
@@ -2521,6 +2541,8 @@
         {
             if ( IsSingleSel() || !IsHighlighted(current) )
             {
+                if( !SendNotifyWithVeto( current, wxEVT_COMMAND_LIST_ITEM_SELECTING ) )
+                    return;
                 HighlightAll( false );
 
                 ChangeCurrent(current);
@@ -2535,16 +2557,15 @@
         }
         else // multi sel & either ctrl or shift is down
         {
+            ChangeCurrent(current);
             if (cmdModifierDown)
             {
-                ChangeCurrent(current);
-
+                if( !SendNotifyWithVeto( current, wxEVT_COMMAND_LIST_ITEM_SELECTING ) )
+                    return;
                 ReverseHighlight(m_current);
             }
             else if (event.ShiftDown())
             {
-                ChangeCurrent(current);
-
                 size_t lineFrom = oldCurrent,
                        lineTo = current;
 
@@ -2554,7 +2575,7 @@
                     lineFrom = m_current;
                 }
 
-                HighlightLines(lineFrom, lineTo);
+                HighlightLinesIfAllowed(lineFrom, lineTo);
             }
             else // !ctrl, !shift
             {
@@ -2571,6 +2592,20 @@
     }
 }
 
+bool wxListMainWindow::SendNotifyWithVeto( size_t line, wxEventType command, const wxPoint &point )
+{
+    bool result = true;
+    if( !IsVirtual() && !GetItemState( line, wxLIST_STATE_SELECTED ) )
+    {
+        wxListEvent le( command, GetParent()->GetId() );
+        le.SetEventObject( GetParent() );
+        le.m_item.m_itemId = le.m_itemIndex = line;
+        if( GetEventHandler()->ProcessEvent( le ) && !le.IsAllowed() )
+            result = false;
+    }
+    return result;
+}
+
 void wxListMainWindow::MoveToItem(size_t item)
 {
     if ( item == (size_t)-1 )
diff -bru wxWidgets/src/msw/fontenum.cpp wxWidgets.patched/src/msw/fontenum.cpp
--- wxWidgets/src/msw/fontenum.cpp	2012-03-17 21:25:05.000000000 -0700
+++ wxWidgets.patched/src/msw/fontenum.cpp	2012-03-18 15:49:31.000000000 -0700
@@ -189,7 +189,11 @@
 
             wxFontEncoding enc = wxGetFontEncFromCharSet(cs);
             return m_fontEnum->OnFontEncoding(lf->lfFaceName,
+#if wxUSE_FONTMAP
                                               wxFontMapper::GetEncodingName(enc));
+#else
+                                              wxEmptyString);
+#endif
         }
         else
         {
diff -bru wxWidgets/src/msw/listctrl.cpp wxWidgets.patched/src/msw/listctrl.cpp
--- wxWidgets/src/msw/listctrl.cpp	2012-03-17 21:25:05.000000000 -0700
+++ wxWidgets.patched/src/msw/listctrl.cpp	2012-03-21 00:20:25.000000000 -0700
@@ -1934,7 +1934,7 @@
 
     // prepare the event
     // -----------------
-
+    static int oldItem;
     wxListEvent event(wxEVT_NULL, m_windowId);
     event.SetEventObject(this);
 
@@ -2164,6 +2164,19 @@
                 event.m_itemIndex = iItem;
                 break;
 
+            case LVN_ITEMCHANGING:
+                if( !IsVirtual() )
+                {
+                    if( nmLV->uOldState & LVIS_SELECTED )
+                        oldItem = iItem;
+                    if( ( ( nmLV->uNewState & LVIS_SELECTED ) != ( nmLV->uOldState & LVIS_SELECTED ) ) && ( nmLV->uNewState & LVIS_SELECTED ) )
+                    {
+                        eventType = wxEVT_COMMAND_LIST_ITEM_SELECTING;
+                        event.m_itemIndex = iItem;
+                    }
+                }
+                break;
+
             case LVN_ITEMCHANGED:
                 // we translate this catch all message into more interesting
                 // (and more easy to process) wxWidgets events
@@ -2542,6 +2555,15 @@
     // ---------------
     switch ( nmhdr->code )
     {
+        case LVN_ITEMCHANGING:
+             if( !event.IsAllowed() )
+             {
+                 SetItemState( oldItem, wxLIST_STATE_SELECTED | wxLIST_STATE_FOCUSED, wxLIST_STATE_SELECTED | wxLIST_STATE_FOCUSED );
+             }
+             *result = !event.IsAllowed();
+             return true;
+             break;
+
         case LVN_DELETEALLITEMS:
             // always return true to suppress all additional LVN_DELETEITEM
             // notifications - this makes deleting all items from a list ctrl
