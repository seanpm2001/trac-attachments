diff -bru wxWidgets/include/wx/listbase.h wxWidgets.patched/include/wx/listbase.h
--- wxWidgets/include/wx/listbase.h	2014-07-10 02:00:32.000000000 -0700
+++ wxWidgets.patched/include/wx/listbase.h	2014-09-04 02:01:29.000000000 -0700
@@ -546,7 +546,7 @@
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_LIST_END_LABEL_EDIT, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_LIST_DELETE_ITEM, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_LIST_DELETE_ALL_ITEMS, wxListEvent );
-
+wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_LIST_ITEM_SELECTING, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_LIST_ITEM_SELECTED, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_LIST_ITEM_DESELECTED, wxListEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_LIST_KEY_DOWN, wxListEvent );
@@ -584,7 +584,7 @@
 #define EVT_LIST_COL_BEGIN_DRAG(id, fn) wx__DECLARE_LISTEVT(COL_BEGIN_DRAG, id, fn)
 #define EVT_LIST_COL_DRAGGING(id, fn) wx__DECLARE_LISTEVT(COL_DRAGGING, id, fn)
 #define EVT_LIST_COL_END_DRAG(id, fn) wx__DECLARE_LISTEVT(COL_END_DRAG, id, fn)
-
+#define EVT_LIST_ITEM_SELECTING(id, fn) wx__DECLARE_LISTEVT(ITEM_SELECTING, id, fn)
 #define EVT_LIST_ITEM_SELECTED(id, fn) wx__DECLARE_LISTEVT(ITEM_SELECTED, id, fn)
 #define EVT_LIST_ITEM_DESELECTED(id, fn) wx__DECLARE_LISTEVT(ITEM_DESELECTED, id, fn)
 #define EVT_LIST_ITEM_RIGHT_CLICK(id, fn) wx__DECLARE_LISTEVT(ITEM_RIGHT_CLICK, id, fn)
diff -bru wxWidgets/interface/wx/listctrl.h wxWidgets.patched/interface/wx/listctrl.h
--- wxWidgets/interface/wx/listctrl.h	2014-07-10 02:00:42.000000000 -0700
+++ wxWidgets.patched/interface/wx/listctrl.h	2014-09-04 02:02:07.000000000 -0700
@@ -213,6 +213,9 @@
     @event{EVT_LIST_DELETE_ALL_ITEMS(id, func)}
            All items were deleted.
            Processes a @c wxEVT_LIST_DELETE_ALL_ITEMS event type.
+    @event(EVT_LIST_ITEM_SELECTING(id, func))
+           The item is about to be selected. Notice that this event can be veto'ed.
+           Process a @c wxEVT_COMMAND_LIST_ITEM_SELECTING event type.
     @event{EVT_LIST_ITEM_SELECTED(id, func)}
            The item has been selected.
            Processes a @c wxEVT_LIST_ITEM_SELECTED event type.
@@ -1298,6 +1301,8 @@
         Delete an item.
     @event{EVT_LIST_DELETE_ALL_ITEMS(id, func)}
         Delete all items.
+    @event{EVT_LIST_ITEM_SELECTING(id, func)}
+        The item is about to be selected. This event can be veto'ed, unlike EVT_LIST_ITEM_SELECTED.
     @event{EVT_LIST_ITEM_SELECTED(id, func)}
         The item has been selected.
     @event{EVT_LIST_ITEM_DESELECTED(id, func)}
diff -bru wxWidgets/samples/listctrl/listtest.cpp wxWidgets.patched/samples/listctrl/listtest.cpp
--- wxWidgets/samples/listctrl/listtest.cpp	2014-07-14 16:21:14.000000000 -0700
+++ wxWidgets.patched/samples/listctrl/listtest.cpp	2014-09-04 02:06:07.000000000 -0700
@@ -936,6 +932,7 @@
     EVT_LIST_END_LABEL_EDIT(LIST_CTRL, MyListCtrl::OnEndLabelEdit)
     EVT_LIST_DELETE_ITEM(LIST_CTRL, MyListCtrl::OnDeleteItem)
     EVT_LIST_DELETE_ALL_ITEMS(LIST_CTRL, MyListCtrl::OnDeleteAllItems)
+    EVT_LIST_ITEM_SELECTING(LIST_CTRL, MyListCtrl::OnSelecting)
     EVT_LIST_ITEM_SELECTED(LIST_CTRL, MyListCtrl::OnSelected)
     EVT_LIST_ITEM_DESELECTED(LIST_CTRL, MyListCtrl::OnDeselected)
     EVT_LIST_KEY_DOWN(LIST_CTRL, MyListCtrl::OnListKeyDown)
@@ -1084,6 +1081,17 @@
 {
     LogEvent(event, wxT("OnDeleteAllItems"));
 }
+void MyListCtrl::OnSelecting(wxListEvent& event)
+{
+    if( event.m_itemIndex == 3 )
+    {
+//        int response = wxMessageBox( "Change the selection?", "Message", wxYES_NO | wxICON_QUESTION );
+//        if( response == wxNO )
+            event.Veto();
+    }
+	else
+        event.Skip();
+}
 
 void MyListCtrl::OnSelected(wxListEvent& event)
 {
diff -bru wxWidgets/samples/listctrl/listtest.h wxWidgets.patched/samples/listctrl/listtest.h
--- wxWidgets/samples/listctrl/listtest.h	2014-07-14 16:22:33.000000000 -0700
+++ wxWidgets.patched/samples/listctrl/listtest.h	2014-09-04 02:06:07.000000000 -0700
@@ -59,6 +59,7 @@
     void OnEndLabelEdit(wxListEvent& event);
     void OnDeleteItem(wxListEvent& event);
     void OnDeleteAllItems(wxListEvent& event);
+    void OnSelecting(wxListEvent& event);
     void OnSelected(wxListEvent& event);
     void OnDeselected(wxListEvent& event);
     void OnListKeyDown(wxListEvent& event);
diff -bru wxWidgets/src/common/listctrlcmn.cpp wxWidgets.patched/src/common/listctrlcmn.cpp
--- wxWidgets/src/common/listctrlcmn.cpp	2014-07-10 01:59:37.000000000 -0700
+++ wxWidgets.patched/src/common/listctrlcmn.cpp	2014-09-04 02:06:54.000000000 -0700
@@ -39,6 +39,7 @@
 wxDEFINE_EVENT( wxEVT_LIST_END_LABEL_EDIT, wxListEvent );
 wxDEFINE_EVENT( wxEVT_LIST_DELETE_ITEM, wxListEvent );
 wxDEFINE_EVENT( wxEVT_LIST_DELETE_ALL_ITEMS, wxListEvent );
+wxDEFINE_EVENT( wxEVT_LIST_ITEM_SELECTING, wxListEvent );
 wxDEFINE_EVENT( wxEVT_LIST_ITEM_SELECTED, wxListEvent );
 wxDEFINE_EVENT( wxEVT_LIST_ITEM_DESELECTED, wxListEvent );
 wxDEFINE_EVENT( wxEVT_LIST_KEY_DOWN, wxListEvent );
diff -bru wxWidgets/src/generic/listctrl.cpp wxWidgets.patched/src/generic/listctrl.cpp
--- wxWidgets/src/generic/listctrl.cpp	2014-07-10 01:59:54.000000000 -0700
+++ wxWidgets.patched/src/generic/listctrl.cpp	2014-09-07 22:54:46.000000000 -0700
@@ -1891,6 +1891,14 @@
     }
     else // !virtual
     {
+        if( highlight )
+        {
+            wxListEvent event( wxEVT_LIST_ITEM_SELECTING, GetParent()->GetId() );
+            event.SetEventObject( GetParent() );
+            event.m_item.m_itemId = event.m_itemIndex = line;
+            if( GetEventHandler()->ProcessEvent( event ) && !event.IsAllowed() )
+                return false;
+        }
         wxListLineData *ld = GetLine(line);
         wxCHECK_MSG( ld, false, wxT("invalid index in HighlightLine") );
 
diff -bru wxWidgets/src/msw/listctrl.cpp wxWidgets.patched/src/msw/listctrl.cpp
--- wxWidgets/src/msw/listctrl.cpp	2014-07-10 01:59:46.000000000 -0700
+++ wxWidgets.patched/src/msw/listctrl.cpp	2014-09-04 02:07:10.000000000 -0700
@@ -2188,6 +2188,17 @@
                 event.m_itemIndex = iItem;
                 break;
 
+            case LVN_ITEMCHANGING:
+                if( !IsVirtual() )
+                {
+                    event.SetEventType( wxEVT_LIST_ITEM_SELECTING );
+                    event.m_itemIndex = iItem;
+                    bool processed = HandleWindowEvent( event );
+                    *result = !event.IsAllowed();
+                    return *result;
+                }
+                break;
+
             case LVN_ITEMCHANGED:
                 // we translate this catch all message into more interesting
                 // (and more easy to process) wxWidgets events

