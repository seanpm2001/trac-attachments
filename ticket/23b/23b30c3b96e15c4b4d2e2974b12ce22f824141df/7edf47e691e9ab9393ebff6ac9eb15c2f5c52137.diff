Index: src/osx/carbon/dialog.cpp
===================================================================
--- src/osx/carbon/dialog.cpp	(revision 63477)
+++ src/osx/carbon/dialog.cpp	(working copy)
@@ -46,19 +46,17 @@
     SetFocus() ;
 
     WindowRef windowRef = (WindowRef) GetWXWindow();
-    WindowGroupRef windowGroup = NULL;
-    WindowGroupRef formerParentGroup = NULL;
-    bool resetGroupParent = false;
-
-    if ( GetParent() == NULL )
-    {
-        windowGroup = GetWindowGroup(windowRef) ;
-        if ( windowGroup != GetWindowGroupOfClass( kMovableModalWindowClass ) )
-        {
-            formerParentGroup = GetWindowGroupParent( windowGroup );
-            SetWindowGroupParent( windowGroup, GetWindowGroupOfClass( kMovableModalWindowClass ) );
-            resetGroupParent = true;
-        }
+    WindowClass formerClass;
+    bool changed = false;
+    GetWindowClass(windowRef, &formerClass) ;
+    switch (formerClass) {
+    case kDocumentWindowClass:
+    case kFloatingWindowClass:
+    case kUtilityWindowClass:
+    case kMovableModalWindowClass:
+        HIWindowChangeClass( windowRef, kMovableModalWindowClass );
+        changed = true;
+        break;
     }
     BeginAppModalStateForWindow(windowRef) ;
 
@@ -70,8 +68,6 @@
         loop->Dispatch();
 
     EndAppModalStateForWindow(windowRef) ;
-    if ( resetGroupParent )
-    {
-        SetWindowGroupParent( windowGroup , formerParentGroup );
-    }
+    if (changed)
+        HIWindowChangeClass( windowRef, formerClass );
 }
Index: src/osx/carbon/nonownedwnd.cpp
===================================================================
--- src/osx/carbon/nonownedwnd.cpp	(revision 63477)
+++ src/osx/carbon/nonownedwnd.cpp	(working copy)
@@ -1310,6 +1310,20 @@
     if ( ( style & wxFRAME_FLOAT_ON_PARENT ) )
         group = GetWindowGroupOfClass(kFloatingWindowClass) ;
 
+    // If the parent is kMovableModalWindowClass, wxFRAME_FLOAT_ON_PARENT
+    // needs to be grouped with kUtilityWindowClass not kFloatingWindowClass
+    // to stay above the parent.
+    if ( wclass == kFloatingWindowClass && parent != NULL )
+    {
+        WindowRef parenttlw = (WindowRef) parent->MacGetTopLevelWindowRef();
+        WindowClass parentwclass;
+        GetWindowClass(parenttlw, &parentwclass);
+        if (parentwclass == kMovableModalWindowClass)
+        {
+            group = GetWindowGroupOfClass(kUtilityWindowClass) ;
+        }
+    }
+
     if ( group == NULL && parent != NULL )
     {
         WindowRef parenttlw = (WindowRef) parent->MacGetTopLevelWindowRef();
