Index: src/osx/carbon/evtloop.cpp
===================================================================
--- src/osx/carbon/evtloop.cpp	(revision 64589)
+++ src/osx/carbon/evtloop.cpp	(working copy)
@@ -122,35 +122,50 @@
     wxWindowDisabler disabler(m_modalWindow);
     wxMacAutoreleasePool autoreleasepool;
 
-    bool resetGroupParent = false;
-
+    WindowClass windowClass = NULL;
     WindowGroupRef windowGroup = NULL;
-    WindowGroupRef formerParentGroup = NULL;
-    
+    bool resetClass = false;
+    bool resetGroup = false;
     // make sure modal dialogs are in the right layer so that they are not covered
     if ( m_modalWindow != NULL )
     {
-        if ( m_modalWindow->GetParent() == NULL )
-        {
+        GetWindowClass( m_modalNativeWindow, &windowClass );
+        // HIWindowChangeClass only works with these classes.
+        switch (windowClass) {
+        case kMovableModalWindowClass:
+            break;
+        case kDocumentWindowClass:
+        case kFloatingWindowClass:
+        case kUtilityWindowClass:
+            HIWindowChangeClass( m_modalNativeWindow, kMovableModalWindowClass );
+            resetClass = true;
+            break;
+        default:
             windowGroup = GetWindowGroup(m_modalNativeWindow) ;
             if ( windowGroup != GetWindowGroupOfClass( kMovableModalWindowClass ) )
-            {
-                formerParentGroup = GetWindowGroupParent( windowGroup );
-                SetWindowGroupParent( windowGroup, GetWindowGroupOfClass( kMovableModalWindowClass ) );
-                resetGroupParent = true;
-            }
+                {
+                    SetWindowGroup( m_modalNativeWindow, GetWindowGroupOfClass( kMovableModalWindowClass ) );
+                    resetGroup = true;
+                }
+            break;
         }
     }
 
     m_modalWindow->SetFocus();
     
+    // Make sure this window is in front of other modal windows.
+    SelectWindow( m_modalNativeWindow );
+
     RunAppModalLoopForWindow(m_modalNativeWindow);
 
-    if ( resetGroupParent )
+    if ( resetClass )
     {
-        SetWindowGroupParent( windowGroup , formerParentGroup );
+        HIWindowChangeClass( m_modalNativeWindow, windowClass );
     }
-
+    if ( resetGroup )
+    {
+        SetWindowGroup( m_modalNativeWindow , windowGroup );
+    }
 }
 
 void wxModalEventLoop::DoStop()
Index: src/osx/carbon/nonownedwnd.cpp
===================================================================
--- src/osx/carbon/nonownedwnd.cpp	(revision 64589)
+++ src/osx/carbon/nonownedwnd.cpp	(working copy)
@@ -1318,6 +1318,20 @@
     if ( ( style & wxFRAME_FLOAT_ON_PARENT ) )
         group = GetWindowGroupOfClass(kFloatingWindowClass) ;
 
+    // If the parent is kMovableModalWindowClass, wxFRAME_FLOAT_ON_PARENT
+    // needs to be grouped with kUtilityWindowClass not kFloatingWindowClass
+    // to stay above the parent.
+    if ( wclass == kFloatingWindowClass && parent != NULL )
+    {
+        WindowRef parenttlw = (WindowRef) parent->MacGetTopLevelWindowRef();
+        WindowClass parentwclass;
+        GetWindowClass(parenttlw, &parentwclass);
+        if (parentwclass == kMovableModalWindowClass)
+        {
+            group = GetWindowGroupOfClass(kUtilityWindowClass) ;
+        }
+    }
+
     if ( group == NULL && parent != NULL )
     {
         WindowRef parenttlw = (WindowRef) parent->MacGetTopLevelWindowRef();
