Index: src/msw/utils.cpp
===================================================================
--- src/msw/utils.cpp	(revision 56548)
+++ src/msw/utils.cpp	(working copy)
@@ -959,36 +959,39 @@
     // TODO-CE
     return false;
 #elif defined(__WIN32__)
-    bool bOK = true;
+    bool ok = true;
 
     if ( wxGetOsVersion(NULL, NULL) == wxOS_WINDOWS_NT ) // if is NT or 2K
     {
         // Get a token for this process.
-        HANDLE hToken;
-        bOK = ::OpenProcessToken(GetCurrentProcess(),
+        HANDLE handle;
+        ok = OpenProcessToken(GetCurrentProcess(),
                                  TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY,
-                                 &hToken) != 0;
-        if ( bOK )
+                                 &handle) ? true : false;
+        if (ok)
         {
             TOKEN_PRIVILEGES tkp;
 
             // Get the LUID for the shutdown privilege.
-            ::LookupPrivilegeValue(NULL, SE_SHUTDOWN_NAME,
-                                   &tkp.Privileges[0].Luid);
+            ok = LookupPrivilegeValue(NULL, SE_SHUTDOWN_NAME,
+                     &tkp.Privileges[0].Luid) ? true : false;
 
-            tkp.PrivilegeCount = 1;  // one privilege to set
-            tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;
+            if (ok)
+            {
+                tkp.PrivilegeCount = 1;  // one privilege to set
+                tkp.Privileges[0].Attributes = SE_PRIVILEGE_ENABLED;
 
-            // Get the shutdown privilege for this process.
-            ::AdjustTokenPrivileges(hToken, FALSE, &tkp, 0,
-                                    (PTOKEN_PRIVILEGES)NULL, 0);
-
-            // Cannot test the return value of AdjustTokenPrivileges.
-            bOK = ::GetLastError() == ERROR_SUCCESS;
+                // Get the shutdown privilege for this process.
+                AdjustTokenPrivileges(handle, FALSE, &tkp, 0,
+                                       (PTOKEN_PRIVILEGES)NULL, 0);
+                // Cannot test the return value of AdjustTokenPrivileges.
+                ok = (GetLastError() == ERROR_SUCCESS);
+            }
+            CloseHandle(handle);
         }
     }
 
-    if ( bOK )
+    if ( ok )
     {
         UINT wFlags = 0;
         if ( flags & wxSHUTDOWN_FORCE )
@@ -1016,10 +1019,10 @@
                 return false;
         }
 
-        bOK = ::ExitWindowsEx(wFlags, 0) != 0;
+        ok = ::ExitWindowsEx(wFlags, 0) != 0;
     }
 
-    return bOK;
+    return ok;
 #endif // WinCE/!WinCE
 }
 
