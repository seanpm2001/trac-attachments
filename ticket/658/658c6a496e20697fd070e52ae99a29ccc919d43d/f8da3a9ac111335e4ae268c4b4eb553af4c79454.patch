diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWidgets.orig\src\msw\renderer.cpp wxWidgets\src\msw\renderer.cpp
--- wxWidgets.orig\src\msw\renderer.cpp	Sun Feb 20 17:27:35 2005
+++ wxWidgets\src\msw\renderer.cpp	Sun Feb 20 17:38:45 2005
@@ -80,4 +80,11 @@
     virtual wxSplitterRenderParams GetSplitterParams(const wxWindow *win);
 
+#if wxUSE_UXTHEME
+    virtual void DrawComboBoxDropButton(wxWindow *win,
+                                        wxDC& dc,
+                                        const wxRect& rect,
+                                        int flags = 0);
+#endif
+
 private:
     DECLARE_NO_COPY_CLASS(wxRendererXP)
@@ -113,6 +120,6 @@
     r.left = rect.GetLeft();
     r.top = rect.GetTop();
-    r.bottom = rect.GetBottom();
-    r.right = rect.GetRight();
+    r.bottom = rect.y + rect.height;
+    r.right = rect.x + rect.width;
 
     int style = DFCS_SCROLLCOMBOBOX;
@@ -120,5 +127,5 @@
         style |= DFCS_INACTIVE;
     if ( flags & wxCONTROL_PRESSED )
-        style |= DFCS_PUSHED;
+        style |= DFCS_PUSHED|DFCS_FLAT;
 
     ::DrawFrameControl(GetHdcOf(dc), &r, DFC_SCROLL, style);
@@ -136,4 +143,76 @@
     return s_rendererXP;
 }
+
+#if wxUSE_UXTHEME
+
+#include <commctrl.h>
+
+//#include <tmschema.h>
+
+// Since tmschema.h is in Win32 Platform SDK,
+// we need to define some values from it here.
+#ifndef BP_PUSHBUTTON
+
+# define BP_PUSHBUTTON      1
+
+# define PBS_NORMAL         1
+# define PBS_HOT            2
+# define PBS_PRESSED        3
+# define PBS_DISABLED       4
+# define PBS_DEFAULTED      5
+
+# define CP_DROPDOWNBUTTON  1
+
+# define CBXS_NORMAL        1
+# define CBXS_HOT           2
+# define CBXS_PRESSED       3
+# define CBXS_DISABLED      4
+
+#endif
+
+// NOTE: There is no guarantee that the button drawn
+// fills the entire rect (XP default theme, for example), so the caller
+// should have cleared button's background before this call. This
+// is quite likely a wxMSW-specific thing.
+void
+wxRendererXP::DrawComboBoxDropButton(wxWindow * win,
+                                      wxDC& dc,
+                                      const wxRect& rect,
+                                      int flags)
+{
+    // TODO: Maybe store wxUxThemeHandle across calls? Probably only neglible
+    //   benefits compared to the hassle involved (need to reload it when
+    //   OnThemeChanged event occurs).
+    wxUxThemeHandle themeHandle(win, L"ComboBox");
+    WXHTHEME hTheme = themeHandle;
+
+    if ( hTheme )
+    {
+        tagRECT trect;
+        trect.left = rect.x;
+        trect.top = rect.y;
+        trect.right = rect.x + rect.width;
+        trect.bottom = rect.y + rect.height;
+
+        int state = CBXS_NORMAL;
+
+        if ( flags & wxCONTROL_PRESSED )
+            state = CBXS_PRESSED;
+        else if ( flags & wxCONTROL_CURRENT )
+            state = CBXS_HOT;
+        else if ( flags & wxCONTROL_DISABLED )
+            state = CBXS_DISABLED;
+
+        wxUxThemeEngine::Get()->DrawThemeBackground( hTheme, dc.GetHDC(),
+                                                     CP_DROPDOWNBUTTON, state,
+                                                     &trect, NULL);
+
+    }
+    // FIXME: Is the following code necessary?
+    //else
+    //    m_rendererNative.DrawComboBoxDropButton(win,dc,rect,flags);
+}
+
+#endif // wxUSE_UXTHEME
 
 // ----------------------------------------------------------------------------

 	  	 
