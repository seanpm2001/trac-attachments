diff --git a/src/unix/mimetype.cpp b/src/unix/mimetype.cpp
index 265f86a..44c53a9 100644
--- a/src/unix/mimetype.cpp
+++ b/src/unix/mimetype.cpp
@@ -229,11 +229,7 @@ void wxMimeTypesManagerImpl::LoadXDGAppsFilesFromDir(const wxString& dirname)
         cont = dir.GetNext(&filename);
     }
 
-#if 0
-    // RR: I'm not sure this makes any sense. On my system we'll just
-    //     scan the YAST2 and other useless directories
-
-    // Look recursively into subdirs
+    // Recurse into subdirs, which on kde may hold most of the .desktop files
     cont = dir.GetFirst(&filename, wxEmptyString, wxDIR_DIRS);
     while (cont)
     {
@@ -242,7 +238,6 @@ void wxMimeTypesManagerImpl::LoadXDGAppsFilesFromDir(const wxString& dirname)
         LoadXDGAppsFilesFromDir( p.GetPath() );
         cont = dir.GetNext(&filename);
     }
-#endif
 }
 
 
@@ -835,6 +830,7 @@ wxFileType * wxMimeTypesManagerImpl::GetFileTypeFromExtension(const wxString& ex
 
     InitIfNeeded();
 
+    wxFileType* alternativeFileType = NULL;
     size_t count = m_aExtensions.GetCount();
     for ( size_t n = 0; n < count; n++ )
     {
@@ -849,12 +845,29 @@ wxFileType * wxMimeTypesManagerImpl::GetFileTypeFromExtension(const wxString& ex
                 wxFileType *fileType = new wxFileType;
                 fileType->m_impl->Init(this, n);
 
-                return fileType;
+                // See if this mimetype has a known open-command. If not, keep
+                // looking for one that does, but store this one as a fallback.
+                wxString type, desc, open;
+                fileType->GetMimeType(&type);
+                fileType->GetDescription(&desc);
+                wxFileType::MessageParameters params("filename."+ext, type);
+                bool result = fileType->GetOpenCommand(&open, params);
+                if (result)
+                {
+                    delete alternativeFileType;
+                    return fileType;
+                }
+                else
+                {
+                    delete alternativeFileType;
+                    alternativeFileType = fileType;
+                }
             }
         }
     }
 
-    return NULL;
+    // Though we couldn't find a filetype with a known open-command, return any without one
+    return alternativeFileType;
 }
 
 wxFileType * wxMimeTypesManagerImpl::GetFileTypeFromMimeType(const wxString& mimeType)
