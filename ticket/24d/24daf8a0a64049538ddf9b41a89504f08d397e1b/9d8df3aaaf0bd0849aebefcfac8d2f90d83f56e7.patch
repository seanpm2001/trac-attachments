Index: include/wx/dataview.h
===================================================================
--- include/wx/dataview.h	(revision 68963)
+++ include/wx/dataview.h	(working copy)
@@ -143,6 +143,7 @@
     void SetColour(const wxColour& colour) { m_colour = colour; }
     void SetBold( bool set ) { m_bold = set; }
     void SetItalic( bool set ) { m_italic = set; }
+    void SetBackgroundColour(const wxColour& colour)  { m_bgColour = colour; }
 
     // accessors
     bool HasColour() const { return m_colour.IsOk(); }
@@ -152,8 +153,11 @@
     bool GetBold() const { return m_bold; }
     bool GetItalic() const { return m_italic; }
 
-    bool IsDefault() const { return !(HasColour() || HasFont()); }
+    bool HasBackgroundColour() const { return m_bgColour.IsOk(); }
+    const wxColour& GetBackgroundColour() const { return m_bgColour; }
 
+    bool IsDefault() const { return !(HasColour() || HasFont() || HasBackgroundColour()); }
+
     // Return the font based on the given one with this attribute applied to it.
     wxFont GetEffectiveFont(const wxFont& font) const;
 
@@ -161,6 +165,7 @@
     wxColour m_colour;
     bool     m_bold;
     bool     m_italic;
+    wxColour m_bgColour;
 };
 
 
Index: include/wx/dvrenderers.h
===================================================================
--- include/wx/dvrenderers.h	(revision 68963)
+++ include/wx/dvrenderers.h	(working copy)
@@ -281,6 +281,9 @@
     // platform-specific classes.
     virtual wxDC *GetDC() = 0;
 
+    // To draw background use the background colour in wxDataViewItemAttr
+    virtual void RenderBackground(wxDC* dc, const wxRect& rect);
+
     // Prepare DC to use attributes and call Render().
     void WXCallRender(wxRect rect, wxDC *dc, int state);
 
Index: src/common/datavcmn.cpp
===================================================================
--- src/common/datavcmn.cpp	(revision 68963)
+++ src/common/datavcmn.cpp	(working copy)
@@ -806,6 +806,18 @@
 // wxDataViewCustomRendererBase
 // ----------------------------------------------------------------------------
 
+void wxDataViewCustomRendererBase::RenderBackground(wxDC* dc, const wxRect& rect)
+{
+    if (!m_attr.HasBackgroundColour())
+        return;
+
+    const wxColour& colour = m_attr.GetBackgroundColour();
+    wxDCPenChanger changePen(*dc, colour);
+    wxDCBrushChanger changeBrush(*dc, colour);
+
+    dc->DrawRectangle(rect);
+}
+
 void
 wxDataViewCustomRendererBase::WXCallRender(wxRect rectCell, wxDC *dc, int state)
 {
Index: src/generic/datavgen.cpp
===================================================================
--- src/generic/datavgen.cpp	(revision 68963)
+++ src/generic/datavgen.cpp	(working copy)
@@ -643,6 +643,8 @@
 
     wxDataViewTreeNode * FindNode( const wxDataViewItem & item );
 
+    void DrawCellBackground( wxDataViewRenderer* cell, wxDC& dc, const wxRect& rect );
+
 private:
     wxDataViewCtrl             *m_owner;
     int                         m_lineHeight;
@@ -1867,6 +1869,11 @@
             cell_rect.y = GetLineStart( item );
             cell_rect.height = GetLineHeight( item );
 
+			// draw the background
+            bool selected = m_selection.Index( item ) != wxNOT_FOUND;
+            if ( !selected )
+                DrawCellBackground( cell, dc, cell_rect );
+
             // deal with the expander
             int indent = 0;
             if ((!IsList()) && (col == expander))
@@ -1920,7 +1927,7 @@
                 continue;
 
             int state = 0;
-            if (m_hasFocus && (m_selection.Index(item) != wxNOT_FOUND))
+            if (m_hasFocus && selected)
                 state |= wxDATAVIEW_CELL_SELECTED;
 
             // TODO: it would be much more efficient to create a clipping
@@ -1939,6 +1946,29 @@
     }
 }
 
+
+void wxDataViewMainWindow::DrawCellBackground( wxDataViewRenderer* cell, wxDC& dc, const wxRect& rect )
+{
+
+    wxRect bg_rect( rect );
+
+    // don't overlap the horizontal rules
+    if ( m_owner->HasFlag(wxDV_HORIZ_RULES) )
+    {
+        bg_rect.x++;
+        bg_rect.width--;
+    }
+
+    // don't overlap the vertical rules
+    if ( m_owner->HasFlag(wxDV_VERT_RULES) )
+    {
+        bg_rect.y++;
+        bg_rect.height--;
+    }
+
+    cell->RenderBackground(&dc, bg_rect);
+}
+
 void wxDataViewMainWindow::OnRenameTimer()
 {
     // We have to call this here because changes may just have
