Index: samples/docview/docview.cpp
===================================================================
--- samples/docview/docview.cpp	(revision 71443)
+++ samples/docview/docview.cpp	(working copy)
@@ -75,6 +75,7 @@
 
 BEGIN_EVENT_TABLE(MyApp, wxApp)
     EVT_MENU(wxID_ABOUT, MyApp::OnAbout)
+    EVT_UPDATE_UI(wxID_ABOUT, MyApp::OnUpdateDisable)
 END_EVENT_TABLE()
 
 MyApp::MyApp()
@@ -234,6 +235,7 @@
     }
 
     CreateMenuBarForFrame(frame, menuFile, m_menuEdit);
+    //frame->GetMenuBar()->FindItem(wxID_ABOUT)->Enable(false);
 
     frame->SetIcon(wxICON(doc));
     frame->Centre();
Index: samples/docview/docview.h
===================================================================
--- samples/docview/docview.h	(revision 71443)
+++ samples/docview/docview.h	(working copy)
@@ -70,8 +70,8 @@
     // convenient, even if somewhat less usual, to handle this in the
     // application object itself
     void OnAbout(wxCommandEvent& event);
+    void OnUpdateDisable(wxUpdateUIEvent& event) { event.Enable(false); }
 
-
     // the currently used mode
     Mode m_mode;
 
Index: samples/docview/view.cpp
===================================================================
--- samples/docview/view.cpp	(revision 71443)
+++ samples/docview/view.cpp	(working copy)
@@ -151,6 +151,7 @@
     EVT_MENU(wxID_COPY, TextEditView::OnCopy)
     EVT_MENU(wxID_PASTE, TextEditView::OnPaste)
     EVT_MENU(wxID_SELECTALL, TextEditView::OnSelectAll)
+    EVT_UPDATE_UI(wxID_ABOUT, TextEditView::OnUpdateEnable) // should still be enabled and selectable if commenting this line out
 END_EVENT_TABLE()
 
 bool TextEditView::OnCreate(wxDocument *doc, long flags)
Index: samples/docview/view.h
===================================================================
--- samples/docview/view.h	(revision 71443)
+++ samples/docview/view.h	(working copy)
@@ -105,6 +105,7 @@
     void OnCopy(wxCommandEvent& WXUNUSED(event)) { m_text->Copy(); }
     void OnPaste(wxCommandEvent& WXUNUSED(event)) { m_text->Paste(); }
     void OnSelectAll(wxCommandEvent& WXUNUSED(event)) { m_text->SelectAll(); }
+    void OnUpdateEnable(wxUpdateUIEvent& event) { event.Enable(true); }
 
     wxTextCtrl *m_text;
 
