Index: samples/docview/docview.cpp
===================================================================
--- samples/docview/docview.cpp	(revision 74251)
+++ samples/docview/docview.cpp	(working copy)
@@ -144,6 +144,18 @@
     return wxApp::OnCmdLineParsed(parser);
 }
 
+static wxDocument* CreateNewDocument(wxDocTemplate* docTemplate)
+{
+    wxDocument* newDoc = docTemplate->CreateDocument(wxEmptyString, wxDOC_NEW);
+    newDoc->SetDocumentName(docTemplate->GetDocumentName());
+    if (!newDoc->OnNewDocument())
+    {
+        newDoc->GetDocumentManager()->CloseDocument(newDoc);
+        newDoc = NULL;
+    }
+    return newDoc;
+}
+
 bool MyApp::OnInit()
 {
     if ( !wxApp::OnInit() )
@@ -158,6 +170,7 @@
 
     //// Create a document manager
     wxDocManager *docManager = new wxDocManager;
+    wxDocTemplate* textDocTemplate = NULL;
 
     //// Create a template relating drawing documents to their views
     new wxDocTemplate(docManager, "Drawing", "*.drw", "", "drw",
@@ -176,7 +189,7 @@
     else // multiple documents mode: allow documents of different types
     {
         // Create a template relating text documents to their views
-        new wxDocTemplate(docManager, "Text", "*.txt;*.text", "", "txt;text",
+        textDocTemplate = new wxDocTemplate(docManager, "Text", "*.txt;*.text", "", "txt;text",
                           "Text Doc", "Text View",
                           CLASSINFO(TextEditDocument), CLASSINFO(TextEditView));
 #if defined( __WXMAC__ ) && wxOSX_USE_CARBON
@@ -230,15 +243,25 @@
     {
         m_canvas = new MyCanvas(NULL, frame);
         m_menuEdit = CreateDrawingEditMenu();
-        docManager->CreateNewDocument();
     }
 
     CreateMenuBarForFrame(frame, menuFile, m_menuEdit);
+    frame->GetMenuBar()->FindItem(wxID_ABOUT)->Enable(false);
 
+    wxToolBar* tb = new wxToolBar(frame, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTB_HORIZONTAL | wxTB_NOICONS | wxTB_TEXT);
+    tb->AddTool(wxID_SELECTALL, wxT("Select all"), wxNullBitmap);
+    tb->Realize();
+    frame->SetToolBar(tb);
+
     frame->SetIcon(wxICON(doc));
     frame->Centre();
     frame->Show();
 
+    if (textDocTemplate)
+        ::CreateNewDocument(textDocTemplate);
+    else
+        docManager->CreateNewDocument();
+
     return true;
 }
 
Index: samples/docview/view.cpp
===================================================================
--- samples/docview/view.cpp	(revision 74251)
+++ samples/docview/view.cpp	(working copy)
@@ -151,8 +151,14 @@
     EVT_MENU(wxID_COPY, TextEditView::OnCopy)
     EVT_MENU(wxID_PASTE, TextEditView::OnPaste)
     EVT_MENU(wxID_SELECTALL, TextEditView::OnSelectAll)
+    EVT_UPDATE_UI(wxID_SELECTALL, TextEditView::OnUpdateNeedText)
 END_EVENT_TABLE()
 
+void TextEditView::OnUpdateNeedText(wxUpdateUIEvent& event)
+{
+    event.Enable(!m_text->IsEmpty());
+}
+
 bool TextEditView::OnCreate(wxDocument *doc, long flags)
 {
     if ( !wxView::OnCreate(doc, flags) )
Index: samples/docview/view.h
===================================================================
--- samples/docview/view.h	(revision 74251)
+++ samples/docview/view.h	(working copy)
@@ -105,6 +105,7 @@
     void OnCopy(wxCommandEvent& WXUNUSED(event)) { m_text->Copy(); }
     void OnPaste(wxCommandEvent& WXUNUSED(event)) { m_text->Paste(); }
     void OnSelectAll(wxCommandEvent& WXUNUSED(event)) { m_text->SelectAll(); }
+    void OnUpdateNeedText(wxUpdateUIEvent&);
 
     wxTextCtrl *m_text;
 
