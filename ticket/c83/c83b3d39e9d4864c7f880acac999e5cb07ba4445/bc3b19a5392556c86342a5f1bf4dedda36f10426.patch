Index: include/wx/treebook.h
===================================================================
--- include/wx/treebook.h	(revision 61972)
+++ include/wx/treebook.h	(working copy)
@@ -150,6 +150,15 @@
     void OnTreeSelectionChange(wxTreeEvent& event);
     void OnTreeNodeExpandedCollapsed(wxTreeEvent& event);
 
+    // tree control sizing
+    void OnMotion(wxMouseEvent& event);
+    void OnLeftDown(wxMouseEvent& event);
+    void OnLeftUp(wxMouseEvent& event);
+
+    bool m_mouseCaptured;
+    bool m_currentlySizing;
+    int m_lastMouseX;
+
     // array of page ids and page windows
     wxArrayTreeItemIds m_treeIds;
 
Index: src/generic/treebkg.cpp
===================================================================
--- src/generic/treebkg.cpp	(revision 61972)
+++ src/generic/treebkg.cpp	(working copy)
@@ -56,6 +56,9 @@
     EVT_TREE_SEL_CHANGED   (wxID_ANY, wxTreebook::OnTreeSelectionChange)
     EVT_TREE_ITEM_EXPANDED (wxID_ANY, wxTreebook::OnTreeNodeExpandedCollapsed)
     EVT_TREE_ITEM_COLLAPSED(wxID_ANY, wxTreebook::OnTreeNodeExpandedCollapsed)
+    EVT_MOTION             (wxTreebook::OnMotion)
+    EVT_LEFT_DOWN          (wxTreebook::OnLeftDown)
+    EVT_LEFT_UP            (wxTreebook::OnLeftUp)
 END_EVENT_TABLE()
 
 // ============================================================================
@@ -70,6 +73,9 @@
 {
     m_selection =
     m_actualSelection = wxNOT_FOUND;
+
+    m_mouseCaptured =
+    m_currentlySizing = false;
 }
 
 bool
@@ -728,6 +734,77 @@
     GetEventHandler()->ProcessEvent(ev);
 }
 
+void wxTreebook::OnMotion(wxMouseEvent& event)
+{
+    event.Skip();
+
+    wxPoint mousePosition = event.GetPosition();
+
+    if (!m_currentlySizing)
+    {
+        wxRect rect = GetTreeCtrl()->GetRect();
+
+        rect.SetLeft(rect.GetRight());
+        rect.SetWidth(4);
+
+        if (rect.Contains(mousePosition))
+        {
+            SetCursor(wxStockCursor(wxCURSOR_SIZEWE));
+
+            if (!m_mouseCaptured)
+            {
+                CaptureMouse();
+                m_mouseCaptured = true;
+            }
+        }
+        else
+        {
+            SetCursor(wxStockCursor(wxCURSOR_ARROW));
+
+            if (m_mouseCaptured)
+            {
+                ReleaseMouse();
+                m_mouseCaptured = false;
+            }
+        }
+    }
+    else // if (m_currentlySizing)
+    {
+        wxTreeCtrl *tree = GetTreeCtrl();
+
+        wxSize size = tree->GetSize();
+
+        int sizeBorder = size.x - tree->GetClientSize().x;
+
+        size.SetWidth((mousePosition.x - m_lastMouseX) + (size.GetWidth() - sizeBorder));
+
+        tree->CacheBestSize(size);
+
+        m_lastMouseX = mousePosition.x;
+
+        DoSize();
+    }
+}
+
+void wxTreebook::OnLeftDown(wxMouseEvent& event)
+{
+    event.Skip();
+
+    if (!m_mouseCaptured)
+        return;
+
+    m_currentlySizing = true;
+    m_lastMouseX = event.GetPosition().x;
+}
+
+
+void wxTreebook::OnLeftUp(wxMouseEvent& event)
+{
+    event.Skip();
+
+    m_currentlySizing = false;
+}
+
 // ----------------------------------------------------------------------------
 // wxTreebook geometry management
 // ----------------------------------------------------------------------------
