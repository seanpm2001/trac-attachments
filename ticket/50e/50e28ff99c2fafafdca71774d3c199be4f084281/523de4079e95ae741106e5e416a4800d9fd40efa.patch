Index: src/mac/toplevel.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/mac/toplevel.cpp,v
retrieving revision 1.70
diff -u -2 -r1.70 toplevel.cpp
--- src/mac/toplevel.cpp	2003/12/23 19:42:05	1.70
+++ src/mac/toplevel.cpp	2003/12/24 19:49:13
@@ -346,5 +346,5 @@
     UInt32        attributes;
     WindowRef windowRef ;
-    wxTopLevelWindowMac* toplevelWindow = (wxTopLevelWindowMac*) data ;
+    wxTopLevelWindowMac* toplevelWindow = (wxTopLevelWindowMac*) data ; 
 
     GetEventParameter( event, kEventParamDirectObject, typeWindowRef, NULL,
@@ -383,5 +383,5 @@
                     newContentRect.right - newContentRect.left ,
                     newContentRect.bottom - newContentRect.top, wxSIZE_USE_EXISTING);
-
+                    
                 result = noErr;
             }
@@ -494,4 +494,5 @@
 WXHWND wxTopLevelWindowMac::s_macWindowInUpdate = NULL;
 wxTopLevelWindowMac *wxTopLevelWindowMac::s_macDeactivateWindow = NULL;
+bool wxTopLevelWindowMac::s_macWindowCompositing = FALSE;
 
 void wxTopLevelWindowMac::Init()
@@ -502,4 +503,5 @@
     m_macNeedsErasing = false ;
     m_macWindow = NULL ;
+    //m_macIsCompositing = FALSE;
 #if TARGET_CARBON
     m_macEventHandler = NULL ;
@@ -728,4 +730,17 @@
 #endif
 
+    //this setup lets us have compositing and non-compositing 
+    //windows in the same application. 
+    
+    if ( wxTopLevelWindowMac::s_macWindowCompositing ){
+        attr |= kWindowCompositingAttribute;
+        //m_macUsesCompositing = TRUE;
+    }
+    else
+    {
+        //m_macUsesCompositing = FALSE;
+    }
+    
+
 #if TARGET_CARBON
     if ( HasFlag(wxFRAME_SHAPED) )
@@ -748,5 +763,10 @@
     wxAssociateWinWithMacWindow( m_macWindow , this ) ;
     UMASetWTitle( (WindowRef)m_macWindow , title ) ;
-    ::CreateRootControl( (WindowRef)m_macWindow , (ControlHandle*)&m_macRootControl ) ;
+    if ( wxTopLevelWindowMac::s_macWindowCompositing ){
+        ::GetRootControl( (WindowRef)m_macWindow, (ControlHandle*)&m_macRootControl ) ;
+    }
+    else{
+        ::CreateRootControl( (WindowRef)m_macWindow , (ControlHandle*)&m_macRootControl ) ;
+    }
 #if TARGET_CARBON
     InstallStandardEventHandler( GetWindowEventTarget(MAC_WXHWND(m_macWindow)) ) ;
@@ -765,4 +785,10 @@
     }
 #endif
+}
+
+bool wxTopLevelWindowMac::MacEnableCompositing( bool useCompositing ){
+    bool oldval = s_macWindowCompositing;
+    s_macWindowCompositing = useCompositing; 
+    return oldval; 
 }
 
Index: include/wx/mac/toplevel.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/mac/toplevel.h,v
retrieving revision 1.16
diff -u -2 -r1.16 toplevel.h
--- include/wx/mac/toplevel.h	2003/08/13 21:05:39	1.16
+++ include/wx/mac/toplevel.h	2003/12/24 19:49:14
@@ -95,4 +95,7 @@
     void MacInvalidate( const WXRECTPTR rect, bool eraseBackground ) ;
     short MacGetWindowBackgroundTheme() const { return m_macWindowBackgroundTheme ; }
+    static bool MacEnableCompositing( bool useCompositing ); 
+    //bool MacUsesCompositing() { return m_macUsesCompositing; } 
+    
 
 #if TARGET_CARBON
@@ -109,5 +112,5 @@
     // when it is called while the frame is hidden
     bool m_maximizeOnShow;
-
+    //bool m_macIsCompositing ;
     short m_macWindowBackgroundTheme ;
     WXWindow m_macWindow ;
@@ -119,4 +122,5 @@
     static WXWindow s_macWindowInUpdate ;
     static wxTopLevelWindowMac *s_macDeactivateWindow;
+    static bool s_macWindowCompositing ;
 private :
 #if TARGET_CARBON

 	  	 
