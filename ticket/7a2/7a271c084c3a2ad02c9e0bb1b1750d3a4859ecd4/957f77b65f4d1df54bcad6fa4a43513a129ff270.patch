diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWidgets.orig\include\wx\vlbox.h wxWidgets\include\wx\vlbox.h
--- wxWidgets.orig\include\wx\vlbox.h	Fri Jan 13 10:51:34 2006
+++ wxWidgets\include\wx\vlbox.h	Fri Dec 23 13:54:29 2005
@@ -14,4 +14,5 @@
 
 #include "wx/vscroll.h"         // base class
+#include "wx/bitmap.h"
 
 class WXDLLEXPORT wxSelectionStore;
@@ -287,4 +288,6 @@
     wxColour m_colBgSel;
 
+    // double buffer
+    wxBitmap* m_doubleBuffer;
 
     DECLARE_EVENT_TABLE()
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWidgets.orig\src\generic\vlbox.cpp wxWidgets\src\generic\vlbox.cpp
--- wxWidgets.orig\src\generic\vlbox.cpp	Sat Jan 14 10:49:38 2006
+++ wxWidgets\src\generic\vlbox.cpp	Sat Jan 14 15:07:16 2006
@@ -33,4 +33,5 @@
 
 #include "wx/vlbox.h"
+#include "wx/dcbuffer.h"
 #include "wx/selstore.h"
 
@@ -62,4 +63,5 @@
     m_anchor = wxNOT_FOUND;
     m_selStore = NULL;
+    m_doubleBuffer = NULL;
 }
 
@@ -83,4 +85,7 @@
     m_colBgSel = wxSystemSettings::GetColour(wxSYS_COLOUR_HIGHLIGHT);
 
+    // flicker-free drawing requires this
+    SetBackgroundStyle(wxBG_STYLE_CUSTOM);
+
     return true;
 }
@@ -88,4 +93,5 @@
 wxVListBox::~wxVListBox()
 {
+    delete m_doubleBuffer;    
     delete m_selStore;
 }
@@ -225,8 +231,6 @@
             // it is, indeed, only partly visible, so scroll it into view to
             // make it entirely visible
-            if ( (size_t)m_current == GetLastVisibleLine() )
-            {
-                ScrollToLine(m_current);
-            }
+            while ( (size_t)m_current == GetLastVisibleLine() &&
+                    ScrollToLine(GetVisibleBegin()+1) );
 
             // but in any case refresh it as even if it was only partly visible
@@ -352,12 +356,27 @@
 void wxVListBox::OnPaint(wxPaintEvent& WXUNUSED(event))
 {
-    wxPaintDC dc(this);
+    // If size is larger, recalculate double buffer bitmap
+    wxSize clientSize = GetClientSize();
+
+    if ( !m_doubleBuffer ||
+         clientSize.x > m_doubleBuffer->GetWidth() ||
+         clientSize.y > m_doubleBuffer->GetHeight() )
+    {
+        delete m_doubleBuffer;
+        m_doubleBuffer = new wxBitmap(clientSize.x+25,clientSize.y+25);
+    }
+
+    wxBufferedPaintDC dc(this,*m_doubleBuffer);
 
     // the update rectangle
     wxRect rectUpdate = GetUpdateClientRect();
 
+    // Fill it with background colour
+    dc.SetBrush(GetBackgroundColour());
+    dc.Clear();
+
     // the bounding rectangle of the current line
     wxRect rectLine;
-    rectLine.width = GetClientSize().x;
+    rectLine.width = clientSize.x;
 
     // iterate over all visible lines
@@ -605,9 +624,20 @@
     if ( item != wxNOT_FOUND )
     {
-        wxCommandEvent event(wxEVT_COMMAND_LISTBOX_DOUBLECLICKED, GetId());
-        event.SetEventObject(this);
-        event.SetInt(item);
 
-        (void)GetEventHandler()->ProcessEvent(event);
+        // if item double-clicked was not yet selected, then treat
+        // this event as a left-click instead
+        if ( item == m_current )
+        {
+            wxCommandEvent event(wxEVT_COMMAND_LISTBOX_DOUBLECLICKED, GetId());
+            event.SetEventObject(this);
+            event.SetInt(item);
+
+            (void)GetEventHandler()->ProcessEvent(event);
+        }
+        else
+        {
+            OnLeftDown(eventMouse);
+        }
+    
     }
 }

 	  	 
