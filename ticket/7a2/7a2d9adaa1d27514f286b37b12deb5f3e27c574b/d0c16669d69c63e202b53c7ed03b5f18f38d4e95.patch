Index: samples/erase/erase.cpp
===================================================================
--- samples/erase/erase.cpp	(revision 73426)
+++ samples/erase/erase.cpp	(working copy)
@@ -72,9 +72,11 @@
 
     void EraseBgInPaint(bool erase) { m_eraseBgInPaint = erase; Refresh(); }
 
+
 private:
     void OnPaint( wxPaintEvent &event );
     void OnEraseBackground( wxEraseEvent &event );
+    void ClearBackground( wxDC &dc );
 
     void DoPaint(wxDC& dc);
 
@@ -360,16 +362,40 @@
     SetBackgroundColour(*wxCYAN);
 }
 
-void MyCanvas::DoPaint(wxDC& dc)
+void MyCanvas::ClearBackground( wxDC &dc )
 {
+    dc.SetBrush( wxBrush(GetBackgroundColour()) );
+    dc.SetPen( wxPen(GetBackgroundColour()) );
+    
+    dc.DrawRectangle( wxPoint(0, 0), GetVirtualSize() );
+}
+
+void MyCanvas::OnPaint( wxPaintEvent& WXUNUSED(event) )
+{
+    if ( m_useBuffer )
+    {
+        wxAutoBufferedPaintDC dc(this);
+        DoPaint( dc );
+    }
+    else 
+    {
+        wxPaintDC dc(this);
+        DoPaint( dc );
+    }
+}
+
+void MyCanvas::DoPaint( wxDC &dc )
+{
+    PrepareDC(dc);
+
     if ( m_eraseBgInPaint )
     {
         dc.SetBackground(*wxLIGHT_GREY);
-        dc.Clear();
+        ClearBackground( dc );
 
         dc.DrawText("Background erased in OnPaint", 65, 110);
     }
-    else if ( GetBackgroundStyle() == wxBG_STYLE_PAINT )
+    else if( GetBackgroundStyle() == wxBG_STYLE_PAINT )
     {
         dc.SetTextForeground(*wxRED);
         dc.DrawText("You must enable erasing background in OnPaint to avoid "
@@ -382,24 +408,6 @@
     dc.DrawText("This text is drawn from OnPaint", 65, 65);
 }
 
-void MyCanvas::OnPaint( wxPaintEvent &WXUNUSED(event) )
-{
-    if ( m_useBuffer )
-    {
-        wxAutoBufferedPaintDC dc(this);
-        PrepareDC(dc);
-
-        DoPaint(dc);
-    }
-    else
-    {
-        wxPaintDC dc(this);
-        PrepareDC(dc);
-
-        DoPaint(dc);
-    }
-}
-
 void MyCanvas::OnEraseBackground( wxEraseEvent& event )
 {
     // We must not erase the background ourselves if we asked wxPanel to erase
@@ -419,12 +427,12 @@
     wxDC& dc = *event.GetDC();
     dc.SetPen(*wxGREEN_PEN);
 
-    PrepareDC( dc );
-
     // clear any junk currently displayed
     dc.Clear();
 
-    const wxSize size = GetClientSize();
+    PrepareDC( dc );
+
+    const wxSize size = GetVirtualSize();
     for ( int x = 0; x < size.x; x += 15 )
     {
         dc.DrawLine(x, 0, x, size.y);
Index: src/msw/window.cpp
===================================================================
--- src/msw/window.cpp	(revision 73426)
+++ src/msw/window.cpp	(working copy)
@@ -4959,8 +4959,20 @@
 
         ::MapWindowPoints(NULL, GetHwnd(), (POINT *)&rc, 1);
 
-        if ( !::SetBrushOrgEx((HDC)hDC, -rc.left, -rc.top, NULL) )
+        int x_offset = -rc.left;
+        int y_offset = -rc.top;
+
+        wxScrolledWindow *scrolled = wxDynamicCast(this, wxScrolledWindow);
+        if( scrolled != NULL )
         {
+            int scrollunits_x = 1, scrollunits_y = 1;
+            scrolled->GetScrollPixelsPerUnit( &scrollunits_x, &scrollunits_y );
+            x_offset -= GetScrollPos(wxHORIZONTAL) * scrollunits_x;
+            y_offset -= GetScrollPos(wxVERTICAL) * scrollunits_y;
+        }
+
+        if ( !::SetBrushOrgEx((HDC)hDC, x_offset, y_offset, NULL) )
+        {
             wxLogLastError(wxT("SetBrushOrgEx(bg brush)"));
         }
 
