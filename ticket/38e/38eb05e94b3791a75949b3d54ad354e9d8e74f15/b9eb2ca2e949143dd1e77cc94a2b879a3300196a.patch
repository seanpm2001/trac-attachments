diff -bu1 -r wxWindows/demos/dbbrowse/browsedb.cpp wxWin/demos/dbbrowse/browsedb.cpp
--- wxWindows/demos/dbbrowse/browsedb.cpp	2001-10-04 18:44:08.000000000 +0200
+++ wxWin/demos/dbbrowse/browsedb.cpp	2003-10-17 09:13:58.000000000 +0200
@@ -33,4 +33,3 @@
 // Global structure for holding ODBC connection information
-// - darf nur einmal im Projekte definiert werden ?? Extra Databasse Klasse ?
-wxDbConnectInf DbConnectInf;		// Für DBase
+wxDbConnectInf DbConnectInf;
 
@@ -44,3 +43,3 @@
 //----------------------------------------------------------------------------------------
-char *GetExtendedDBErrorMsg(char *ErrFile, int ErrLine)
+wxChar *GetExtendedDBErrorMsg(wxChar *ErrFile, int ErrLine)
 {
@@ -50,11 +49,11 @@
     {
-        msg += "File: ";
+        msg += _T("File: ");
         msg += ErrFile;
-        msg += "   Line: ";
-        tStr.Printf("%d",ErrLine);
+        msg += _T("   Line: ");
+        tStr.Printf(_T("%d"),ErrLine);
         msg += tStr.GetData();
-        // msg += "\n";
+        // msg += _T("\n");
     }
-    msg.Append ("\nODBC errors:\n");
-    // msg += "\n";
+    msg.Append (_T("\nODBC errors:\n"));
+    // msg += _T("\n");
     /* Scan through each database connection displaying
@@ -73,4 +72,4 @@
                 msg.Append(pDbList->PtrDb->errorList[i]);
-                if (strcmp(pDbList->PtrDb->errorList[i],"") != 0)
-                    msg.Append("\n");
+                if (wxStrcmp(pDbList->PtrDb->errorList[i],_T("")) != 0)
+                    msg.Append(_T("\n"));
             }
@@ -78,4 +77,4 @@
     }
-    msg += "\n";
-    return (char*) (const char*) msg;
+    msg += _T("\n");
+    return (wxChar*) (const wxChar*) msg;
 }  // GetExtendedDBErrorMsg
@@ -86,5 +85,5 @@
     PointerToNULL(0);
-    ODBCSource = "";			 // ODBC data source name (created with ODBC Administrator under Win95/NT)
-    UserName   = "";			 // database username - must already exist in the data source
-    Password   = "";			 // password database username
+    ODBCSource = _T("");  // ODBC data source name (created with ODBC Administrator under Win95/NT)
+    UserName   = _T("");  // database username - must already exist in the data source
+    Password   = _T("");  // password database username
     OnFillSqlTyp();
@@ -129,3 +128,3 @@
     DlgUser *p_Dlg;
-    p_Dlg = new DlgUser(pDoc->p_MainFrame,pDoc,"");
+    p_Dlg = new DlgUser(pDoc->p_MainFrame,pDoc,_T(""));
     p_Dlg->s_DSN	  = ODBCSource;
@@ -209,3 +208,3 @@
     int   i=0;
-    char			 s_temp[1024+1];
+    wxChar s_temp[1024+1];
     long			 l_temp;
@@ -220,3 +219,3 @@
         Temp0.Printf(_("\n-E-> BrowserDB::OnGetNext - ODBC-Error with GetNext \n-E-> "));
-        Temp0 += GetExtendedDBErrorMsg(__FILE__,__LINE__);
+        Temp0 += GetExtendedDBErrorMsg(__TFILE__,__LINE__);
         wxLogMessage(Temp0);
@@ -228,3 +227,3 @@
         {
-            strcpy((cl_BrowserDB+i)->tableName,"-E->");
+            wxStrcpy((cl_BrowserDB+i)->tableName,_T("-E->"));
             i_dbDataType = (cl_BrowserDB+i)->pColFor->i_dbDataType;
@@ -252,3 +251,3 @@
             case DB_DATA_TYPE_VARCHAR:
-                strcpy(s_temp,"");
+                wxStrcpy(s_temp,_T(""));
                 if (!db_BrowserDB->GetData(i+1,(cl_BrowserDB+i)->pColFor->i_dbDataType,&s_temp,sizeof(s_temp), &cb))
@@ -256,3 +255,3 @@
                     Temp0.Printf(_("\n-E-> BrowserDB::OnGetNext - ODBC-Error with GetNext of >%s<.\n-E-> "),(cl_BrowserDB+i)->tableName);
-                    Temp0 += GetExtendedDBErrorMsg(__FILE__,__LINE__);
+                    Temp0 += GetExtendedDBErrorMsg(__TFILE__,__LINE__);
                     wxLogMessage(Temp0);
@@ -260,3 +259,3 @@
                 Temp0.Printf((cl_BrowserDB+i)->pColFor->s_Field,s_temp);
-                strcpy((cl_BrowserDB+i)->tableName,Temp0.c_str());
+                wxStrcpy((cl_BrowserDB+i)->tableName,Temp0.c_str());
                 break;
@@ -267,3 +266,3 @@
                     Temp0.Printf(_("\n-E-> BrowserDB::OnGetData - ODBC-Error with GetNext \n-E-> "));
-                    Temp0 += GetExtendedDBErrorMsg(__FILE__,__LINE__);
+                    Temp0 += GetExtendedDBErrorMsg(__TFILE__,__LINE__);
                 }
@@ -272,3 +271,3 @@
                     Temp0.Printf((cl_BrowserDB+i)->pColFor->s_Field,l_temp);
-                    strcpy((cl_BrowserDB+i)->tableName,Temp0.c_str());
+                    wxStrcpy((cl_BrowserDB+i)->tableName,Temp0.c_str());
                 }
@@ -280,3 +279,3 @@
                     Temp0.Printf(_("\n-E-> BrowserDB::OnGetData - ODBC-Error with GetNext \n-E-> "));
-                    Temp0 += GetExtendedDBErrorMsg(__FILE__,__LINE__);
+                    Temp0 += GetExtendedDBErrorMsg(__TFILE__,__LINE__);
                     wxMessageBox(Temp0);
@@ -286,3 +285,3 @@
                     Temp0.Printf((cl_BrowserDB+i)->pColFor->s_Field,f_temp);
-                    strcpy((cl_BrowserDB+i)->tableName,Temp0.c_str());
+                    wxStrcpy((cl_BrowserDB+i)->tableName,Temp0.c_str());
                 }
@@ -294,3 +293,3 @@
                     Temp0.Printf(_("\n-E-> BrowserDB::OnGetData - ODBC-Error with GetNext \n-E-> "));
-                    Temp0 += GetExtendedDBErrorMsg(__FILE__,__LINE__);
+                    Temp0 += GetExtendedDBErrorMsg(__TFILE__,__LINE__);
                 }
@@ -304,3 +303,3 @@
                             t_temp.hour, t_temp.minute, t_temp.second, t_temp.fraction);
-                        strcpy((cl_BrowserDB+i)->tableName,Temp0.c_str());
+                        wxStrcpy((cl_BrowserDB+i)->tableName,Temp0.c_str());
                     }
@@ -311,3 +310,3 @@
                             t_temp.hour, t_temp.minute, t_temp.second, t_temp.fraction);
-                        strcpy((cl_BrowserDB+i)->tableName,Temp0.c_str());
+                        wxStrcpy((cl_BrowserDB+i)->tableName,Temp0.c_str());
                     }
@@ -317,3 +316,3 @@
                             t_temp.hour, t_temp.minute, t_temp.second, t_temp.fraction);
-                        strcpy((cl_BrowserDB+i)->tableName,Temp0.c_str());
+                        wxStrcpy((cl_BrowserDB+i)->tableName,Temp0.c_str());
                     }
@@ -331,3 +330,3 @@
                 Temp0.Printf(_("-E-> unknown Format(%d) - sql(%d)"),(cl_BrowserDB+i)->pColFor->i_dbDataType,(cl_BrowserDB+i)->pColFor->i_sqlDataType);
-                strcpy((cl_BrowserDB+i)->tableName,Temp0.c_str());
+                wxStrcpy((cl_BrowserDB+i)->tableName,Temp0.c_str());
                 break;
@@ -347,9 +346,9 @@
     //---------------------------------------------------------------------------------------
-    SQLStmt.sprintf("SELECT * FROM %s",db_BrowserDB->SQLTableName(tb_Name.c_str()));
-    if (!db_BrowserDB->ExecSql((char *)(SQLStmt.GetData())))
+    SQLStmt.sprintf(_T("SELECT * FROM %s"),db_BrowserDB->SQLTableName(tb_Name.c_str()));
+    if (!db_BrowserDB->ExecSql((wxChar *)(SQLStmt.GetData())))
     {
         Temp0.Printf(_("\n-E-> BrowserDB::OnSelect - ODBC-Error with ExecSql of >%s<.\n-E-> "),tb_Name.c_str());
-        Temp0 += GetExtendedDBErrorMsg(__FILE__,__LINE__);
+        Temp0 += GetExtendedDBErrorMsg(__TFILE__,__LINE__);
         wxLogMessage(Temp0);
-        wxMessageBox("-E-> BrowserDB::OnSelect - GetData()");
+        wxMessageBox(_T("-E-> BrowserDB::OnSelect - GetData()"));
         return FALSE;
@@ -362,6 +361,6 @@
     //---------------------------------------------------------------------------------------
-    if (!db_BrowserDB->ExecSql((char *)(SQLStmt.GetData())))
+    if (!db_BrowserDB->ExecSql((wxChar *)(SQLStmt.GetData())))
     {
         Temp0.Printf(_("\n-E-> BrowserDB::OnSelect - ODBC-Error with ExecSql of >%s<.\n-E-> "),tb_Name.c_str());
-        Temp0 += GetExtendedDBErrorMsg(__FILE__,__LINE__);
+        Temp0 += GetExtendedDBErrorMsg(__TFILE__,__LINE__);
         wxLogMessage(Temp0);
@@ -383,6 +382,6 @@
     //---------------------------------------------------------------------------------------
-    if (!db_BrowserDB->ExecSql((char *)(SQLStmt.GetData())))
+    if (!db_BrowserDB->ExecSql((wxChar *)(SQLStmt.GetData())))
     {
         Temp0.Printf(_("\n-E-> BrowserDB::OnExecSQL - ODBC-Error with ExecSql of >%s<.\n-E-> "),SQLStmt.c_str());
-        Temp0 += GetExtendedDBErrorMsg(__FILE__,__LINE__);
+        Temp0 += GetExtendedDBErrorMsg(__TFILE__,__LINE__);
         if (!Quiet)
@@ -390,3 +389,3 @@
         else
-            wxMessageBox("-E-> BrowserDB::OnExecSql - ExecSql()");
+            wxMessageBox(_T("-E-> BrowserDB::OnExecSql - ExecSql()"));
         return FALSE;
@@ -403,4 +402,4 @@
 {
-    char UName[255];
-    strcpy(UName,UserName);
+    wxChar UName[255];
+    wxStrcpy(UName,UserName);
     ct_BrowserDB = db_BrowserDB->GetCatalog(UName);
@@ -410,7 +409,7 @@
 //----------------------------------------------------------------------------------------
-wxDbColInf* BrowserDB::OnGetColumns(char *tableName, UWORD numCols, int Quiet)
+wxDbColInf* BrowserDB::OnGetColumns(wxChar *tableName, UWORD numCols, int Quiet)
 {
-    char UName[255];
+    wxChar UName[255];
     int i;
-    strcpy(UName,UserName);
+    wxStrcpy(UName,UserName);
     cl_BrowserDB = db_BrowserDB->GetColumns(tableName,&numCols,UName);
@@ -461,26 +460,26 @@
 {
-    i_SqlTyp[1]  = SQL_C_BINARY;	 s_SqlTyp[1]  = "SQL_C_BINARY";
-    i_SqlTyp[2]  = SQL_C_BIT;		 s_SqlTyp[2]  = "SQL_C_BIT";
-    i_SqlTyp[3]  = SQL_C_BOOKMARK;	 s_SqlTyp[3]  = "SQL_C_BOOKMARK";
-    i_SqlTyp[4]  = SQL_C_CHAR;		 s_SqlTyp[4]  = "SQL_C_CHAR";
-    i_SqlTyp[5]  = SQL_C_DATE;		 s_SqlTyp[5]  = "SQL_C_DATE";
-    i_SqlTyp[6]  = SQL_C_DEFAULT;	 s_SqlTyp[6]  = "SQL_C_DEFAULT";
-    i_SqlTyp[7]  = SQL_C_DOUBLE;	 s_SqlTyp[7]  = "SQL_C_DOUBLE";
-    i_SqlTyp[8]  = SQL_C_FLOAT; 	 s_SqlTyp[8]  = "SQL_C_FLOAT";
-    i_SqlTyp[9]  = SQL_C_LONG;		 s_SqlTyp[9]  = "SQL_C_LONG";
-    i_SqlTyp[10] = SQL_C_SHORT; 	 s_SqlTyp[10] = "SQL_C_SHORT";
-    i_SqlTyp[11] = SQL_C_SLONG; 	 s_SqlTyp[11] = "SQL_C_SLONG";
-    i_SqlTyp[12] = SQL_C_SSHORT;	 s_SqlTyp[12] = "SQL_C_SSHORT";
-    i_SqlTyp[13] = SQL_C_STINYINT;	 s_SqlTyp[13] = "SQL_C_STINYINT";
-    i_SqlTyp[14] = SQL_C_TIME;		 s_SqlTyp[14] = "SQL_C_TIME";
-    i_SqlTyp[15] = SQL_C_TIMESTAMP;  s_SqlTyp[15] = "SQL_C_TIMESTAMP";
-    i_SqlTyp[16] = SQL_C_TINYINT;	 s_SqlTyp[16] = "SQL_C_TINYINT";
-    i_SqlTyp[17] = SQL_C_ULONG; 	 s_SqlTyp[17] = "SQL_C_ULONG";
-    i_SqlTyp[18] = SQL_C_USHORT;	 s_SqlTyp[18] = "SQL_C_USHORT";
-    i_SqlTyp[19] = SQL_C_UTINYINT;	 s_SqlTyp[19] = "SQL_C_UTINYINT";
-    i_SqlTyp[20] = SQL_VARCHAR; 	 s_SqlTyp[20] = "SQL_VARCHAR";
-    i_SqlTyp[21] = SQL_NUMERIC; 	 s_SqlTyp[21] = "SQL_NUMERIC";
-    i_SqlTyp[22] = SQL_LONGVARCHAR;  s_SqlTyp[22] = "SQL_LONGVARCHAR";
-    i_SqlTyp[23] = SQL_REAL;		 s_SqlTyp[23] = "SQL_REAL";
-    i_SqlTyp[0]  = 23;				 s_SqlTyp[0]  = "";
+    i_SqlTyp[1]  = SQL_C_BINARY;    s_SqlTyp[1]  = _T("SQL_C_BINARY");
+    i_SqlTyp[2]  = SQL_C_BIT;       s_SqlTyp[2]  = _T("SQL_C_BIT");
+    i_SqlTyp[3]  = SQL_C_BOOKMARK;  s_SqlTyp[3]  = _T("SQL_C_BOOKMARK");
+    i_SqlTyp[4]  = SQL_C_CHAR;      s_SqlTyp[4]  = _T("SQL_C_CHAR");
+    i_SqlTyp[5]  = SQL_C_DATE;      s_SqlTyp[5]  = _T("SQL_C_DATE");
+    i_SqlTyp[6]  = SQL_C_DEFAULT;   s_SqlTyp[6]  = _T("SQL_C_DEFAULT");
+    i_SqlTyp[7]  = SQL_C_DOUBLE;    s_SqlTyp[7]  = _T("SQL_C_DOUBLE");
+    i_SqlTyp[8]  = SQL_C_FLOAT;     s_SqlTyp[8]  = _T("SQL_C_FLOAT");
+    i_SqlTyp[9]  = SQL_C_LONG;      s_SqlTyp[9]  = _T("SQL_C_LONG");
+    i_SqlTyp[10] = SQL_C_SHORT;     s_SqlTyp[10] = _T("SQL_C_SHORT");
+    i_SqlTyp[11] = SQL_C_SLONG;     s_SqlTyp[11] = _T("SQL_C_SLONG");
+    i_SqlTyp[12] = SQL_C_SSHORT;    s_SqlTyp[12] = _T("SQL_C_SSHORT");
+    i_SqlTyp[13] = SQL_C_STINYINT;  s_SqlTyp[13] = _T("SQL_C_STINYINT");
+    i_SqlTyp[14] = SQL_C_TIME;      s_SqlTyp[14] = _T("SQL_C_TIME");
+    i_SqlTyp[15] = SQL_C_TIMESTAMP; s_SqlTyp[15] = _T("SQL_C_TIMESTAMP");
+    i_SqlTyp[16] = SQL_C_TINYINT;   s_SqlTyp[16] = _T("SQL_C_TINYINT");
+    i_SqlTyp[17] = SQL_C_ULONG;     s_SqlTyp[17] = _T("SQL_C_ULONG");
+    i_SqlTyp[18] = SQL_C_USHORT;    s_SqlTyp[18] = _T("SQL_C_USHORT");
+    i_SqlTyp[19] = SQL_C_UTINYINT;  s_SqlTyp[19] = _T("SQL_C_UTINYINT");
+    i_SqlTyp[20] = SQL_VARCHAR;     s_SqlTyp[20] = _T("SQL_VARCHAR");
+    i_SqlTyp[21] = SQL_NUMERIC;     s_SqlTyp[21] = _T("SQL_NUMERIC");
+    i_SqlTyp[22] = SQL_LONGVARCHAR; s_SqlTyp[22] = _T("SQL_LONGVARCHAR");
+    i_SqlTyp[23] = SQL_REAL;        s_SqlTyp[23] = _T("SQL_REAL");
+    i_SqlTyp[0]  = 23;              s_SqlTyp[0]  = _T("");
 }
@@ -490,7 +489,7 @@
 {
-    i_dbTyp[1]	 = DB_DATA_TYPE_VARCHAR;	 s_dbTyp[1]  = "DB_DATA_TYPE_VARCHAR";
-    i_dbTyp[2]	 = DB_DATA_TYPE_INTEGER;	 s_dbTyp[2]  = "DB_DATA_TYPE_INTEGER";
-    i_dbTyp[3]	 = DB_DATA_TYPE_FLOAT;		 s_dbTyp[3]  = "DB_DATA_TYPE_FLOAT";
-    i_dbTyp[4]	 = DB_DATA_TYPE_DATE;		 s_dbTyp[4]  = "DB_DATA_TYPE_DATE";
-    i_dbTyp[0]	 = 4;						 s_dbTyp[0]   = "";
+    i_dbTyp[1] = DB_DATA_TYPE_VARCHAR; s_dbTyp[1] = _T("DB_DATA_TYPE_VARCHAR");
+    i_dbTyp[2] = DB_DATA_TYPE_INTEGER; s_dbTyp[2] = _T("DB_DATA_TYPE_INTEGER");
+    i_dbTyp[3] = DB_DATA_TYPE_FLOAT;   s_dbTyp[3] = _T("DB_DATA_TYPE_FLOAT");
+    i_dbTyp[4] = DB_DATA_TYPE_DATE;    s_dbTyp[4] = _T("DB_DATA_TYPE_DATE");
+    i_dbTyp[0] = 4;                    s_dbTyp[0] = _T("");
 }
diff -bu1 -r wxWindows/demos/dbbrowse/browsedb.h wxWin/demos/dbbrowse/browsedb.h
--- wxWindows/demos/dbbrowse/browsedb.h	2001-05-24 20:31:48.000000000 +0200
+++ wxWin/demos/dbbrowse/browsedb.h	2003-10-17 08:46:03.000000000 +0200
@@ -72,3 +72,3 @@
     wxDbInf*       OnGetCatalog(int Quiet);
-    wxDbColInf*    OnGetColumns(char *tableName, UWORD numCols,int Quiet);
+    wxDbColInf*    OnGetColumns(wxChar *tableName, UWORD numCols,int Quiet);
     void           OnFillSqlTyp();
diff -bu1 -r wxWindows/demos/dbbrowse/dbbrowse.cpp wxWin/demos/dbbrowse/dbbrowse.cpp
--- wxWindows/demos/dbbrowse/dbbrowse.cpp	2002-01-08 23:27:18.000000000 +0100
+++ wxWin/demos/dbbrowse/dbbrowse.cpp	2003-10-16 21:42:34.000000000 +0200
@@ -57,4 +57,4 @@
     // set the language to use   // Help.??  (.std = english, .de = german etc.)
-    const char *language = NULL; // czech, german, french, polish
-    const char *langid   = NULL; // std = english , cz, de = german, fr = french, pl = polish
+    const wxChar *language = NULL; // czech, german, french, polish
+    const wxChar *langid   = NULL; // std = english , cz, de = german, fr = french, pl = polish
     wxString   s_LangHelp;       // Directory/Filename.hhp of the Help-Project file
@@ -98,4 +98,4 @@
     //---------------------------------------------------------------------------------------
-    SetVendorName("mj10777");           // Needed to get Configuration Information
-    SetAppName("DBBrowse");            // "" , also needed for s_LangHelp
+    SetVendorName(_T("mj10777"));           // Needed to get Configuration Information
+    SetAppName(_T("DBBrowse"));            // "" , also needed for s_LangHelp
     //---------------------------------------------------------------------------------------
@@ -114,3 +114,3 @@
     // p_ProgramCfg->DeleteAll();           // This is how the Config can be erased
-    p_ProgramCfg->SetPath("/");          // Start at root
+    p_ProgramCfg->SetPath(_T("/"));          // Start at root
     //---------------------------------------------------------------------------------------
@@ -121,5 +121,5 @@
         Temp0.Empty();
-        p_ProgramCfg->Read("/Local/langid",&Temp0); // >const char *langid< can't be used here
-        if (Temp0 == "")
-            langid = "std";  // Standard language is "std" = english
+        p_ProgramCfg->Read(_T("/Local/langid"),&Temp0); // >const char *langid< can't be used here
+        if (Temp0 == _T(""))
+            langid = _T("std");  // Standard language is "std" = english
         else
@@ -127,25 +127,25 @@
     }
-    Temp0.Printf("%s",langid);
+    Temp0.Printf(_T("%s"),langid);
     //---------------------------------------------------------------------------------------
     // Support the following languages  (std = english)
-    if ((Temp0 == "a")  || (Temp0 == "cz") || (Temp0 == "de") ||
-        (Temp0 == "fr") || (Temp0 == "pl"))
+    if ((Temp0 == _T("a"))  || (Temp0 == _T("cz")) || (Temp0 == _T("de")) ||
+        (Temp0 == _T("fr")) || (Temp0 == _T("pl")))
     { // The three-letter language-string codes are only valid in Windows NT and Windows 95.
-        if (Temp0 == "cz")
-            language = "czech";  // csy or czech
-        if ((Temp0 == "de") || (Temp0 == "a"))
+        if (Temp0 == _T("cz"))
+            language = _T("czech");  // csy or czech
+        if ((Temp0 == _T("de")) || (Temp0 == _T("a")))
         {
-            language = "german";  // deu or german
-            if (Temp0 == "a")
-            { langid = Temp0 = "de"; }  // Austrian = german
+            language = _T("german");  // deu or german
+            if (Temp0 == _T("a"))
+            { langid = Temp0 = _T("de"); }  // Austrian = german
         } // german / austrian
-        if (Temp0 == "fr")
-            language = "french";  // fra or french
-        if (Temp0 == "pl")
-            language = "polish";  // plk or polish
+        if (Temp0 == _T("fr"))
+            language = _T("french");  // fra or french
+        if (Temp0 == _T("pl"))
+            language = _T("polish");  // plk or polish
         if (!m_locale.Init(language, langid, language)) // Don't do this for english (std)
         { // You should recieve errors here for cz and pl since there is no cz/ and pl/ directory
-            wxLogMessage("-E-> %s : SetLocale error : langid(%s) ; language(%s)",GetAppName().c_str(),langid,language);
-            langid = "std";
-            language = "C";  // english, english-aus , -can , -nz , -uk , -usa
+            wxLogMessage(_T("-E-> %s : SetLocale error : langid(%s) ; language(%s)"),GetAppName().c_str(),langid,language);
+            langid = _T("std");
+            language = _T("C");  // english, english-aus , -can , -nz , -uk , -usa
         }
@@ -156,3 +156,3 @@
             m_locale.AddCatalog(Temp0.c_str());
-            m_locale.AddCatalog("help");
+            m_locale.AddCatalog(_T("help"));
         }
@@ -161,27 +161,27 @@
     {
-        langid = "std";
-        language = "C";  // english, english-aus , -can , -nz , -uk , -usa
+        langid = _T("std");
+        language = _T("C");  // english, english-aus , -can , -nz , -uk , -usa
     }
-    s_Language.Printf("%s",language);                       // language is a pointer
-    s_LangId.Printf("%s",langid);                           // langid   is a pointer
-    p_ProgramCfg->Write("/Local/language",s_Language);
-    p_ProgramCfg->Write("/Local/langid",s_LangId);
-    s_LangHelp.Printf("help.%s/%s.hhp",s_LangId.c_str(),GetAppName().c_str()); // "help.std/Garantie.hhp";
+    s_Language.Printf(_T("%s"),language);                       // language is a pointer
+    s_LangId.Printf(_T("%s"),langid);                           // langid   is a pointer
+    p_ProgramCfg->Write(_T("/Local/language"),s_Language);
+    p_ProgramCfg->Write(_T("/Local/langid"),s_LangId);
+    s_LangHelp.Printf(_T("help.%s/%s.hhp"),s_LangId.c_str(),GetAppName().c_str()); // "help.std/Garantie.hhp";
     s_LangHelp = s_LangHelp.Lower();                       // A must for Linux
     //---------------------------------------------------------------------------------------
-    Temp0 = "NONE";                               // I don't remember why I did this
-    p_ProgramCfg->Write("/NONE",Temp0);           // I don't remember why I did this
-    p_ProgramCfg->Write("/Paths/NONE",Temp0);     // I don't remember why I did this
-    p_ProgramCfg->Write("/MainFrame/NONE",Temp0); // I don't remember why I did this
+    Temp0 = _T("NONE");                               // I don't remember why I did this
+    p_ProgramCfg->Write(_T("/NONE"),Temp0);           // I don't remember why I did this
+    p_ProgramCfg->Write(_T("/Paths/NONE"),Temp0);     // I don't remember why I did this
+    p_ProgramCfg->Write(_T("/MainFrame/NONE"),Temp0); // I don't remember why I did this
     //---------------------------------------------------------------------------------------
-    p_ProgramCfg->Write("/Paths/Work",wxGetCwd()); // Get current Working Path
-    p_ProgramCfg->SetPath("/");
+    p_ProgramCfg->Write(_T("/Paths/Work"),wxGetCwd()); // Get current Working Path
+    p_ProgramCfg->SetPath(_T("/"));
     //---------------------------------------------------------------------------------------
     // restore frame position and size, if empty start Values (1,1) and (750,600)
-    int x = p_ProgramCfg->Read("/MainFrame/x", 1), y = p_ProgramCfg->Read("/MainFrame/y", 1),
-        w = p_ProgramCfg->Read("/MainFrame/w", 750), h = p_ProgramCfg->Read("/MainFrame/h", 600);
+    int x = p_ProgramCfg->Read(_T("/MainFrame/x"), 1), y = p_ProgramCfg->Read(_T("/MainFrame/y"), 1),
+        w = p_ProgramCfg->Read(_T("/MainFrame/w"), 750), h = p_ProgramCfg->Read(_T("/MainFrame/h"), 600);
     //---------------------------------------------------------------------------------------
     // Create the main frame window
-    Temp0.Printf("%s - %s",GetAppName().c_str(),GetVendorName().c_str());
-    frame = new MainFrame((wxFrame *) NULL,(char *) Temp0.c_str(),wxPoint(x,y),wxSize(w,h));
+    Temp0.Printf(_T("%s - %s"),GetAppName().c_str(),GetVendorName().c_str());
+    frame = new MainFrame((wxFrame *) NULL,(wxChar *) Temp0.c_str(),wxPoint(x,y),wxSize(w,h));
     //---------------------------------------------------------------------------------------
@@ -246,3 +246,3 @@
     { // You should recieve errors here for fr since there is no help.fr/ but a fr/ directory
-        wxLogMessage("-E-> %s : AddBook error : s_LangHelp(%s)",GetAppName().c_str(),s_LangHelp.c_str());
+        wxLogMessage(_T("-E-> %s : AddBook error : s_LangHelp(%s)"),GetAppName().c_str(),s_LangHelp.c_str());
     }
@@ -265,3 +265,3 @@
 //----------------------------------------------------------------------------------------
-MainFrame::MainFrame(wxFrame *frame, char *title,  const wxPoint& pos, const wxSize& size):
+MainFrame::MainFrame(wxFrame *frame, wxChar *title,  const wxPoint& pos, const wxSize& size):
 wxFrame(frame, -1, title,  pos, size)
@@ -287,7 +287,7 @@
     GetClientSize(&w, &h); w -= DiffW; h -= DiffH;
-    p_ProgramCfg->Write("/MainFrame/x", (long) x);
-    p_ProgramCfg->Write("/MainFrame/y", (long) y);
-    p_ProgramCfg->Write("/MainFrame/w", (long) w);
-    p_ProgramCfg->Write("/MainFrame/h", (long) h);
-    p_ProgramCfg->Write("/MainFrame/Sash", (long) pDoc->Sash);
+    p_ProgramCfg->Write(_T("/MainFrame/x"), (long) x);
+    p_ProgramCfg->Write(_T("/MainFrame/y"), (long) y);
+    p_ProgramCfg->Write(_T("/MainFrame/w"), (long) w);
+    p_ProgramCfg->Write(_T("/MainFrame/h"), (long) h);
+    p_ProgramCfg->Write(_T("/MainFrame/Sash"), (long) pDoc->Sash);
     // clean up: Set() returns the active config object as Get() does, but unlike
@@ -320,3 +320,3 @@
 {
-    p_Help->Display("Main page");
+    p_Help->Display(_T("Main page"));
 }
diff -bu1 -r wxWindows/demos/dbbrowse/dbbrowse.h wxWin/demos/dbbrowse/dbbrowse.h
--- wxWindows/demos/dbbrowse/dbbrowse.h	2001-02-12 19:23:44.000000000 +0100
+++ wxWin/demos/dbbrowse/dbbrowse.h	2003-10-16 21:31:10.000000000 +0200
@@ -15,3 +15,3 @@
 public:
-    MainFrame(wxFrame *frame, char *title,  const wxPoint& pos, const wxSize& size);
+    MainFrame(wxFrame *frame, wxChar *title,  const wxPoint& pos, const wxSize& size);
     ~MainFrame(void);
diff -bu1 -r wxWindows/demos/dbbrowse/dbgrid.cpp wxWin/demos/dbbrowse/dbgrid.cpp
--- wxWindows/demos/dbbrowse/dbgrid.cpp	2001-02-01 20:24:44.000000000 +0100
+++ wxWin/demos/dbbrowse/dbgrid.cpp	2003-10-17 10:17:24.000000000 +0200
@@ -69,5 +69,5 @@
     //---------------------------------------------------------------------------------------
-    popupMenu1 = new wxMenu("");
+    popupMenu1 = new wxMenu(_T(""));
     popupMenu1->Append(GRID_EDIT, _("Edit Modus"));
-    popupMenu2 = new wxMenu("");
+    popupMenu2 = new wxMenu(_T(""));
     popupMenu2->Append(GRID_BROWSE, _("Browse Modus"));
@@ -121,3 +121,3 @@
                     {
-                        Temp0.Printf("%06d",z+1);  SetRowLabelValue(z,Temp0);          // Set Row Lable Value
+                        Temp0.Printf(_T("%06d"),z+1);  SetRowLabelValue(z,Temp0);          // Set Row Lable Value
                         (db_Br+i_Which)->OnGetNext((ct_BrowserDB->pTableInf+ValidTable)->numCols,FALSE);
@@ -190,6 +190,6 @@
 {
-    logBuf = "";
-    logBuf << "Selected cell at row " << ev.GetRow()
-        << " col " << ev.GetCol();
-    wxLogMessage( "%s", logBuf.c_str() );
+    logBuf = _T("");
+    logBuf << _T("Selected cell at row ") << ev.GetRow()
+        << _T(" col ") << ev.GetCol();
+    wxLogMessage( _T("%s"), logBuf.c_str() );
     // you must call Skip() if you want the default processing
@@ -208,6 +208,6 @@
 {
-    logBuf = "DBGrid::OnLabelLeftClick : ";
+    logBuf = _T("DBGrid::OnLabelLeftClick : ");
     if ( ev.GetRow() != -1 )
     {
-        logBuf << "row label " << ev.GetRow();
+        logBuf << _T("row label ") << ev.GetRow();
     }
@@ -215,3 +215,3 @@
     {
-        logBuf << "col label " << ev.GetCol();
+        logBuf << _T("col label ") << ev.GetCol();
     }
@@ -219,9 +219,9 @@
     {
-        logBuf << "corner label";
+        logBuf << _T("corner label");
     }
     if ( ev.ShiftDown() )
-        logBuf << " (shift down)";
+        logBuf << _T(" (shift down)");
 
     // wxLogMessage( "%s", logBuf.c_str() );
-    logBuf += "\n";
+    logBuf += _T("\n");
     wxLogMessage(logBuf.c_str());
@@ -239,6 +239,6 @@
     //-------------------
-    logBuf = "DBGrid::OnLabelRightClick : ";
+    logBuf = _T("DBGrid::OnLabelRightClick : ");
     if ( ev.GetRow() != -1 )
     {
-        logBuf << "row label " << ev.GetRow();
+        logBuf << _T("row label ") << ev.GetRow();
     }
@@ -246,3 +246,3 @@
     {
-        logBuf << "col label " << ev.GetCol();
+        logBuf << _T("col label ") << ev.GetCol();
     }
@@ -250,9 +250,9 @@
     {
-        logBuf << "corner label";
+        logBuf << _T("corner label");
     }
     if ( ev.ShiftDown() )
-        logBuf << " (shift down)";
+        logBuf << _T(" (shift down)");
 
     // wxLogMessage( "%s", logBuf.c_str() );
-    logBuf += "\n";
+    logBuf += _T("\n");
     wxLogMessage(logBuf.c_str());
@@ -264,6 +264,6 @@
 {
-    logBuf = "DBGrid::OnLabelLeftDClick : ";
+    logBuf = _T("DBGrid::OnLabelLeftDClick : ");
     if ( ev.GetRow() != -1 )
     {
-        logBuf << "row label " << ev.GetRow();
+        logBuf << _T("row label ") << ev.GetRow();
     }
@@ -271,3 +271,3 @@
     {
-        logBuf << "col label " << ev.GetCol();
+        logBuf << _T("col label ") << ev.GetCol();
     }
@@ -275,9 +275,9 @@
     {
-        logBuf << "corner label";
+        logBuf << _T("corner label");
     }
     if ( ev.ShiftDown() )
-        logBuf << " (shift down)";
+        logBuf << _T(" (shift down)");
 
-    // wxLogMessage( "%s", logBuf.c_str() );
-    logBuf += "\n";
+    // wxLogMessage( _T("%s"), logBuf.c_str() );
+    logBuf += _T("\n");
     wxLogMessage(logBuf.c_str());
@@ -289,6 +289,6 @@
 {
-    logBuf = "DBGrid::OnLabelRightDClick : ";
+    logBuf = _T("DBGrid::OnLabelRightDClick : ");
     if ( ev.GetRow() != -1 )
     {
-        logBuf << "row label " << ev.GetRow();
+        logBuf << _T("row label ") << ev.GetRow();
     }
@@ -296,3 +296,3 @@
     {
-        logBuf << "col label " << ev.GetCol();
+        logBuf << _T("col label ") << ev.GetCol();
     }
@@ -300,8 +300,8 @@
     {
-        logBuf << "corner label";
+        logBuf << _T("corner label");
     }
     if ( ev.ShiftDown() )
-        logBuf << " (shift down)";
+        logBuf << _T(" (shift down)");
     // wxLogMessage( "%s", logBuf.c_str() );
-    logBuf += "\n";
+    logBuf += _T("\n");
     wxLogMessage(logBuf.c_str());
@@ -313,8 +313,8 @@
 {
-    logBuf = "DBGrid::OnCellLeftClick : ";
-    logBuf << "Cell at row " << ev.GetRow()
-        << " col " << ev.GetCol();
+    logBuf = _T("DBGrid::OnCellLeftClick : ");
+    logBuf << _T("Cell at row ") << ev.GetRow()
+        << _T(" col ") << ev.GetCol();
     // wxLogMessage( "%s", logBuf.c_str() );
     // wxMessageBox(logBuf);
-    logBuf += "\n";
+    logBuf += _T("\n");
     wxLogMessage(logBuf.c_str());
@@ -329,8 +329,8 @@
 {
-    logBuf = "DBGrid::OnCellRightClick : ";
-    logBuf << "Cell at row " << ev.GetRow()
-        << " col " << ev.GetCol();
+    logBuf = _T("DBGrid::OnCellRightClick : ");
+    logBuf << _T("Cell at row ") << ev.GetRow()
+        << _T(" col ") << ev.GetCol();
     // wxLogMessage( "%s", logBuf.c_str() );
     // wxMessageBox(logBuf);
-    logBuf += "\n";
+    logBuf += _T("\n");
     wxLogMessage(logBuf.c_str());
@@ -345,8 +345,8 @@
 {
-    logBuf = "DBGrid::OnCellLeftDClick : ";
-    logBuf << "Cell at row " << ev.GetRow()
-        << " col " << ev.GetCol();
+    logBuf = _T("DBGrid::OnCellLeftDClick : ");
+    logBuf << _T("Cell at row ") << ev.GetRow()
+        << _T(" col ") << ev.GetCol();
     // wxLogMessage( "%s", logBuf.c_str() );
     // wxMessageBox(logBuf);
-    logBuf += "\n";
+    logBuf += _T("\n");
     wxLogMessage(logBuf.c_str());
@@ -361,8 +361,8 @@
 {
-    logBuf = "DBGrid::OnCellRightDClick : ";
-    logBuf << "Cell at row " << ev.GetRow()
-        << " col " << ev.GetCol();
+    logBuf = _T("DBGrid::OnCellRightDClick : ");
+    logBuf << _T("Cell at row ") << ev.GetRow()
+        << _T(" col ") << ev.GetCol();
     // wxLogMessage( "%s", logBuf.c_str() );
     // wxMessageBox(logBuf);
-    logBuf += "\n";
+    logBuf += _T("\n");
     wxLogMessage(logBuf.c_str());
@@ -377,8 +377,8 @@
 {
-    logBuf = "DBGrid::OnCellChange : ";
-    logBuf << "Cell at row " << ev.GetRow()
-        << " col " << ev.GetCol();
+    logBuf = _T("DBGrid::OnCellChange : ");
+    logBuf << _T("Cell at row ") << ev.GetRow()
+        << _T(" col ") << ev.GetCol();
     // wxLogMessage( "%s", logBuf.c_str() );
     // wxMessageBox(logBuf);
-    logBuf += "\n";
+    logBuf += _T("\n");
     wxLogMessage(logBuf.c_str());
@@ -393,6 +393,6 @@
 {
-    logBuf = "DBGrid::OnRowSize : ";
-    logBuf << "Resized row " << ev.GetRowOrCol();
+    logBuf = _T("DBGrid::OnRowSize : ");
+    logBuf << _T("Resized row ") << ev.GetRowOrCol();
     // wxLogMessage( "%s", logBuf.c_str() );
-    logBuf += "\n";
+    logBuf += _T("\n");
     wxLogMessage(logBuf.c_str());
@@ -404,6 +404,6 @@
 {
-    logBuf = "DBGrid::OnColSize : ";
-    logBuf << "Resized col " << ev.GetRowOrCol();
+    logBuf = _T("DBGrid::OnColSize : ");
+    logBuf << _T("Resized col ") << ev.GetRowOrCol();
     // wxLogMessage( "%s", logBuf.c_str() );
-    logBuf += "\n";
+    logBuf += _T("\n");
     wxLogMessage(logBuf.c_str());
@@ -415,8 +415,8 @@
 {
-    logBuf = "DBGrid::OnRangeSelected : ";
-    logBuf  << "Selected cells from row " << ev.GetTopRow()
-        << " col " << ev.GetLeftCol()
-        << " to row " << ev.GetBottomRow()
-        << " col " << ev.GetRightCol();
-    logBuf += "\n";
+    logBuf = _T("DBGrid::OnRangeSelected : ");
+    logBuf  << _T("Selected cells from row ") << ev.GetTopRow()
+        << _T(" col ") << ev.GetLeftCol()
+        << _T(" to row ") << ev.GetBottomRow()
+        << _T(" col ") << ev.GetRightCol();
+    logBuf += _T("\n");
     // wxLogMessage( "%s", logBuf.c_str() );
diff -bu1 -r wxWindows/demos/dbbrowse/dbtree.cpp wxWin/demos/dbbrowse/dbtree.cpp
--- wxWindows/demos/dbbrowse/dbtree.cpp	2001-02-12 19:23:44.000000000 +0100
+++ wxWin/demos/dbbrowse/dbtree.cpp	2003-10-17 10:54:17.000000000 +0200
@@ -38,5 +38,5 @@
 //----------------------------------------------------------------------------------------
-static inline const char *bool2String(bool b)
+static inline const wxChar *bool2String(bool b)
 {
-    return b ? "" : "not ";
+    return b ? _T("") : _T("not ");
 }
@@ -67,4 +67,5 @@
 {
+    const int image_size = 16;
     // Make an image list containing small icons
-    p_imageListNormal = new wxImageList(16, 16, TRUE);
+    p_imageListNormal = new wxImageList(image_size, image_size, TRUE);
     // should correspond to TreeIc_xxx enum
@@ -82,12 +83,12 @@
 #endif
-    p_imageListNormal->Add(wxICON(aLogo));
-    p_imageListNormal->Add(wxICON(DsnClosed));
-    p_imageListNormal->Add(wxICON(DsnOpen));
-    p_imageListNormal->Add(wxICON(TAB));
-    p_imageListNormal->Add(wxICON(VIEW));
-    p_imageListNormal->Add(wxICON(COL));
-    p_imageListNormal->Add(wxICON(KEY));
-    p_imageListNormal->Add(wxICON(KEYF));
-    p_imageListNormal->Add(wxICON(DocOpen));
-    p_imageListNormal->Add(wxICON(DocOpen));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(aLogo)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(DsnClosed)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(DsnOpen)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(TAB)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(VIEW)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(COL)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(KEY)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(KEYF)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(DocOpen)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(DocOpen)).ConvertToImage().Rescale(image_size, image_size)));
     SetImageList(p_imageListNormal);
@@ -136,4 +137,4 @@
         { // Use the wxDatabase Information
-            Temp0.Printf("%s - (%s) (%s)", s_DSN.c_str(),ct_BrowserDB->catalog, ct_BrowserDB->schema);
-            Root = AddRoot(Temp0,TreeIc_DsnOpen,TreeIc_DsnOpen,new DBTreeData("Root"));
+            Temp0.Printf(_T("%s - (%s) (%s)"), s_DSN.c_str(),ct_BrowserDB->catalog, ct_BrowserDB->schema);
+            Root = AddRoot(Temp0,TreeIc_DsnOpen,TreeIc_DsnOpen,new DBTreeData(_T("Root")));
             for (x=0;x<ct_BrowserDB->numTables;x++)
@@ -142,5 +143,5 @@
                 TableType = 0; // TABLE = 1 ; VIEW = 2 ; 0 We are not interested in
-                if (!wxStrcmp((ct_BrowserDB->pTableInf+x)->tableType,"TABLE"))    // only TABLES
+                if (!wxStrcmp((ct_BrowserDB->pTableInf+x)->tableType,_T("TABLE")))    // only TABLES
                     TableType = 1;
-                if (!wxStrcmp((ct_BrowserDB->pTableInf+x)->tableType,"VIEW"))     // and  VIEWS
+                if (!wxStrcmp((ct_BrowserDB->pTableInf+x)->tableType,_T("VIEW")))     // and  VIEWS
                     TableType = 2;
@@ -148,3 +149,3 @@
                 {
-                    Temp1.Printf("TN(%s",(ct_BrowserDB->pTableInf+x)->tableName);
+                    Temp1.Printf(_T("TN(%s"),(ct_BrowserDB->pTableInf+x)->tableName);
                     //----
@@ -168,3 +169,3 @@
                         {
-                            Temp1.Printf("FN(%s",((ct_BrowserDB->pTableInf+x)->pColInf+y)->colName);
+                            Temp1.Printf(_T("FN(%s"),((ct_BrowserDB->pTableInf+x)->pColInf+y)->colName);
                             // Here is where we find out if the Column is a Primary / Foreign Key
@@ -172,9 +173,9 @@
                             {
-                                Temp2.Printf("(%d) - %s",((ct_BrowserDB->pTableInf+x)->pColInf+y)->PkCol,((ct_BrowserDB->pTableInf+x)->pColInf+y)->colName);
+                                Temp2.Printf(_T("(%d) - %s"),((ct_BrowserDB->pTableInf+x)->pColInf+y)->PkCol,((ct_BrowserDB->pTableInf+x)->pColInf+y)->colName);
                                 Docu = AppendItem(Folder,Temp2,TreeIc_KEY,TreeIc_KEY,new DBTreeData(Temp1));
                                 Temp2 = ((ct_BrowserDB->pTableInf+x)->pColInf+y)->PkTableName;
-                                if (Temp2 == "")
+                                if (Temp2 == _T(""))
                                     Temp2 = _("None");
                                 Temp2.Printf(_("This Primary Key is used in the following Tables : %s"),Temp2.c_str());
-                                Funkt = AppendItem(Docu,Temp2,TreeIc_DocClosed,TreeIc_DocOpen,new DBTreeData("KEY"));
+                                Funkt = AppendItem(Docu,Temp2,TreeIc_DocClosed,TreeIc_DocOpen,new DBTreeData(_T("KEY")));
                             }
@@ -184,6 +185,6 @@
                                 {
-                                    Temp2.Printf("(%d) - %s",((ct_BrowserDB->pTableInf+x)->pColInf+y)->FkCol,((ct_BrowserDB->pTableInf+x)->pColInf+y)->colName);
+                                    Temp2.Printf(_T("(%d) - %s"),((ct_BrowserDB->pTableInf+x)->pColInf+y)->FkCol,((ct_BrowserDB->pTableInf+x)->pColInf+y)->colName);
                                     Docu = AppendItem(Folder,Temp2,TreeIc_KEYF,TreeIc_KEYF,new DBTreeData(Temp1));
                                     Temp2.Printf(_("This Foreign Key comes from the following Table : %s"),((ct_BrowserDB->pTableInf+x)->pColInf+y)->FkTableName);
-                                    Funkt = AppendItem(Docu,Temp2,TreeIc_DocClosed,TreeIc_DocOpen,new DBTreeData("KEYF"));
+                                    Funkt = AppendItem(Docu,Temp2,TreeIc_DocClosed,TreeIc_DocOpen,new DBTreeData(_T("KEYF")));
                                 }
@@ -192,4 +193,4 @@
                             }
-                            SQL_TYPE.Printf("SQL_C_???? (%d)",((ct_BrowserDB->pTableInf+x)->pColInf+y)->sqlDataType);
-                            DB_TYPE.Printf("DB_DATA_TYPE_???? (%d)",((ct_BrowserDB->pTableInf+x)->pColInf+y)->dbDataType);
+                            SQL_TYPE.Printf(_T("SQL_C_???? (%d)"),((ct_BrowserDB->pTableInf+x)->pColInf+y)->sqlDataType);
+                            DB_TYPE.Printf(_T("DB_DATA_TYPE_???? (%d)"),((ct_BrowserDB->pTableInf+x)->pColInf+y)->dbDataType);
                             for (i=1;i<=(pDoc->db_Br+i_Which)->i_SqlTyp[0];i++)
@@ -198,3 +199,3 @@
                                 {
-                                    SQL_TYPE.Printf("%s(%d) ; ",(pDoc->db_Br+i_Which)->s_SqlTyp[i].c_str(),(pDoc->db_Br+i_Which)->i_SqlTyp[i]);
+                                    SQL_TYPE.Printf(_T("%s(%d) ; "),(pDoc->db_Br+i_Which)->s_SqlTyp[i].c_str(),(pDoc->db_Br+i_Which)->i_SqlTyp[i]);
                                 }
@@ -206,3 +207,3 @@
                                 {
-                                    DB_TYPE.Printf("%s(%d)",(pDoc->db_Br+i_Which)->s_dbTyp[i].c_str(),(pDoc->db_Br+i_Which)->i_dbTyp[i]);
+                                    DB_TYPE.Printf(_T("%s(%d)"),(pDoc->db_Br+i_Which)->s_dbTyp[i].c_str(),(pDoc->db_Br+i_Which)->i_dbTyp[i]);
                                 }
@@ -212,3 +213,3 @@
                             Funkt = AppendItem(Docu,SQL_TYPE,TreeIc_DocClosed,TreeIc_DocOpen,new DBTreeData(SQL_TYPE));
-                            SQL_TYPE.Printf("%10s %d,%d",((ct_BrowserDB->pTableInf+x)->pColInf+y)->typeName,
+                            SQL_TYPE.Printf(_T("%10s %d,%d"),((ct_BrowserDB->pTableInf+x)->pColInf+y)->typeName,
                                 ((ct_BrowserDB->pTableInf+x)->pColInf+y)->columnSize,((ct_BrowserDB->pTableInf+x)->pColInf+y)->decimalDigits);
@@ -247,3 +248,3 @@
     popupMenu1 = NULL;
-    popupMenu1 = new wxMenu("");
+    popupMenu1 = new wxMenu(_T(""));
     popupMenu1->Append(DATA_DB, _("Make wxDB.cpp/h "));
@@ -252,3 +253,3 @@
     popupMenu2 = NULL;
-    popupMenu2 = new wxMenu("");
+    popupMenu2 = new wxMenu(_T(""));
     popupMenu2->Append(DATA_SHOW, _("Show Data"));
@@ -272,5 +273,5 @@
         int Treffer = 0;
-        Temp1.Printf("%s",item->m_desc.c_str());
+        Temp1.Printf(_T("%s"),item->m_desc.c_str());
         //-------------------------------------------------------------------------------------
-        if (Temp1.Contains("ODBC-"))
+        if (Temp1.Contains(_T("ODBC-")))
         {
@@ -318,5 +319,5 @@
         int Treffer = 0;
-        Temp1.Printf("%s",item->m_desc.c_str());
+        Temp1.Printf(_T("%s"),item->m_desc.c_str());
         //--------------------------------------------------------------------------------------
-        if (!wxStrcmp("Root",Temp1))
+        if (!wxStrcmp(_T("Root"),Temp1))
         {
@@ -327,3 +328,3 @@
         {
-            Temp2.Printf("TN(%s",(ct_BrowserDB->pTableInf+i)->tableName);
+            Temp2.Printf(_T("TN(%s"),(ct_BrowserDB->pTableInf+i)->tableName);
             if (!wxStrcmp(Temp2,Temp1))
@@ -364,6 +365,6 @@
     {
-        Temp1.Printf("%s",item->m_desc.c_str());
+        Temp1.Printf(_T("%s"),item->m_desc.c_str());
         for (i=0;i<ct_BrowserDB->numTables;i++)
         {
-            Temp2.Printf("TN(%s",(ct_BrowserDB->pTableInf+i)->tableName);
+            Temp2.Printf(_T("TN(%s"),(ct_BrowserDB->pTableInf+i)->tableName);
             if (!wxStrcmp(Temp2,Temp1))
@@ -401,6 +402,6 @@
     {
-        Temp1.Printf("%s",item->m_desc.c_str());
+        Temp1.Printf(_T("%s"),item->m_desc.c_str());
         for (i=0;i<ct_BrowserDB->numTables;i++)
         {
-            Temp2.Printf("TN(%s",(ct_BrowserDB->pTableInf+i)->tableName);
+            Temp2.Printf(_T("TN(%s"),(ct_BrowserDB->pTableInf+i)->tableName);
             if (!wxStrcmp(Temp2,Temp1))
diff -bu1 -r wxWindows/demos/dbbrowse/dlguser.cpp wxWin/demos/dbbrowse/dlguser.cpp
--- wxWindows/demos/dbbrowse/dlguser.cpp	2001-02-12 19:23:44.000000000 +0100
+++ wxWin/demos/dbbrowse/dlguser.cpp	2003-10-17 10:24:12.000000000 +0200
@@ -45,3 +45,3 @@
     
-    SetBackgroundColour("wheat");
+    SetBackgroundColour(_T("wheat"));
     pDoc = p_Doc;
@@ -62,3 +62,3 @@
     
-    m_UserName = new wxTextCtrl(this, -1, "");
+    m_UserName = new wxTextCtrl(this, -1, _T(""));
     m_UserName->SetFont(* pDoc->ft_Doc);
@@ -84,3 +84,3 @@
     
-    m_Password = new wxTextCtrl(this, -1, "", wxDefaultPosition, wxDefaultSize, wxTE_PASSWORD);
+    m_Password = new wxTextCtrl(this, -1, _T(""), wxDefaultPosition, wxDefaultSize, wxTE_PASSWORD);
     m_Password->SetFont(* pDoc->ft_Doc);
@@ -115,4 +115,4 @@
     
-    s_User = "";
-    s_Password = "";
+    s_User = _T("");
+    s_Password = _T("");
     Layout();
@@ -123,3 +123,3 @@
 {
-    wxString Temp; Temp.Printf(">>> %s <<<",s_DSN.c_str());
+    wxString Temp; Temp.Printf(_T(">>> %s <<<"),s_DSN.c_str());
     SetTitle(Temp);
diff -bu1 -r wxWindows/demos/dbbrowse/doc.cpp wxWin/demos/dbbrowse/doc.cpp
--- wxWindows/demos/dbbrowse/doc.cpp	2002-01-08 23:27:18.000000000 +0100
+++ wxWin/demos/dbbrowse/doc.cpp	2003-10-17 08:17:10.000000000 +0200
@@ -58,3 +58,3 @@
     i_PageNr       = 0;
-    s_BColour      = "WHEAT";
+    s_BColour      = _T("WHEAT");
     ft_Doc         = new wxFont(wxSystemSettings::GetFont(wxSYS_SYSTEM_FONT));
@@ -98,3 +98,3 @@
 {
-    Sash = p_ProgramCfg->Read("/MainFrame/Sash", 200);
+    Sash = p_ProgramCfg->Read(_T("/MainFrame/Sash"), 200);
     // wxMessageBox("OnInitView() - Begin ","-I->MainDoc::OnInitView");
@@ -111,5 +111,5 @@
     //---------------------------------------------------------------------------------------
-    wxBitmap *p_FolderClose = new wxBitmap("PgmCtrl"); //, wxBITMAP_TYPE_BMP_RESOURCE); // BJO20000115
+    wxBitmap *p_FolderClose = new wxBitmap(_T("PgmCtrl")); //, wxBITMAP_TYPE_BMP_RESOURCE); // BJO20000115
     //---------------------------------------------------------------------------------------
-    p_TabArea->AddTab(p_PgmCtrl,"PgmCtrl",p_FolderClose);
+    p_TabArea->AddTab(p_PgmCtrl,_T("PgmCtrl"),p_FolderClose);
     delete p_FolderClose;      // Memory leak
@@ -131,3 +131,3 @@
     //---------------------------------------------------------------------------------------
-    p_PageArea->AddTab(p_LogWin,_("LogBook"), "what is this?" );
+    p_PageArea->AddTab(p_LogWin,_("LogBook"), _T("what is this?") );
     i_TabNr  = p_TabArea->GetTabCount()-1;  // Add one when a new AddTab is done;
@@ -154,5 +154,5 @@
 {
-    char Dsn[SQL_MAX_DSN_LENGTH + 1];
-    char DsDesc[255]; // BJO20002501 instead of 512
-    Temp0 = "";
+    wxChar Dsn[SQL_MAX_DSN_LENGTH + 1];
+    wxChar DsDesc[255]; // BJO20002501 instead of 512
+    Temp0 = _T("");
     i_DSN = 0;       // Counter
@@ -178,3 +178,3 @@
         i_DSN++;   // How many Dsn have we ?
-        KeyString.Printf("%s%c%s",Dsn, sep, DsDesc);
+        KeyString.Printf(_T("%s%c%s"),Dsn, sep, DsDesc);
         s_SortDSNList.Add(Dsn);
@@ -185,4 +185,4 @@
     
-    char ** s_SortDSN = s_SortDSNList.ListToArray();        //BJO
-    char ** s_SortDsDesc = s_SortDsDescList.ListToArray();  //BJO
+    wxChar ** s_SortDSN = s_SortDSNList.ListToArray();        //BJO
+    wxChar ** s_SortDsDesc = s_SortDsDescList.ListToArray();  //BJO
     //---------------------------------------------------------------------------------------
@@ -194,8 +194,8 @@
         KeyString = KeyString.AfterFirst(sep);
-        strcpy(s_SortDsDesc[i],KeyString.c_str());
+        wxStrcpy(s_SortDsDesc[i],KeyString.c_str());
         (p_DSN+i)->Dsn = s_SortDSN[i];
         (p_DSN+i)->Drv = s_SortDsDesc[i];
-        (p_DSN+i)->Usr = "";
-        (p_DSN+i)->Pas = "";
-        Temp0.Printf("%02d) Dsn(%s) DsDesc(%s)",i,(p_DSN+i)->Dsn.c_str(),(p_DSN+i)->Drv.c_str());
+        (p_DSN+i)->Usr = _T("");
+        (p_DSN+i)->Pas = _T("");
+        Temp0.Printf(_T("%02d) Dsn(%s) DsDesc(%s)"),i,(p_DSN+i)->Dsn.c_str(),(p_DSN+i)->Drv.c_str());
         wxLogMessage(Temp0);
@@ -223,5 +223,6 @@
     {
-        wxMessageBox(_("No Dataset names found in ODBC!\n" \
-            "           Program will exit!\n\n" \
-            "                       Ciao"),"-E-> Fatal situation");
+        wxString message = _("No Dataset names found in ODBC!\n");
+        message += _("           Program will exit!\n\n");
+        message += _("                       Ciao");
+        wxMessageBox( message,_("-E-> Fatal situation"));
         return FALSE;
@@ -242,3 +243,3 @@
         p_TabArea->Show(TRUE);     // Activate the Window
-        OnChosenTbl(77,"");
+        OnChosenTbl(77,_T(""));
     }
@@ -248,3 +249,3 @@
         wxTR_HAS_BUTTONS | wxSUNKEN_BORDER);
-    p_TabArea->AddTab(p_DBTree,(p_DSN+Which)->Dsn," ? ");
+    p_TabArea->AddTab(p_DBTree,(p_DSN+Which)->Dsn,_T(" ? "));
     p_DBTree->i_ViewNr = p_TabArea->GetTabCount()-1;
@@ -292,3 +293,3 @@
             wxSUNKEN_BORDER);
-        p_TabArea->AddTab(p_DBGrid, Table, "");
+        p_TabArea->AddTab(p_DBGrid, Table, _T(""));
         p_DBGrid->i_ViewNr = p_TabArea->GetTabCount()-1;
@@ -305,3 +306,3 @@
             wxSUNKEN_BORDER);
-        p_PageArea->AddTab(p_DBGrid, Table, "");
+        p_PageArea->AddTab(p_DBGrid, Table, _T(""));
         p_DBGrid->i_ViewNr = p_PageArea->GetTabCount()-1;
diff -bu1 -r wxWindows/demos/dbbrowse/pgmctrl.cpp wxWin/demos/dbbrowse/pgmctrl.cpp
--- wxWindows/demos/dbbrowse/pgmctrl.cpp	2001-02-12 19:23:44.000000000 +0100
+++ wxWin/demos/dbbrowse/pgmctrl.cpp	2003-10-17 10:56:39.000000000 +0200
@@ -45,5 +45,5 @@
 //----------------------------------------------------------------------------------------
-static inline const char *bool2String(bool b)
+static inline const wxChar *bool2String(bool b)
 {
-    return b ? "" : "not ";
+    return b ? _T("") : _T("not ");
 }
@@ -72,4 +72,5 @@
 {
+    const int image_size = 16;
     // Make an image list containing small icons
-    p_imageListNormal = new wxImageList(16, 16, TRUE);
+    p_imageListNormal = new wxImageList(image_size, image_size, TRUE);
     // should correspond to TreeIc_xxx enum
@@ -78,12 +79,12 @@
     // icon image, so it comes out stretched
-    p_imageListNormal->Add(wxBitmap("bitmap1", wxBITMAP_TYPE_BMP_RESOURCE));
-    p_imageListNormal->Add(wxBitmap("bitmap2", wxBITMAP_TYPE_BMP_RESOURCE));
+    p_imageListNormal->Add(wxBitmap(wxBitmap("bitmap1", wxBITMAP_TYPE_BMP_RESOURCE).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap("bitmap2", wxBITMAP_TYPE_BMP_RESOURCE).ConvertToImage().Rescale(image_size, image_size)));
 #else
-    p_imageListNormal->Add(wxICON(aLogo));
-    p_imageListNormal->Add(wxICON(DsnClosed));
-    p_imageListNormal->Add(wxICON(DsnOpen));
-    p_imageListNormal->Add(wxICON(DocClosed));
-    p_imageListNormal->Add(wxICON(DocOpen));
-    p_imageListNormal->Add(wxICON(FolderClosed));
-    p_imageListNormal->Add(wxICON(FolderOpen));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(aLogo)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(DsnClosed)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(DsnOpen)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(DocClosed)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(DocOpen)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(FolderClosed)).ConvertToImage().Rescale(image_size, image_size)));
+    p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(FolderOpen)).ConvertToImage().Rescale(image_size, image_size)));
 #endif
@@ -111,17 +112,17 @@
     Temp0.Printf(_("%s Functions"),p_ProgramCfg->GetAppName().c_str());
-    Root   = AddRoot(Temp0,TreeIc_Logo,TreeIc_Logo, new TreeData("Root"));
+    Root   = AddRoot(Temp0,TreeIc_Logo,TreeIc_Logo, new TreeData(_T("Root")));
     //---------------------------------------------------------------------------------------
-    Folder = AppendItem(Root, _("Program settings")   ,TreeIc_FolderClosed, TreeIc_FolderOpen, new TreeData("Settings"));
-    p_ProgramCfg->Read("/Local/langid",&Temp0); p_ProgramCfg->Read("/Local/language",&Temp2);
+    Folder = AppendItem(Root, _("Program settings")   ,TreeIc_FolderClosed, TreeIc_FolderOpen, new TreeData(_T("Settings")));
+    p_ProgramCfg->Read(_T("/Local/langid"),&Temp0); p_ProgramCfg->Read(_T("/Local/language"),&Temp2);
     Temp1.Printf(_("locale (%s) ; Language (%s) ; Number(%2.2f)"),Temp0.c_str(), Temp2.c_str(), dTmp); Temp0.Empty();  Temp2.Empty();
-    Docu   = AppendItem(Folder, Temp1,TreeIc_DocClosed,TreeIc_DocOpen,new TreeData("Setting Language"));
-    p_ProgramCfg->Read("/Paths/Work",&Temp0); Temp1.Printf(_("Work Path : %s"),Temp0.c_str()); Temp0.Empty();
-    Docu   = AppendItem(Folder,Temp1,TreeIc_DocClosed,TreeIc_DocOpen,new TreeData("Path Work"));
-    Docu   = AppendItem(Folder, _("Change the language to English") ,TreeIc_DocClosed,TreeIc_DocOpen,new TreeData("Language English"));
-    Docu   = AppendItem(Folder, _("Change the language to German")  ,TreeIc_DocClosed,TreeIc_DocOpen,new TreeData("Language German"));
-    Docu   = AppendItem(Folder, _("Delete all wxConfigBase Entry's"),TreeIc_DocClosed,TreeIc_DocOpen,new TreeData("wxConfigBase Delete"));
-    Folder = AppendItem(Root, "ODBC DSN",TreeIc_FolderClosed,TreeIc_FolderOpen,new TreeData("ODBC-DSN"));
+    Docu   = AppendItem(Folder, Temp1,TreeIc_DocClosed,TreeIc_DocOpen,new TreeData(_T("Setting Language")));
+    p_ProgramCfg->Read(_T("/Paths/Work"),&Temp0); Temp1.Printf(_("Work Path : %s"),Temp0.c_str()); Temp0.Empty();
+    Docu   = AppendItem(Folder,Temp1,TreeIc_DocClosed,TreeIc_DocOpen,new TreeData(_T("Path Work")));
+    Docu   = AppendItem(Folder, _("Change the language to English") ,TreeIc_DocClosed,TreeIc_DocOpen,new TreeData(_T("Language English")));
+    Docu   = AppendItem(Folder, _("Change the language to German")  ,TreeIc_DocClosed,TreeIc_DocOpen,new TreeData(_T("Language German")));
+    Docu   = AppendItem(Folder, _("Delete all wxConfigBase Entry's"),TreeIc_DocClosed,TreeIc_DocOpen,new TreeData(_T("wxConfigBase Delete")));
+    Folder = AppendItem(Root, _T("ODBC DSN"),TreeIc_FolderClosed,TreeIc_FolderOpen,new TreeData(_T("ODBC-DSN")));
     for (i=0;i<pDoc->i_DSN;i++)
     {
-        Temp0.Printf("ODBC-%s",(pDoc->p_DSN+i)->Dsn.c_str());
+        Temp0.Printf(_T("ODBC-%s"),(pDoc->p_DSN+i)->Dsn.c_str());
         Docu   = AppendItem(Folder,(pDoc->p_DSN+i)->Dsn ,TreeIc_DsnClosed,TreeIc_DsnOpen, new TreeData(Temp0));
@@ -130,3 +131,3 @@
     popupMenu1 = NULL;
-    popupMenu1 = new wxMenu("");
+    popupMenu1 = new wxMenu(_T(""));
     popupMenu1->Append(PGMCTRL_ODBC_USER, _("Set Username and Password"));
@@ -152,8 +153,8 @@
         int Treffer = 0;
-        Temp1.Printf("%s",item->m_desc.c_str());
+        Temp1.Printf(_T("%s"),item->m_desc.c_str());
         //--------------------------------------------------------------------------------------
-        if (Temp1 == "Language English")
+        if (Temp1 == _T("Language English"))
         {
-            Temp0 = "std";
-            p_ProgramCfg->Write("/Local/langid",Temp0);
+            Temp0 = _T("std");
+            p_ProgramCfg->Write(_T("/Local/langid"),Temp0);
             Temp0 = _("-I-> After a programm restart, the language will be changed to English.");
@@ -161,6 +162,6 @@
         }
-        if (Temp1 == "Language German")
+        if (Temp1 == _T("Language German"))
         {
-            Temp0 = "de";
-            p_ProgramCfg->Write("/Local/langid",Temp0);
+            Temp0 = _T("de");
+            p_ProgramCfg->Write(_T("/Local/langid"),Temp0);
             Temp0 = _("-I-> After a programm restart, the language will be changed to German.");
@@ -169,3 +170,3 @@
         //--------------------------------------------------------------------------------------
-        if (Temp1 == "wxConfigBase Delete")
+        if (Temp1 == _T("wxConfigBase Delete"))
         {
@@ -179,3 +180,3 @@
         //--------------------------------------------------------------------------------------
-        if (Temp1.Contains("ODBC-"))
+        if (Temp1.Contains(_T("ODBC-")))
         {
@@ -195,4 +196,3 @@
             //-------------------------------------------------------------------------------------
-            Temp0.Printf(_("Item '%s': %sselected, %sexpanded, %sbold,"
-                "%u children (%u immediately under this item)."),
+            Temp0.Printf(_("Item '%s': %sselected, %sexpanded, %sbold, %u children (%u immediately under this item)."),
                 item->m_desc.c_str(),
@@ -203,4 +203,4 @@
                 GetChildrenCount(itemId));
-            LogBuf.Printf("-I-> PgmCtrl::OnSelChanged - %s",Temp0.c_str());
-            wxLogMessage( "%s", LogBuf.c_str() );
+            LogBuf.Printf(_T("-I-> PgmCtrl::OnSelChanged - %s"),Temp0.c_str());
+            wxLogMessage( _T("%s"), LogBuf.c_str() );
             //-------------------------------------------------------------------------------------
@@ -222,5 +222,5 @@
         int Treffer = 0;
-        Temp1.Printf("%s",item->m_desc.c_str());
+        Temp1.Printf(_T("%s"),item->m_desc.c_str());
         //--------------------------------------------------------------------------------------
-        if (Temp1.Contains("ODBC-"))
+        if (Temp1.Contains(_T("ODBC-")))
         {
@@ -269,3 +269,3 @@
     //--------------------------------------------
-    DlgUser *p_Dlg = new DlgUser(this,pDoc,"");
+    DlgUser *p_Dlg = new DlgUser(this,pDoc,_T(""));
     //-------------------------------------------
diff -bu1 -r wxWindows/demos/dbbrowse/tabpgwin.cpp wxWin/demos/dbbrowse/tabpgwin.cpp
--- wxWindows/demos/dbbrowse/tabpgwin.cpp	2001-07-22 16:09:22.000000000 +0200
+++ wxWin/demos/dbbrowse/tabpgwin.cpp	2003-10-17 08:41:18.000000000 +0200
@@ -508,3 +508,3 @@
 #ifdef __WINDOWS__
-    font.SetFaceName("MS Sans Serif");
+    font.SetFaceName(_T("MS Sans Serif"));
 #else
@@ -738,3 +738,3 @@
 #ifdef __WINDOWS__
-    font.SetFaceName("Comic Sans MS");
+    font.SetFaceName(_T("Comic Sans MS"));
 #else
diff -bu1 -r wxWindows/demos/dbbrowse/tabpgwin.h wxWin/demos/dbbrowse/tabpgwin.h
--- wxWindows/demos/dbbrowse/tabpgwin.h	2001-07-22 16:09:22.000000000 +0200
+++ wxWin/demos/dbbrowse/tabpgwin.h	2003-10-16 19:46:54.000000000 +0200
@@ -104,3 +104,3 @@
                       wxString     tabText,            // tab label
-                      wxString     imageFileName = "", // if "", only text label is displayed
+                      wxString     imageFileName = _T(""), // if "", only text label is displayed
                       wxBitmapType imageType     = wxBITMAP_TYPE_BMP );

 	  	 
