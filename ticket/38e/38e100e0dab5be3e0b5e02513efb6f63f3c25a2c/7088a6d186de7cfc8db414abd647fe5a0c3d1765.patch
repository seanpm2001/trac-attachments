diff --git a/include/wx/tokenzr.h b/include/wx/tokenzr.h
--- a/include/wx/tokenzr.h
+++ b/include/wx/tokenzr.h
@@ -47,6 +47,9 @@ public:
     wxStringTokenizer(const wxString& str,
                       const wxString& delims = wxDEFAULT_DELIMITERS,
                       wxStringTokenizerMode mode = wxTOKEN_DEFAULT);
+        // copy ctor and assignment operator
+    wxStringTokenizer(const wxStringTokenizer& src);
+    wxStringTokenizer& operator=(const wxStringTokenizer& src);
 
         // args are same as for the non default ctor above
     void SetString(const wxString& str,
@@ -112,6 +115,8 @@ protected:
 
     bool DoHasMoreTokens() const;
 
+    void DoCopyFrom(const wxStringTokenizer& src);
+
     enum MoreTokensState
     {
         MoreTokens_Unknown,
diff --git a/src/common/tokenzr.cpp b/src/common/tokenzr.cpp
--- a/src/common/tokenzr.cpp
+++ b/src/common/tokenzr.cpp
@@ -84,6 +84,21 @@ wxStringTokenizer::wxStringTokenizer(const wxString& str,
     SetString(str, delims, mode);
 }
 
+wxStringTokenizer::wxStringTokenizer(const wxStringTokenizer& src)
+{
+    DoCopyFrom(src);
+}
+
+wxStringTokenizer& wxStringTokenizer::operator=(const wxStringTokenizer& src)
+{
+    if (this != &src)
+    {
+        DoCopyFrom(src);
+    }
+
+    return *this;
+}
+
 void wxStringTokenizer::SetString(const wxString& str,
                                   const wxString& delims,
                                   wxStringTokenizerMode mode)
@@ -136,6 +151,18 @@ void wxStringTokenizer::Reinit(const wxString& str)
     m_hasMoreTokens = MoreTokens_Unknown;
 }
 
+void wxStringTokenizer::DoCopyFrom(const wxStringTokenizer& src)
+{
+    m_string = src.m_string;
+    m_stringEnd = m_string.end();
+    m_pos = m_string.begin() + (src.m_pos - src.m_string.begin());
+    m_delims = src.m_delims;
+    m_delimsLen = src.m_delimsLen;
+    m_mode = src.m_mode;
+    m_lastDelim = src.m_lastDelim;
+    m_hasMoreTokens = src.m_hasMoreTokens;
+}
+
 // ----------------------------------------------------------------------------
 // access to the tokens
 // ----------------------------------------------------------------------------
