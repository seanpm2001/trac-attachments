diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows-CVS-20021211/distrib/msw/tmake/g95.t /wxWindows-modified/distrib/msw/tmake/g95.t
--- wxWindows-CVS-20021211/distrib/msw/tmake/g95.t	Wed Sep 25 07:20:20 2002
+++ /wxWindows-modified/distrib/msw/tmake/g95.t	Wed Dec 11 21:25:28 2002
@@ -142,13 +142,10 @@
 # Only use the WIN32 wxDirDialog if we have a recent
 # version of Mingw32
-ifeq ($(MINGW32),1)
-  ifneq "$(_GCC295)$(_GCC3)" ""
+ifeq "$(strip $(RECENT_MINGW))" "yes"
 		DIRDLGOBJ = $(MSWDIR)/dirdlg.$(OBJSUFF)
-  else
-		DIRDLGOBJ = $(GENDIR)/dirdlgg.$(OBJSUFF)
-  endif
 else
 		DIRDLGOBJ = $(GENDIR)/dirdlgg.$(OBJSUFF)
 endif
+
 ifeq ($(wxUSE_GUI),0)
   DIRDLGOBJ =
@@ -306,10 +303,6 @@
 		$(TIFFDIR)/tif_zip.o
 
-ifeq ($(MINGW32),1)
-  ifneq "$(_GCC295)$(_GCC3)" ""
-    OBJECTS = $(MSWOBJS) $(COMMONOBJS) $(GENERICOBJS) $(HTMLOBJS) $(DIRDLGOBJ) $(ADVANCEDOBJS)
-  else
-    OBJECTS = $(MSWOBJS) $(COMMONOBJS) $(GENERICOBJS) $(HTMLOBJS) $(DIRDLGOBJ)
-  endif
+ifeq "$(strip $(RECENT_MINGW))" "yes"
+  OBJECTS = $(MSWOBJS) $(COMMONOBJS) $(GENERICOBJS) $(HTMLOBJS) $(DIRDLGOBJ) $(ADVANCEDOBJS)
 else
   OBJECTS = $(MSWOBJS) $(COMMONOBJS) $(GENERICOBJS) $(HTMLOBJS) $(DIRDLGOBJ)
@@ -365,9 +358,10 @@
 
 $(WXDLL): $(OBJECTS) $(EXTRAOBJS)
-	$(CC) -shared -o $@ \
+	$(CXX) -shared -o $@ \
 	  -Wl,--output-def,$(WXDEF) \
 	  -Wl,--out-implib,$(WXLIB) \
 	  $(OBJECTS) $(EXTRAOBJS) \
-	  $(DLL_LDFLAGS) $(DLL_LDLIBS)
+	  $(DLL_LDFLAGS) $(DLL_LDLIBS) \
+      $(ALL_LDFLAGS)
 else
 
@@ -390,9 +384,9 @@
 
 $(WXDLL): $(OBJECTS) $(EXTRAOBJS) $(WXDEF)
-	$(CC) -mdll -Wl,--base-file,wx.base -s -o $@ $(LD_STUFF)
+	$(CC) -mdll -Wl,--base-file,wx.base -s -o $@ $(LD_STUFF) $(ALL_LDFLAGS)
 	$(DLLTOOL) $(DLL_STUFF)
-	$(CC) -mdll -Wl,--base-file,wx.base wx.exp -s -o $@ $(LD_STUFF)
+	$(CC) -mdll -Wl,--base-file,wx.base wx.exp -s -o $@ $(LD_STUFF) $(ALL_LDFLAGS)
 	$(DLLTOOL) $(DLL_STUFF)
-	$(CC) -mdll wx.exp -o $@ $(LD_STUFF)
+	$(CC) -mdll wx.exp -o $@ $(LD_STUFF) $(ALL_LDFLAGS)
 	-$(RM) wx.base
 	-$(RM) wx.exp
@@ -425,5 +419,5 @@
 
 $(COMMDIR)/y_tab.$(OBJSUFF):    $(COMMDIR)/y_tab.c $(COMMDIR)/lex_yy.c
-	$(CCLEX) -c $(CPPFLAGS) -DUSE_DEFINE -DYY_USE_PROTOS -o $@ $(COMMDIR)/y_tab.c
+	$(CCLEX) -c $(ALL_CPPFLAGS) $(ALL_CFLAGS) -DUSE_DEFINE -DYY_USE_PROTOS -o $@ $(COMMDIR)/y_tab.c
 
 $(COMMDIR)/y_tab.c:     $(COMMDIR)/dosyacc.c
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows-CVS-20021211/samples/makefile.g95 /wxWindows-modified/samples/makefile.g95
--- wxWindows-CVS-20021211/samples/makefile.g95	Fri Apr 12 09:15:44 2002
+++ /wxWindows-modified/samples/makefile.g95	Wed Dec 11 21:25:56 2002
@@ -16,7 +16,5 @@
 
 THISDIR=$(WXDIR)/samples
-MAKEFILE=makefile.g95
-MAKEFLAGS=WXUSINGDLL=$(WXUSINGDLL) UNICODE=$(UNICODE)
-CMDLINE=-f $(MAKEFILE) $(MAKEFLAGS)
+CMDLINE=-fmakefile.g95 WXUSINGDLL='$(WXUSINGDLL)' UNICODE='$(UNICODE)'
 
 # Mingw make may not have a shell to use, so can't use a loop here. Sigh.
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows-CVS-20021211/src/makeg95.env /wxWindows-modified/src/makeg95.env
--- wxWindows-CVS-20021211/src/makeg95.env	Thu Dec 05 06:54:46 2002
+++ /wxWindows-modified/src/makeg95.env	Wed Dec 11 21:37:36 2002
@@ -11,16 +11,51 @@
 #
 
-# If using Cygwin beta, set this to 0.
-# If using Mingw32 or Cygwin 1.0 or later, set this to 1.
+# The MINGW32 and MINGW32VERSION variables are preconfigured for
+# MinGW gcc version 3.x and must both be changed for any version
+# earlier than 3.0 or for cygwin. Editing this file is one way to
+# change them. An easier way, at least with GNU make, is to override
+# them on the command line, e.g.
+#   make MINGW32=0 MINGW32VERSION=2.8 -f makefile.g95
+
+# If using Mingw32 (any version), set this to 1.
+# If using Cygwin (any version), set this to 0.
+#
+# This agrees with the instructions given in docs/msw/install.txt .
+# Earlier versions of this makefile suggested setting MINGW32=1 for
+# recent versions of cygwin, but that would give the wrong dll entry
+# point in src/msw/makefile.g95 .
+#
+# With cygwin, there are still some problems compiling wxWindows
+# this way; './configure && make' may work better.
+#
 MINGW32=1
 
-# Set to the version you have
-#MINGW32VERSION=2.95
+# Set to your gcc version. Generally 'gcc --version' tells you
+# which version you have. But it cannot distinguish between
+# 2.95.2-1 and earlier suffix versions of 2.95 . In that case,
+# inspect the dates of bin/gcc.exe and bin/ld.exe ; if they
+# are at least
+#   2000-01-21 for gcc.exe and
+#   2000-02-04 for ld.exe
+# then use '2.95-late'.
+#
+# gcc 2.8.x and earlier require struct-return workaround
+#MINGW32VERSION=2.8
+#
+# gcc 2.95.2 and earlier requires special thunk option
+#MINGW32VERSION=2.9-early
+#
+# mingw gcc-2.95.2-1 supports '-shared'
+# windres provided with gcc-2.95.2-1 supports temp file option
+#MINGW32VERSION=2.95-late
+#
+# gcc 3.x provides a win32api.h header
 MINGW32VERSION=3.0
 
-# If we're using MSYS, or other utilities that
-# use forward slashes, we need to set this when
-# invoking the makefile from DOS, or the wrong separators
-# will be assumed.
+# If we're using MSYS, or other utilities that use forward slashes,
+# you need to set this when invoking the makefile from DOS, or the
+# wrong separators will be assumed. However, if you're using MSYS,
+# you really ought to invoke the makefile from MSYS--or, even better,
+# use the './configure && make' technique that MSYS is designed for.
 #OSTYPE=msys
 
@@ -40,10 +75,4 @@
 endif
 
-# Say yes if you have a "modern" linker that supports --shared option.
-# Note that you're probably going to wait forever for dlltool/gcc/etc
-# to build the DLL, so you should really use a newer linker that
-# supports --shared.
-LD_SUPPORTS_SHARED=yes
-
 # Set to the appropriate remove command (must support forward slashes)
 # You can get a suitable rm.exe from ports/mingw32/extra.zip on the ftp site.
@@ -56,36 +85,76 @@
 ########################## Compiler ##################################
 
-# C++ compiler
-# Put a comment before --pipe for Cygwin, remove comment for Mingw32 2.95
+ifneq (,$(findstring $(MINGW32VERSION),2.8))
+# According to Guillermo Rodriguez Garcia <guille@iies.es>, the
+# -fno-pcc-struct-return option is needed to make the standard div()
+# function work - otherwise it returns absolutely incorrect results
+# which breaks the wxImage class. This was fixed on 1998-08-14 for
+# mingw and cygwin. It is preferable not to use this option where it
+# is not required, because it is documented to cause binary API
+# incompatibility.
+  _STRUCT_RETURN_WORKAROUND=-fno-pcc-struct-return
+# Really old versions of cygwin are thought to require extra headers.
+  ifneq ($(MINGW32),1)
+    GNUWIN32EXTRA=-I$(WXDIR)/include/wx/msw/gnuwin32
+  endif
+endif
 
-# _GCC295 means GCC is GCC 2.95
-# _GCC3 mans GCC is 3.x or better (can actually just be 3.1 or better
-#                                  for Cygwin/MinGW)
-ifneq (,$(findstring 2.95, $(MINGW32VERSION)))
-  _GCC295=1
-endif
-ifneq (,$(findstring 3., $(MINGW32VERSION)))
-  _GCC3=1
-endif
-
-ifeq ($(MINGW32),1)
-  ifneq "$(_GCC295)$(_GCC3)" ""
-    ifeq ($(_GCC3),1)
-      CC = gcc --pipe
-    else
-      CC = gcc --pipe -fvtable-thunks
-    endif
-  else
-    CC = gcc
+ifneq (,$(findstring $(MINGW32VERSION),2.8 2.9-early))
+# Earlier versions of this makefile defined the following macros
+# explicitly; mingw versions since at least '2.95-late' define
+# them already.
+  OBSOLETE_DEFINES = -D_X86_=1 -DWIN32 -D_WIN32 -D__WIN32__
+endif
+# But cygwin doesn't define them, at least through its version
+# 2.95.3-4 of gcc.
+ifneq ($(MINGW32),1)
+  OBSOLETE_DEFINES = -D_X86_=1 -DWIN32 -D_WIN32 -D__WIN32__
+endif
+
+ifneq (,$(findstring $(MINGW32VERSION),2.8 2.9-early 2.95-late))
+# Versions prior to 3.0 require -fvtable-thunks for OLE support.
+# All code must be built with this option, even C++ libraries you
+# only link to, including system libraries. This option can cause
+# subtle problems with multiple inheritance.
+  _THUNK_WORKAROUND=-fvtable-thunks
+endif
+
+ifeq (,$(findstring $(MINGW32VERSION),2.8 2.9-early))
+# Versions since 2.95.2-1 support '-shared', which makes linking
+# a dll *much* faster; and the accompanying windres supports
+# '--use-temp-file', which is more robust.
+  LD_SUPPORTS_SHARED=yes
+  _USE_TEMP_FILE_IF_SUPPORTED=--use-temp-file
+# Use the WIN32 wxDirDialog only if we have a recent mingw version
+  ifeq ($(MINGW32),1)
+    RECENT_MINGW=yes
   endif
-else
-  CC = gcc
 endif
 
-# C compiler for pure C programs
-CCC = $(CC)
+ifeq (,$(findstring $(MINGW32VERSION),2.8 2.9-early 2.95-late))
+# Versions since 3.0 provide win32api.h . An old comment said to
+# define this 'if you have w32api >= 0.5', but mingw 2.95.2-1
+# has no such header.
+  _USE_W32API_HEADER_IF_SUPPORTED = -DHAVE_W32API_H
+#
+# Revision 1.70.2.6 of this file suggested '--pipe' for mingw but
+# not for cygwin, and only for version 3.0 or later. Since then,
+# the advice given here
+#   http://mail.gnu.org/pipermail/autoconf/2000-July/005479.html
+# is followed, and '--pipe' is not used unless you specify it on
+# the make command line, e.g.
+#   make CXXFLAGS=--pipe CFLAGS=--pipe -f makefile.g95
+#
+endif
+
+# C compiler
+CXX = g++
+
+# C compiler
+CC = gcc
 
 # Compiler used for LEX generated C
-CCLEX=gcc
+# For now at least, it can be the same as the regular C compiler
+CCLEX = $(CC)
 
 # This shouldn't be needed as make is supposed to define this
@@ -94,14 +163,14 @@
 
 # LEX (currently unused)
-LEX=flex # -t -L
+# LEX=flex # -t -L
 
 # YACC (currently unused)
-YACC=byacc
-#YACC=bison
+# YACC=byacc
+# YACC=bison
 
 # Settings for Cyginw/Mingw32
 # Some versions of windres cannot cope with the --preprocessor
 # option. Uncomment the RCPREPROCESSOR line below if yours can.
-RESCOMP=windres
+RESCOMP=windres $(_USE_TEMP_FILE_IF_SUPPORTED)
 RCINPUTSWITCH=-i
 RCOUTPUTSWITCH=-o
@@ -110,9 +179,8 @@
 # Note that this can cause windres to fail (Win95/98 problem?)
 # but commenting out RCPREPROCESSOR then does the trick.
-#RCPREPROCESSOR=--preprocessor "$(CC) -c -E -xc-header -DRC_INVOKED"
+#RCPREPROCESSOR=--preprocessor "$(CXX) -c -E -xc-header -DRC_INVOKED"
 
 # Don't make this too long (e.g. by adding contrib/include/wx) because it will
 # truncate the command line
-# Note: --use-temp-file removed since Mingw32 2.95.2 doesn't recognise it
 RESFLAGS=$(RCPREPROCESSOR) $(RCINCSWITCH) $(WXDIR)/include $(RCEXTRAINC) $(RCDEFSWITCH) __WIN32__ $(RCDEFSWITCH) __WIN95__ $(RCDEFSWITCH) __GNUWIN32__
 
@@ -124,7 +192,5 @@
 
 # Miscellaneous compiler options
-# GRG: the __MINGW32__ option is not needed anymore
-# add "-DHAVE_W32API_H" if you have w32api >= 0.5
-OPTIONS = -DSTRICT # -D__MINGW32__
+OPTIONS = -DSTRICT $(_USE_W32API_HEADER_IF_SUPPORTED)
 
 # Add "-mthreads" if you want to have threads under mingw32
@@ -143,12 +209,13 @@
 # default Windows icon.
 APPVER=3.50
-WINVERSION=-DWINVER=0x0350 -D__GNUWIN32__ -D__WIN32__ # Generic WIN32
+WINVERSION=-DWINVER=0x0350 -D__GNUWIN32__ # Generic WIN32
 else
 APPVER=4.0 # 3.50
-# This means 'enable Windows 95 features' (in wxWindows and in VC++ 4.0).
-WINVERSION=-DWINVER=0x0400 -D__WIN95__ -D__GNUWIN32__ -D__WIN32__
+# This means 'enable Windows 95 features' (in wxWindows and in the compiler).
+WINVERSION=-DWINVER=0x0400 -D__WIN95__ -D__GNUWIN32__
 endif
 
-CPU=i386
+# This is never used and should be expunged.
+# CPU=i386
 
 # Suffixes
@@ -173,20 +240,13 @@
 endif
 
-
-# According to Guillermo Rodriguez Garcia <guille@iies.es>, the
-# -fno-pcc-struct-return option is needed to make the standard div()
-# function work - otherwise it returns absolutely incorrect results
-# which breaks the wxImage class. This is true at least for
-# mingw32-gcc2.8.1, don't know about others.
 ifeq ($(FINAL),1)
-  OPT = -fno-pcc-struct-return -O2 -fno-rtti -fno-exceptions
+  OPT = -O2 -fno-rtti -fno-exceptions
 else
-  OPT = -fno-pcc-struct-return -fno-rtti -fno-exceptions
+  OPT = -fno-rtti -fno-exceptions
 endif
 
 # Options for ar archiver
-# AROPTIONS = crs # For IRIX and Solaris (both SYSVR4).
-AR = ar
 AROPTIONS = ruv
+AR = ar
 RANLIB = ranlib
 
@@ -219,19 +279,11 @@
 WXBASESRC=$(WXDIR)/src/common
 
-GNUWIN32EXTRA=-I$(WXDIR)/include/wx/msw/gnuwin32
-
-ifeq ($(MINGW32),1)
-  ifneq "$(findstring 2.95, $(MINGW32VERSION))" ""
-    GNUWIN32EXTRA=
-  endif
-endif
-
 #ifeq ($(MINGW32),1)
 #INC = -I$(WXINC) -I$(WXDIR)/contrib/include -I$(WXDIR)/src/png -I$(WXDIR)/src/jpeg -I$(WXDIR)/src/zlib -I$(WXDIR)/src/tiff $(EXTRAINC) $(COMPPATHS)
 #else
-INC = -I$(WXDIR)/lib/$(TOOLKIT)$(INCEXT) -I$(WXINC) -I$(WXDIR)/contrib/include -I$(WXDIR)/src/regex -I$(WXDIR)/src/png -I$(WXDIR)/src/jpeg -I$(WXDIR)/src/zlib -I$(WXDIR)/src/tiff $(EXTRAINC) $(COMPPATHS) -I$(WXDIR)/include/wx/msw/gnuwin32
+INC = -I$(WXDIR)/lib/$(TOOLKIT)$(INCEXT) -I$(WXINC) -I$(WXDIR)/contrib/include -I$(WXDIR)/src/regex -I$(WXDIR)/src/png -I$(WXDIR)/src/jpeg -I$(WXDIR)/src/zlib -I$(WXDIR)/src/tiff $(EXTRAINC) $(COMPPATHS) $(GNUWIN32EXTRA)
 #endif
 
-RCLFLAGS=-cpp "cpp -lang-c++ -DWIN32 -D_WIN32 -DRCL_INVOKED -I$(WXWIN)/include"
+RCLFLAGS=-cpp "cpp -lang-c++ $(OBSOLETE_DEFINES) -DRCL_INVOKED -I$(WXWIN)/include"
 
 ifdef WXUSINGDLL
@@ -242,5 +294,5 @@
 endif
 
-WINFLAGS=-D_X86_=1 -DWIN32 -D_WIN32 $(WINVERSION)
+WINFLAGS = $(OBSOLETE_DEFINES) $(WINVERSION)
 
 #for windows 95
@@ -283,27 +335,57 @@
 endif
 
-
-# You shouldn't need to change these...
-CPPFLAGS = $(XINCLUDE) $(INC) $(COMMON_THREADFLAGS) $(OPTIONS) $(GUI) $(DEBUGFLAGS) $(WARN) $(OPT) $(EXTRACPPFLAGS) $(EXTRADLLFLAGS)
-CFLAGS = $(XINCLUDE) $(INC) $(COMMON_THREADFLAGS) $(OPTIONS) $(GUI) $(DEBUGFLAGS) $(WARN) $(OPT) $(EXTRACFLAGS) -DWIN32_LEAN_AND_MEAN
 ifeq ($(wxUSE_GUI),1)
     WINDOWSLDFLAGS=-Wl,--subsystem,windows -mwindows
 endif
-LDFLAGS = $(WINDOWSLDFLAGS) $(COMMON_THREADFLAGS) -L$(WXDIR)/lib -L$(WXDIR)/contrib/lib $(EXTRALDFLAGS)
+
+# Note: WIN32_LEAN_AND_MEAN is defined only for C and not for C++ compiles.
+# Defining this macro means that a great deal of less commonly used stuff
+# is ignored in the windows headers, resulting in faster compiles. It can't
+# be used with some C++ source files. It just so happens that it can be
+# used with all C source files.
+
+CFLAGS = -DWIN32_LEAN_AND_MEAN
+
+WXLIBDIRS = -L$(WXDIR)/lib -L$(WXDIR)/contrib/lib
+
+# You shouldn't need to change these flags, which are merely composed of
+# the options selected above. You can add more flags by specifying them on
+# the make command line, e.g.
+#   make CXXFLAGS='-O3 -march=i686' -f makefile.g95
+# The gnu make manual says
+#   'Users expect to be able to specify CFLAGS freely themselves'
+# That was unsafe with older versions of this makefile, but now it works.
+#
+# C preprocessor flags
+# Some makefiles pass extra flags in $(EXTRACPPFLAGS); although earlier
+# versions of this file used CPPFLAGS as C++ compiler flags (instead of
+# as C preprocessor flags), it is OK to add them to the preprocessor
+# flags, which are always used for C++ compiles. Because other makefiles
+# use this method to override these flags, they are added after $(CPPFLAGS),
+# which would normally come last.
+ALL_CPPFLAGS = $(XINCLUDE) $(INC) $(CPPFLAGS) $(EXTRACPPFLAGS)
+# C and C++ compiler flags for compatibility with old gcc versions
+REQUIRED_GCC_FLAGS = $(_STRUCT_RETURN_WORKAROUND) $(_THUNK_WORKAROUND)
+# C++ compiler flags
+ALL_CXXFLAGS = $(COMMON_THREADFLAGS) $(REQUIRED_GCC_FLAGS) $(OPTIONS) $(GUI) $(DEBUGFLAGS) $(WARN) $(OPT) $(EXTRADLLFLAGS) $(CXXFLAGS)
+# C compiler flags
+ALL_CFLAGS   = $(COMMON_THREADFLAGS) $(REQUIRED_GCC_FLAGS) $(OPTIONS) $(GUI) $(DEBUGFLAGS) $(WARN) $(OPT) $(EXTRADLLFLAGS) $(CFLAGS)
+# Linker flags
+ALL_LDFLAGS  = $(COMMON_THREADFLAGS) $(WINDOWSLDFLAGS) $(WXLIBDIRS) $(EXTRALDFLAGS) $(LDFLAGS)
 
 .SUFFIXES: .rc .$(RESSUFF) .$(RSCSUFF) .cpp .cxx .cc .c
 
 .c.o:
-	$(CC) -c $(CFLAGS) -o $@ $*.c
+	$(CC)  -c $(ALL_CPPFLAGS) $(ALL_CFLAGS) -o $@ $*.c
 
 .cc.o:
-	$(CC) -c $(CPPFLAGS) -o $@ $*.cc
+	$(CXX) -c $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) -o $@ $*.cc
 
 .cxx.o:
-	$(CC) -c $(CPPFLAGS) -o $@ $*.cxx
+	$(CXX) -c $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) -o $@ $*.cxx
 
+# This '.cpp.o' rule is apparently written this way because
+# the 'tmake' file g95.t expects it.
 .$(SRCSUFF).$(OBJSUFF):
-	$(CC) -c $(CPPFLAGS) -o $@ $*.$(SRCSUFF)
-
-
+	$(CXX) -c $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) -o $@ $*.$(SRCSUFF)
 
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows-CVS-20021211/src/makeprog.g95 /wxWindows-modified/src/makeprog.g95
--- wxWindows-CVS-20021211/src/makeprog.g95	Mon Apr 08 16:17:40 2002
+++ /wxWindows-modified/src/makeprog.g95	Wed Dec 11 21:26:50 2002
@@ -15,5 +15,5 @@
 
 $(TARGET)$(GUISUFFIX)$(EXESUFF):	$(OBJECTS) $(TARGET)_resources.$(OBJSUFF) $(WXLIB)
-	$(CC) $(LDFLAGS) -o $(TARGET)$(GUISUFFIX)$(EXESUFF) $(OBJECTS) $(TARGET)_resources.$(OBJSUFF) $(LDLIBS)
+	$(CXX) $(ALL_LDFLAGS) -o $(TARGET)$(GUISUFFIX)$(EXESUFF) $(OBJECTS) $(TARGET)_resources.$(OBJSUFF) $(LDLIBS)
 
 $(TARGET)_resources.o:  $(TARGET).rc
@@ -23,5 +23,5 @@
 	-$(RM) *.o
 	-$(RM) $(TARGET)_resources.o
-	-$(RM) core 
+	-$(RM) core
 	-$(RM) *.rsc
 	-$(RM) *.res
@@ -29,3 +29,4 @@
 
 cleanall: clean
-	-$(RM) $(TARGET).exe 
+	-$(RM) $(TARGET).exe
+
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows-CVS-20021211/src/msw/makefile.g95 /wxWindows-modified/src/msw/makefile.g95
--- wxWindows-CVS-20021211/src/msw/makefile.g95	Fri Nov 08 19:30:49 2002
+++ /wxWindows-modified/src/msw/makefile.g95	Wed Dec 11 21:26:30 2002
@@ -63,10 +63,6 @@
 # Only use the WIN32 wxDirDialog if we have a recent
 # version of Mingw32
-ifeq ($(MINGW32),1)
-  ifneq "$(_GCC295)$(_GCC3)" ""
+ifeq "$(strip $(RECENT_MINGW))" "yes"
 		DIRDLGOBJ = $(MSWDIR)/dirdlg.$(OBJSUFF)
-  else
-		DIRDLGOBJ = $(GENDIR)/dirdlgg.$(OBJSUFF)
-  endif
 else
 		DIRDLGOBJ = $(GENDIR)/dirdlgg.$(OBJSUFF)
@@ -508,10 +504,6 @@
 		$(TIFFDIR)/tif_zip.o
 
-ifeq ($(MINGW32),1)
-  ifneq "$(_GCC295)$(_GCC3)" ""
-    OBJECTS = $(MSWOBJS) $(COMMONOBJS) $(GENERICOBJS) $(HTMLOBJS) $(DIRDLGOBJ) $(ADVANCEDOBJS)
-  else
-    OBJECTS = $(MSWOBJS) $(COMMONOBJS) $(GENERICOBJS) $(HTMLOBJS) $(DIRDLGOBJ)
-  endif
+ifeq "$(strip $(RECENT_MINGW))" "yes"
+  OBJECTS = $(MSWOBJS) $(COMMONOBJS) $(GENERICOBJS) $(HTMLOBJS) $(DIRDLGOBJ) $(ADVANCEDOBJS)
 else
   OBJECTS = $(MSWOBJS) $(COMMONOBJS) $(GENERICOBJS) $(HTMLOBJS) $(DIRDLGOBJ)
@@ -567,9 +559,10 @@
 
 $(WXDLL): $(OBJECTS) $(EXTRAOBJS)
-	$(CC) -shared -o $@ \
+	$(CXX) -shared -o $@ \
 	  -Wl,--output-def,$(WXDEF) \
 	  -Wl,--out-implib,$(WXLIB) \
 	  $(OBJECTS) $(EXTRAOBJS) \
-	  $(DLL_LDFLAGS) $(DLL_LDLIBS)
+	  $(DLL_LDFLAGS) $(DLL_LDLIBS) \
+      $(ALL_LDFLAGS)
 else
 
@@ -592,9 +585,9 @@
 
 $(WXDLL): $(OBJECTS) $(EXTRAOBJS) $(WXDEF)
-	$(CC) -mdll -Wl,--base-file,wx.base -s -o $@ $(LD_STUFF)
+	$(CC) -mdll -Wl,--base-file,wx.base -s -o $@ $(LD_STUFF) $(ALL_LDFLAGS)
 	$(DLLTOOL) $(DLL_STUFF)
-	$(CC) -mdll -Wl,--base-file,wx.base wx.exp -s -o $@ $(LD_STUFF)
+	$(CC) -mdll -Wl,--base-file,wx.base wx.exp -s -o $@ $(LD_STUFF) $(ALL_LDFLAGS)
 	$(DLLTOOL) $(DLL_STUFF)
-	$(CC) -mdll wx.exp -o $@ $(LD_STUFF)
+	$(CC) -mdll wx.exp -o $@ $(LD_STUFF) $(ALL_LDFLAGS)
 	-$(RM) wx.base
 	-$(RM) wx.exp
@@ -627,5 +620,5 @@
 
 $(COMMDIR)/y_tab.$(OBJSUFF):    $(COMMDIR)/y_tab.c $(COMMDIR)/lex_yy.c
-	$(CCLEX) -c $(CPPFLAGS) -DUSE_DEFINE -DYY_USE_PROTOS -o $@ $(COMMDIR)/y_tab.c
+	$(CCLEX) -c $(ALL_CPPFLAGS) $(ALL_CFLAGS) -DUSE_DEFINE -DYY_USE_PROTOS -o $@ $(COMMDIR)/y_tab.c
 
 $(COMMDIR)/y_tab.c:     $(COMMDIR)/dosyacc.c

 	  	 
