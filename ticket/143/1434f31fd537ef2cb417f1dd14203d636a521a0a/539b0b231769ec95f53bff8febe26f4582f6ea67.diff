Index: samples/minimal/minimal.cpp
===================================================================
--- samples/minimal/minimal.cpp	(revision 78405)
+++ samples/minimal/minimal.cpp	(working copy)
@@ -63,16 +63,110 @@
 public:
     // ctor(s)
     MyFrame(const wxString& title);
-
+    MyFrame(wxWindow* parent, const wxString& title, int style);
+    
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    
+    void OnButton( wxCommandEvent& event );
 
 private:
+    wxButton*   m_frameDefault;
+    wxButton*   m_frameFloat;
+    wxButton*   m_dlgShow;
+    wxButton*   m_dlgModal;
+    
     // any class wishing to process wxWidgets events must use this macro
     wxDECLARE_EVENT_TABLE();
 };
 
+class MyDialog : public wxDialog
+{
+public:
+    MyDialog( wxWindow* parent );
+
+    void OnButton( wxCommandEvent& event );
+    void OnClose( wxCloseEvent& event );
+
+    bool m_boolChoice;
+    
+};
+
+MyDialog::MyDialog( wxWindow* parent )
+{
+    Create( parent, wxID_ANY, "MyDialog" );
+
+    wxButton* butt = new wxButton( this, wxID_ANY, "click me again" );
+
+    butt->Bind( wxEVT_BUTTON, &MyDialog::OnButton, this );
+    
+}
+
+void MyDialog::OnButton( wxCommandEvent& event )
+{
+    if( m_boolChoice )
+    {
+        wxTextEntryDialog dlg( this, "message", "GetTextFromUserPromptStr" );
+        dlg.ShowModal();
+    }
+    else
+    {
+        wxMessageDialog dlgMess( this, "message dialog" );
+        dlgMess.ShowModal();
+    }
+
+    m_boolChoice = !m_boolChoice;
+}
+
+void MyDialog::OnClose( wxCloseEvent& event )
+{
+    Destroy();
+}
+
+void MyFrame::OnButton( wxCommandEvent& event )
+{
+    wxButton* butt = (wxButton*)event.GetEventObject();
+    
+    if( butt == m_frameDefault || butt == m_frameFloat )
+    {
+        wxString caption;
+        int style = wxDEFAULT_FRAME_STYLE;
+        
+        if( butt == m_frameFloat )
+        {
+            style |= wxFRAME_FLOAT_ON_PARENT;
+            caption = "wxFRAME_FLOAT_ON_PARENT";
+        }
+        else
+        {
+            caption = "wxDEFAULT_FRAME_STYLE";
+        }
+        
+        MyFrame *frame = new MyFrame( this, caption, style );
+        frame->SetPosition( this->GetPosition() += wxPoint(40,40));
+        frame->Show();
+    }
+    else
+    {
+        if ( butt == m_dlgShow )
+        {
+            MyDialog* dlg = new MyDialog( this );
+            dlg->SetPosition( this->GetPosition() += wxPoint(40,40));
+            dlg->SetTitle( "Show Dialog");
+            dlg->Bind( wxEVT_CLOSE_WINDOW, &MyDialog::OnClose, dlg );
+            dlg->Show();
+        }
+        else if ( butt == m_dlgModal )
+        {
+            MyDialog dlg( this );
+            dlg.SetPosition( this->GetPosition() += wxPoint(40,40));
+            dlg.SetTitle( "Modal Dialog");
+            dlg.ShowModal();
+        }
+    }
+}
+
 // ----------------------------------------------------------------------------
 // constants
 // ----------------------------------------------------------------------------
@@ -125,8 +219,8 @@
         return false;
 
     // create the main application window
-    MyFrame *frame = new MyFrame("Minimal wxWidgets App");
-
+    MyFrame *frame = new MyFrame( NULL, "Minimal wxWidgets App", wxDEFAULT_FRAME_STYLE );
+    
     // and show it (the frames, unlike simple controls, are not shown when
     // created initially)
     frame->Show(true);
@@ -135,6 +229,7 @@
     // loop and the application will run. If we returned false here, the
     // application would exit immediately.
     return true;
+   
 }
 
 // ----------------------------------------------------------------------------
@@ -142,8 +237,8 @@
 // ----------------------------------------------------------------------------
 
 // frame constructor
-MyFrame::MyFrame(const wxString& title)
-       : wxFrame(NULL, wxID_ANY, title)
+MyFrame::MyFrame(wxWindow* parent, const wxString& title, int style)
+       : wxFrame(parent, wxID_ANY, title, wxDefaultPosition, wxDefaultSize, style )
 {
     // set the frame icon
     SetIcon(wxICON(sample));
@@ -166,7 +261,27 @@
     // ... and attach this menu bar to the frame
     SetMenuBar(menuBar);
 #endif // wxUSE_MENUS
+    
+    wxSizer* buttSizer = new wxBoxSizer( wxVERTICAL );
+    
+    m_frameDefault = new wxButton( this, wxID_ANY, "Add Child Frame" );
+    buttSizer->Add( m_frameDefault, 0, wxALL, 15 );
+    m_frameDefault->Bind( wxEVT_BUTTON, &MyFrame::OnButton, this );
 
+    m_frameFloat = new wxButton( this, wxID_ANY, "wxFRAME_FLOAT_ON_PARENT Child Frame" );
+    buttSizer->Add( m_frameFloat, 0, wxALL, 15 );
+    m_frameFloat->Bind( wxEVT_BUTTON, &MyFrame::OnButton, this );
+
+    m_dlgShow = new wxButton( this, wxID_ANY, "Show Dialog" );
+    buttSizer->Add( m_dlgShow, 0, wxALL, 15 );
+    m_dlgShow->Bind( wxEVT_BUTTON, &MyFrame::OnButton, this );
+    
+    m_dlgModal = new wxButton( this, wxID_ANY, "ShowModal Dialog" );
+    buttSizer->Add( m_dlgModal, 0, wxALL, 15 );
+    m_dlgModal->Bind( wxEVT_BUTTON, &MyFrame::OnButton, this );
+    
+    SetSizer( buttSizer );
+    
 #if wxUSE_STATUSBAR
     // create a status bar just for fun (by default with 1 pane only)
     CreateStatusBar(2);
