--- C:/Users/T29D0~1.TIS/AppData/Local/Temp/numctrl.py-revBASE.svn000.tmp.py	ven lug  5 22:54:22 2013
+++ C:/Users/t.tissino/git/Phoenix/wx/lib/masked/numctrl.py	mar set 17 16:29:42 2013
@@ -583,7 +583,7 @@ class NumCtrl(BaseMaskedTextCtrl, NumCtrlAccessors
 
         self._integerWidth = init_args['integerWidth']
         if init_args['groupDigits']:
-            self._groupSpace = (self._integerWidth - 1) / 3
+            self._groupSpace = (self._integerWidth - 1) // 3
         else:
             self._groupSpace = 0
         intmask = '#{%d}' % (self._integerWidth + self._groupSpace)
@@ -697,7 +697,7 @@ class NumCtrl(BaseMaskedTextCtrl, NumCtrlAccessors
                 self._groupDigits = kwargs['groupDigits']
 
             if self._groupDigits:
-                self._groupSpace = (self._integerWidth - 1) / 3
+                self._groupSpace = (self._integerWidth - 1) // 3
             else:
                 self._groupSpace = 0
 
@@ -1874,7 +1874,7 @@ class NumCtrl(BaseMaskedTextCtrl, NumCtrlAccessors
 
         # adjust new selection based on grouping:
         left_len = edit_end - new_sel_start
-        numleftgroups = left_len / 3
+        numleftgroups = left_len // 3
         new_sel_start -= numleftgroups
         if numleftgroups and left_len % 3 == 0:
             new_sel_start += 1
@@ -1883,7 +1883,7 @@ class NumCtrl(BaseMaskedTextCtrl, NumCtrlAccessors
             new_sel_start += 1
 
         right_len = edit_end - new_sel_to
-        numrightgroups = right_len / 3
+        numrightgroups = right_len // 3
         new_sel_to -= numrightgroups
 
         if new_sel_to and prev[new_sel_to-1] == self._groupChar:
--- C:/Users/T29D0~1.TIS/AppData/Local/Temp/timectrl.py-revBASE.svn000.tmp.py	mer lug 10 03:15:34 2013
+++ C:/Users/t.tissino/git/Phoenix/wx/lib/masked/timectrl.py	mar set 17 16:32:24 2013
@@ -785,8 +785,8 @@ class TimeCtrl(BaseMaskedTextCtrl):
                 hour, minute, second = value.GetHour(), value.GetMinute(), value.GetSecond()
             elif isinstance(value, wx.TimeSpan):
                 totalseconds = value.GetSeconds()
-                hour = totalseconds / 3600
-                minute = totalseconds / 60 - (hour * 60)
+                hour = totalseconds // 3600
+                minute = totalseconds // 60 - (hour * 60)
                 second = totalseconds - ((hour * 3600) + (minute * 60))
 
             elif accept_mx and isinstance(value, DateTime.DateTimeType):
@@ -1045,7 +1045,7 @@ class TimeCtrl(BaseMaskedTextCtrl):
                 half_interval = wx.TimeSpan(
                                     0,      # hours
                                     0,      # minutes
-                                    interval.GetSeconds() / 2,  # seconds
+                                    interval.GetSeconds() // 2,  # seconds
                                     0)      # msec
 
                 if value < min: # min is on next day, so use value on
