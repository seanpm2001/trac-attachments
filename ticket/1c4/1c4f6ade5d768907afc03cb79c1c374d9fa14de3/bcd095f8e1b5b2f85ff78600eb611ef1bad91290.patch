Index: include/wx/cmdline.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/cmdline.h,v
retrieving revision 1.16
diff -u -r1.16 cmdline.h
--- include/wx/cmdline.h	2003/03/17 10:33:30	1.16
+++ include/wx/cmdline.h	2003/03/18 16:28:55
@@ -224,8 +224,48 @@
 public:
     static wxArrayString ConvertStringToArgs(const wxChar *cmdline);
 };
-
 #endif // wxUSE_CMDLINE_PARSER/!wxUSE_CMDLINE_PARSER
+
+#if wxUSE_NAMESPACE
+namespace wx
+{
+    typedef wxCmdLineParser CmdLineParser;
+
+#if wxUSE_CMDLINE_PARSER
+    typedef wxCmdLineEntryDesc CmdLineEntryDesc;
+
+    enum
+    {
+        CMD_LINE_OPTION_MANDATORY = wxCMD_LINE_OPTION_MANDATORY,
+        CMD_LINE_PARAM_OPTIONAL = wxCMD_LINE_PARAM_OPTIONAL,
+        CMD_LINE_PARAM_MULTIPLE = wxCMD_LINE_PARAM_MULTIPLE,
+        CMD_LINE_OPTION_HELP = wxCMD_LINE_OPTION_HELP,
+        CMD_LINE_NEEDS_SEPARATOR = wxCMD_LINE_NEEDS_SEPARATOR
+    };
+    
+    // Works for comparison, not for assignment i.e. wx::CmdLineParamType is not
+    // the same as a wxCmdLineParamType.  Mabey I should make them anonyomous?
+    enum CmdLineParamType
+    {
+        CMD_LINE_VAL_STRING = wxCMD_LINE_VAL_STRING,
+        CMD_LINE_VAL_NUMBER = wxCMD_LINE_VAL_NUMBER,
+        CMD_LINE_VAL_DATE = wxCMD_LINE_VAL_DATE,
+        CMD_LINE_VAL_NONE = wxCMD_LINE_VAL_NONE
+    };
+    
+    enum CmdLineEntryType
+    {
+        CMD_LINE_SWITCH = wxCMD_LINE_SWITCH,
+        CMD_LINE_OPTION = wxCMD_LINE_OPTION,
+        CMD_LINE_PARAM = wxCMD_LINE_PARAM,
+        CMD_LINE_NONE = wxCMD_LINE_NONE
+    };
+
+#endif
+    // wxUSE_CMDLINE_PARSER
+};
+#endif
+    // wxUSE_NAMESPACE
 
 #endif // _WX_CMDLINE_H_
 
Index: include/wx/datetime.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/datetime.h,v
retrieving revision 1.41
diff -u -r1.41 datetime.h
--- include/wx/datetime.h	2003/03/17 10:33:30	1.41
+++ include/wx/datetime.h	2003/03/18 16:29:03
@@ -1617,6 +1617,22 @@
                                : (wxDateTime::WeekDay)(wd - 1);
 }
 
+#if wxUSE_NAMESPACE
+namespace wx
+{
+    typedef wxDateTime DateTime;
+    typedef wxTimeSpan TimeSpan;
+    typedef wxDateSpan DateSpan;
+    typedef wxDateTimeWorkDays DatetimeWorkDays;
+    typedef wxDateTimeHolidayAuthority DateTimeHolidayAuthority;
+    
+    inline WXDLLEXPORT void NextMonth(DateTime::Month& m) {wxNextMonth(m);};
+    inline WXDLLEXPORT void PrevMonth(DateTime::Month& m) {wxPrevMonth(m);};
+    inline WXDLLEXPORT void NextWDay(DateTime::WeekDay& wd) {wxNextWDay(wd);};
+    inline WXDLLEXPORT void PrevWDay(DateTime::WeekDay& wd) {wxPrevWDay(wd);};
+};
+#endif // wxUSE_NAMESPACE
+
 #endif // wxUSE_DATETIME
 
 #endif // _WX_DATETIME_H
Index: include/wx/gdicmn.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/gdicmn.h,v
retrieving revision 1.63
diff -u -r1.63 gdicmn.h
--- include/wx/gdicmn.h	2003/03/02 22:35:42	1.63
+++ include/wx/gdicmn.h	2003/03/18 16:29:04
@@ -564,5 +564,16 @@
 // set global cursor
 extern void WXDLLEXPORT wxSetCursor(const wxCursor& cursor);
 
+#if wxUSE_NAMESPACE
+namespace wx
+{
+    typedef wxRect Rect;
+    typedef wxPoint Point;
+    typedef wxRealPoint RealPoint;
+    typedef wxSize Size;
+};
+#endif
+    // wxUSE_NAMESPACE
+
 #endif
     // _WX_GDICMNH__
Index: include/wx/region.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/region.h,v
retrieving revision 1.9
diff -u -r1.9 region.h
--- include/wx/region.h	2003/01/04 09:22:53	1.9
+++ include/wx/region.h	2003/03/18 16:29:05
@@ -17,5 +17,21 @@
 #include "wx/os2/region.h"
 #endif
 
+#if wxUSE_NAMESPACE
+namespace wx
+{
+    typedef wxRegion Region;
+    typedef wxRegionIterator RegionIterator;
+    
+    enum RegionContain
+    {
+        OutRegion = wxOutRegion,
+        PartRegion = wxPartRegion,
+        InRegion = wxInRegion
+    };
+};
+#endif
+    // wxUSE_NAMESPACE
+
 #endif
     // _WX_REGION_H_BASE_
Index: include/wx/string.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/string.h,v
retrieving revision 1.149
diff -u -r1.149 string.h
--- include/wx/string.h	2003/03/17 10:33:32	1.149
+++ include/wx/string.h	2003/03/18 16:29:09
@@ -1268,4 +1268,15 @@
 
 #endif  // wxSTD_STRING_COMPATIBILITY
 
+#if wxUSE_NAMESPACE
+namespace wx
+{
+    typedef wxString String;
+    inline const String& GetEmptyString() { return *(String *)&wxEmptyString; };
+    typedef wxStringBuffer StringBuffer;
+    typedef wxArrayString ArrayString;
+};
+#endif
+    // wxUSE_NAMESPACE
+
 #endif  // _WX_WXSTRINGH__
Index: include/wx/variant.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/variant.h,v
retrieving revision 1.19
diff -u -r1.19 variant.h
--- include/wx/variant.h	2003/02/06 00:53:43	1.19
+++ include/wx/variant.h	2003/03/18 16:29:10
@@ -304,5 +304,14 @@
 
 extern wxVariant WXDLLEXPORT wxNullVariant;
 
+#if wxUSE_NAMESPACE
+namespace wx
+{
+    typedef wxVariantData VariantData;
+    typedef wxVariant Variant;
+};
+#endif
+    // wxUSE_NAMESPACE
+
 #endif
     // _WX_VARIANT_H_
Index: include/wx/mac/setup0.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/mac/setup0.h,v
retrieving revision 1.15
diff -u -r1.15 setup0.h
--- include/wx/mac/setup0.h	2003/02/28 23:44:45	1.15
+++ include/wx/mac/setup0.h	2003/03/18 16:29:15
@@ -91,6 +91,17 @@
 // Recommended setting: 0 (the new calculations are more correct!)
 #define wxDIALOG_UNIT_COMPATIBILITY   1
 
+// This setting defines whether namespace support should be turned on.  It is
+// incomplete and enums dont work perfectly (namespaced values can be used for 
+// comparison but not in all cases for parameter passing).  Turning it on will 
+// not affect the existing symbols in the default namespace (i.e wxString will 
+// coexist with wx::String).
+//
+// Default is 0
+//
+// Recommended setting 0
+#define wxUSE_NAMESPACE 0
+
 // ----------------------------------------------------------------------------
 // debugging settings
 // ----------------------------------------------------------------------------
Index: include/wx/msw/setup0.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/msw/setup0.h,v
retrieving revision 1.135
diff -u -r1.135 setup0.h
--- include/wx/msw/setup0.h	2003/03/17 10:25:21	1.135
+++ include/wx/msw/setup0.h	2003/03/18 16:29:20
@@ -78,6 +78,17 @@
 // Recommended setting: 0 (the new calculations are more correct!)
 #define wxDIALOG_UNIT_COMPATIBILITY   1
 
+// This setting defines whether namespace support should be turned on.  It is
+// incomplete and enums dont work perfectly (namespaced values can be used for 
+// comparison but not in all cases for parameter passing).  Turning it on will 
+// not affect the existing symbols in the default namespace (i.e wxString will 
+// coexist with wx::String).
+//
+// Default is 0
+//
+// Recommended setting 0
+#define wxUSE_NAMESPACE 0
+
 // ----------------------------------------------------------------------------
 // debugging settings
 // ----------------------------------------------------------------------------
Index: include/wx/univ/setup0.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/univ/setup0.h,v
retrieving revision 1.11
diff -u -r1.11 setup0.h
--- include/wx/univ/setup0.h	2003/03/17 10:33:59	1.11
+++ include/wx/univ/setup0.h	2003/03/18 16:29:25
@@ -91,6 +91,17 @@
 // Recommended setting: 0 (the new calculations are more correct!)
 #define wxDIALOG_UNIT_COMPATIBILITY 0
 
+// This setting defines whether namespace support should be turned on.  It is
+// incomplete and enums dont work perfectly (namespaced values can be used for 
+// comparison but not in all cases for parameter passing).  Turning it on will 
+// not affect the existing symbols in the default namespace (i.e wxString will 
+// coexist with wx::String).
+//
+// Default is 0
+//
+// Recommended setting 0
+#define wxUSE_NAMESPACE 0
+
 // ----------------------------------------------------------------------------
 // debugging settings
 // ----------------------------------------------------------------------------
 	  	 
