diff -ru2 -xCVS -x'.#' -x.rej -x'*_' wxWindows.orig/contrib/include/wx/xrc/xmlres.h wxWindows/contrib/include/wx/xrc/xmlres.h
--- wxWindows.orig/contrib/include/wx/xrc/xmlres.h	Mon Apr  8 23:50:56 2002
+++ wxWindows/contrib/include/wx/xrc/xmlres.h	Mon Aug 12 07:33:27 2002
@@ -25,4 +25,5 @@
 #include "wx/bitmap.h"
 #include "wx/icon.h"
+#include "wx/artprov.h"
 
 #include "wx/xrc/xml.h"
@@ -352,4 +353,10 @@
     int GetID();
 
+    // Returns the wxArtID for a wxArtProvider-managed bitmap.
+    wxArtID GetStockID(const wxString& param);
+    
+    // Returns the wxArtClient for a wxArtProvider-managed bitmap.
+    wxArtClient GetStockClient(const wxString& param);
+
     // Returns the resource name.
     wxString GetName();
diff -ru2 -xCVS -x'.#' -x.rej -x'*_' wxWindows.orig/contrib/src/xrc/xmlres.cpp wxWindows/contrib/src/xrc/xmlres.cpp
--- wxWindows.orig/contrib/src/xrc/xmlres.cpp	Tue Mar 26 21:42:06 2002
+++ wxWindows/contrib/src/xrc/xmlres.cpp	Wed Aug 14 03:15:40 2002
@@ -33,4 +33,5 @@
 #include "wx/image.h"
 #include "wx/fontmap.h"
+#include "wx/artprov.h"
 
 #include "wx/xrc/xml.h"
@@ -691,4 +692,5 @@
 
 
+
 int wxXmlResourceHandler::GetID()
 {
@@ -717,4 +719,66 @@
 
 
+
+wxArtID wxXmlResourceHandler::GetStockID(const wxString& param)
+{
+    wxXmlNode *stockIDNode = GetParamNode(param);
+    if (stockIDNode == NULL)    
+        return wxEmptyString;
+    
+    wxXmlNode *oldnode = m_node;
+    m_node = stockIDNode;
+    
+    wxArtID sid = m_node->GetPropVal(wxT("stock_id"), wxT(""));      
+   
+    m_node = oldnode;
+
+    if (sid.IsEmpty()) return wxEmptyString;
+#define stdID(id) else if (sid == wxT(#id)) return id
+    stdID(wxART_ADD_BOOKMARK); stdID(wxART_DEL_BOOKMARK);
+    stdID(wxART_HELP_SIDE_PANEL); stdID(wxART_HELP_SETTINGS);
+    stdID(wxART_HELP_BOOK); stdID(wxART_HELP_FOLDER);
+    stdID(wxART_HELP_PAGE); stdID(wxART_GO_BACK);
+    stdID(wxART_GO_FORWARD); stdID(wxART_GO_UP);
+    stdID(wxART_GO_DOWN); stdID(wxART_GO_TO_PARENT);
+    stdID(wxART_GO_HOME); stdID(wxART_FILE_OPEN);
+    stdID(wxART_PRINT); stdID(wxART_HELP); stdID(wxART_TIP);
+    stdID(wxART_REPORT_VIEW); stdID(wxART_LIST_VIEW);
+    stdID(wxART_NEW_DIR); stdID(wxART_FOLDER); 
+    stdID(wxART_GO_DIR_UP); stdID(wxART_EXECUTABLE_FILE);
+    stdID(wxART_NORMAL_FILE); stdID(wxART_TICK_MARK);
+    stdID(wxART_CROSS_MARK); stdID(wxART_ERROR);
+    stdID(wxART_QUESTION);   stdID(wxART_WARNING);
+    stdID(wxART_INFORMATION);
+#undef stdID
+    else return sid;
+}
+
+
+
+wxArtClient wxXmlResourceHandler::GetStockClient(const wxString& param)
+{
+    wxXmlNode *stockClientNode = GetParamNode(param);
+    if (stockClientNode == NULL)
+        return wxEmptyString;
+    
+    wxXmlNode *oldnode = m_node;
+    m_node = stockClientNode;
+
+    wxArtClient sid = m_node->GetPropVal(wxT("stock_client"), wxT("wxART_OTHER"));
+
+    m_node = oldnode;
+
+    if (sid.IsEmpty()) return wxEmptyString;
+#define stdID(id) else if (sid == wxT(#id)) return id
+    stdID(wxART_TOOLBAR); stdID(wxART_MENU);
+    stdID(wxART_FRAME_ICON); stdID(wxART_CMN_DIALOG); 
+    stdID(wxART_HELP_BROWSER); stdID(wxART_MESSAGE_BOX);
+    stdID(wxART_OTHER); 
+#undef stdID
+    else return sid;
+}
+
+
+
 wxString wxXmlResourceHandler::GetName()
 {
@@ -755,7 +819,17 @@
 
 wxBitmap wxXmlResourceHandler::GetBitmap(const wxString& param, wxSize size)
-{
-    wxString name = GetParamValue(param);
-    if (name.IsEmpty()) return wxNullBitmap;
+{        
+    wxString stk = param;
+    if (!GetStockID(stk).IsEmpty()) 
+    {
+        wxBitmap stockArt = wxArtProvider::GetBitmap(GetStockID(stk), 
+                                                     GetStockClient(stk), size);        
+        if (stockArt != wxNullBitmap)
+            return stockArt;            
+    }   
+    
+    wxString name = GetParamValue(param);    
+    if (name.IsEmpty()) return wxNullBitmap;    
+        
 #if wxUSE_FILESYSTEM
     wxFSFile *fsfile = GetCurFileSystem().OpenFile(name);
@@ -770,4 +844,5 @@
     wxImage img(GetParamValue(wxT("bitmap")));
 #endif
+
     if (!img.Ok())
     {
@@ -777,4 +852,5 @@
     if (!(size == wxDefaultSize)) img.Rescale(size.x, size.y);
     return wxBitmap(img);
+
 }

 	  	 
