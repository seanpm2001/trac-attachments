--- wxWidgets.orig/include/wx/combo.h	Sun Aug 13 14:24:31 2006
+++ wxWidgets/include/wx/combo.h	Sat Sep  2 18:17:06 2006
@@ -306,5 +306,7 @@
     virtual bool IsKeyPopupToggle(const wxKeyEvent& event) const = 0;
 
-    // Draws focus background (on combo control) in a way typical on platform.
+    // Prepare background of combo control or an item in a dropdown list
+    // in a way typical on platform. This includes painting the focus/disabled
+    // background and setting the clipping region.
     // Unless you plan to paint your own focus indicator, you should always call this
     // in your wxComboPopup::PaintComboControl implementation.
@@ -314,5 +316,5 @@
     //                                wxCONTROL_SELECTED: list item is selected
     //                                wxCONTROL_DISABLED: control/item is disabled
-    virtual void DrawFocusBackground( wxDC& dc, const wxRect& rect, int flags ) const;
+    virtual void PrepareBackground( wxDC& dc, const wxRect& rect, int flags ) const;
 
     // Returns true if focus indicator should be drawn in the control.
--- wxWidgets.orig/include/wx/msw/combo.h	Sun Aug 13 14:24:40 2006
+++ wxWidgets/include/wx/msw/combo.h	Sat Sep  2 18:17:27 2006
@@ -60,5 +60,5 @@
     virtual ~wxComboCtrl();
 
-    virtual void DrawFocusBackground( wxDC& dc, const wxRect& rect, int flags ) const;
+    virtual void PrepareBackground( wxDC& dc, const wxRect& rect, int flags ) const;
     virtual bool IsKeyPopupToggle(const wxKeyEvent& event) const;
 
--- wxWidgets.orig/src/common/combocmn.cpp	Sun Aug 13 14:25:26 2006
+++ wxWidgets/src/common/combocmn.cpp	Sat Sep  2 18:17:54 2006
@@ -387,5 +387,5 @@
     if ( combo->GetWindowStyle() & wxCB_READONLY ) // ie. no textctrl
     {
-        combo->DrawFocusBackground(dc,rect,0);
+        combo->PrepareBackground(dc,rect,0);
 
         dc.DrawText( combo->GetValue(),
@@ -1037,6 +1037,7 @@
 // ----------------------------------------------------------------------------
 
-// draw focus background on area in a way typical on platform
-void wxComboCtrlBase::DrawFocusBackground( wxDC& dc, const wxRect& rect, int flags ) const
+#if (!defined(__WXMSW__)) || defined(__WXUNIVERSAL__)
+// prepare combo box background on area in a way typical on platform
+void wxComboCtrlBase::PrepareBackground( wxDC& dc, const wxRect& rect, int flags ) const
 {
     wxSize sz = GetClientSize();
@@ -1107,5 +1108,17 @@
     dc.SetPen( bgCol );
     dc.DrawRectangle( selRect );
+
+    // Don't clip exactly to the selection rectangle so we can draw
+    // to the non-selected area in front of it.
+    wxRect clipRect(rect.x,rect.y,
+                    (selRect.x+selRect.width)-rect.x,rect.height);
+    dc.SetClippingRegion(clipRect);
+}
+#else
+// Save the library size a bit for platforms that re-implement this.
+void wxComboCtrlBase::PrepareBackground( wxDC&, const wxRect&, int ) const
+{
 }
+#endif
 
 void wxComboCtrlBase::DrawButton( wxDC& dc, const wxRect& rect, bool paintBg )
--- wxWidgets.orig/src/generic/odcombo.cpp	Sat Sep  2 18:13:41 2006
+++ wxWidgets/src/generic/odcombo.cpp	Sun Sep  3 11:28:04 2006
@@ -1060,10 +1060,13 @@
          (flags & wxODCB_PAINTING_CONTROL) )
     {
-        int focusFlag = wxCONTROL_SELECTED;
+        int bgFlags = wxCONTROL_SELECTED;
 
         if ( (flags & wxODCB_PAINTING_CONTROL) != wxODCB_PAINTING_CONTROL )
-            focusFlag |= wxCONTROL_ISSUBMENU;
-
-        DrawFocusBackground(dc, rect, focusFlag );
+        {
+            bgFlags |= wxCONTROL_ISSUBMENU;
+            PrepareBackground(dc, rect, bgFlags);
+        }
+        else if ( HasFlag(wxCB_READONLY) )
+            PrepareBackground(dc, rect, bgFlags);
     }
     //else: do nothing for the normal items
--- wxWidgets.orig/src/msw/combo.cpp	Sun Aug 13 14:25:43 2006
+++ wxWidgets/src/msw/combo.cpp	Sat Sep  2 20:49:35 2006
@@ -240,5 +240,5 @@
 
 // draw focus background on area in a way typical on platform
-void wxComboCtrl::DrawFocusBackground( wxDC& dc, const wxRect& rect, int flags ) const
+void wxComboCtrl::PrepareBackground( wxDC& dc, const wxRect& rect, int flags ) const
 {
     wxUxThemeEngine* theme = (wxUxThemeEngine*) NULL;
@@ -377,4 +377,9 @@
         wxMSWDrawFocusRect(dc,selRect);
 
+    // Don't clip exactly to the selection rectangle so we can draw
+    // to the non-selected area in front of it.
+    wxRect clipRect(rect.x,rect.y,
+                    (selRect.x+selRect.width)-rect.x-1,rect.height);
+    dc.SetClippingRegion(clipRect);
 }
 

 	  	 
