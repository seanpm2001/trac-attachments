Index: app.cpp===================================================================RCS file: /pack/cvsroots/wxwindows/wxWindows/src/mac/app.cpp,vretrieving revision 1.108diff -b -u -2 -r1.108 app.cpp--- app.cpp	2003/07/14 08:41:03	1.108+++ app.cpp	2003/07/25 04:37:22@@ -300,4 +300,7 @@          { kEventClassMouse , kEventMouseDown } ,+    	{ kEventClassMouse , kEventMouseUp } ,+    	{ kEventClassMouse , kEventMouseMoved } ,+    	{ kEventClassMouse , kEventMouseDragged } ,         { 'WXMC' , 'WXMC' }     } ;@@ -334,4 +337,8 @@ } +// The application mouse event handler needs to redirect mouse events to the capture window++extern pascal OSStatus wxMacWindowEventHandler( EventHandlerCallRef handler , EventRef event , void *data );+ // due to the rather low-level event API of wxWindows, we cannot use RunApplicationEventLoop // but have to use ReceiveNextEvent dealing with events manually, therefore we also have@@ -342,4 +349,9 @@     OSStatus result = eventNotHandledErr ; +	if ( wxTheApp->s_captureWindow )+	{+		result = wxMacWindowEventHandler( handler, event, wxTheApp->s_captureWindow->MacGetTopLevelWindow() );+    }+    else {     switch( GetEventKind(event) )     {@@ -361,5 +373,5 @@         break ;     }-+	}     return result ; }Index: toplevel.cpp===================================================================RCS file: /pack/cvsroots/wxwindows/wxWindows/src/mac/toplevel.cpp,vretrieving revision 1.55diff -b -u -2 -r1.55 toplevel.cpp--- toplevel.cpp	2003/07/11 19:52:14	1.55+++ toplevel.cpp	2003/07/25 04:37:26@@ -256,5 +256,5 @@     short windowPart = ::FindWindow(point, &window); -    if ( IsWindowActive(window) && windowPart == inContent )+    if ( ( IsWindowActive(window) && windowPart == inContent ) || wxTheApp->s_captureWindow )     {         switch ( GetEventKind( event ) ) 
 	  	 
