diff -bru wxWidgets.orig/src/osx/cocoa/textctrl.mm wxWidgets/src/osx/cocoa/textctrl.mm
--- wxWidgets.orig/src/osx/cocoa/textctrl.mm	2014-09-16 11:37:17.000000000 -0700
+++ wxWidgets/src/osx/cocoa/textctrl.mm	2014-09-21 02:38:28.000000000 -0700
@@ -556,16 +556,36 @@
     m_scrollView = sv;
 
     [m_scrollView setHasVerticalScroller:YES];
+    if ( wxPeer->GetWindowStyle() & wxHSCROLL)
+        [m_scrollView setHasHorizontalScroller:YES];
+    else
+    {
     [m_scrollView setHasHorizontalScroller:NO];
     // TODO Remove if no regression, this was causing automatic resizes of multi-line textfields when the tlw changed
-    // [m_scrollView setAutoresizingMask:NSViewWidthSizable | NSViewHeightSizable];
+        [m_scrollView setAutoresizingMask:NSViewWidthSizable | NSViewHeightSizable];
+    }
     NSSize contentSize = [m_scrollView contentSize];
 
     wxNSTextView* tv = [[wxNSTextView alloc] initWithFrame: NSMakeRect(0, 0,
             contentSize.width, contentSize.height)];
     m_textView = tv;
+    if ( wxPeer->GetWindowStyle() & wxHSCROLL)
+    {
+        [tv setMinSize:NSMakeSize(0.0, contentSize.height)];
+        [tv setMaxSize:NSMakeSize(FLT_MAX, FLT_MAX)];
+    }
     [tv setVerticallyResizable:YES];
+    if ( wxPeer->GetWindowStyle() & wxHSCROLL)
+        [tv setHorizontallyResizable:YES];
+    else
     [tv setHorizontallyResizable:NO];
+    if ( wxPeer->GetWindowStyle() & wxHSCROLL)
+    {
+         [tv setAutoresizingMask:(NSViewWidthSizable | NSViewHeightSizable)];
+         [[tv textContainer] setContainerSize: NSMakeSize(FLT_MAX, FLT_MAX)];
+         [[tv textContainer] setWidthTracksTextView:NO];
+    }
+    else
     [tv setAutoresizingMask:NSViewWidthSizable];
 
     [m_scrollView setDocumentView: tv];
diff -bru wxWidgets.orig/src/osx/textctrl_osx.cpp wxWidgets/src/osx/textctrl_osx.cpp
--- wxWidgets.orig/src/osx/textctrl_osx.cpp	2014-09-16 11:37:22.000000000 -0700
+++ wxWidgets/src/osx/textctrl_osx.cpp	2014-09-19 23:42:30.000000000 -0700
@@ -100,7 +100,7 @@
     if ( ! (style & wxNO_BORDER) )
         style = (style & ~wxBORDER_MASK) | wxSUNKEN_BORDER ;
 
-    if ( !wxTextCtrlBase::Create( parent, id, pos, size, style & ~(wxHSCROLL | wxVSCROLL), validator, name ) )
+    if ( !wxTextCtrlBase::Create( parent, id, pos, size, style & ~(wxVSCROLL), validator, name ) )
         return false;
 
     if ( m_windowStyle & wxTE_MULTILINE )
diff -bru wxWidgets.orig/src/osx/window_osx.cpp wxWidgets/src/osx/window_osx.cpp
--- wxWidgets.orig/src/osx/window_osx.cpp	2014-09-16 11:37:22.000000000 -0700
+++ wxWidgets/src/osx/window_osx.cpp	2014-09-20 11:36:51.000000000 -0700
@@ -432,7 +432,11 @@
         && ! IsKindOf(CLASSINFO(wxStatusBar))
 #endif
         )
-         || (IsKindOf(CLASSINFO(wxControl)) && ((style & wxHSCROLL) || (style & wxVSCROLL))))
+         || (IsKindOf(CLASSINFO(wxControl)) && ((style & wxHSCROLL) || (style & wxVSCROLL))
+#if wxUSE_TEXTCTRL
+        && ! IsKindOf( CLASSINFO( wxTextCtrl ) )
+#endif
+       ))
     {
         MacCreateScrollBars( style ) ;
     }
@@ -867,8 +871,9 @@
     int ww, hh;
 
     int left, top;
-
-    GetPeer()->GetContentArea( left, top, ww, hh );
+    wxOSXWidgetImpl *peer = GetPeer();
+    if( peer )
+        peer->GetContentArea( left, top, ww, hh );
 #if wxUSE_SCROLLBAR
     if (m_hScrollBar  && m_hScrollBar->IsShown() )
         hh -= m_hScrollBar->GetSize().y ;
@@ -1219,7 +1224,9 @@
 wxPoint wxWindowMac::GetClientAreaOrigin() const
 {
     int left,top,width,height;
-    GetPeer()->GetContentArea( left , top , width , height);
+    wxOSXWidgetImpl *peer = GetPeer();
+    if( peer )
+        peer->GetContentArea( left, top, width, height );
     return wxPoint( left + MacGetLeftBorderSize() , top + MacGetTopBorderSize() );
 }
 
