Index: samples/minimal/minimal.cpp
===================================================================
--- samples/minimal/minimal.cpp	(Revision 56473)
+++ samples/minimal/minimal.cpp	(Arbeitskopie)
@@ -68,7 +68,13 @@
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
 
+    void OnTest(wxCommandEvent& event);
+    void OnUpdateTest(wxUpdateUIEvent& event);
+
 private:
+    wxCheckBox* checkbox1;
+    wxPanel* panel1;
+
     // any class wishing to process wxWidgets events must use this macro
     DECLARE_EVENT_TABLE()
 };
@@ -83,6 +89,8 @@
     // menu items
     Minimal_Quit = wxID_EXIT,
 
+    Test,
+
     // it is important for the id corresponding to the "About" command to have
     // this standard value as otherwise it won't be handled properly under Mac
     // (where it is special and put into the "Apple" menu)
@@ -98,6 +106,8 @@
 // simple menu events like this the static method is much simpler.
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
+    EVT_MENU(Test,          MyFrame::OnTest)
+    EVT_UPDATE_UI(Test,     MyFrame::OnUpdateTest)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
 END_EVENT_TABLE()
 
@@ -156,6 +166,8 @@
     wxMenu *helpMenu = new wxMenu;
     helpMenu->Append(Minimal_About, "&About...\tF1", "Show about dialog");
 
+    fileMenu->Append(Test, "Set colour\tF5", "Test");
+
     fileMenu->Append(Minimal_Quit, "E&xit\tAlt-X", "Quit this program");
 
     // now append the freshly created menu to the menu bar...
@@ -172,6 +184,9 @@
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+
+    checkbox1 = new wxCheckBox(this, wxID_ANY, wxT("Allow"), wxPoint(32, 32));
+    panel1 = new wxPanel(this, wxID_ANY, wxPoint(32, 64), wxSize(200, 42));
 }
 
 
@@ -183,6 +198,17 @@
     Close(true);
 }
 
+void MyFrame::OnTest(wxCommandEvent& event)
+{
+    panel1->SetBackgroundColour(wxColour(rand() % 256, rand() % 256, rand() % 256, 0));
+    panel1->Refresh();
+}
+
+void MyFrame::OnUpdateTest(wxUpdateUIEvent& event)
+{
+    event.Enable(checkbox1->IsChecked());
+}
+
 void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
 {
     wxMessageBox(wxString::Format
