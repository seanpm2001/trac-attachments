Index: src/unix/mimetype.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/mimetype.cpp,v
retrieving revision 1.77
diff -u -r1.77 mimetype.cpp
--- src/unix/mimetype.cpp	2006/07/17 09:39:11	1.77
+++ src/unix/mimetype.cpp	2006/10/17 21:57:25
@@ -345,7 +345,7 @@
                                 // calls to FileExist() required)
                                 if (nDir != 0)
                                 {
-                                    wxString tmp = search_dirs[nDir];
+                                    const wxString &tmp = search_dirs[nDir];
                                     search_dirs.RemoveAt( nDir );
                                     search_dirs.Insert( tmp, 0 );
                                 }
@@ -730,7 +730,7 @@
     {
         // holds an extension; need to change it to *.ext;
         wxString e = wxT("*.") + tokenizer.GetNextToken() + wxT(";");
-        sTmp = sTmp + e;
+        sTmp += e;
     }
 
     if (!delete_index)
@@ -897,7 +897,7 @@
         // we expect %f; others including  %F and %U and %u are possible
         wxString sTmp = file.GetCmd(nIndex);
         if (0 == sTmp.Replace( wxT("%f"), wxT("%s") ))
-            sTmp = sTmp + wxT(" %s");
+            sTmp += wxT(" %s");
         entry->AddOrReplaceVerb(wxString(wxT("open")), sTmp );
     }
 
@@ -1007,8 +1007,8 @@
 
             // Check for entry
             wxString theme(wxT("default.kde"));
-            size_t cnt = config.GetLineCount();
-            for (size_t i = 0; i < cnt; i++)
+            size_t nCount = config.GetLineCount();
+            for (size_t i = 0; i < nCount; i++)
             {
                 if (config[i].StartsWith(wxT("Theme="), &theme/*rest*/))
                     break;
@@ -1135,7 +1135,8 @@
 bool wxFileTypeImpl::GetMimeTypes(wxArrayString& mimeTypes) const
 {
     mimeTypes.Clear();
-    for (size_t i = 0; i < m_index.GetCount(); i++)
+    size_t nCount = m_index.GetCount();
+    for (size_t i = 0; i < nCount; i++)
         mimeTypes.Add(m_manager->m_aTypes[m_index[i]]);
 
     return true;
@@ -1248,7 +1249,8 @@
     entry->Add(verb + wxT("=")  + cmd + wxT(" %s "));
 
     bool ok = true;
-    for ( size_t i = 0; i < strTypes.GetCount(); i++ )
+    size_t nCount = strTypes.GetCount();
+    for ( size_t i = 0; i < nCount; i++ )
     {
         if (!m_manager->DoAssociation(strTypes[i], strIcon, entry, strExtensions, strDesc))
             ok = false;
@@ -1257,7 +1259,7 @@
     return ok;
 }
 
-// ignore index on the grouds that we only have one icon in a Unix file
+// ignore index on the grounds that we only have one icon in a Unix file
 bool wxFileTypeImpl::SetDefaultIcon(const wxString& strIcon, int WXUNUSED(index))
 {
     if (strIcon.empty())
@@ -1273,7 +1275,8 @@
 
     wxMimeTypeCommands *entry = new wxMimeTypeCommands();
     bool ok = true;
-    for ( size_t i = 0; i < strTypes.GetCount(); i++ )
+    size_t nCount = strTypes.GetCount();
+    for ( size_t i = 0; i < nCount; i++ )
     {
         if ( !m_manager->DoAssociation
                          (
@@ -1308,7 +1311,7 @@
         // set the flag first to prevent recursion
         m_initialized = true;
 
-    wxString wm = wxGetenv( wxT("WINDOWMANAGER") );
+    const wxString &wm = wxGetenv( wxT("WINDOWMANAGER") );
 
     if (wm.Find( wxT("kde") ) != wxNOT_FOUND)
         Initialize( wxMAILCAP_KDE  );
@@ -1385,20 +1388,21 @@
     if (!sExtraDir.empty())
         dirs.Add( sExtraDir + wxT("/") );
 
+    wxString file;
     size_t nDirs = dirs.GetCount();
     for ( size_t nDir = 0; nDir < nDirs; nDir++ )
     {
-        wxString file = dirs[nDir] + wxT("mailcap");
+        file = dirs[nDir];
+        file += wxT("mailcap");
         if ( wxFile::Exists(file) )
         {
             ReadMailcap(file);
         }
 
-        file = dirs[nDir] + wxT("mime.types");
+        file = dirs[nDir];
+        file += wxT("mime.types");
         if ( wxFile::Exists(file) )
-        {
             ReadMimeTypes(file);
-        }
     }
 }
 
@@ -1451,7 +1455,7 @@
         {
             // add the new entries in
             wxString sTmp = strType.Append( wxT(' '), 40 - strType.Len() );
-            sTmp = sTmp + m_aExtensions[index];
+            sTmp += m_aExtensions[index];
             file.AddLine(sTmp);
         }
 
@@ -1620,7 +1624,7 @@
                 file.GetLineCount()) file.CommentLine(nIndex);
         }
 
-        sTmp = sTmp + wxT(";") + sCmd; //includes wxT(" %s ");
+        sTmp += wxT(";") + sCmd; //includes wxT(" %s ");
 
         // write it in the format that Netscape uses (default)
         if (! ( m_mailcapStylesInited & wxMAILCAP_STANDARD ) )
@@ -1658,7 +1662,8 @@
                         bKnownToken = true;
 
                     size_t i;
-                    for (i=0; i < entries->GetCount(); i++)
+                    size_t nCount = entries->GetCount();
+                    for (i=0; i < nCount; i++)
                     {
                         if (s.Contains(entries->GetVerb(i)))
                             bKnownToken = true;
@@ -1666,7 +1671,7 @@
 
                     if (!bKnownToken)
                     {
-                        sTmp = sTmp + wxT("; \\");
+                        sTmp += wxT("; \\");
                         file.InsertLine(sTmp, nIndex);
                         sTmp = s;
                     }
@@ -1677,7 +1682,7 @@
 
             if (! m_aDescriptions[index].empty() )
             {
-                sTmp = sTmp + wxT("; \\");
+                sTmp += wxT("; \\");
                 file.InsertLine(sTmp, nIndex);
                 nIndex++;
                 sTmp = wxT("       description=\"") + m_aDescriptions[index] + wxT("\"");
@@ -1685,7 +1690,7 @@
 
             if (! m_aIcons[index].empty() )
             {
-                sTmp = sTmp + wxT("; \\");
+                sTmp += wxT("; \\");
                 file.InsertLine(sTmp, nIndex);
                 nIndex++;
                 sTmp = wxT("       x11-bitmap=\"") + m_aIcons[index] + wxT("\"");
@@ -1697,7 +1702,7 @@
                 for (i=0; i < entries->GetCount(); i++)
                     if ( i != iOpen )
                     {
-                        sTmp = sTmp + wxT("; \\");
+                        sTmp += wxT("; \\");
                         file.InsertLine(sTmp, nIndex);
                         nIndex++;
                         sTmp = wxT("       ") + entries->GetVerbCmd(i);
@@ -1734,14 +1739,16 @@
     wxArrayString sA_Exts = ftInfo.GetExtensions();
     wxString sExt, sExtStore;
     size_t i, nIndex;
-    for (i=0; i < sA_Exts.GetCount(); i++)
+    size_t nExtCount = sA_Exts.GetCount();
+    for (i=0; i < nExtCount; i++)
     {
         sExt = sA_Exts.Item(i);
 
         // clean up to just a space before and after
         sExt.Trim().Trim(false);
         sExt = wxT(' ') + sExt + wxT(' ');
-        for (nIndex = 0; nIndex < m_aExtensions.GetCount(); nIndex++)
+        size_t nCount = m_aExtensions.GetCount();
+        for (nIndex = 0; nIndex < nCount; nIndex++)
         {
             sExtStore = m_aExtensions.Item(nIndex);
             if (sExtStore.Replace(sExt, wxT(" ") ) > 0)
@@ -1883,10 +1890,12 @@
     wxString& exts = m_aExtensions[nIndex];
 
     // add all extensions we don't have yet
+    wxString ext;
     size_t count = strExtensions.GetCount();
     for ( size_t i = 0; i < count; i++ )
     {
-        wxString ext = strExtensions[i] + wxT(' ');
+        ext = strExtensions[i];
+        ext += wxT(' ');
 
         if ( exts.Find(ext) == wxNOT_FOUND )
         {
@@ -1987,7 +1996,8 @@
     wxMimeTypeCommands * sPairs = m_aEntries [nIndex];
 
     size_t i;
-    for ( i = 0; i < sPairs->GetCount (); i++ )
+    size_t nCount = sPairs->GetCount();
+    for ( i = 0; i < nCount; i++ )
     {
         sTmp = sPairs->GetVerbCmd (i);
         if ( sTmp.Contains(sV) )
@@ -2383,6 +2393,10 @@
     wxString curField;
     curField.reserve(1024);
 
+    const wxChar *pPagerEnv = wxGetenv(wxT("PAGER"));
+
+    const wxArrayString empty_extensions_list;
+
     size_t nLineCount = file.GetLineCount();
     for ( size_t nLine = 0; nLine < nLineCount; nLine++ )
     {
@@ -2557,13 +2571,12 @@
         // is a bad idea (FIXME)
         if ( data.copiousoutput )
         {
-            const wxChar *p = wxGetenv(wxT("PAGER"));
-            data.cmdOpen << wxT(" | ") << (p ? p : wxT("more"));
+            data.cmdOpen << wxT(" | ") << (pPagerEnv ? pPagerEnv : wxT("more"));
         }
 
         if ( data.needsterminal )
         {
-            data.cmdOpen = wxString::Format(wxT("xterm -e sh -c '%s'"),
+            data.cmdOpen.Printf(wxT("xterm -e sh -c '%s'"),
                                             data.cmdOpen.c_str());
         }
 
@@ -2602,7 +2615,7 @@
                     data.type,
                     data.icon,
                     new wxMimeTypeCommands(data.verbs, data.commands),
-                    wxArrayString() /* extensions */,
+                    empty_extensions_list,
                     data.desc,
                     overwrite
                 );
@@ -2622,12 +2635,11 @@
 
     mimetypes.Empty();
 
-    wxString type;
     size_t count = m_aTypes.GetCount();
     for ( size_t n = 0; n < count; n++ )
     {
         // don't return template types from here (i.e. anything containg '*')
-        type = m_aTypes[n];
+        const wxString &type = m_aTypes[n];
         if ( type.Find(wxT('*')) == wxNOT_FOUND )
         {
             mimetypes.Add(type);
@@ -2648,11 +2660,11 @@
     wxArrayString sMimeTypes;
     ft->GetMimeTypes(sMimeTypes);
 
-    wxString sMime;
     size_t i;
-    for (i = 0; i < sMimeTypes.GetCount(); i ++)
+    size_t nCount = sMimeTypes.GetCount();
+    for (i = 0; i < nCount; i ++)
     {
-        sMime = sMimeTypes.Item(i);
+        const wxString &sMime = sMimeTypes.Item(i);
         int nIndex = m_aTypes.Index(sMime);
         if ( nIndex == wxNOT_FOUND)
         {
@@ -2684,7 +2696,7 @@
 
 static bool IsKnownUnimportantField(const wxString& fieldAll)
 {
-    static const wxChar *knownFields[] =
+    static const wxChar * const knownFields[] =
     {
         wxT("x-mozilla-flags"),
         wxT("nametemplate"),

 	  	 
