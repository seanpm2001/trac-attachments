Index: wxWindows/include//wx/motif/radiobut.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/motif/radiobut.h,v
retrieving revision 1.6
diff -u -b -2 -r1.6 radiobut.h
--- wxWindows/include//wx/motif/radiobut.h      5 Feb 2002 16:34:31 -0000       1.6
+++ wxWindows/include//wx/motif/radiobut.h      30 Jul 2002 19:36:49 -0000
@@ -53,4 +53,11 @@
     virtual void ChangeBackgroundColour();
     virtual void ChangeForegroundColour();
+
+    // Copied from mac/radiobut.h
+    wxRadioButton *AddInCycle(wxRadioButton *cycle);
+    inline wxRadioButton *NextInCycle() {return m_cycle;}
+
+  protected:
+    wxRadioButton *m_cycle;
 };

Index: wxWindows/src/motif/radiobut.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/motif/radiobut.cpp,v
retrieving revision 1.17
diff -u -b -2 -r1.17 radiobut.cpp
--- wxWindows/src/motif/radiobut.cpp	8 Jul 2001 19:03:21 -0000	1.17
+++ wxWindows/src/motif/radiobut.cpp	30 Jul 2002 19:38:04 -0000
@@ -102,4 +102,28 @@
     ChangeBackgroundColour();
 
+    //copied from mac/radiobut.cpp (from here till "return TRUE;")
+    m_cycle = this ;
+  
+    if (HasFlag(wxRB_GROUP))
+    {
+        AddInCycle( NULL ) ;
+    }
+    else
+    {
+        /* search backward for last group start */
+        wxRadioButton *chief = (wxRadioButton*) NULL;
+        wxWindowList::Node *node = parent->GetChildren().GetLast();
+        while (node)
+        {
+            wxWindow *child = node->GetData();
+            if (child->IsKindOf( CLASSINFO( wxRadioButton ) ) )
+            {
+                chief = (wxRadioButton*) child;
+                if (child->HasFlag(wxRB_GROUP)) break;
+            }
+            node = node->GetPrevious();
+        }
+        AddInCycle( chief ) ;
+    }
     return TRUE;
 }
@@ -107,7 +131,22 @@
 void wxRadioButton::SetValue(bool value)
 {
+    //based on mac/radiobut.cpp
+    if (GetValue() == value)
+        return ;
+
     m_inSetValue = TRUE;
     XmToggleButtonSetState ((Widget) m_mainWidget, (Boolean) value, FALSE);
     m_inSetValue = FALSE;
+
+   if (value) 
+   {
+       wxRadioButton *cycle = this->NextInCycle();
+       if (cycle != NULL) {
+           while (cycle != this) {
+               cycle->SetValue( FALSE );
+               cycle = cycle->NextInCycle();
+           }
+       }
+   }
 }
 
@@ -156,8 +195,46 @@
         return;
 
-    wxCommandEvent event (wxEVT_COMMAND_RADIOBUTTON_SELECTED, item->GetId());
-    event.SetEventObject(item);
+    //based on mac/radiobut.cpp
 
-    item->ProcessCommand (event);
+    wxRadioButton *cycle, *old = NULL ;
+    cycle = item->NextInCycle();
+    if (cycle != NULL) {
+        while (cycle != item) {
+            if ( cycle->GetValue() ) {
+                old = cycle ;
+                cycle->SetValue(FALSE);
+            }
+            cycle = cycle->NextInCycle();
+        }
+    }
+    item->SetValue(TRUE);
+
+    if ( old ) {
+        wxCommandEvent event(wxEVT_COMMAND_RADIOBUTTON_SELECTED, old->GetId() );
+        event.SetEventObject(old);
+        event.SetInt( FALSE );
+        old->ProcessCommand(event);
+    }
+    wxCommandEvent event2(wxEVT_COMMAND_RADIOBUTTON_SELECTED, item->GetId() );
+    event2.SetEventObject(item);
+    event2.SetInt( TRUE );
+    item->ProcessCommand(event2);
+}
+
+wxRadioButton *wxRadioButton::AddInCycle(wxRadioButton *cycle)
+{
+	wxRadioButton *next,*current;
+		
+	if (cycle==NULL) {
+		m_cycle=this;
+		return(this);
+		}
+	else {
+		current=cycle;
+  		while ((next=current->m_cycle)!=cycle) 
+  		  current=current->m_cycle;
+	  	m_cycle=cycle;
+	  	current->m_cycle=this;
+	  	return(cycle);
+  	}
 }
-

 	  	 
