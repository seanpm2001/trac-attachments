Index: src/generic/infobar.cpp
===================================================================
--- src/generic/infobar.cpp	(revision 75182)
+++ src/generic/infobar.cpp	(working copy)
@@ -71,7 +71,6 @@
     // use special, easy to notice, colours
     const wxColour colBg = wxSystemSettings::GetColour(wxSYS_COLOUR_INFOBK);
     SetBackgroundColour(colBg);
-    SetOwnForegroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_INFOTEXT));
 
     // create the controls: icon, text and the button to dismiss the
     // message.
@@ -80,6 +79,7 @@
     m_icon = new wxStaticBitmap(this, wxID_ANY, wxNullBitmap);
 
     m_text = new wxStaticText(this, wxID_ANY, "");
+    SetOwnForegroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_INFOTEXT));
 
     m_button = wxBitmapButton::NewCloseButton(this, wxID_ANY);
     m_button->SetToolTip(_("Hide this notification message."));
@@ -317,4 +317,9 @@
     DoHide();
 }
 
+bool wxInfoBarGeneric::SetForegroundColour(const wxColour& col)
+{
+    return (wxWindow::SetForegroundColour(col) && m_text->SetForegroundColour(col));
+}
+
 #endif // wxUSE_INFOBAR
Index: include/wx/generic/infobar.h
===================================================================
--- include/wx/generic/infobar.h	(revision 75182)
+++ include/wx/generic/infobar.h	(working copy)
@@ -79,6 +79,10 @@
     // (default font is a larger and bold version of the normal one)
     virtual bool SetFont(const wxFont& font);
 
+    // setting foreground colour of this window sets both its foreground 
+    // colour and also that of its text control
+    virtual bool SetForegroundColour(const wxColour& col);
+
 protected:
     // info bar shouldn't have any border by default, the colour difference
     // between it and the main window separates it well enough
