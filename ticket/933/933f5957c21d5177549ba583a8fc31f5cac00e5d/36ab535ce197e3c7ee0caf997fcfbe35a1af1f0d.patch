Index: src/gtk/msgdlg.cpp
===================================================================
--- src/gtk/msgdlg.cpp	(revision 61037)
+++ src/gtk/msgdlg.cpp	(working copy)
@@ -86,7 +86,9 @@
 
 #if wxUSE_LIBHILDON
     const char *stockIcon;
-    if ( m_dialogStyle & wxICON_ERROR )
+    if ( m_dialogStyle & wxICON_NONE )
+        stockIcon = "";
+    else if ( m_dialogStyle & wxICON_ERROR )
         stockIcon = "qgn_note_gene_syserror";
     else if ( m_dialogStyle & wxICON_EXCLAMATION )
         stockIcon = "qgn_note_gene_syswarning";
@@ -127,6 +129,11 @@
         }
     }
 
+#if GTK_CHECK_VERSION(2, 10, 0)
+    if ( gtk_check_version(2, 10, 0) == NULL && (m_dialogStyle & wxICON_NONE))
+        type = GTK_MESSAGE_OTHER;
+    else
+#endif
     if (m_dialogStyle & wxICON_EXCLAMATION)
         type = GTK_MESSAGE_WARNING;
     else if (m_dialogStyle & wxICON_ERROR)
@@ -137,7 +144,9 @@
         type = GTK_MESSAGE_QUESTION;
     else
     {
-        // GTK+ doesn't have a "typeless" msg box, so try to auto detect...
+        // The previous comment stated: "GTK+ doesn't have a "typeless" msg
+        // box, so try to auto detect..." This isn't quite true, but for
+        // backward compatibility we preserve the old behaviour. 
         type = m_dialogStyle & wxYES ? GTK_MESSAGE_QUESTION : GTK_MESSAGE_INFO;
     }
 
Index: src/common/utilscmn.cpp
===================================================================
--- src/common/utilscmn.cpp	(revision 61037)
+++ src/common/utilscmn.cpp	(working copy)
@@ -1285,9 +1285,12 @@
 {
     long decorated_style = style;
 
-    if ( ( style & ( wxICON_EXCLAMATION | wxICON_HAND | wxICON_INFORMATION | wxICON_QUESTION ) ) == 0 )
+    if (( style & wxICON_NONE ) == 0 )
     {
-        decorated_style |= ( style & wxYES ) ? wxICON_QUESTION : wxICON_INFORMATION ;
+        if ( ( style & wxICON_MASK ) == 0 )
+        {
+            decorated_style |= ( style & wxYES ) ? wxICON_QUESTION : wxICON_INFORMATION ;
+        }
     }
 
     wxMessageDialog dialog(parent, message, caption, decorated_style);
Index: include/wx/defs.h
===================================================================
--- include/wx/defs.h	(revision 61037)
+++ include/wx/defs.h	(working copy)
@@ -1819,7 +1819,7 @@
 #define wxICON_INFORMATION      0x00000800
 #define wxICON_STOP             wxICON_HAND
 #define wxICON_ASTERISK         wxICON_INFORMATION
-#define wxICON_MASK             (0x00000100|0x00000200|0x00000400|0x00000800)
+#define wxICON_MASK             (wxICON_EXCLAMATION|wxICON_HAND|wxICON_QUESTION|wxICON_INFORMATION)
 
 #define  wxFORWARD              0x00001000
 #define  wxBACKWARD             0x00002000
@@ -1827,6 +1827,7 @@
 #define  wxHELP                 0x00008000
 #define  wxMORE                 0x00010000
 #define  wxSETUP                0x00020000
+#define wxICON_NONE             0x00040000
 
 /*
  * Background styles. See wxWindow::SetBackgroundStyle
Index: interface/wx/msgdlg.h
===================================================================
--- interface/wx/msgdlg.h	(revision 61037)
+++ interface/wx/msgdlg.h	(working copy)
@@ -31,6 +31,8 @@
     @style{wxOK_DEFAULT}
         Makes the "OK" button default, this is the default behaviour and
         this flag exists solely for symmetry with @c wxCANCEL_DEFAULT.
+    @style{wxICON_NONE}
+        Displays no symbol.
     @style{wxICON_EXCLAMATION}
         Displays an exclamation mark symbol.
     @style{wxICON_ERROR}
Index: samples/dialogs/dialogs.cpp
===================================================================
--- samples/dialogs/dialogs.cpp	(revision 61037)
+++ samples/dialogs/dialogs.cpp	(working copy)
@@ -2458,12 +2458,14 @@
 
     // icon choice
     const wxString icons[] = {
-        "&Information", "&Question", "&Warning", "&Error"
+        "&None", "&Information", "&Question", "&Warning", "&Error"
     };
 
-    m_icons = new wxRadioBox(this, wxID_ANY, "&Icon:",
+    m_icons = new wxRadioBox(this, wxID_ANY, "&Icons",
                              wxDefaultPosition, wxDefaultSize,
                              WXSIZEOF(icons), icons);
+    // Make the 'Information' icon the default one:
+    m_icons->SetSelection(1);
     sizerTop->Add(m_icons, wxSizerFlags().Expand().Border());
 
 
@@ -2524,10 +2526,11 @@
 
     switch ( m_icons->GetSelection() )
     {
-        case 0: style |= wxICON_INFORMATION; break;
-        case 1: style |= wxICON_QUESTION; break;
-        case 2: style |= wxICON_WARNING; break;
-        case 3: style |= wxICON_ERROR; break;
+        case 0: style |= wxICON_NONE; break;
+        case 1: style |= wxICON_INFORMATION; break;
+        case 2: style |= wxICON_QUESTION; break;
+        case 3: style |= wxICON_WARNING; break;
+        case 4: style |= wxICON_ERROR; break;
     }
 
     if ( m_chkCentre->IsChecked() )
