--- src1/samples/treelist/treelist.cpp	2018-08-29 10:10:20.995681892 +0200
+++ src2/samples/treelist/treelist.cpp	2018-08-29 09:42:01.293870893 +0200
@@ -33,6 +33,7 @@
     #include "wx/sizer.h"
     #include "wx/statusbr.h"
     #include "wx/textctrl.h"
+    #include "wx/imagpng.h"
 #endif
 
 #include "wx/treelist.h"
@@ -48,6 +49,20 @@
     #include "../sample.xpm"
 #endif
 
+constexpr int blue_square_png_size = 105;
+const unsigned char blue_square_png[blue_square_png_size] = {
+    0x89, 0x50, 0x4e, 0x47, 0x0d, 0x0a, 0x1a, 0x0a, 0x00,
+    0x00, 0x00, 0x0d, 0x49, 0x48, 0x44, 0x52, 0x00, 0x00,
+    0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x01, 0x03, 0x00,
+    0x00, 0x00, 0x25, 0x3d, 0x6d, 0x22, 0x00, 0x00, 0x00,
+    0x06, 0x50, 0x4c, 0x54, 0x45, 0x67, 0xeb, 0x55, 0x00,
+    0x00, 0xff, 0x3e, 0x43, 0x60, 0xfe, 0x00, 0x00, 0x00,
+    0x01, 0x74, 0x52, 0x4e, 0x53, 0x00, 0x40, 0xe6, 0xd8,
+    0x66, 0x00, 0x00, 0x00, 0x11, 0x49, 0x44, 0x41, 0x54,
+    0x08, 0xd7, 0x63, 0x60, 0x40, 0x02, 0xfc, 0x1f, 0xb0,
+    0x23, 0x24, 0x00, 0x00, 0xbb, 0xec, 0x07, 0xf9, 0xc0,
+    0x69, 0x48, 0x66, 0x00, 0x00, 0x00, 0x00, 0x49, 0x45,
+    0x4e, 0x44, 0xae, 0x42, 0x60, 0x82 };
 // ----------------------------------------------------------------------------
 // Constants
 // ----------------------------------------------------------------------------
@@ -253,6 +268,7 @@
     if ( !wxApp::OnInit() )
         return false;
 
+    wxImage::AddHandler(new wxPNGHandler);
     new MyFrame;
 
     return true;
@@ -372,6 +388,8 @@
 
     m_imageList = new wxImageList(iconSize.x, iconSize.y);
 
+    auto bmp = wxBitmap::NewFromPNGData(blue_square_png, blue_square_png_size);
+
     // The order should be the same as for the enum elements.
     static const char* const icons[] =
     {
@@ -382,10 +400,7 @@
 
     for ( unsigned n = 0; n < WXSIZEOF(icons); n++ )
     {
-        m_imageList->Add
-                     (
-                        wxArtProvider::GetIcon(icons[n], wxART_LIST, iconSize)
-                     );
+        m_imageList->Add(bmp);
     }
 }
 
