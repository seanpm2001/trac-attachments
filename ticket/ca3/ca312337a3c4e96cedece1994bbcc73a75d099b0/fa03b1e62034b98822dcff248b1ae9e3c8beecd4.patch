Index: src/common/strvararg.cpp
===================================================================
--- src/common/strvararg.cpp	(revision 77985)
+++ src/common/strvararg.cpp	(working copy)
@@ -198,6 +198,15 @@
 
                 switch ( *format )
                 {
+#if defined(__VISUALC__)
+                    case 'z':
+                        // Used for size_t printing (e.g. %zu)
+                        // Replace z size modifier with msvc's I size modifier
+                        ChangeFmtChar('I');
+                        format++;
+                        size = Size_Default;
+                        break;
+#endif // __VISUALC__
                     case 'h':
                         size = Size_Short;
                         format++;
@@ -341,6 +350,18 @@
         *(m_fmtLast++) = ch;
     }
 
+    // change a character
+    void ChangeFmtChar(CharType ch)
+    {
+        if ( m_fmtOrig )
+        {
+            // so far we haven't translated anything yet
+            CopyAllBefore();
+        }
+
+        *(m_fmtLast) = ch;
+    }
+
     void CopyAllBefore()
     {
         wxASSERT_MSG( m_fmtOrig && m_fmt.data() == NULL, "logic error" );
Index: tests/strings/vararg.cpp
===================================================================
--- tests/strings/vararg.cpp	(revision 77985)
+++ tests/strings/vararg.cpp	(working copy)
@@ -36,6 +36,7 @@
     CPPUNIT_TEST_SUITE( VarArgTestCase );
         CPPUNIT_TEST( StringPrintf );
         CPPUNIT_TEST( CharPrintf );
+        CPPUNIT_TEST( SizetPrintf );
 #if wxUSE_STD_STRING
         CPPUNIT_TEST( StdString );
 #endif
@@ -49,6 +50,7 @@
 
     void StringPrintf();
     void CharPrintf();
+    void SizetPrintf();
 #if wxUSE_STD_STRING
     void StdString();
 #endif
@@ -138,6 +140,20 @@
     CPPUNIT_ASSERT_EQUAL( "value is 240 (int)", s );
 }
 
+void VarArgTestCase::SizetPrintf()
+{
+    wxString s;
+    size_t  i =  1;
+    ssize_t j = -2;
+
+    s.Printf("size_t=%zu ssize_t=%zd", i, j);
+    CPPUNIT_ASSERT_EQUAL( "size_t=1 ssize_t=-2", s );
+
+    i = 160;
+    s.Printf("size_t=0x%zX", i);
+    CPPUNIT_ASSERT_EQUAL( "size_t=0xA0", s );   
+}
+
 #if wxUSE_STD_STRING
 void VarArgTestCase::StdString()
 {
