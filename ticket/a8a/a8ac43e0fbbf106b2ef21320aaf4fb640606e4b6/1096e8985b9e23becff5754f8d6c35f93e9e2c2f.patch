Index: src/msw/notebook.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/notebook.cpp,v
retrieving revision 1.182
diff -u -r1.182 src/msw/notebook.cpp
--- src/msw/notebook.cpp	2006/07/05 12:21:11	1.182
+++ src/msw/notebook.cpp	2006/09/06 09:43:15
@@ -866,10 +866,28 @@
     wxPaintDC dc(this);
     wxMemoryDC memdc;
     RECT rc;
+    
     ::GetClientRect(GetHwnd(), &rc);
+    
     wxBitmap bmp(rc.right, rc.bottom);
     memdc.SelectObject(bmp);
 
+    const bool rtl = wxTheApp->GetLayoutDirection() == wxLayout_RightToLeft;
+    if (rtl)
+    {
+        // MinGW headers don't have the SetLayout function, load it
+        // dynamically
+        HMODULE hGdiDll = LoadLibrary(_T("gdi32.dll"));
+        if (hGdiDll)
+        {
+            typedef DWORD (WINAPI *t_SetLayout)(HDC, DWORD);
+            t_SetLayout pSetLayout = (t_SetLayout)GetProcAddress(hGdiDll, "SetLayout");
+            if (pSetLayout)
+                pSetLayout((HDC)memdc.GetHDC(), LAYOUT_RTL);
+            FreeLibrary(hGdiDll);
+        }
+    }
+
     // if there is no special brush just use the solid background colour
 #if wxUSE_UXTHEME
     HBRUSH hbr = (HBRUSH)m_hbrBackground;
@@ -887,7 +905,9 @@
 
     MSWDefWindowProc(WM_PAINT, (WPARAM)memdc.GetHDC(), 0);
 
-    dc.Blit(0, 0, rc.right, rc.bottom, &memdc, 0, 0);
+    // For some reason in RTL mode, source offset has to be -1, otherwise the 
+    // right border (physical) remains unpainted.
+    dc.Blit(rtl ? -1 : 0, 0, rc.right + 0, rc.bottom, &memdc, (rtl ? -1 : 0), 0);
 }
 
 #endif // USE_NOTEBOOK_ANTIFLICKER

 	  	 
