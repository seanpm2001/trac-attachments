Index: filesys.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/filesys.h,v
retrieving revision 1.30
diff -b -u -t -r1.30 filesys.h
--- filesys.h	2005/04/08 14:33:56	1.30
+++ filesys.h	2005/06/06 06:59:59
@@ -189,6 +189,9 @@
     // In fact, this class is only front-end to the FS handlers :-)
     static void AddHandler(wxFileSystemHandler *handler);
 
+    // Removes FS handler. returns removed handler (may be NULL if handler was not in list)
+    static wxFileSystemHandler* RemoveHandler(wxFileSystemHandler *handler);
+
     // remove all items from the m_Handlers list
     static void CleanUpHandlers();
Index: filesys.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/filesys.cpp,v
retrieving revision 1.60
diff -b -u -t -r1.60 filesys.cpp
--- filesys.cpp	2005/02/01 19:37:35	1.60
+++ filesys.cpp	2005/06/06 07:02:56
@@ -454,7 +454,20 @@
     m_Handlers.Append(handler);
 }
 
+wxFileSystemHandler* wxFileSystem::RemoveHandler(wxFileSystemHandler *handler)
+{
+    // if handler has already been removed (or deleted)
+    // we return NULL. This is by design in case
+    // CleanUpHandlers() is called before RemoveHandler
+    // is called, as we cannot control the order
+    // which modules are unloaded
+    if (!m_Handlers.DeleteObject(handler))
+        return NULL;
+
+    return handler;
+}
 
+
 void wxFileSystem::CleanUpHandlers()
 {
     WX_CLEAR_LIST(wxList, m_Handlers);
@@ -544,15 +557,28 @@
     DECLARE_DYNAMIC_CLASS(wxFileSystemModule)
 
     public:
+        wxFileSystemModule() :
+            wxModule(),
+            m_handler(NULL)
+        {
+        }
+
         virtual bool OnInit()
         {
-            wxFileSystem::AddHandler(new wxLocalFSHandler);
+            m_handler = new wxLocalFSHandler;
+            wxFileSystem::AddHandler(m_handler);
             return true;
         }
         virtual void OnExit()
         {
+            delete wxFileSystem::RemoveHandler(m_handler);
+
             wxFileSystem::CleanUpHandlers();
         }
+
+    private:
+        wxFileSystemHandler* m_handler;
+
 };
 
 IMPLEMENT_DYNAMIC_CLASS(wxFileSystemModule, wxModule)
Index: fs_inet.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/fs_inet.cpp,v
retrieving revision 1.35
diff -b -u -t -r1.35 fs_inet.cpp
--- fs_inet.cpp	2005/03/24 20:01:44	1.35
+++ fs_inet.cpp	2005/06/06 06:57:26
@@ -143,12 +143,26 @@
     DECLARE_DYNAMIC_CLASS(wxFileSystemInternetModule)
 
     public:
+        wxFileSystemInternetModule() :
+           wxModule(),
+           m_handler(NULL)
+        {
+        }
+
         virtual bool OnInit()
         {
-            wxFileSystem::AddHandler(new wxInternetFSHandler);
+            m_handler = new wxInternetFSHandler;
+            wxFileSystem::AddHandler(m_handler);
             return true;
+        }
+
+        virtual void OnExit() 
+        {
+            delete wxFileSystem::RemoveHandler(m_handler);
         }
-        virtual void OnExit() {}
+
+    private:
+        wxFileSystemHandler* m_handler;
 };
 
 IMPLEMENT_DYNAMIC_CLASS(wxFileSystemInternetModule, wxModule)

 	  	 
