diff -bu1 -r wxWindows/./demos/dbbrowse/dummy.cpp wxWin/./demos/dbbrowse/dummy.cpp
--- wxWindows/./demos/dbbrowse/dummy.cpp	2003-03-17 15:00:48.000000000 +0100
+++ wxWin/./demos/dbbrowse/dummy.cpp	2004-02-26 12:23:40.000000000 +0100
@@ -30,7 +30 @@
 
-// Foils optimizations in Visual C++ (see also app.cpp). Without it,
-// dummy.obj isn't linked and we get a linker error.
-#if defined(__VISUALC__) && defined(__WIN16__)
-    char wxDummyChar = 0;
-#endif
-
diff -bu1 -r wxWindows/./demos/dbbrowse/pgmctrl.cpp wxWin/./demos/dbbrowse/pgmctrl.cpp
--- wxWindows/./demos/dbbrowse/pgmctrl.cpp	2004-01-11 23:08:25.000000000 +0100
+++ wxWin/./demos/dbbrowse/pgmctrl.cpp	2004-02-26 12:24:14.000000000 +0100
@@ -76,8 +76,2 @@
     // should correspond to TreeIc_xxx enum
-#if defined(__WXMSW__) && defined(__WIN16__)
-    // This is required in 16-bit Windows mode only because we can't load a specific (16x16)
-    // icon image, so it comes out stretched
-    p_imageListNormal->Add(wxBitmap(wxBitmap("bitmap1", wxBITMAP_TYPE_BMP_RESOURCE).ConvertToImage().Rescale(image_size, image_size)));
-    p_imageListNormal->Add(wxBitmap(wxBitmap("bitmap2", wxBITMAP_TYPE_BMP_RESOURCE).ConvertToImage().Rescale(image_size, image_size)));
-#else
     p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(aLogo)).ConvertToImage().Rescale(image_size, image_size)));
@@ -89,3 +83,2 @@
     p_imageListNormal->Add(wxBitmap(wxBitmap(wxICON(FolderOpen)).ConvertToImage().Rescale(image_size, image_size)));
-#endif
     SetImageList(p_imageListNormal);
diff -bu1 -r wxWindows/./demos/forty/scorefil.h wxWin/./demos/forty/scorefil.h
--- wxWindows/./demos/forty/scorefil.h	2002-12-22 20:57:12.000000000 +0100
+++ wxWin/./demos/forty/scorefil.h	2004-02-26 12:25:06.000000000 +0100
@@ -17,9 +17,2 @@
 
-#ifdef __WIN16__
-#include <wx/fileconf.h>
-
-#undef wxConfig
-#define wxConfig wxFileConfig
-#endif
-
 class ScoreFile {
diff -bu1 -r wxWindows/./demos/life/game.cpp wxWin/./demos/life/game.cpp
--- wxWindows/./demos/life/game.cpp	2003-09-11 17:18:00.000000000 +0200
+++ wxWin/./demos/life/game.cpp	2004-02-26 12:25:32.000000000 +0100
@@ -11,6 +11,2 @@
 
-#ifdef __WIN16__
-#error "Sorry, Life! will not work in 16-bit Windows"
-#endif
-
 // ==========================================================================
diff -bu1 -r wxWindows/./docs/html/index.htm wxWin/./docs/html/index.htm
--- wxWindows/./docs/html/index.htm	2004-01-31 15:02:47.000000000 +0100
+++ wxWin/./docs/html/index.htm	2004-02-26 12:28:47.000000000 +0100
@@ -297,3 +297,3 @@
 <li><a href="../../samples/config">config</a>: demonstrates use of wxConfig, which
-defaults to wxRegConfig on WIN32, wxIniConfig on WIN16, and wxFileConfig on other platforms.
+defaults to wxRegConfig on WIN32 (optionally wxIniConfig), and wxFileConfig on other platforms.
 <li><a href="../../samples/console">console</a>: demonstrates a console application using
diff -bu1 -r wxWindows/./docs/latex/wx/config.tex wxWin/./docs/latex/wx/config.tex
--- wxWindows/./docs/latex/wx/config.tex	2003-04-28 13:37:08.000000000 +0200
+++ wxWin/./docs/latex/wx/config.tex	2004-02-26 12:30:29.000000000 +0100
@@ -13,3 +13,3 @@
 which is mapped onto the native wxConfigBase implementation on the given
-platform: i.e. wxRegConfig under Win32, wxIniConfig under Win16 and
+platform: i.e. wxRegConfig under Win32 (optionally wxIniConfig) and
 wxFileConfig otherwise.
diff -bu1 -r wxWindows/./docs/latex/wx/function.tex wxWin/./docs/latex/wx/function.tex
--- wxWindows/./docs/latex/wx/function.tex	2004-02-22 02:16:31.000000000 +0100
+++ wxWin/./docs/latex/wx/function.tex	2004-02-26 12:31:37.000000000 +0100
@@ -971,3 +971,3 @@
 
-This function is implemented for Win16 (only for drives less than 2Gb), Win32,
+This function is implemented for Win32,
 Mac OS and generic Unix provided the system has {\tt statfs()} function.
diff -bu1 -r wxWindows/./docs/latex/wx/tdb.tex wxWin/./docs/latex/wx/tdb.tex
--- wxWindows/./docs/latex/wx/tdb.tex	2003-10-28 00:43:54.000000000 +0100
+++ wxWin/./docs/latex/wx/tdb.tex	2004-02-26 12:32:13.000000000 +0100
@@ -293,4 +293,2 @@
 
-You cannot compile the wxODBC classes under Win16 - sorry.
-
 \normalbox{MORE TO COME}
diff -bu1 -r wxWindows/./include/wx/confbase.h wxWin/./include/wx/confbase.h
--- wxWindows/./include/wx/confbase.h	2003-10-17 22:48:20.000000000 +0200
+++ wxWin/./include/wx/confbase.h	2004-02-26 12:35:10.000000000 +0100
@@ -51,4 +51,3 @@
 // (i.e. whether wxConfigBase::Create() will create a wxFileConfig (if it's
-//  FALSE) or wxRegConfig (if it's true and we're under Win32) or wxIniConfig
-//  (under Win16))
+//  FALSE) or wxRegConfig (if it's true and we're under Win32))
 #ifndef   wxUSE_CONFIG_NATIVE
@@ -322,8 +321,5 @@
 // under Windows we prefer to use the native implementation
+// wxIniConfig isn't native anywhere after droping win16 in wxWidgets 2.6
 #if defined(__WXMSW__) && wxUSE_CONFIG_NATIVE
-  #ifdef __WIN32__
     #define wxConfig  wxRegConfig
-  #else  //WIN16
-    #define wxConfig  wxIniConfig
-  #endif
 #else // either we're under Unix or wish to use files even under Windows
diff -bu1 -r wxWindows/./include/wx/dc.h wxWin/./include/wx/dc.h
--- wxWindows/./include/wx/dc.h	2004-02-12 00:49:43.000000000 +0100
+++ wxWin/./include/wx/dc.h	2004-02-26 12:35:37.000000000 +0100
@@ -598,3 +598,2 @@
     // for compatibility with the old code when wxCoord was long everywhere
-#ifndef __WIN16__
     void GetTextExtent(const wxString& string,
@@ -647,3 +646,2 @@
     }
-#endif // !Win16
 
diff -bu1 -r wxWindows/./include/wx/defs.h wxWin/./include/wx/defs.h
--- wxWindows/./include/wx/defs.h	2004-02-26 07:29:22.000000000 +0100
+++ wxWin/./include/wx/defs.h	2004-02-26 12:37:43.000000000 +0100
@@ -236,7 +236,3 @@
 /*  wrap it in this guard, but such cases should still be relatively rare. */
-#ifndef __WIN16__
-    #define wxUSE_NESTED_CLASSES    1
-#else
-    #define wxUSE_NESTED_CLASSES    0
-#endif
+#define wxUSE_NESTED_CLASSES    1
 
@@ -568,10 +564,4 @@
 #else  /*  !wxUSE_COMPATIBLE_COORD_TYPES */
-    #ifdef __WIN16__
-        /*  under Win16, int is too small, so use long to allow for bigger */
-        /*  virtual canvases */
-        typedef long wxCoord;
-    #else /*  !Win16 */
         /*  other platforms we support have at least 32bit int - quite enough */
         typedef int wxCoord;
-    #endif /*  Win16/!Win16 */
 #endif /*  wxUSE_COMPATIBLE_COORD_TYPES/!wxUSE_COMPATIBLE_COORD_TYPES */
@@ -2155,13 +2145,5 @@
 /*  the keywords needed for WinMain() declaration */
-#ifdef __WIN16__
-#  ifdef __VISUALC__
-#    define WXFAR __far
-#  else
-#    define WXFAR _far
-#  endif
-#else  /*  Win32 */
-#  ifndef WXFAR
+#ifndef WXFAR
 #    define WXFAR
-#  endif
-#endif /*  Win16/32 */
+#endif
 
diff -bu1 -r wxWindows/./include/wx/dragimag.h wxWin/./include/wx/dragimag.h
--- wxWindows/./include/wx/dragimag.h	2003-10-17 22:48:20.000000000 +0200
+++ wxWin/./include/wx/dragimag.h	2004-02-26 12:39:29.000000000 +0100
@@ -10,28 +10,28 @@
 #if defined(__WXMSW__)
-#if defined(__WIN16__)  || defined(__WXUNIVERSAL__)
-#include "wx/generic/dragimgg.h"
-#define wxDragImage wxGenericDragImage
+#   if defined(__WXUNIVERSAL__)
+#       include "wx/generic/dragimgg.h"
+#       define wxDragImage wxGenericDragImage
+#   else
+#       include "wx/msw/dragimag.h"
+#   endif
 
-#else
-#include "wx/msw/dragimag.h"
-#endif
 #elif defined(__WXMOTIF__)
-#include "wx/generic/dragimgg.h"
-#define wxDragImage wxGenericDragImage
+#   include "wx/generic/dragimgg.h"
+#   define wxDragImage wxGenericDragImage
 
 #elif defined(__WXGTK__)
-#include "wx/generic/dragimgg.h"
-#define wxDragImage wxGenericDragImage
+#   include "wx/generic/dragimgg.h"
+#   define wxDragImage wxGenericDragImage
 
 #elif defined(__WXX11__)
-#include "wx/generic/dragimgg.h"
-#define wxDragImage wxGenericDragImage
+#   include "wx/generic/dragimgg.h"
+#   define wxDragImage wxGenericDragImage
 
 #elif defined(__WXMAC__)
-#include "wx/generic/dragimgg.h"
-#define wxDragImage wxGenericDragImage
+#   include "wx/generic/dragimgg.h"
+#   define wxDragImage wxGenericDragImage
 
 #elif defined(__WXPM__)
-#include "wx/generic/dragimgg.h"
-#define wxDragImage wxGenericDragImage
+#   include "wx/generic/dragimgg.h"
+#   define wxDragImage wxGenericDragImage
 
diff -bu1 -r wxWindows/./include/wx/event.h wxWin/./include/wx/event.h
--- wxWindows/./include/wx/event.h	2004-02-11 01:18:21.000000000 +0100
+++ wxWin/./include/wx/event.h	2004-02-26 12:39:54.000000000 +0100
@@ -756,3 +756,2 @@
 
-#ifndef __WIN16__
     void GetPosition(long *xpos, long *ypos) const
@@ -764,3 +763,2 @@
     }
-#endif
 
@@ -907,3 +905,2 @@
 
-#ifndef __WIN16__
     void GetPosition(long *xpos, long *ypos) const
@@ -913,3 +910,2 @@
     }
-#endif
 
diff -bu1 -r wxWindows/./include/wx/filefn.h wxWin/./include/wx/filefn.h
--- wxWindows/./include/wx/filefn.h	2004-02-07 16:07:02.000000000 +0100
+++ wxWin/./include/wx/filefn.h	2004-02-26 12:40:12.000000000 +0100
@@ -41,4 +41,2 @@
     typedef _off_t off_t;
-#elif defined(__BORLANDC__) && defined(__WIN16__)
-    typedef long off_t;
 #elif defined(__SYMANTEC__)
diff -bu1 -r wxWindows/./include/wx/generic/imaglist.h wxWin/./include/wx/generic/imaglist.h
--- wxWindows/./include/wx/generic/imaglist.h	2003-08-09 15:37:30.000000000 +0200
+++ wxWin/./include/wx/generic/imaglist.h	2004-02-26 12:40:41.000000000 +0100
@@ -88,3 +88,3 @@
 
-#if !defined(__WXMSW__) || defined(__WIN16__) || defined(__WXUNIVERSAL__)
+#if !defined(__WXMSW__) || defined(__WXUNIVERSAL__)
 /*
@@ -106,3 +106,3 @@
 };
-#endif // !__WXMSW__ || __WIN16__ || __WXUNIVERSAL__
+#endif // !__WXMSW__ || __WXUNIVERSAL__
 
diff -bu1 -r wxWindows/./include/wx/generic/listctrl.h wxWin/./include/wx/generic/listctrl.h
--- wxWindows/./include/wx/generic/listctrl.h	2004-01-15 14:48:21.000000000 +0100
+++ wxWin/./include/wx/generic/listctrl.h	2004-02-26 18:01:00.000000000 +0100
@@ -39,3 +39,3 @@
 
-#if !defined(__WXMSW__) || defined(__WIN16__) || defined(__WXUNIVERSAL__)
+#if !defined(__WXMSW__) || defined(__WXUNIVERSAL__)
 class WXDLLEXPORT wxListCtrl;
@@ -242,3 +242,3 @@
 
-#if !defined(__WXMSW__) || defined(__WIN16__) || defined(__WXUNIVERSAL__)
+#if !defined(__WXMSW__) || defined(__WXUNIVERSAL__)
 /*
@@ -265,3 +265,3 @@
 };
-#endif // !__WXMSW__ || __WIN16__ || __WXUNIVERSAL__
+#endif // !__WXMSW__ || __WXUNIVERSAL__
 
diff -bu1 -r wxWindows/./include/wx/generic/treectlg.h wxWin/./include/wx/generic/treectlg.h
--- wxWindows/./include/wx/generic/treectlg.h	2004-02-17 00:11:14.000000000 +0100
+++ wxWin/./include/wx/generic/treectlg.h	2004-02-26 12:41:48.000000000 +0100
@@ -496,3 +496,3 @@
 
-#if !defined(__WXMSW__) || defined(__WIN16__) || defined(__WXUNIVERSAL__)
+#if !defined(__WXMSW__) || defined(__WXUNIVERSAL__)
 /*
@@ -519,3 +519,3 @@
 };
-#endif // !__WXMSW__ || __WIN16__ || __WXUNIVERSAL__
+#endif // !__WXMSW__ || __WXUNIVERSAL__
 
diff -bu1 -r wxWindows/./include/wx/isql.h wxWin/./include/wx/isql.h
--- wxWindows/./include/wx/isql.h	2002-08-25 21:25:21.000000000 +0200
+++ wxWin/./include/wx/isql.h	2004-02-26 12:42:28.000000000 +0100
@@ -28,10 +28,3 @@
 
-#if defined(__WIN16__)
-
-#define SQL_API EXPORT CALLBACK
-#ifndef EXPORT
-#define EXPORT _export
-#endif
-
-#elif defined(WIN32)
+#if defined(WIN32)
 #define SQL_API				__stdcall
diff -bu1 -r wxWindows/./include/wx/mac/setup0.h wxWin/./include/wx/mac/setup0.h
--- wxWindows/./include/wx/mac/setup0.h	2004-02-02 15:34:26.000000000 +0100
+++ wxWin/./include/wx/mac/setup0.h	2004-02-26 12:42:52.000000000 +0100
@@ -228,3 +228,3 @@
 //
-// This is ignored under Win16, threads are only supported under Win32.
+// Threads are only supported under Win32.
 //
diff -bu1 -r wxWindows/./include/wx/metafile.h wxWin/./include/wx/metafile.h
--- wxWindows/./include/wx/metafile.h	2003-03-17 11:33:31.000000000 +0100
+++ wxWin/./include/wx/metafile.h	2004-02-26 12:45:06.000000000 +0100
@@ -22,3 +22,3 @@
 #if defined(__WXMSW__)
-    #if defined(__WIN32__) && wxUSE_ENH_METAFILE
+    #if wxUSE_ENH_METAFILE
         #include "wx/msw/enhmeta.h"
@@ -35,3 +35,3 @@
         #endif // wxUSE_WIN_METAFILES_ALWAYS
-    #else // Win16
+    #else // !wxUSE_ENH_METAFILE
         #include "wx/msw/metafile.h"
diff -bu1 -r wxWindows/./include/wx/msw/ole/uuid.h wxWin/./include/wx/msw/ole/uuid.h
--- wxWindows/./include/wx/msw/ole/uuid.h	2003-08-09 15:38:07.000000000 +0200
+++ wxWin/./include/wx/msw/ole/uuid.h	2004-02-26 12:45:39.000000000 +0100
@@ -34,4 +34,2 @@
     } UUID;                     // UUID = GUID = CLSID = LIBID = IID
-  #else   // WIN16
-    #error "Don't know about UUIDs on this platform"
   #endif  // WIN32
diff -bu1 -r wxWindows/./include/wx/msw/private.h wxWin/./include/wx/msw/private.h
--- wxWindows/./include/wx/msw/private.h	2004-02-10 13:56:25.000000000 +0100
+++ wxWin/./include/wx/msw/private.h	2004-02-26 12:46:22.000000000 +0100
@@ -301,5 +301,3 @@
     RECT rect;
-#ifdef __WIN16__
-    ::GetWindowRect(hwnd, &rect);
-#else // Win32
+
     if ( !::GetWindowRect(hwnd, &rect) )
@@ -308,3 +306,2 @@
     }
-#endif // Win16/32
 
@@ -316,5 +313,3 @@
     RECT rect;
-#ifdef __WIN16__
-    ::GetClientRect(hwnd, &rect);
-#else // Win32
+
     if ( !::GetClientRect(hwnd, &rect) )
@@ -323,3 +318,2 @@
     }
-#endif // Win16/32
 
diff -bu1 -r wxWindows/./include/wx/msw/statbmp.h wxWin/./include/wx/msw/statbmp.h
--- wxWindows/./include/wx/msw/statbmp.h	2004-02-25 11:44:28.000000000 +0100
+++ wxWin/./include/wx/msw/statbmp.h	2004-02-26 12:46:53.000000000 +0100
@@ -76,5 +76,2 @@
     // implement base class virtuals
-#ifdef __WIN16__
-    virtual bool MSWOnDraw(WXDRAWITEMSTRUCT *item);
-#endif // __WIN16__
     virtual WXLRESULT MSWWindowProc(WXUINT nMsg, WXWPARAM wParam, WXLPARAM lParam);
diff -bu1 -r wxWindows/./include/wx/msw/tbarmsw.h wxWin/./include/wx/msw/tbarmsw.h
--- wxWindows/./include/wx/msw/tbarmsw.h	2003-08-09 15:38:01.000000000 +0200
+++ wxWin/./include/wx/msw/tbarmsw.h	2004-02-26 12:47:28.000000000 +0100
@@ -2,3 +2,3 @@
 // Name:        wx/msw/tbarmsw.h
-// Purpose:     wxToolBar for Win16
+// Purpose:     wxToolBar for older Windowses
 // Author:      Julian Smart
@@ -27,3 +27,3 @@
 // ----------------------------------------------------------------------------
-// wxToolBar for Win16
+// wxToolBar for older Windowses
 // ----------------------------------------------------------------------------
diff -bu1 -r wxWindows/./include/wx/msw/textctrl.h wxWin/./include/wx/msw/textctrl.h
--- wxWindows/./include/wx/msw/textctrl.h	2004-02-25 11:44:28.000000000 +0100
+++ wxWin/./include/wx/msw/textctrl.h	2004-02-26 12:47:52.000000000 +0100
@@ -149,8 +149,2 @@
 
-    // In WIN16, need to override normal erasing because
-    // Ctl3D doesn't use the wxWindows background colour.
-#ifdef __WIN16__
-    void OnEraseBackground(wxEraseEvent& event);
-#endif
-
 #if wxUSE_RICHEDIT
diff -bu1 -r wxWindows/./include/wx/platform.h wxWin/./include/wx/platform.h
--- wxWindows/./include/wx/platform.h	2004-02-06 00:13:21.000000000 +0100
+++ wxWin/./include/wx/platform.h	2004-02-26 12:50:34.000000000 +0100
@@ -283,3 +283,3 @@
 #    ifndef __WIN32__
-#        define __WIN16__
+#        error "__WIN32__ should be defined for Win32 and Win64, Win16 is not supported"
 #    endif
diff -bu1 -r wxWindows/./include/wx/spinctrl.h wxWin/./include/wx/spinctrl.h
--- wxWindows/./include/wx/spinctrl.h	2004-02-10 23:15:15.000000000 +0100
+++ wxWin/./include/wx/spinctrl.h	2004-02-26 12:51:10.000000000 +0100
@@ -57,3 +57,3 @@
     #include "wx/generic/spinctlg.h"
-#elif defined(__WXMSW__) && defined(__WIN32__)
+#elif defined(__WXMSW__)
     #include "wx/msw/spinctrl.h"
@@ -67,4 +67,2 @@
     #include "wx/mac/spinctrl.h"
-#else // Win16 || !Win
-    #include "wx/generic/spinctlg.h"
 #endif // platform
diff -bu1 -r wxWindows/./include/wx/treectrl.h wxWin/./include/wx/treectrl.h
--- wxWindows/./include/wx/treectrl.h	2003-10-17 22:48:20.000000000 +0200
+++ wxWin/./include/wx/treectrl.h	2004-02-26 12:51:30.000000000 +0100
@@ -12,7 +12,3 @@
 #elif defined(__WXMSW__)
-    #ifdef __WIN16__
-        #include "wx/generic/treectlg.h"
-    #else
         #include "wx/msw/treectrl.h"
-    #endif
 #elif defined(__WXMOTIF__)
diff -bu1 -r wxWindows/./include/wx/wxchar.h wxWin/./include/wx/wxchar.h
--- wxWindows/./include/wx/wxchar.h	2004-02-21 17:39:22.000000000 +0100
+++ wxWin/./include/wx/wxchar.h	2004-02-26 12:51:50.000000000 +0100
@@ -24,6 +24,3 @@
 #if !defined(wxUSE_WCHAR_T)
-    #if defined(__WIN16__)
-        /* no wchar_t under Win16 regadrless of compiler used */
-        #define wxUSE_WCHAR_T 0
-    #elif defined(__UNIX__)
+    #if defined(__UNIX__)
         #if defined(HAVE_WCSTR_H) || defined(HAVE_WCHAR_H) || defined(__FreeBSD__) || defined(__DARWIN__)
diff -bu1 -r wxWindows/./samples/controls/controls.cpp wxWin/./samples/controls/controls.cpp
--- wxWindows/./samples/controls/controls.cpp	2003-12-13 10:55:50.000000000 +0100
+++ wxWin/./samples/controls/controls.cpp	2004-02-26 12:55:01.000000000 +0100
@@ -47,13 +47,5 @@
 
-#ifdef __WIN16__
-    // Win16 doesn't have them
-    #ifdef wxUSE_SPINBTN
-    #undef wxUSE_SPINBTN
-    #endif
-    #define wxUSE_SPINBTN 0
-#else
-    #ifndef wxUSE_SPINBTN
+#ifndef wxUSE_SPINBTN
     #define wxUSE_SPINBTN 1
-    #endif
-#endif // __WIN16__
+#endif
 
@@ -794,3 +786,3 @@
 
-#if !defined(__WXMOTIF__) && !defined(__WIN16__)  // wxStaticBitmap not working under Motif yet; and icons not allowed under WIN16.
+#if !defined(__WXMOTIF__) // wxStaticBitmap not working under Motif yet.
     wxIcon icon = wxArtProvider::GetIcon(wxART_INFORMATION);
diff -bu1 -r wxWindows/./samples/notebook/notebook.cpp wxWin/./samples/notebook/notebook.cpp
--- wxWindows/./samples/notebook/notebook.cpp	2004-02-09 23:04:14.000000000 +0100
+++ wxWin/./samples/notebook/notebook.cpp	2004-02-26 12:55:18.000000000 +0100
@@ -35,3 +35,3 @@
     // properly unless you set the size again
-#if defined(__WIN16__) || defined(__WXMOTIF__)
+#if defined(__WXMOTIF__)
     int width, height;
diff -bu1 -r wxWindows/./src/common/cmndata.cpp wxWin/./src/common/cmndata.cpp
--- wxWindows/./src/common/cmndata.cpp	2004-02-10 23:46:10.000000000 +0100
+++ wxWin/./src/common/cmndata.cpp	2004-02-26 14:58:00.000000000 +0100
@@ -392,6 +392,4 @@
 
-#ifndef __WIN16__
         devMode->dmCollate = (m_printCollate ? DMCOLLATE_TRUE : DMCOLLATE_FALSE);
         devMode->dmFields |= DM_COLLATE;
-#endif
 
@@ -518,3 +516,2 @@
 
-#ifndef __WIN16__
         if (devMode->dmFields & DM_COLLATE)
@@ -526,3 +523,2 @@
         }
-#endif
 
diff -bu1 -r wxWindows/./src/common/config.cpp wxWin/./src/common/config.cpp
--- wxWindows/./src/common/config.cpp	2003-08-09 15:45:43.000000000 +0200
+++ wxWin/./src/common/config.cpp	2004-02-26 13:04:13.000000000 +0100
@@ -90,7 +90,3 @@
     #if defined(__WXMSW__) && wxUSE_CONFIG_NATIVE
-      #ifdef __WIN32__
         new wxRegConfig(wxTheApp->GetAppName(), wxTheApp->GetVendorName());
-      #else  //WIN16
-        new wxIniConfig(wxTheApp->GetAppName(), wxTheApp->GetVendorName());
-      #endif
     #else // either we're under Unix or wish to use files even under Windows
diff -bu1 -r wxWindows/./src/common/filename.cpp wxWin/./src/common/filename.cpp
--- wxWindows/./src/common/filename.cpp	2004-01-26 13:53:39.000000000 +0100
+++ wxWin/./src/common/filename.cpp	2004-02-26 13:04:51.000000000 +0100
@@ -587,3 +587,3 @@
 #elif defined(__WINDOWS__) && !defined(__WXMICROWIN__)
-#ifdef __WIN32__
+
     if ( dir.empty() )
@@ -614,8 +614,2 @@
     }
-#else // Win16
-    if ( !::GetTempFileName(NULL, prefix, 0, wxStringBuffer(path, 1025)) )
-    {
-        path.clear();
-    }
-#endif // Win32/16
 
diff -bu1 -r wxWindows/./src/common/log.cpp wxWin/./src/common/log.cpp
--- wxWindows/./src/common/log.cpp	2003-08-09 15:45:47.000000000 +0200
+++ wxWin/./src/common/log.cpp	2004-02-26 14:58:59.000000000 +0100
@@ -723,8 +723,3 @@
 #if defined(__WXMSW__) && !defined(__WXMICROWIN__)
-#ifdef  __WIN32__
     return ::GetLastError();
-#else   //WIN16
-    // TODO what to do on Windows 3.1?
-    return 0;
-#endif  //WIN16/32
 #else   //Unix
@@ -741,3 +736,2 @@
 #if defined(__WXMSW__) && !defined(__WXMICROWIN__)
-#ifdef  __WIN32__
     static wxChar s_szBuf[LOG_BUFFER_SIZE / 2];
@@ -773,7 +767,3 @@
     return s_szBuf;
-#else   //Win16
-    // TODO
-    return NULL;
-#endif // Win16/32
-#else   // Unix
+#else   // Unix-WXMICROWIN
 #if wxUSE_UNICODE
@@ -785,3 +775,3 @@
 #endif
-#endif  // Win/Unix
+#endif  // Win/Unix-WXMICROWIN
 }
diff -bu1 -r wxWindows/./src/common/valgen.cpp wxWin/./src/common/valgen.cpp
--- wxWindows/./src/common/valgen.cpp	2003-08-09 15:45:49.000000000 +0200
+++ wxWin/./src/common/valgen.cpp	2004-02-26 13:06:22.000000000 +0100
@@ -170,3 +170,3 @@
 #endif
-#if wxUSE_SPINCTRL && !defined(__WIN16__) && !defined(__WXMOTIF__)
+#if wxUSE_SPINCTRL && !defined(__WXMOTIF__)
     if (m_validatorWindow->IsKindOf(CLASSINFO(wxSpinCtrl)) )
@@ -181,3 +181,3 @@
 #endif
-#if wxUSE_SPINBTN && !defined(__WIN16__)
+#if wxUSE_SPINBTN
     if (m_validatorWindow->IsKindOf(CLASSINFO(wxSpinButton)) )
@@ -286,3 +286,3 @@
     // array controls
-#if wxUSE_CHECKLISTBOX && !defined(__WIN16__)
+#if wxUSE_CHECKLISTBOX
     // NOTE: wxCheckListBox is a wxListBox, so wxCheckListBox MUST come first:
@@ -400,3 +400,3 @@
 #endif
-#if wxUSE_SPINCTRL && !defined(__WIN16__) && !defined(__WXMOTIF__)
+#if wxUSE_SPINCTRL && !defined(__WXMOTIF__)
     if (m_validatorWindow->IsKindOf(CLASSINFO(wxSpinCtrl)) )
@@ -411,3 +411,3 @@
 #endif
-#if wxUSE_SPINBTN && !defined(__WIN16__)
+#if wxUSE_SPINBTN
   if (m_validatorWindow->IsKindOf(CLASSINFO(wxSpinButton)) )
@@ -504,3 +504,2 @@
 #if wxUSE_CHECKLISTBOX
-#ifndef __WIN16__
   // NOTE: wxCheckListBox isa wxListBox, so wxCheckListBox MUST come first:
@@ -529,3 +528,2 @@
 #endif
-#endif
 #if wxUSE_LISTBOX
diff -bu1 -r wxWindows/./src/common/variant.cpp wxWin/./src/common/variant.cpp
--- wxWindows/./src/common/variant.cpp	2003-08-09 15:45:49.000000000 +0200
+++ wxWin/./src/common/variant.cpp	2004-02-26 13:07:44.000000000 +0100
@@ -715,14 +715,5 @@
 
-#if defined(__BORLANDC__) && defined(__WIN16__)
-// Change name because of truncation
-#define wxVariantDataString wxVariantStringData
-#endif
-
 class WXDLLIMPEXP_BASE wxVariantDataString: public wxVariantData
 {
-#if defined(__BORLANDC__) && defined(__WIN16__)
-DECLARE_DYNAMIC_CLASS(wxVariantStringData)
-#else
 DECLARE_DYNAMIC_CLASS(wxVariantDataString)
-#endif
 public:
@@ -818,7 +809,3 @@
 
-#if defined(__BORLANDC__) && defined(__WIN16__)
-IMPLEMENT_DYNAMIC_CLASS(wxVariantStringData, wxVariantData)
-#else
 IMPLEMENT_DYNAMIC_CLASS(wxVariantDataString, wxVariantData)
-#endif
 
diff -bu1 -r wxWindows/./src/common/xpmdecod.cpp wxWin/./src/common/xpmdecod.cpp
--- wxWindows/./src/common/xpmdecod.cpp	2004-01-22 21:05:34.000000000 +0100
+++ wxWin/./src/common/xpmdecod.cpp	2004-02-26 13:07:54.000000000 +0100
@@ -238,7 +238,3 @@
 
-#ifdef __WIN16__
-    delete[] (char**) xpm_lines;
-#else
     delete[] xpm_lines;
-#endif
 
diff -bu1 -r wxWindows/./src/common/zstream.cpp wxWin/./src/common/zstream.cpp
--- wxWindows/./src/common/zstream.cpp	2003-12-21 05:28:45.000000000 +0100
+++ wxWin/./src/common/zstream.cpp	2004-02-26 13:08:08.000000000 +0100
@@ -40,7 +40,3 @@
 enum {
-#ifdef __WIN16__
-    ZSTREAM_BUFFER_SIZE = 4096
-#else
     ZSTREAM_BUFFER_SIZE = 16384
-#endif
 };
diff -bu1 -r wxWindows/./src/generic/dragimgg.cpp wxWin/./src/generic/dragimgg.cpp
--- wxWindows/./src/generic/dragimgg.cpp	2003-08-09 15:46:01.000000000 +0200
+++ wxWin/./src/generic/dragimgg.cpp	2004-02-26 13:08:25.000000000 +0100
@@ -46,7 +46,3 @@
 
-#ifdef __WIN16__
-#define wxUSE_IMAGE_IN_DRAGIMAGE 0
-#else
 #define wxUSE_IMAGE_IN_DRAGIMAGE 1
-#endif
 
diff -bu1 -r wxWindows/./src/generic/imaglist.cpp wxWin/./src/generic/imaglist.cpp
--- wxWindows/./src/generic/imaglist.cpp	2003-12-11 09:00:57.000000000 +0100
+++ wxWin/./src/generic/imaglist.cpp	2004-02-26 13:08:38.000000000 +0100
@@ -31,3 +31,3 @@
 
-#if !defined(__WXMSW__) || defined(__WIN16__) || defined(__WXUNIVERSAL__)
+#if !defined(__WXMSW__) || defined(__WXUNIVERSAL__)
 /*
diff -bu1 -r wxWindows/./src/generic/logg.cpp wxWin/./src/generic/logg.cpp
--- wxWindows/./src/generic/logg.cpp	2004-02-08 13:43:41.000000000 +0100
+++ wxWin/./src/generic/logg.cpp	2004-02-26 13:09:23.000000000 +0100
@@ -756,3 +756,2 @@
 
-#ifndef __WIN16__
     wxBitmap bitmap;
@@ -785,3 +784,2 @@
     sizerAll->Add(new wxStaticBitmap(this, -1, bitmap), 0);
-#endif // !Win16
 
@@ -864,3 +862,2 @@
 
-#ifndef __WIN16__
     for ( size_t icon = 0; icon < WXSIZEOF(icons); icon++ )
@@ -883,3 +880,2 @@
     m_listctrl->SetImageList(imageList, wxIMAGE_LIST_SMALL);
-#endif // !Win16
 
@@ -898,3 +894,2 @@
 
-#ifndef __WIN16__
         if ( loadedIcons )
@@ -916,3 +911,2 @@
         else // failed to load images
-#endif // !Win16
         {
diff -bu1 -r wxWindows/./src/generic/notebook.cpp wxWin/./src/generic/notebook.cpp
--- wxWindows/./src/generic/notebook.cpp	2004-01-22 08:29:54.000000000 +0100
+++ wxWin/./src/generic/notebook.cpp	2004-02-26 13:11:43.000000000 +0100
@@ -164,5 +164,2 @@
 
-#if defined (__WIN16__)
-    m_tabView->SetTabSelection(nPage);
-#else
     wxNotebookPage* pPage = GetPage(nPage);
@@ -170,3 +167,3 @@
     m_tabView->SetTabSelection((int) (long) pPage);
-#endif
+
     // TODO
@@ -190,7 +187,3 @@
     wxASSERT( IS_VALID_PAGE(nPage) );
-#if defined (__WIN16__)
-	m_tabView->SetTabText(nPage, strText);
-    Refresh();
-    return TRUE;
-#else
+
     wxNotebookPage* page = GetPage(nPage);
@@ -202,3 +195,3 @@
     }
-#endif
+
     return FALSE;
@@ -210,5 +203,2 @@
 
-#if defined (__WIN16__)
-    return m_tabView->GetTabText(nPage);
-#else
     wxNotebookPage* page = ((wxNotebook*)this)->GetPage(nPage);
@@ -218,3 +208,2 @@
         return wxEmptyString;
-#endif
 }
@@ -271,7 +260,4 @@
     wxNotebookPage* pPage = GetPage(nPage);
-#if defined (__WIN16__)
-    m_tabView->RemoveTab(nPage);
-#else
+
     m_tabView->RemoveTab((int) (long) pPage);
-#endif
 
@@ -288,7 +274,5 @@
       m_nSelection = -1;
-#if defined (__WIN16__)
-      m_tabView->SetTabSelection(0, FALSE);
-#else
+
       m_tabView->SetTabSelection((int) (long) GetPage(0), FALSE);
-#endif
+
       if (m_nSelection != 0)
@@ -325,7 +309,4 @@
     wxNotebookPage* pPage = GetPage(nPage);
-#if defined (__WIN16__)
-    m_tabView->RemoveTab(nPage);
-#else
+
     m_tabView->RemoveTab((int) (long) pPage);
-#endif
 
@@ -408,8 +389,4 @@
 
-// For 16 bit integers (tabs limited to 32768)
-#if defined (__WIN16__)
-    m_tabView->AddTab(nPage, strText);
-#else
     m_tabView->AddTab((int) (long) pPage, strText);
-#endif
+
     if (!bSelect)
@@ -423,7 +400,4 @@
         // This will cause ChangePage to be called, via OnSelPage
-#if defined (__WIN16__)
-        m_tabView->SetTabSelection(nPage, TRUE);
-#else
+
         m_tabView->SetTabSelection((int) (long) pPage, TRUE);
-#endif
     }
@@ -691,6 +665,2 @@
 
-#if defined (__WIN16__)
-  int activatePos = activateId;
-  int deactivatePos = deactivateId;
-#else
   // Translate from wxTabView's ids (which aren't position-dependent)
@@ -703,3 +673,2 @@
 
-#endif
   event.SetEventObject(m_notebook);
@@ -719,6 +688,2 @@
 
-#if defined (__WIN16__)
-    int activatePos = activateId;
-    int deactivatePos = deactivateId;
-#else
     // Translate from wxTabView's ids (which aren't position-dependent)
@@ -731,3 +696,2 @@
 
-#endif
     event.SetEventObject(m_notebook);
diff -bu1 -r wxWindows/./src/generic/numdlgg.cpp wxWin/./src/generic/numdlgg.cpp
--- wxWindows/./src/generic/numdlgg.cpp	2004-02-07 14:55:49.000000000 +0100
+++ wxWin/./src/generic/numdlgg.cpp	2004-02-26 13:12:12.000000000 +0100
@@ -48,3 +48,3 @@
 
-#if !defined(__WIN16__) && wxUSE_SPINCTRL
+#if wxUSE_SPINCTRL
 #include "wx/spinctrl.h"
@@ -105,3 +105,3 @@
     m_spinctrl = new wxSpinCtrl(this, -1, valStr, wxDefaultPosition, wxSize( 140, -1 ) );
-#if !defined(__WIN16__) && wxUSE_SPINCTRL
+#if wxUSE_SPINCTRL
     m_spinctrl->SetRange((int)m_min, (int)m_max);
diff -bu1 -r wxWindows/./src/generic/sashwin.cpp wxWin/./src/generic/sashwin.cpp
--- wxWindows/./src/generic/sashwin.cpp	2003-10-19 02:50:52.000000000 +0200
+++ wxWin/./src/generic/sashwin.cpp	2004-02-26 13:12:43.000000000 +0100
@@ -672,3 +672,2 @@
     // Shadow colours
-#ifndef __WIN16__
     m_faceColour = wxSystemSettings::GetColour(wxSYS_COLOUR_3DFACE);
@@ -678,9 +677,2 @@
     m_hilightColour = wxSystemSettings::GetColour(wxSYS_COLOUR_3DHILIGHT);
-#else
-    m_faceColour = wxTheColourDatabase->Find("LIGHT GREY");
-    m_mediumShadowColour = wxTheColourDatabase->Find("GREY");
-    m_darkShadowColour = wxTheColourDatabase->Find("BLACK");
-    m_lightShadowColour = wxTheColourDatabase->Find("LIGHT GREY");
-    m_hilightColour = wxTheColourDatabase->Find("WHITE");
-#endif
 }
diff -bu1 -r wxWindows/./src/generic/treectlg.cpp wxWin/./src/generic/treectlg.cpp
--- wxWindows/./src/generic/treectlg.cpp	2004-02-17 00:12:29.000000000 +0100
+++ wxWin/./src/generic/treectlg.cpp	2004-02-26 13:12:59.000000000 +0100
@@ -678,3 +678,3 @@
 
-#if !defined(__WXMSW__) || defined(__WIN16__) || defined(__WXUNIVERSAL__)
+#if !defined(__WXMSW__) || defined(__WXUNIVERSAL__)
 /*
diff -bu1 -r wxWindows/./src/msw/accel.cpp wxWin/./src/msw/accel.cpp
--- wxWindows/./src/msw/accel.cpp	2004-02-07 15:25:58.000000000 +0100
+++ wxWin/./src/msw/accel.cpp	2004-02-26 13:15:52.000000000 +0100
@@ -61,6 +61,3 @@
   {
-    // This function not available in WIN16
-#if !defined(__WIN16__)
     DestroyAcceleratorTable((HACCEL) m_hAccel);
-#endif
   }
@@ -100,6 +97,4 @@
 // Create from an array
-#if !defined(__WIN16__)
 wxAcceleratorTable::wxAcceleratorTable(int n, const wxAcceleratorEntry entries[])
 {
-    // Not available in WIN16
     m_refData = new wxAcceleratorRefData;
@@ -135,10 +130,2 @@
 }
-#else // Win16
-wxAcceleratorTable::wxAcceleratorTable(int WXUNUSED(n), const wxAcceleratorEntry WXUNUSED(entries)[])
-{
-    // No, we simply gracefully degrade; we don't expect the
-    // developer to pepper their code with #ifdefs just for this.
-    // wxFAIL_MSG("not implemented");
-}
-#endif // Win32/16
 
diff -bu1 -r wxWindows/./src/msw/app.cpp wxWin/./src/msw/app.cpp
--- wxWindows/./src/msw/app.cpp	2003-09-27 16:47:41.000000000 +0200
+++ wxWin/./src/msw/app.cpp	2004-02-26 13:16:27.000000000 +0100
@@ -278,9 +278,2 @@
 
-#ifdef __WIN16__
-    // for OLE, enlarge message queue to be as large as possible
-    int iMsg = 96;
-    while (!SetMessageQueue(iMsg) && (iMsg -= 8))
-        ;
-#endif // Win16
-
 #if wxUSE_OLE
@@ -328,9 +321,2 @@
 
-    // This is to foil optimizations in Visual C++ that throw out dummy.obj.
-    // PLEASE DO NOT ALTER THIS.
-#if defined(__VISUALC__) && defined(__WIN16__) && !defined(WXMAKINGDLL)
-    extern char wxDummyChar;
-    if (wxDummyChar) wxDummyChar++;
-#endif
-
 #if !defined(__WXMICROWIN__) && !defined(__WXWINCE__)
diff -bu1 -r wxWindows/./src/msw/bitmap.cpp wxWin/./src/msw/bitmap.cpp
--- wxWindows/./src/msw/bitmap.cpp	2004-02-17 00:27:54.000000000 +0100
+++ wxWin/./src/msw/bitmap.cpp	2004-02-26 13:17:07.000000000 +0100
@@ -277,9 +277,3 @@
 
-#ifdef __WIN16__
-    wxFAIL_MSG( _T("don't know how to convert cursor to bitmap") );
-
-    return FALSE;
-#else
     return CopyFromIconOrCursor(cursor);
-#endif // Win16
 }
@@ -293,33 +287,3 @@
 
-    // GetIconInfo() doesn't exist under Win16 and I don't know any other way
-    // to create a bitmap from icon there - but using this way we won't have
-    // the mask (FIXME)
-#ifdef __WIN16__
-    int width = icon.GetWidth(),
-        height = icon.GetHeight();
-
-    // copy the icon to the bitmap
-    ScreenHDC hdcScreen;
-    HDC hdc = ::CreateCompatibleDC(hdcScreen);
-    HBITMAP hbitmap = ::CreateCompatibleBitmap(hdcScreen, width, height);
-    HBITMAP hbmpOld = (HBITMAP)::SelectObject(hdc, hbitmap);
-
-    ::DrawIcon(hdc, 0, 0, GetHiconOf(icon));
-
-    ::SelectObject(hdc, hbmpOld);
-    ::DeleteDC(hdc);
-
-    wxBitmapRefData *refData = new wxBitmapRefData;
-    m_refData = refData;
-
-    refData->m_width = width;
-    refData->m_height = height;
-    refData->m_depth = wxDisplayDepth();
-
-    refData->m_hBitmap = (WXHBITMAP)hbitmap;
-
-    return TRUE;
-#else // Win32
     return CopyFromIconOrCursor(icon);
-#endif // Win16/Win32
 }
diff -bu1 -r wxWindows/./src/msw/caret.cpp wxWin/./src/msw/caret.cpp
--- wxWindows/./src/msw/caret.cpp	2003-08-09 15:46:27.000000000 +0200
+++ wxWin/./src/msw/caret.cpp	2004-02-26 13:18:21.000000000 +0100
@@ -45,11 +45,5 @@
 
-// under Win16 the caret APIs are void but under Win32 they may return an
-// error code which we want to check - this macro does just this
-#ifdef __WIN16__
-    #define CALL_CARET_API(api, args)   api args
-#else // Win32
-    #define CALL_CARET_API(api, args)   \
+#define CALL_CARET_API(api, args)   \
         if ( !api args )                \
             wxLogLastError(_T(#api))
-#endif // Win16/32
 
diff -bu1 -r wxWindows/./src/msw/checklst.cpp wxWin/./src/msw/checklst.cpp
--- wxWindows/./src/msw/checklst.cpp	2004-01-31 19:21:38.000000000 +0100
+++ wxWin/./src/msw/checklst.cpp	2004-02-26 14:59:30.000000000 +0100
@@ -173,10 +173,2 @@
 
-/*
- * JACS - I've got the owner-draw stuff partially working with WIN16,
- * with a really horrible-looking cross for wxCheckListBox instead of a
- * check - could use a bitmap check-mark instead, defined in wx.rc.
- * Also there's a refresh problem whereby it doesn't always draw the
- * check until you click to the right of it, which is OK for WIN32.
- */
-
 bool wxCheckListBoxItem::OnDrawItem(wxDC& dc, const wxRect& rc,
@@ -287,3 +279,2 @@
 
-    #ifdef __WIN32__
         RECT rcUpdate;
@@ -295,12 +286,2 @@
         }
-    #else // Win16
-        // FIXME this doesn't work if the listbox is scrolled!
-        size_t nHeight = m_pParent->GetItemHeight();
-        size_t y = m_nIndex * nHeight;
-        RECT rcUpdate ;
-        rcUpdate.left   = 0 ;
-        rcUpdate.top    = y ;
-        rcUpdate.right  = GetDefaultMarginWidth() ;
-        rcUpdate.bottom = y + nHeight ;
-    #endif  // Win32/16
 
@@ -557,3 +538,2 @@
 {
-  #ifdef __WIN32__
     int nItem = (int)::SendMessage
@@ -565,6 +545,2 @@
                              );
-  #else // Win16
-    // FIXME this doesn't work when the listbox is scrolled!
-    int nItem = y / m_nItemHeight;
-  #endif // Win32/16
 
diff -bu1 -r wxWindows/./src/msw/clipbrd.cpp wxWin/./src/msw/clipbrd.cpp
--- wxWindows/./src/msw/clipbrd.cpp	2004-01-27 18:47:28.000000000 +0100
+++ wxWin/./src/msw/clipbrd.cpp	2004-02-26 13:32:06.000000000 +0100
@@ -163,3 +163,3 @@
 
-#if wxUSE_ENH_METAFILE && !defined(__WIN16__) && !defined(__WXWINCE__)
+#if wxUSE_ENH_METAFILE && !defined(__WXWINCE__)
         case CF_METAFILEPICT:
@@ -254,3 +254,3 @@
 
-#if wxUSE_ENH_METAFILE && !defined(__WIN16__) && !defined(__WXWINCE__)
+#if wxUSE_ENH_METAFILE && !defined(__WXWINCE__)
         case wxDF_ENHMETAFILE:
diff -bu1 -r wxWindows/./src/msw/combobox.cpp wxWin/./src/msw/combobox.cpp
--- wxWindows/./src/msw/combobox.cpp	2004-02-25 11:44:48.000000000 +0100
+++ wxWin/./src/msw/combobox.cpp	2004-02-26 13:32:36.000000000 +0100
@@ -583,9 +583,3 @@
 
-    if (
-#ifdef __WIN32__
-    SendMessage(hWnd, CB_SETEDITSEL, (WPARAM)0, (LPARAM)MAKELONG(fromChar, toChar))
-#else // Win16
-    SendMessage(hWnd, CB_SETEDITSEL, (WPARAM)fromChar, (LPARAM)toChar)
-#endif
-        == CB_ERR )
+    if ( SendMessage(hWnd, CB_SETEDITSEL, (WPARAM)0, (LPARAM)MAKELONG(fromChar, toChar)) == CB_ERR )
     {
diff -bu1 -r wxWindows/./src/msw/dc.cpp wxWin/./src/msw/dc.cpp
--- wxWindows/./src/msw/dc.cpp	2004-02-17 11:06:21.000000000 +0100
+++ wxWin/./src/msw/dc.cpp	2004-02-26 13:36:12.000000000 +0100
@@ -391,3 +391,3 @@
     // behaviour now (starting with 2.3.3)
-#if defined(__WIN16__) || defined(__WXWINCE__)
+#if defined(__WXWINCE__)
     RECT rectClip;
@@ -407,3 +407,3 @@
     ::DeleteObject(hrgnDest);
-#else // Win32
+#else // !WinCE
     if ( ::ExtSelectClipRgn(GetHdc(), (HRGN)hrgn, RGN_AND) == ERROR )
@@ -414,3 +414,3 @@
     }
-#endif // Win16/32
+#endif // WinCE/!WinCE
 
@@ -701,4 +701,4 @@
 #endif
-#else // Win16
-    // In WIN16, draw a cross
+#else // Symantec-MicroWin
+    // draw a cross
     HPEN blackPen = ::CreatePen(PS_SOLID, 1, RGB(0, 0, 0));
@@ -716,3 +716,3 @@
     ::DeleteObject(blackPen);
-#endif // Win32/16
+#endif // Win32/Symantec-MicroWin
 
diff -bu1 -r wxWindows/./src/msw/dcprint.cpp wxWin/./src/msw/dcprint.cpp
--- wxWindows/./src/msw/dcprint.cpp	2004-01-08 09:29:56.000000000 +0100
+++ wxWin/./src/msw/dcprint.cpp	2004-02-26 13:36:26.000000000 +0100
@@ -197,3 +197,2 @@
 
-#ifndef __WIN16__
     if (ret <= 0)
@@ -203,3 +202,2 @@
     }
-#endif
 
diff -bu1 -r wxWindows/./src/msw/dialup.cpp wxWin/./src/msw/dialup.cpp
--- wxWindows/./src/msw/dialup.cpp	2004-02-10 19:21:36.000000000 +0100
+++ wxWin/./src/msw/dialup.cpp	2004-02-26 13:36:55.000000000 +0100
@@ -26,8 +26,2 @@
 
-// these functions require Win32
-#if defined(__WIN16__) && wxUSE_DIALUP_MANAGER
-    #undef wxUSE_DIALUP_MANAGER
-    #define wxUSE_DIALUP_MANAGER 0
-#endif // wxUSE_DIALUP_MANAGER && Win16
-
 #if wxUSE_DIALUP_MANAGER
diff -bu1 -r wxWindows/./src/msw/dir.cpp wxWin/./src/msw/dir.cpp
--- wxWindows/./src/msw/dir.cpp	2003-08-09 15:46:28.000000000 +0200
+++ wxWin/./src/msw/dir.cpp	2004-02-26 13:39:22.000000000 +0100
@@ -30,7 +30,2 @@
 
-// For _A_SUBDIR, etc.
-#if defined(__BORLANDC__) && defined(__WIN16__)
-#include <dos.h>
-#endif
-
 #ifndef WX_PRECOMP
@@ -51,100 +46,15 @@
 
-// under Win16 use compiler-specific functions
-#ifdef __WIN16__
-    #ifdef __VISUALC__
-        #include <dos.h>
-        #include <errno.h>
-
-        typedef struct _find_t FIND_STRUCT;
-    #elif defined(__BORLANDC__)
-        #include <dir.h>
-
-        typedef struct ffblk FIND_STRUCT;
-    #else
-        #error "No directory searching functions for this compiler"
-    #endif
-
-    typedef FIND_STRUCT *FIND_DATA;
-    typedef char FIND_ATTR;
-
-    static inline FIND_DATA InitFindData() { return (FIND_DATA)NULL; }
-    static inline bool IsFindDataOk(FIND_DATA fd) { return fd != NULL; }
-    static inline void FreeFindData(FIND_DATA fd) { free(fd); }
-
-    static inline FIND_DATA FindFirst(const wxString& spec,
-                                      FIND_STRUCT * WXUNUSED(finddata))
-    {
-        // attribute to find all files
-        static const FIND_ATTR attr = 0x3F;
-
-        FIND_DATA fd = (FIND_DATA)malloc(sizeof(FIND_STRUCT));
-
-        if (
-        #ifdef __VISUALC__
-            _dos_findfirst(spec, attr, fd) == 0
-        #else // Borland
-            findfirst(spec, fd, attr) == 0
-        #endif
-           )
-        {
-            return fd;
-        }
-        else
-        {
-            free(fd);
+typedef WIN32_FIND_DATA FIND_STRUCT;
+typedef HANDLE FIND_DATA;
+typedef DWORD FIND_ATTR;
 
-            return NULL;
-        }
-    }
+static inline FIND_DATA InitFindData() { return INVALID_HANDLE_VALUE; }
 
-    static inline bool FindNext(FIND_DATA fd, FIND_STRUCT * WXUNUSED(finddata))
-    {
-        #ifdef __VISUALC__
-            return _dos_findnext(fd) == 0;
-        #else // Borland
-            return findnext(fd) == 0;
-        #endif
-    }
-
-    static const wxChar *GetNameFromFindData(FIND_STRUCT *finddata)
-    {
-        #ifdef __VISUALC__
-            return finddata->name;
-        #else // Borland
-            return finddata->ff_name;
-        #endif
-    }
-
-    static const FIND_ATTR GetAttrFromFindData(FIND_STRUCT *finddata)
-    {
-        #ifdef __VISUALC__
-            return finddata->attrib;
-        #else // Borland
-            return finddata->ff_attrib;
-        #endif
-    }
-
-    static inline bool IsDir(FIND_ATTR attr)
-    {
-        return (attr & _A_SUBDIR) != 0;
-    }
-
-    static inline bool IsHidden(FIND_ATTR attr)
-    {
-        return (attr & (_A_SYSTEM | _A_HIDDEN)) != 0;
-    }
-#else // Win32
-    typedef WIN32_FIND_DATA FIND_STRUCT;
-    typedef HANDLE FIND_DATA;
-    typedef DWORD FIND_ATTR;
-
-    static inline FIND_DATA InitFindData() { return INVALID_HANDLE_VALUE; }
-
-    static inline bool IsFindDataOk(FIND_DATA fd)
-    {
+static inline bool IsFindDataOk(FIND_DATA fd)
+{
         return fd != INVALID_HANDLE_VALUE;
-    }
+}
 
-    static inline void FreeFindData(FIND_DATA fd)
-    {
+static inline void FreeFindData(FIND_DATA fd)
+{
         if ( !::FindClose(fd) )
@@ -153,35 +63,34 @@
         }
-    }
+}
 
-    static inline FIND_DATA FindFirst(const wxString& spec,
+static inline FIND_DATA FindFirst(const wxString& spec,
                                       FIND_STRUCT *finddata)
-    {
+{
         return ::FindFirstFile(spec, finddata);
-    }
+}
 
-    static inline bool FindNext(FIND_DATA fd, FIND_STRUCT *finddata)
-    {
+static inline bool FindNext(FIND_DATA fd, FIND_STRUCT *finddata)
+{
         return ::FindNextFile(fd, finddata) != 0;
-    }
+}
 
-    static const wxChar *GetNameFromFindData(FIND_STRUCT *finddata)
-    {
+static const wxChar *GetNameFromFindData(FIND_STRUCT *finddata)
+{
         return finddata->cFileName;
-    }
+}
 
-    static const FIND_ATTR GetAttrFromFindData(FIND_STRUCT *finddata)
-    {
+static const FIND_ATTR GetAttrFromFindData(FIND_STRUCT *finddata)
+{
         return finddata->dwFileAttributes;
-    }
+}
 
-    static inline bool IsDir(FIND_ATTR attr)
-    {
+static inline bool IsDir(FIND_ATTR attr)
+{
         return (attr & FILE_ATTRIBUTE_DIRECTORY) != 0;
-    }
+}
 
-    static inline bool IsHidden(FIND_ATTR attr)
-    {
+static inline bool IsHidden(FIND_ATTR attr)
+{
         return (attr & (FILE_ATTRIBUTE_HIDDEN | FILE_ATTRIBUTE_SYSTEM)) != 0;
-    }
-#endif // __WIN16__
+}
 
@@ -270,8 +179,4 @@
 
-#ifdef __WIN32__
     WIN32_FIND_DATA finddata;
     #define PTR_TO_FINDDATA (&finddata)
-#else // Win16
-    #define PTR_TO_FINDDATA (m_finddata)
-#endif
 
diff -bu1 -r wxWindows/./src/msw/dummy.cpp wxWin/./src/msw/dummy.cpp
--- wxWindows/./src/msw/dummy.cpp	2000-03-19 15:47:12.000000000 +0100
+++ wxWin/./src/msw/dummy.cpp	2004-02-26 13:39:49.000000000 +0100
@@ -30,7 +30 @@
 
-// Foils optimizations in Visual C++ (see also app.cpp). Without it,
-// dummy.obj isn't linked and we get a linker error.
-#if defined(__VISUALC__) && defined(__WIN16__)
-    char wxDummyChar = 0;
-#endif
-
diff -bu1 -r wxWindows/./src/msw/fontdlg.cpp wxWin/./src/msw/fontdlg.cpp
--- wxWindows/./src/msw/fontdlg.cpp	2003-08-09 15:46:28.000000000 +0200
+++ wxWin/./src/msw/fontdlg.cpp	2004-02-26 13:40:55.000000000 +0100
@@ -97,8 +97,4 @@
     {
-#ifdef __WIN16__
-      flags |= CF_ANSIONLY;
-#else // Win32
       flags |= CF_SELECTSCRIPT;
       logFont.lfCharSet = ANSI_CHARSET;
-#endif // Win16/32
     }
diff -bu1 -r wxWindows/./src/msw/fontenum.cpp wxWin/./src/msw/fontenum.cpp
--- wxWindows/./src/msw/fontenum.cpp	2003-09-20 16:34:49.000000000 +0200
+++ wxWin/./src/msw/fontenum.cpp	2004-02-26 13:43:25.000000000 +0100
@@ -165,3 +165,3 @@
                          (LPARAM)this) ;
-#elif defined(__WIN32__)
+#else // __WIN32__
     LOGFONT lf;
@@ -172,11 +172,3 @@
                          (LPARAM)this, 0 /* reserved */) ;
-#else // Win16
-    ::EnumFonts(hDC, (LPTSTR)NULL, (FONTENUMPROC)wxFontEnumeratorProc,
-    #ifdef STRICT
-               (LPARAM)
-    #else
-               (LPSTR)
-    #endif
-               this);
-#endif // Win32/16
+#endif // Win32/CE
 
diff -bu1 -r wxWindows/./src/msw/mdi.cpp wxWin/./src/msw/mdi.cpp
--- wxWindows/./src/msw/mdi.cpp	2004-02-25 11:44:48.000000000 +0100
+++ wxWin/./src/msw/mdi.cpp	2004-02-26 13:44:00.000000000 +0100
@@ -1308,5 +1308,3 @@
 
-#ifndef __WIN16__
     ::SendMessage(GetWinHwnd(win), WM_MDIREFRESHMENU, 0, 0L);
-#endif
 
@@ -1398,3 +1396,2 @@
 {
-#ifdef __WIN32__
     *activate = true;
@@ -1402,7 +1399,2 @@
     *hwndDeact = (WXHWND)wParam;
-#else // Win16
-    *activate = (WXWORD)wParam;
-    *hwndAct = (WXHWND)LOWORD(lParam);
-    *hwndDeact = (WXHWND)HIWORD(lParam);
-#endif // Win32/Win16
 }
diff -bu1 -r wxWindows/./src/msw/menuitem.cpp wxWin/./src/msw/menuitem.cpp
--- wxWindows/./src/msw/menuitem.cpp	2004-01-17 18:04:11.000000000 +0100
+++ wxWin/./src/msw/menuitem.cpp	2004-02-26 14:14:59.000000000 +0100
@@ -323,8 +323,2 @@
 
-            // we also have to do it in the menu for Win16 (under Win32
-            // CheckMenuRadioItem() does it for us)
-#ifndef __WIN32__
-            ::CheckMenuItem(hmenu, n, n == pos ? MF_CHECKED : MF_UNCHECKED);
-#endif // Win16
-
             node = node->GetNext();
diff -bu1 -r wxWindows/./src/msw/mimetype.cpp wxWin/./src/msw/mimetype.cpp
--- wxWindows/./src/msw/mimetype.cpp	2003-10-16 13:28:07.000000000 +0200
+++ wxWin/./src/msw/mimetype.cpp	2004-02-26 14:15:26.000000000 +0100
@@ -24,5 +24,2 @@
 
-// Doesn't compile in WIN16 mode
-#ifndef __WIN16__
-
 #ifndef WX_PRECOMP
@@ -824,5 +821,2 @@
 
-#endif
-  // __WIN16__
-
 #endif // wxUSE_MIMETYPE
diff -bu1 -r wxWindows/./src/msw/printdlg.cpp wxWin/./src/msw/printdlg.cpp
--- wxWindows/./src/msw/printdlg.cpp	2003-08-15 13:17:14.000000000 +0200
+++ wxWin/./src/msw/printdlg.cpp	2004-02-26 14:17:38.000000000 +0100
@@ -41,7 +41,2 @@
 
-// Have to emulate page setup dialog for Win16
-#if !defined(__WIN95__)
-    #include "wx/generic/prntdlgg.h"
-#endif
-
 #include <stdlib.h>
diff -bu1 -r wxWindows/./src/msw/radiobut.cpp wxWin/./src/msw/radiobut.cpp
--- wxWindows/./src/msw/radiobut.cpp	2004-01-15 14:49:06.000000000 +0100
+++ wxWin/./src/msw/radiobut.cpp	2004-02-26 14:30:01.000000000 +0100
@@ -160,5 +160,3 @@
 {
-    // BST_CHECKED is defined as 1, BST_UNCHECKED as 0, so we can just pass
-    // value as is (we don't use BST_XXX here as they're not defined for Win16)
-    (void)::SendMessage(GetHwnd(), BM_SETCHECK, (WPARAM)value, 0L);
+    (void)::SendMessage(GetHwnd(), BM_SETCHECK, (value?BST_CHECKED:BST_UNCHECKED), 0L);
 
diff -bu1 -r wxWindows/./src/msw/regconf.cpp wxWin/./src/msw/regconf.cpp
--- wxWindows/./src/msw/regconf.cpp	2003-10-09 02:36:11.000000000 +0200
+++ wxWin/./src/msw/regconf.cpp	2004-02-26 14:30:21.000000000 +0100
@@ -35,4 +35,2 @@
 
-#ifndef __WIN16__
-
 #include "wx/msw/registry.h"
@@ -731,5 +729,2 @@
 #endif
-  // __WIN16__
-
-#endif
   // wxUSE_CONFIG
diff -bu1 -r wxWindows/./src/msw/region.cpp wxWin/./src/msw/region.cpp
--- wxWindows/./src/msw/region.cpp	2003-08-09 15:46:29.000000000 +0200
+++ wxWin/./src/msw/region.cpp	2004-02-26 14:30:36.000000000 +0100
@@ -423,3 +423,2 @@
     {
-#if defined(__WIN32__)
         DWORD noBytes = ::GetRegionData(((wxRegionRefData*)region.m_refData)->m_region, 0, NULL);
@@ -444,13 +443,2 @@
         delete[] (char*) rgnData;
-#else // Win16
-        RECT rect;
-        ::GetRgnBox(((wxRegionRefData*)region.m_refData)->m_region, &rect);
-        m_rects = new wxRect[1];
-        m_rects[0].x = rect.left;
-        m_rects[0].y = rect.top;
-        m_rects[0].width = rect.right - rect.left;
-        m_rects[0].height = rect.bottom - rect.top;
-
-        m_numRects = 1;
-#endif // Win32/16
     }
diff -bu1 -r wxWindows/./src/msw/registry.cpp wxWin/./src/msw/registry.cpp
--- wxWindows/./src/msw/registry.cpp	2003-10-29 03:42:29.000000000 +0100
+++ wxWin/./src/msw/registry.cpp	2004-02-26 17:30:04.000000000 +0100
@@ -30,4 +30,2 @@
 
-#ifndef __WIN16__
-
 // Windows headers
@@ -323,4 +321,2 @@
 {
-#if defined(__WIN32__)
-
     // old gcc headers incorrectly prototype RegQueryInfoKey()
@@ -364,7 +360,2 @@
   return TRUE;
-#else // Win16
-  wxFAIL_MSG("GetKeyInfo() not implemented");
-
-  return FALSE;
-#endif
 }
@@ -710,3 +701,2 @@
 
-#if defined(__WIN32__)
     m_dwLastError = RegDeleteValue((HKEY) m_hKey, WXSTRINGCAST szValue);
@@ -720,14 +710,2 @@
     }
-#else   //WIN16
-    // named registry values don't exist in Win16 world
-    wxASSERT( IsEmpty(szValue) );
-
-    // just set the (default and unique) value of the key to ""
-    m_dwLastError = RegSetValue((HKEY) m_hKey, NULL, REG_SZ, "", RESERVED);
-    if ( m_dwLastError != ERROR_SUCCESS ) {
-      wxLogSysError(m_dwLastError, _("Can't delete value of key '%s'"),
-                    GetName().c_str());
-      return FALSE;
-    }
-#endif  //WIN16/32
 
@@ -746,3 +724,2 @@
 
-  #ifdef  __WIN32__
     if ( !CONST_CAST Open() )
@@ -755,6 +732,2 @@
     return dwRet == ERROR_SUCCESS;
-  #else   // WIN16
-    // only unnamed value exists
-    return IsEmpty(szValue);
-  #endif  // WIN16/32
 }
@@ -799,3 +772,2 @@
 {
-  #ifdef  __WIN32__
     if ( ! CONST_CAST Open() )
@@ -813,5 +785,2 @@
     return (ValueType)dwType;
-  #else   //WIN16
-    return IsEmpty(szValue) ? Type_String : Type_None;
-  #endif  //WIN16/32
 }
@@ -864,3 +833,3 @@
   if ( CONST_CAST Open() ) {
-    #ifdef  __WIN32__
+
       // first get the type and size of the data
@@ -918,11 +887,2 @@
       }
-    #else   //WIN16
-      // named registry values don't exist in Win16
-      wxASSERT( IsEmpty(szValue) );
-
-      m_dwLastError = RegQueryValue((HKEY) m_hKey, 0, strValue.GetWriteBuf(256), &l);
-      strValue.UngetWriteBuf();
-      if ( m_dwLastError == ERROR_SUCCESS )
-        return TRUE;
-    #endif  //WIN16/32
   }
@@ -937,3 +897,2 @@
   if ( CONST_CAST Open() ) {
-#if defined( __WIN32__)
       m_dwLastError = RegSetValueEx((HKEY) m_hKey, szValue, (DWORD) RESERVED, REG_SZ,
@@ -943,10 +902,2 @@
         return TRUE;
-#else   //WIN16
-      // named registry values don't exist in Win16
-      wxASSERT( IsEmpty(szValue) );
-
-      m_dwLastError = RegSetValue((HKEY) m_hKey, NULL, REG_SZ, strValue, NULL);
-      if ( m_dwLastError == ERROR_SUCCESS )
-        return TRUE;
-#endif  //WIN16/32
   }
@@ -988,3 +939,2 @@
 
-#if defined( __WIN32__)
     wxChar  szValueName[1024];                  // @@ use RegQueryInfoKey...
@@ -1013,9 +963,2 @@
     strValueName = szValueName;
-#else   //WIN16
-    // only one unnamed value
-    wxASSERT( lIndex == 0 );
-
-    lIndex = -1;
-    strValueName.Empty();
-#endif
 
@@ -1127,4 +1070 @@
 
-#endif
-  // __WIN16__
-
diff -bu1 -r wxWindows/./src/msw/settings.cpp wxWin/./src/msw/settings.cpp
--- wxWindows/./src/msw/settings.cpp	2003-11-19 23:25:03.000000000 +0100
+++ wxWin/./src/msw/settings.cpp	2004-02-26 14:33:54.000000000 +0100
@@ -143,4 +143,2 @@
 
-        // none of the is supported under Win16 anyhow
-#ifdef __WIN32__
         int verMaj, verMin;
@@ -177,5 +175,2 @@
        }
-#else
-        useDefault = TRUE;
-#endif // __WIN32__
 
diff -bu1 -r wxWindows/./src/msw/statbmp.cpp wxWin/./src/msw/statbmp.cpp
--- wxWindows/./src/msw/statbmp.cpp	2004-02-25 11:44:49.000000000 +0100
+++ wxWin/./src/msw/statbmp.cpp	2004-02-26 14:35:11.000000000 +0100
@@ -113,4 +113,2 @@
 
-#ifndef __WIN16__
-
 static wxGDIImage* ConvertImage( const wxGDIImage& bitmap )
@@ -141,4 +139,2 @@
 
-#endif
-
 bool wxStaticBitmap::Create(wxWindow *parent,
@@ -160,21 +156,10 @@
 
-#ifdef __WIN16__
-    wxASSERT_MSG( !m_isIcon, "Icons are not supported in wxStaticBitmap under WIN16." );
-    image = &bitmap;
-#else // Win32
     image = ConvertImage( bitmap );
     m_isIcon = image->IsKindOf( CLASSINFO(wxIcon) );
-#endif // Win16/32
 
     // create the native control
-    if ( !MSWCreateControl(
-#ifdef __WIN32__
-                           _T("STATIC"),
-#else // Win16
-                           _T("BUTTON"),
-#endif // Win32/16
-                           wxEmptyString, pos, size) )
+    if ( !MSWCreateControl(_T("STATIC"), wxEmptyString, pos, size) )
     {
         // control creation failed
-        return FALSE;
+        return false;
     }
@@ -196,3 +181,2 @@
 
-#ifdef __WIN32__
     // what kind of control are we?
@@ -203,5 +187,2 @@
     msStyle |= SS_CENTERIMAGE;
-#else // Win16
-    msStyle |= BS_OWNERDRAW;
-#endif // Win32/16
 
@@ -278,41 +259,2 @@
 
-// under Win32 we use the standard static control style for this
-#ifdef __WIN16__
-bool wxStaticBitmap::MSWOnDraw(WXDRAWITEMSTRUCT *item)
-{
-    LPDRAWITEMSTRUCT lpDIS = (LPDRAWITEMSTRUCT) item;
-
-    wxCHECK_MSG( !m_isIcon, FALSE, _T("icons not supported in wxStaticBitmap") );
-
-    wxBitmap* bitmap = (wxBitmap *)m_image;
-    if ( !bitmap->Ok() )
-        return FALSE;
-
-    HDC hDC = lpDIS->hDC;
-    HDC memDC = ::CreateCompatibleDC(hDC);
-
-    HBITMAP old = (HBITMAP) ::SelectObject(memDC, (HBITMAP) bitmap->GetHBITMAP());
-
-    if (!old)
-        return FALSE;
-
-    int x = lpDIS->rcItem.left;
-    int y = lpDIS->rcItem.top;
-    int width = lpDIS->rcItem.right - x;
-    int height = lpDIS->rcItem.bottom - y;
-
-    // Centre the bitmap in the control area
-    int x1 = (int) (x + ((width - bitmap->GetWidth()) / 2));
-    int y1 = (int) (y + ((height - bitmap->GetHeight()) / 2));
-
-    ::BitBlt(hDC, x1, y1, bitmap->GetWidth(), bitmap->GetHeight(), memDC, 0, 0, SRCCOPY);
-
-    ::SelectObject(memDC, old);
-
-    ::DeleteDC(memDC);
-
-    return TRUE;
-}
-#endif // Win16
-
 // We need this or the control can never be moved e.g. in Dialog Editor.
diff -bu1 -r wxWindows/./src/msw/tbarmsw.cpp wxWin/./src/msw/tbarmsw.cpp
--- wxWindows/./src/msw/tbarmsw.cpp	2003-08-09 15:46:30.000000000 +0200
+++ wxWin/./src/msw/tbarmsw.cpp	2004-02-26 14:35:36.000000000 +0100
@@ -34,1081 +34 @@
 
-#if wxUSE_TOOLBAR && defined(__WIN16__)
-
-#if !defined(__GNUWIN32__) && !defined(__SALFORDC__)
-    #include "malloc.h"
-#endif
-
-#if !defined(__MWERKS__) && !defined(__SALFORDC__)
-    #include <memory.h>
-#endif
-
-#include <stdlib.h>
-
-#include "wx/msw/tbarmsw.h"
-#include "wx/event.h"
-#include "wx/app.h"
-#include "wx/bitmap.h"
-#include "wx/msw/private.h"
-#include "wx/msw/dib.h"
-
-// ----------------------------------------------------------------------------
-// constants
-// ----------------------------------------------------------------------------
-
-#define DEFAULTBITMAPX   16
-#define DEFAULTBITMAPY   15
-#define DEFAULTBUTTONX   24
-#define DEFAULTBUTTONY   22
-#define DEFAULTBARHEIGHT 27
-
-//
-// States (not all of them currently used)
-//
-#define wxTBSTATE_CHECKED         0x01    // radio button is checked
-#define wxTBSTATE_PRESSED         0x02    // button is being depressed (any style)
-#define wxTBSTATE_ENABLED         0x04    // button is enabled
-#define wxTBSTATE_HIDDEN          0x08    // button is hidden
-#define wxTBSTATE_INDETERMINATE   0x10    // button is indeterminate
-
-// ----------------------------------------------------------------------------
-// private classes
-// ----------------------------------------------------------------------------
-
-class WXDLLEXPORT wxToolBarTool : public wxToolBarToolBase
-{
-public:
-    wxToolBarTool(wxToolBar *tbar,
-                  int id,
-                  const wxBitmap& bmpNormal,
-                  const wxBitmap& bmpDisabled,
-                  bool toggle,
-                  wxObject *clientData,
-                  const wxString& shortHelp,
-                  const wxString& longHelp)
-        : wxToolBarToolBase(tbar, id, bmpNormal, bmpDisabled, toggle,
-                            clientData, shortHelp, longHelp)
-    {
-    }
-
-    wxToolBarTool(wxToolBar *tbar, wxControl *control)
-        : wxToolBarToolBase(tbar, control)
-    {
-    }
-
-    void SetSize(const wxSize& size)
-    {
-        m_width = size.x;
-        m_height = size.y;
-    }
-
-    long GetWidth() const { return m_width; }
-    long GetHeight() const { return m_height; }
-
-    wxCoord               m_x;
-    wxCoord               m_y;
-    wxCoord               m_width;
-    wxCoord               m_height;
-};
-
-// ----------------------------------------------------------------------------
-// wxWin macros
-// ----------------------------------------------------------------------------
-
-#if !USE_SHARED_LIBRARY
-IMPLEMENT_DYNAMIC_CLASS(wxToolBar, wxToolBarBase)
-
-BEGIN_EVENT_TABLE(wxToolBar, wxToolBarBase)
-	EVT_PAINT(wxToolBar::OnPaint)
-	EVT_MOUSE_EVENTS(wxToolBar::OnMouseEvent)
-END_EVENT_TABLE()
-#endif
-
-// ============================================================================
-// implementation
-// ============================================================================
-
-// ----------------------------------------------------------------------------
-// wxToolBarTool
-// ----------------------------------------------------------------------------
-
-wxToolBarToolBase *wxToolBar::CreateTool(int id,
-                                         const wxString& label,
-                                         const wxBitmap& bmpNormal,
-                                         const wxBitmap& bmpDisabled,
-                                         wxItemKind kind,
-                                         wxObject *clientData,
-                                         const wxString& shortHelp,
-                                         const wxString& longHelp)
-{
-    return new wxToolBarTool(this, id, label, bmpNormal, bmpDisabled, kind,
-                             clientData, shortHelp, longHelp);
-}
-
-wxToolBarToolBase *wxToolBar::CreateTool(wxControl *control)
-{
-    return new wxToolBarTool(this, control);
-}
-
-// ----------------------------------------------------------------------------
-// wxToolBar
-// ----------------------------------------------------------------------------
-
-void wxToolBar::Init()
-{
-    m_hbrDither = 0;
-    m_rgbFace = 0;
-    m_rgbShadow = 0;
-    m_rgbHilight = 0;
-    m_rgbFrame = 0;
-    m_hdcMono = 0;
-    m_hbmMono = 0;
-    m_hbmDefault = 0;
-
-    m_defaultWidth = DEFAULTBITMAPX;
-    m_defaultHeight = DEFAULTBITMAPY;
-
-    m_xPos =
-    m_yPos = -1;
-
-    m_maxWidth = m_maxHeight = 0;
-    m_pressedTool = m_currentTool = -1;
-    m_toolPacking = 1;
-    m_toolSeparation = 5;
-}
-
-bool wxToolBar::Create(wxWindow *parent,
-                       wxWindowID id,
-                       const wxPoint& pos,
-                       const wxSize& size,
-                       long style,
-                       const wxString& name)
-{
-    if ( !wxWindow::Create(parent, id, pos, size, style, name) )
-        return FALSE;
-
-    if ( style & wxTB_HORIZONTAL )
-    {
-        m_lastX = 3;
-        m_lastY = 7;
-    }
-    else
-    {
-        m_lastX = 7;
-        m_lastY = 3;
-    }
-
-    // Set it to grey
-    SetBackgroundColour(wxColour(192, 192, 192));
-
-    InitGlobalObjects();
-
-    return TRUE;
-}
-
-wxToolBar::~wxToolBar()
-{
-    FreeGlobalObjects();
-}
-
-void wxToolBar::SetToolBitmapSize(const wxSize& size)
-{
-    m_defaultWidth = size.x;
-    m_defaultHeight = size.y;
-
-    FreeGlobalObjects();
-    InitGlobalObjects();
-}
-
-// The button size is bigger than the bitmap size
-wxSize wxToolBar::GetToolSize() const
-{
-    return wxSize(m_defaultWidth + 8, m_defaultHeight + 7);
-}
-
-wxToolBarToolBase *wxToolBar::FindToolForPosition(wxCoord x, wxCoord y) const
-{
-    wxToolBarToolsList::Node *node = m_tools.GetFirst();
-    while (node)
-    {
-        wxToolBarTool *tool = (wxToolBarTool *)node->GetData();
-        if ((x >= tool->m_x) && (y >= tool->m_y) &&
-            (x <= (tool->m_x + tool->GetWidth())) &&
-            (y <= (tool->m_y + tool->GetHeight())))
-        {
-            return tool;
-        }
-
-        node = node->GetNext();
-    }
-
-    return (wxToolBarToolBase *)NULL;
-}
-
-wxToolBarToolBase *wxToolBar::AddTool(int id,
-                                      const wxBitmap& bitmap,
-                                      const wxBitmap& pushedBitmap,
-                                      bool toggle,
-                                      wxCoord xPos,
-                                      wxCoord yPos,
-                                      wxObject *clientData,
-                                      const wxString& helpString1,
-                                      const wxString& helpString2)
-{
-    // rememeber the position for DoInsertTool()
-    m_xPos = xPos;
-    m_yPos = yPos;
-
-    return wxToolBarBase::AddTool(id, bitmap, pushedBitmap, toggle,
-                                  xPos, yPos, clientData,
-                                  helpString1, helpString2);
-}
-
-void wxToolBar::OnPaint(wxPaintEvent& event)
-{
-    wxPaintDC dc(this);
-
-    static int wxOnPaintCount = 0;
-
-    // Prevent reentry of OnPaint which would cause
-    // wxMemoryDC errors.
-    if (wxOnPaintCount > 0)
-        return;
-    wxOnPaintCount++;
-
-    wxToolBarToolsList::Node *node = m_tools.GetFirst();
-    while (node)
-    {
-        wxToolBarToolBase *tool = node->GetData();
-        if ( tool->GetStyle()!= wxTOOL_STYLE_BUTTON )
-        {
-            int state = tool->IsEnabled() ? wxTBSTATE_ENABLED : 0;
-            if ( tool->IsToggled() )
-                state |= wxTBSTATE_CHECKED;
-
-            DrawTool(dc, tool, state);
-        }
-
-        node = node->GetNext();
-    }
-
-    wxOnPaintCount--;
-}
-
-// If a Button is disabled, then NO function (besides leaving
-// or entering) should be carried out. Therefore the additions
-// of 'enabled' testing (Stefan Hammes).
-void wxToolBar::OnMouseEvent(wxMouseEvent& event)
-{
-    static wxToolBarToolBase *eventCurrentTool = NULL;
-    wxClientDC dc(this);
-
-    if (event.Leaving())
-    {
-        m_currentTool = -1;
-        if (eventCurrentTool && eventCurrentTool->IsEnabled())
-        {
-            ::ReleaseCapture();
-            int state = wxTBSTATE_ENABLED;
-            if (eventCurrentTool->IsToggled())
-                state |= wxTBSTATE_CHECKED;
-            DrawTool(dc, eventCurrentTool, state);
-            eventCurrentTool = NULL;
-        }
-        OnMouseEnter(-1);
-        return;
-    }
-
-    wxCoord x, y;
-    event.GetPosition(&x, &y);
-    wxToolBarToolBase *tool = FindToolForPosition(x, y);
-
-    if (!tool)
-    {
-        if (eventCurrentTool && eventCurrentTool->IsEnabled())
-        {
-            ::ReleaseCapture();
-
-            int state = wxTBSTATE_ENABLED;
-            if (eventCurrentTool->IsToggled())
-                state |= wxTBSTATE_CHECKED;
-            DrawTool(dc, eventCurrentTool, state);
-            eventCurrentTool = NULL;
-        }
-        if (m_currentTool > -1)
-        {
-            m_currentTool = -1;
-            OnMouseEnter(-1);
-        }
-        return;
-    }
-
-    if (!event.Dragging() && !event.IsButton())
-    {
-        if (tool->GetId() != m_currentTool)
-        {
-            OnMouseEnter(m_currentTool = tool->GetId());
-            return;
-        }
-    }
-    if (event.Dragging() && tool->IsEnabled())
-    {
-        if (eventCurrentTool)
-        {
-            // Might have dragged outside tool
-            if (eventCurrentTool != tool)
-            {
-                int state = wxTBSTATE_ENABLED;
-                if (tool->IsToggled())
-                    state |= wxTBSTATE_CHECKED;
-                DrawTool(dc, tool, state);
-                eventCurrentTool = NULL;
-                return;
-            }
-        }
-        else
-        {
-            if (tool && event.LeftIsDown() && tool->IsEnabled())
-            {
-                eventCurrentTool = tool;
-                ::SetCapture((HWND) GetHWND());
-                int state = wxTBSTATE_ENABLED|wxTBSTATE_PRESSED;
-                if (tool->IsToggled())
-                    state |= wxTBSTATE_CHECKED;
-                DrawTool(dc, tool, state);
-            }
-        }
-    }
-    if (event.LeftDown() && tool->IsEnabled())
-    {
-        eventCurrentTool = tool;
-        ::SetCapture((HWND) GetHWND());
-        int state = wxTBSTATE_ENABLED|wxTBSTATE_PRESSED;
-        if (tool->IsToggled())
-            state |= wxTBSTATE_CHECKED;
-        DrawTool(dc, tool, state);
-    }
-    else if (event.LeftUp() && tool->IsEnabled())
-    {
-        if (eventCurrentTool)
-            ::ReleaseCapture();
-        if (eventCurrentTool == tool)
-        {
-            if (tool->CanBeToggled())
-            {
-                tool->Toggle();
-                if (!OnLeftClick(tool->GetId(), tool->IsToggled()))
-                {
-                    tool->Toggle();
-                }
-                int state = wxTBSTATE_ENABLED;
-                if (tool->IsToggled())
-                    state |= wxTBSTATE_CHECKED;
-                DrawTool(dc, tool, state);
-            }
-            else
-            {
-                int state = wxTBSTATE_ENABLED;
-                if (tool->IsToggled())
-                    state |= wxTBSTATE_CHECKED;
-                DrawTool(dc, tool, state);
-                OnLeftClick(tool->GetId(), tool->IsToggled());
-            }
-        }
-        eventCurrentTool = NULL;
-    }
-    else if (event.RightDown() && tool->IsEnabled())
-    {
-        OnRightClick(tool->GetId(), x, y);
-    }
-}
-
-void wxToolBar::DoEnableTool(wxToolBarToolBase *tool, bool WXUNUSED(enable))
-{
-    DoRedrawTool(tool);
-}
-
-void wxToolBar::DoToggleTool(wxToolBarToolBase *tool, bool WXUNUSED(toggle))
-{
-    DoRedrawTool(tool);
-}
-
-void wxToolBar::DoSetToggle(wxToolBarToolBase * WXUNUSED(tool),
-                            bool WXUNUSED(toggle))
-{
-    // nothing to do
-}
-
-void wxToolBar::DoRedrawTool(wxToolBarToolBase *tool)
-{
-    wxClientDC dc(this);
-
-    DrawTool(dc, tool);
-}
-
-void wxToolBar::DrawTool(wxDC& dc, wxToolBarToolBase *toolBase, int state)
-{
-    wxToolBarTool *tool = (wxToolBarTool *)toolBase;
-
-    DrawButton(dc.GetHDC(),
-               tool->m_x, tool->m_y,
-               tool->GetWidth(), tool->GetHeight(),
-               tool, state);
-}
-
-void wxToolBar::DrawTool(wxDC& dc, wxToolBarToolBase *tool)
-{
-    int state = 0;
-    if (tool->IsEnabled())
-        state |= wxTBSTATE_ENABLED;
-    if (tool->IsToggled())
-        state |= wxTBSTATE_CHECKED;
-    // how can i access the PRESSED state???
-
-    DrawTool(dc, tool, state);
-}
-
-bool wxToolBar::DoDeleteTool(size_t WXUNUSED(pos),
-                             wxToolBarToolBase *tool)
-{
-    // VZ: didn't test whether it works, but why not...
-    tool->Detach();
-
-    Refresh();
-
-    return TRUE;
-}
-
-bool wxToolBar::DoInsertTool(size_t pos, wxToolBarToolBase *toolBase)
-{
-    wxToolBarTool *tool = (wxToolBarTool *)toolBase;
-
-    wxCHECK_MSG( !tool->IsControl(), FALSE,
-                 _T("generic wxToolBar doesn't support controls") );
-
-    // TODO: use the mapping code from wxToolBar95 to get it right in this class
-#if !defined(__WIN32__) && !defined(__WIN386__)
-    wxBitmap bmpDisabled;
-    if (tool->CanBeToggled())
-    {
-        HBITMAP hbmp = CreateMappedBitmap((WXHINSTANCE)wxGetInstance(),
-                                          GetHbitmapOf(tool->GetBitmap1()));
-
-        wxBitmap bmp;
-        bmp.SetHBITMAP((WXHBITMAP)hbmp);
-        tool->SetBitmap2(bmp);
-    }
-#endif
-
-    tool->m_x = m_xPos;
-    if ( tool->m_x == -1 )
-        tool->m_x = m_xMargin;
-
-    tool->m_y = m_yPos;
-    if ( tool->m_y == -1 )
-        tool->m_y = m_yMargin;
-
-    tool->SetSize(GetToolSize());
-
-    if ( tool->IsButton() )
-    {
-        // Calculate reasonable max size in case Layout() not called
-        if ((tool->m_x + tool->GetBitmap1().GetWidth() + m_xMargin) > m_maxWidth)
-            m_maxWidth = (tool->m_x + tool->GetWidth() + m_xMargin);
-
-        if ((tool->m_y + tool->GetBitmap1().GetHeight() + m_yMargin) > m_maxHeight)
-            m_maxHeight = (tool->m_y + tool->GetHeight() + m_yMargin);
-    }
-
-    return TRUE;
-}
-
-bool wxToolBar::Realize()
-{
-    m_currentRowsOrColumns = 0;
-    m_lastX = m_xMargin;
-    m_lastY = m_yMargin;
-    int maxToolWidth = 0;
-    int maxToolHeight = 0;
-    m_maxWidth = 0;
-    m_maxHeight = 0;
-
-    // Find the maximum tool width and height
-    wxToolBarToolsList::Node *node = m_tools.GetFirst();
-    while (node)
-    {
-        wxToolBarTool *tool = (wxToolBarTool *)node->GetData();
-        if (tool->GetWidth() > maxToolWidth)
-            maxToolWidth = tool->GetWidth();
-        if (tool->GetHeight() > maxToolHeight)
-            maxToolHeight = tool->GetHeight();
-        node = node->GetNext();
-    }
-
-    int separatorSize = m_toolSeparation;
-
-    node = m_tools.GetFirst();
-    while (node)
-    {
-        wxToolBarTool *tool = (wxToolBarTool *)node->GetData();
-        if (tool->GetStyle() == wxTOOL_STYLE_SEPARATOR)
-        {
-            if ( GetWindowStyleFlag() & wxTB_HORIZONTAL )
-            {
-                if (m_currentRowsOrColumns >= m_maxCols)
-                    m_lastY += separatorSize;
-                else
-                    m_lastX += separatorSize;
-            }
-            else
-            {
-                if (m_currentRowsOrColumns >= m_maxRows)
-                    m_lastX += separatorSize;
-                else
-                    m_lastY += separatorSize;
-            }
-        }
-        else if (tool->GetStyle() == wxTOOL_STYLE_BUTTON)
-        {
-            if ( GetWindowStyleFlag() & wxTB_HORIZONTAL )
-            {
-                if (m_currentRowsOrColumns >= m_maxCols)
-                {
-                    m_currentRowsOrColumns = 0;
-                    m_lastX = m_xMargin;
-                    m_lastY += maxToolHeight + m_toolPacking;
-                }
-                tool->m_x = (long) (m_lastX + (maxToolWidth - tool->GetWidth())/2.0);
-                tool->m_y = (long) (m_lastY + (maxToolHeight - tool->GetHeight())/2.0);
-
-                m_lastX += maxToolWidth + m_toolPacking;
-            }
-            else
-            {
-                if (m_currentRowsOrColumns >= m_maxRows)
-                {
-                    m_currentRowsOrColumns = 0;
-                    m_lastX += (maxToolWidth + m_toolPacking);
-                    m_lastY = m_yMargin;
-                }
-                tool->m_x = (long) (m_lastX + (maxToolWidth - tool->GetWidth())/2.0);
-                tool->m_y = (long) (m_lastY + (maxToolHeight - tool->GetHeight())/2.0);
-
-                m_lastY += maxToolHeight + m_toolPacking;
-            }
-            m_currentRowsOrColumns ++;
-        }
-
-        if (m_lastX > m_maxWidth)
-            m_maxWidth = m_lastX;
-        if (m_lastY > m_maxHeight)
-            m_maxHeight = m_lastY;
-
-        node = node->GetNext();
-    }
-
-    if ( GetWindowStyleFlag() & wxTB_HORIZONTAL )
-    {
-        m_maxWidth += maxToolWidth;
-        m_maxHeight += maxToolHeight;
-    }
-    else
-    {
-        m_maxWidth += maxToolWidth;
-        m_maxHeight += maxToolHeight;
-    }
-
-    m_maxWidth += m_xMargin;
-    m_maxHeight += m_yMargin;
-
-    SetSize(m_maxWidth, m_maxHeight);
-
-    return TRUE;
-}
-
-bool wxToolBar::InitGlobalObjects()
-{
-    GetSysColors();      
-    if (!CreateDitherBrush())
-        return FALSE;
-
-    m_hdcMono = (WXHDC) CreateCompatibleDC(NULL);
-    if (!m_hdcMono)
-        return FALSE;
-
-    m_hbmMono = (WXHBITMAP) CreateBitmap((int)GetToolSize().x, (int)GetToolSize().y, 1, 1, NULL);
-    if (!m_hbmMono)
-        return FALSE;
-
-    m_hbmDefault = (WXHBITMAP) SelectObject((HDC) m_hdcMono, (HBITMAP) m_hbmMono);
-    return TRUE;
-}
-
-void wxToolBar::FreeGlobalObjects()
-{
-    FreeDitherBrush();
-
-    if (m_hdcMono) {
-        if (m_hbmDefault)
-        {
-            SelectObject((HDC) m_hdcMono, (HBITMAP) m_hbmDefault);
-            m_hbmDefault = 0;
-        }
-        DeleteDC((HDC) m_hdcMono);		// toast the DCs
-    }
-    m_hdcMono = 0;
-
-    if (m_hbmMono)
-        DeleteObject((HBITMAP) m_hbmMono);
-    m_hbmMono = 0;
-}
-
-// ----------------------------------------------------------------------------
-// drawing routines
-// ----------------------------------------------------------------------------
-
-void wxToolBar::PatB(WXHDC hdc,int x,int y,int dx,int dy, long rgb)
-{
-    RECT    rc;
-
-    rc.left   = x;
-    rc.top    = y;
-    rc.right  = x + dx;
-    rc.bottom = y + dy;
-
-    SetBkColor((HDC) hdc,rgb);
-    ExtTextOut((HDC) hdc,0,0,ETO_OPAQUE,&rc,NULL,0,NULL);
-}
-
-
-// create a mono bitmap mask:
-//   1's where color == COLOR_BTNFACE || COLOR_HILIGHT
-//   0's everywhere else
-
-void wxToolBar::CreateMask(WXHDC hdc, int xoffset, int yoffset, int dx, int dy)
-{
-    HDC globalDC = ::GetDC(NULL);
-    HDC hdcGlyphs = CreateCompatibleDC((HDC) globalDC);
-    ReleaseDC(NULL, (HDC) globalDC);
-
-    // krj - create a new bitmap and copy the image from hdc.
-    //HBITMAP bitmapOld = SelectObject(hdcGlyphs, hBitmap);
-    HBITMAP hBitmap = CreateCompatibleBitmap((HDC) hdc, dx, dy);
-    HBITMAP bitmapOld = (HBITMAP) SelectObject(hdcGlyphs, hBitmap);
-    BitBlt(hdcGlyphs, 0,0, dx, dy, (HDC) hdc, 0, 0, SRCCOPY);
-
-    // initalize whole area with 1's
-    PatBlt((HDC) m_hdcMono, 0, 0, dx, dy, WHITENESS);
-
-    // create mask based on color bitmap
-    // convert this to 1's
-    SetBkColor(hdcGlyphs, m_rgbFace);
-    BitBlt((HDC) m_hdcMono, xoffset, yoffset, (int)GetToolBitmapSize().x, (int)GetToolBitmapSize().y,
-        hdcGlyphs, 0, 0, SRCCOPY);
-    // convert this to 1's
-    SetBkColor(hdcGlyphs, m_rgbHilight);
-    // OR in the new 1's
-    BitBlt((HDC) m_hdcMono, xoffset, yoffset, (int)GetToolBitmapSize().x, (int)GetToolBitmapSize().y,
-        hdcGlyphs, 0, 0, SRCPAINT);
-
-    SelectObject(hdcGlyphs, bitmapOld);
-    DeleteObject(hBitmap);
-    DeleteDC(hdcGlyphs);
-}
-
-void wxToolBar::DrawBlankButton(WXHDC hdc, int x, int y, int dx, int dy, int state)
-{
-    // face color
-    PatB(hdc, x, y, dx, dy, m_rgbFace);
-
-    if (state & wxTBSTATE_PRESSED) {
-        PatB(hdc, x + 1, y, dx - 2, 1, m_rgbFrame);
-        PatB(hdc, x + 1, y + dy - 1, dx - 2, 1, m_rgbFrame);
-        PatB(hdc, x, y + 1, 1, dy - 2, m_rgbFrame);
-        PatB(hdc, x + dx - 1, y +1, 1, dy - 2, m_rgbFrame);
-        PatB(hdc, x + 1, y + 1, 1, dy-2, m_rgbShadow);
-        PatB(hdc, x + 1, y + 1, dx-2, 1, m_rgbShadow);
-    }
-    else {
-        PatB(hdc, x + 1, y, dx - 2, 1, m_rgbFrame);
-        PatB(hdc, x + 1, y + dy - 1, dx - 2, 1, m_rgbFrame);
-        PatB(hdc, x, y + 1, 1, dy - 2, m_rgbFrame);
-        PatB(hdc, x + dx - 1, y + 1, 1, dy - 2, m_rgbFrame);
-        dx -= 2;
-        dy -= 2;
-        PatB(hdc, x + 1, y + 1, 1, dy - 1, m_rgbHilight);
-        PatB(hdc, x + 1, y + 1, dx - 1, 1, m_rgbHilight);
-        PatB(hdc, x + dx, y + 1, 1, dy, m_rgbShadow);
-        PatB(hdc, x + 1, y + dy, dx, 1,   m_rgbShadow);
-        PatB(hdc, x + dx - 1, y + 2, 1, dy - 2, m_rgbShadow);
-        PatB(hdc, x + 2, y + dy - 1, dx - 2, 1,   m_rgbShadow);
-    }
-}
-
-void wxToolBar::DrawButton(WXHDC hdc, int x, int y, int dx, int dy,
-                           wxToolBarToolBase *toolBase, int state)
-{
-    wxToolBarTool *tool = (wxToolBarTool *)toolBase;
-
-    int yOffset;
-    HBRUSH hbrOld, hbr;
-    BOOL bMaskCreated = FALSE;
-    int xButton = 0;		// assume button is down
-    int dxFace, dyFace;
-    int xCenterOffset;
-
-    dxFace = dx;
-    dyFace = dy;
-
-//    HBITMAP hBitmap = (HBITMAP) tool->m_bitmap1.GetHBITMAP();
-    HDC globalDC = ::GetDC(NULL);
-    HDC hdcGlyphs = CreateCompatibleDC(globalDC);
-    ReleaseDC(NULL, globalDC);
-
-    // get the proper button look - up or down.
-    if (!(state & (wxTBSTATE_PRESSED | wxTBSTATE_CHECKED))) {
-	xButton = dx;	// use 'up' version of button
-	dxFace -= 2;	
-	dyFace -= 2;	// extents to ignore button highlight
-    }
-
-    DrawBlankButton(hdc, x, y, dx, dy, state);
-
-
-    // move coordinates inside border and away from upper left highlight.
-    // the extents change accordingly.
-    x += 2;
-    y += 2;
-    dxFace -= 3;		
-    dyFace -= 3;
-
-    // Using bmpDisabled can cause problems (don't know why!)
-#if !defined(__WIN32__) && !defined(__WIN386__)
-    HBITMAP bitmapOld;
-    if (tool->GetBitmap2().Ok())
-      bitmapOld = GetHbitmapOf(tool->GetBitmap2());
-    else
-      bitmapOld = GetHbitmapOf(tool->GetBitmap1());
-#else
-    HBITMAP bitmapOld = GetHbitmapOf(tool->GetBitmap1());
-#endif    
-
-    bitmapOld = (HBITMAP)SelectObject(hdcGlyphs, bitmapOld);
-
-    // calculate offset of face from (x,y).  y is always from the top,
-    // so the offset is easy.  x needs to be centered in face.
-    yOffset = 1;
-    xCenterOffset = (dxFace - (int)GetToolBitmapSize().x)/2;
-    if (state & (wxTBSTATE_PRESSED | wxTBSTATE_CHECKED))
-    {
-	// pressed state moves down and to the right
-	// (x moves automatically as face size grows)
-        yOffset++;
-    }
-
-    // now put on the face
-    if (state & wxTBSTATE_ENABLED) {
-        // regular version
-        BitBlt((HDC) hdc, x+xCenterOffset, y + yOffset, (int)GetToolBitmapSize().x, (int)GetToolBitmapSize().y,
-            hdcGlyphs, 0, 0, SRCCOPY);
-    } else {
-        // disabled version (or indeterminate)
-	bMaskCreated = TRUE;
-        CreateMask((WXHDC) hdcGlyphs, xCenterOffset, yOffset, dxFace, dyFace);
-//        CreateMask(hBitmap, xCenterOffset, yOffset, dxFace, dyFace);
-
-	SetTextColor((HDC) hdc, 0L);	 // 0's in mono -> 0 (for ROP)
-	SetBkColor((HDC) hdc, 0x00FFFFFF); // 1's in mono -> 1
-
-	// draw glyph's white understrike
-	if (!(state & wxTBSTATE_INDETERMINATE)) {
-	    hbr = CreateSolidBrush(m_rgbHilight);
-	    if (hbr) {
-	        hbrOld = (HBRUSH) SelectObject((HDC) hdc, hbr);
-	        if (hbrOld) {
-	            // draw hilight color where we have 0's in the mask
-                    BitBlt((HDC) hdc, x + 1, y + 1, dxFace, dyFace, (HDC) m_hdcMono, 0, 0, 0x00B8074A);
-	            SelectObject((HDC) hdc, hbrOld);
-	        }
-	        DeleteObject(hbr);
-	    }
-	}
-
-	// gray out glyph
-	hbr = CreateSolidBrush(m_rgbShadow);
-	if (hbr) {
-	    hbrOld = (HBRUSH) SelectObject((HDC) hdc, hbr);
-	    if (hbrOld) {
-	        // draw the shadow color where we have 0's in the mask
-                BitBlt((HDC) hdc, x, y, dxFace, dyFace, (HDC) m_hdcMono, 0, 0, 0x00B8074A);
-	        SelectObject((HDC) hdc, hbrOld);
-	    }
-	    DeleteObject(hbr);
-	}
-
-	if (state & wxTBSTATE_CHECKED) {
-	    BitBlt((HDC) m_hdcMono, 1, 1, dxFace - 1, dyFace - 1, (HDC) m_hdcMono, 0, 0, SRCAND);
-	}
-    }
-
-    if (state & (wxTBSTATE_CHECKED | wxTBSTATE_INDETERMINATE)) {
-
-        hbrOld = (HBRUSH) SelectObject((HDC) hdc, (HBRUSH) m_hbrDither);
-	if (hbrOld) {
-
-	    if (!bMaskCreated)
-                CreateMask((WXHDC) hdcGlyphs, xCenterOffset, yOffset, dxFace, dyFace);
-//                CreateMask(hBitmap, xCenterOffset, yOffset, dxFace, dyFace);
-
-	    SetTextColor((HDC) hdc, 0L);		// 0 -> 0
-	    SetBkColor((HDC) hdc, 0x00FFFFFF);	// 1 -> 1
-
-	    // only draw the dither brush where the mask is 1's
-            BitBlt((HDC) hdc, x, y, dxFace, dyFace, (HDC) m_hdcMono, 0, 0, 0x00E20746);
-
-	    SelectObject((HDC) hdc, hbrOld);
-	}
-    }
-    SelectObject(hdcGlyphs, bitmapOld);
-    DeleteDC(hdcGlyphs);
-}
-
-// ----------------------------------------------------------------------------
-// drawing helpers
-// ----------------------------------------------------------------------------
-
-void wxToolBar::GetSysColors()
-{
-	static COLORREF rgbSaveFace    = 0xffffffffL,
-	                rgbSaveShadow  = 0xffffffffL,
-	                rgbSaveHilight = 0xffffffffL,
-	                rgbSaveFrame   = 0xffffffffL;
-
-    // For now, override these because the colour replacement isn't working,
-    // and we get inconsistent colours. Assume all buttons are grey for the moment.
-
-//	m_rgbFace    = GetSysColor(COLOR_BTNFACE);
-        m_rgbFace = RGB(192,192,192);
-//	m_rgbShadow  = GetSysColor(COLOR_BTNSHADOW);
-        m_rgbShadow = RGB(128,128,128);
-//	m_rgbHilight = GetSysColor(COLOR_BTNHIGHLIGHT);
-	m_rgbHilight = RGB(255, 255, 255);
-
-	m_rgbFrame   = GetSysColor(COLOR_WINDOWFRAME);
-
-	if (rgbSaveFace!=m_rgbFace || rgbSaveShadow!=m_rgbShadow
-		|| rgbSaveHilight!=m_rgbHilight || rgbSaveFrame!=m_rgbFrame)
-	{
-		rgbSaveFace    = m_rgbFace;
-		rgbSaveShadow  = m_rgbShadow;
-		rgbSaveHilight = m_rgbHilight;
-        rgbSaveFrame   = m_rgbFrame;
-
-		// Update the brush for pushed-in buttons
-		CreateDitherBrush();
-	}
-}
-
-WXHBITMAP wxToolBar::CreateDitherBitmap()
-{
-    BITMAPINFO* pbmi;
-    HBITMAP hbm;
-    HDC hdc;
-    int i;
-    long patGray[8];
-    DWORD rgb;
-
-    pbmi = (BITMAPINFO *)malloc(sizeof(BITMAPINFOHEADER) + 16*sizeof(RGBQUAD));
-    memset(pbmi, 0, (sizeof(BITMAPINFOHEADER) + 16*sizeof(RGBQUAD)));
-
-    pbmi->bmiHeader.biSize = sizeof(BITMAPINFOHEADER);
-    pbmi->bmiHeader.biWidth = 8;
-    pbmi->bmiHeader.biHeight = 8;
-    pbmi->bmiHeader.biPlanes = 1;
-    pbmi->bmiHeader.biBitCount = 1;
-    pbmi->bmiHeader.biCompression = BI_RGB;
-
-//    rgb = GetSysColor(COLOR_BTNFACE);
-    rgb = RGB(192,192,192);
-
-    pbmi->bmiColors[0].rgbBlue  = GetBValue(rgb);
-    pbmi->bmiColors[0].rgbGreen = GetGValue(rgb);
-    pbmi->bmiColors[0].rgbRed   = GetRValue(rgb);
-    pbmi->bmiColors[0].rgbReserved = 0;
-
-//    rgb = GetSysColor(COLOR_BTNHIGHLIGHT);
-    rgb = RGB(255, 255, 255);
-
-    pbmi->bmiColors[1].rgbBlue  = GetBValue(rgb);
-    pbmi->bmiColors[1].rgbGreen = GetGValue(rgb);
-    pbmi->bmiColors[1].rgbRed   = GetRValue(rgb);
-    pbmi->bmiColors[1].rgbReserved = 0;
-
-    /* initialize the brushes */
-
-    for (i = 0; i < 8; i++)
-       if (i & 1)
-           patGray[i] = 0xAAAA5555L;   //  0x11114444L; // lighter gray
-       else
-           patGray[i] = 0x5555AAAAL;   //  0x11114444L; // lighter gray
-
-    hdc = ::GetDC(NULL);
-
-    hbm = CreateDIBitmap(hdc, &pbmi->bmiHeader, CBM_INIT, patGray, pbmi, DIB_RGB_COLORS);
-
-    ReleaseDC(NULL, hdc);
-    free(pbmi);
-
-    return (WXHBITMAP)hbm;
-}
-
-bool wxToolBar::CreateDitherBrush()
-{
-	HBITMAP hbmGray;
-	HBRUSH hbrSave;
-	if (m_hbrDither)
-	  return TRUE;
-	hbmGray = (HBITMAP) CreateDitherBitmap();
-
-	if (hbmGray)
-	{
-		hbrSave = (HBRUSH) m_hbrDither;
-		m_hbrDither = (WXHBRUSH) CreatePatternBrush(hbmGray);
-		DeleteObject(hbmGray);
-		if (m_hbrDither)
-		{
-			if (hbrSave)
-			{
-				DeleteObject(hbrSave);
-			}
-			return TRUE;
-		}
-		else
-		{
-			m_hbrDither = (WXHBRUSH) hbrSave;
-		}
-	}
-
-	return FALSE;
-}
-
-bool wxToolBar::FreeDitherBrush(void)
-{
-    if (m_hbrDither)
-      DeleteObject((HBRUSH) m_hbrDither);
-    m_hbrDither = 0;
-    return TRUE;
-}
-
-typedef struct tagCOLORMAP2
-{
-    COLORREF bgrfrom;
-    COLORREF bgrto;
-    COLORREF sysColor;
-} COLORMAP2;
-
-// these are the default colors used to map the dib colors
-// to the current system colors
-
-#define BGR_BUTTONTEXT      (RGB(000,000,000))  // black
-#define BGR_BUTTONSHADOW    (RGB(128,128,128))  // dark grey
-#define BGR_BUTTONFACE      (RGB(192,192,192))  // bright grey
-#define BGR_BUTTONHILIGHT   (RGB(255,255,255))  // white
-#define BGR_BACKGROUNDSEL   (RGB(255,000,000))  // blue
-#define BGR_BACKGROUND      (RGB(255,000,255))  // magenta
-#define FlipColor(rgb)      (RGB(GetBValue(rgb), GetGValue(rgb), GetRValue(rgb)))
-
-WXHBITMAP wxToolBar::CreateMappedBitmap(WXHINSTANCE WXUNUSED(hInstance), void *info)
-{
-  LPBITMAPINFOHEADER lpBitmapInfo = (LPBITMAPINFOHEADER)info;
-  HDC			hdc, hdcMem = NULL;
-
-  DWORD FAR		*p;
-  LPSTR 		lpBits;
-  HBITMAP		hbm = NULL, hbmOld;
-  int numcolors, i;
-  int wid, hgt;
-  static COLORMAP2 ColorMap[] = {
-    {BGR_BUTTONTEXT,    BGR_BUTTONTEXT,    COLOR_BTNTEXT},     // black
-    {BGR_BUTTONSHADOW,  BGR_BUTTONSHADOW,  COLOR_BTNSHADOW},   // dark grey
-    {BGR_BUTTONFACE,    BGR_BUTTONFACE,    COLOR_BTNFACE},     // bright grey
-    {BGR_BUTTONHILIGHT, BGR_BUTTONHILIGHT, COLOR_BTNHIGHLIGHT},// white
-    {BGR_BACKGROUNDSEL, BGR_BACKGROUNDSEL, COLOR_HIGHLIGHT},   // blue
-    {BGR_BACKGROUND,    BGR_BACKGROUND,    COLOR_WINDOW}       // magenta
-  };
-
-  #define NUM_MAPS (sizeof(ColorMap)/sizeof(COLORMAP2))
-
-  if (!lpBitmapInfo)
-  	return 0;
-
-  //
-  // So what are the new colors anyway ?
-  //
-  for (i=0; i < (int) NUM_MAPS; i++) {
-     ColorMap[i].bgrto = (long unsigned int) FlipColor(GetSysColor((int)ColorMap[i].sysColor));
-  }
-
-  p = (DWORD FAR *)(((LPSTR)lpBitmapInfo) + lpBitmapInfo->biSize);
-
-  /* Replace button-face and button-shadow colors with the current values
-   */
-  numcolors = 16;
-
-  while (numcolors-- > 0) {
-      for (i = 0; i < (int) NUM_MAPS; i++) {
-          if (*p == ColorMap[i].bgrfrom) {
-          *p = ColorMap[i].bgrto;
-	      break;
-	  }
-      }
-      p++;
-  }
-
-  /* First skip over the header structure */
-  lpBits = (LPSTR)(lpBitmapInfo + 1);
-
-  /* Skip the color table entries, if any */
-  lpBits += (1 << (lpBitmapInfo->biBitCount)) * sizeof(RGBQUAD);
-
-  /* Create a color bitmap compatible with the display device */
-  i = wid = (int)lpBitmapInfo->biWidth;
-  hgt = (int)lpBitmapInfo->biHeight;
-  hdc = ::GetDC(NULL);
-
-  hdcMem = CreateCompatibleDC(hdc);
-  if (hdcMem) {
-//    hbm = CreateDiscardableBitmap(hdc, i, hgt);
-    hbm = CreateCompatibleBitmap(hdc, i, hgt);
-    if (hbm) {
-        hbmOld = (HBITMAP) SelectObject(hdcMem, hbm);
-
-        // set the main image
-        StretchDIBits(hdcMem, 0, 0, wid, hgt, 0, 0, wid, hgt, lpBits,
-                   (LPBITMAPINFO)lpBitmapInfo, DIB_RGB_COLORS, SRCCOPY);
-
-        SelectObject(hdcMem, hbmOld);
-    }
-
-    DeleteObject(hdcMem);
-  }
-
-  ReleaseDC(NULL, hdc);
-
-  return (WXHBITMAP) hbm;
-}
-
-WXHBITMAP wxToolBar::CreateMappedBitmap(WXHINSTANCE hInstance, WXHBITMAP hBitmap)
-{
-    HANDLE hDIB = wxDIB::ConvertFromBitmap((HBITMAP) hBitmap);
-    if ( !hDIB )
-        return 0;
-
-    WXHBITMAP newBitmap = CreateMappedBitmap(hInstance, GlobalPtr(hDIB));
-
-    GlobalFree(hDIB);
-
-    return newBitmap;
-}
-
-#endif // wxUSE_TOOLBAR
-
diff -bu1 -r wxWindows/./src/msw/textctrl.cpp wxWin/./src/msw/textctrl.cpp
--- wxWindows/./src/msw/textctrl.cpp	2004-02-25 11:44:49.000000000 +0100
+++ wxWin/./src/msw/textctrl.cpp	2004-02-26 14:37:13.000000000 +0100
@@ -201,5 +201,2 @@
     EVT_UPDATE_UI(wxID_SELECTALL, wxTextCtrl::OnUpdateSelectAll)
-#ifdef __WIN16__
-    EVT_ERASE_BACKGROUND(wxTextCtrl::OnEraseBackground)
-#endif
 
@@ -1196,3 +1193,2 @@
 
-#ifdef __WIN32__
 #if wxUSE_RICHEDIT
@@ -1252,6 +1248,2 @@
     }
-#else // Win16
-    // WPARAM is 0: selection is scrolled into view
-    SendMessage(hWnd, EM_SETSEL, (WPARAM)0, (LPARAM)MAKELONG(from, to));
-#endif // Win32/16
 }
@@ -1869,36 +1861,4 @@
 
-// In WIN16, need to override normal erasing because
-// Ctl3D doesn't use the wxWindows background colour.
-#ifdef __WIN16__
-void wxTextCtrl::OnEraseBackground(wxEraseEvent& event)
-{
-    wxColour col(m_backgroundColour);
-
-#if wxUSE_CTL3D
-    if (m_useCtl3D)
-        col = wxSystemSettings::GetColour(wxSYS_COLOUR_WINDOW);
-#endif
-
-    RECT rect;
-    ::GetClientRect(GetHwnd(), &rect);
-
-    COLORREF ref = wxColourToRGB(col);
-    HBRUSH hBrush = ::CreateSolidBrush(ref);
-    if ( !hBrush )
-        wxLogLastError(wxT("CreateSolidBrush"));
-
-    HDC hdc = (HDC)event.GetDC()->GetHDC();
-
-    int mode = ::SetMapMode(hdc, MM_TEXT);
-
-    ::FillRect(hdc, &rect, hBrush);
-    ::DeleteObject(hBrush);
-    ::SetMapMode(hdc, mode);
-
-}
-#endif // Win16
-
 bool wxTextCtrl::AdjustSpaceLimit()
 {
-#ifndef __WIN16__
     unsigned int limit = ::SendMessage(GetHwnd(), EM_GETLIMITTEXT, 0, 0);
@@ -1944,3 +1904,2 @@
     }
-#endif // !Win16
 
diff -bu1 -r wxWindows/./src/msw/toplevel.cpp wxWin/./src/msw/toplevel.cpp
--- wxWindows/./src/msw/toplevel.cpp	2004-02-17 11:06:22.000000000 +0100
+++ wxWin/./src/msw/toplevel.cpp	2004-02-26 14:49:20.000000000 +0100
@@ -227,3 +227,2 @@
     {
-#if !defined(__WIN16__)
         if ( !(GetExtraStyle() & wxTOPLEVEL_EX_DIALOG) )
@@ -260,3 +259,2 @@
         }
-#endif // !Win16
 
diff -bu1 -r wxWindows/./src/msw/utils.cpp wxWin/./src/msw/utils.cpp
--- wxWindows/./src/msw/utils.cpp	2004-02-07 20:25:05.000000000 +0100
+++ wxWin/./src/msw/utils.cpp	2004-02-26 14:53:21.000000000 +0100
@@ -109,8 +109,2 @@
 
-// these are only used under Win16
-#if !defined(__WIN32__) && !defined(__WXMICROWIN__)
-static const wxChar eHOSTNAME[]  = wxT("HostName");
-static const wxChar eUSERID[]    = wxT("UserId");
-#endif // !Win32
-
 // ============================================================================
@@ -240,3 +234,3 @@
     return FALSE;
-#elif defined(__WIN32__) && !defined(__win32s__) && !defined(__WXMICROWIN__)
+#elif defined(__WIN32__) && !defined(__WXMICROWIN__)
     DWORD nSize = maxSize;
@@ -254,3 +248,3 @@
     return TRUE;
-#else   // Win16 or Win32s
+#else   // __WXMICROWIN__
     wxChar *user;
@@ -471,19 +465,3 @@
     return ((attribs != (DWORD)-1) && (attribs & FILE_ATTRIBUTE_DIRECTORY));
-#else // Win16
-    #ifdef __BORLANDC__
-        struct ffblk fileInfo;
-    #else
-        struct find_t fileInfo;
-    #endif
-    // In Borland findfirst has a different argument
-    // ordering from _dos_findfirst. But _dos_findfirst
-    // _should_ be ok in both MS and Borland... why not?
-    #ifdef __BORLANDC__
-        return (findfirst(dir, &fileInfo, _A_SUBDIR) == 0 &&
-               (fileInfo.ff_attrib & _A_SUBDIR) != 0);
-    #else
-        return (_dos_findfirst(dir, _A_SUBDIR, &fileInfo) == 0) &&
-               ((fileInfo.attrib & _A_SUBDIR) != 0);
-    #endif
-#endif // Win32/16
+#endif // Win32/__WXMICROWIN__
 }
@@ -606,13 +584,2 @@
     return FALSE;
-#elif defined(__WIN16__)
-    const wxChar* ret = wxGetenv(var);
-    if ( !ret )
-        return FALSE;
-
-    if ( value )
-    {
-        *value = ret;
-    }
-
-    return TRUE;
 #else // Win32
@@ -633,3 +600,3 @@
     return TRUE;
-#endif // Win16/32
+#endif // WinCE/32
 }
@@ -932,4 +899,2 @@
     return bOK;
-#else // Win16
-    return FALSE;
 #endif // Win32/16
@@ -956,7 +921,3 @@
 {
-#ifdef __WIN32__
     return ::GetCurrentProcessId();
-#else
-    return 0;
-#endif
 }
@@ -971,3 +932,2 @@
 {
-#ifdef __WIN32__
     wxString str;
@@ -1014,5 +974,2 @@
     return str;
-#else // Win16
-    return _("Windows 3.1");
-#endif // Win32/16
 }
diff -bu1 -r wxWindows/./src/msw/utilsexc.cpp wxWin/./src/msw/utilsexc.cpp
--- wxWindows/./src/msw/utilsexc.cpp	2003-10-16 13:28:08.000000000 +0200
+++ wxWin/./src/msw/utilsexc.cpp	2004-02-26 14:53:36.000000000 +0100
@@ -115,3 +115,2 @@
     {
-#ifndef __WIN16__
         if ( !::CloseHandle(hProcess) )
@@ -120,3 +119,2 @@
         }
-#endif
     }
diff -bu1 -r wxWindows/./src/msw/utilsgui.cpp wxWin/./src/msw/utilsgui.cpp
--- wxWindows/./src/msw/utilsgui.cpp	2003-07-21 12:41:24.000000000 +0200
+++ wxWin/./src/msw/utilsgui.cpp	2004-02-26 14:54:06.000000000 +0100
@@ -336,3 +336,3 @@
 {
-#if defined(__WIN16__) || defined(__WXMICROWIN__)
+#if defined(__WXMICROWIN__)
     *x = 0; *y = 0;
@@ -402,7 +402,3 @@
 {
-#ifndef __WIN32__
-    return (WXWORD)GetWindowWord((HWND)hWnd, GWW_ID);
-#else // Win32
     return (WXWORD)GetWindowLong((HWND)hWnd, GWL_ID);
-#endif // Win16/32
 }
diff -bu1 -r wxWindows/./src/os2/dcprint.cpp wxWin/./src/os2/dcprint.cpp
--- wxWindows/./src/os2/dcprint.cpp	2001-07-11 13:07:02.000000000 +0200
+++ wxWin/./src/os2/dcprint.cpp	2004-02-26 14:54:25.000000000 +0100
@@ -207,3 +207,2 @@
 
-#ifndef __WIN16__
     if (ret <= 0)
@@ -213,3 +212,3 @@
     }
-#endif
+
     return (ret > 0);
diff -bu1 -r wxWindows/./src/os2/fontenum.cpp wxWin/./src/os2/fontenum.cpp
--- wxWindows/./src/os2/fontenum.cpp	2003-09-21 21:34:43.000000000 +0200
+++ wxWin/./src/os2/fontenum.cpp	2004-02-26 14:55:05.000000000 +0100
@@ -122,3 +122,2 @@
 
-#ifdef __WIN32__
     LOGFONT lf;
@@ -129,12 +128,2 @@
                          (LPARAM)this, 0) ;
-#else // Win16
-    ::EnumFonts(hDC, (LPTSTR)NULL, (FONTENUMPROC)wxFontEnumeratorProc,
-    #ifdef STRICT
-               (LPARAM)
-    #else
-               (LPSTR)
-    #endif
-               this);
-#endif // Win32/16
-
     ::ReleaseDC(NULL, hDC);
diff -bu1 -r wxWindows/./utils/tex2rtf/src/tex2rtf.cpp wxWin/./utils/tex2rtf/src/tex2rtf.cpp
--- wxWindows/./utils/tex2rtf/src/tex2rtf.cpp	2004-01-08 12:54:29.000000000 +0100
+++ wxWin/./utils/tex2rtf/src/tex2rtf.cpp	2004-02-26 12:57:13.000000000 +0100
@@ -298,7 +298,2 @@
 
-#if defined(__WXMSW__) && defined(__WIN16__)
-  // Limit to max Windows array size
-  if (BufSize > 64) BufSize = 64;
-#endif
-
   TexInitialize(BufSize);
@@ -879,9 +874,4 @@
     {
-#if defined(__WXMSW__) && defined(__WIN16__)
-      wxStrcpy(extensionBuf, _T("htm"));
-      wxStrcat(wildBuf, _T("htm"));
-#else
       wxStrcpy(extensionBuf, _T("html"));
       wxStrcat(wildBuf, _T("html"));
-#endif
       break;

 	  	 
