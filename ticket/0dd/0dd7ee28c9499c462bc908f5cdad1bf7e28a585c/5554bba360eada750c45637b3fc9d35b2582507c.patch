 samples/toolbar/toolbar.cpp | 83 ++++++++++++++++++++++++++++++++++++++++++---
 1 file changed, 79 insertions(+), 4 deletions(-)

diff --git a/samples/toolbar/toolbar.cpp b/samples/toolbar/toolbar.cpp
index f787d739d7..eaabc36a96 100644
--- a/samples/toolbar/toolbar.cpp
+++ b/samples/toolbar/toolbar.cpp
@@ -28,6 +28,8 @@
 #endif
 
 #include "wx/toolbar.h"
+#include "wx/notebook.h"
+#include "wx/choice.h"
 #include "wx/log.h"
 #include "wx/image.h"
 #include "wx/filedlg.h"
@@ -46,10 +48,10 @@
 // main one, but not managed by the frame. This can test subtle differences
 // in the way toolbars are handled, especially on Mac where there is one
 // native, 'installed' toolbar.
-#define USE_UNMANAGED_TOOLBAR 0
+#define USE_UNMANAGED_TOOLBAR 1
 
 // Define this as 0 for the platforms not supporting controls in toolbars
-#define USE_CONTROLS_IN_TOOLBAR 1
+#define USE_CONTROLS_IN_TOOLBAR 0
 
 // ----------------------------------------------------------------------------
 // resources
@@ -165,7 +167,9 @@ private:
 
     wxTextCtrl         *m_textWindow;
 
+#if 0
     wxPanel            *m_panel;
+#endif
 #if USE_UNMANAGED_TOOLBAR
     wxToolBar          *m_extraToolBar;
 #endif
@@ -187,7 +191,7 @@ private:
 
 const int ID_TOOLBAR = 500;
 
-static const long TOOLBAR_STYLE = wxTB_FLAT | wxTB_DOCKABLE | wxTB_TEXT;
+static const long TOOLBAR_STYLE = wxTB_FLAT | wxTB_HORIZONTAL;
 
 enum
 {
@@ -636,9 +640,76 @@ MyFrame::MyFrame(wxFrame* parent,
     // Create the toolbar
     RecreateToolbar();
 
+    wxNotebook* notebook = new wxNotebook(this, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxBK_DEFAULT);
+
+    wxPanel* page1 = new wxPanel(notebook, wxID_ANY);
+    {
+        wxBoxSizer* pg1TopSizer = new wxBoxSizer(wxVERTICAL);
+        page1->SetSizer( pg1TopSizer );
+
+        wxToolBar* pg1ToolBar = new wxToolBar(page1, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTB_FLAT|wxTB_HORIZONTAL|wxTB_NODIVIDER);
+    //    pg1ToolBar->AddControl( new wxStaticText(pg1ToolBar, wxID_STATIC, "Text:") );
+    //    pg1ToolBar->AddControl( new wxChoice(pg1ToolBar, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(page1, wxSize(95, -1))) );
+        pg1ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(new), wxNullBitmap, wxITEM_NORMAL);
+        pg1ToolBar->AddSeparator();
+        wxToolBarToolBase* tool = NULL;
+        tool = pg1ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(open), wxNullBitmap, wxITEM_CHECK);
+        tool->Toggle(true);
+        tool = pg1ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(save), wxNullBitmap, wxITEM_CHECK);
+        tool->Toggle(true);
+        pg1ToolBar->AddSeparator();
+    //    pg1ToolBar->AddControl( new wxChoice(pg1ToolBar, wxID_ANY, wxDefaultPosition, wxDefaultSize));
+        pg1ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(copy), wxNullBitmap, wxITEM_NORMAL);
+        pg1ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(cut), wxNullBitmap, wxITEM_NORMAL);
+        pg1ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(paste), wxNullBitmap, wxITEM_NORMAL);
+        pg1ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(print), wxNullBitmap, wxITEM_NORMAL);
+        pg1ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(help), wxNullBitmap, wxITEM_NORMAL);
+        pg1ToolBar->Realize();
+
+        pg1TopSizer->Add( pg1ToolBar, 0, wxGROW, 0 );
+
+        // Use a read-only text control; Cut tool will not cut selected text anyway.
+        m_textWindow = new wxTextCtrl(page1, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxTE_READONLY);
+        pg1TopSizer->Add( m_textWindow, 1, wxGROW, 0 );
+
+        pg1TopSizer->Fit(page1);
+    }
+    notebook->AddPage(page1, _("Page 1"));
+
+    wxPanel* page2 = new wxPanel(notebook, wxID_ANY);
+    {
+        wxBoxSizer* pg2TopSizer = new wxBoxSizer(wxVERTICAL);
+        page2->SetSizer( pg2TopSizer );
+
+        wxToolBar* pg2ToolBar = new wxToolBar(page2, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTB_FLAT|wxTB_HORIZONTAL|wxTB_NODIVIDER);
+        pg2ToolBar->AddControl( new wxStaticText(pg2ToolBar, wxID_STATIC, "Text:") );
+        pg2ToolBar->AddControl( new wxChoice(pg2ToolBar, wxID_ANY, wxDefaultPosition, wxDLG_UNIT(page2, wxSize(95, -1))) );
+        pg2ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(new), wxNullBitmap, wxITEM_NORMAL);
+        pg2ToolBar->AddSeparator();
+        wxToolBarToolBase* tool = NULL;
+        tool = pg2ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(open), wxNullBitmap, wxITEM_CHECK);
+        tool->Toggle(true);
+        tool = pg2ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(save), wxNullBitmap, wxITEM_CHECK);
+        tool->Toggle(true);
+        pg2ToolBar->AddSeparator();
+        pg2ToolBar->AddControl( new wxChoice(pg2ToolBar, wxID_ANY, wxDefaultPosition, wxDefaultSize));
+        pg2ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(copy), wxNullBitmap, wxITEM_NORMAL);
+        pg2ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(cut), wxNullBitmap, wxITEM_NORMAL);
+        pg2ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(paste), wxNullBitmap, wxITEM_NORMAL);
+        pg2ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(print), wxNullBitmap, wxITEM_NORMAL);
+        pg2ToolBar->AddTool(wxID_ANY, wxEmptyString, wxBITMAP(help), wxNullBitmap, wxITEM_NORMAL);
+        pg2ToolBar->Realize();
+
+        pg2TopSizer->Add( pg2ToolBar, 0, wxGROW, 0 );
+        pg2TopSizer->Add( new wxPanel(page2, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER), 1, wxGROW, 0 );
+        pg2TopSizer->Fit(page2);
+    }
+    notebook->AddPage(page2, _("Page 2"));
+
+#if 0
     m_panel = new wxPanel(this, wxID_ANY);
 #if USE_UNMANAGED_TOOLBAR
-    m_extraToolBar = new wxToolBar(m_panel, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTB_TEXT|wxTB_FLAT|wxTB_TOP);
+    m_extraToolBar = new wxToolBar(m_panel, wxID_ANY, wxDefaultPosition, wxDefaultSize, wxTB_FLAT|wxTB_TOP|wxTB_NODIVIDER);
     PopulateToolbar(m_extraToolBar);
 #endif
 
@@ -652,6 +723,8 @@ MyFrame::MyFrame(wxFrame* parent,
         sizer->Add(m_extraToolBar, 0, wxEXPAND, 0);
 #endif
     sizer->Add(m_textWindow, 1, wxEXPAND, 0);
+#endif
+
 }
 
 MyFrame::~MyFrame()
@@ -667,6 +740,7 @@ MyFrame::~MyFrame()
 
 void MyFrame::LayoutChildren()
 {
+#if 0
     wxSize size = GetClientSize();
 
     int offset;
@@ -682,6 +756,7 @@ void MyFrame::LayoutChildren()
     }
 
     m_panel->SetSize(offset, 0, size.x - offset, size.y);
+#endif
 }
 
 void MyFrame::OnSize(wxSizeEvent& event)
