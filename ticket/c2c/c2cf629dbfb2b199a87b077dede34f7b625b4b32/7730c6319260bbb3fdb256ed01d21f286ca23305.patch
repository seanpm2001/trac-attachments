--- wxWidgets-3.0.2/src/osx/cocoa/toolbar.mm	2014-10-06 17:33:44.000000000 -0400
+++ wxWidgets-3.0.2/src/osx/cocoa/toolbar.mm	2014-12-05 10:26:39.000000000 -0500
@@ -114,7 +114,8 @@
         {
             if ( !IsControl() )
             {
-                [m_controlHandle retain];
+                [m_controlHandle removeFromSuperview];
+                [m_controlHandle release];
             }
             else
             {
@@ -173,7 +174,13 @@
 
     void UpdateLabel()
     {
-        wxString labelStr = wxStripMenuCodes(m_label);
+        // Use an empty string if we're not displaying text
+        wxString labelStr;
+        wxToolBar *tbar = (wxToolBar*) GetToolBar();
+        int style = (tbar ? tbar->GetWindowStyleFlag() : 0);
+        if ( (style & (wxTB_NOICONS | wxTB_TEXT)) != 0 )
+            labelStr = wxStripMenuCodes(m_label);
+
         wxCFStringRef l(labelStr, GetToolBarFontEncoding());
         wxCFStringRef sh( GetShortHelp(), GetToolBarFontEncoding() );
 #if wxOSX_USE_NATIVE_TOOLBAR
@@ -188,8 +195,30 @@
         }
 #endif
         if ( IsButton() )
+        {
             [(NSButton*)m_controlHandle setTitle:l.AsNSString()];
 
+            if ( style & wxTB_NOICONS )
+                [m_controlHandle setImagePosition:NSNoImage];
+            else if ( style & wxTB_TEXT )
+                [m_controlHandle setImagePosition:NSImageAbove];
+            else
+                [m_controlHandle setImagePosition:NSImageOnly];
+
+            if ( (style & (wxTB_NOICONS | wxTB_TEXT)) != 0 ) 
+            {
+                [m_controlHandle sizeToFit];
+            }
+            else if (tbar)
+            {
+                wxSize toolsize = tbar->GetToolSize();
+                NSRect frame = [m_controlHandle frame];
+                frame.size.width = toolsize.x;
+                frame.size.height = toolsize.y + 2;
+                [m_controlHandle setFrame:frame];
+            }
+        }
+
         if ( m_controlHandle )
         {
             [m_controlHandle setToolTip:sh.AsNSString()];
@@ -583,16 +612,18 @@
 void wxToolBarTool::UpdateToggleImage( bool toggle )
 {
 #if wxOSX_USE_NATIVE_TOOLBAR
-    if (m_toolbarItem != NULL )
+    // Avoid setting the image if we're not showing icons because the image may be invalid
+    wxToolBar *tbar = (wxToolBar*) GetToolBar();
+    int style = (tbar ? tbar->GetWindowStyleFlag() : 0);
+    if (m_toolbarItem != NULL && !(style & wxTB_NOICONS))
     {
         // the native toolbar item only has a 'selected' state (one for one toolbar)
         // so we emulate the toggle here
         if ( CanBeToggled() && toggle )
-            [m_toolbarItem setImage:m_alternateBitmap.GetNSImage()];
+            [m_toolbarItem setImage:m_alternateBitmap.GetNSImage()]; 
         else
             [m_toolbarItem setImage:m_bmpNormal.GetNSImage()];
     }
-    else
 #endif
     {
         if ( IsButton() )
@@ -865,6 +896,21 @@
         [(NSToolbar*) m_macToolbar setDisplayMode:mode];
     }
 #endif
+
+    wxToolBarTool *tool;
+    wxToolBarToolsList::compatibility_iterator node = m_tools.GetFirst();
+    while ( node )
+    {
+        tool = (wxToolBarTool *) node->GetData();
+        if ( tool != NULL )
+        {
+            tool->UpdateLabel();
+        }
+        
+        node = node->GetNext();
+    }
+
+    InvalidateBestSize();
 }
 
 #if wxOSX_USE_NATIVE_TOOLBAR
@@ -1408,7 +1454,7 @@
     
     wxSize toolSize = GetToolSize();
     WXWidget controlHandle = NULL;
-    NSRect toolrect = NSMakeRect(0, 0, toolSize.x, toolSize.y );
+    NSRect toolrect = NSMakeRect(0, 0, toolSize.x, toolSize.y + 2 );
 
 #if wxOSX_USE_NATIVE_TOOLBAR
     wxString label = tool->GetLabel();
@@ -1490,14 +1536,6 @@
                 if ( !(style & wxTB_NOICONS) )
                     tool->UpdateImages();
                 tool->UpdateLabel();
-
-                if ( style & wxTB_NOICONS )
-                    [v setImagePosition:NSNoImage];
-                else if ( style & wxTB_TEXT )
-                    [v setImagePosition:NSImageAbove];
-                else
-                    [v setImagePosition:NSImageOnly];
-                [v sizeToFit];
                 
 #if 0
                 InstallControlEventHandler(
