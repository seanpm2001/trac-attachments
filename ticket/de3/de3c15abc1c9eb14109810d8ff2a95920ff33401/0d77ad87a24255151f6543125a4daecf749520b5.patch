Index: include/wx/msw/pen.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/msw/pen.h,v
retrieving revision 1.15
diff -w -a -b -u -2 -r1.15 pen.h
--- include/wx/msw/pen.h	2003/02/10 21:07:19	1.15
+++ include/wx/msw/pen.h	2003/04/08 19:09:29
@@ -54,4 +54,5 @@
 
 #define M_PENDATA ((wxPenRefData *)m_refData)
+#define PENDATA(x) ((wxPenRefData *)(x).m_refData)
 
 // Pen
@@ -67,6 +68,26 @@
 
   inline wxPen& operator = (const wxPen& pen) { if (*this == pen) return (*this); Ref(pen); return *this; }
-  inline bool operator == (const wxPen& pen) const { return m_refData == pen.m_refData; }
-  inline bool operator != (const wxPen& pen) const { return m_refData != pen.m_refData; }
+  inline bool operator == (const wxPen& pen) const 
+  { 
+      // It is impossible to know if the user dashes have changed, 
+      // so we must assume that they have
+      if ( m_refData && pen.m_refData )
+      {
+          if ( M_PENDATA->m_nbDash != 0 || PENDATA(pen)->m_nbDash != 0 )
+              return false;
+      }
+      return m_refData == pen.m_refData;
+  }
+  inline bool operator != (const wxPen& pen) const 
+  { 
+      // It is impossible to know if the user dashes have changed, 
+      // so we must assume that they have
+      if ( m_refData && pen.m_refData )
+      {
+          if ( M_PENDATA->m_nbDash != 0 || PENDATA(pen)->m_nbDash != 0 )
+              return true;
+      }
+      return m_refData != pen.m_refData; 
+  }
 
   virtual bool Ok() const { return (m_refData != NULL) ; }
Index: src/msw/pen.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/pen.cpp,v
retrieving revision 1.18
diff -w -a -b -u -2 -r1.18 pen.cpp
--- src/msw/pen.cpp	2002/12/04 14:09:19	1.18
+++ src/msw/pen.cpp	2003/04/08 19:09:30
@@ -233,6 +233,7 @@
            {
                real_dash = new wxMSWDash[M_PENDATA->m_nbDash];
+               int rw = M_PENDATA->m_width > 1 ? M_PENDATA->m_width : 1;
                for ( int i = 0; i < M_PENDATA->m_nbDash; i++ )
-                   real_dash[i] = M_PENDATA->m_dash[i] * M_PENDATA->m_width;
+                   real_dash[i] = M_PENDATA->m_dash[i] * rw;
            }
            else
Index: src/gtk/pen.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/gtk/pen.cpp,v
retrieving revision 1.22
diff -w -a -b -u -2 -r1.22 pen.cpp
--- src/gtk/pen.cpp	2003/02/10 21:07:27	1.22
+++ src/gtk/pen.cpp	2003/04/08 19:09:30
@@ -53,4 +53,9 @@
     bool operator == (const wxPenRefData& data) const
     {
+        // It is impossible to tell if the dashes have changed
+        // so the only thing to do is assume they have
+        if (m_countDashes != 0 || data.m_countDashes != 0)
+            return false;
+
         return (m_style == data.m_style &&
                 m_width == data.m_width &&
Index: samples/drawing/drawing.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/samples/drawing/drawing.cpp,v
retrieving revision 1.66
diff -w -a -b -u -2 -r1.66 drawing.cpp
--- samples/drawing/drawing.cpp	2002/12/14 18:13:11	1.66
+++ samples/drawing/drawing.cpp	2003/04/08 19:09:30
@@ -465,16 +465,25 @@
     dc.DrawText(_T("User dash"), x + 150, y + 140);
     wxPen ud( wxT("black"), width, wxUSER_DASH );
-    wxDash dash1[1];
-    dash1[0] = 0;
-    ud.SetDashes( 1, dash1 );
+    wxDash dash1[6];
+    dash1[0] = 8;  // Long dash  <---------+
+    dash1[1] = 2;  // Short gap            |
+    dash1[2] = 3;  // Short dash           |
+    dash1[3] = 2;  // Short gap            |
+    dash1[4] = 3;  // Short dash           |
+    dash1[5] = 2;  // Short gap and repeat +
+    ud.SetDashes( 6, dash1 );
+    dc.SetPen( ud );
     dc.DrawLine( x+20, y+140, 100, y+140 );
-    dash1[0] = 1;
-    ud.SetDashes( 1, dash1 );
+    dash1[0] = 5;  // Make first dash shorter
+    ud.SetDashes( 6, dash1 );
+    dc.SetPen( ud );
     dc.DrawLine( x+20, y+150, 100, y+150 );
-    dash1[0] = 2;
-    ud.SetDashes( 1, dash1 );
+    dash1[2] = 5;  // Make second dash longer
+    ud.SetDashes( 6, dash1 );
+    dc.SetPen( ud );
     dc.DrawLine( x+20, y+160, 100, y+160 );
-    dash1[0] = 0x7F;
-    ud.SetDashes( 1, dash1 );
+    dash1[4] = 5;  // Make third dash longer
+    ud.SetDashes( 6, dash1 );
+    dc.SetPen( ud );
     dc.DrawLine( x+20, y+170, 100, y+170 );
 }

 	  	 
