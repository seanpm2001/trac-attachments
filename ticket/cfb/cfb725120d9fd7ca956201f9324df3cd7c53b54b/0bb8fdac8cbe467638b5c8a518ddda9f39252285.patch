--- sizer-o.cpp	2007-03-05 15:32:12.562500000 +0100
+++ sizer.cpp	2007-03-23 15:24:18.296875000 +0100
@@ -94,6 +94,7 @@
 {
     Init();
 
+    
     m_proportion = flags.GetProportion();
     m_flag = flags.GetFlags();
     m_border = flags.GetBorderInPixels();
@@ -108,6 +109,7 @@
     m_flag = 0;
 
     m_kind = Item_None;
+    m_sizer = NULL; 	// To avoid having a dangling pointer
 }
 
 // window item
@@ -115,6 +117,8 @@
 {
     wxCHECK_RET( window, _T("NULL window in wxSizerItem::SetWindow()") );
 
+    Free( );
+    
     m_kind = Item_Window;
     m_window = window;
 
@@ -133,7 +137,9 @@
                          int flag,
                          int border,
                          wxObject* userData)
-           : m_proportion(proportion),
+           : m_kind(Item_None),
+             m_sizer(NULL),
+             m_proportion(proportion),
              m_border(border),
              m_flag(flag),
              m_userData(userData)
@@ -144,6 +150,7 @@
 // sizer item
 void wxSizerItem::SetSizer(wxSizer *sizer)
 {
+    Free( );
     m_kind = Item_Sizer;
     m_sizer = sizer;
 }
@@ -153,7 +160,9 @@
                          int flag,
                          int border,
                          wxObject* userData)
-           : m_proportion(proportion),
+           : m_kind(Item_None),
+             m_sizer(NULL),
+             m_proportion(proportion),
              m_border(border),
              m_flag(flag),
              m_ratio(0.0),
@@ -167,6 +176,7 @@
 // spacer item
 void wxSizerItem::SetSpacer(const wxSize& size)
 {
+    Free( );
     m_kind = Item_Spacer;
     m_spacer = new wxSizerSpacer(size);
     m_minSize = size;
@@ -179,7 +189,9 @@
                          int flag,
                          int border,
                          wxObject* userData)
-           : m_minSize(width, height), // minimal size is the initial size
+           : m_kind(Item_None),
+             m_sizer(NULL),
+             m_minSize(width, height), // minimal size is the initial size
              m_proportion(proportion),
              m_border(border),
              m_flag(flag),
@@ -191,7 +203,10 @@
 wxSizerItem::~wxSizerItem()
 {
     delete m_userData;
+    Free( );
+}
 
+void wxSizerItem::Free( ){
     switch ( m_kind )
     {
         case Item_None:
@@ -213,6 +228,9 @@
         default:
             wxFAIL_MSG( _T("unexpected wxSizerItem::m_kind") );
     }
+    
+    m_kind = Item_None;	// To avoid freeing the again
+    m_sizer = NULL;
 }
 
 wxSize wxSizerItem::GetSpacer() const
 
--- sizer-o.h	2007-03-05 15:32:28.687500000 +0100
+++ sizer.h	2007-03-23 15:16:43.875000000 +0100
@@ -332,12 +332,14 @@
 
 protected:
     // common part of several ctors
-    void Init() { m_userData = NULL; }
+    void Init() { m_userData = NULL; m_kind = Item_None; m_sizer=NULL; }
 
     // common part of ctors taking wxSizerFlags
     void Init(const wxSizerFlags& flags);
 
-
+    // Before setting s sizeritem to something else, release previous (windows) item
+    void Free( );
+ 
     // discriminated union: depending on m_kind one of the fields is valid
     enum
     {


 	  	 
