Index: docs/latex/wx/clrpicker.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/clrpicker.tex,v
retrieving revision 1.2
diff -u2 -r1.2 docs/latex/wx/clrpicker.tex
--- docs/latex/wx/clrpicker.tex
+++ docs/latex/wx/clrpicker.tex
@@ -33,9 +33,5 @@
 \twocolwidtha{5cm}%
 \begin{twocollist}\itemsep=0pt
-\twocolitem{\windowstyle{wxCLRP\_DEFAULT}}{Default style.}
-\twocolitem{\windowstyle{wxCLRP\_USE\_TEXTCTRL}}{Creates a text control to the left of the
-picker button which is completely managed by the \helpref{wxColourPickerCtrl}{wxcolourpickerctrl}
-and which can be used by the user to specify a colour (see \helpref{SetColour}{wxcolourpickerctrlsetcolour}).
-The text control is automatically synchronized with button's value. Use functions defined in \helpref{wxPickerBase}{wxpickerbase} to modify the text control.}
+\twocolitem{\windowstyle{wxCLRP\_DEFAULT}}{The default style: 0.}
 \twocolitem{\windowstyle{wxCLRP\_USE\_TEXTCTRL}}{Creates a text control to the left of the
 picker button which is completely managed by the \helpref{wxColourPickerCtrl}{wxcolourpickerctrl}
Index: docs/latex/wx/dirpicker.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/dirpicker.tex,v
retrieving revision 1.2
diff -u2 -r1.2 docs/latex/wx/dirpicker.tex
--- docs/latex/wx/dirpicker.tex
+++ docs/latex/wx/dirpicker.tex
@@ -33,5 +33,5 @@
 \twocolwidtha{5cm}%
 \begin{twocollist}\itemsep=0pt
-\twocolitem{\windowstyle{wxDIRP\_DEFAULT\_STYLE}}{Default style.}
+\twocolitem{\windowstyle{wxDIRP\_DEFAULT\_STYLE}}{The default style: wxDIRP_DIR_MUST_EXIST on wxGTK and wxDIRP_USE_TEXTCTRL|wxDIRP_DIR_MUST_EXIST on wxMSW.}
 \twocolitem{\windowstyle{wxDIRP\_USE\_TEXTCTRL}}{Creates a text control to the left of the
 picker button which is completely managed by the \helpref{wxDirPickerCtrl}{wxdirpickerctrl}
Index: docs/latex/wx/filepicker.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/filepicker.tex,v
retrieving revision 1.2
diff -u2 -r1.2 docs/latex/wx/filepicker.tex
--- docs/latex/wx/filepicker.tex
+++ docs/latex/wx/filepicker.tex
@@ -33,5 +33,5 @@
 \twocolwidtha{5cm}%
 \begin{twocollist}\itemsep=0pt
-\twocolitem{\windowstyle{wxFLP\_DEFAULT\_STYLE}}{Default style.}
+\twocolitem{\windowstyle{wxFLP\_DEFAULT\_STYLE}}{The default style: wxFLP_OPEN|wxFLP_FILE_MUST_EXIST on wxGTK and wxFLP_OPEN|wxFLP_FILE_MUST_EXIST|wxFLP_USE_TEXTCTRL on wxMSW.}
 \twocolitem{\windowstyle{wxFLP\_USE\_TEXTCTRL}}{Creates a text control to the left of the
 picker button which is completely managed by the \helpref{wxFilePickerCtrl}{wxfilepickerctrl}
Index: docs/latex/wx/fontpicker.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/fontpicker.tex,v
retrieving revision 1.2
diff -u2 -r1.2 docs/latex/wx/fontpicker.tex
--- docs/latex/wx/fontpicker.tex
+++ docs/latex/wx/fontpicker.tex
@@ -33,5 +33,5 @@
 \twocolwidtha{5cm}%
 \begin{twocollist}\itemsep=0pt
-\twocolitem{\windowstyle{wxFNTP\_DEFAULT}}{Default style.}
+\twocolitem{\windowstyle{wxFNTP\_DEFAULT}}{The default style: wxFNTP_FONTDESC_AS_LABEL|wxFNTP_USEFONT_FOR_LABEL.}
 \twocolitem{\windowstyle{wxFNTP\_USE\_TEXTCTRL}}{Creates a text control to the left of the
 picker button which is completely managed by the \helpref{wxFontPickerCtrl}{wxfontpickerctrl}
Index: include/wx/filepicker.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/filepicker.h,v
retrieving revision 1.5
diff -u2 -r1.5 include/wx/filepicker.h
--- include/wx/filepicker.h
+++ include/wx/filepicker.h
@@ -140,4 +140,7 @@
     virtual wxEventType GetEventType() const = 0;

+    // Returns the filtered value currently placed in the text control (if present).
+    virtual wxString GetTextCtrlValue() const = 0;
+
 protected:

@@ -161,7 +164,7 @@
 #ifdef __WXGTK__
     // GTK apps usually don't have a textctrl next to the picker
-    #define wxFLP_DEFAULT_STYLE       (wxFLP_OPEN)
+    #define wxFLP_DEFAULT_STYLE       (wxFLP_OPEN|wxFLP_FILE_MUST_EXIST)
 #else
-    #define wxFLP_DEFAULT_STYLE       (wxFLP_USE_TEXTCTRL|wxFLP_OPEN)
+    #define wxFLP_DEFAULT_STYLE       (wxFLP_USE_TEXTCTRL|wxFLP_OPEN|wxFLP_FILE_MUST_EXIST)
 #endif

@@ -220,5 +223,14 @@
     bool CheckPath(const wxString &path) const
     {
-        return HasFlag(wxFLP_SAVE) || wxFileName::FileExists(path);
+        // if wxFLP_SAVE was given or wxFLP_FILE_MUST_EXIST has NOT been given we must accept any path
+        return HasFlag(wxFLP_SAVE) ||
+               !HasFlag(wxFLP_FILE_MUST_EXIST) ||
+               wxFileName::FileExists(path);
+    }
+
+    wxString GetTextCtrlValue() const
+    {
+        // filter it through wxFileName to remove any spurious path separator
+        return wxFileName(m_text->GetValue()).GetFullPath();
     }

@@ -256,7 +268,7 @@
 #ifdef __WXGTK__
     // GTK apps usually don't have a textctrl next to the picker
-    #define wxDIRP_DEFAULT_STYLE       0
+    #define wxDIRP_DEFAULT_STYLE       (wxDIRP_DIR_MUST_EXIST)
 #else
-    #define wxDIRP_DEFAULT_STYLE       (wxDIRP_USE_TEXTCTRL)
+    #define wxDIRP_DEFAULT_STYLE       (wxDIRP_USE_TEXTCTRL|wxDIRP_DIR_MUST_EXIST)
 #endif

@@ -299,5 +311,17 @@

     bool CheckPath(const wxString &path) const
-        { if (HasFlag(wxDIRP_DIR_MUST_EXIST)) return wxFileName::DirExists(path); else return true; }
+    {
+        // if wxDIRP_DIR_MUST_EXIST has NOT been given we must accept any path
+        return !HasFlag(wxDIRP_DIR_MUST_EXIST) ||
+               wxFileName::DirExists(path);
+    }
+
+    wxString GetTextCtrlValue() const
+    {
+        // filter it through wxFileName to remove any spurious path separator
+        // NB: to tell wxFileName that this is a directory, we need to
+        //     use the constructor which takes a directory name and, separed, a file name.
+        return wxFileName(m_text->GetValue(), wxEmptyString).GetPath();
+    }

     bool IsCwdToUpdate() const
Index: include/wx/gtk/filepicker.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/filepicker.h,v
retrieving revision 1.2
diff -u2 -r1.2 include/wx/gtk/filepicker.h
--- include/wx/gtk/filepicker.h
+++ include/wx/gtk/filepicker.h
@@ -40,10 +40,4 @@
         m_dialog->Destroy();                                                        \
         return wxButton::Destroy();                                                 \
-    }                                                                               \
-                                                                                    \
-    virtual void SetPath(const wxString &str)                                       \
-    {                                                                               \
-        m_path=str;                                                                 \
-        UpdateDialogPath(m_dialog);                                                 \
     }

@@ -106,4 +100,6 @@
     }

+    virtual void SetPath(const wxString &str);
+
     // see macro defined above
     FILEDIRBTN_OVERRIDES
@@ -124,5 +120,5 @@
 {
 public:
-    wxDirButton() { m_dialog = NULL;}
+    wxDirButton() { m_dialog = NULL; m_bIgnoreNextChange=false; }
     wxDirButton(wxWindow *parent,
                 wxWindowID id,
@@ -137,4 +133,5 @@
     {
         m_dialog = NULL;
+        m_bIgnoreNextChange=false;
         Create(parent, id, label, path, message, wxEmptyString,
                 pos, size, style, validator, name);
@@ -158,7 +155,4 @@
                 const wxString& name = wxFilePickerWidgetNameStr);

-    // used by the GTK callback only
-    void UpdatePath(char *gtkpath)
-        { m_path = wxString::FromAscii(gtkpath); }

     // GtkFileChooserButton does not support GTK_FILE_CHOOSER_CREATE_FOLDER
@@ -169,4 +163,6 @@
     }

+    virtual void SetPath(const wxString &str);
+
     // see macro defined above
     FILEDIRBTN_OVERRIDES
@@ -175,4 +171,11 @@
     wxDialog *m_dialog;

+public:    // used by the GTK callback only
+
+    bool m_bIgnoreNextChange;
+
+    void UpdatePath(char *gtkpath)
+        { m_path = wxString::FromAscii(gtkpath); }
+
 private:
     DECLARE_DYNAMIC_CLASS(wxDirButton)
Index: src/common/filepickercmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/filepickercmn.cpp,v
retrieving revision 1.4
diff -u2 -r1.4 src/common/filepickercmn.cpp
--- src/common/filepickercmn.cpp
+++ src/common/filepickercmn.cpp
@@ -107,7 +107,5 @@
     // string otherwise we would generate a wxFileDirPickerEvent when changing
     // from e.g. /home/user to /home/user/ and we want to avoid it !
-    wxString newpath(m_text->GetValue());
-    if (!newpath.empty() && wxFileName::IsPathSeparator(newpath.Last()))
-        newpath.RemoveLast();
+    wxString newpath(GetTextCtrlValue());
     if (!CheckPath(newpath))
         return;       // invalid user input
@@ -121,5 +119,5 @@
         //       then no change would happen
         if (IsCwdToUpdate())
-            wxSetWorkingDirectory(newpath + wxFileName::GetPathSeparator());
+            wxSetWorkingDirectory(newpath);

         // fire an event
Index: src/gtk/filepicker.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/filepicker.cpp,v
retrieving revision 1.4
diff -u2 -r1.4 src/gtk/filepicker.cpp
--- src/gtk/filepicker.cpp
+++ src/gtk/filepicker.cpp
@@ -21,10 +21,8 @@

 #include "wx/filepicker.h"
-
 #include "wx/tooltip.h"

 #include <gtk/gtk.h>

-#include <unistd.h> // chdir


@@ -130,4 +128,11 @@
 }

+
+void wxFileButton::SetPath(const wxString &str)
+{
+    m_path=str;
+    UpdateDialogPath(m_dialog);
+}
+
 #endif      // wxUSE_FILEPICKERCTRL && defined(__WXGTK26__)

@@ -137,4 +142,6 @@
 #if wxUSE_DIRPICKERCTRL && defined(__WXGTK26__)

+#include <unistd.h> // chdir
+
 //-----------------------------------------------------------------------------
 // "current-folder-changed"
@@ -146,4 +153,10 @@
 {
     // update the m_path member of the wxDirButtonGTK
+    // unless the path was changed by wxDirButton::SetPath()
+    if (p->m_bIgnoreNextChange)
+    {
+        p->m_bIgnoreNextChange=false;
+        return;
+    }
     wxASSERT(p);

@@ -203,4 +216,5 @@
         if ((m_dialog = CreateDialog()) == NULL)
             return false;
+        SetPath(path);

         // little trick used to avoid problems when there are other GTK windows 'grabbed':
@@ -247,3 +261,17 @@
 }

+void wxDirButton::SetPath(const wxString &str)
+{
+    m_path=str;
+
+    // wxDirButton uses the "current-folder-changed" signal which is triggered also
+    // when we set the path on the dialog associated with this button; thus we need
+    // to set the following flag to avoid sending a wxFileDirPickerEvent from this
+    // function (which would be inconsistent with wxFileButton's behaviour and in
+    // general with all wxWidgets control-manipulation functions which do not send events).
+    m_bIgnoreNextChange = true;
+
+    UpdateDialogPath(m_dialog);
+}
+
 #endif      // wxUSE_DIRPICKERCTRL && defined(__WXGTK26__)


 	  	 
