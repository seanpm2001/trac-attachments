Index: src/unix/sockunix.cpp
===================================================================
--- src/unix/sockunix.cpp	(revision 71089)
+++ src/unix/sockunix.cpp	(working copy)
@@ -99,6 +99,11 @@
 
 void wxSocketImplUnix::DoEnableEvents(int flags, bool enable)
 {
+    if (m_threadsafe && enable)
+    {
+      return;
+    }
+
     wxSocketManager * const manager = wxSocketManager::Get();
     if (!manager)
         return;
@@ -241,4 +246,12 @@
         OnStateChange(wxSOCKET_LOST);
 }
 
+void wxSocketImplUnix::MakeThreadSafe(bool ThreadSafe)
+{
+    m_threadsafe = ThreadSafe;
+
+    if ( m_fd != INVALID_SOCKET )
+        DoEnableEvents(wxSOCKET_INPUT_FLAG | wxSOCKET_OUTPUT_FLAG, !m_threadsafe);
+}
+
 #endif  /* wxUSE_SOCKETS */
Index: src/common/socket.cpp
===================================================================
--- src/common/socket.cpp	(revision 71089)
+++ src/common/socket.cpp	(working copy)
@@ -1630,6 +1630,9 @@
                   "wxSOCKET_NOWAIT doesn't make sense" );
 
     m_flags = flags;
+
+    if (m_impl)
+        m_impl->MakeThreadSafe((m_flags & wxSOCKET_NOWAIT) && !m_notify);
 }
 
 
@@ -1703,6 +1706,9 @@
 void wxSocketBase::Notify(bool notify)
 {
     m_notify = notify;
+
+    if (m_impl)
+        m_impl->MakeThreadSafe((m_flags & wxSOCKET_NOWAIT) && !m_notify);
 }
 
 void wxSocketBase::SetNotify(wxSocketEventFlags flags)
Index: include/wx/unix/private/sockunix.h
===================================================================
--- include/wx/unix/private/sockunix.h	(revision 71089)
+++ include/wx/unix/private/sockunix.h	(working copy)
@@ -33,6 +33,8 @@
     {
         m_fds[0] =
         m_fds[1] = -1;
+
+        m_threadsafe = false;
     }
 
     virtual wxSocketError GetLastError() const;
@@ -60,6 +62,8 @@
     virtual void OnExceptionWaiting();
     virtual bool IsOk() const { return m_fd != INVALID_SOCKET; }
 
+    virtual void MakeThreadSafe(bool ThreadSafe);
+
 private:
     virtual void DoClose()
     {
@@ -90,6 +94,8 @@
     // with the socket
     int m_fds[2];
 
+    bool m_threadsafe;
+
 private:
     // notify the associated wxSocket about a change in socket state and shut
     // down the socket if the event is wxSOCKET_LOST
Index: include/wx/private/socket.h
===================================================================
--- include/wx/private/socket.h	(revision 71089)
+++ include/wx/private/socket.h	(working copy)
@@ -277,6 +277,7 @@
     // no pending connections as our sockets are non-blocking)
     wxSocketImpl *Accept(wxSocketBase& wxsocket);
 
+    virtual void MakeThreadSafe(bool WXUNUSED(ThreadSafe)) {}
 
     // notifications
     // -------------
