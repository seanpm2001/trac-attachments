Index: wxWidgets-2.8/samples/thread/thread.cpp
===================================================================
--- wxWidgets-2.8/samples/thread/thread.cpp	(revision 50277)
+++ wxWidgets-2.8/samples/thread/thread.cpp	(working copy)
@@ -2,7 +2,7 @@
 // Name:        thread.cpp
 // Purpose:     wxWidgets thread sample
 // Author:      Guilhem Lavaux, Vadim Zeitlin
-// Modified by:
+// Modified by: Selwin van Dijk
 // Created:     06/16/98
 // RCS-ID:      $Id$
 // Copyright:   (c) 1998-2002 wxWidgets team
@@ -42,7 +42,7 @@
 #endif
 
 class MyThread;
-WX_DEFINE_ARRAY_PTR(wxThread *, wxArrayThread);
+WX_DEFINE_ARRAY_PTR(MyThread *, wxArrayThread);
 
 // Define a new application type
 class MyApp : public wxApp
@@ -241,9 +241,11 @@
         wxThread::Sleep(1000);
     }
 
-    text.Printf(wxT("Thread 0x%lx finished.\n"), GetId());
-    WriteText(text);
-    // wxLogMessage(text); -- test wxLog thread safeness
+    if ( m_frame != NULL ){ //if frame is not destroyed, write text
+      text.Printf(wxT("Thread 0x%lx finished.\n"), GetId());
+      WriteText(text);
+      // wxLogMessage(text); -- test wxLog thread safeness
+    }
 
     return NULL;
 }
@@ -441,7 +443,7 @@
     // tell all the threads to terminate: note that they can't terminate while
     // we're deleting them because they will block in their OnExit() -- this is
     // important as otherwise we might access invalid array elements
-    wxThread *thread;
+    MyThread *thread;
 
     wxGetApp().m_critsect.Enter();
 
@@ -455,11 +457,14 @@
         wxGetApp().m_waitingUntilAllDone = true;
 
         // stop all threads
-        while ( ! threads.IsEmpty() )
+        for ( size_t i = 0; i < threads.GetCount(); ++i )
         {
-            thread = threads.Last();
+            thread = threads[i];
 
-            wxGetApp().m_critsect.Leave();
+	    //let thread know the frame is destroyed
+	    thread->m_frame = NULL; 
+            
+	    wxGetApp().m_critsect.Leave();
 
             thread->Delete();
 
@@ -512,7 +517,7 @@
     // first create them all...
     for ( n = 0; n < count; n++ )
     {
-        wxThread *thr = CreateThread();
+        MyThread *thr = CreateThread();
 
         // we want to show the effect of SetPriority(): the first thread will
         // have the lowest priority, the second - the highest, all the rest

 	  	 
