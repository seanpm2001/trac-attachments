Index: demos/poem/wxpoem.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/demos/poem/wxpoem.cpp,v
retrieving revision 1.21
diff -bu2 -r1.21 demos/poem/wxpoem.cpp
--- demos/poem/wxpoem.cpp
+++ demos/poem/wxpoem.cpp
@@ -752,4 +752,5 @@
 void MainWindow::ReadPreferences()
 {
+/* TODO: convert this code to use wxConfig
 #if wxUSE_RESOURCES
     wxGetResource(_T("wxPoem"), _T("FontSize"), &pointSize);
@@ -757,4 +758,5 @@
     wxGetResource(_T("wxPoem"), _T("Y"), &YPos);
 #endif
+*/
 }
 
@@ -764,4 +766,5 @@
 #ifdef __WXMSW__
     TheMainWindow->GetPosition(&XPos, &YPos);
+/* TODO: convert this code to use wxConfig
 #if wxUSE_RESOURCES
     wxWriteResource(_T("wxPoem"), _T("FontSize"), pointSize);
@@ -769,4 +772,5 @@
     wxWriteResource(_T("wxPoem"), _T("Y"), YPos);
 #endif
+*/
 #endif
 }
Index: docs/latex/wx/function.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/function.tex,v
retrieving revision 1.275
diff -bu2 -r1.275 docs/latex/wx/function.tex
--- docs/latex/wx/function.tex
+++ docs/latex/wx/function.tex
@@ -149,5 +149,4 @@
 \helpref{wxGetPrinterTranslation}{wxgetprintertranslation}\\
 \helpref{wxGetProcessId}{wxgetprocessid}\\
-\helpref{wxGetResource}{wxgetresource}\\
 \helpref{wxGetSingleChoiceData}{wxgetsinglechoicedata}\\
 \helpref{wxGetSingleChoiceIndex}{wxgetsinglechoiceindex}\\
@@ -272,5 +271,4 @@
 \helpref{wxVsnprintf}{wxvsnprintf}\\
 \helpref{wxWakeUpIdle}{wxwakeupidle}\\
-\helpref{wxWriteResource}{wxwriteresource}\\
 \helpref{wxYield}{wxyield}\\
 \helpref{wx\_const\_cast}{wxconstcastraw}\\
@@ -3217,38 +3215,4 @@
 
 
-\membersection{::wxGetResource}\label{wxgetresource}
-
-\func{bool}{wxGetResource}{\param{const wxString\& }{section}, \param{const wxString\& }{entry},
- \param{const wxString\& *}{value}, \param{const wxString\& }{file = NULL}}
-
-\func{bool}{wxGetResource}{\param{const wxString\& }{section}, \param{const wxString\& }{entry},
- \param{float *}{value}, \param{const wxString\& }{file = NULL}}
-
-\func{bool}{wxGetResource}{\param{const wxString\& }{section}, \param{const wxString\& }{entry},
- \param{long *}{value}, \param{const wxString\& }{file = NULL}}
-
-\func{bool}{wxGetResource}{\param{const wxString\& }{section}, \param{const wxString\& }{entry},
- \param{int *}{value}, \param{const wxString\& }{file = NULL}}
-
-Gets a resource value from the resource database (for example, WIN.INI, or
-.Xdefaults). If {\it file} is NULL, WIN.INI or .Xdefaults is used,
-otherwise the specified file is used.
-
-Under X, if an application class (wxApp::GetClassName) has been defined,
-it is appended to the string /usr/lib/X11/app-defaults/ to try to find
-an applications default file when merging all resource databases.
-
-The reason for passing the result in an argument is that it
-can be convenient to define a default value, which gets overridden
-if the value exists in the resource file. It saves a separate
-test for that resource's existence, and it also allows
-the overloading of the function for different types.
-
-See also \helpref{wxWriteResource}{wxwriteresource}, \helpref{wxConfigBase}{wxconfigbase}.
-
-\wxheading{Include files}
-
-<wx/utils.h>
-
 
 \membersection{::wxGetStockLabel}\label{wxgetstocklabel}
@@ -3486,35 +3450,4 @@
 
 
-\membersection{::wxWriteResource}\label{wxwriteresource}
-
-\func{bool}{wxWriteResource}{\param{const wxString\& }{section}, \param{const wxString\& }{entry},
- \param{const wxString\& }{value}, \param{const wxString\& }{file = NULL}}
-
-\func{bool}{wxWriteResource}{\param{const wxString\& }{section}, \param{const wxString\& }{entry},
- \param{float }{value}, \param{const wxString\& }{file = NULL}}
-
-\func{bool}{wxWriteResource}{\param{const wxString\& }{section}, \param{const wxString\& }{entry},
- \param{long }{value}, \param{const wxString\& }{file = NULL}}
-
-\func{bool}{wxWriteResource}{\param{const wxString\& }{section}, \param{const wxString\& }{entry},
- \param{int }{value}, \param{const wxString\& }{file = NULL}}
-
-Writes a resource value into the resource database (for example, WIN.INI, or
-.Xdefaults). If {\it file} is NULL, WIN.INI or .Xdefaults is used,
-otherwise the specified file is used.
-
-Under X, the resource databases are cached until the internal function
-\rtfsp{\bf wxFlushResources} is called automatically on exit, when
-all updated resource databases are written to their files.
-
-Note that it is considered bad manners to write to the .Xdefaults
-file under Unix, although the WIN.INI file is fair game under Windows.
-
-See also \helpref{wxGetResource}{wxgetresource}, \helpref{wxConfigBase}{wxconfigbase}.
-
-\wxheading{Include files}
-
-<wx/utils.h>
-
 
 \membersection{\_\_WXFUNCTION\_\_}\label{wxfunction}
Index: docs/latex/wx/wizpage.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/wizpage.tex,v
retrieving revision 1.11
diff -bu2 -r1.11 docs/latex/wx/wizpage.tex
--- docs/latex/wx/wizpage.tex
+++ docs/latex/wx/wizpage.tex
@@ -51,5 +51,5 @@
 \membersection{wxWizardPage::wxWizardPage}\label{wxwizardpagewxwizardpage}
 
-\func{}{wxWizardPage}{\param{wxWizard* }{parent}, \param{const wxBitmap\& }{bitmap = wxNullBitmap}, \param{const wxChar }{*resource = NULL}}
+\func{}{wxWizardPage}{\param{wxWizard* }{parent}, \param{const wxBitmap\& }{bitmap = wxNullBitmap}}
 
 Constructor accepts an optional bitmap which will be used for this page
@@ -64,5 +64,4 @@
 \docparam{bitmap}{The page-specific bitmap if different from the global one}
 
-\docparam{resource}{Load the page from the specified resource if non-NULL}
 
 \membersection{wxWizardPage::GetPrev}\label{wxwizardpagegetprev}
Index: include/wx/chkconf.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/chkconf.h,v
retrieving revision 1.142
diff -bu2 -r1.142 include/wx/chkconf.h
--- include/wx/chkconf.h
+++ include/wx/chkconf.h
@@ -1805,13 +1805,4 @@
 #endif /* wxUSE_CLIPBOARD */
 
-#if wxUSE_WX_RESOURCES && !wxUSE_PROLOGIO
-#   ifdef wxABORT_ON_CONFIG_ERROR
-#       error "wxr resources require PrologIO"
-#   else
-#       undef wxUSE_PROLOGIO
-#       define wxUSE_PROLOGIO 1
-#   endif
-#endif /* wxUSE_WX_RESOURCES */
-
 #if wxUSE_XRC && !wxUSE_XML
 #   ifdef wxABORT_ON_CONFIG_ERROR
Index: include/wx/setup_inc.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/setup_inc.h,v
retrieving revision 1.61
diff -bu2 -r1.61 include/wx/setup_inc.h
--- include/wx/setup_inc.h
+++ include/wx/setup_inc.h
@@ -1069,6 +1069,4 @@
 #define wxUSE_WXHTML_HELP 1
 
-#define wxUSE_RESOURCES   0
-                                // 0 for no wxGetResource/wxWriteResource
 #define wxUSE_CONSTRAINTS 1
                                 // 0 for no window layout constraint system
Index: include/wx/utils.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/utils.h,v
retrieving revision 1.141
diff -bu2 -r1.141 include/wx/utils.h
--- include/wx/utils.h
+++ include/wx/utils.h
@@ -640,21 +640,4 @@
 };
 
-
-// ----------------------------------------------------------------------------
-// Reading and writing resources (eg WIN.INI, .Xdefaults)
-// ----------------------------------------------------------------------------
-
-#if wxUSE_RESOURCES
-WXDLLEXPORT bool wxWriteResource(const wxString& section, const wxString& entry, const wxString& value, const wxString& file = wxEmptyString);
-WXDLLEXPORT bool wxWriteResource(const wxString& section, const wxString& entry, float value, const wxString& file = wxEmptyString);
-WXDLLEXPORT bool wxWriteResource(const wxString& section, const wxString& entry, long value, const wxString& file = wxEmptyString);
-WXDLLEXPORT bool wxWriteResource(const wxString& section, const wxString& entry, int value, const wxString& file = wxEmptyString);
-
-WXDLLEXPORT bool wxGetResource(const wxString& section, const wxString& entry, wxChar **value, const wxString& file = wxEmptyString);
-WXDLLEXPORT bool wxGetResource(const wxString& section, const wxString& entry, float *value, const wxString& file = wxEmptyString);
-WXDLLEXPORT bool wxGetResource(const wxString& section, const wxString& entry, long *value, const wxString& file = wxEmptyString);
-WXDLLEXPORT bool wxGetResource(const wxString& section, const wxString& entry, int *value, const wxString& file = wxEmptyString);
-#endif // wxUSE_RESOURCES
-
 void WXDLLEXPORT wxGetMousePosition( int* x, int* y );
 
Index: include/wx/wizard.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/wizard.h,v
retrieving revision 1.47
diff -bu2 -r1.47 include/wx/wizard.h
--- include/wx/wizard.h
+++ include/wx/wizard.h
@@ -55,10 +55,8 @@
     // reposition the page anyhow
     wxWizardPage(wxWizard *parent,
-                 const wxBitmap& bitmap = wxNullBitmap,
-                 const wxChar* resource = NULL);
+                 const wxBitmap& bitmap = wxNullBitmap);
 
     bool Create(wxWizard *parent,
-                const wxBitmap& bitmap = wxNullBitmap,
-                const wxChar* resource = NULL);
+                const wxBitmap& bitmap = wxNullBitmap);
 
     // these functions are used by the wizard to show another page when the
@@ -122,8 +120,7 @@
                        wxWizardPage *prev = (wxWizardPage *)NULL,
                        wxWizardPage *next = (wxWizardPage *)NULL,
-                       const wxBitmap& bitmap = wxNullBitmap,
-                       const wxChar* resource = NULL)
+                       const wxBitmap& bitmap = wxNullBitmap)
     {
-        Create(parent, prev, next, bitmap, resource);
+        Create(parent, prev, next, bitmap);
     }
 
@@ -131,10 +128,9 @@
                 wxWizardPage *prev = (wxWizardPage *)NULL,
                 wxWizardPage *next = (wxWizardPage *)NULL,
-                const wxBitmap& bitmap = wxNullBitmap,
-                const wxChar* resource = NULL)
+                const wxBitmap& bitmap = wxNullBitmap)
     {
         m_prev = prev;
         m_next = next;
-        return wxWizardPage::Create(parent, bitmap, resource);
+        return wxWizardPage::Create(parent, bitmap);
     }
 
Index: src/cocoa/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/cocoa/utils.cpp,v
retrieving revision 1.14
diff -bu2 -r1.14 src/cocoa/utils.cpp
--- src/cocoa/utils.cpp
+++ src/cocoa/utils.cpp
@@ -112,76 +112,2 @@
 #endif
 
-// Reading and writing resources (eg WIN.INI, .Xdefaults)
-#if wxUSE_RESOURCES
-bool wxWriteResource(const wxString& section, const wxString& entry, const wxString& value, const wxString& file)
-{
-    // TODO
-    return false;
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, float value, const wxString& file)
-{
-    char buf[50];
-    sprintf(buf, "%.4f", value);
-    return wxWriteResource(section, entry, buf, file);
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, long value, const wxString& file)
-{
-    char buf[50];
-    sprintf(buf, "%ld", value);
-    return wxWriteResource(section, entry, buf, file);
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, int value, const wxString& file)
-{
-    char buf[50];
-    sprintf(buf, "%d", value);
-    return wxWriteResource(section, entry, buf, file);
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, char **value, const wxString& file)
-{
-    // TODO
-    return false;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, float *value, const wxString& file)
-{
-    char *s = NULL;
-    bool succ = wxGetResource(section, entry, (char **)&s, file);
-    if (succ)
-    {
-        *value = (float)strtod(s, NULL);
-        delete[] s;
-        return true;
-    }
-    else return false;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, long *value, const wxString& file)
-{
-    char *s = NULL;
-    bool succ = wxGetResource(section, entry, (char **)&s, file);
-    if (succ)
-    {
-        *value = strtol(s, NULL, 10);
-        delete[] s;
-        return true;
-    }
-    else return false;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, int *value, const wxString& file)
-{
-    char *s = NULL;
-    bool succ = wxGetResource(section, entry, (char **)&s, file);
-    if (succ)
-    {
-        *value = (int)strtol(s, NULL, 10);
-        delete[] s;
-        return true;
-    }
-    else return false;
-}
-#endif // wxUSE_RESOURCES
Index: src/mac/carbon/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/utils.cpp,v
retrieving revision 1.139
diff -bu2 -r1.139 src/mac/carbon/utils.cpp
--- src/mac/carbon/utils.cpp
+++ src/mac/carbon/utils.cpp
@@ -379,82 +379,4 @@
 }
 
-// Reading and writing resources (eg WIN.INI, .Xdefaults)
-#if wxUSE_RESOURCES
-bool wxWriteResource(const wxString& section, const wxString& entry, const wxString& value, const wxString& file)
-{
-    // TODO
-    return false;
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, float value, const wxString& file)
-{
-    wxString buf;
-    buf.Printf(wxT("%.4f"), value);
-
-    return wxWriteResource(section, entry, buf, file);
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, long value, const wxString& file)
-{
-    wxString buf;
-    buf.Printf(wxT("%ld"), value);
-
-    return wxWriteResource(section, entry, buf, file);
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, int value, const wxString& file)
-{
-    wxString buf;
-    buf.Printf(wxT("%d"), value);
-
-    return wxWriteResource(section, entry, buf, file);
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, char **value, const wxString& file)
-{
-    // TODO
-    return false;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, float *value, const wxString& file)
-{
-    char *s = NULL;
-    bool succ = wxGetResource(section, entry, (char **)&s, file);
-    if (succ)
-    {
-        *value = (float)strtod(s, NULL);
-        delete[] s;
-    }
-
-    return succ;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, long *value, const wxString& file)
-{
-    char *s = NULL;
-    bool succ = wxGetResource(section, entry, (char **)&s, file);
-    if (succ)
-    {
-        *value = strtol(s, NULL, 10);
-        delete[] s;
-    }
-
-    return succ;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, int *value, const wxString& file)
-{
-    char *s = NULL;
-    bool succ = wxGetResource(section, entry, (char **)&s, file);
-    if (succ)
-    {
-        *value = (int)strtol(s, NULL, 10);
-        delete[] s;
-    }
-
-    return succ;
-}
-#endif // wxUSE_RESOURCES
-
 int gs_wxBusyCursorCount = 0;
 extern wxCursor    gMacCurrentCursor;
Index: src/motif/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/utils.cpp,v
retrieving revision 1.71
diff -bu2 -r1.71 src/motif/utils.cpp
--- src/motif/utils.cpp
+++ src/motif/utils.cpp
@@ -53,8 +53,4 @@
 #include "wx/motif/private.h"
 
-#if wxUSE_RESOURCES
-#include "X11/Xresource.h"
-#endif
-
 #include "X11/Xutil.h"
 
@@ -63,19 +59,4 @@
 #endif
 
-// ----------------------------------------------------------------------------
-// private functions
-// ----------------------------------------------------------------------------
-
-// Yuck this is really BOTH site and platform dependent
-// so we should use some other strategy!
-#ifdef sun
-    #define DEFAULT_XRESOURCE_DIR "/usr/openwin/lib/app-defaults"
-#else
-    #define DEFAULT_XRESOURCE_DIR "/usr/lib/X11/app-defaults"
-#endif
-
-#if wxUSE_RESOURCES
-static char *GetIniFile (char *dest, const char *filename);
-#endif
 
 // ============================================================================
@@ -155,348 +136,4 @@
 }
 
-
-// ----------------------------------------------------------------------------
-// Reading and writing resources (eg WIN.INI, .Xdefaults)
-// ----------------------------------------------------------------------------
-
-#if wxUSE_RESOURCES
-
-// Read $HOME for what it says is home, if not
-// read $USER or $LOGNAME for user name else determine
-// the Real User, then determine the Real home dir.
-static char * GetIniFile (char *dest, const char *filename)
-{
-    char *home = NULL;
-    if (filename && wxIsAbsolutePath(filename))
-    {
-        strcpy(dest, filename);
-    }
-    else if ((home = wxGetUserHome()) != NULL)
-    {
-        strcpy(dest, home);
-        if (dest[strlen(dest) - 1] != '/')
-            strcat (dest, "/");
-        if (filename == NULL)
-        {
-            if ((filename = getenv ("XENVIRONMENT")) == NULL)
-                filename = ".Xdefaults";
-        }
-        else if (*filename != '.')
-            strcat (dest, ".");
-        strcat (dest, filename);
-    } else
-    {
-        dest[0] = '\0';
-    }
-    return dest;
-}
-
-static char *GetResourcePath(char *buf, const char *name, bool create = false)
-{
-    if (create && wxFileExists (name) ) {
-        strcpy(buf, name);
-        return buf; // Exists so ...
-    }
-
-    if (*name == '/')
-        strcpy(buf, name);
-    else {
-        // Put in standard place for resource files if not absolute
-        strcpy (buf, DEFAULT_XRESOURCE_DIR);
-        strcat (buf, "/");
-        strcat (buf, wxFileNameFromPath (name).c_str());
-    }
-
-    if (create) {
-        // Touch the file to create it
-        FILE *fd = fopen (buf, "w");
-        if (fd) fclose (fd);
-    }
-    return buf;
-}
-
-/*
-* We have a cache for writing different resource files,
-* which will only get flushed when we call wxFlushResources().
-* Build up a list of resource databases waiting to be written.
-*
-*/
-
-wxList wxResourceCache (wxKEY_STRING);
-
-void
-wxFlushResources (void)
-{
-    char nameBuffer[512];
-
-    wxNode *node = wxResourceCache.First ();
-    while (node)
-    {
-        const char *file = node->GetKeyString();
-        // If file doesn't exist, create it first.
-        (void)GetResourcePath(nameBuffer, file, true);
-
-        XrmDatabase database = (XrmDatabase) node->Data ();
-        XrmPutFileDatabase (database, nameBuffer);
-        XrmDestroyDatabase (database);
-        wxNode *next = node->Next ();
-        delete node;
-        node = next;
-    }
-}
-
-static XrmDatabase wxResourceDatabase = 0;
-
-void wxXMergeDatabases (wxApp * theApp, Display * display);
-
-bool wxWriteResource(const wxString& section, const wxString& entry, const wxString& value, const wxString& file)
-{
-    char buffer[500];
-
-    (void) GetIniFile (buffer, file);
-
-    XrmDatabase database;
-    wxNode *node = wxResourceCache.Find (buffer);
-    if (node)
-        database = (XrmDatabase) node->Data ();
-    else
-    {
-        database = XrmGetFileDatabase (buffer);
-        wxResourceCache.Append (buffer, (wxObject *) database);
-    }
-
-    char resName[300];
-    strcpy (resName, section.c_str());
-    strcat (resName, ".");
-    strcat (resName, entry.c_str());
-
-    XrmPutStringResource (&database, resName, value);
-    return true;
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, float value, const wxString& file)
-{
-    char buf[50];
-    sprintf(buf, "%.4f", value);
-    return wxWriteResource(section, entry, buf, file);
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, long value, const wxString& file)
-{
-    char buf[50];
-    sprintf(buf, "%ld", value);
-    return wxWriteResource(section, entry, buf, file);
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, int value, const wxString& file)
-{
-    char buf[50];
-    sprintf(buf, "%d", value);
-    return wxWriteResource(section, entry, buf, file);
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, char **value, const wxString& file)
-{
-    if (!wxResourceDatabase)
-    {
-        Display *display = wxGlobalDisplay();
-        wxXMergeDatabases (wxTheApp, display);
-    }
-
-    XrmDatabase database;
-
-    if (!file.empty())
-    {
-        char buffer[500];
-
-        // Is this right? Trying to get it to look in the user's
-        // home directory instead of current directory -- JACS
-        (void) GetIniFile (buffer, file);
-
-        wxNode *node = wxResourceCache.Find (buffer);
-        if (node)
-            database = (XrmDatabase) node->Data ();
-        else
-        {
-            database = XrmGetFileDatabase (buffer);
-            wxResourceCache.Append (buffer, (wxObject *) database);
-        }
-    }
-    else
-        database = wxResourceDatabase;
-
-    XrmValue xvalue;
-    char *str_type[20];
-    char buf[150];
-    strcpy (buf, section);
-    strcat (buf, ".");
-    strcat (buf, entry);
-
-    Bool success = XrmGetResource (database, buf, "*", str_type,
-        &xvalue);
-    // Try different combinations of upper/lower case, just in case...
-    if (!success)
-    {
-        buf[0] = (isupper (buf[0]) ? tolower (buf[0]) : toupper (buf[0]));
-        success = XrmGetResource (database, buf, "*", str_type,
-            &xvalue);
-    }
-    if (success)
-    {
-        if (*value)
-            delete[] *value;
-
-        *value = new char[xvalue.size + 1];
-        strncpy (*value, xvalue.addr, (int) xvalue.size);
-        return true;
-    }
-    return false;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, float *value, const wxString& file)
-{
-    char *s = NULL;
-    bool succ = wxGetResource(section, entry, (char **)&s, file);
-    if (succ)
-    {
-        *value = (float)strtod(s, NULL);
-        delete[] s;
-        return true;
-    }
-    else return false;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, long *value, const wxString& file)
-{
-    char *s = NULL;
-    bool succ = wxGetResource(section, entry, (char **)&s, file);
-    if (succ)
-    {
-        *value = strtol(s, NULL, 10);
-        delete[] s;
-        return true;
-    }
-    else return false;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, int *value, const wxString& file)
-{
-    char *s = NULL;
-    bool succ = wxGetResource(section, entry, (char **)&s, file);
-    if (succ)
-    {
-        // Handle True, False here
-        // True, Yes, Enables, Set or  Activated
-        if (*s == 'T' || *s == 'Y' || *s == 'E' || *s == 'S' || *s == 'A')
-            *value = true;
-        // False, No, Disabled, Reset, Cleared, Deactivated
-        else if (*s == 'F' || *s == 'N' || *s == 'D' || *s == 'R' || *s == 'C')
-            *value = false;
-        // Handle as Integer
-        else
-            *value = (int) strtol (s, NULL, 10);
-        delete[] s;
-        return true;
-    }
-    else
-        return false;
-}
-
-void wxXMergeDatabases (wxApp * theApp, Display * display)
-{
-    XrmDatabase homeDB, serverDB, applicationDB;
-    char filenamebuf[1024];
-
-    char *filename = &filenamebuf[0];
-    char *environment;
-    wxString classname = theApp->GetClassName();
-    char name[256];
-    (void) strcpy (name, "/usr/lib/X11/app-defaults/");
-    (void) strcat (name, classname.c_str());
-
-    /* Get application defaults file, if any */
-    applicationDB = XrmGetFileDatabase (name);
-    (void) XrmMergeDatabases (applicationDB, &wxResourceDatabase);
-
-    /* Merge server defaults, created by xrdb, loaded as a property of the root
-    * window when the server initializes and loaded into the display
-    * structure on XOpenDisplay;
-    * if not defined, use .Xdefaults
-    */
-
-    if (XResourceManagerString (display) != NULL)
-    {
-        serverDB = XrmGetStringDatabase (XResourceManagerString (display));
-    }
-    else
-    {
-        (void) GetIniFile (filename, NULL);
-        serverDB = XrmGetFileDatabase (filename);
-    }
-    XrmMergeDatabases (serverDB, &wxResourceDatabase);
-
-    /* Open XENVIRONMENT file, or if not defined, the .Xdefaults,
-    * and merge into existing database
-    */
-
-    if ((environment = getenv ("XENVIRONMENT")) == NULL)
-    {
-        size_t len;
-        environment = GetIniFile (filename, NULL);
-        len = strlen (environment);
-        wxString hostname = wxGetHostName();
-        if ( !hostname.empty() )
-            strncat(environment, hostname, 1024 - len);
-    }
-    homeDB = XrmGetFileDatabase (environment);
-    XrmMergeDatabases (homeDB, &wxResourceDatabase);
-}
-
-#if 0
-
-/*
-* Not yet used but may be useful.
-*
-*/
-void
-wxSetDefaultResources (const Widget w, const char **resourceSpec, const char *name)
-{
-    int i;
-    Display *dpy = XtDisplay (w);    // Retrieve the display pointer
-
-    XrmDatabase rdb = NULL;    // A resource data base
-
-    // Create an empty resource database
-    rdb = XrmGetStringDatabase ("");
-
-    // Add the Component resources, prepending the name of the component
-
-    i = 0;
-    while (resourceSpec[i] != NULL)
-    {
-        char buf[1000];
-
-        sprintf (buf, "*%s%s", name, resourceSpec[i++]);
-        XrmPutLineResource (&rdb, buf);
-    }
-
-    // Merge them into the Xt database, with lowest precendence
-
-    if (rdb)
-    {
-#if (XlibSpecificationRelease>=5)
-        XrmDatabase db = XtDatabase (dpy);
-        XrmCombineDatabase (rdb, &db, False);
-#else
-        XrmMergeDatabases (dpy->db, &rdb);
-        dpy->db = rdb;
-#endif
-    }
-}
-#endif
-// 0
-
-#endif // wxUSE_RESOURCES
-
 // ----------------------------------------------------------------------------
 // display info
Index: src/msw/utilsgui.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/utilsgui.cpp,v
retrieving revision 1.15
diff -bu2 -r1.15 src/msw/utilsgui.cpp
--- src/msw/utilsgui.cpp
+++ src/msw/utilsgui.cpp
@@ -39,111 +39,4 @@
 // ============================================================================
 
-// ----------------------------------------------------------------------------
-// functions to work with .INI files
-// ----------------------------------------------------------------------------
-
-// Reading and writing resources (eg WIN.INI, .Xdefaults)
-#if wxUSE_RESOURCES
-bool wxWriteResource(const wxString& section, const wxString& entry, const wxString& value, const wxString& file)
-{
-  if (file != wxEmptyString)
-// Don't know what the correct cast should be, but it doesn't
-// compile in BC++/16-bit without this cast.
-#if !defined(__WIN32__)
-    return (WritePrivateProfileString((const char*) section, (const char*) entry, (const char*) value, (const char*) file) != 0);
-#else
-    return (WritePrivateProfileString((LPCTSTR)WXSTRINGCAST section, (LPCTSTR)WXSTRINGCAST entry, (LPCTSTR)value, (LPCTSTR)WXSTRINGCAST file) != 0);
-#endif
-  else
-    return (WriteProfileString((LPCTSTR)WXSTRINGCAST section, (LPCTSTR)WXSTRINGCAST entry, (LPCTSTR)WXSTRINGCAST value) != 0);
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, float value, const wxString& file)
-{
-    wxString buf;
-    buf.Printf(wxT("%.4f"), value);
-
-    return wxWriteResource(section, entry, buf, file);
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, long value, const wxString& file)
-{
-    wxString buf;
-    buf.Printf(wxT("%ld"), value);
-
-    return wxWriteResource(section, entry, buf, file);
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, int value, const wxString& file)
-{
-    wxString buf;
-    buf.Printf(wxT("%d"), value);
-
-    return wxWriteResource(section, entry, buf, file);
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, wxChar **value, const wxString& file)
-{
-    static const wxChar defunkt[] = wxT("$$default");
-
-    wxChar buf[1024];
-    if (file != wxEmptyString)
-    {
-        int n = GetPrivateProfileString(section, entry, defunkt,
-                                        buf, WXSIZEOF(buf), file);
-        if (n == 0 || wxStrcmp(buf, defunkt) == 0)
-            return false;
-    }
-    else
-    {
-        int n = GetProfileString(section, entry, defunkt, buf, WXSIZEOF(buf));
-        if (n == 0 || wxStrcmp(buf, defunkt) == 0)
-            return false;
-    }
-    if (*value) delete[] (*value);
-    *value = wxStrcpy(new wxChar[wxStrlen(buf) + 1], buf);
-    return true;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, float *value, const wxString& file)
-{
-    wxChar *s = NULL;
-    bool succ = wxGetResource(section, entry, (wxChar **)&s, file);
-    if (succ)
-    {
-        *value = (float)wxStrtod(s, NULL);
-        delete[] s;
-        return true;
-    }
-    else return false;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, long *value, const wxString& file)
-{
-    wxChar *s = NULL;
-    bool succ = wxGetResource(section, entry, (wxChar **)&s, file);
-    if (succ)
-    {
-        *value = wxStrtol(s, NULL, 10);
-        delete[] s;
-        return true;
-    }
-    else return false;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, int *value, const wxString& file)
-{
-    wxChar *s = NULL;
-    bool succ = wxGetResource(section, entry, (wxChar **)&s, file);
-    if (succ)
-    {
-        *value = (int)wxStrtol(s, NULL, 10);
-        delete[] s;
-        return true;
-    }
-    else return false;
-}
-#endif // wxUSE_RESOURCES
-
 // ---------------------------------------------------------------------------
 // helper functions for showing a "busy" cursor
Index: src/os2/utilsgui.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/utilsgui.cpp,v
retrieving revision 1.20
diff -bu2 -r1.20 src/os2/utilsgui.cpp
--- src/os2/utilsgui.cpp
+++ src/os2/utilsgui.cpp
@@ -58,188 +58,4 @@
 };
 
-// Reading and writing resources (eg WIN.INI, .Xdefaults)
-#if wxUSE_RESOURCES
-bool wxWriteResource( const wxString& rSection,
-                      const wxString& rEntry,
-                      const wxString& rValue,
-                      const wxString& rFile )
-{
-    HAB  hab = 0;
-    HINI hIni = 0;
-
-    if (!rFile.empty())
-    {
-        hIni = ::PrfOpenProfile(hab, (PSZ)WXSTRINGCAST rFile);
-        if (hIni != 0L)
-        {
-            return (::PrfWriteProfileString( hIni
-                                            ,(PSZ)WXSTRINGCAST rSection
-                                            ,(PSZ)WXSTRINGCAST rEntry
-                                            ,(PSZ)WXSTRINGCAST rValue
-                                           ));
-        }
-    }
-    else
-        return (::PrfWriteProfileString( HINI_PROFILE
-                                        ,(PSZ)WXSTRINGCAST rSection
-                                        ,(PSZ)WXSTRINGCAST rEntry
-                                        ,(PSZ)WXSTRINGCAST rValue
-                                       ));
-    return false;
-}
-
-bool wxWriteResource(
-  const wxString&                   rSection
-, const wxString&                   rEntry
-, float                             fValue
-, const wxString&                   rFile
-)
-{
-    wxChar                          zBuf[50];
-
-    wxSprintf(zBuf, "%.4f", fValue);
-    return wxWriteResource( rSection
-                           ,rEntry
-                           ,zBuf
-                           ,rFile
-                          );
-}
-
-bool wxWriteResource(
-  const wxString&                   rSection
-, const wxString&                   rEntry
-, long                              lValue
-, const wxString&                   rFile
-)
-{
-    wxChar                          zBuf[50];
-
-    wxSprintf(zBuf, "%ld", lValue);
-    return wxWriteResource( rSection
-                           ,rEntry
-                           ,zBuf
-                           ,rFile
-                          );
-}
-
-bool wxWriteResource( const wxString& rSection,
-                      const wxString& rEntry,
-                      int lValue,
-                      const wxString& rFile )
-{
-    wxChar zBuf[50];
-
-    wxSprintf(zBuf, "%d", lValue);
-    return wxWriteResource( rSection, rEntry, zBuf, rFile );
-}
-
-bool wxGetResource( const wxString& rSection,
-                    const wxString& rEntry,
-                    wxChar** ppValue,
-                    const wxString& rFile )
-{
-    HAB    hab = 0;
-    HINI   hIni = 0;
-    wxChar zDefunkt[] = _T("$$default");
-    char   zBuf[1000];
-
-    if (!rFile.empty())
-    {
-        hIni = ::PrfOpenProfile(hab, (PSZ)WXSTRINGCAST rFile);
-        if (hIni != 0L)
-        {
-            ULONG n = ::PrfQueryProfileString( hIni
-                                              ,(PSZ)WXSTRINGCAST rSection
-                                              ,(PSZ)WXSTRINGCAST rEntry
-                                              ,(PSZ)zDefunkt
-                                              ,(PVOID)zBuf
-                                              ,1000
-                                             );
-            if (zBuf == NULL)
-                return false;
-            if (n == 0L || wxStrcmp(zBuf, zDefunkt) == 0)
-                return false;
-            zBuf[n-1] = '\0';
-        }
-        else
-            return false;
-    }
-    else
-    {
-        ULONG n = ::PrfQueryProfileString( HINI_PROFILE
-                                          ,(PSZ)WXSTRINGCAST rSection
-                                          ,(PSZ)WXSTRINGCAST rEntry
-                                          ,(PSZ)zDefunkt
-                                          ,(PVOID)zBuf
-                                          ,1000
-                                         );
-        if (zBuf == NULL)
-            return false;
-        if (n == 0L || wxStrcmp(zBuf, zDefunkt) == 0)
-            return false;
-        zBuf[n-1] = '\0';
-    }
-    strcpy((char*)*ppValue, zBuf);
-    return true;
-}
-
-bool wxGetResource( const wxString& rSection,
-                    const wxString& rEntry,
-                    float* pValue,
-                    const wxString& rFile )
-{
-    wxChar* zStr = NULL;
-
-    zStr = new wxChar[1000];
-    bool bSucc = wxGetResource( rSection, rEntry, (wxChar **)&zStr, rFile );
-
-    if (bSucc)
-    {
-        *pValue = (float)wxStrtod(zStr, NULL);
-    }
-
-    delete[] zStr;
-    return bSucc;
-}
-
-bool wxGetResource( const wxString& rSection,
-                    const wxString& rEntry,
-                    long* pValue,
-                    const wxString& rFile )
-{
-    wxChar* zStr = NULL;
-
-    zStr = new wxChar[1000];
-    bool bSucc = wxGetResource( rSection, rEntry, (wxChar **)&zStr, rFile );
-
-    if (bSucc)
-    {
-        *pValue = wxStrtol(zStr, NULL, 10);
-    }
-
-    delete[] zStr;
-    return bSucc;
-}
-
-bool wxGetResource( const wxString& rSection,
-                    const wxString& rEntry,
-                    int* pValue,
-                    const wxString& rFile )
-{
-    wxChar* zStr = NULL;
-
-    zStr = new wxChar[1000];
-    bool bSucc = wxGetResource( rSection, rEntry, (wxChar **)&zStr, rFile );
-
-    if (bSucc)
-    {
-        *pValue = (int)wxStrtol(zStr, NULL, 10);
-    }
-
-    delete[] zStr;
-    return bSucc;
-}
-#endif // wxUSE_RESOURCES
-
 // ---------------------------------------------------------------------------
 // helper functions for showing a "busy" cursor
Index: src/palmos/utilsgui.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/palmos/utilsgui.cpp,v
retrieving revision 1.5
diff -bu2 -r1.5 src/palmos/utilsgui.cpp
--- src/palmos/utilsgui.cpp
+++ src/palmos/utilsgui.cpp
@@ -35,51 +35,4 @@
 // ============================================================================
 
-// ----------------------------------------------------------------------------
-// functions to work with .INI files
-// ----------------------------------------------------------------------------
-
-// Reading and writing resources (eg WIN.INI, .Xdefaults)
-#if wxUSE_RESOURCES
-bool wxWriteResource(const wxString& section, const wxString& entry, const wxString& value, const wxString& file)
-{
-    return false;
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, float value, const wxString& file)
-{
-    return false;
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, long value, const wxString& file)
-{
-    return false;
-}
-
-bool wxWriteResource(const wxString& section, const wxString& entry, int value, const wxString& file)
-{
-    return false;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, wxChar **value, const wxString& file)
-{
-    return false;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, float *value, const wxString& file)
-{
-    return false;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, long *value, const wxString& file)
-{
-    return false;
-}
-
-bool wxGetResource(const wxString& section, const wxString& entry, int *value, const wxString& file)
-{
-    return false;
-}
-#endif // wxUSE_RESOURCES
-
 // ---------------------------------------------------------------------------
 // helper functions for showing a "busy" cursor

 	  	 
