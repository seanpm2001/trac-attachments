Index: include/wx/valgen.h
===================================================================
--- include/wx/valgen.h	(revision 68129)
+++ include/wx/valgen.h	(working copy)
@@ -16,6 +16,7 @@
 #if wxUSE_VALIDATORS
 
 class WXDLLIMPEXP_FWD_BASE wxDateTime;
+class WXDLLIMPEXP_FWD_BASE wxFileName;
 
 // ----------------------------------------------------------------------------
 // wxGenericValidator performs data transfer between many standard controls and
@@ -42,6 +43,13 @@
         // wxDatePickerCtrl
     wxGenericValidator(wxDateTime* val);
 #endif // wxUSE_DATETIME
+        // wxTextCtrl
+    wxGenericValidator(wxFileName* val);    
+        // wxTextCtrl
+    wxGenericValidator(float* val);    
+        // wxTextCtrl
+    wxGenericValidator(double* val);    
+
     wxGenericValidator(const wxGenericValidator& copyFrom);
 
     virtual ~wxGenericValidator(){}
@@ -73,6 +81,9 @@
 #if wxUSE_DATETIME
     wxDateTime* m_pDateTime;
 #endif // wxUSE_DATETIME
+    wxFileName* m_pFileName;
+    float*      m_pFloat;
+    double*     m_pDouble;
 
 private:
     DECLARE_CLASS(wxGenericValidator)
Index: interface/wx/valgen.h
===================================================================
--- interface/wx/valgen.h	(revision 68129)
+++ interface/wx/valgen.h	(working copy)
@@ -96,8 +96,44 @@
             window).
     */
     wxGenericValidator(wxDateTime* valPtr);
+    /**
+        Constructor taking a wxFileName pointer. This will be used for
+        wxTextCtrl.
 
+        @param valPtr
+            A pointer to a variable that contains the value. This variable
+            should have a lifetime equal to or longer than the validator
+            lifetime (which is usually determined by the lifetime of the
+            window).            
+        @since 2.9.3
+    */
+    wxGenericValidator(wxFileName* valPtr);
     /**
+        Constructor taking a float pointer. This will be used for
+        wxTextCtrl.
+
+        @param valPtr
+            A pointer to a variable that contains the value. This variable
+            should have a lifetime equal to or longer than the validator
+            lifetime (which is usually determined by the lifetime of the
+            window).
+        @since 2.9.3
+    */
+    wxGenericValidator(float* valPtr);
+    /**
+        Constructor taking a double pointer. This will be used for
+        wxTextCtrl.
+
+        @param valPtr
+            A pointer to a variable that contains the value. This variable
+            should have a lifetime equal to or longer than the validator
+            lifetime (which is usually determined by the lifetime of the
+            window).
+        @since 2.9.3
+    */
+    wxGenericValidator(double* valPtr);
+
+    /**
         Destructor.
     */
     virtual ~wxGenericValidator();
Index: src/common/valgen.cpp
===================================================================
--- src/common/valgen.cpp	(revision 68129)
+++ src/common/valgen.cpp	(working copy)
@@ -46,6 +46,7 @@
 #if wxUSE_TOGGLEBTN
     #include "wx/tglbtn.h"
 #endif
+#include "wx/filename.h"
 
 #include "wx/valgen.h"
 
@@ -83,6 +84,24 @@
     m_pDateTime = val;
 }
 
+wxGenericValidator::wxGenericValidator(wxFileName *val)
+{
+    Initialize();
+    m_pFileName = val;
+}
+
+wxGenericValidator::wxGenericValidator(float *val)
+{
+    Initialize();
+    m_pFloat = val;
+}
+
+wxGenericValidator::wxGenericValidator(double *val)
+{
+    Initialize();
+    m_pDouble = val;
+}
+
 #endif // wxUSE_DATETIME
 
 wxGenericValidator::wxGenericValidator(const wxGenericValidator& val)
@@ -321,6 +340,21 @@
             pControl->SetValue(str);
             return true;
         }
+        else if (m_pFileName)
+        {
+            pControl->SetValue(m_pFileName->GetFullPath());
+            return true;
+        }
+        else if (m_pFloat)
+        {
+            pControl->SetValue(wxString::Format(wxT("%g"), *m_pFloat));
+            return true;
+        }
+        else if (m_pDouble)
+        {
+            pControl->SetValue(wxString::Format(wxT("%g"), *m_pDouble));
+            return true;
+        }
     } else
 #endif
 
@@ -582,6 +616,21 @@
             *m_pInt = wxAtoi(pControl->GetValue());
             return true;
         }
+        else if (m_pFileName)
+        {
+            m_pFileName->Assign(pControl->GetValue());
+            return true;
+        }
+        else if (m_pFloat)
+        {
+            *m_pFloat = (float)wxAtof(pControl->GetValue());
+            return true;
+        }
+        else if (m_pDouble)
+        {
+            *m_pDouble = wxAtof(pControl->GetValue());
+            return true;
+        }
     } else
 #endif
 
@@ -645,13 +694,16 @@
 */
 void wxGenericValidator::Initialize()
 {
-    m_pBool = 0;
-    m_pInt = 0;
-    m_pString = 0;
-    m_pArrayInt = 0;
+    m_pBool = NULL;
+    m_pInt = NULL;
+    m_pString = NULL;
+    m_pArrayInt = NULL;
 #if wxUSE_DATETIME
-    m_pDateTime = 0;
+    m_pDateTime = NULL;
 #endif // wxUSE_DATETIME
+    m_pFileName = NULL;
+    m_pFloat = NULL;
+    m_pDouble = NULL;
 }
 
 #endif // wxUSE_VALIDATORS
