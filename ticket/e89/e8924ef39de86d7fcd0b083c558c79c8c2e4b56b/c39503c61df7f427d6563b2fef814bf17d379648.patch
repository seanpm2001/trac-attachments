Index: samples/aui/auidemo.cpp
===================================================================
--- samples/aui/auidemo.cpp	(revision 71932)
+++ samples/aui/auidemo.cpp	(working copy)
@@ -103,6 +103,8 @@
         ID_NotebookArtSimple,
         ID_NotebookAlignTop,
         ID_NotebookAlignBottom,
+        ID_NotebookNextTab,
+        ID_NotebookPreviousTab,
 
         ID_SampleItem,
 
@@ -157,6 +159,7 @@
     void OnExit(wxCommandEvent& evt);
     void OnAbout(wxCommandEvent& evt);
     void OnTabAlignment(wxCommandEvent &evt);
+    void OnTabAdvance(wxCommandEvent &evt);
 
     void OnGradient(wxCommandEvent& evt);
     void OnToolbarResizing(wxCommandEvent& evt);
@@ -610,6 +613,8 @@
     EVT_MENU(ID_NotebookArtSimple, MyFrame::OnNotebookFlag)
     EVT_MENU(ID_NotebookAlignTop,     MyFrame::OnTabAlignment)
     EVT_MENU(ID_NotebookAlignBottom,  MyFrame::OnTabAlignment)
+    EVT_MENU(ID_NotebookNextTab,      MyFrame::OnTabAdvance)
+    EVT_MENU(ID_NotebookPreviousTab,  MyFrame::OnTabAdvance)
     EVT_MENU(ID_NoGradient, MyFrame::OnGradient)
     EVT_MENU(ID_VerticalGradient, MyFrame::OnGradient)
     EVT_MENU(ID_HorizontalGradient, MyFrame::OnGradient)
@@ -735,6 +740,9 @@
     notebook_menu->AppendCheckItem(ID_NotebookScrollButtons, _("Scroll Buttons Visible"));
     notebook_menu->AppendCheckItem(ID_NotebookWindowList, _("Window List Button Visible"));
     notebook_menu->AppendCheckItem(ID_NotebookTabFixedWidth, _("Fixed-width Tabs"));
+    notebook_menu->AppendSeparator();
+    notebook_menu->AppendCheckItem(ID_NotebookNextTab, _("Next tab\tCtrl+TAB"));
+    notebook_menu->AppendCheckItem(ID_NotebookPreviousTab, _("Previous tab\tCtrl+Shift+TAB"));
 
     m_perspectives_menu = new wxMenu;
     m_perspectives_menu->Append(ID_CreatePerspective, _("Create Perspective"));
@@ -1534,6 +1542,22 @@
     }
 }
 
+void MyFrame::OnTabAdvance(wxCommandEvent &evt)
+{
+    size_t i, count;
+    wxAuiPaneInfoArray& all_panes = m_mgr.GetAllPanes();
+    for (i = 0, count = all_panes.GetCount(); i < count; ++i)
+    {
+        wxAuiPaneInfo& pane = all_panes.Item(i);
+        if (pane.window->IsKindOf(CLASSINFO(wxAuiNotebook)))
+        {
+            wxAuiNotebook* nb = (wxAuiNotebook*)pane.window;
+
+            nb->AdvanceSelection (evt.GetId() == ID_NotebookNextTab);
+        }
+    }
+}
+
 void MyFrame::OnExit(wxCommandEvent& WXUNUSED(event))
 {
     Close(true);
