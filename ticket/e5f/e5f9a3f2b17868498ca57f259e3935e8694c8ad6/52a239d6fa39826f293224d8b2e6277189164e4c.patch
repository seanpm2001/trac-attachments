diff --git a/include/wx/generic/grid.h b/include/wx/generic/grid.h
index 2e1fcb89a6..9b08a0600e 100644
--- a/include/wx/generic/grid.h
+++ b/include/wx/generic/grid.h
@@ -2164,7 +2164,7 @@ protected:
     void OnChar( wxKeyEvent& );
     void OnEraseBackground( wxEraseEvent& );
     void OnHideEditor( wxCommandEvent& );
-
+    void OnScroll(wxScrollWinEvent& evt);
 
     bool SetCurrentCell( const wxGridCellCoords& coords );
     bool SetCurrentCell( int row, int col )
diff --git a/src/generic/grid.cpp b/src/generic/grid.cpp
index f79ad3035a..08b1ed4962 100644
--- a/src/generic/grid.cpp
+++ b/src/generic/grid.cpp
@@ -2143,6 +2143,7 @@ wxBEGIN_EVENT_TABLE( wxGrid, wxScrolledWindow )
     EVT_CHAR ( wxGrid::OnChar )
     EVT_ERASE_BACKGROUND( wxGrid::OnEraseBackground )
     EVT_COMMAND(wxID_ANY, wxEVT_GRID_HIDE_EDITOR, wxGrid::OnHideEditor )
+    EVT_SCROLLWIN( wxGrid::OnScroll )
 wxEND_EVENT_TABLE()
 
 bool wxGrid::Create(wxWindow *parent, wxWindowID id,
@@ -5088,6 +5089,15 @@ void wxGrid::OnEraseBackground(wxEraseEvent&)
 {
 }
 
+void wxGrid::OnScroll(wxScrollWinEvent &evt)
+{
+    if ( GridLinesEnabled() ) {
+        RedrawGridLines();
+    }
+
+    evt.Skip();
+}
+
 void wxGrid::DoGridProcessTab(wxKeyboardState& kbdState)
 {
     const bool isForwardTab = !kbdState.ShiftDown();
@@ -5816,18 +5826,63 @@ wxGrid::DoDrawGridLines(wxDC& dc,
                         int topRow, int leftCol,
                         int bottomRow, int rightCol)
 {
+    wxBitmap bmp( right, bottom );
+    wxMemoryDC mem_dc;
+    mem_dc.SelectObject( bmp );
+    PrepareDC(mem_dc);
+
+    // horizontal grid line background
+    for ( int i = topRow; i < bottomRow; i++ )
+    {
+        int bot = GetRowBottom( i ) - 1;
+
+        if ( bot > bottom )
+            break;
+
+        if ( bot >= top )
+        {
+            const wxPen &pen = GetRowGridLinePen( i );
+            mem_dc.SetPen( wxPen(GetDefaultCellBackgroundColour(), pen.GetWidth(), wxPENSTYLE_SOLID) );
+            mem_dc.DrawLine( left, bot, right, bot );
+        }
+    }
+
+    // vertical grid line background
+    for ( int colPos = leftCol; colPos < rightCol; colPos++ )
+    {
+        int i = GetColAt( colPos );
+
+        int colRight = GetColRight( i );
+#if defined(__WXGTK__) || defined(__WXQT__)
+        if ( GetLayoutDirection() != wxLayout_RightToLeft )
+#endif
+            colRight--;
+
+        if ( colRight > right )
+            break;
+
+        if ( colRight >= left )
+        {
+            const wxPen &pen = GetColGridLinePen( i );
+            mem_dc.SetPen( wxPen(GetDefaultCellBackgroundColour(), pen.GetWidth(), wxPENSTYLE_SOLID) );
+            mem_dc.DrawLine( colRight, top, colRight, bottom );
+        }
+    }
+
     // horizontal grid lines
     for ( int i = topRow; i < bottomRow; i++ )
     {
-        int bot = GetRowBottom(i) - 1;
+        int bot = GetRowBottom( i ) - 1;
 
         if ( bot > bottom )
             break;
 
         if ( bot >= top )
         {
-            dc.SetPen( GetRowGridLinePen(i) );
-            dc.DrawLine( left, bot, right, bot );
+            const wxPen &pen = GetRowGridLinePen( i );
+            mem_dc.SetPen( pen );
+            mem_dc.DrawLine( left, bot, right, bot );
+            dc.Blit( left, bot, right - left, pen.GetWidth(), &mem_dc, left, bot );
         }
     }
 
@@ -5836,9 +5891,9 @@ wxGrid::DoDrawGridLines(wxDC& dc,
     {
         int i = GetColAt( colPos );
 
-        int colRight = GetColRight(i);
+        int colRight = GetColRight( i );
 #if defined(__WXGTK__) || defined(__WXQT__)
-        if (GetLayoutDirection() != wxLayout_RightToLeft)
+        if ( GetLayoutDirection() != wxLayout_RightToLeft )
 #endif
             colRight--;
 
@@ -5847,8 +5902,10 @@ wxGrid::DoDrawGridLines(wxDC& dc,
 
         if ( colRight >= left )
         {
-            dc.SetPen( GetColGridLinePen(i) );
-            dc.DrawLine( colRight, top, colRight, bottom );
+            const wxPen &pen = GetColGridLinePen( i );
+            mem_dc.SetPen( pen );
+            mem_dc.DrawLine( colRight, top, colRight, bottom );
+            dc.Blit( colRight, top, pen.GetWidth(), bottom - top, &mem_dc, colRight, top );
         }
     }
 }
