diff -ru wxWidgets.orig/src/common/string.cpp wxWidgets/src/common/string.cpp
--- wxWidgets.orig/src/common/string.cpp	2007-11-18 22:02:10.000000000 +0100
+++ wxWidgets/src/common/string.cpp	2007-12-12 02:17:29.000000000 +0100
@@ -1689,11 +1689,10 @@
 
 template <typename T, typename F>
 bool wxStringToIntType(const wxChar *start,
-                       T *val,
+                       T * pVal,
                        int base,
                        F func)
 {
-    wxCHECK_MSG( val, false, _T("NULL output pointer") );
     wxASSERT_MSG( !base || (base > 1 && base <= 36), _T("invalid base") );
 
 #ifndef __WXWINCE__
@@ -1701,70 +1700,72 @@
 #endif
 
     wxChar *end;
-    *val = (*func)(start, &end, base);
+    T val = (*func)(start, &end, base);
 
     // return true only if scan was stopped by the terminating NUL and if the
     // string was not empty to start with and no under/overflow occurred
-    return !*end && (end != start)
+    bool ok = (!*end) && (end != start)
 #ifndef __WXWINCE__
         && (errno != ERANGE)
 #endif
     ;
+    if (ok && pVal) *pVal = val;
+    return ok;
 }
 
-bool wxString::ToLong(long *val, int base) const
+bool wxString::ToLong(long *pVal, int base) const
 {
-    return wxStringToIntType(c_str(), val, base, wxStrtol);
+    return wxStringToIntType(c_str(), pVal, base, wxStrtol);
 }
 
-bool wxString::ToULong(unsigned long *val, int base) const
+bool wxString::ToULong(unsigned long *pVal, int base) const
 {
-    return wxStringToIntType(c_str(), val, base, wxStrtoul);
+    return wxStringToIntType(c_str(), pVal, base, wxStrtoul);
 }
 
-bool wxString::ToLongLong(wxLongLong_t *val, int base) const
+bool wxString::ToLongLong(wxLongLong_t *pVal, int base) const
 {
 #ifdef wxHAS_STRTOLL
-    return wxStringToIntType(c_str(), val, base, wxStrtoll);
+    return wxStringToIntType(c_str(), pVal, base, wxStrtoll);
 #else
     // TODO: implement this ourselves
-    wxUnusedVar(val);
+    wxUnusedVar(pVal);
     wxUnusedVar(base);
     return false;
 #endif // wxHAS_STRTOLL
 }
 
-bool wxString::ToULongLong(wxULongLong_t *val, int base) const
+bool wxString::ToULongLong(wxULongLong_t *pVal, int base) const
 {
 #ifdef wxHAS_STRTOLL
-    return wxStringToIntType(c_str(), val, base, wxStrtoull);
+    return wxStringToIntType(c_str(), pVal, base, wxStrtoull);
 #else
     // TODO: implement this ourselves
-    wxUnusedVar(val);
+    wxUnusedVar(pVal);
     wxUnusedVar(base);
     return false;
 #endif
 }
 
-bool wxString::ToDouble(double *val) const
+bool wxString::ToDouble(double *pVal) const
 {
-    wxCHECK_MSG( val, false, _T("NULL pointer in wxString::ToDouble") );
-
 #ifndef __WXWINCE__
     errno = 0;
 #endif
 
     const wxChar *start = c_str();
     wxChar *end;
-    *val = wxStrtod(start, &end);
+    double val = wxStrtod(start, &end);
 
     // return true only if scan was stopped by the terminating NUL and if the
     // string was not empty to start with and no under/overflow occurred
-    return !*end && (end != start)
+    bool ok = (!*end) && (end != start)
 #ifndef __WXWINCE__
         && (errno != ERANGE)
 #endif
     ;
+    if (ok && pVal) *pVal = val;
+    return ok;
 }
 
 // ---------------------------------------------------------------------------
diff -ru wxWidgets.orig/src/xrc/xmlres.cpp wxWidgets/src/xrc/xmlres.cpp
--- wxWidgets.orig/src/xrc/xmlres.cpp	2007-12-12 01:47:51.000000000 +0100
+++ wxWidgets/src/xrc/xmlres.cpp	2007-12-12 02:18:05.000000000 +0100
@@ -957,11 +957,10 @@
 
 long wxXmlResourceHandler::GetLong(const wxString& param, long defaultv)
 {
-    long value;
     wxString str1 = GetParamValue(param);
 
-    if (!str1.ToLong(&value))
-        value = defaultv;
+    long value = defaultv;
+    str1.ToLong(&value);
 
     return value;
 }
@@ -976,9 +975,8 @@
     str.Replace(wxT("."), wxLocale::GetInfo(wxLOCALE_DECIMAL_POINT,
                                             wxLOCALE_CAT_NUMBER));
 
-    double value;
-    if (!str.ToDouble(&value))
-        value = defaultv;
+    double value = defaultv;
+    str.ToDouble(&value);
 
     return wx_truncate_cast(float, value);
 }

 	  	 
