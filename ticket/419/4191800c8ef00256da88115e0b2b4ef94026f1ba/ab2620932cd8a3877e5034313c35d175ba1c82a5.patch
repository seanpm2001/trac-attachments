Index: src/common/string.cpp
===================================================================
--- src/common/string.cpp	(revision 50612)
+++ src/common/string.cpp	(working copy)
@@ -1444,61 +1444,62 @@
     #define DO_IF_NOT_WINCE(x)
 #endif
 
-#define WX_STRING_TO_INT_TYPE(val, base, func)                              \
-    wxCHECK_MSG( val, false, _T("NULL output pointer") );                   \
+#define WX_STRING_TO_INT_TYPE(base, func, T)                                \
     wxASSERT_MSG( !base || (base > 1 && base <= 36), _T("invalid base") );  \
                                                                             \
     DO_IF_NOT_WINCE( errno = 0; )                                           \
                                                                             \
     const wxStringCharType *start = wx_str();                               \
     wxStringCharType *end;                                                  \
-    *val = func(start, &end, base);                                         \
+    T val = func(start, &end, base);                                        \
                                                                             \
     /* return true only if scan was stopped by the terminating NUL and */   \
     /* if the string was not empty to start with and no under/overflow */   \
     /* occurred: */                                                         \
-    return !*end && (end != start)                                          \
-        DO_IF_NOT_WINCE( && (errno != ERANGE) )
+    bool ok = (!*end) && (end != start)                                     \
+        DO_IF_NOT_WINCE( && (errno != ERANGE) );                            \
+    if (ok && pVal) *pVal = val;                                            \
+    return ok;
 
-bool wxString::ToLong(long *val, int base) const
+bool wxString::ToLong(long *pVal, int base) const
 {
-    WX_STRING_TO_INT_TYPE(val, base, wxStrtol);
+    WX_STRING_TO_INT_TYPE(base, wxStrtol, long)
 }
 
-bool wxString::ToULong(unsigned long *val, int base) const
+bool wxString::ToULong(unsigned long *pVal, int base) const
 {
-    WX_STRING_TO_INT_TYPE(val, base, wxStrtoul);
+    WX_STRING_TO_INT_TYPE(base, wxStrtoul, unsigned long)
 }
 
-bool wxString::ToLongLong(wxLongLong_t *val, int base) const
+bool wxString::ToLongLong(wxLongLong_t *pVal, int base) const
 {
-    WX_STRING_TO_INT_TYPE(val, base, wxStrtoll);
+    WX_STRING_TO_INT_TYPE(base, wxStrtoll, wxLongLong_t)
 }
 
-bool wxString::ToULongLong(wxULongLong_t *val, int base) const
+bool wxString::ToULongLong(wxULongLong_t *pVal, int base) const
 {
-    WX_STRING_TO_INT_TYPE(val, base, wxStrtoull);
+    WX_STRING_TO_INT_TYPE(base, wxStrtoull, wxULongLong_t)
 }
 
-bool wxString::ToDouble(double *val) const
+bool wxString::ToDouble(double *pVal) const
 {
-    wxCHECK_MSG( val, false, _T("NULL pointer in wxString::ToDouble") );
-
 #ifndef __WXWINCE__
     errno = 0;
 #endif
 
     const wxChar *start = c_str();
     wxChar *end;
-    *val = wxStrtod(start, &end);
+    double val = wxStrtod(start, &end);
 
     // return true only if scan was stopped by the terminating NUL and if the
     // string was not empty to start with and no under/overflow occurred
-    return !*end && (end != start)
+    bool ok = (!*end) && (end != start)
 #ifndef __WXWINCE__
         && (errno != ERANGE)
 #endif
     ;
+    if (ok && pVal) *pVal = val;
+    return ok;
 }
 
 // ---------------------------------------------------------------------------
Index: src/xrc/xmlres.cpp
===================================================================
--- src/xrc/xmlres.cpp	(revision 50612)
+++ src/xrc/xmlres.cpp	(working copy)
@@ -974,11 +974,10 @@
 
 long wxXmlResourceHandler::GetLong(const wxString& param, long defaultv)
 {
-    long value;
     wxString str1 = GetParamValue(param);
+    long value = defaultv;
 
-    if (!str1.ToLong(&value))
-        value = defaultv;
+    str1.ToLong(&value);
 
     return value;
 }
@@ -995,9 +994,8 @@
     str.Replace(wxT("."), wxLocale::GetInfo(wxLOCALE_DECIMAL_POINT,
                                             wxLOCALE_CAT_NUMBER));
 
-    double value;
-    if (!str.ToDouble(&value))
-        value = defaultv;
+    double value = defaultv;
+    str.ToDouble(&value);
 
     return wx_truncate_cast(float, value);
 }

 	  	 
