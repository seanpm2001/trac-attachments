Index: include/wx/msw/headerctrl.h
===================================================================
--- include/wx/msw/headerctrl.h	(revision 73321)
+++ include/wx/msw/headerctrl.h	(working copy)
@@ -127,6 +127,9 @@
     // the offset of the window used to emulate scrolling it
     int m_scrollOffset;
 
+    // actual column we are dragging
+    int m_dragging_idx;
+
     wxDECLARE_NO_COPY_CLASS(wxHeaderCtrl);
 };
 
Index: src/msw/headerctrl.cpp
===================================================================
--- src/msw/headerctrl.cpp	(revision 73321)
+++ src/msw/headerctrl.cpp	(working copy)
@@ -64,6 +64,7 @@
     m_numColumns = 0;
     m_imageList = NULL;
     m_scrollOffset = 0;
+    m_dragging_idx = -1;
 }
 
 bool wxHeaderCtrl::Create(wxWindow *parent,
@@ -525,6 +526,9 @@
         case HDN_ITEMCLICK:
         case HDN_ITEMDBLCLICK:
             evtType = GetClickEventType(code == HDN_ITEMDBLCLICK, nmhdr->iButton);
+
+            // clear column
+            m_dragging_idx = -1;
             break;
 
             // although we should get the notifications about the right clicks
@@ -622,8 +626,18 @@
             if ( nmhdr->iItem == -1 )
                 break;
 
+            // If we are dragging a column that is not draggable and the mouse 
+            // is moved over a different column then we get the column number from 
+            // the column under the mouse. This results in an unexpected behaviour
+            // if this column is draggable. To prevent this remember the column we 
+            // are dragging for the complete drag and drop cycle.
+            if ( m_dragging_idx == -1 )
+            {
+                m_dragging_idx = idx;
+            }
+
             // column must have the appropriate flag to be draggable
-            if ( !GetColumn(idx).IsReorderable() )
+            if ( !GetColumn(m_dragging_idx).IsReorderable() )
             {
                 veto = true;
                 break;
@@ -644,14 +658,19 @@
             order = MSWFromNativeOrder(order);
 
             evtType = wxEVT_COMMAND_HEADER_END_REORDER;
+
+            // clear column
+            m_dragging_idx = -1;
             break;
 
         case NM_RELEASEDCAPTURE:
             evtType = wxEVT_COMMAND_HEADER_DRAGGING_CANCELLED;
+
+            // clear column
+            m_dragging_idx = -1;
             break;
     }
 
-
     // do generate the corresponding wx event
     if ( evtType != wxEVT_NULL )
     {
