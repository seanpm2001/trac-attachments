Index: minimal.cpp
===================================================================
--- minimal.cpp	(revision 65780)
+++ minimal.cpp	(working copy)
@@ -67,8 +67,11 @@
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    void OnButton(wxCommandEvent& event);
 
 private:
+    wxButton *m_button;
+
     // any class wishing to process wxWidgets events must use this macro
     DECLARE_EVENT_TABLE()
 };
@@ -99,6 +102,7 @@
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_BUTTON(wxID_ANY, MyFrame::OnButton)
 END_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -145,6 +149,9 @@
 MyFrame::MyFrame(const wxString& title)
        : wxFrame(NULL, wxID_ANY, title)
 {
+    m_button = new wxButton(this, wxID_ANY, wxT("I wish I was enabled"));
+    m_button->Disable();
+
     // set the frame icon
     SetIcon(wxICON(sample));
 
@@ -172,6 +179,12 @@
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+
+    wxCommandEvent event(wxEVT_COMMAND_BUTTON_CLICKED, wxID_BACKWARD);
+    wxPostEvent(this, event); // will show modal dialog
+
+    event.SetId(wxID_FORWARD);
+    wxPostEvent(this, event); // will enable button
 }
 
 
@@ -198,3 +211,21 @@
                  wxOK | wxICON_INFORMATION,
                  this);
 }
+
+void MyFrame::OnButton(wxCommandEvent& event)
+{
+    switch (event.GetId())
+    {
+    case wxID_BACKWARD :
+    {
+        wxDialog *dlg = new wxDialog(this, wxID_ANY, wxString(wxT("Dialog")));
+        (void) new wxButton(dlg, wxID_CANCEL, wxT("Close"));
+        dlg->ShowModal();
+        break;
+    }
+
+    case wxID_FORWARD :
+        m_button->Enable();
+        break;
+    }
+}
