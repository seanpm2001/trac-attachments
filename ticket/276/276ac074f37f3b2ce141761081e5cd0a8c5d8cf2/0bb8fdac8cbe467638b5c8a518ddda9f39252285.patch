? wxWindows/wxgtkd-2.3-config
? wxWindows/lexer.c
? wxWindows/parser.c
? wxWindows/contrib/config.log
? wxWindows/contrib/config.status
? wxWindows/contrib/samples/Makefile
? wxWindows/contrib/samples/applet/Makefile
? wxWindows/contrib/samples/canvas/Makefile
? wxWindows/contrib/samples/canvas/simple/Makefile
? wxWindows/contrib/samples/canvas/test/Makefile
? wxWindows/contrib/samples/fl/Makefile
? wxWindows/contrib/samples/fl/fl_demo1/Makefile
? wxWindows/contrib/samples/fl/fl_demo2/Makefile
? wxWindows/contrib/samples/fl/fl_sample1/Makefile
? wxWindows/contrib/samples/fl/fl_sample2/Makefile
? wxWindows/contrib/samples/fl/fl_sample3/Makefile
? wxWindows/contrib/samples/gizmos/Makefile
? wxWindows/contrib/samples/gizmos/dynsash/Makefile
? wxWindows/contrib/samples/gizmos/dynsash_switch/Makefile
? wxWindows/contrib/samples/gizmos/editlbox/Makefile
? wxWindows/contrib/samples/gizmos/multicell/Makefile
? wxWindows/contrib/samples/gizmos/splittree/Makefile
? wxWindows/contrib/samples/mmedia/Makefile
? wxWindows/contrib/samples/ogl/Makefile
? wxWindows/contrib/samples/ogl/ogledit/Makefile
? wxWindows/contrib/samples/ogl/studio/Makefile
? wxWindows/contrib/samples/plot/Makefile
? wxWindows/contrib/samples/stc/Makefile
? wxWindows/contrib/samples/svg/Makefile
? wxWindows/contrib/samples/xrc/Makefile
? wxWindows/contrib/src/Makefile
? wxWindows/contrib/src/applet/Makefile
? wxWindows/contrib/src/canvas/Makefile
? wxWindows/contrib/src/fl/Makefile
? wxWindows/contrib/src/gizmos/Makefile
? wxWindows/contrib/src/mmedia/Makefile
? wxWindows/contrib/src/net/Makefile
? wxWindows/contrib/src/ogl/Makefile
? wxWindows/contrib/src/plot/Makefile
? wxWindows/contrib/src/stc/Makefile
? wxWindows/contrib/src/svg/Makefile
? wxWindows/contrib/src/xrc/Makefile
? wxWindows/contrib/utils/Makefile
? wxWindows/contrib/utils/convertrc/Makefile
? wxWindows/contrib/utils/wxrc/Makefile
? wxWindows/contrib/utils/wxrcedit/Makefile
? wxWindows/demos/config.log
? wxWindows/demos/config.status
? wxWindows/demos/Makefile
? wxWindows/demos/bombs/Makefile
? wxWindows/demos/dbbrowse/Makefile
? wxWindows/demos/forty/Makefile
? wxWindows/demos/fractal/Makefile
? wxWindows/demos/life/Makefile
? wxWindows/demos/poem/Makefile
? wxWindows/lib/wx
? wxWindows/lib/libwx_gtkd-2.3.so.2.0.0
? wxWindows/lib/libwx_gtkd_gl-2.3.so.2.0.0
? wxWindows/samples/config.log
? wxWindows/samples/Makefile
? wxWindows/samples/config.status
? wxWindows/samples/artprov/Makefile
? wxWindows/samples/calendar/Makefile
? wxWindows/samples/caret/Makefile
? wxWindows/samples/checklst/Makefile
? wxWindows/samples/config/Makefile
? wxWindows/samples/console/Makefile
? wxWindows/samples/controls/Makefile
? wxWindows/samples/controls/controls.d
? wxWindows/samples/controls/controls
? wxWindows/samples/db/Makefile
? wxWindows/samples/dialogs/Makefile
? wxWindows/samples/dialup/Makefile
? wxWindows/samples/dnd/Makefile
? wxWindows/samples/docview/Makefile
? wxWindows/samples/docvwmdi/Makefile
? wxWindows/samples/dragimag/Makefile
? wxWindows/samples/drawing/Makefile
? wxWindows/samples/dynamic/Makefile
? wxWindows/samples/erase/Makefile
? wxWindows/samples/event/Makefile
? wxWindows/samples/exec/Makefile
? wxWindows/samples/font/Makefile
? wxWindows/samples/grid/Makefile
? wxWindows/samples/help/Makefile
? wxWindows/samples/html/Makefile
? wxWindows/samples/html/about/Makefile
? wxWindows/samples/html/help/Makefile
? wxWindows/samples/html/helpview/Makefile
? wxWindows/samples/html/printing/Makefile
? wxWindows/samples/html/test/Makefile
? wxWindows/samples/html/virtual/Makefile
? wxWindows/samples/html/widget/Makefile
? wxWindows/samples/html/zip/Makefile
? wxWindows/samples/image/Makefile
? wxWindows/samples/internat/Makefile
? wxWindows/samples/ipc/Makefile
? wxWindows/samples/joytest/Makefile
? wxWindows/samples/keyboard/Makefile
? wxWindows/samples/layout/Makefile
? wxWindows/samples/listctrl/Makefile
? wxWindows/samples/mdi/Makefile
? wxWindows/samples/memcheck/Makefile
? wxWindows/samples/menu/Makefile
? wxWindows/samples/minifram/Makefile
? wxWindows/samples/minimal/Makefile
? wxWindows/samples/mobile/Makefile
? wxWindows/samples/mobile/styles/Makefile
? wxWindows/samples/mobile/wxedit/Makefile
? wxWindows/samples/newgrid/Makefile
? wxWindows/samples/notebook/Makefile
? wxWindows/samples/opengl/Makefile
? wxWindows/samples/opengl/cube/Makefile
? wxWindows/samples/opengl/isosurf/Makefile
? wxWindows/samples/opengl/penguin/Makefile
? wxWindows/samples/png/Makefile
? wxWindows/samples/printing/Makefile
? wxWindows/samples/proplist/Makefile
? wxWindows/samples/propsize/Makefile
? wxWindows/samples/resource/Makefile
? wxWindows/samples/rotate/Makefile
? wxWindows/samples/sashtest/Makefile
? wxWindows/samples/scroll/Makefile
? wxWindows/samples/scrollsub/Makefile
? wxWindows/samples/sockets/Makefile
? wxWindows/samples/splitter/Makefile
? wxWindows/samples/statbar/Makefile
? wxWindows/samples/taskbar/Makefile
? wxWindows/samples/text/Makefile
? wxWindows/samples/thread/Makefile
? wxWindows/samples/toolbar/Makefile
? wxWindows/samples/treectrl/Makefile
? wxWindows/samples/treelay/Makefile
? wxWindows/samples/typetest/Makefile
? wxWindows/samples/validate/Makefile
? wxWindows/samples/widgets/Makefile
? wxWindows/samples/wizard/Makefile
? wxWindows/utils/config.log
? wxWindows/utils/Makefile
? wxWindows/utils/config.status
? wxWindows/utils/HelpGen/Makefile
? wxWindows/utils/HelpGen/src/Makefile
? wxWindows/utils/dialoged/Makefile
? wxWindows/utils/emulator/Makefile
? wxWindows/utils/emulator/src/Makefile
? wxWindows/utils/helpview/Makefile
? wxWindows/utils/helpview/src/Makefile
? wxWindows/utils/hhp2cached/Makefile
? wxWindows/utils/makegen/Makefile
? wxWindows/utils/tex2rtf/Makefile
? wxWindows/utils/tex2rtf/src/Makefile
Index: wxWindows/include/wx/sizer.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/sizer.h,v
retrieving revision 1.24
diff -b -u -2 -r1.24 sizer.h
--- wxWindows/include/wx/sizer.h	31 Aug 2002 11:29:11 -0000	1.24
+++ wxWindows/include/wx/sizer.h	24 Sep 2002 20:31:31 -0000
@@ -81,4 +81,6 @@
     void SetBorder( int border )
         { m_border = border; }
+    void Show ( bool show )
+        { m_show = show; }
 
     wxWindow *GetWindow() const
@@ -96,4 +98,6 @@
     int GetBorder() const
         { return m_border; }
+    bool IsShown() const
+        { return m_show; }
     wxObject* GetUserData()
         { return m_userData; }
@@ -110,8 +114,13 @@
     int          m_border;
     int          m_flag;
+
+    // If TRUE, then this item is considered in the layout
+    // calculation.  Otherwise, it is skipped over. 
+    bool         m_show;
     // als: aspect ratio can always be calculated from m_size,
     //      but this would cause precision loss when the window
     //      is shrinked.  it is safer to preserve initial value.
     float        m_ratio;
+
     wxObject    *m_userData;
 
@@ -195,4 +204,16 @@
     void SetDimension( int x, int y, int width, int height );
 
+    // Manage whether individual windows or sub-sizers are considered
+    // in the layout calculations or not.
+    void Show( wxWindow *window, bool show = TRUE );
+    void Hide( wxWindow *window )
+        { Show (window, FALSE); }
+    void Show( wxSizer *sizer, bool show = TRUE );
+    void Hide( wxSizer *sizer )
+        { Show (sizer, FALSE); }
+
+    bool IsShown( wxWindow *window );
+    bool IsShown( wxSizer *sizer );
+    
 protected:
     wxSize  m_size;
Index: wxWindows/samples/controls/controls.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/samples/controls/controls.cpp,v
retrieving revision 1.199
diff -b -u -2 -r1.199 controls.cpp
--- wxWindows/samples/controls/controls.cpp	27 Aug 2002 20:26:56 -0000	1.199
+++ wxWindows/samples/controls/controls.cpp	24 Sep 2002 20:31:33 -0000
@@ -123,4 +123,6 @@
     void OnBmpButton(wxCommandEvent& event);
 
+    void OnSizerCheck (wxCommandEvent &event);
+
     wxListBox     *m_listbox,
                   *m_listboxSorted;
@@ -154,4 +156,12 @@
     wxStaticText  *m_label;
 
+    wxBoxSizer    *m_buttonSizer;
+    wxButton      *m_sizerBtn1;
+    wxButton      *m_sizerBtn2;
+    wxButton      *m_sizerBtn3;
+    wxButton      *m_sizerBtn4;
+    wxBoxSizer    *m_hsizer;
+    wxButton      *m_bigBtn;
+
 private:
     wxLog *m_logTargetOld;
@@ -404,4 +414,11 @@
 const int  ID_CHANGE_COLOUR     = 200;
 
+const int  ID_SIZER_CHECK1      = 201;
+const int  ID_SIZER_CHECK2      = 202;
+const int  ID_SIZER_CHECK3      = 203;
+const int  ID_SIZER_CHECK4      = 204;
+const int  ID_SIZER_CHECK14     = 205;
+const int  ID_SIZER_CHECKBIG    = 206;
+
 BEGIN_EVENT_TABLE(MyPanel, wxPanel)
 EVT_SIZE      (                         MyPanel::OnSize)
@@ -466,4 +483,12 @@
 EVT_BUTTON    (ID_BUTTON_TEST2,         MyPanel::OnTestButton)
 EVT_BUTTON    (ID_BITMAP_BTN,           MyPanel::OnBmpButton)
+
+EVT_CHECKBOX  (ID_SIZER_CHECK1,         MyPanel::OnSizerCheck)
+EVT_CHECKBOX  (ID_SIZER_CHECK2,         MyPanel::OnSizerCheck)
+EVT_CHECKBOX  (ID_SIZER_CHECK3,         MyPanel::OnSizerCheck)
+EVT_CHECKBOX  (ID_SIZER_CHECK4,         MyPanel::OnSizerCheck)
+EVT_CHECKBOX  (ID_SIZER_CHECK14,        MyPanel::OnSizerCheck)
+EVT_CHECKBOX  (ID_SIZER_CHECKBIG,       MyPanel::OnSizerCheck)
+
 END_EVENT_TABLE()
 
@@ -850,9 +875,51 @@
     panel->SetAutoLayout( TRUE );
 
-    wxBoxSizer *sizer = new wxBoxSizer( wxHORIZONTAL );
+    wxBoxSizer *sizer = new wxBoxSizer( wxVERTICAL );
+
+    wxStaticBoxSizer *csizer =
+      new wxStaticBoxSizer (new wxStaticBox (panel, -1, "Show Buttons"),
+			    wxHORIZONTAL );
+    
+    wxCheckBox *check1, *check2, *check3, *check4, *check14, *checkBig;
+    check1 = new wxCheckBox (panel, ID_SIZER_CHECK1, "1");
+    check1->SetValue (TRUE);
+    csizer->Add (check1);
+    check2 = new wxCheckBox (panel, ID_SIZER_CHECK2, "2");
+    check2->SetValue (TRUE);
+    csizer->Add (check2);
+    check3 = new wxCheckBox (panel, ID_SIZER_CHECK3, "3");
+    check3->SetValue (TRUE);
+    csizer->Add (check3);
+    check4 = new wxCheckBox (panel, ID_SIZER_CHECK4, "4");
+    check4->SetValue (TRUE);
+    csizer->Add (check4);
+    check14 = new wxCheckBox (panel, ID_SIZER_CHECK14, "1-4");
+    check14->SetValue (TRUE);
+    csizer->Add (check14);
+    checkBig = new wxCheckBox (panel, ID_SIZER_CHECKBIG, "Big");
+    checkBig->SetValue (TRUE);
+    csizer->Add (checkBig);
+    
+    sizer->Add (csizer);
+
+    m_hsizer = new wxBoxSizer( wxHORIZONTAL );
+
+    m_buttonSizer = new wxBoxSizer (wxVERTICAL);
+    
+    m_sizerBtn1 = new wxButton(panel, -1, "Test Button &1" );
+    m_buttonSizer->Add( m_sizerBtn1, 0, wxALL, 10 );
+    m_sizerBtn2 = new wxButton(panel, -1, "Test Button &2" );
+    m_buttonSizer->Add( m_sizerBtn2, 0, wxALL, 10 );
+    m_sizerBtn3 = new wxButton(panel, -1, "Test Button &3" );
+    m_buttonSizer->Add( m_sizerBtn3, 0, wxALL, 10 );
+    m_sizerBtn4 = new wxButton(panel, -1, "Test Button &4" );
+    m_buttonSizer->Add( m_sizerBtn4, 0, wxALL, 10 );
+
+    m_hsizer->Add (m_buttonSizer);
+    m_hsizer->Add( 20,20, 1 );
+    m_bigBtn = new wxButton(panel, -1, "Multiline\nbutton" );
+    m_hsizer->Add( m_bigBtn , 3, wxGROW|wxALL, 10 );
 
-    sizer->Add( new wxButton(panel, -1, "Test Button &1" ), 3, wxALL, 10 );
-    sizer->Add( 20,20, 1 );
-    sizer->Add( new wxButton(panel, -1, "Multiline\nbutton" ), 3, wxGROW|wxALL, 10 );
+    sizer->Add (m_hsizer, 1, wxGROW);
 
     panel->SetSizer( sizer );
@@ -1404,4 +1471,44 @@
 
 #endif // wxUSE_SPINBTN
+
+void MyPanel::OnSizerCheck( wxCommandEvent &event)
+{
+  switch (event.GetId ()) {
+  case ID_SIZER_CHECK1:
+    m_sizerBtn1->Show (event.IsChecked ());
+    m_buttonSizer->Show (m_sizerBtn1, event.IsChecked ());
+    m_buttonSizer->Layout ();
+    break;
+  case ID_SIZER_CHECK2:
+    m_sizerBtn2->Show (event.IsChecked ());
+    m_buttonSizer->Show (m_sizerBtn2, event.IsChecked ());
+    m_buttonSizer->Layout ();
+    break;
+  case ID_SIZER_CHECK3:
+    m_sizerBtn3->Show (event.IsChecked ());
+    m_buttonSizer->Show (m_sizerBtn3, event.IsChecked ());
+    m_buttonSizer->Layout ();
+    break;
+  case ID_SIZER_CHECK4:
+    m_sizerBtn4->Show (event.IsChecked ());
+    m_buttonSizer->Show (m_sizerBtn4, event.IsChecked ());
+    m_buttonSizer->Layout ();
+    break;
+  case ID_SIZER_CHECK14:
+    m_sizerBtn1->Show (event.IsChecked ());
+    m_sizerBtn2->Show (event.IsChecked ());
+    m_sizerBtn3->Show (event.IsChecked ());
+    m_sizerBtn4->Show (event.IsChecked ());
+    m_hsizer->Show (m_buttonSizer, event.IsChecked ());
+    m_hsizer->Layout ();
+    break;
+  case ID_SIZER_CHECKBIG:
+    m_bigBtn->Show (event.IsChecked ());
+    m_hsizer->Show (m_bigBtn, event.IsChecked ());
+    m_hsizer->Layout ();
+    break;
+  }
+
+}
 
 MyPanel::~MyPanel()
Index: wxWindows/src/common/sizer.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/common/sizer.cpp,v
retrieving revision 1.46
diff -b -u -2 -r1.46 sizer.cpp
--- wxWindows/src/common/sizer.cpp	29 Aug 2002 21:48:32 -0000	1.46
+++ wxWindows/src/common/sizer.cpp	24 Sep 2002 20:31:35 -0000
@@ -51,4 +51,5 @@
     m_border = border;
     m_flag = flag;
+    m_show = TRUE;		// Cannot be changed
     m_userData = userData;
 
@@ -70,4 +71,5 @@
     m_border = border;
     m_flag = flag;
+    m_show = TRUE;
     m_userData = userData;
 
@@ -89,4 +91,5 @@
     m_border = border;
     m_flag = flag;
+    m_show = TRUE;
     m_userData = userData;
 
@@ -637,4 +640,62 @@
 }
 
+void wxSizer::Show (wxWindow *window, bool show)
+{
+    wxNode *node = m_children.GetFirst();
+    while (node) {
+        wxSizerItem *item = (wxSizerItem*) node->Data();
+
+        if (item->IsWindow () && item->GetWindow () == window) {
+	  item->Show (show);
+	  return;
+	}
+	node = node->Next();
+    }
+}
+
+void wxSizer::Show (wxSizer *sizer, bool show)
+{
+    wxNode *node = m_children.GetFirst();
+    while (node) {
+        wxSizerItem *item = (wxSizerItem*) node->Data();
+
+	if (item->IsSizer () && item->GetSizer () == sizer) {
+	  item->Show (show);
+	  return;
+	}
+	node = node->Next();
+    }
+}
+
+bool wxSizer::IsShown (wxWindow *window)
+{
+    wxNode *node = m_children.GetFirst();
+    while (node) {
+        wxSizerItem *item = (wxSizerItem*) node->Data();
+	
+	if (item->IsWindow () && item->GetWindow () == window) {
+	  return item->IsShown ();
+	}
+	node = node->Next();
+    }
+
+    return FALSE;
+}
+
+bool wxSizer::IsShown (wxSizer *sizer)
+{
+    wxNode *node = m_children.GetFirst();
+    while (node) {
+        wxSizerItem *item = (wxSizerItem*) node->Data();
+
+	if (item->IsSizer () && item->GetSizer () == sizer) {
+	  return item->IsShown ();
+	}
+	node = node->Next();
+    }
+
+    return FALSE;
+}
+
 //---------------------------------------------------------------------------
 // wxGridSizer
@@ -979,4 +1040,5 @@
     {
         wxSizerItem *item = (wxSizerItem*) node->Data();
+	if (item->IsShown ()) {
 
         int weight = 1;
@@ -1036,4 +1098,5 @@
             pt.x += width;
         }
+	}
 
         node = node->Next();
@@ -1058,5 +1121,5 @@
     {
         wxSizerItem *item = (wxSizerItem*) node->Data();
-        if (item->GetOption() != 0)
+        if (item->IsShown () && item->GetOption() != 0)
         {
             int stretch = item->GetOption();
@@ -1078,5 +1141,5 @@
     {
         wxSizerItem *item = (wxSizerItem*) node->Data();
-
+	if (item->IsShown ()) {
         m_stretchable += item->GetOption();
 
@@ -1114,5 +1177,5 @@
             }
         }
-
+	}
         node = node->Next();
     }

 	  	 
