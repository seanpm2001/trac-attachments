Index: include/wx/os2/private.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/private.h,v
retrieving revision 1.41
diff -u -r1.41 private.h
--- include/wx/os2/private.h	2005/11/10 16:15:58	1.41
+++ include/wx/os2/private.h	2006/01/03 12:38:16
@@ -293,6 +293,7 @@
 // OS/2 convention of the mask is opposed to the wxWidgets one, so we need
 // to invert the mask each time we pass one/get one to/from Windows
 extern HBITMAP wxInvertMask(HBITMAP hbmpMask, int w = 0, int h = 0);
+extern HBITMAP wxFlipBmp(HBITMAP hbmp, int w = 0, int h = 0);

 // ---------------------------------------------------------------------------
 // global data
Index: src/os2/bitmap.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/bitmap.cpp,v
retrieving revision 1.53
diff -u -r1.53 bitmap.cpp
--- src/os2/bitmap.cpp	2005/09/23 12:55:28	1.53
+++ src/os2/bitmap.cpp	2006/01/03 12:39:26
@@ -1620,3 +1635,81 @@

     return hBmpInvMask;
 } // end of WxWinGdi_InvertMask
+
+HBITMAP wxFlipBmp( HBITMAP hBmp, int nWidth, int nHeight )
+{
+    wxCHECK_MSG( hBmp, 0, _T("invalid bitmap in wxFlipBmp") );
+
+    //
+    // Get width/height from the bitmap if not given
+    //
+    if (!nWidth || !nHeight)
+    {
+        BITMAPINFOHEADER2 vBmhdr;
+
+        vBmhdr.cbFix  = 16;
+        ::GpiQueryBitmapInfoHeader( hBmp,
+                                    &vBmhdr );
+        nWidth        = (int)vBmhdr.cx;
+        nHeight       = (int)vBmhdr.cy;
+    }
+
+    BITMAPINFOHEADER2 vBmih;
+    SIZEL             vSize     = {0, 0};
+    DEVOPENSTRUC      vDop      = {0L, "DISPLAY", NULL, 0L, 0L, 0L, 0L, 0L, 0L};
+    HDC               hDCSrc    = ::DevOpenDC(  vHabmain,
+                                                OD_MEMORY,
+                                                "*",
+                                                5L,
+                                                (PDEVOPENDATA)&vDop,
+                                                NULLHANDLE  );
+    HDC               hDCDst    = ::DevOpenDC(  vHabmain,
+                                                OD_MEMORY,
+                                                "*",
+                                                5L,
+                                                (PDEVOPENDATA)&vDop,
+                                                NULLHANDLE  );
+    HPS               hPSSrc    = ::GpiCreatePS(  vHabmain,
+                                                  hDCSrc,
+                                                  &vSize,
+                                                  PU_PELS | GPIA_ASSOC  );
+    HPS               hPSDst    = ::GpiCreatePS(  vHabmain,
+                                                  hDCDst,
+                                                  &vSize,
+                                                  PU_PELS | GPIA_ASSOC  );
+    POINTL            vPoint[4] = { {0,      nHeight},
+                                    {nWidth, 0},
+                                    {0,      0},
+                                    {nWidth, nHeight} };
+
+    memset(&vBmih, '\0', 16);
+    vBmih.cbFix     = 16;
+    vBmih.cx        = nWidth;
+    vBmih.cy        = nHeight;
+    vBmih.cPlanes   = 1;
+    vBmih.cBitCount = 24;
+
+    HBITMAP hInvBmp = ::GpiCreateBitmap(  hPSDst,
+                                          &vBmih,
+                                          0L,
+                                          NULL,
+                                          NULL  );
+
+    ::GpiSetBitmap(hPSSrc, (HBITMAP) hBmp);
+    ::GpiSetBitmap(hPSDst, (HBITMAP) hInvBmp);
+
+    ::GpiBitBlt(  hPSDst,
+                  hPSSrc,
+                  4L,
+                  vPoint,
+                  ROP_SRCCOPY,
+                  BBO_IGNORE  );
+
+    ::GpiDestroyPS(hPSSrc);
+    ::GpiDestroyPS(hPSDst);
+    ::DevCloseDC(hDCSrc);
+    ::DevCloseDC(hDCDst);
+
+    return hInvBmp;
+} // end of wxFlipBmp
+
Index: src/os2/notebook.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/notebook.cpp,v
retrieving revision 1.24
diff -u -r1.24 notebook.cpp
--- src/os2/notebook.cpp	2005/10/26 12:44:23	1.24
+++ src/os2/notebook.cpp	2006/01/03 12:39:49
@@ -318,7 +318,7 @@
     return (bool)::WinSendMsg( GetHWND()
                               ,BKM_SETTABBITMAP
                               ,MPFROMLONG((ULONG)m_alPageId[nPage])
-                              ,(MPARAM)vBitmap.GetHBITMAP()
+                              ,(MPARAM)wxFlipBmp(vBitmap.GetHBITMAP())
                              );
 } // end of wxNotebook::SetPageImage


 	  	 
