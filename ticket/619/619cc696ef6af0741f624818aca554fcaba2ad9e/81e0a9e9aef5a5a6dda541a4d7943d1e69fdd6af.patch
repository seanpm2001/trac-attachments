Index: include/wx/socket.h
===================================================================
--- include/wx/socket.h	(revision 49812)
+++ include/wx/socket.h	(working copy)
@@ -261,9 +261,15 @@
 
   bool WaitOnConnect(long seconds = -1, long milliseconds = 0);
 
+  // Sets initial socket buffer sizes using the SO_SNDBUF and SO_RCVBUF options before calling connect
+  void SetInitialSocketBuffers(int recv, int send) { m_initialRecvBufferSize = recv; m_initialSendBufferSize = send; }
+
 private:
   virtual bool DoConnect(wxSockAddress& addr, wxSockAddress* local, bool wait = true);
 
+  int m_initialRecvBufferSize;
+  int m_initialSendBufferSize;
+
   DECLARE_NO_COPY_CLASS(wxSocketClient)
 };
 
Index: include/wx/msw/gsockmsw.h
===================================================================
--- include/wx/msw/gsockmsw.h	(revision 49812)
+++ include/wx/msw/gsockmsw.h	(working copy)
@@ -78,6 +78,10 @@
     void *optval, int *optlen);
   GSocketError SetSockOpt(int level, int optname,
     const void *optval, int optlen);
+
+  // Sets initial socket buffer sizes using the SO_SNDBUF and SO_RCVBUF options before calling connect
+  void SetInitialSocketBuffers(int recv, int send) { m_initialRecvBufferSize = recv; m_initialSendBufferSize = send; }
+
 protected:
   GSocketError Input_Timeout();
   GSocketError Output_Timeout();
@@ -87,6 +91,8 @@
   int Send_Stream(const char *buffer, int size);
   int Send_Dgram(const char *buffer, int size);
   bool m_ok;
+  int m_initialRecvBufferSize;
+  int m_initialSendBufferSize;
 
 /* TODO: Make these protected */
 public:

Index: src/common/socket.cpp
===================================================================
--- src/common/socket.cpp	(revision 49812)
+++ src/common/socket.cpp	(working copy)
@@ -1291,6 +1291,10 @@
       m_socket->SetLocal(la);
   }
 
+#if defined(__WXMSW__) || defined(__WXGTK__)
+  m_socket->SetInitialSocketBuffers(m_initialRecvBufferSize, m_initialSendBufferSize);
+#endif
+
   m_socket->SetPeer(addr_man.GetAddress());
   err = m_socket->Connect(GSOCK_STREAMED);
 
Index: src/unix/gsocket.cpp
===================================================================
--- src/unix/gsocket.cpp	(revision 49812)
+++ src/unix/gsocket.cpp	(working copy)
@@ -536,6 +536,8 @@
   m_timeout             = 10*60*1000;
                                 /* 10 minutes * 60 sec * 1000 millisec */
   m_establishing        = false;
+  m_initialRecvBufferSize = -1;
+  m_initialSendBufferSize = -1;
 
   assert(gs_gui_functions);
   /* Per-socket GUI-specific initialization */
@@ -992,6 +994,11 @@
 #endif
   }
 
+  if (m_initialRecvBufferSize >= 0)
+    setsockopt(m_fd, SOL_SOCKET, SO_RCVBUF, (const char*)&m_initialRecvBufferSize, sizeof(m_initialRecvBufferSize));
+  if (m_initialSendBufferSize >= 0)
+    setsockopt(m_fd, SOL_SOCKET, SO_SNDBUF, (const char*)&m_initialSendBufferSize, sizeof(m_initialSendBufferSize));
+
   // If a local address has been set, then we need to bind to it before calling connect
   if (m_local && m_local->m_addr)
   {
Index: src/msw/gsocket.cpp
===================================================================
--- src/msw/gsocket.cpp	(revision 49812)
+++ src/msw/gsocket.cpp	(working copy)
@@ -177,6 +177,8 @@
   m_timeout.tv_usec = 0;
   m_establishing    = false;
   m_reusable        = false;
+  m_initialRecvBufferSize = -1;
+  m_initialSendBufferSize = -1;
 
   assert(gs_gui_functions);
   /* Per-socket GUI-specific initialization */
@@ -600,6 +602,11 @@
      setsockopt(m_fd, SOL_SOCKET, SO_REUSEADDR, (const char*)&arg, sizeof(arg));
   }
 
+  if (m_initialRecvBufferSize >= 0)
+    setsockopt(m_fd, SOL_SOCKET, SO_RCVBUF, (const char*)&m_initialRecvBufferSize, sizeof(m_initialRecvBufferSize));
+  if (m_initialSendBufferSize >= 0)
+    setsockopt(m_fd, SOL_SOCKET, SO_SNDBUF, (const char*)&m_initialSendBufferSize, sizeof(m_initialSendBufferSize));
+
   // If a local address has been set, then we need to bind to it before calling connect
   if (m_local && m_local->m_addr)
   {
Index: include/wx/unix/gsockunx.h
===================================================================
--- include/wx/unix/gsockunx.h	(revision 49812)
+++ include/wx/unix/gsockunx.h	(working copy)
@@ -68,6 +68,9 @@
         const void *optval, int optlen);
     virtual void Detected_Read();
     virtual void Detected_Write();
+    // Sets initial socket buffer sizes using the SO_SNDBUF and SO_RCVBUF options before calling connect
+    void SetInitialSocketBuffers(int recv, int send) { m_initialRecvBufferSize = recv; m_initialSendBufferSize = send; }
+
 protected:
     void Enable(GSocketEvent event);
     void Disable(GSocketEvent event);
@@ -78,6 +81,8 @@
     int Send_Stream(const char *buffer, int size);
     int Send_Dgram(const char *buffer, int size);
     bool m_ok;
+    int m_initialRecvBufferSize;
+    int m_initialSendBufferSize;
 public:
     /* DFE: We can't protect these data member until the GUI code is updated */
     /* protected: */

 	  	 
