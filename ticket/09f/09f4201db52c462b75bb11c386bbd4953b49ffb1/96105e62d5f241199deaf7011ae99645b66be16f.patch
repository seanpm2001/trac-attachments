Index: wxWidgets-trunk/include/wx/html/webkit.h
===================================================================
--- wxWidgets-trunk/include/wx/html/webkit.h	(revision 74846)
+++ wxWidgets-trunk/include/wx/html/webkit.h	(working copy)
@@ -196,9 +196,25 @@
     wxString m_targetName;
 };
 
+class WXDLLIMPEXP_CORE wxWebKitWebViewCloseEvent : public wxCommandEvent
+{
+    DECLARE_DYNAMIC_CLASS( wxWebKitWebViewCloseEvent )
+
+public:
+    bool IsCancelled() { return m_cancelled; }
+    void Cancel(bool cancel = true) { m_cancelled = cancel; }
+
+    wxWebKitWebViewCloseEvent( wxWindow* win = NULL );
+    wxEvent *Clone(void) const { return new wxWebKitWebViewCloseEvent(*this); }
+
+protected:
+    bool m_cancelled;
+};
+
 typedef void (wxEvtHandler::*wxWebKitStateChangedEventFunction)(wxWebKitStateChangedEvent&);
 typedef void (wxEvtHandler::*wxWebKitBeforeLoadEventFunction)(wxWebKitBeforeLoadEvent&);
 typedef void (wxEvtHandler::*wxWebKitNewWindowEventFunction)(wxWebKitNewWindowEvent&);
+typedef void (wxEvtHandler::*wxWebKitWebViewCloseEventFunction)(wxWebKitWebViewCloseEvent&);
 
 #define wxWebKitStateChangedEventHandler( func ) \
     wxEVENT_HANDLER_CAST( wxWebKitStateChangedEventFunction, func )
@@ -209,9 +225,13 @@
 #define wxWebKitNewWindowEventHandler( func ) \
     wxEVENT_HANDLER_CAST( wxWebKitNewWindowEventFunction, func )
 
+#define wxWebKitWebViewCloseEventHandler( func ) \
+    wxEVENT_HANDLER_CAST( wxWebKitWebViewCloseEventFunction, func )
+
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_WEBKIT_STATE_CHANGED, wxWebKitStateChangedEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_WEBKIT_BEFORE_LOAD, wxWebKitBeforeLoadEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_WEBKIT_NEW_WINDOW, wxWebKitNewWindowEvent );
+wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_WEBKIT_WEBVIEW_CLOSE, wxWebKitWebViewCloseEvent );
 
 #define EVT_WEBKIT_STATE_CHANGED(func) \
             wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_WEBKIT_STATE_CHANGED, \
@@ -231,7 +251,14 @@
             wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_WEBKIT_NEW_WINDOW, \
                             wxID_ANY, \
                             wxID_ANY, \
-                            wxWebKitNewWindowEventHandler( func ), \
+                            wxWebKitNewWindowEventFunction( func ), \
+                            NULL ),
+
+#define EVT_WEBKIT_WEBVIEW_CLOSE(func) \
+            wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_WEBKIT_WEBVIEW_CLOSE, \
+                            wxID_ANY, \
+                            wxID_ANY, \
+                            wxWebKitWebViewCloseEventHandler( func ), \
                             NULL ),
 #endif // wxUSE_WEBKIT
 
Index: wxWidgets-trunk/src/html/htmlctrl/webkit/webkit.mm
===================================================================
--- wxWidgets-trunk/src/html/htmlctrl/webkit/webkit.mm	(revision 74846)
+++ wxWidgets-trunk/src/html/htmlctrl/webkit/webkit.mm	(working copy)
@@ -329,6 +329,21 @@
 }
 
 
+IMPLEMENT_DYNAMIC_CLASS( wxWebKitWebViewCloseEvent, wxCommandEvent )
+
+wxDEFINE_EVENT( wxEVT_WEBKIT_WEBVIEW_CLOSE, wxWebKitWebViewCloseEvent );
+
+wxWebKitWebViewCloseEvent::wxWebKitWebViewCloseEvent( wxWindow* win )
+{
+    m_cancelled = false;
+    SetEventType( wxEVT_WEBKIT_WEBVIEW_CLOSE);
+    if ( win )
+    {
+        SetEventObject( win );
+        SetId(win->GetId());
+    }
+}
+
 
 //---------------------------------------------------------
 // helper functions for NSString<->wxString conversion
@@ -955,6 +970,36 @@
 
     webKitWindow->Print(true);
 }
+
+- (void)webView:(WebView *)sender runJavaScriptAlertPanelWithMessage:(NSString *)message initiatedByFrame:(WebFrame *)frame
+{
+    wxUnusedVar(sender);
+    wxUnusedVar(frame);
+
+    wxMessageBox(wxStringWithNSString(message), "JavaScript alert", wxOK | wxICON_EXCLAMATION);
+}
+
+- (BOOL)webView:(WebView *)sender runJavaScriptConfirmPanelWithMessage:(NSString *)message initiatedByFrame:(WebFrame *)frame
+{
+    wxUnusedVar(sender);
+    wxUnusedVar(frame);
+
+    int answer = wxMessageBox(wxStringWithNSString(message), "JavaScript confirmation", wxOK | wxCANCEL | wxICON_EXCLAMATION);
+    if (answer == wxOK)
+        return YES;
+    return NO;
+}
+
+- (void)webViewClose:(WebView *)sender
+{
+    wxWebKitWebViewCloseEvent thisEvent(webKitWindow);
+  
+    if (webKitWindow && webKitWindow->GetEventHandler())
+        webKitWindow->GetEventHandler()->ProcessEvent(thisEvent);
+
+    if (!thisEvent.IsCancelled())
+        [[sender window] close];
+}
 @end
 
 #endif //wxUSE_WEBKIT
