diff -Naur old/include/wx/gtk/clipbrd.h new/include/wx/gtk/clipbrd.h
--- old/include/wx/gtk/clipbrd.h	2005-09-20 17:03:40.000000000 +0200
+++ new/include/wx/gtk/clipbrd.h	2006-02-05 20:48:12.000000000 +0100
@@ -77,6 +77,8 @@
     bool              m_usePrimary;
     wxDataObject     *m_receivedData;
 
+    unsigned int       m_export_time;
+
 private:
     DECLARE_DYNAMIC_CLASS(wxClipboard)
 };
diff -Naur old/src/gtk/clipbrd.cpp new/src/gtk/clipbrd.cpp
--- old/src/gtk/clipbrd.cpp	2005-09-20 17:03:41.000000000 +0200
+++ new/src/gtk/clipbrd.cpp	2006-02-05 20:58:12.000000000 +0100
@@ -39,6 +39,7 @@
 
 GdkAtom  g_clipboardAtom   = 0;
 GdkAtom  g_targetsAtom     = 0;
+GdkAtom g_timestampAtom = 0;
 
 #if defined(__WXGTK20__) && wxUSE_UNICODE
 extern GdkAtom g_altTextAtom;
@@ -253,6 +254,21 @@
 
     if (!wxTheClipboard->m_data) return;
 
+    /* ICCCM says that TIMESTAMP is a required atom.
+     * In particular, it satisfies klipper (KDE clipboard manager), which polls TIMESTAMP
+     * to see if the clipboard's content has changed.
+     * It returns the time which was used to set data. */
+    if ( selection_data->target == g_timestampAtom )
+    {
+       gtk_selection_data_set(
+            selection_data,
+            GDK_SELECTION_TYPE_INTEGER,
+            32,
+            (guchar *)&(wxTheClipboard->m_export_time),
+            sizeof (wxTheClipboard->m_export_time));
+       return;
+    }
+
     wxDataObject *data = wxTheClipboard->m_data;
 
     wxDataFormat format( selection_data->target );
@@ -348,11 +364,14 @@
 
     if (!g_clipboardAtom) g_clipboardAtom = gdk_atom_intern( "CLIPBOARD", FALSE );
     if (!g_targetsAtom) g_targetsAtom = gdk_atom_intern ("TARGETS", FALSE);
+    if (!g_timestampAtom) g_timestampAtom = gdk_atom_intern ("TIMESTAMP", FALSE);
 
     m_formatSupported = FALSE;
     m_targetRequested = 0;
 
     m_usePrimary = FALSE;
+
+    m_export_time = 0;
 }
 
 wxClipboard::~wxClipboard()
@@ -404,6 +423,7 @@
 #endif
     }
 
+    m_export_time = gtk_get_current_event_time();
     m_targetRequested = 0;
     m_formatSupported = FALSE;
 }
@@ -488,6 +508,8 @@
     /* re-enable GUI threads */
 #endif
 
+    m_export_time = gtk_get_current_event_time();
+
     return res;
 }
 

 	  	 
