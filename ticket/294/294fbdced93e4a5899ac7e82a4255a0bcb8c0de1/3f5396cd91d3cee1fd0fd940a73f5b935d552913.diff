diff -Naur old/src/gtk/clipbrd.cpp new/src/gtk/clipbrd.cpp
--- old/src/gtk/clipbrd.cpp	2005-09-20 17:03:41.000000000 +0200
+++ new/src/gtk/clipbrd.cpp	2006-03-02 08:40:38.000000000 +0100
@@ -39,6 +39,7 @@
 
 GdkAtom  g_clipboardAtom   = 0;
 GdkAtom  g_targetsAtom     = 0;
+GdkAtom  g_timestampAtom   = 0;
 
 #if defined(__WXGTK20__) && wxUSE_UNICODE
 extern GdkAtom g_altTextAtom;
@@ -247,12 +248,28 @@
                    GtkSelectionData *selection_data,
                    guint WXUNUSED(info),
                    guint WXUNUSED(time),
-                   gpointer WXUNUSED(data) )
+                   gpointer signal_data )
 {
     if (!wxTheClipboard) return;
 
     if (!wxTheClipboard->m_data) return;
 
+    // ICCCM says that TIMESTAMP is a required atom.
+    // In particular, it satisfies klipper (KDE clipboard manager), which polls TIMESTAMP
+    // to see if the clipboard's content has changed.
+    // It returns the time which was used to set data.
+    if ( selection_data->target == g_timestampAtom )
+    {
+       int timestamp = GPOINTER_TO_UINT( signal_data );
+       gtk_selection_data_set(
+            selection_data,
+            GDK_SELECTION_TYPE_INTEGER,
+            32,
+            (guchar *)&(timestamp),
+            sizeof (timestamp));
+       return;
+    }
+
     wxDataObject *data = wxTheClipboard->m_data;
 
     wxDataFormat format( selection_data->target );
@@ -348,6 +365,7 @@
 
     if (!g_clipboardAtom) g_clipboardAtom = gdk_atom_intern( "CLIPBOARD", FALSE );
     if (!g_targetsAtom) g_targetsAtom = gdk_atom_intern ("TARGETS", FALSE);
+    if (!g_timestampAtom) g_timestampAtom = gdk_atom_intern ("TIMESTAMP", FALSE);
 
     m_formatSupported = FALSE;
     m_targetRequested = 0;
@@ -447,6 +465,11 @@
     GdkAtom clipboard = m_usePrimary ? (GdkAtom)GDK_SELECTION_PRIMARY
                                      : g_clipboardAtom;
 
+    // by default provide TIMESTAMP as a target
+    gtk_selection_add_target( GTK_WIDGET(m_clipboardWidget),
+                              clipboard,
+                              g_timestampAtom,
+                              0 );
 
     for (size_t i = 0; i < m_data->GetFormatCount(); i++)
     {
@@ -465,10 +488,11 @@
 
     delete[] array;
 
+    // listen to selection_get signals, store the timestamp in the signal data
     gtk_signal_connect( GTK_OBJECT(m_clipboardWidget),
                         "selection_get",
                         GTK_SIGNAL_FUNC(selection_handler),
-                        (gpointer) NULL );
+                        GUINT_TO_POINTER( gtk_get_current_event_time() ) );
 
 #if wxUSE_THREADS
     /* disable GUI threads */

 	  	 
