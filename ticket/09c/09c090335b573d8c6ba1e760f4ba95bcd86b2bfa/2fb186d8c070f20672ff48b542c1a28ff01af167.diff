--- src/common/fs_zip.cpp	2005-03-30 09:47:51.000000000 +0400
+++ src/common/fs_zip.cpp	2005-03-30 14:59:52.000000000 +0400
@@ -32,12 +32,27 @@
 #include "wx/fs_zip.h"
 
 
+//---------------------------------------------------------------------------
+// wxZipFSInputStream
+//---------------------------------------------------------------------------
+// Helper class for wxZipFSHandler
+
+class wxZipFSInputStream : public wxZipInputStream
+{
+    public:
+	wxZipFSInputStream(wxFSFile *file)
+		: wxZipInputStream(*file->GetStream())
+		{ m_file = file; }
+	virtual ~wxZipFSInputStream() { delete m_file; }
+
+    private:
+	wxFSFile *m_file;
+};
+
 //----------------------------------------------------------------------------
 // wxZipFSHandler
 //----------------------------------------------------------------------------
 
-
-
 wxZipFSHandler::wxZipFSHandler() : wxFileSystemHandler()
 {
     m_Archive = NULL;
@@ -70,24 +85,15 @@
 bool wxZipFSHandler::CanOpen(const wxString& location)
 {
     wxString p = GetProtocol(location);
-    return (p == wxT("zip")) &&
-           (GetProtocol(GetLeftLocation(location)) == wxT("file"));
+    return (p == wxT("zip"));
 }
 
 
-
-
-wxFSFile* wxZipFSHandler::OpenFile(wxFileSystem& WXUNUSED(fs), const wxString& location)
+wxFSFile* wxZipFSHandler::OpenFile(wxFileSystem& fs, const wxString& location)
 {
     wxString right = GetRightLocation(location);
     wxString left = GetLeftLocation(location);
-    wxInputStream *s;
-
-    if (!GetProtocol(left).IsSameAs(wxT("file")))
-    {
-        wxLogError(_("ZIP handler currently supports only local files!"));
-        return NULL;
-    }
+    wxZipInputStream *s;
 
     if (right.Contains(wxT("./")))
     {
@@ -99,12 +105,22 @@
 
     if (right.GetChar(0) == wxT('/')) right = right.Mid(1);
 
-    wxFileName leftFilename = wxFileSystem::URLToFileName(left);
-
-    s = new wxZipInputStream(leftFilename.GetFullPath(), right);
-    if (s && s->IsOk() )
-    {
-        return new wxFSFile(s,
+    wxFSFile *leftFile = fs.OpenFile(left);
+    if (!leftFile)
+	return NULL;
+
+    s = new wxZipFSInputStream(leftFile);
+    if (s && s->IsOk())
+    {
+	wxZipEntry *ent;
+	bool found = false;
+	while (!found && (ent = s->GetNextEntry())) {
+	    if (ent->GetInternalName() == right)
+		found = true;
+	    delete ent;
+	}
+	if (found)
+    	    return new wxFSFile(s,
                             left + wxT("#zip:") + right,
                             GetMimeTypeFromExt(location),
                             GetAnchor(location)
@@ -133,12 +149,6 @@
         m_Archive = NULL;
     }
 
-    if (!GetProtocol(left).IsSameAs(wxT("file")))
-    {
-        wxLogError(_("ZIP handler currently supports only local files!"));
-        return wxEmptyString;
-    }
-
     switch (flags)
     {
         case wxFILE:
@@ -150,13 +160,10 @@
     }
 
     m_ZipFile = left;
-    wxString nativename = wxFileSystem::URLToFileName(m_ZipFile).GetFullPath();
 
-    wxFFileInputStream *fs = new wxFFileInputStream(nativename);
-    if (fs->Ok())
-        m_Archive = new wxZipInputStream(*fs);
-    else
-        delete fs;
+    wxFSFile *leftFile = wxFileSystem().OpenFile(left);
+    if (leftFile)
+        m_Archive = new wxZipFSInputStream(leftFile);
 
     m_Pattern = right.AfterLast(wxT('/'));
     m_BaseDir = right.BeforeLast(wxT('/'));

 	  	 
