diff -ru wxWidgets.orig/include/wx/utils.h wxWidgets/include/wx/utils.h
--- wxWidgets.orig/include/wx/utils.h	2007-11-02 04:53:58.000000000 +0100
+++ wxWidgets/include/wx/utils.h	2007-11-08 12:34:44.000000000 +0100
@@ -87,6 +87,9 @@
 WXDLLIMPEXP_BASE void wxBell();
 #endif
 
+// Show wxWidgets information
+WXDLLIMPEXP_CORE void wxInfoMessageBox(wxWindow* parent);
+
 // Get OS description as a user-readable string
 WXDLLIMPEXP_BASE wxString wxGetOsDescription();
 
diff -ru wxWidgets.orig/samples/dialogs/dialogs.cpp wxWidgets/samples/dialogs/dialogs.cpp
--- wxWidgets.orig/samples/dialogs/dialogs.cpp	2007-11-02 04:54:12.000000000 +0100
+++ wxWidgets/samples/dialogs/dialogs.cpp	2007-11-08 12:34:48.000000000 +0100
@@ -116,7 +116,7 @@
 
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(DIALOGS_MESSAGE_BOX,                   MyFrame::MessageBox)
-
+    EVT_MENU(DIALOGS_MESSAGE_BOX_WXINFO,            MyFrame::MessageBoxInfo)
 #if wxUSE_COLOURDLG
     EVT_MENU(DIALOGS_CHOOSE_COLOUR,                 MyFrame::ChooseColour)
 #endif // wxUSE_COLOURDLG
@@ -371,6 +371,8 @@
        info_menu->Append(DIALOGS_LOG_DIALOG, _T("&Log dialog\tCtrl-L"));
     #endif // wxUSE_LOG_DIALOG
 
+    info_menu->Append(DIALOGS_MESSAGE_BOX_WXINFO,  _T("&wxWidgets information\tCtrl-I"));
+
     menuDlg->Append(wxID_ANY,_T("&Informative dialogs"),info_menu);
 
 #endif // wxUSE_STARTUP_TIPS || wxUSE_PROGRESSDLG || wxUSE_BUSYINFO || wxUSE_LOG_DIALOG
@@ -631,6 +633,11 @@
     }
 }
 
+void MyFrame::MessageBoxInfo(wxCommandEvent& WXUNUSED(event) )
+{
+    ::wxInfoMessageBox(NULL);
+}
+
 #if wxUSE_NUMBERDLG
 void MyFrame::NumericEntry(wxCommandEvent& WXUNUSED(event) )
 {
diff -ru wxWidgets.orig/samples/dialogs/dialogs.h wxWidgets/samples/dialogs/dialogs.h
--- wxWidgets.orig/samples/dialogs/dialogs.h	2007-11-02 04:54:12.000000000 +0100
+++ wxWidgets/samples/dialogs/dialogs.h	2007-11-08 12:27:13.000000000 +0100
@@ -116,7 +116,7 @@
 public:
     MyModelessDialog(wxWindow *parent);
 
-    void OnButton(wxCommandEvent& event);
+    void OnButton(wxCommandEvent&);
     void OnClose(wxCloseEvent& event);
 
 private:
@@ -129,7 +129,7 @@
 public:
     MyModalDialog(wxWindow *parent);
 
-    void OnButton(wxCommandEvent& event);
+    void OnButton(wxCommandEvent&);
 
 private:
     wxButton *m_btnModal,
@@ -146,7 +146,7 @@
 public:
     StdButtonSizerDialog(wxWindow *parent);
 
-    void OnEvent(wxCommandEvent& event);
+    void OnEvent(wxCommandEvent&);
 
 private:
     void EnableDisableControls();
@@ -207,102 +207,103 @@
 public:
     MyFrame(wxWindow *parent, const wxString& title);
 
-    void MessageBox(wxCommandEvent& event);
+    void MessageBox(wxCommandEvent&);
+    void MessageBoxInfo(wxCommandEvent&);
 
 #if wxUSE_COLOURDLG
-    void ChooseColour(wxCommandEvent& event);
+    void ChooseColour(wxCommandEvent&);
 #endif // wxUSE_COLOURDLG
 
 #if wxUSE_FONTDLG
-    void ChooseFont(wxCommandEvent& event);
+    void ChooseFont(wxCommandEvent&);
 #endif // wxUSE_FONTDLG
 
 #if wxUSE_LOG_DIALOG
-    void LogDialog(wxCommandEvent& event);
+    void LogDialog(wxCommandEvent&);
 #endif // wxUSE_LOG_DIALOG
 
 #if wxUSE_CHOICEDLG
-    void SingleChoice(wxCommandEvent& event);
-    void MultiChoice(wxCommandEvent& event);
+    void SingleChoice(wxCommandEvent&);
+    void MultiChoice(wxCommandEvent&);
 #endif // wxUSE_CHOICEDLG
 
 #if wxUSE_TEXTDLG
-    void TextEntry(wxCommandEvent& event);
-    void PasswordEntry(wxCommandEvent& event);
+    void TextEntry(wxCommandEvent&);
+    void PasswordEntry(wxCommandEvent&);
 #endif // wxUSE_TEXTDLG
 
 #if wxUSE_NUMBERDLG
-    void NumericEntry(wxCommandEvent& event);
+    void NumericEntry(wxCommandEvent&);
 #endif // wxUSE_NUMBERDLG
 
 #if wxUSE_FILEDLG
-    void FileOpen(wxCommandEvent& event);
-    void FileOpen2(wxCommandEvent& event);
-    void FilesOpen(wxCommandEvent& event);
-    void FileSave(wxCommandEvent& event);
+    void FileOpen(wxCommandEvent&);
+    void FileOpen2(wxCommandEvent&);
+    void FilesOpen(wxCommandEvent&);
+    void FileSave(wxCommandEvent&);
 #endif // wxUSE_FILEDLG
 
 #if USE_FILEDLG_GENERIC
-    void FileOpenGeneric(wxCommandEvent& event);
-    void FilesOpenGeneric(wxCommandEvent& event);
-    void FileSaveGeneric(wxCommandEvent& event);
+    void FileOpenGeneric(wxCommandEvent&);
+    void FilesOpenGeneric(wxCommandEvent&);
+    void FileSaveGeneric(wxCommandEvent&);
 #endif // USE_FILEDLG_GENERIC
 
 #if wxUSE_DIRDLG
-    void DirChoose(wxCommandEvent& event);
-    void DirChooseNew(wxCommandEvent& event);
+    void DirChoose(wxCommandEvent&);
+    void DirChooseNew(wxCommandEvent&);
 #endif // wxUSE_DIRDLG
 
 #if USE_DIRDLG_GENERIC
-    void GenericDirChoose(wxCommandEvent& event);
+    void GenericDirChoose(wxCommandEvent&);
 #endif // USE_DIRDLG_GENERIC
 
 #if wxUSE_STARTUP_TIPS
-    void ShowTip(wxCommandEvent& event);
+    void ShowTip(wxCommandEvent&);
 #endif // wxUSE_STARTUP_TIPS
 
 #if USE_MODAL_PRESENTATION
-    void ModalDlg(wxCommandEvent& event);
+    void ModalDlg(wxCommandEvent&);
 #endif // USE_MODAL_PRESENTATION
-    void ModelessDlg(wxCommandEvent& event);
-    void DlgCenteredScreen(wxCommandEvent& event);
-    void DlgCenteredParent(wxCommandEvent& event);
-    void MiniFrame(wxCommandEvent& event);
-    void DlgOnTop(wxCommandEvent& event);
+    void ModelessDlg(wxCommandEvent&);
+    void DlgCenteredScreen(wxCommandEvent&);
+    void DlgCenteredParent(wxCommandEvent&);
+    void MiniFrame(wxCommandEvent&);
+    void DlgOnTop(wxCommandEvent&);
 
 #if wxUSE_PROGRESSDLG
-    void ShowProgress(wxCommandEvent& event);
+    void ShowProgress(wxCommandEvent&);
 #endif // wxUSE_PROGRESSDLG
 
 #if wxUSE_ABOUTDLG
-    void ShowSimpleAboutDialog(wxCommandEvent& event);
-    void ShowFancyAboutDialog(wxCommandEvent& event);
-    void ShowFullAboutDialog(wxCommandEvent& event);
-    void ShowCustomAboutDialog(wxCommandEvent& event);
+    void ShowSimpleAboutDialog(wxCommandEvent&);
+    void ShowFancyAboutDialog(wxCommandEvent&);
+    void ShowFullAboutDialog(wxCommandEvent&);
+    void ShowCustomAboutDialog(wxCommandEvent&);
 #endif // wxUSE_ABOUTDLG
 
 #if wxUSE_BUSYINFO
-    void ShowBusyInfo(wxCommandEvent& event);
+    void ShowBusyInfo(wxCommandEvent&);
 #endif // wxUSE_BUSYINFO
 
 #if wxUSE_FINDREPLDLG
-    void ShowFindDialog(wxCommandEvent& event);
-    void ShowReplaceDialog(wxCommandEvent& event);
+    void ShowFindDialog(wxCommandEvent&);
+    void ShowReplaceDialog(wxCommandEvent&);
     void OnFindDialog(wxFindDialogEvent& event);
 #endif // wxUSE_FINDREPLDLG
 
 #if USE_COLOURDLG_GENERIC
-    void ChooseColourGeneric(wxCommandEvent& event);
+    void ChooseColourGeneric(wxCommandEvent&);
 #endif // USE_COLOURDLG_GENERIC
 
 #if USE_FONTDLG_GENERIC
-    void ChooseFontGeneric(wxCommandEvent& event);
+    void ChooseFontGeneric(wxCommandEvent&);
 #endif // USE_FONTDLG_GENERIC
 
-    void OnPropertySheet(wxCommandEvent& event);
-    void OnRequestUserAttention(wxCommandEvent& event);
-    void OnStandardButtonsSizerDialog(wxCommandEvent& event);
-    void OnExit(wxCommandEvent& event);
+    void OnPropertySheet(wxCommandEvent&);
+    void OnRequestUserAttention(wxCommandEvent&);
+    void OnStandardButtonsSizerDialog(wxCommandEvent&);
+    void OnExit(wxCommandEvent&);
 
 private:
 #if wxUSE_DIRDLG
@@ -345,6 +346,7 @@
     DIALOGS_CHOOSE_FONT,
     DIALOGS_CHOOSE_FONT_GENERIC,
     DIALOGS_MESSAGE_BOX,
+    DIALOGS_MESSAGE_BOX_WXINFO,
     DIALOGS_SINGLE_CHOICE,
     DIALOGS_MULTI_CHOICE,
     DIALOGS_TEXT_ENTRY,
diff -ru wxWidgets.orig/src/common/utilscmn.cpp wxWidgets/src/common/utilscmn.cpp
--- wxWidgets.orig/src/common/utilscmn.cpp	2007-11-02 04:54:02.000000000 +0100
+++ wxWidgets/src/common/utilscmn.cpp	2007-11-08 12:38:10.000000000 +0100
@@ -1547,4 +1547,43 @@
 }
 #endif // !wxGTK
 
+void wxInfoMessageBox(wxWindow* parent)
+{
+    // don't translate these strings, they're for diagnostics purposes only
+    wxString msg;
+    msg.Printf(_T("wxWidgets Library (%s port)\n")
+               _T("Version %d.%d.%d%s%s, compiled at %s %s\n")
+               _T("Runtime version of toolkit used is %d.%d.%s\n")
+               _T("Copyright (c) 1995-2007 wxWidgets team"),
+               wxPlatformInfo::Get().GetPortIdName().c_str(),
+               wxMAJOR_VERSION,
+               wxMINOR_VERSION,
+               wxRELEASE_NUMBER,
+#if wxUSE_UNICODE
+               L" (Unicode)",
+#else
+               wxEmptyString,
+#endif
+#ifdef __WXDEBUG__
+               _T(" Debug build"),
+#else
+               wxEmptyString,
+#endif
+               __TDATE__,
+               __TTIME__,
+               wxPlatformInfo::Get().GetToolkitMajorVersion(),
+               wxPlatformInfo::Get().GetToolkitMinorVersion(),
+#ifdef __WXGTK__
+               wxString::Format(_T("\nThe compile-time GTK+ version is %d.%d.%d."), GTK_MAJOR_VERSION, GTK_MINOR_VERSION, GTK_MICRO_VERSION).c_str()
+#else
+               wxEmptyString
+#endif
+               );
+#if wxUSE_MSGDLG
+    wxMessageBox(msg, _T("wxWidgets information"),
+                 wxICON_INFORMATION | wxOK,
+                 parent);
+#endif // wxUSE_MSGDLG
+}
+
 #endif // wxUSE_GUI
diff -ru wxWidgets.orig/src/common/wincmn.cpp wxWidgets/src/common/wincmn.cpp
--- wxWidgets.orig/src/common/wincmn.cpp	2007-11-02 04:54:02.000000000 +0100
+++ wxWidgets/src/common/wincmn.cpp	2007-11-08 12:35:36.000000000 +0100
@@ -2348,43 +2348,7 @@
             return;
         }
 #endif // __WXDEBUG__
-
-#if wxUSE_MSGDLG
-        // don't translate these strings, they're for diagnostics purposes only
-        wxString msg;
-        msg.Printf(_T("wxWidgets Library (%s port)\n")
-                   _T("Version %d.%d.%d%s%s, compiled at %s %s\n")
-                   _T("Runtime version of toolkit used is %d.%d.%s\n")
-                   _T("Copyright (c) 1995-2007 wxWidgets team"),
-                   wxPlatformInfo::Get().GetPortIdName().c_str(),
-                   wxMAJOR_VERSION,
-                   wxMINOR_VERSION,
-                   wxRELEASE_NUMBER,
-#if wxUSE_UNICODE
-                   L" (Unicode)",
-#else
-                   wxEmptyString,
-#endif
-#ifdef __WXDEBUG__
-                   _T(" Debug build"),
-#else
-                   wxEmptyString,
-#endif
-                   __TDATE__,
-                   __TTIME__,
-                   wxPlatformInfo::Get().GetToolkitMajorVersion(),
-                   wxPlatformInfo::Get().GetToolkitMinorVersion(),
-#ifdef __WXGTK__
-                   wxString::Format(_T("\nThe compile-time GTK+ version is %d.%d.%d."), GTK_MAJOR_VERSION, GTK_MINOR_VERSION, GTK_MICRO_VERSION).c_str()
-#else
-                   wxEmptyString
-#endif
-                   );
-
-        wxMessageBox(msg, _T("wxWidgets information"),
-                     wxICON_INFORMATION | wxOK,
-                     (wxWindow *)this);
-#endif // wxUSE_MSGDLG
+        ::wxInfoMessageBox((wxWindow*)this);
     }
     else
     {

 	  	 
