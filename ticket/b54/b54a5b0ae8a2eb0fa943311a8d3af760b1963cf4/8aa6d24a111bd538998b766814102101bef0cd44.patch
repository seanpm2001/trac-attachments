Index: docs/latex/wx/statusbr.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/docs/latex/wx/statusbr.tex,v
retrieving revision 1.21
diff -u -r1.21 statusbr.tex
--- docs/latex/wx/statusbr.tex	2004/02/20 17:04:39	1.21
+++ docs/latex/wx/statusbr.tex	2004/07/09 19:37:38
@@ -232,3 +232,28 @@
 
 \perlnote{In wxPerl this method takes as parameters the field widths.}
 
+\membersection{wxStatusBar::SetStatusStyles}\label{wxstatusbarsetstatusstyles}
+
+\func{virtual void}{SetStatusStyles}{\param{int}{ n}, \param{int *}{styles}}
+
+Sets the styles of the fields in the status line which can make fields appear flat
+or raised instead of the standard sunken 3D border.
+
+\wxheading{Parameters}
+
+\docparam{n}{The number of fields in the status bar. Must be equal to the
+number passed to \helpref{SetFieldsCount}{wxstatusbarsetfieldscount} the last
+time it was called.}
+
+\docparam{styles}{Contains an array of {\it n} integers with the styles for each field. There 
+are three possible styles:
+
+\twocolwidtha{5cm}
+\begin{twocollist}\itemsep=0pt
+\twocolitem{\windowstyle{wxSB\_NORMAL}}{(default) The field appears sunken with a standard 3D border.}
+\twocolitem{\windowstyle{wxSB\_FLAT}}{No border is painted around the field so that it appears flat.}
+\twocolitem{\windowstyle{wxSB\_RAISED}}{A raised 3D border is painted around the field.}
+\end{twocollist}
+
Index: include/wx/statusbr.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/statusbr.h,v
retrieving revision 1.20
diff -u -r1.20 statusbr.h
--- include/wx/statusbr.h	2004/05/23 20:50:25	1.20
+++ include/wx/statusbr.h	2004/07/09 19:38:06
@@ -26,6 +26,15 @@
 WX_DECLARE_LIST(wxString, wxListString);
 
 // ----------------------------------------------------------------------------
+// wxStatusBar constants
+// ----------------------------------------------------------------------------
+
+// style flags for fields
+#define wxSB_NORMAL    0x0000
+#define wxSB_FLAT      0x0001
+#define wxSB_RAISED    0x0002
+
+// ----------------------------------------------------------------------------
 // wxStatusBar: a window near the bottom of the frame used for status info
 // ----------------------------------------------------------------------------
 
@@ -64,6 +73,15 @@
     // -2 grows twice as much as one with width -1 &c)
     virtual void SetStatusWidths(int n, const int widths[]);
 
+    // field styles
+    // ------------
+
+    // Set the field style. Use either wxSB_NORMAL (default) for a standard 3D 
+    // border around a field, wxSB_FLAT for no border around a field, so that it 
+    // appears flat or wxSB_POPOUT to make the field appear raised.
+    // Setting field styles only works on wxMSW
+    virtual void SetStatusStyles(int n, const int styles[]);
+
     // geometry
     // --------
 
@@ -90,6 +108,11 @@
     // reset the widths
     void ReinitWidths() { FreeWidths(); InitWidths(); }
 
+    // same, for field styles
+    void InitStyles();
+    void FreeStyles();
+    void ReinitStyles() { FreeStyles(); InitStyles(); }
+
     // same, for text stacks
     void InitStacks();
     void FreeStacks();
@@ -108,6 +131,9 @@
     // the widths of the fields in pixels if !NULL, all fields have the same
     // width otherwise
     int       *m_statusWidths;
+
+    // the styles of the fields 
+    int       *m_statusStyles;
 
     // stacks of previous values for PushStatusText/PopStatusText
     // this is created on demand, use GetStatusStack/GetOrCreateStatusStack
Index: include/wx/msw/statbr95.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/msw/statbr95.h,v
retrieving revision 1.16
diff -u -r1.16 statbr95.h
--- include/wx/msw/statbr95.h	2004/05/23 20:51:29	1.16
+++ include/wx/msw/statbr95.h	2004/07/09 17:22:01
@@ -48,6 +48,9 @@
     // set status line fields' widths
     virtual void SetStatusWidths(int n, const int widths_field[]);
 
+    // set status line fields' styles
+    virtual void SetStatusStyles(int n, const int styles[]);
+
     // sets the minimal vertical size of the status bar
     virtual void SetMinHeight(int height);
 
Index: include/wx/univ/renderer.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/univ/renderer.h,v
retrieving revision 1.25
diff -u -r1.25 renderer.h
--- include/wx/univ/renderer.h	2004/05/23 20:51:46	1.25
+++ include/wx/univ/renderer.h	2004/07/09 19:19:36
@@ -288,7 +288,7 @@
     virtual void DrawStatusField(wxDC& dc,
                                  const wxRect& rect,
                                  const wxString& label,
-                                 int flags = 0) = 0;
+                                 int flags = 0, int style = 0) = 0;
 
     // draw complete frame/dialog titlebar
     virtual void DrawFrameTitleBar(wxDC& dc,
@@ -701,8 +701,8 @@
     virtual void DrawStatusField(wxDC& dc,
                                  const wxRect& rect,
                                  const wxString& label,
-                                 int flags = 0)
-        { m_renderer->DrawStatusField(dc, rect, label, flags); }
+                                 int flags = 0, inst style = 0)
+        { m_renderer->DrawStatusField(dc, rect, label, flags, style); }
 
     virtual void DrawFrameTitleBar(wxDC& dc,
                                    const wxRect& rect,
Index: src/common/statbar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/statbar.cpp,v
retrieving revision 1.11
diff -u -r1.11 statbar.cpp
--- src/common/statbar.cpp	2004/05/23 20:52:04	1.11
+++ src/common/statbar.cpp	2004/07/09 18:08:15
@@ -53,12 +53,14 @@
 
     InitWidths();
     InitStacks();
+    InitStyles();
 }
 
 wxStatusBarBase::~wxStatusBarBase()
 {
     FreeWidths();
     FreeStacks();
+    InitStyles();
 }
 
 // ----------------------------------------------------------------------------
@@ -76,6 +78,20 @@
 }
 
 // ----------------------------------------------------------------------------
+// styles array handling
+// ----------------------------------------------------------------------------
+
+void wxStatusBarBase::InitStyles()
+{
+    m_statusStyles = NULL;
+}
+
+void wxStatusBarBase::FreeStyles()
+{
+    delete [] m_statusStyles;
+}
+
+// ----------------------------------------------------------------------------
 // field widths
 // ----------------------------------------------------------------------------
 
@@ -145,6 +161,25 @@
     for ( int i = 0; i < m_nFields; i++ )
     {
         m_statusWidths[i] = widths[i];
+    }
+
+    // update the display after the widths changed
+    Refresh();
+}
+
+void wxStatusBarBase::SetStatusStyles(int WXUNUSED_UNLESS_DEBUG(n),
+                                      const int styles[])
+{
+    wxCHECK_RET( styles, _T("NULL pointer in SetStatusStyles") );
+
+    wxASSERT_MSG( n == m_nFields, _T("field number mismatch") );
+
+    if ( !m_statusStyles )
+        m_statusStyles = new int[m_nFields];
+
+    for ( int i = 0; i < m_nFields; i++ )
+    {
+        m_statusStyles[i] = styles[i];
     }
 
     // update the display after the widths changed
Index: src/generic/statusbr.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/generic/statusbr.cpp,v
retrieving revision 1.59
diff -u -r1.59 statusbr.cpp
--- src/generic/statusbr.cpp	2004/06/23 16:41:05	1.59
+++ src/generic/statusbr.cpp	2004/07/09 19:38:47
@@ -269,43 +269,52 @@
     wxRect rect;
     GetFieldRect(i, rect);
 
-    // Draw border
-    // Have grey background, plus 3-d border -
-    // One black rectangle.
-    // Inside this, left and top sides - dark grey. Bottom and right -
-    // white.
-
-    dc.SetPen(m_hilightPen);
-
-#ifndef __WXPM__
-
-    // Right and bottom white lines
-    dc.DrawLine(rect.x + rect.width, rect.y,
-                rect.x + rect.width, rect.y + rect.height);
-    dc.DrawLine(rect.x + rect.width, rect.y + rect.height,
-                rect.x, rect.y + rect.height);
-
-    dc.SetPen(m_mediumShadowPen);
-
-    // Left and top grey lines
-    dc.DrawLine(rect.x, rect.y + rect.height,
-           rect.x, rect.y);
-    dc.DrawLine(rect.x, rect.y,
-        rect.x + rect.width, rect.y);
-#else
-
-    dc.DrawLine(rect.x + rect.width, rect.height + 2,
-                rect.x, rect.height + 2);
-    dc.DrawLine(rect.x + rect.width, rect.y,
-                rect.x + rect.width, rect.y + rect.height);
-
-    dc.SetPen(m_mediumShadowPen);
-    dc.DrawLine(rect.x, rect.y,
-                rect.x + rect.width, rect.y);
-    dc.DrawLine(rect.x, rect.y + rect.height,
-                rect.x, rect.y);
+    int style = wxSB_NORMAL;
+    if (m_statusStyles)
+        style = m_statusStyles[i];
+
+    if (style != wxSB_FLAT)
+    {
+        // Draw border
+        // For wxSB_NORMAL:
+        // Have grey background, plus 3-d border -
+        // One black rectangle.
+        // Inside this, left and top sides - dark grey. Bottom and right -
+        // white.
+        // Reverse it for wxSB_RAISED
+
+        dc.SetPen((style == wxSB_RAISED) ? m_mediumShadowPen : m_hilightPen);
+
+    #ifndef __WXPM__
+
+        // Right and bottom lines
+        dc.DrawLine(rect.x + rect.width, rect.y,
+                    rect.x + rect.width, rect.y + rect.height);
+        dc.DrawLine(rect.x + rect.width, rect.y + rect.height,
+                    rect.x, rect.y + rect.height);
+
+        dc.SetPen((style == wxSB_RAISED) ? m_hilightPen : m_mediumShadowPen);
+
+        // Left and top lines
+        dc.DrawLine(rect.x, rect.y + rect.height,
+               rect.x, rect.y);
+        dc.DrawLine(rect.x, rect.y,
+            rect.x + rect.width, rect.y);
+    #else
+
+        dc.DrawLine(rect.x + rect.width, rect.height + 2,
+                    rect.x, rect.height + 2);
+        dc.DrawLine(rect.x + rect.width, rect.y,
+                    rect.x + rect.width, rect.y + rect.height);
+
+        dc.SetPen((style == wxSB_RAISED) ? m_hilightPen : m_mediumShadowPen);
+        dc.DrawLine(rect.x, rect.y,
+                    rect.x + rect.width, rect.y);
+        dc.DrawLine(rect.x, rect.y + rect.height,
+                   rect.x, rect.y);
 
 #endif
+    }
 
     DrawFieldText(dc, i);
 }
Index: src/msw/statbr95.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/statbr95.cpp,v
retrieving revision 1.54
diff -u -r1.54 statbr95.cpp
--- src/msw/statbr95.cpp	2004/07/01 10:46:38	1.54
+++ src/msw/statbr95.cpp	2004/07/09 19:38:59
@@ -177,8 +177,31 @@
     wxCHECK_RET( (nField >= 0) && (nField < m_nFields),
                  _T("invalid statusbar field index") );
 
-    if ( !StatusBar_SetText(GetHwnd(), nField, strText) )
+    // Get field style, if any
+    int style;
+    if (m_statusStyles)
     {
+        switch(m_statusStyles[nField])
+        {
+        case wxSB_RAISED:
+            style = SBT_POPOUT;
+            break;
+        case wxSB_FLAT:
+            style = SBT_NOBORDERS;
+            break;
+        case wxSB_NORMAL:
+        default:
+            style = 0;
+            break;
+        }
+    }
+    else
+        style = 0;
+
+    // Pass both field number and style. MSDN library doesn't mention
+    // that nField and style have to be 'ORed'
+    if ( !StatusBar_SetText(GetHwnd(), nField | style, strText) )
+    {
         wxLogLastError(wxT("StatusBar_SetText"));
     }
 }
@@ -264,6 +287,40 @@
         wxSizeEvent event(GetClientSize(), m_windowId);
         event.SetEventObject(this);
         GetEventHandler()->ProcessEvent(event);
+    }
+}
+
+void wxStatusBar95::SetStatusStyles(int n, const int styles[])
+{
+    wxStatusBarBase::SetStatusStyles(n, styles);
+
+    if (n != m_nFields)
+        return;
+
+    for (int i = 0; i < n; i++)
+    {
+        int style;
+        switch(styles[i])
+        {
+        case wxSB_RAISED:
+            style = SBT_POPOUT;
+            break;
+        case wxSB_FLAT:
+            style = SBT_NOBORDERS;
+            break;
+        case wxSB_NORMAL:
+        default:
+            style = 0;
+            break;
+        }
+        // The SB_SETTEXT message is both used to set the field's text as well as
+        // the fields' styles. MSDN library doesn't mention
+        // that nField and style have to be 'ORed'
+        wxString text = GetStatusText(i);
+        if (!StatusBar_SetText(GetHwnd(), style | i, text))
+        {
+            wxLogLastError(wxT("StatusBar_SetText"));
+        }
     }
 }
 
Index: src/univ/statusbr.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/univ/statusbr.cpp,v
retrieving revision 1.12
diff -u -r1.12 statusbr.cpp
--- src/univ/statusbr.cpp	2004/05/23 20:53:21	1.12
+++ src/univ/statusbr.cpp	2004/07/09 19:45:37
@@ -140,7 +140,12 @@
                 flags |= wxCONTROL_ISDEFAULT;
             }
 
-            m_renderer->DrawStatusField(dc, rect, m_statusText[n], flags);
+            int style;
+            if (m_statusStyles)
+                style = m_statusStyles[n];
+            else
+                style = wxSB_NORMAL;
+            m_renderer->DrawStatusField(dc, rect, m_statusText[n], flags, style);
         }
 
         rect.x += rect.width + borderBetweenFields;
Index: src/univ/themes/gtk.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/univ/themes/gtk.cpp,v
retrieving revision 1.40
diff -u -r1.40 gtk.cpp
--- src/univ/themes/gtk.cpp	2004/05/23 20:53:25	1.40
+++ src/univ/themes/gtk.cpp	2004/07/09 19:21:01
@@ -42,6 +42,7 @@
     #include "wx/slider.h"
     #include "wx/textctrl.h"
     #include "wx/toolbar.h"
+    #include "wx/statusbr.h"
 
     #include "wx/settings.h"
 #endif // WX_PRECOMP
@@ -228,7 +229,7 @@
     virtual void DrawStatusField(wxDC& dc,
                                  const wxRect& rect,
                                  const wxString& label,
-                                 int flags = 0);
+                                 int flags = 0, int style = 0);
 
     virtual void DrawFrameTitleBar(wxDC& dc,
                                    const wxRect& rect,
@@ -2236,7 +2237,7 @@
 void wxGTKRenderer::DrawStatusField(wxDC& WXUNUSED(dc),
                                     const wxRect& WXUNUSED(rect),
                                     const wxString& WXUNUSED(label),
-                                    int WXUNUSED(flags))
+                                    int WXUNUSED(flags), int WXUNUSED(style))
 {
 }
 
Index: src/univ/themes/win32.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/univ/themes/win32.cpp,v
retrieving revision 1.67
diff -u -r1.67 win32.cpp
--- src/univ/themes/win32.cpp	2004/05/30 15:14:41	1.67
+++ src/univ/themes/win32.cpp	2004/07/09 19:39:21
@@ -40,6 +40,7 @@
     #include "wx/textctrl.h"
     #include "wx/listbox.h"
     #include "wx/toolbar.h"
+    #include "wx/statusbr.h"
 
     #ifdef __WXMSW__
         // for COLOR_* constants
@@ -299,7 +300,7 @@
     virtual void DrawStatusField(wxDC& dc,
                                  const wxRect& rect,
                                  const wxString& label,
-                                 int flags = 0);
+                                 int flags = 0, int style = 0);
 
     // titlebars
     virtual void DrawFrameTitleBar(wxDC& dc,
@@ -3224,7 +3225,7 @@
 void wxWin32Renderer::DrawStatusField(wxDC& dc,
                                       const wxRect& rect,
                                       const wxString& label,
-                                      int flags)
+                                      int flags, int style /*=0*/)
 {
     wxRect rectIn;
 
@@ -3240,9 +3241,15 @@
                 y2 = rect.GetBottom();
 
         // draw the upper left part of the rect normally
-        dc.SetPen(m_penDarkGrey);
-        dc.DrawLine(rect.GetLeft(), rect.GetTop(), rect.GetLeft(), y2);
-        dc.DrawLine(rect.GetLeft() + 1, rect.GetTop(), x2, rect.GetTop());
+        if (style != wxSB_FLAT)
+        {
+            if (style == wxSB_RAISED)
+                dc.SetPen(m_penHighlight);
+            else
+                dc.SetPen(m_penDarkGrey);
+            dc.DrawLine(rect.GetLeft(), rect.GetTop(), rect.GetLeft(), y2);
+            dc.DrawLine(rect.GetLeft() + 1, rect.GetTop(), x2, rect.GetTop());
+        }
 
         // draw the grey stripes of the grip
         size_t n;
@@ -3262,9 +3269,16 @@
         }
 
         // draw the remaining rect boundaries
-        ofs -= WIDTH_STATUSBAR_GRIP_BAND;
-        dc.DrawLine(x2, rect.GetTop(), x2, y2 - ofs + 1);
-        dc.DrawLine(rect.GetLeft(), y2, x2 - ofs + 1, y2);
+        if (style != wxSB_FLAT)
+        {
+            if (style == wxSB_RAISED)
+                dc.SetPen(m_penDarkGrey);
+            else
+                dc.SetPen(m_penHighlight);
+            ofs -= WIDTH_STATUSBAR_GRIP_BAND;
+            dc.DrawLine(x2, rect.GetTop(), x2, y2 - ofs + 1);
+            dc.DrawLine(rect.GetLeft(), y2, x2 - ofs + 1, y2);
+        }
 
         rectIn = rect;
         rectIn.Deflate(1);
@@ -3273,7 +3287,10 @@
     }
     else // normal pane
     {
-        DrawBorder(dc, wxBORDER_STATIC, rect, flags, &rectIn);
+        if (style == wxSB_RAISED)
+            DrawBorder(dc, wxBORDER_RAISED, rect, flags, &rectIn);
+        else if (style != wxSB_FLAT)
+            DrawBorder(dc, wxBORDER_STATIC, rect, flags, &rectIn);
     }
 
     rectIn.Deflate(STATBAR_BORDER_X, STATBAR_BORDER_Y);
Index: contrib/src/xrc/xh_statbar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/contrib/src/xrc/xh_statbar.cpp,v
retrieving revision 1.5
diff -u -r1.5 xh_statbar.cpp
--- contrib/src/xrc/xh_statbar.cpp	2004/05/18 16:03:01	1.5
+++ contrib/src/xrc/xh_statbar.cpp	2004/07/09 23:11:55
@@ -47,6 +47,7 @@
 
     int fields = GetLong(wxT("fields"), 1);
     wxString widths = GetParamValue(wxT("widths"));
+    wxString styles = GetParamValue(wxT("styles"));
 
     if (fields > 1 && !widths.IsEmpty())
     {
@@ -63,6 +64,30 @@
     }
     else
         statbar->SetFieldsCount(fields);
+
+    if (!styles.IsEmpty())
+    {
+		int *style = new int[fields];
+        for (int i = 0; i < fields; ++i)
+        {
+            style[i] = wxSB_NORMAL;
+
+            wxString first = styles.BeforeFirst(wxT(','));
+            if (first == wxT("wxSB_NORMAL"))
+                style[i] = wxSB_NORMAL;
+            else if (first == wxT("wxSB_FLAT"))
+                style[i] = wxSB_FLAT;
+            else if (first == wxT("wxSB_RAISED"))
+                style[i] = wxSB_RAISED;
+
+            if (!first.IsEmpty())
+                wxLogError(wxT("Error in resource, unknown statusbar field style: ") + first);
+            if(styles.Find(wxT(',')))
+                styles.Remove(0, styles.Find(wxT(',')) + 1);
+        }
+        statbar->SetStatusStyles(fields, style);
+        delete [] style;
+    }
 
     if (m_parentAsWindow)
     {

 	  	 
