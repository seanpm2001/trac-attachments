Index: configure.in
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/configure.in,v
retrieving revision 1.1131
diff -bu2 -r1.1131 configure.in
--- configure.in
+++ configure.in
@@ -425,4 +425,5 @@
   DEFAULT_wxUSE_MEDIACTRL=no
   DEFAULT_wxUSE_GSTREAMER8=no
+  DEFAULT_wxUSE_PRINTF_POS_PARAM=no
   DEFAULT_wxUSE_INTL=no
   DEFAULT_wxUSE_CONFIG=no
@@ -637,4 +638,5 @@
   DEFAULT_wxUSE_MEDIACTRL=no
   DEFAULT_wxUSE_GSTREAMER8=no
+  DEFAULT_wxUSE_PRINTF_POS_PARAM=yes
   DEFAULT_wxUSE_INTL=yes
   DEFAULT_wxUSE_CONFIG=yes
@@ -958,5 +960,5 @@
 WX_ARG_ENABLE(mediactrl,     [  --enable-mediactrl      use wxMediaCtrl class], wxUSE_MEDIACTRL)
 WX_ARG_ENABLE(gstreamer8,     [  --enable-gstreamer8      force GStreamer 0.8 instead of 0.10 with the wxMediaCtrl class on unix], wxUSE_GSTREAMER8)
-WX_ARG_ENABLE(wxprintfv,     [  --enable-wxprintfv      use wxWidgets implementation of vprintf()], wxUSE_EXPERIMENTAL_PRINTF)
+WX_ARG_ENABLE(printfposparam,[  --enable-printfposparam use wxVsnprintf() which supports positional parameters], wxUSE_PRINTF_POS_PARAMS)
 WX_ARG_ENABLE(zipstream,     [  --enable-zipstream      use wxZip streams], wxUSE_ZIPSTREAM)
 
@@ -4321,6 +4323,39 @@
         fi
     fi
+
+    if test "$wxUSE_PRINTF_POS_PARAMS" = "yes"; then
+
+        dnl check if snprintf() has support for positional arguments
+        dnl NB: if snprintf() has positional support we can safely suppose that also
+        dnl     other *printf() functions support them as they all belong to the same
+        dnl     family and they all fallback to the same implementation
+        AC_CACHE_CHECK([if snprintf supports positional arguments], wx_cv_func_snprintf_pos_params,
+            [
+                AC_TRY_RUN(
+                    [
+                        #include <stdio.h>
+
+                        int main (void)
+                        {
+                            char buffer[128];
+                            snprintf (buffer, 128, "%2\$d %3\$d %1\$d", 1, 2, 3);
+                            if (strcmp ("2 3 1", buffer) == 0)
+                                exit (0);
+                            exit (1);
+                        }
+                    ],
+                    wx_cv_func_snprintf_pos_params=no,
+                    wx_cv_func_snprintf_pos_params=yes
+                )
+            ]
+        )
+
+        if test "$wx_cv_func_snprintf_pos_params" = "yes"; then
+            AC_DEFINE(HAVE_UNIX98_PRINTF)
+        fi
+    fi
 fi
 
+
 if test "$wxUSE_UNICODE" = yes; then
     dnl also look if we have wide char IO functions
@@ -5649,4 +5684,9 @@
 fi
 
+if test "$wxUSE_PRINTF_POS_PARAMS" = "yes"; then
+  AC_DEFINE(wxUSE_PRINTF_POS_PARAMS)
+fi
+
+
 dnl ---------------------------------------------------------------------------
 dnl time/date functions
Index: setup.h.in
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/setup.h.in,v
retrieving revision 1.214
diff -bu2 -r1.214 setup.h.in
--- setup.h.in
+++ setup.h.in
@@ -208,5 +208,4 @@
 #define wxUSE_PRINTF_POS_PARAMS      0
 
-
 #define wxUSE_LONGLONG      0
 
@@ -812,4 +811,8 @@
 #undef HAVE_BROKEN_SNPRINTF_DECL
 
+/* Define if you have a snprintf() which supports positional arguments
+   (defined in the unix98 standard) */
+#undef HAVE_UNIX98_PRINTF
+
 /* define if you have statfs function */
 #undef HAVE_STATFS
Index: include/wx/setup_inc.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/setup_inc.h,v
retrieving revision 1.39
diff -bu2 -r1.39 include/wx/setup_inc.h
--- include/wx/setup_inc.h
+++ include/wx/setup_inc.h
@@ -284,5 +284,5 @@
 //
 // Recommended setting: 1 if you want to support multiple languages
-#define wxUSE_PRINTF_POS_PARAMS      0
+#define wxUSE_PRINTF_POS_PARAMS      1
 
 // ----------------------------------------------------------------------------
Index: include/wx/wxchar.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/wxchar.h,v
retrieving revision 1.193
diff -bu2 -r1.193 include/wx/wxchar.h
--- include/wx/wxchar.h
+++ include/wx/wxchar.h
@@ -2,9 +2,9 @@
  * Name:        wx/wxchar.h
  * Purpose:     Declarations common to wx char/wchar_t usage (wide chars)
- * Author:      Joel Farley, Ove Kåven
+ * Author:      Joel Farley, Ove Kï¿½en
  * Modified by: Vadim Zeitlin, Robert Roebling, Ron Lee
  * Created:     1998/06/12
  * RCS-ID:      $Id: wxchar.h,v 1.193 2006/05/28 15:17:20 VZ Exp $
- * Copyright:   (c) 1998-2002 Joel Farley, Ove Kåven, Robert Roebling, Ron Lee
+ * Copyright:   (c) 1998-2002 Joel Farley, Ove Kï¿½en, Robert Roebling, Ron Lee
  * Licence:     wxWindows licence
  */
@@ -884,5 +884,5 @@
             #define wxSnprintf_     _snwprintf
         #endif /* Watcom */
-        #if defined(HAVE__VSNWPRINTF) && defined(HAVE_UNIX98_PRINTF)
+        #if defined(HAVE__VSNWPRINTF)
             #define wxVsnprintf_    _vsnwprintf
         /* MinGW?MSVCRT has the wrong vswprintf */
@@ -894,5 +894,5 @@
         /* all versions of CodeWarrior supported by wxWidgets apparently have */
         /* both snprintf() and vsnprintf() */
-        #if (defined(HAVE_SNPRINTF) && defined(HAVE_UNIX98_PRINTF)) \
+        #if defined(HAVE_SNPRINTF) \
             || defined(__MWERKS__) || defined(__WATCOMC__)
             #ifndef HAVE_BROKEN_SNPRINTF_DECL
@@ -900,5 +900,5 @@
             #endif
         #endif
-        #if (defined(HAVE_VSNPRINTF) && defined(HAVE_UNIX98_PRINTF)) \
+        #if defined(HAVE_VSNPRINTF) \
             || defined(__MWERKS__) || defined(__WATCOMC__)
             #if defined __cplusplus && defined HAVE_BROKEN_VSNPRINTF_DECL
@@ -909,5 +909,26 @@
         #endif
     #endif
-#endif /* wxVsnprintf_ not defined yet */
+#endif /* wxVsnprintf_ not defined yet && !wxUSE_PRINTF_POS_PARAMS */
+
+#if !defined( wxVsnprintf_ ) && wxUSE_PRINTF_POS_PARAMS
+    /*
+        The systems where vsnprintf() supports positionals should define
+        the HAVE_UNIX98_PRINTF symbol.
+
+        On systems which don't (e.g. Windows) we are forced to use
+        our wxVsnprintf() implementation.
+    */
+    #if defined(HAVE_UNIX98_PRINTF)
+        #if wxUSE_UNICODE
+            #define wxVsnprintf_        vswprintf
+        #else /* ASCII */
+            #if defined __cplusplus && defined HAVE_BROKEN_VSNPRINTF_DECL
+                #define wxVsnprintf_    wx_fixed_vsnprintf
+            #else
+                #define wxVsnprintf_    vsnprintf
+            #endif
+        #endif
+    #endif
+#endif  // !defined( wxVsnprintf_ ) && wxUSE_PRINTF_POS_PARAMS
 
 #ifndef wxSnprintf_
Index: src/common/wxchar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/wxchar.cpp,v
retrieving revision 1.115
diff -bu2 -r1.115 src/common/wxchar.cpp
--- src/common/wxchar.cpp
+++ src/common/wxchar.cpp
@@ -2,6 +2,6 @@
 // Name:        src/common/wxchar.cpp
 // Purpose:     wxChar implementation
-// Author:      Ove Kåven
-// Modified by: Ron Lee
+// Author:      Ove Kaven
+// Modified by: Ron Lee, Francesco Montorsi
 // Created:     09/04/99
 // RCS-ID:      $Id: wxchar.cpp,v 1.115 2006/06/01 09:44:35 MW Exp $
@@ -902,4 +902,34 @@
 }
 
+// differences from standard strncpy:
+// 1) copies everything from 'source' except for '%%' sequence which is copied as '%'
+// 2) returns the number of written characters in 'dest' as it could differ from given 'n'
+// 3) much less optimized, unfortunately...
+int wxStrncpyWithFilter(wxChar *dest, const wxChar *source, size_t n)
+{
+    size_t written = 0;
+
+    if (n == 0)
+        return 0;
+
+    size_t i=0;
+    for (; i < n-1; source++, i++)
+    {
+        dest[written++] = *source;
+        if (*(source+1) == wxT('%'))
+        {
+            // skip this additional '%' character
+            source++;
+            i++;
+        }
+    }
+
+    if (i < n)
+        // copy last character inconditionally
+        dest[written++] = *source;
+
+    return written;
+}
+
 int WXDLLEXPORT wxVsnprintf_(wxChar *buf, size_t lenMax,
                              const wxChar *format, va_list argptr)
@@ -975,4 +1005,5 @@
     va_end(ap);
 
+    // something failed while loading arguments from the variable list...
     if (!ok)
         return -1;
@@ -988,6 +1019,5 @@
             return -1;      // not enough space in the output buffer !
 
-        wxStrncpy(buf+lenCur, toparse, tocopy);
-        lenCur += tocopy;
+        lenCur += wxStrncpyWithFilter(buf+lenCur, toparse, tocopy);
 
         // process this specifier directly in the output buffer
@@ -1009,6 +1039,7 @@
     if (lenCur+tocopy >= lenMax)
         return -1;      // not enough space in the output buffer !
-    wxStrncpy(buf+lenCur, toparse, tocopy);
-    lenCur += tocopy - 1;   // the -1 is because of the '\0'
+
+    // the -1 is because of the '\0'
+    lenCur += wxStrncpyWithFilter(buf+lenCur, toparse, tocopy) - 1;
 
     // clean the static array portion used...
Index: tests/strings/vsnprintf.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/tests/strings/vsnprintf.cpp,v
retrieving revision 1.2
diff -bu2 -r1.2 tests/strings/vsnprintf.cpp
--- tests/strings/vsnprintf.cpp
+++ tests/strings/vsnprintf.cpp
@@ -185,4 +185,9 @@
 
     CMP("abcde", "%.5s", wxT("abcdefghi"));
+
+    // some tests without any argument:
+    Compare(wxT("%"), wxT("%%"));
+    Compare(wxT("%%%"), wxT("%%%%%%"));
+    Compare(wxT("%%"), wxT("%%%"));
 }
 
@@ -198,5 +203,5 @@
     {
         CPPUNIT_ASSERT_STR_EQUAL(
-            wxT("\n\naa 1.231230e+102 1.231231e+123 456 33333333 - test - 789 999 %% -       0.1-\n\n"),
+            wxT("\n\naa 1.231230e+102 1.231231e+123 456 33333333 - test - 789 999 % -       0.1-\n\n"),
             buffer);
     }
@@ -209,5 +214,5 @@
     {
         CPPUNIT_ASSERT_STR_EQUAL(
-            wxT("\n\naa 1.231230e+102 1.231231e+123 456 33333333 - test - 789 999 %% 0.1231\n\n"),
+            wxT("\n\naa 1.231230e+102 1.231231e+123 456 33333333 - test - 789 999 % 0.1231\n\n"),
             buffer);
     }

 	  	 
