diff -uNr -x stc.cpp wxWidgets-3.0.0-orig\src/common/numformatter.cpp wxWidgets-3.0.0-15625\src/common/numformatter.cpp
--- wxWidgets-3.0.0-orig\src/common/numformatter.cpp	2013-11-11 14:18:38.000000000 +0100
+++ wxWidgets-3.0.0-15625\src/common/numformatter.cpp	2013-12-31 23:01:17.375054400 +0100
@@ -223,6 +223,10 @@
 
 void wxNumberFormatter::AddThousandsSeparators(wxString& s)
 {
+    // Thousands separators for numbers in scientific format are not relevant.
+    if( s.find_first_of("eE") != wxString::npos )
+        return;
+
     wxChar thousandsSep;
     if ( !GetThousandsSeparatorIfUsed(&thousandsSep) )
         return;
@@ -254,9 +258,14 @@
 
 void wxNumberFormatter::RemoveTrailingZeroes(wxString& s)
 {
+    // If number is in scientific format, trailing zeroes belong to the exponent and cannot be removed.
+    if( s.find_first_of("eE") != wxString::npos )
+        return;
+
     const size_t posDecSep = s.find(GetDecimalSeparator());
-    wxCHECK_RET( posDecSep != wxString::npos,
-                 wxString::Format("No decimal separator in \"%s\"", s) );
+    // No decimal point => removing trailing zeroes irrelevant for integer number.
+    if( posDecSep == wxString::npos )
+        return;
     wxCHECK_RET( posDecSep, "Can't start with decimal separator" );
 
     // Find the last character to keep.
@@ -267,6 +276,9 @@
         posLastNonZero--;
 
     s.erase(posLastNonZero + 1);
+    // Remove sign from orphaned zero.
+    if( s.compare("-0") == 0 )
+        s = "0";
 }
 
 // ----------------------------------------------------------------------------
diff -uNr -x stc.cpp wxWidgets-3.0.0-orig\src/propgrid/advprops.cpp wxWidgets-3.0.0-15625\src/propgrid/advprops.cpp
--- wxWidgets-3.0.0-orig\src/propgrid/advprops.cpp	2013-11-11 14:18:39.000000000 +0100
+++ wxWidgets-3.0.0-15625\src/propgrid/advprops.cpp	2013-12-31 23:34:50.087054400 +0100
@@ -62,6 +62,7 @@
 #endif
 
 #include "wx/odcombo.h"
+#include "wx/numformatter.h"
 
 // -----------------------------------------------------------------------
 
@@ -361,7 +362,7 @@
                 // Min/Max check
                 wxFloatProperty::DoValidation(property, v_d, NULL, mode);
 
-                wxPropertyGrid::DoubleToString(s, v_d, 6, true, NULL);
+                s = wxNumberFormatter::ToString(v_d, -1, wxNumberFormatter::Style_None);
             }
             else
             {
diff -uNr -x stc.cpp wxWidgets-3.0.0-orig\src/propgrid/props.cpp wxWidgets-3.0.0-15625\src/propgrid/props.cpp
--- wxWidgets-3.0.0-orig\src/propgrid/props.cpp	2013-11-11 14:18:39.000000000 +0100
+++ wxWidgets-3.0.0-15625\src/propgrid/props.cpp	2013-12-31 22:21:20.924049900 +0100
@@ -52,6 +52,7 @@
 #include "wx/filename.h"
 
 #include "wx/propgrid/propgrid.h"
+#include "wx/numformatter.h"
 
 #define wxPG_CUSTOM_IMAGE_WIDTH     20 // for wxColourProperty etc.
 
@@ -667,6 +668,7 @@
 
 wxFloatProperty::~wxFloatProperty() { }
 
+#if WXWIN_COMPATIBILITY_3_0
 // This helper method provides standard way for floating point-using
 // properties to convert values to string.
 const wxString& wxPropertyGrid::DoubleToString(wxString& target,
@@ -697,7 +699,7 @@
 
     if ( removeZeroes && precision != 0 && !target.empty() )
     {
-        // Remove excess zeroes (do not remove this code just yet,
+        // Remove excess zeroes for numbers in decimal notation only (do not remove this code just yet,
         // since sprintf can't do the same consistently across platforms).
         wxString::const_iterator i = target.end() - 1;
         size_t new_len = target.length() - 1;
@@ -738,6 +740,7 @@
 
     return target;
 }
+#endif
 
 wxString wxFloatProperty::ValueToString( wxVariant& value,
                                          int argFlags ) const
@@ -745,11 +748,8 @@
     wxString text;
     if ( !value.IsNull() )
     {
-        wxPropertyGrid::DoubleToString(text,
-                                       value,
-                                       m_precision,
-                                       !(argFlags & wxPG_FULL_VALUE),
-                                       NULL);
+        text = wxNumberFormatter::ToString(value.GetDouble(), m_precision,
+                                           (!(argFlags & wxPG_FULL_VALUE))? wxNumberFormatter::Style_NoTrailingZeroes: wxNumberFormatter::Style_None);
     }
     return text;
 }
