Index: src/common/intl.cpp
===================================================================
--- src/common/intl.cpp	(revision 51890)
+++ src/common/intl.cpp	(working copy)
@@ -1946,8 +1946,13 @@
     // for now we don't use the encoding, although we probably should (doing
     // translations of the msg catalogs on the fly as required) (TODO)
     //
-    // we don't use the modifiers neither but we probably should translate
-    // "euro" into iso885915
+    // we need the modified for languages like Valencian: ca_ES@valencia
+    // though, remember it
+    wxString modifier;
+    size_t posModifier = langFull.find_first_of(_T("@"));
+    if ( posModifier != wxString::npos )
+        modifier = langFull.Mid(posModifier);
+
     size_t posEndLang = langFull.find_first_of(_T("@."));
     if ( posEndLang != wxString::npos )
     {
@@ -1993,14 +1998,31 @@
         }
 
         // 1. Try to find the language either as is:
-        for ( i = 0; i < count; i++ )
+        // a) With modifier if set
+        if (!modifier.empty())
         {
-            if ( ms_languagesDB->Item(i).CanonicalName == langFull )
+            wxString langFullWithModifier = langFull + modifier;
+            for ( i = 0; i < count; i++ )
             {
-                break;
+                if ( ms_languagesDB->Item(i).CanonicalName == langFullWithModifier )
+                {
+                    break;
+                }
             }
         }
 
+        // b) Without modifier
+        if (modifier.empty() || i == count)
+        {
+            for ( i = 0; i < count; i++ )
+            {
+                if ( ms_languagesDB->Item(i).CanonicalName == langFull )
+                {
+                    break;
+                }
+            }
+        }
+
         // 2. If langFull is of the form xx_YY, try to find xx:
         if ( i == count && !justLang )
         {

 	  	 
