Index: docs/changes.txt
===================================================================
--- docs/changes.txt	(revision 53811)
+++ docs/changes.txt	(working copy)
@@ -129,6 +129,21 @@
   compilation error instead. This can be worked around by explicitly casting
   to const wxChar*:
      wxLogError(_("error: %s"), !err.empty() ? (const wxChar*)err.c_str() : "")
+     
+- Changes to wxString::c_str() affect the wxString interface to 3rd party,
+  notably STL and boost, causing compile time 'ambiguous call to overloaded
+  function' errors.
+    - Using wxString::c_str() with functions accepting both, a const char* and
+      a const wchar_t* fails with 'ambiguous call to overloaded function'.
+      Solution: Replace c_str() with wc_str() to return a const wchar_t* or 
+      wxString::mb_str() to return a const char*.
+      Solution2: Explicitly cast the return value to (const wxChar*)
+		Example: std::ofstream::open((const wxChar*)wxString::c_str())
+      
+- wxString no longer inherits from std::[w]string (with wxUSE_STL 1).
+  This causes compile time errors 'could not deduce template argument' when
+  passing a wxString to a template method. Use wc_str() or mb_str() accordingly.
+	- boost::wregex reg(string)  fails to compile.
 
 - wxCtime() and wxAsctime() return char*; this is incompatible with Unicode
   build in wxWidgets 2.8 that returned wchar_t*.
