Index: src/msw/choice.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/choice.cpp,v
retrieving revision 1.69
diff -u -r1.69 choice.cpp
--- src/msw/choice.cpp	2004/01/15 13:49:05	1.69
+++ src/msw/choice.cpp	2004/01/31 16:02:07
@@ -375,13 +375,17 @@
                          int width, int WXUNUSED(height),
                          int sizeFlags)
 {
-    // Ignore height parameter because height doesn't mean 'initially
-    // displayed' height, it refers to the drop-down menu as well. The
-    // wxWindows interpretation is different; also, getting the size returns
-    // the _displayed_ size (NOT the drop down menu size) so
-    // setting-getting-setting size would not work.
-
-    wxControl::DoSetSize(x, y, width, -1, sizeFlags);
+   
+	//fakery here because the later call to ::MoveWindow is going to set the size of the dropdown, not of the
+	//edit control.
+	int	nItems = GetCount();
+	size_t nStrings = nItems == 0 ? 10 : wxMin(10, nItems) + 1;
+	int hChoice = SendMessage((HWND)GetHWND(), CB_GETITEMHEIGHT, 0,0);
+	int hText = EDIT_HEIGHT_FROM_CHAR_HEIGHT(hChoice);
+	int hActual = (nStrings * hChoice)+hText;
+	//"size" of the control needs to be # of visible items (nStrings) * height of each item (hChoice) + height of text ctrl(hText)
+	
+    wxControl::DoSetSize(x, y, width, hActual, sizeFlags);
 }
 
 wxSize wxChoice::DoGetBestSize() const
@@ -409,9 +413,7 @@
 
     wChoice += 5*cx;
 
-    // Choice drop-down list depends on number of items (limited to 10)
-    size_t nStrings = nItems == 0 ? 10 : wxMin(10, nItems) + 1;
-    int hChoice = EDIT_HEIGHT_FROM_CHAR_HEIGHT(cy)*nStrings;
+	int hChoice = EDIT_HEIGHT_FROM_CHAR_HEIGHT(cy);	
 
     return wxSize(wChoice, hChoice);
 }

 	  	 
