diff --cc include/wx/qt/menuitem.h
index 7cdf1d6883,953e48c565..0000000000
--- a/include/wx/qt/menuitem.h
+++ b/include/wx/qt/menuitem.h
@@@ -9,7 -9,11 +9,11 @@@
  #define _WX_QT_MENUITEM_H_
  
  #include "wx/menuitem.h"
 -
 +#include "wx/bitmap.h"
+ #if wxUSE_OWNER_DRAWN
+     #include "wx/ownerdrw.h"
+ #endif
+ 
  class QAction;
  
  class WXDLLIMPEXP_FWD_CORE wxBitmap;
@@@ -34,16 -41,30 +41,32 @@@ public
      virtual void Check(bool check = true);
      virtual bool IsChecked() const;
  
-     virtual void SetBitmap(const wxBitmap& bitmap);
-     virtual const wxBitmap& GetBitmap() const { return m_bitmap; };
- 
++    void SetBitmap(const wxBitmap& bitmap);
++    const wxBitmap& GetBitmap() const { return m_bitmap; };
++#if wxUSE_OWNER_DRAWN
+     void SetBitmaps(const wxBitmap& bmpChecked,
+                     const wxBitmap& bmpUnchecked = wxNullBitmap);
 -    void SetBitmap(const wxBitmap& bitmap);
 -    const wxBitmap& GetBitmap() const;
 -
++#endif
      virtual QAction *GetHandle() const;
  
+ #if wxUSE_OWNER_DRAWN
+     void SetDisabledBitmap(const wxBitmap& bmpDisabled);
+     const wxBitmap& GetDisabledBitmap() const;
+ 
+     // override wxOwnerDrawn base class virtuals
+     virtual wxString GetName() const wxOVERRIDE;
+     virtual bool OnDrawItem(wxDC& dc, const wxRect& rc, wxODAction act, wxODStatus stat) wxOVERRIDE;
+ #endif // wxUSE_OWNER_DRAWN
+ 
  private:
      // Qt is using an action instead of a menu item.
      QAction *m_qtAction;
 -
 +    wxBitmap m_bitmap;
 +    
+ #if wxUSE_OWNER_DRAWN
+     wxBitmap m_bmpDisabled;
+ #endif // wxUSE_OWNER_DRAWN
+ 
      wxDECLARE_DYNAMIC_CLASS( wxMenuItem );
  };
  
diff --cc src/qt/menuitem.cpp
index 4e9c917fd8,85106eff59..0000000000
--- a/src/qt/menuitem.cpp
+++ b/src/qt/menuitem.cpp
@@@ -105,18 -105,25 +105,28 @@@ bool wxMenuItem::IsChecked() cons
      return isChecked;
  }
  
 -
 -void wxMenuItem::SetBitmaps(const wxBitmap& WXUNUSED(bmpChecked),
 -                            const wxBitmap& WXUNUSED(bmpUnchecked))
 -{
 -    wxMISSING_FUNCTION();
 -}
 -
 -void wxMenuItem::SetBitmap(const wxBitmap& WXUNUSED(bitmap))
++#if wxUSE_OWNER_DRAWN
++void wxMenuItem::SetBitmap(const wxBitmap &bmpChecked, const wxBitmap &bmpUnchecked)
+ {
 -    wxMISSING_FUNCTION();
++    m_bitmap = bmpChecked;
++    if( bmpUnchecked )
++        m_bmpDisabled = bmpUnchecked;
++    else
++        m_bmpDisabled = bmpChecked;
+ }
++#endif
  
 -const wxBitmap &wxMenuItem::GetBitmap() const
 +void wxMenuItem::SetBitmap(const wxBitmap& bitmap)
  {
 -    wxMISSING_FUNCTION();
 -
 -    static wxBitmap s_bitmap;
 -
 -    return s_bitmap;
 +    if( m_kind == wxITEM_NORMAL )
 +    {
 +        m_bitmap = bitmap;
 +        m_qtAction->setIcon( QIcon( *bitmap.GetHandle() ) );
 +    }
 +    else
 +    {
 +        wxFAIL_MSG("only normal menu items can have bitmaps");
 +    }
  }
  
  QAction *wxMenuItem::GetHandle() const
@@@ -158,6 -193,6 +168,7 @@@ wxQtAction::wxQtAction( wxMenu *parent
      }
  
      connect( this, &QAction::triggered, this, &wxQtAction::onActionTriggered );
++
  }
   
  
diff --git a/src/qt/menu.cpp b/src/qt/menu.cpp
index 61d27b7976..468af62058 100644
--- a/src/qt/menu.cpp
+++ b/src/qt/menu.cpp
@@ -100,6 +100,8 @@ static void InsertMenuItemAction( const wxMenu *menu, const wxMenuItem *previous
             }
             break;
         }
+        default:
+            break;
     }
     // Insert the action into the actual menu:
     QAction *successiveItemAction = ( successiveItem != NULL ) ? successiveItem->GetHandle() : NULL;
