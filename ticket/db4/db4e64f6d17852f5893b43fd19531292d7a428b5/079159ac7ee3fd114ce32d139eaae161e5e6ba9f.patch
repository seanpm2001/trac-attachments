Index: src/generic/hyperlinkg.cpp
===================================================================
--- src/generic/hyperlinkg.cpp	(revision 67594)
+++ src/generic/hyperlinkg.cpp	(working copy)
@@ -41,6 +41,7 @@
 #endif
 
 #include "wx/clipbrd.h"
+#include "wx/renderer.h"
 
 // ============================================================================
 // implementation
@@ -89,6 +90,9 @@
     //       with GTK+'s native handling):
 
     Connect( wxEVT_PAINT, wxPaintEventHandler(wxGenericHyperlinkCtrl::OnPaint) );
+    Connect( wxEVT_SET_FOCUS, wxFocusEventHandler(wxGenericHyperlinkCtrl::OnFocus) );
+    Connect( wxEVT_KILL_FOCUS, wxFocusEventHandler(wxGenericHyperlinkCtrl::OnFocus) );
+    Connect( wxEVT_CHAR, wxKeyEventHandler(wxGenericHyperlinkCtrl::OnChar) );
     Connect( wxEVT_LEAVE_WINDOW, wxMouseEventHandler(wxGenericHyperlinkCtrl::OnLeaveWindow) );
 
     Connect( wxEVT_LEFT_DOWN, wxMouseEventHandler(wxGenericHyperlinkCtrl::OnLeftDown) );
@@ -187,8 +191,34 @@
     dc.SetTextBackground(GetBackgroundColour());
 
     dc.DrawText(GetLabel(), GetLabelRect().GetTopLeft());
+    if (wxWindow::DoFindFocus() == this)
+    {
+        wxRendererNative::Get().DrawFocusRect(this, dc, GetClientRect(), wxCONTROL_SELECTED);
+    }
 }
 
+void wxGenericHyperlinkCtrl::OnFocus(wxFocusEvent& event)
+{
+    Refresh();
+    event.Skip();
+}
+
+void wxGenericHyperlinkCtrl::OnChar(wxKeyEvent& event)
+{
+    switch (event.m_keyCode)
+    {
+    default:
+        event.Skip();
+        break;
+    case WXK_SPACE:
+    case WXK_NUMPAD_SPACE:
+        SetForegroundColour(m_visitedColour);
+        m_visited = true;
+        SendEvent();
+        break;
+    }
+}
+
 void wxGenericHyperlinkCtrl::OnLeftDown(wxMouseEvent& event)
 {
     // the left click must start from the hyperlink rect
Index: include/wx/generic/hyperlink.h
===================================================================
--- include/wx/generic/hyperlink.h	(revision 67594)
+++ include/wx/generic/hyperlink.h	(working copy)
@@ -75,6 +75,12 @@
     // Renders the hyperlink.
     void OnPaint(wxPaintEvent& event);
 
+    // Handle set/kill focus events (invalidate for painting focus rect)
+    void OnFocus(wxFocusEvent& event);
+
+    // Fire a HyperlinkEvent on space
+    void OnChar(wxKeyEvent& event);
+
     // Returns the wxRect of the label of this hyperlink.
     // This is different from the clientsize's rectangle when
     // clientsize != bestsize and this rectangle is influenced
Index: samples/widgets/hyperlnk.cpp
===================================================================
--- samples/widgets/hyperlnk.cpp	(revision 67594)
+++ samples/widgets/hyperlnk.cpp	(working copy)
@@ -105,8 +105,8 @@
     // ------------
 
     // the checkbox itself and the sizer it is in
-    wxHyperlinkCtrl *m_hyperlink;
-    wxHyperlinkCtrl *m_hyperlinkLong;
+    wxGenericHyperlinkCtrl *m_hyperlink;
+    wxGenericHyperlinkCtrl *m_hyperlinkLong;
 
     wxTextCtrl *m_label;
     wxTextCtrl *m_url;
@@ -189,7 +189,7 @@
 
     m_visit = new wxStaticText(this, wxID_ANY, wxT("Visit "));
 
-    m_hyperlink = new wxHyperlinkCtrl(this,
+    m_hyperlink = new wxGenericHyperlinkCtrl(this,
                                       HyperlinkPage_Ctrl,
                                       wxT("wxWidgets website"),
                                       wxT("www.wxwidgets.org"));
@@ -203,7 +203,7 @@
     szHyperlink->Add(0, 0, 1, wxCENTRE);
     szHyperlink->SetMinSize(150, 0);
 
-    m_hyperlinkLong = new wxHyperlinkCtrl(this,
+    m_hyperlinkLong = new wxGenericHyperlinkCtrl(this,
                                           wxID_ANY,
                                           wxT("This is a long hyperlink"),
                                           wxT("www.wxwidgets.org"));
@@ -236,7 +236,7 @@
     const wxString label = m_hyperlink->GetLabel();
     const wxString url = m_hyperlink->GetURL();
 
-    wxHyperlinkCtrl *hyp = new wxHyperlinkCtrl(this,
+    wxGenericHyperlinkCtrl *hyp = new wxGenericHyperlinkCtrl(this,
                                                HyperlinkPage_Ctrl,
                                                label,
                                                url);
@@ -255,7 +255,7 @@
 void HyperlinkWidgetsPage::CreateHyperlinkLong(long style)
 {
     style = (wxHL_DEFAULT_STYLE & ~wxHL_ALIGN_CENTRE)|style;
-    wxHyperlinkCtrl *hyp = new wxHyperlinkCtrl(this,
+    wxGenericHyperlinkCtrl *hyp = new wxGenericHyperlinkCtrl(this,
                                                wxID_ANY,
                                                wxT("This is a long hyperlink"),
                                                wxT("www.wxwidgets.org"),
