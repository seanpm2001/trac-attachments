Index: dynarray.h
===================================================================
--- dynarray.h	(revision 129)
+++ dynarray.h	(working copy)
@@ -112,9 +112,109 @@
 #define  _WX_DECLARE_BASEARRAY(T, name, classexp)                   \
    typedef int (wxCMPFUNC_CONV *CMPFUN##name)(T pItem1, T pItem2);  \
    typedef wxSortedArray_SortFunction<T, CMPFUN##name> name##_Predicate; \
-   _WX_DECLARE_BASEARRAY_2(T, name, name##_Predicate, classexp)
+   _WX_DECLARE_BASEARRAY_2_noclasskeyword(T, name, name##_Predicate, remove_class_keyword_##classexp)
 
+#define remove_class_keyword_class /* */
+/*
+We have two versions of _WX_DECLARE_BASEARRAY_2. The original one expects the classexp
+to start with the keyword class. The new one, named ..._noclasskeyword expects
+the __declspec(dllimport/dllexport) without the class keyword.
+*/
+#define  _WX_DECLARE_BASEARRAY_2_noclasskeyword(T, name, predicate, classexp)      \
+class name : public std::vector<T>                               \
+{                                                                   \
+  typedef predicate Predicate;                                      \
+  typedef predicate::CMPFUNC SCMPFUNC;                              \
+public:                                                             \
+  typedef wxArray_SortFunction<T>::CMPFUNC CMPFUNC;                 \
+                                                                    \
+public:                                                             \
+  typedef T base_type;                                              \
+                                                                    \
+  classexp name() : std::vector<T>() { }                                     \
+  classexp name(size_type n) : std::vector<T>(n) { }                         \
+  classexp name(size_type n, const_reference v) : std::vector<T>(n, v) { }   \
+                                                                    \
+  classexp void Empty() { clear(); }                                         \
+  classexp void Clear() { clear(); }                                         \
+  classexp void Alloc(size_t uiSize) { reserve(uiSize); }                    \
+  classexp void Shrink() { name tmp(*this); swap(tmp); }                     \
+                                                                    \
+  classexp size_t GetCount() const { return size(); }                        \
+  classexp void SetCount(size_t n, T v = T()) { resize(n, v); }              \
+  classexp bool IsEmpty() const { return empty(); }                          \
+  classexp size_t Count() const { return size(); }                           \
+                                                                    \
+  classexp T& Item(size_t uiIndex) const                                     \
+    { wxASSERT( uiIndex < size() ); return (T&)operator[](uiIndex); }   \
+  classexp T& Last() const { return Item(size() - 1); }                      \
+                                                                    \
+  classexp int Index(T item, bool bFromEnd = false) const                    \
+  {                                                                 \
+      if ( bFromEnd )                                               \
+      {                                                             \
+          const const_reverse_iterator b = rbegin(),                \
+                                       e = rend();                  \
+          for ( const_reverse_iterator i = b; i != e; ++i )         \
+              if ( *i == item )                                     \
+                  return (int)(i - b);                              \
+      }                                                             \
+      else                                                          \
+      {                                                             \
+          const const_iterator b = begin(),                         \
+                               e = end();                           \
+          for ( const_iterator i = b; i != e; ++i )                 \
+              if ( *i == item )                                     \
+                  return (int)(i - b);                              \
+      }                                                             \
+                                                                    \
+      return wxNOT_FOUND;                                           \
+  }                                                                 \
+  classexp int Index(T lItem, CMPFUNC fnCompare) const                       \
+  {                                                                 \
+      Predicate p((SCMPFUNC)fnCompare);                             \
+      const_iterator i = std::lower_bound(begin(), end(), lItem, p);\
+      return i != end() && !p(lItem, *i) ? (int)(i - begin())       \
+                                         : wxNOT_FOUND;             \
+  }                                                                 \
+  classexp size_t IndexForInsert(T lItem, CMPFUNC fnCompare) const           \
+  {                                                                 \
+      Predicate p((SCMPFUNC)fnCompare);                             \
+      const_iterator i = std::lower_bound(begin(), end(), lItem, p);\
+      return i - begin();                                           \
+  }                                                                 \
+  classexp void Add(T lItem, size_t nInsert = 1)                             \
+    { insert(end(), nInsert, lItem); }                              \
+  classexp size_t Add(T lItem, CMPFUNC fnCompare)                            \
+  {                                                                 \
+      size_t n = IndexForInsert(lItem, fnCompare);                  \
+      Insert(lItem, n);                                             \
+      return n;                                                     \
+  }                                                                 \
+  classexp void Insert(T lItem, size_t uiIndex, size_t nInsert = 1)          \
+    { insert(begin() + uiIndex, nInsert, lItem); }                  \
+  classexp void Remove(T lItem)                                              \
+  {                                                                 \
+    int n = Index(lItem);                                           \
+    wxCHECK_RET( n != wxNOT_FOUND, _WX_ERROR_REMOVE );              \
+    RemoveAt((size_t)n);                                            \
+  }                                                                 \
+  classexp void RemoveAt(size_t uiIndex, size_t nRemove = 1)                 \
+    { erase(begin() + uiIndex, begin() + uiIndex + nRemove); }      \
+                                                                    \
+  classexp void Sort(CMPFUNC fCmp)                                           \
+  {                                                                 \
+    wxArray_SortFunction<T> p(fCmp);                                \
+    std::sort(begin(), end(), p);                                   \
+  }                                                                 \
+}
+
+
 #define  _WX_DECLARE_BASEARRAY_2(T, name, predicate, classexp)      \
+    _WX_DECLARE_BASEARRAY_2_noclasskeyword(T, name, predicate, remove_class_keyword_##classexp)
+
+#ifdef NOT
+#define  _WX_DECLARE_BASEARRAY_2(T, name, predicate, classexp)      \
 classexp name : public std::vector<T>                               \
 {                                                                   \
   typedef predicate Predicate;                                      \
@@ -202,6 +302,7 @@
     std::sort(begin(), end(), p);                                   \
   }                                                                 \
 }
+#endif
 
 #else // if !wxUSE_STL
 
@@ -850,51 +951,51 @@
 #define WX_DEFINE_ARRAY_WITH_DECL_PTR(T, name, decl)                \
     WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArrayPtrVoid, decl)
 #define WX_DEFINE_USER_EXPORTED_ARRAY(T, name, expmode)                \
-    WX_DEFINE_TYPEARRAY_WITH_DECL(T, name, wxBaseArrayPtrVoid, wxARRAY_EMPTY expmode)
+    WX_DEFINE_TYPEARRAY_WITH_DECL(T, name, wxBaseArrayPtrVoid, expmode wxARRAY_EMPTY)
 #define WX_DEFINE_USER_EXPORTED_ARRAY_PTR(T, name, expmode)         \
-    WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArrayPtrVoid, wxARRAY_EMPTY expmode)
+    WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArrayPtrVoid, expmode wxARRAY_EMPTY)
 
 #define WX_DEFINE_ARRAY_CHAR(T, name)                                 \
     WX_DEFINE_TYPEARRAY_PTR(T, name, wxBaseArrayChar)
 #define WX_DEFINE_EXPORTED_ARRAY_CHAR(T, name)                        \
     WX_DEFINE_EXPORTED_TYPEARRAY_PTR(T, name, wxBaseArrayChar)
 #define WX_DEFINE_USER_EXPORTED_ARRAY_CHAR(T, name, expmode)          \
-    WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArrayChar, wxARRAY_EMPTY expmode)
+    WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArrayChar, expmode wxARRAY_EMPTY)
 
 #define WX_DEFINE_ARRAY_SHORT(T, name)                                 \
     WX_DEFINE_TYPEARRAY_PTR(T, name, wxBaseArrayShort)
 #define WX_DEFINE_EXPORTED_ARRAY_SHORT(T, name)                        \
     WX_DEFINE_EXPORTED_TYPEARRAY_PTR(T, name, wxBaseArrayShort)
 #define WX_DEFINE_USER_EXPORTED_ARRAY_SHORT(T, name, expmode)          \
-    WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArrayShort, wxARRAY_EMPTY expmode)
+    WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArrayShort, expmode wxARRAY_EMPTY)
 
 #define WX_DEFINE_ARRAY_INT(T, name)                                   \
     WX_DEFINE_TYPEARRAY_PTR(T, name, wxBaseArrayInt)
 #define WX_DEFINE_EXPORTED_ARRAY_INT(T, name)                          \
     WX_DEFINE_EXPORTED_TYPEARRAY_PTR(T, name, wxBaseArrayInt)
 #define WX_DEFINE_USER_EXPORTED_ARRAY_INT(T, name, expmode)            \
-    WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArrayInt, wxARRAY_EMPTY expmode)
+    WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArrayInt, expmode wxARRAY_EMPTY)
 
 #define WX_DEFINE_ARRAY_LONG(T, name)                                  \
     WX_DEFINE_TYPEARRAY_PTR(T, name, wxBaseArrayLong)
 #define WX_DEFINE_EXPORTED_ARRAY_LONG(T, name)                         \
     WX_DEFINE_EXPORTED_TYPEARRAY_PTR(T, name, wxBaseArrayLong)
 #define WX_DEFINE_USER_EXPORTED_ARRAY_LONG(T, name, expmode)           \
-    WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArrayLong, wxARRAY_EMPTY expmode)
+    WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArrayLong, expmode wxARRAY_EMPTY)
 
 #define WX_DEFINE_ARRAY_SIZE_T(T, name)                                  \
     WX_DEFINE_TYPEARRAY_PTR(T, name, wxBaseArraySizeT)
 #define WX_DEFINE_EXPORTED_ARRAY_SIZE_T(T, name)                         \
     WX_DEFINE_EXPORTED_TYPEARRAY_PTR(T, name, wxBaseArraySizeT)
 #define WX_DEFINE_USER_EXPORTED_ARRAY_SIZE_T(T, name, expmode)           \
-    WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArraySizeT, wxARRAY_EMPTY expmode)
+    WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArraySizeT, expmode wxARRAY_EMPTY)
 
 #define WX_DEFINE_ARRAY_DOUBLE(T, name)                                \
     WX_DEFINE_TYPEARRAY_PTR(T, name, wxBaseArrayDouble)
 #define WX_DEFINE_EXPORTED_ARRAY_DOUBLE(T, name)                       \
     WX_DEFINE_EXPORTED_TYPEARRAY_PTR(T, name, wxBaseArrayDouble)
 #define WX_DEFINE_USER_EXPORTED_ARRAY_DOUBLE(T, name, expmode)         \
-    WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArrayDouble, wxARRAY_EMPTY expmode)
+    WX_DEFINE_TYPEARRAY_WITH_DECL_PTR(T, name, wxBaseArrayDouble, expmode wxARRAY_EMPTY)
 
 // ----------------------------------------------------------------------------
 // Convenience macros to define sorted arrays from base arrays
@@ -905,21 +1006,21 @@
 #define WX_DEFINE_SORTED_EXPORTED_ARRAY(T, name)                       \
     WX_DEFINE_SORTED_EXPORTED_TYPEARRAY(T, name, wxBaseArrayPtrVoid)
 #define WX_DEFINE_SORTED_USER_EXPORTED_ARRAY(T, name, expmode)         \
-    WX_DEFINE_SORTED_USER_EXPORTED_TYPEARRAY(T, name, wxBaseArrayPtrVoid, wxARRAY_EMPTY expmode)
+    WX_DEFINE_SORTED_USER_EXPORTED_TYPEARRAY(T, name, wxBaseArrayPtrVoid, expmode wxARRAY_EMPTY)
 
 #define WX_DEFINE_SORTED_ARRAY_CHAR(T, name)                          \
     WX_DEFINE_SORTED_TYPEARRAY(T, name, wxBaseArrayChar)
 #define WX_DEFINE_SORTED_EXPORTED_ARRAY_CHAR(T, name)                 \
     WX_DEFINE_SORTED_EXPORTED_TYPEARRAY(T, name, wxBaseArrayChar)
 #define WX_DEFINE_SORTED_USER_EXPORTED_ARRAY_CHAR(T, name, expmode)   \
-    WX_DEFINE_SORTED_USER_EXPORTED_TYPEARRAY(T, name, wxBaseArrayChar, wxARRAY_EMPTY expmode)
+    WX_DEFINE_SORTED_USER_EXPORTED_TYPEARRAY(T, name, wxBaseArrayChar, expmode wxARRAY_EMPTY)
 
 #define WX_DEFINE_SORTED_ARRAY_SHORT(T, name)                          \
     WX_DEFINE_SORTED_TYPEARRAY(T, name, wxBaseArrayShort)
 #define WX_DEFINE_SORTED_EXPORTED_ARRAY_SHORT(T, name)                 \
     WX_DEFINE_SORTED_EXPORTED_TYPEARRAY(T, name, wxBaseArrayShort)
 #define WX_DEFINE_SORTED_USER_EXPORTED_ARRAY_SHORT(T, name, expmode)   \
-    WX_DEFINE_SORTED_USER_EXPORTED_TYPEARRAY(T, name, wxBaseArrayShort, wxARRAY_EMPTY expmode)
+    WX_DEFINE_SORTED_USER_EXPORTED_TYPEARRAY(T, name, wxBaseArrayShort, expmode wxARRAY_EMPTY)
 
 #define WX_DEFINE_SORTED_ARRAY_INT(T, name)                            \
     WX_DEFINE_SORTED_TYPEARRAY(T, name, wxBaseArrayInt)
@@ -940,7 +1041,7 @@
 #define WX_DEFINE_SORTED_EXPORTED_ARRAY_SIZE_T(T, name)                  \
     WX_DEFINE_SORTED_EXPORTED_TYPEARRAY(T, name, wxBaseArraySizeT)
 #define WX_DEFINE_SORTED_USER_EXPORTED_ARRAY_SIZE_T(T, name, expmode)    \
-    WX_DEFINE_SORTED_USER_EXPORTED_TYPEARRAY(T, name, wxBaseArraySizeT, wxARRAY_EMPTY expmode)
+    WX_DEFINE_SORTED_USER_EXPORTED_TYPEARRAY(T, name, wxBaseArraySizeT, expmode wxARRAY_EMPTY)
 
 // ----------------------------------------------------------------------------
 // Convenience macros to define sorted arrays from base arrays
@@ -954,7 +1055,7 @@
                                                      name, expmode)    \
     WX_DEFINE_SORTED_USER_EXPORTED_TYPEARRAY_CMP(T, cmpfunc, name,     \
                                                  wxBaseArrayPtrVoid,   \
-                                                 wxARRAY_EMPTY expmode)
+                                                 expmode wxARRAY_EMPTY)
 
 #define WX_DEFINE_SORTED_ARRAY_CMP_CHAR(T, cmpfunc, name)             \
     WX_DEFINE_SORTED_TYPEARRAY_CMP(T, cmpfunc, name, wxBaseArrayChar)
@@ -964,7 +1065,7 @@
                                                        name, expmode)  \
     WX_DEFINE_SORTED_USER_EXPORTED_TYPEARRAY_CMP(T, cmpfunc, name,     \
                                                  wxBaseArrayChar,      \
-                                                 wxARRAY_EMPTY expmode)
+                                                 expmode wxARRAY_EMPTY)
 
 #define WX_DEFINE_SORTED_ARRAY_CMP_SHORT(T, cmpfunc, name)             \
     WX_DEFINE_SORTED_TYPEARRAY_CMP(T, cmpfunc, name, wxBaseArrayShort)
@@ -974,7 +1075,7 @@
                                                        name, expmode)  \
     WX_DEFINE_SORTED_USER_EXPORTED_TYPEARRAY_CMP(T, cmpfunc, name,     \
                                                  wxBaseArrayShort,     \
-                                                 wxARRAY_EMPTY expmode)
+                                                 expmode wxARRAY_EMPTY)
 
 #define WX_DEFINE_SORTED_ARRAY_CMP_INT(T, cmpfunc, name)               \
     WX_DEFINE_SORTED_TYPEARRAY_CMP(T, cmpfunc, name, wxBaseArrayInt)
@@ -984,7 +1085,7 @@
                                                      name, expmode)    \
     WX_DEFINE_SORTED_USER_EXPORTED_TYPEARRAY_CMP(T, cmpfunc, name,     \
                                                  wxBaseArrayInt,       \
-                                                 wxARRAY_EMPTY expmode)
+                                                 expmode wxARRAY_EMPTY)
 
 #define WX_DEFINE_SORTED_ARRAY_CMP_LONG(T, cmpfunc, name)              \
     WX_DEFINE_SORTED_TYPEARRAY_CMP(T, cmpfunc, name, wxBaseArrayLong)
@@ -994,7 +1095,7 @@
                                                       name, expmode)   \
     WX_DEFINE_SORTED_USER_EXPORTED_TYPEARRAY_CMP(T, cmpfunc, name,     \
                                                  wxBaseArrayLong,      \
-                                                 wxARRAY_EMPTY expmode)
+                                                 expmode wxARRAY_EMPTY)
 
 #define WX_DEFINE_SORTED_ARRAY_CMP_SIZE_T(T, cmpfunc, name)              \
     WX_DEFINE_SORTED_TYPEARRAY_CMP(T, cmpfunc, name, wxBaseArraySizeT)
@@ -1004,7 +1105,7 @@
                                                       name, expmode)   \
     WX_DEFINE_SORTED_USER_EXPORTED_TYPEARRAY_CMP(T, cmpfunc, name,     \
                                                  wxBaseArraySizeT,     \
-                                                 wxARRAY_EMPTY expmode)
+                                                 expmode wxARRAY_EMPTY)
 
 // ----------------------------------------------------------------------------
 // Some commonly used predefined arrays
