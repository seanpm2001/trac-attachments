--- wxWidgets.orig/include/wx/event.h
+++ wxWidgets/include/wx/event.h
@@ -187,4 +187,7 @@
     DECLARE_EVENT_TYPE(wxEVT_CHILD_FOCUS, 114)
     DECLARE_EVENT_TYPE(wxEVT_MOUSEWHEEL, 115)
+    DECLARE_EVENT_TYPE(wxEVT_XBUTTON_DOWN, 116)
+    DECLARE_EVENT_TYPE(wxEVT_XBUTTON_UP, 117)
+    DECLARE_EVENT_TYPE(wxEVT_XBUTTON_DCLICK, 118)
 
         // Non-client mouse events
@@ -201,4 +204,7 @@
     DECLARE_EVENT_TYPE(wxEVT_NC_MIDDLE_DCLICK, 210)
     DECLARE_EVENT_TYPE(wxEVT_NC_RIGHT_DCLICK, 211)
+    DECLARE_EVENT_TYPE(wxEVT_NC_XBUTTON_DOWN, 212)
+    DECLARE_EVENT_TYPE(wxEVT_NC_XBUTTON_UP, 213)
+    DECLARE_EVENT_TYPE(wxEVT_NC_XBUTTON_DCLICK, 214)
 
         // Character input event type
@@ -727,4 +733,7 @@
  wxEVT_MIDDLE_DCLICK
  wxEVT_RIGHT_DCLICK
+ wxEVT_XBUTTON_DOWN
+ wxEVT_XBUTTON_UP
+ wxEVT_XBUTTON_DCLICK
  wxEVT_NC_LEFT_DOWN
  wxEVT_NC_LEFT_UP,
@@ -739,4 +748,7 @@
  wxEVT_NC_MIDDLE_DCLICK,
  wxEVT_NC_RIGHT_DCLICK,
+ wxEVT_NC_XBUTTON_DOWN
+ wxEVT_NC_XBUTTON_UP
+ wxEVT_NC_XBUTTON_DCLICK
 */
 
@@ -797,12 +809,15 @@
     bool MiddleDown() const { return (m_eventType == wxEVT_MIDDLE_DOWN); }
     bool RightDown() const { return (m_eventType == wxEVT_RIGHT_DOWN); }
+    bool XButtonDown() const { return (m_eventType == wxEVT_XBUTTON_DOWN); }
 
     bool LeftUp() const { return (m_eventType == wxEVT_LEFT_UP); }
     bool MiddleUp() const { return (m_eventType == wxEVT_MIDDLE_UP); }
     bool RightUp() const { return (m_eventType == wxEVT_RIGHT_UP); }
+    bool XButtonUp() const { return (m_eventType == wxEVT_XBUTTON_UP); }
 
     bool LeftDClick() const { return (m_eventType == wxEVT_LEFT_DCLICK); }
     bool MiddleDClick() const { return (m_eventType == wxEVT_MIDDLE_DCLICK); }
     bool RightDClick() const { return (m_eventType == wxEVT_RIGHT_DCLICK); }
+    bool XButtonDClick() const { return (m_eventType == wxEVT_XBUTTON_DCLICK); }
 
     // Find the current state of the mouse buttons (regardless
@@ -811,4 +826,6 @@
     bool MiddleIsDown() const { return m_middleDown; }
     bool RightIsDown() const { return m_rightDown; }
+    bool XButton1IsDown() const { return m_xbutton1Down; }
+    bool XButton2IsDown() const { return m_xbutton2Down; }
 
     // True if a button is down and the mouse is moving
@@ -890,4 +907,6 @@
     bool          m_middleDown;
     bool          m_rightDown;
+    bool          m_xbutton1Down;
+    bool          m_xbutton2Down;
 
     bool          m_controlDown;
@@ -2738,4 +2757,7 @@
 #define EVT_ENTER_WINDOW(func) wx__DECLARE_EVT0(wxEVT_ENTER_WINDOW, wxMouseEventHandler(func))
 #define EVT_MOUSEWHEEL(func) wx__DECLARE_EVT0(wxEVT_MOUSEWHEEL, wxMouseEventHandler(func))
+#define EVT_XBUTTON_DOWN(func) wx__DECLARE_EVT0(wxEVT_XBUTTON_DOWN, wxMouseEventHandler(func))
+#define EVT_XBUTTON_UP(func) wx__DECLARE_EVT0(wxEVT_XBUTTON_UP, wxMouseEventHandler(func))
+#define EVT_XBUTTON_DCLICK(func) wx__DECLARE_EVT0(wxEVT_XBUTTON_DCLICK, wxMouseEventHandler(func))
 
 // All mouse events

--- wxWidgets.orig/include/wx/msw/setup.h
+++ wxWidgets/include/wx/msw/setup.h
@@ -926,4 +926,7 @@
                                 // Include mouse wheel support
 
+#define wxUSE_MOUSEXBUTTON      1
+                                // Include mouse wheel support
+
 // ----------------------------------------------------------------------------
 // postscript support settings

--- wxWidgets.orig/src/common/event.cpp
+++ wxWidgets/src/common/event.cpp
@@ -209,4 +209,7 @@
 DEFINE_EVENT_TYPE(wxEVT_CHILD_FOCUS)
 DEFINE_EVENT_TYPE(wxEVT_MOUSEWHEEL)
+DEFINE_EVENT_TYPE(wxEVT_XBUTTON_DOWN)
+DEFINE_EVENT_TYPE(wxEVT_XBUTTON_UP)
+DEFINE_EVENT_TYPE(wxEVT_XBUTTON_DCLICK)
 
 // Non-client mouse events
@@ -223,4 +226,7 @@
 DEFINE_EVENT_TYPE(wxEVT_NC_MIDDLE_DCLICK)
 DEFINE_EVENT_TYPE(wxEVT_NC_RIGHT_DCLICK)
+DEFINE_EVENT_TYPE(wxEVT_NC_XBUTTON_DOWN)
+DEFINE_EVENT_TYPE(wxEVT_NC_XBUTTON_UP)
+DEFINE_EVENT_TYPE(wxEVT_NC_XBUTTON_DCLICK)
 
 // Character input event type
@@ -552,4 +558,6 @@
     m_rightDown = false;
     m_middleDown = false;
+    m_xbutton1Down = false;
+    m_xbutton2Down = false;
     m_x = 0;
     m_y = 0;
@@ -569,4 +577,6 @@
     m_middleDown = event.m_middleDown;
     m_rightDown = event.m_rightDown;
+    m_xbutton1Down = event.m_xbutton1Down;
+    m_xbutton2Down = event.m_xbutton2Down;
 
     m_controlDown = event.m_controlDown;

--- wxWidgets.orig/src/msw/window.cpp
+++ wxWidgets/src/msw/window.cpp
@@ -2509,4 +2509,9 @@
         case WM_MBUTTONUP:
         case WM_MBUTTONDBLCLK:
+#if wxUSE_MOUSEXBUTTON
+        case WM_XBUTTONDOWN:
+        case WM_XBUTTONUP:
+        case WM_XBUTTONDBLCLK:
+#endif // wxUSE_MOUSEXBUTTON
             {
 #ifdef __WXMICROWIN__
@@ -2574,4 +2579,20 @@
                 }
             }
+#if wxUSE_MOUSEXBUTTON
+            if ( WM_XBUTTONDOWN <= message && message <= WM_XBUTTONDBLCLK )
+            {
+                if ( processed )
+                {
+                    // From MSDN WM_XBUTTON*
+                    // Unlike the WM_LBUTTON*, WM_MBUTTON*, and WM_RBUTTON* messages, 
+                    // an application should return TRUE from this message if it processes it. 
+                    // Doing so will allow software that simulates this message on Microsoft 
+                    // Windows systems earlier than Windows 2000 to determine whether the 
+                    // window procedure processed the message or called DefWindowProc to 
+                    // process it.
+                    rc.result = TRUE;
+                }
+            }
+#endif // wxUSE_MOUSEXBUTTON
             break;
 
@@ -4489,4 +4510,6 @@
     event.m_middleDown = (flags & MK_MBUTTON) != 0;
     event.m_rightDown = (flags & MK_RBUTTON) != 0;
+    event.m_xbutton1Down = (flags & MK_XBUTTON1) != 0;
+    event.m_xbutton2Down = (flags & MK_XBUTTON2) != 0;
     event.m_altDown = ::GetKeyState(VK_MENU) < 0;
 
@@ -4588,5 +4611,11 @@
         wxEVT_MIDDLE_DOWN,
         wxEVT_MIDDLE_UP,
-        wxEVT_MIDDLE_DCLICK
+        wxEVT_MIDDLE_DCLICK,
+#if wxUSE_MOUSEXBUTTON
+        0, // WM_MOUSEWHEEL, handled elsewhere
+        wxEVT_XBUTTON_DOWN,
+        wxEVT_XBUTTON_UP,
+        wxEVT_XBUTTON_DCLICK
+#endif // wxUSE_MOUSEXBUTTON
     };
 
@@ -4646,5 +4675,6 @@
     if ( (m_lastMouseEvent == wxEVT_RIGHT_DOWN ||
           m_lastMouseEvent == wxEVT_LEFT_DOWN ||
-          m_lastMouseEvent == wxEVT_MIDDLE_DOWN) &&
+          m_lastMouseEvent == wxEVT_MIDDLE_DOWN ||
+          m_lastMouseEvent == wxEVT_XBUTTON_DOWN) &&
          (m_lastMouseX == x && m_lastMouseY == y) )
     {

 	  	 
