diff -bru /home/igor/wxWidgets/interface/wx/grid.h /mnt/win7/wxWidgets/interface/wx/grid.h
--- /home/igor/wxWidgets/interface/wx/grid.h	2012-09-13 10:38:28.000000000 -0700
+++ /mnt/win7/wxWidgets/interface/wx/grid.h	2012-09-15 23:31:04.754474700 -0700
@@ -1192,6 +1192,142 @@
 };
 
 /**
+ Message class for the grid table to send requests and notifications
+ to the grid view
+ This message must be sent to the grid with ProcessTableMessage() every time
+ the table changes, i.e. rows will be added/deleted in the table. This message
+ is a notification message and it does not result in the actual changes. They are
+ to notify the table that there will be changes and so the grid will have to be
+ updated.
+
+ Here are the events that can be used:
+    @beginEventTable{wxGridTableMessage}
+    @event{wxGRIDTABLE_REQUEST_VIEW_GET_VALUES}
+        Requests the value from the grid table
+    @event{wxGRIDTABLE_REQUEST_VIEW_SEND_VALUES}
+        Request to set the value into the table
+    @event{wxGRIDTABLE_NOTIFY_ROWS_INSERTED}
+        The rows is about to be inserted in the grid table
+    @event{wxGRIDTABLE_NOTIFY_ROWS_APPENDED}
+        The rows is about to be appended to the table
+    @event{wxGRIDTABLE_NOTIFY_ROWS_DELETED}
+        The rows is about to be deleted from the table
+    @event{wxGRIDTABLE_NOTIFY_COLS_INSERTED}
+        The columns is about to be inserted in the grid table
+    @event{wxGRIDTABLE_NOTIFY_COLS_APPENDED}
+        The columns is about to be appended to the grid table
+    @event{wxGRIDTABLE_NOTIFY_COLS_DELETED}
+        The columns is about to be deleted from the grid table
+    @endEventTable
+*/
+class wxGridTableMessage
+{
+public:
+    /**
+        Default constructor initializes the object to invalid state.
+     */
+    wxGridTableMessage();
+
+    /**
+        Constructor taking grid table and id
+
+		@param table
+            Pointer to the grid table
+		@param id
+            Identified of the object
+		@param comInt1
+            Position after which rows are inserted/deleted
+		@param comInt2
+            Number of rows to be inserted/deleted
+    */
+    wxGridTableMessage(wxGridTableBase *table, int id, int comInt1 = -1, int comInt2 = -1);
+
+    /**
+        Sets the table object
+    */
+    void SetTableObject( wxGridTableBase *table );
+
+    /**
+        Gets the table object
+    */
+    wxGridTableBase * GetTableObject() const;
+
+    /**
+        Sets an id
+    */
+    void SetId( int id );
+
+    /**
+        Gets an id
+    */
+    int  GetId();
+
+    /**
+        Set the position after which the insertion/deletion occur
+    */
+    void SetCommandInt( int comInt1 );
+
+    /**
+        Get the position after which the insertion/deletion occur
+    */
+    int  GetCommandInt();
+
+    /**
+        Set the number of rows to be inserted/deleted
+    */
+    void SetCommandInt2( int comInt2 );
+
+    /**
+        Get the number of rows to be inserted/deleted
+    */
+    int  GetCommandInt2();
+};
+
+
+/**
+ Simplest type of data table for a grid for small tables of strings
+ that are stored in memory
+ The methods in this class send wxGridTableMessage's to notify the table
+ about the changes in the grid.
+*/
+
+class wxGridStringTable
+{
+public:
+    /**
+        Default constructor initializes the object to invalid state.
+     */
+    wxGridStringTable();
+
+    /**
+        Constructor taking number of rows and columns
+     */
+    wxGridStringTable( int numRows, int numCols );
+
+    // these are pure virtual in wxGridTableBase
+    //
+    virtual int GetNumberRows();
+    virtual int GetNumberCols();
+    virtual wxString GetValue( int row, int col );
+    virtual void SetValue( int row, int col, const wxString& s );
+
+    // overridden functions from wxGridTableBase
+    //
+    void Clear();
+    bool InsertRows( size_t pos = 0, size_t numRows = 1 );
+    bool AppendRows( size_t numRows = 1 );
+    bool DeleteRows( size_t pos = 0, size_t numRows = 1 );
+    bool InsertCols( size_t pos = 0, size_t numCols = 1 );
+    bool AppendCols( size_t numCols = 1 );
+    bool DeleteCols( size_t pos = 0, size_t numCols = 1 );
+
+    void SetRowLabelValue( int row, const wxString& );
+    void SetColLabelValue( int col, const wxString& );
+    wxString GetRowLabelValue( int row );
+    wxString GetColLabelValue( int col );
+};
+
+/**
     Represents coordinates of a grid cell.
 
     An object of this class is simply a (row, column) pair.
