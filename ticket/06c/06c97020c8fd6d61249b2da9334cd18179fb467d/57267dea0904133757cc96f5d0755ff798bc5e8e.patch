Index: aui/auidemo.cpp
===================================================================
--- aui/auidemo.cpp	(revision 64305)
+++ aui/auidemo.cpp	(working copy)
@@ -102,6 +102,7 @@
         ID_NotebookArtSimple,
         ID_NotebookAlignTop,
         ID_NotebookAlignBottom,
+        ID_CreatePage,
 
         ID_SampleItem,
 
@@ -156,6 +157,7 @@
     void OnExit(wxCommandEvent& evt);
     void OnAbout(wxCommandEvent& evt);
     void OnTabAlignment(wxCommandEvent &evt);
+    void OnCreatePage(wxCommandEvent& evt);
 
     void OnGradient(wxCommandEvent& evt);
     void OnManagerFlag(wxCommandEvent& evt);
@@ -609,6 +611,7 @@
     EVT_MENU(ID_NotebookArtSimple, MyFrame::OnNotebookFlag)
     EVT_MENU(ID_NotebookAlignTop,     MyFrame::OnTabAlignment)
     EVT_MENU(ID_NotebookAlignBottom,  MyFrame::OnTabAlignment)
+    EVT_MENU(ID_CreatePage, MyFrame::OnCreatePage)      
     EVT_MENU(ID_NoGradient, MyFrame::OnGradient)
     EVT_MENU(ID_VerticalGradient, MyFrame::OnGradient)
     EVT_MENU(ID_HorizontalGradient, MyFrame::OnGradient)
@@ -684,7 +687,7 @@
     view_menu->Append(ID_CreateTree, _("Create Tree"));
     view_menu->Append(ID_CreateGrid, _("Create Grid"));
     view_menu->Append(ID_CreateNotebook, _("Create Notebook"));
-    view_menu->Append(ID_CreateSizeReport, _("Create Size Reporter"));
+    view_menu->Append(ID_CreateSizeReport, _("Create Size Reporter"));  
     view_menu->AppendSeparator();
     view_menu->Append(ID_GridContent, _("Use a Grid for the Content Pane"));
     view_menu->Append(ID_TextContent, _("Use a Text Control for the Content Pane"));
@@ -730,6 +733,7 @@
     notebook_menu->AppendCheckItem(ID_NotebookScrollButtons, _("Scroll Buttons Visible"));
     notebook_menu->AppendCheckItem(ID_NotebookWindowList, _("Window List Button Visible"));
     notebook_menu->AppendCheckItem(ID_NotebookTabFixedWidth, _("Fixed-width Tabs"));
+    notebook_menu->Append(ID_CreatePage, _("Create New Page"));
 
     m_perspectives_menu = new wxMenu;
     m_perspectives_menu->Append(ID_CreatePerspective, _("Create Perspective"));
@@ -1492,6 +1496,28 @@
     }
 }
 
+void MyFrame::OnCreatePage(wxCommandEvent & WXUNUSED(evt))
+{
+    Freeze();
+    
+    size_t i, count;
+    wxAuiPaneInfoArray& all_panes = m_mgr.GetAllPanes();
+    for (i = 0, count = all_panes.GetCount(); i < count; ++i)
+    {
+        wxAuiPaneInfo& pane = all_panes.Item(i);
+        if (pane.window->IsKindOf(CLASSINFO(wxAuiNotebook)))
+        {
+            wxAuiNotebook* nb = (wxAuiNotebook*)pane.window;
+            wxBitmap page_bmp = wxArtProvider::GetBitmap(wxART_NORMAL_FILE, wxART_OTHER, wxSize(16,16));
+            
+            nb->AddPage( new wxTextCtrl( nb, wxID_ANY, wxT("Some text"),
+                                           wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE|wxNO_BORDER) , wxT("Created Page"), false, page_bmp );
+        }
+    }
+
+    Thaw();
+}
+
 void MyFrame::OnExit(wxCommandEvent& WXUNUSED(event))
 {
     Close(true);
