--- D:/wxWidgets-3.0.0/samples/minimal/minimal.cpp	Sun Apr 13 09:17:24 2014
+++ D:/wxWidgets/samples/minimal/minimal_modified.cpp	Sun Apr 13 09:29:44 2014
@@ -4,7 +4,7 @@
 // Author:      Julian Smart
 // Modified by:
 // Created:     04/01/98
-// RCS-ID:      $Id$
+// RCS-ID:      $Id: minimal.cpp 76222 2014-03-30 07:07:55Z PC $
 // Copyright:   (c) Julian Smart
 // Licence:     wxWindows licence
 /////////////////////////////////////////////////////////////////////////////
@@ -29,6 +29,9 @@
 #ifndef WX_PRECOMP
     #include "wx/wx.h"
 #endif
+#include "wx/thread.h"
+#include "wx/listbox.h"
+#include "wx/textctrl.h"
 
 // ----------------------------------------------------------------------------
 // resources
@@ -54,7 +57,7 @@
     // this one is called on application startup and is a good place for the app
     // initialization (doing it here and not in the ctor allows to have an error
     // return: if OnInit() returns false, the application terminates)
-    virtual bool OnInit();
+    virtual bool OnInit();// wxOVERRIDE;
 };
 
 // Define a new frame type: this is going to be our main frame
@@ -67,12 +70,41 @@
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    void OnButtonClick(wxCommandEvent& event);
+
+    wxString value;
+    wxListBox* lb_WebSites;
+    wxTextCtrl* tb_Value;
+    wxButton* button;
 
 private:
     // any class wishing to process wxWidgets events must use this macro
-    DECLARE_EVENT_TABLE()
+    wxDECLARE_EVENT_TABLE();
+
+};
+
+class DataThread : public wxThread
+{
+  public:
+    MyFrame* PN;
+
+    DataThread(MyFrame* PN_) : wxThread(wxTHREAD_JOINABLE)
+    {
+        PN = PN_; 
+    }
+    
+    virtual void* Entry();
 };
 
+
+void* DataThread::Entry(void)
+{
+    PN->value = PN->lb_WebSites->GetString(0);
+    
+    return (void*) NULL;
+}
+
+
 // ----------------------------------------------------------------------------
 // constants
 // ----------------------------------------------------------------------------
@@ -89,6 +121,9 @@
     Minimal_About = wxID_ABOUT
 };
 
+#define ID_LISTBOX 10000
+#define ID_BUTTON  10001
+#define ID_TEXTCTRL 10002
 // ----------------------------------------------------------------------------
 // event tables and other macros for wxWidgets
 // ----------------------------------------------------------------------------
@@ -96,10 +131,11 @@
 // the event tables connect the wxWidgets events with the functions (event
 // handlers) which process them. It can be also done at run-time, but for the
 // simple menu events like this the static method is much simpler.
-BEGIN_EVENT_TABLE(MyFrame, wxFrame)
+wxBEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
-END_EVENT_TABLE()
+    EVT_BUTTON( ID_BUTTON, MyFrame::OnButtonClick )
+wxEND_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
 // the application object during program execution (it's better than using a
@@ -127,6 +163,24 @@
     // create the main application window
     MyFrame *frame = new MyFrame("Minimal wxWidgets App");
 
+    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
+    frame->SetSizer(itemBoxSizer2);
+
+    wxArrayString lb_WebSitesStrings;
+    lb_WebSitesStrings.Add(_("Line 0"));
+    lb_WebSitesStrings.Add(_("Line 1"));
+    lb_WebSitesStrings.Add(_("Line 2"));
+    frame->lb_WebSites = new wxListBox( frame, ID_LISTBOX, wxDefaultPosition, wxDefaultSize, lb_WebSitesStrings, wxLB_SINGLE );
+    itemBoxSizer2->Add(frame->lb_WebSites, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);
+
+    wxButton* itemButton4 = new wxButton( frame, ID_BUTTON, _("Button"), wxDefaultPosition, wxDefaultSize, 0 );
+    itemBoxSizer2->Add(itemButton4, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);
+
+    frame->tb_Value = new wxTextCtrl( frame, ID_TEXTCTRL, wxEmptyString, wxDefaultPosition, wxDefaultSize, 0 );
+    itemBoxSizer2->Add(frame->tb_Value, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);
+
+
+
     // and show it (the frames, unlike simple controls, are not shown when
     // created initially)
     frame->Show(true);
@@ -172,6 +226,7 @@
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+
 }
 
 
@@ -198,3 +253,21 @@
                  wxOK | wxICON_INFORMATION,
                  this);
 }
+
+void MyFrame::OnButtonClick(wxCommandEvent& event)
+{
+    tb_Value->Clear();
+    
+    DataThread*  thread2 = new DataThread(this);
+
+    if (thread2->Create() != wxTHREAD_NO_ERROR)
+    {
+      return;
+    }
+
+    thread2->Run();
+    thread2->Wait();
+    
+    tb_Value->SetValue(value);
+
+}
\ No newline at end of file
