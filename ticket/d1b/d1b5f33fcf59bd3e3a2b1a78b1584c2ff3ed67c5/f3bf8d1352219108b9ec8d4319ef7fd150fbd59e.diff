Index: samples/minimal/minimal.cpp
===================================================================
--- samples/minimal/minimal.cpp	(revision 50936)
+++ samples/minimal/minimal.cpp	(working copy)
@@ -67,7 +67,7 @@
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
-
+    void OnBuuton(wxCommandEvent& event);
 private:
     // any class wishing to process wxWidgets events must use this macro
     DECLARE_EVENT_TABLE()
@@ -86,7 +86,9 @@
     // it is important for the id corresponding to the "About" command to have
     // this standard value as otherwise it won't be handled properly under Mac
     // (where it is special and put into the "Apple" menu)
-    Minimal_About = wxID_ABOUT
+    Minimal_About = wxID_ABOUT,
+    
+    Minimal_Abtn = wxID_HIGHEST+1
 };
 
 // ----------------------------------------------------------------------------
@@ -99,6 +101,7 @@
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_BUTTON(Minimal_Abtn, MyFrame::OnBuuton)
 END_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -126,7 +129,7 @@
 
     // create the main application window
     MyFrame *frame = new MyFrame(_T("Minimal wxWidgets App"));
-
+    
     // and show it (the frames, unlike simple controls, are not shown when
     // created initially)
     frame->Show(true);
@@ -134,6 +137,7 @@
     // success: wxApp::OnRun() will be called which will enter the main message
     // loop and the application will run. If we returned false here, the
     // application would exit immediately.
+    
     return true;
 }
 
@@ -172,6 +176,17 @@
     CreateStatusBar(2);
     SetStatusText(_T("Welcome to wxWidgets!"));
 #endif // wxUSE_STATUSBAR
+
+    wxButton* btn = new wxButton(this, Minimal_Abtn, _("Acell = Control + S..."), wxPoint(20, 20), wxSize(100, 24) );
+    btn->Enable(false);
+    
+    wxAcceleratorEntry entries[1];
+    
+    entries[0].Set( wxACCEL_CTRL, (int) 'S', Minimal_Abtn);
+    
+    wxAcceleratorTable accel(1, entries);
+    SetAcceleratorTable(accel);
+
 }
 
 
@@ -197,3 +212,8 @@
                  wxOK | wxICON_INFORMATION,
                  this);
 }
+
+void MyFrame::OnBuuton(wxCommandEvent& event)
+{
+    wxMessageBox( _("Hello You shouldn't be here!"),  _("None Shall Pass!"), wxOK );
+}

 	  	 
