--- C:\wxWidgets-2.8.6\src\common\filename.cpp_old	Mon Aug 06 15:38:18 2007
+++ C:\wxWidgets-2.8.6\src\common\filename.cpp	Mon Feb 25 15:53:21 2008
@@ -2239,7 +2239,7 @@
     // Windows as CreateFile(GENERIC_READ) doesn't work for the directories and
     // CreateFile(FILE_FLAG_BACKUP_SEMANTICS) works -- but only under NT and
     // not 9x
-    bool ok;
+    bool ok = false;
     FILETIME ftAccess, ftCreate, ftWrite;
     if ( IsDir() ) 
     {
@@ -2257,14 +2257,32 @@
         wxFileHandle fh(GetFullPath(), wxFileHandle::Read);
         if ( fh.IsOk() )
         {
-            ok = ::GetFileTime(fh,
-                               dtCreate ? &ftCreate : NULL,
-                               dtAccess ? &ftAccess : NULL,
-                               dtMod ? &ftWrite : NULL) != 0;
-        }
-        else
-        {
-            ok = false;
+            BY_HANDLE_FILE_INFORMATION bhfi;
+            if (::GetFileInformationByHandle(fh, &bhfi))
+            {
+                // We don't use ConvertFileTimeToWx here because the initial
+                // conversion to localtime can mess up dst.
+                SYSTEMTIME st;
+                if ( dtCreate )
+                {
+                    ::FileTimeToSystemTime(&bhfi.ftCreationTime, &st);
+                    dtCreate->Set(st.wDay, wxDateTime::Month(st.wMonth - 1), st.wYear,
+                        st.wHour, st.wMinute, st.wSecond, st.wMilliseconds);
+                }
+                if ( dtAccess )
+                {
+                    ::FileTimeToSystemTime(&bhfi.ftLastAccessTime, &st);
+                    dtAccess->Set(st.wDay, wxDateTime::Month(st.wMonth - 1), st.wYear,
+                        st.wHour, st.wMinute, st.wSecond, st.wMilliseconds);
+                }
+                if ( dtMod )
+                {
+                    ::FileTimeToSystemTime(&bhfi.ftLastWriteTime, &st);
+                    dtMod->Set(st.wDay, wxDateTime::Month(st.wMonth - 1), st.wYear,
+                        st.wHour, st.wMinute, st.wSecond, st.wMilliseconds);
+                }
+                return true;
+            }
         }
     }
 

 	  	 
