Index: include/wx/dialog.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/dialog.h,v
retrieving revision 1.24
diff -u -r1.24 dialog.h
--- include/wx/dialog.h	2003/05/12 19:52:40	1.24
+++ include/wx/dialog.h	2003/05/16 13:31:07
@@ -35,11 +35,11 @@
     void SetReturnCode(int returnCode) { m_returnCode = returnCode; }
     int GetReturnCode() const { return m_returnCode; }
 
-#if wxUSE_STATTEXT && wxUSE_TEXTCTRL
+#if wxUSE_STATTEXT // && wxUSE_TEXTCTRL
     // splits text up at newlines and places the
     // lines into a vertical wxBoxSizer
     wxSizer *CreateTextSizer( const wxString &message );
-#endif // wxUSE_STATTEXT && wxUSE_TEXTCTRL
+#endif // wxUSE_STATTEXT // && wxUSE_TEXTCTRL
 
 #if wxUSE_BUTTON
     // places buttons into a horizontal wxBoxSizer
Index: include/wx/valtext.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/valtext.h,v
retrieving revision 1.13
diff -u -r1.13 valtext.h
--- include/wx/valtext.h	2003/03/17 10:33:32	1.13
+++ include/wx/valtext.h	2003/05/16 13:31:07
@@ -18,7 +18,7 @@
 
 #include "wx/defs.h"
 
-#if wxUSE_VALIDATORS
+#if wxUSE_VALIDATORS && wxUSE_TEXTCTRL
 
 #include "wx/textctrl.h"
 #include "wx/validate.h"
@@ -106,7 +106,7 @@
 };
 
 #endif
-  // wxUSE_VALIDATORS
+  // wxUSE_VALIDATORS && wxUSE_TEXTCTRL
 
 #endif
   // _WX_VALTEXTH__
Index: include/wx/generic/textdlgg.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/generic/textdlgg.h,v
retrieving revision 1.16
diff -u -r1.16 textdlgg.h
--- include/wx/generic/textdlgg.h	2003/03/17 10:33:44	1.16
+++ include/wx/generic/textdlgg.h	2003/05/16 13:31:07
@@ -16,6 +16,7 @@
     #pragma interface "textdlgg.h"
 #endif
 
+#if wxUSE_TEXTDLG
 #include "wx/defs.h"
 
 #include "wx/dialog.h"
@@ -88,5 +89,7 @@
                       const wxString& default_value = wxEmptyString,
                       wxWindow *parent = (wxWindow *) NULL);
 
+#endif
+    // wxUSE_TEXTDLG
 #endif
     // __TEXTDLGH_G__
Index: src/common/dlgcmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/dlgcmn.cpp,v
retrieving revision 1.23
diff -u -r1.23 dlgcmn.cpp
--- src/common/dlgcmn.cpp	2003/03/17 11:28:29	1.23
+++ src/common/dlgcmn.cpp	2003/05/16 13:31:33
@@ -67,7 +67,7 @@
 #endif
 }
 
-#if wxUSE_STATTEXT && wxUSE_TEXTCTRL
+#if wxUSE_STATTEXT // && wxUSE_TEXTCTRL
 
 wxSizer *wxDialogBase::CreateTextSizer( const wxString& message )
 {
@@ -164,7 +164,7 @@
     return box;
 }
 
-#endif // wxUSE_STATTEXT && wxUSE_TEXTCTRL
+#endif // wxUSE_STATTEXT // && wxUSE_TEXTCTRL
 
 #if wxUSE_BUTTON
 
Index: src/common/valgen.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/valgen.cpp,v
retrieving revision 1.21
diff -u -r1.21 valgen.cpp
--- src/common/valgen.cpp	2003/04/22 21:12:26	1.21
+++ src/common/valgen.cpp	2003/05/16 13:31:33
@@ -203,6 +203,7 @@
 #endif
 
     // string controls
+#if wxUSE_BUTTON
     if (m_validatorWindow->IsKindOf(CLASSINFO(wxButton)) )
     {
         wxButton* pControl = (wxButton*) m_validatorWindow;
@@ -212,6 +213,7 @@
             return TRUE;
         }
     } else
+#endif
 #if wxUSE_COMBOBOX
     if (m_validatorWindow->IsKindOf(CLASSINFO(wxComboBox)) )
     {
@@ -263,6 +265,7 @@
             return TRUE;
         }
     } else
+#if wxUSE_TEXTCTRL
     if (m_validatorWindow->IsKindOf(CLASSINFO(wxTextCtrl)) )
     {
         wxTextCtrl* pControl = (wxTextCtrl*) m_validatorWindow;
@@ -279,6 +282,7 @@
             return TRUE;
         }
     } else
+#endif
     // array controls
 #if wxUSE_CHECKLISTBOX && !defined(__WIN16__)
     // NOTE: wxCheckListBox is a wxListBox, so wxCheckListBox MUST come first:
@@ -428,6 +432,7 @@
   } else
 #endif
   // string controls
+#if wxUSE_BUTTON
   if (m_validatorWindow->IsKindOf(CLASSINFO(wxButton)) )
   {
     wxButton* pControl = (wxButton*) m_validatorWindow;
@@ -436,8 +441,8 @@
       *m_pString = pControl->GetLabel() ;
       return TRUE;
     }
-  }
-  else
+  } else
+#endif
 #if wxUSE_COMBOBOX
   if (m_validatorWindow->IsKindOf(CLASSINFO(wxComboBox)) )
   {
@@ -479,6 +484,7 @@
       return TRUE;
     }
   } else
+#if wxUSE_TEXTCTRL
   if (m_validatorWindow->IsKindOf(CLASSINFO(wxTextCtrl)) )
   {
     wxTextCtrl* pControl = (wxTextCtrl*) m_validatorWindow;
@@ -493,6 +499,7 @@
         return TRUE;
     }
   } else
+#endif
   // array controls
 #if wxUSE_CHECKLISTBOX
 #ifndef __WIN16__
Index: src/common/valtext.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/valtext.cpp,v
retrieving revision 1.33
diff -u -r1.33 valtext.cpp
--- src/common/valtext.cpp	2003/04/30 12:44:03	1.33
+++ src/common/valtext.cpp	2003/05/16 13:31:33
@@ -20,7 +20,7 @@
   #pragma hdrstop
 #endif
 
-#if wxUSE_VALIDATORS
+#if wxUSE_VALIDATORS && wxUSE_TEXTCTRL
 
 #ifndef WX_PRECOMP
   #include <stdio.h>
@@ -332,4 +332,4 @@
 }
 
 #endif
-  // wxUSE_VALIDATORS
+  // wxUSE_VALIDATORS && wxUSE_TEXTCTRL
Index: src/generic/mdig.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/generic/mdig.cpp,v
retrieving revision 1.4
diff -u -r1.4 mdig.cpp
--- src/generic/mdig.cpp	2003/03/17 11:47:55	1.4
+++ src/generic/mdig.cpp	2003/05/16 13:31:34
@@ -51,7 +51,9 @@
 IMPLEMENT_DYNAMIC_CLASS(wxGenericMDIParentFrame, wxFrame)
 
 BEGIN_EVENT_TABLE(wxGenericMDIParentFrame, wxFrame)
+#if wxUSE_MENUS
     EVT_MENU (-1, wxGenericMDIParentFrame::DoHandleMenu)
+#endif
 END_EVENT_TABLE()
 
 wxGenericMDIParentFrame::wxGenericMDIParentFrame()
Index: src/generic/msgdlgg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/generic/msgdlgg.cpp,v
retrieving revision 1.36
diff -u -r1.36 msgdlgg.cpp
--- src/generic/msgdlgg.cpp	2003/03/17 11:47:55	1.36
+++ src/generic/msgdlgg.cpp	2003/05/16 13:31:34
@@ -99,15 +99,19 @@
                 bitmap = wxArtProvider::GetIcon(wxART_QUESTION, wxART_MESSAGE_BOX);
                 break;
         }
+#if wxUSE_STATIC_BITMAP
         wxStaticBitmap *icon = new wxStaticBitmap(this, -1, bitmap);
         if (is_pda)
             topsizer->Add( icon, 0, wxTOP|wxLEFT|wxRIGHT | wxALIGN_LEFT, 10 );
         else
             icon_text->Add( icon, 0, wxCENTER );
+#endif
     }
 
     // 2) text
+#if wxUSE_STATTEXT // && wxUSE_TEXTCTRL
     icon_text->Add( CreateTextSizer( message ), 0, wxCENTER | wxLEFT, 10 );
+#endif
 
     topsizer->Add( icon_text, 1, wxCENTER | wxLEFT|wxRIGHT|wxTOP, 10 );
 
@@ -117,7 +121,9 @@
 #endif
 
     // 4) buttons
+#if wxUSE_BUTTON
     topsizer->Add( CreateButtonSizer( style ), 0, wxCENTRE | wxALL, 10 );
+ #endif
 
     SetAutoLayout( TRUE );
     SetSizer( topsizer );
Index: src/generic/splitter.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/generic/splitter.cpp,v
retrieving revision 1.78
diff -u -r1.78 splitter.cpp
--- src/generic/splitter.cpp	2003/05/06 07:20:14	1.78
+++ src/generic/splitter.cpp	2003/05/16 13:31:34
@@ -16,6 +16,7 @@
 // For compilers that support precompilation, includes "wx.h".
 #include "wx/wxprec.h"
 
+#if wxUSE_SPLITTER
 #ifdef __BORLANDC__
     #pragma hdrstop
 #endif
@@ -1093,5 +1094,6 @@
     //else: do nothing, in particular, don't call Skip()
 }
 
+#endif // wxUSE_SPLITTER
 #endif // wxMSW
 
Index: src/generic/statline.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/generic/statline.cpp,v
retrieving revision 1.7
diff -u -r1.7 statline.cpp
--- src/generic/statline.cpp	2002/07/29 21:05:43	1.7
+++ src/generic/statline.cpp	2003/05/16 13:31:34
@@ -20,6 +20,7 @@
     #pragma implementation "statline.h"
 #endif
 
+#if wxUSE_STATLINE
 // For compilers that support precompilation, includes "wx.h".
 #include "wx/wxprec.h"
 
@@ -75,3 +76,6 @@
 {
     m_statbox->SetSize(x, y, width, height);
 }
+
+#endif
+  // wxUSE_STATLINE

 	  	 
