Index: graphics.cpp
===================================================================
--- graphics.cpp	(revision 72537)
+++ graphics.cpp	(working copy)
@@ -78,37 +78,18 @@
     return Color(col.Alpha(), col.Red(), col.Green(), col.Blue());
 }
 
-// Do not use this pointer directly, it's only used by
-// GetDrawTextStringFormat() and the cleanup code in wxGDIPlusRendererModule.
-StringFormat* gs_drawTextStringFormat = NULL;
-
 // Get the string format used for the text drawing and measuring functions:
 // notice that it must be the same one for all of them, otherwise the drawn
 // text might be of different size than what measuring it returned.
-inline StringFormat* GetDrawTextStringFormat()
+static inline const StringFormat* GetDrawTextStringFormat()
 {
-    if ( !gs_drawTextStringFormat )
-    {
-        // We create this string format with exactly the same flags as
-        // StringFormat::GenericTypographic() is documented to use in MSDN
-        // except for the last one which doesn't make any difference for
-        // DrawText() but that we do want to use when measuring text.
-        //
-        // The reason for not just using GenericTypographic itself is that it
-        // does something else (what exactly is unfortunately not documented),
-        // which results in string being displayed quite differently from the
-        // default rendering, see #14537.
-        gs_drawTextStringFormat
-            = new StringFormat
-                  (
-                    StringFormatFlagsLineLimit |
-                    StringFormatFlagsNoClip |
-                    StringFormatFlagsNoFitBlackBox |
-                    StringFormatFlagsMeasureTrailingSpaces
-                  );
-    }
-
-    return gs_drawTextStringFormat;
+	// revised to use GenericTypographic() so that
+	// behavior of wxGCDC matches that of wxDC when
+	// calculating text extents and then drawing the string
+	// Otherwise, GetTextExtent() returns too much extra space
+	// and it is impossible to do complex text layout using wxGCDC.
+	// associated with wxTrac #14537
+	return StringFormat::GenericTypographic();
 }
 
 } // anonymous namespace
@@ -2294,8 +2275,6 @@
     virtual bool OnInit() { return true; }
     virtual void OnExit()
     {
-        wxDELETE(gs_drawTextStringFormat);
-
         gs_GDIPlusRenderer.Unload();
     }
 
