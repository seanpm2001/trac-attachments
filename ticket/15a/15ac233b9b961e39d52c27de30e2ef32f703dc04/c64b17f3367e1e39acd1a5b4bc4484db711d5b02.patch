? GridLines2.patch
Index: docs/latex/wx/grid.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/grid.tex,v
retrieving revision 1.32
diff -u -r1.32 grid.tex
--- docs/latex/wx/grid.tex	2006/02/11 12:05:52	1.32
+++ docs/latex/wx/grid.tex	2006/05/29 10:01:46
@@ -802,7 +802,56 @@
 
 \func{wxColour}{GetGridLineColour}{\void}
 
-Returns the colour used for grid lines.
+Returns the colour used for grid lines, unless 
+\helpref{GetDefaultGridLinePen()}{wxgridgetdefaultgridlinepen},
+\helpref{GetColGridLinePen()}{wxgridgetcolgridlinepen}, or
+\helpref{GetRowGridLinePen()}{wxgridgetrowgridlinepen} are overridden
+
+
+
+
+\membersection{wxGrid::GetDefaultGridLinePen}\label{wxgridgetdefaultgridlinepen}
+
+\func{wxPen}{GetDefaultGridLinePen}{\void}
+
+Returns the pen used for grid lines. This virtual function is also used for the actual drawing of gridlines, 
+and may be overridden in derived classes in order to change the appearance of gridlines. Note that 
+wxGrid is not (yet) able to adapt the size of cells automatically to accomodate gridlines wider than 1.
+
+
+
+\membersection{wxGrid::GetRowGridLinePen}\label{wxgridgetrowgridlinepen}
+
+\func{wxPen}{GetRowGridLinePen}{\param{int }{row}}
+
+Returns the pen used for horizontal grid lines. This virtual function is also used for the actual drawing of gridlines, 
+and may be overridden in derived classes in order to change the appearance of gridlines. The function defines the pen 
+used to draw the line below the given row. Example: \\
+\\
+\begin{verbatim}
+
+   // use a black pen between octaves, C0=row 127, C1=row 115 etc.
+   wxPen MidiGrid::GetRowGridLinePen(int row)
+   {
+       if(row%12==7) 
+          return wxPen(*wxBLACK, 1, wxSOLID);
+       else 
+          return GetDefaultGridLinePen();
+   }
+
+\end{verbatim}
+
+
+
+\membersection{wxGrid::GetColGridLinePen}\label{wxgridgetcolgridlinepen}
+
+\func{wxPen}{GetColGridLinePen}{\param{int }{col}}
+
+Returns the pen used for vertical grid lines. This virtual function is also used for the actual drawing of gridlines, 
+and may be overridden in derived classes in order to change the appearance of gridlines. The function defines the pen 
+used to draw the line to the right of the given column. 
+Example: see \helpref{GetRowGridLinePen()}{wxgridgetrowgridlinepen}
+
 
 
 
Index: include/wx/generic/grid.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/generic/grid.h,v
retrieving revision 1.152
diff -u -r1.152 grid.h
--- include/wx/generic/grid.h	2006/04/09 00:09:35	1.152
+++ include/wx/generic/grid.h	2006/05/29 10:01:50
@@ -1281,6 +1281,11 @@
     wxString GetRowLabelValue( int row );
     wxString GetColLabelValue( int col );
     wxColour GetGridLineColour() { return m_gridLineColour; }
+    // these wxPen() functions may be overridden 
+    // for individual setting of gridline properties for rows/columns
+    virtual wxPen GetDefaultGridLinePen();
+    virtual wxPen GetRowGridLinePen(int row);
+    virtual wxPen GetColGridLinePen(int col);
     wxColour GetCellHighlightColour() { return m_cellHighlightColour; }
     int      GetCellHighlightPenWidth() { return m_cellHighlightPenWidth; }
     int      GetCellHighlightROPenWidth() { return m_cellHighlightROPenWidth; }
Index: samples/grid/griddemo.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/grid/griddemo.cpp,v
retrieving revision 1.17
diff -u -r1.17 griddemo.cpp
--- samples/grid/griddemo.cpp	2006/01/07 00:31:32	1.17
+++ samples/grid/griddemo.cpp	2006/05/29 10:01:56
@@ -887,8 +887,8 @@
                     single = _T("column");
                 }
 
-                const wxArrayInt sels(rows ? grid->GetSelectedRows()
-                                           : grid->GetSelectedCols());
+                const wxArrayInt sels=rows ? grid->GetSelectedRows()
+                                           : grid->GetSelectedCols();
                 size_t count = sels.size();
                 wxLogMessage(_T("%lu %s selected:"),
                              (unsigned long)count, plural);
Index: src/generic/grid.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/grid.cpp,v
retrieving revision 1.378
diff -u -r1.378 grid.cpp
--- src/generic/grid.cpp	2006/05/23 02:17:39	1.378
+++ src/generic/grid.cpp	2006/05/29 10:02:12
@@ -7220,6 +7220,23 @@
 #endif
 }
 
+// these virtual functions may be overridden by user
+// for individual setting of gridline properties for rows/columns
+wxPen wxGrid::GetDefaultGridLinePen()
+{
+    return wxPen(GetGridLineColour(), 1, wxSOLID);
+}
+
+wxPen wxGrid::GetRowGridLinePen(int WXUNUSED(row))
+{
+    return GetDefaultGridLinePen();
+}
+
+wxPen wxGrid::GetColGridLinePen(int WXUNUSED(col))
+{
+    return GetDefaultGridLinePen();
+}
+
 void wxGrid::DrawCellBorder( wxDC& dc, const wxGridCellCoords& coords )
 {
     int row = coords.GetRow();
@@ -7227,15 +7244,16 @@
     if ( GetColWidth(col) <= 0 || GetRowHeight(row) <= 0 )
         return;
 
-    dc.SetPen( wxPen(GetGridLineColour(), 1, wxSOLID) );
 
     wxRect rect = CellToRect( row, col );
 
     // right hand border
+    dc.SetPen( GetColGridLinePen(col) );
     dc.DrawLine( rect.x + rect.width, rect.y,
                  rect.x + rect.width, rect.y + rect.height + 1 );
 
     // bottom border
+    dc.SetPen( GetRowGridLinePen(row) );
     dc.DrawLine( rect.x, rect.y + rect.height,
                  rect.x + rect.width, rect.y + rect.height);
 }
@@ -7377,7 +7395,6 @@
 
     dc.SetClippingRegion( clippedcells );
 
-    dc.SetPen( wxPen(GetGridLineColour(), 1, wxSOLID) );
 
     // horizontal grid lines
     //
@@ -7393,6 +7410,7 @@
 
         if ( bot >= top )
         {
+            dc.SetPen( GetRowGridLinePen(i) );
             dc.DrawLine( left, bot, right, bot );
         }
     }
@@ -7409,6 +7427,7 @@
 
         if ( colRight >= left )
         {
+            dc.SetPen( GetColGridLinePen(i) );
             dc.DrawLine( colRight, top, colRight, bottom );
         }
     }

 	  	 
