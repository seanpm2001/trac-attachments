diff -bru wxWidgets/samples/console/console.cpp wxWidgets.orig/samples/console/console.cpp
--- wxWidgets/samples/console/console.cpp	2014-08-11 15:12:10.000000000 -0700
+++ wxWidgets.orig/samples/console/console.cpp	2014-08-11 14:56:12.000000000 -0700
@@ -30,6 +30,8 @@
 #endif
 
 #include <wx/app.h>
+#include <wx/protocol/ftp.h>
+#include <wx/wfstream.h>
 #include <wx/cmdline.h>
 
 // ============================================================================
@@ -56,7 +58,57 @@
         fprintf(stderr, "Failed to initialize the wxWidgets library, aborting.");
         return -1;
     }
-
+    wxFTP ftp;
+    if( !ftp.Connect( "ftp.wxwidgets.org" ) )
+    {
+        fprintf( stderr, "Failed to connect." );
+        return -1;
+    }
+    bool res;
+    res = ftp.ChDir( "/pub/2.8.9" );
+    if( !res )
+    {
+        fprintf( stderr, "Failed to change directory" );
+        return -1;
+    }
+    ftp.SetBinary();
+    const char *filename = "wxWidgets-2.8.9.tar.bz2";
+    int size = ftp.GetFileSize( filename );
+    if( size == -1 )
+    {
+        fprintf( stderr, "Can't get the file size" );
+        return -1;
+    }
+    wxInputStream *in = ftp.GetInputStream( filename );
+    if( !in )
+    {
+        fprintf( stderr, "Can't get the input stream" );
+        return -1;
+    }
+    else
+    {
+        char *data = new char[2048];
+        int size = 0;
+        wxOutputStream *out = new wxFileOutputStream( "test" );
+        printf( "Starting the download...\r\n" );
+        while( !in->Eof() )
+        {
+            in->Read( data, 2048 );
+            out->Write( data, 2048 );
+            if( out->LastWrite() != 2048 )
+                break;
+            size += 2048;
+            printf( "%d bytes read and written\r\n", size );
+        }
+        delete[] data;
+        delete in;
+        res = ftp.ChDir( "/pub/2.8.8" );
+        if( !res )
+        {
+            fprintf( stderr, "Can't change directory" );
+            return -1;
+        }
+    }
     wxCmdLineParser parser(cmdLineDesc, argc, argv);
     switch ( parser.Parse() )
     {
