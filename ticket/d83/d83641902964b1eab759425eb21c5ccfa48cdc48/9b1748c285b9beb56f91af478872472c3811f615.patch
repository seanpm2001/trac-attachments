diff -uNr wxWidgets-3.1.0-orig/include/wx/dataview.h wxWidgets-3.1.0-mine/include/wx/dataview.h
--- wxWidgets-3.1.0-orig/include/wx/dataview.h	2016-02-28 22:33:37.000000000 +0100
+++ wxWidgets-3.1.0-mine/include/wx/dataview.h	2016-04-17 19:52:18.000000000 +0200
@@ -681,6 +681,9 @@
     wxDataViewItem GetCurrentItem() const;
     void SetCurrentItem(const wxDataViewItem& item);
 
+    virtual wxDataViewItem GetTopItem() const { return wxDataViewItem(0); }
+    virtual int GetCountPerPage() const { return wxNOT_FOUND; }
+    
     // Currently focused column of the current item or NULL if no column has focus
     virtual wxDataViewColumn *GetCurrentColumn() const = 0;
 
diff -uNr wxWidgets-3.1.0-orig/include/wx/generic/dataview.h wxWidgets-3.1.0-mine/include/wx/generic/dataview.h
--- wxWidgets-3.1.0-orig/include/wx/generic/dataview.h	2016-02-28 22:33:37.000000000 +0100
+++ wxWidgets-3.1.0-mine/include/wx/generic/dataview.h	2016-04-17 14:38:26.000000000 +0200
@@ -157,6 +157,9 @@
     virtual wxDataViewColumn *GetSortingColumn() const;
     virtual wxVector<wxDataViewColumn *> GetSortingColumns() const;
 
+    virtual wxDataViewItem GetTopItem() const;
+    virtual int GetCountPerPage() const;
+    
     virtual int GetSelectedItemsCount() const;
     virtual int GetSelections( wxDataViewItemArray & sel ) const;
     virtual void SetSelections( const wxDataViewItemArray & sel );
diff -uNr wxWidgets-3.1.0-orig/include/wx/gtk/dataview.h wxWidgets-3.1.0-mine/include/wx/gtk/dataview.h
--- wxWidgets-3.1.0-orig/include/wx/gtk/dataview.h	2016-02-28 22:33:37.000000000 +0100
+++ wxWidgets-3.1.0-mine/include/wx/gtk/dataview.h	2016-04-17 18:21:39.000000000 +0200
@@ -170,6 +170,9 @@
 
     virtual wxDataViewColumn *GetCurrentColumn() const wxOVERRIDE;
 
+    virtual wxDataViewItem GetTopItem() const wxOVERRIDE;
+    virtual int GetCountPerPage() const wxOVERRIDE;
+        
     static wxVisualAttributes
     GetClassDefaultAttributes(wxWindowVariant variant = wxWINDOW_VARIANT_NORMAL);
 
diff -uNr wxWidgets-3.1.0-orig/include/wx/osx/cocoa/dataview.h wxWidgets-3.1.0-mine/include/wx/osx/cocoa/dataview.h
--- wxWidgets-3.1.0-orig/include/wx/osx/cocoa/dataview.h	2016-02-28 22:33:37.000000000 +0100
+++ wxWidgets-3.1.0-mine/include/wx/osx/cocoa/dataview.h	2016-04-17 18:01:58.000000000 +0200
@@ -449,8 +449,10 @@
                                wxDataViewColumn const* columnPtr);
     virtual void Expand(const wxDataViewItem& item);
     virtual unsigned int GetCount() const;
+    virtual int GetCountPerPage() const;
     virtual wxRect GetRectangle(const wxDataViewItem& item,
                                 wxDataViewColumn const* columnPtr);
+    virtual wxDataViewItem GetTopItem() const;
     virtual bool IsExpanded(const wxDataViewItem& item) const;
     virtual bool Reload();
     virtual bool Remove(const wxDataViewItem& parent,
diff -uNr wxWidgets-3.1.0-orig/include/wx/osx/core/dataview.h wxWidgets-3.1.0-mine/include/wx/osx/core/dataview.h
--- wxWidgets-3.1.0-orig/include/wx/osx/core/dataview.h	2016-02-28 22:33:37.000000000 +0100
+++ wxWidgets-3.1.0-mine/include/wx/osx/core/dataview.h	2016-04-17 20:29:12.659943962 +0200
@@ -58,20 +58,22 @@
  //
  // item related methods
  //
-  virtual bool         Add          (wxDataViewItem const& parent, wxDataViewItem const& item)       = 0; // adds an item to the native control
-  virtual bool         Add          (wxDataViewItem const& parent, wxDataViewItemArray const& itesm) = 0; // adds a items to the native control
-  virtual void         Collapse     (wxDataViewItem const& item)                                     = 0; // collapses the passed item in the native control
-  virtual void         EnsureVisible(wxDataViewItem const& item, wxDataViewColumn const* columnPtr)  = 0; // ensures that the passed item's value in the passed column is visible (column pointer can be NULL)
-  virtual void         Expand       (wxDataViewItem const& item)                                     = 0; // expands the passed item in the native control
-  virtual unsigned int GetCount     (void) const                                                     = 0; // returns the number of items in the native control
-  virtual wxRect       GetRectangle (wxDataViewItem const& item, wxDataViewColumn const* columnPtr)  = 0; // returns the rectangle that is used by the passed item and column in the native control
-  virtual bool         IsExpanded   (wxDataViewItem const& item) const                               = 0; // checks if the passed item is expanded in the native control
-  virtual bool         Reload       (void)                                                           = 0; // clears the native control and reloads all data
-  virtual bool         Remove       (wxDataViewItem const& parent, wxDataViewItem const& item)       = 0; // removes an item from the native control
-  virtual bool         Remove       (wxDataViewItem const& parent, wxDataViewItemArray const& item)  = 0; // removes items from the native control
-  virtual bool         Update       (wxDataViewColumn const* columnPtr)                              = 0; // updates the items in the passed column of the native control
-  virtual bool         Update       (wxDataViewItem const& parent, wxDataViewItem const& item)       = 0; // updates the passed item in the native control
-  virtual bool         Update       (wxDataViewItem const& parent, wxDataViewItemArray const& items) = 0; // updates the passed items in the native control
+  virtual bool           Add            (wxDataViewItem const& parent, wxDataViewItem const& item)       = 0; // adds an item to the native control
+  virtual bool           Add            (wxDataViewItem const& parent, wxDataViewItemArray const& itesm) = 0; // adds a items to the native control
+  virtual void           Collapse       (wxDataViewItem const& item)                                     = 0; // collapses the passed item in the native control
+  virtual void           EnsureVisible  (wxDataViewItem const& item, wxDataViewColumn const* columnPtr)  = 0; // ensures that the passed item's value in the passed column is visible (column pointer can be NULL)
+  virtual void           Expand         (wxDataViewItem const& item)                                     = 0; // expands the passed item in the native control
+  virtual unsigned int   GetCount       (void) const                                                     = 0; // returns the number of items in the native control
+  virtual int            GetCountPerPage(void) const                                                     = 0; // get number of items that fit into a single page
+  virtual wxRect         GetRectangle   (wxDataViewItem const& item, wxDataViewColumn const* columnPtr)  = 0; // returns the rectangle that is used by the passed item and column in the native control
+  virtual wxDataViewItem GetTopItem     (void) const                                                     = 0; // get top-most visible item
+  virtual bool           IsExpanded     (wxDataViewItem const& item) const                               = 0; // checks if the passed item is expanded in the native control
+  virtual bool           Reload         (void)                                                           = 0; // clears the native control and reloads all data
+  virtual bool           Remove         (wxDataViewItem const& parent, wxDataViewItem const& item)       = 0; // removes an item from the native control
+  virtual bool           Remove         (wxDataViewItem const& parent, wxDataViewItemArray const& item)  = 0; // removes items from the native control
+  virtual bool           Update         (wxDataViewColumn const* columnPtr)                              = 0; // updates the items in the passed column of the native control
+  virtual bool           Update         (wxDataViewItem const& parent, wxDataViewItem const& item)       = 0; // updates the passed item in the native control
+  virtual bool           Update         (wxDataViewItem const& parent, wxDataViewItemArray const& items) = 0; // updates the passed items in the native control
 
  //
  // model related methods
diff -uNr wxWidgets-3.1.0-orig/include/wx/osx/dataview.h wxWidgets-3.1.0-mine/include/wx/osx/dataview.h
--- wxWidgets-3.1.0-orig/include/wx/osx/dataview.h	2016-02-28 22:33:37.000000000 +0100
+++ wxWidgets-3.1.0-mine/include/wx/osx/dataview.h	2016-04-17 16:22:01.000000000 +0200
@@ -173,11 +173,13 @@
   virtual bool IsExpanded(const wxDataViewItem & item) const wxOVERRIDE;
 
   virtual unsigned int GetCount() const;
+  virtual int GetCountPerPage() const;
   virtual wxRect GetItemRect(const wxDataViewItem& item,
                              const wxDataViewColumn* columnPtr = NULL) const wxOVERRIDE;
   virtual int GetSelectedItemsCount() const wxOVERRIDE;
   virtual int GetSelections(wxDataViewItemArray& sel) const wxOVERRIDE;
-
+  virtual wxDataViewItem GetTopItem() const;
+        
   virtual void HitTest(const wxPoint& point, wxDataViewItem& item, wxDataViewColumn*& columnPtr) const wxOVERRIDE;
 
   virtual bool IsSelected(const wxDataViewItem& item) const wxOVERRIDE;
diff -uNr wxWidgets-3.1.0-orig/interface/wx/dataview.h wxWidgets-3.1.0-mine/interface/wx/dataview.h
--- wxWidgets-3.1.0-orig/interface/wx/dataview.h	2016-02-28 22:33:37.000000000 +0100
+++ wxWidgets-3.1.0-mine/interface/wx/dataview.h	2016-04-17 19:50:04.000000000 +0200
@@ -1565,6 +1565,26 @@
         @since 3.1.0
     */
     virtual void ToggleSortByColumn(int column);
+    
+    /**
+        Return the number of items that can fit vertically in the visible area of
+        the control.
+
+        Returns -1 if the number of items per page couldn't be determined.
+
+        @since 3.1.1
+    */
+    int GetCountPerPage() const;
+
+    /**
+        Return the topmost visible item.
+
+        Returns an invalid item if there is no topmost visible item or if the method
+        is not implemented for the current platform.
+
+        @since 3.1.1
+    */
+    wxDataViewItem GetTopItem() const;        
 };
 
 
diff -uNr wxWidgets-3.1.0-orig/src/generic/datavgen.cpp wxWidgets-3.1.0-mine/src/generic/datavgen.cpp
--- wxWidgets-3.1.0-orig/src/generic/datavgen.cpp	2016-02-28 22:33:37.000000000 +0100
+++ wxWidgets-3.1.0-mine/src/generic/datavgen.cpp	2016-04-17 15:07:03.000000000 +0200
@@ -731,7 +731,8 @@
     int GetCountPerPage() const;
     int GetEndOfLastCol() const;
     unsigned int GetFirstVisibleRow() const;
-
+    wxDataViewItem GetTopItem() const;
+    
     // I change this method to un const because in the tree view,
     // the displaying number of the tree are changing along with the
     // expanding/collapsing of the tree nodes
@@ -2684,6 +2685,27 @@
     return size.y / m_lineHeight;
 }
 
+wxDataViewItem wxDataViewMainWindow::GetTopItem() const
+{
+    unsigned int item = GetFirstVisibleRow();	
+    wxDataViewTreeNode *node = NULL;
+    wxDataViewItem dataitem;
+
+    if (!IsVirtualList())
+    {
+        node = GetTreeNodeByRow(item);
+        if( node == NULL ) return wxDataViewItem(0);
+        	
+        dataitem = node->GetItem();
+    }
+    else
+    {
+        dataitem = wxDataViewItem( wxUIntToPtr(item+1) );
+    }	
+    
+    return dataitem;
+}	
+	
 int wxDataViewMainWindow::GetEndOfLastCol() const
 {
     int width = 0;
@@ -5169,6 +5191,16 @@
     return m_clientArea->GetSelections().GetSelectedCount();
 }
 
+wxDataViewItem wxDataViewCtrl::GetTopItem() const
+{
+    return m_clientArea->GetTopItem();
+}
+		
+int wxDataViewCtrl::GetCountPerPage() const
+{
+    return m_clientArea->GetCountPerPage();
+}		
+    
 int wxDataViewCtrl::GetSelections( wxDataViewItemArray & sel ) const
 {
     sel.Empty();
diff -uNr wxWidgets-3.1.0-orig/src/gtk/dataview.cpp wxWidgets-3.1.0-mine/src/gtk/dataview.cpp
--- wxWidgets-3.1.0-orig/src/gtk/dataview.cpp	2016-02-28 22:33:37.000000000 +0100
+++ wxWidgets-3.1.0-mine/src/gtk/dataview.cpp	2016-04-17 20:28:46.675942949 +0200
@@ -4929,6 +4929,59 @@
     gtk_tree_view_set_cursor(GTK_TREE_VIEW(m_treeview), path, NULL, FALSE);
 }
 
+wxDataViewItem wxDataViewCtrl::GetTopItem() const
+{
+    GtkTreePath *start;
+    wxDataViewItem item;
+   
+    if(gtk_tree_view_get_visible_range(GTK_TREE_VIEW(m_treeview), &start, NULL))
+    {
+        item = GTKPathToItem(start);
+        gtk_tree_path_free(start);
+    }
+    else
+    {
+	item = wxDataViewItem(0);
+    }	
+	   
+    return item;		
+}
+
+int wxDataViewCtrl::GetCountPerPage() const
+{
+    GtkTreePath *path;
+    GtkTreeViewColumn *column;
+    int lineheight;
+    GdkRectangle vis;
+    
+    gtk_tree_view_get_visible_rect(GTK_TREE_VIEW(m_treeview), &vis);
+    
+    if(gtk_tree_view_get_path_at_pos(GTK_TREE_VIEW(m_treeview), 0, 0, &path, &column, NULL, NULL))
+    {
+        GdkRectangle rect;
+	
+        gtk_tree_view_get_cell_area(GTK_TREE_VIEW(m_treeview), path, column, &rect);
+	
+        lineheight = rect.height;
+
+        gtk_tree_path_free(path);
+    }
+    else
+    {
+        wxDataViewCtrl *self = wxConstCast(this, wxDataViewCtrl);
+
+        wxClientDC dc( self );
+        dc.SetFont( GetFont() );
+ 
+        wxCoord y;
+        dc.GetTextExtent(wxT("H"), NULL, &y);
+ 	
+        lineheight = y + 6;
+    }
+    
+    return vis.height / lineheight;	
+}    
+      
 wxDataViewColumn *wxDataViewCtrl::GetCurrentColumn() const
 {
     // The tree doesn't have any current item if it hadn't been created yet but
diff -uNr wxWidgets-3.1.0-orig/src/osx/cocoa/dataview.mm wxWidgets-3.1.0-mine/src/osx/cocoa/dataview.mm
--- wxWidgets-3.1.0-orig/src/osx/cocoa/dataview.mm	2016-02-28 22:33:37.000000000 +0100
+++ wxWidgets-3.1.0-mine/src/osx/cocoa/dataview.mm	2016-04-17 18:03:23.000000000 +0200
@@ -2233,6 +2233,25 @@
     return [m_OutlineView numberOfRows];
 }
 
+int wxCocoaDataViewControl::GetCountPerPage() const
+{
+    NSScrollView *scrollView = [m_OutlineView enclosingScrollView];
+    NSTableHeaderView *headerView = [m_OutlineView headerView];
+    NSRect visibleRect = scrollView.contentView.visibleRect;
+    if(headerView) visibleRect.size.height -= headerView.visibleRect.size.height;
+    return (int) (visibleRect.size.height / [m_OutlineView rowHeight]);
+}
+
+wxDataViewItem wxCocoaDataViewControl::GetTopItem() const
+{
+    NSScrollView *scrollView = [m_OutlineView enclosingScrollView];
+    NSTableHeaderView *headerView = [m_OutlineView headerView];
+    NSRect visibleRect = scrollView.contentView.visibleRect;
+    if(headerView) visibleRect.origin.y += headerView.visibleRect.size.height;
+    NSRange range = [m_OutlineView rowsInRect:visibleRect];
+    return wxDataViewItem([[m_OutlineView itemAtRow:range.location] pointer]);
+}
+
 wxRect wxCocoaDataViewControl::GetRectangle(const wxDataViewItem& item, const wxDataViewColumn *columnPtr)
 {
     return wxFromNSRect([m_osxView superview],[m_OutlineView frameOfCellAtColumn:GetColumnPosition(columnPtr)
diff -uNr wxWidgets-3.1.0-orig/src/osx/dataview_osx.cpp wxWidgets-3.1.0-mine/src/osx/dataview_osx.cpp
--- wxWidgets-3.1.0-orig/src/osx/dataview_osx.cpp	2016-02-28 22:33:37.000000000 +0100
+++ wxWidgets-3.1.0-mine/src/osx/dataview_osx.cpp	2016-04-17 15:24:20.000000000 +0200
@@ -573,6 +573,16 @@
   return GetDataViewPeer()->GetSelections(sel);
 }
 
+wxDataViewItem wxDataViewCtrl::GetTopItem() const
+{
+    return GetDataViewPeer()->GetTopItem();
+}
+		
+int wxDataViewCtrl::GetCountPerPage() const
+{
+    return GetDataViewPeer()->GetCountPerPage();
+}
+
 void wxDataViewCtrl::HitTest(wxPoint const& point, wxDataViewItem& item, wxDataViewColumn*& columnPtr) const
 {
   return GetDataViewPeer()->HitTest(point,item,columnPtr);
