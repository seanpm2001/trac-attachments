Index: common/memory.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/common/memory.cpp,v
retrieving revision 1.47
diff -U2 -r1.47 memory.cpp
--- common/memory.cpp	11 Jun 2001 21:52:57 -0000	1.47
+++ common/memory.cpp	24 Apr 2002 12:02:28 -0000
@@ -958,7 +958,37 @@
 }
 
+static bool memSectionOk = false;
+
+class MemoryCriticalSection : public wxCriticalSection
+{
+public:
+	MemoryCriticalSection() {
+		memSectionOk = true;
+	}
+};
+
+class MemoryCriticalSectionLocker
+{
+public:
+    inline MemoryCriticalSectionLocker(wxCriticalSection& critsect)
+	: m_critsect(critsect), m_locked(memSectionOk) { if(m_locked) m_critsect.Enter(); }
+    inline ~MemoryCriticalSectionLocker() { if(m_locked) m_critsect.Leave(); }
+	
+private:
+    // no assignment operator nor copy ctor
+    MemoryCriticalSectionLocker(const MemoryCriticalSectionLocker&);
+    MemoryCriticalSectionLocker& operator=(const MemoryCriticalSectionLocker&);
+	
+    wxCriticalSection& m_critsect;
+	bool	m_locked;
+};
+
+static MemoryCriticalSection memLocker;
+
+
 // TODO: store whether this is a vector or not.
 void * wxDebugAlloc(size_t size, wxChar * fileName, int lineNum, bool isObject, bool WXUNUSED(isVect) )
 {
+	MemoryCriticalSectionLocker lock(memLocker);
   // If not in debugging allocation mode, do the normal thing
   // so we don't leave any trace of ourselves in the node list.
@@ -973,4 +1003,5 @@
   }
 
+
     int totSize = wxDebugContext::TotSize (size);
     char * buf = (char *) malloc(totSize);
@@ -1010,5 +1041,4 @@
     void *m_actualData = (void *) wxDebugContext::CallerMemPos (buf);
     st->m_actualData = m_actualData;
-
     return m_actualData;
 }
@@ -1017,5 +1047,6 @@
 void wxDebugFree(void * buf, bool WXUNUSED(isVect) )
 {
-  if (!buf)
+	MemoryCriticalSectionLocker lock(memLocker);
+	if (!buf)
     return;

 	  	 
