Index: dialogs.cpp
===================================================================
--- dialogs.cpp	(revision 53382)
+++ dialogs.cpp	(working copy)
@@ -30,6 +30,7 @@
 #include "wx/minifram.h"
 #include "wx/sysopt.h"
 #include "wx/notifmsg.h"
+#include "wx/dirctrl.h"
 
 #if wxUSE_COLOURDLG
     #include "wx/colordlg.h"
@@ -116,6 +117,7 @@
 
 
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
+    EVT_MENU(CWD_GET_CWD,                           MyFrame::GetCwd)
 #if wxUSE_MSGDLG
     EVT_MENU(DIALOGS_MESSAGE_BOX,                   MyFrame::MessageBox)
     EVT_MENU(DIALOGS_MESSAGE_BOX_WXINFO,            MyFrame::MessageBoxInfo)
@@ -453,17 +455,22 @@
     menuHelp->Append(DIALOGS_ABOUTDLG_CUSTOM, _T("About (&custom)...\tCtrl-Shift-F1"));
 #endif // wxUSE_ABOUTDLG
 
+    wxMenu *menuCwd = new wxMenu;
+    menuCwd->Append(CWD_GET_CWD, _T("wxGetCwd()"));
+
     wxMenuBar *menubar = new wxMenuBar;
     menubar->Append(menuDlg, _T("&Dialogs"));
 #if wxUSE_ABOUTDLG
     menubar->Append(menuHelp, _T("&Help"));
 #endif // wxUSE_ABOUTDLG
+    menubar->Append(menuCwd, _T("cwd"));
 
     frame->SetMenuBar(menubar);
 
     myCanvas = new MyCanvas(frame);
     myCanvas->SetBackgroundColour(*wxWHITE);
 
+    new wxGenericDirCtrl(frame);
     frame->Centre(wxBOTH);
 
     // Show the frame
@@ -474,6 +481,11 @@
     return true;
 }
 
+void MyFrame::GetCwd(wxCommandEvent& event)
+{
+    wxMessageBox(wxGetCwd());
+}
+
 // My frame constructor
 MyFrame::MyFrame(wxWindow *parent,
                  const wxString& title)
Index: dialogs.h
===================================================================
--- dialogs.h	(revision 53382)
+++ dialogs.h	(working copy)
@@ -225,6 +225,8 @@
     MyFrame(wxWindow *parent, const wxString& title);
     virtual ~MyFrame();
 
+    void GetCwd(wxCommandEvent& event);
+
 #if wxUSE_MSGDLG
     void MessageBox(wxCommandEvent& event);
     void MessageBoxInfo(wxCommandEvent& event);
@@ -423,7 +425,8 @@
     DIALOGS_PROPERTY_SHEET_TOOLBOOK,
     DIALOGS_PROPERTY_SHEET_BUTTONTOOLBOOK,
     DIALOGS_STANDARD_BUTTON_SIZER_DIALOG,
-    DIALOGS_TEST_DEFAULT_ACTION
+    DIALOGS_TEST_DEFAULT_ACTION,
+    CWD_GET_CWD
 };
 
 #endif

 	  	 
