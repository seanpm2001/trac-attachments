Index: controls.cpp
===================================================================
--- controls.cpp	(revision 573)
+++ controls.cpp	(working copy)
@@ -59,6 +59,8 @@
     #define EVT_TOGGLEBUTTON EVT_CHECKBOX
 #endif
 
+
+
 //----------------------------------------------------------------------
 // class definitions
 //----------------------------------------------------------------------
@@ -106,6 +108,7 @@
 #endif // wxUSE_PROGRESSDLG
 #endif // wxUSE_SPINBTN
     void OnNewText( wxCommandEvent &event );
+    void OnPanelDisable( wxCommandEvent &event );
 #if wxUSE_SPINCTRL
     void OnSpinCtrl(wxSpinEvent& event);
     void OnSpinCtrlUp(wxSpinEvent& event);
@@ -151,6 +154,7 @@
 
 #if wxUSE_SPINCTRL
     wxSpinCtrl    *m_spinctrl;
+    wxPanel	      *testPanel;
 #endif // wxUSE_SPINCTRL
 
     wxTextCtrl    *m_spintext;
@@ -168,7 +172,7 @@
     wxButton      *m_sizerBtn4;
     wxBoxSizer    *m_hsizer;
     wxButton      *m_bigBtn;
-
+    wxRadioButton *m_radio1;
 private:
     wxLog *m_logTargetOld;
 
@@ -487,6 +491,8 @@
 const int  ID_SIZER_CHECK14     = 205;
 const int  ID_SIZER_CHECKBIG    = 206;
 
+const int  ID_PANEL_DISABLE	= 207;
+
 const int  ID_HYPERLINK         = 300;
 
 BEGIN_EVENT_TABLE(MyPanel, wxPanel)
@@ -536,6 +542,7 @@
 #if wxUSE_SLIDER
 EVT_SLIDER    (ID_SLIDER,               MyPanel::OnSliderUpdate)
 #endif // wxUSE_SLIDER
+EVT_RADIOBUTTON(ID_PANEL_DISABLE,		MyPanel::OnPanelDisable)
 #if wxUSE_SPINBTN
 EVT_SPIN      (ID_SPIN,                 MyPanel::OnSpinUpdate)
 EVT_SPIN_UP   (ID_SPIN,                 MyPanel::OnSpinUp)
@@ -926,6 +933,7 @@
     wxString s;
     s << initialSpinValue;
     m_spintext = new wxTextCtrl( panel, wxID_ANY, s, wxPoint(20,160), wxSize(80,wxDefaultCoord) );
+
 #if wxUSE_SPINBTN
     m_spinbutton = new wxSpinButton( panel, ID_SPIN, wxPoint(103,160) );
     m_spinbutton->SetRange(-40,30);
@@ -937,16 +945,25 @@
 #endif // wxUSE_PROGRESSDLG
 #endif // wxUSE_SPINBTN
 
+testPanel = new wxPanel(panel, wxID_ANY);
+wxBoxSizer *testSizer = new wxBoxSizer(wxHORIZONTAL);
+
 #if wxUSE_SPINCTRL
-    m_spinctrl = new wxSpinCtrl( panel, ID_SPINCTRL, wxEmptyString, wxPoint(200, 160), wxSize(80, wxDefaultCoord) );
+
+    testSizer->Add(m_spinctrl = new wxSpinCtrl( testPanel, ID_SPINCTRL, wxEmptyString, wxPoint(200, 160), wxSize(80, wxDefaultCoord) ) );
     m_spinctrl->SetRange(-10,30);
     m_spinctrl->SetValue(15);
+    
 #endif // wxUSE_SPINCTRL
 
+    m_radio1 = new wxRadioButton( panel, ID_PANEL_DISABLE, _T("Enable"), wxPoint(300, 120), wxDefaultSize);
+	m_radio1->SetValue(true);
+    (void)new wxRadioButton( panel, ID_PANEL_DISABLE, _T("Disable"), wxPoint(300, 140), wxDefaultSize);
+    main_sizer->Add(testPanel);
     m_book->AddPage(panel, _T("wxGauge"), false, Image_Gauge);
 #endif // wxUSE_SLIDER && wxUSE_GAUGE
 
-
+    testPanel->SetSizer(testSizer);
     panel = new wxPanel(m_book);
 
 #if !defined(__WXMOTIF__) // wxStaticBitmap not working under Motif yet.
@@ -1524,6 +1541,11 @@
 
 #endif // wxUSE_SLIDER
 
+void MyPanel::OnPanelDisable(wxCommandEvent& event)
+{
+    testPanel->Enable(m_radio1->GetValue());
+}
+
 #if wxUSE_SPINCTRL
 
 void MyPanel::OnSpinCtrlText(wxCommandEvent& event)
