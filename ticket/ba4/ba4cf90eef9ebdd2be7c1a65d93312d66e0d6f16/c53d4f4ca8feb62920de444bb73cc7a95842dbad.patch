--- dde.head.cpp	2005-08-19 14:40:34.686250000 +0100
+++ dde.cpp	2005-08-19 12:38:54.139375000 +0100
@@ -40,5 +40,4 @@
 #include "wx/intl.h"
 #include "wx/hashmap.h"
-#include "wx/math.h"
 
 #include "wx/msw/private.h"
@@ -551,17 +554,19 @@
 }
 
-bool wxDDEConnection::Execute(const wxChar *data, int size, wxIPCFormat format)
+bool wxDDEConnection::Execute(const wxChar *data, int size, wxIPCFormat WXUNUSED(format))
 {
     DWORD result;
     if (size < 0)
     {
-        size = wxStrlen(data) + 1;
+	    size = (wxStrlen(data) + 1) * sizeof(wxChar);    // includes final NUL
     }
 
     bool ok = DdeClientTransaction((LPBYTE)data,
-                                    size * sizeof(wxChar),
+                                    size,
                                     GetHConv(),
                                     NULL,
-                                    format,
+// If the transaction specified by the wType parameter does not pass data or is XTYP_EXECUTE,
+// wFmt should be zero. 
+                                    0,
                                     XTYP_EXECUTE,
                                     DDE_TIMEOUT,
@@ -596,5 +601,4 @@
 
     DWORD len = DdeGetData(returned_data, NULL, 0, 0);
-    len = (DWORD)ceil( double(len)/sizeof(wxChar) );
 
     wxChar *data = GetBufferAtLeast( len );
@@ -606,5 +610,5 @@
 
     if (size)
-        *size = len;
+        *size = (int)len;
 
     return data;
@@ -616,10 +620,10 @@
     if (size < 0)
     {
-        size = wxStrlen(data) + 1;
+	    size = (wxStrlen(data) + 1) * sizeof(wxChar);    // includes final NUL
     }
 
     HSZ item_atom = DDEGetAtom(item);
     bool ok = DdeClientTransaction((LPBYTE)data,
-                                   size * sizeof(wxChar),
+                                   size,
                                    GetHConv(),
                                    item_atom, format,
@@ -681,5 +685,5 @@
     if (size < 0)
     {
-        size = wxStrlen(data) + 1;
+ 	    size = (wxStrlen(data) + 1) * sizeof(wxChar);    // includes final NUL
     }
 
@@ -688,5 +692,6 @@
     m_sendingData = data;  // mrf: potential for scope problems here?
     m_dataSize = size;
-    m_dataType = format;
+	// wxIPC_PRIVATE does not succeed, so use text instead
+    m_dataType = format == wxIPC_PRIVATE ? wxIPC_TEXT : format;
 
     bool ok = DdePostAdvise(DDEIdInst, topic_atom, item_atom) != 0;
@@ -778,5 +783,4 @@
                 {
                     DWORD len = DdeGetData(hData, NULL, 0, 0);
-                    len = (DWORD)ceil( double(len)/sizeof(wxChar) );
 
                     wxChar *data = connection->GetBufferAtLeast( len );
@@ -788,8 +792,9 @@
                     DdeFreeDataHandle(hData);
 
+// XTYP_EXECUTE cannot be used for arbitrary data, but only for text
                     if ( connection->OnExecute(connection->m_topicName,
                                                data,
                                                (int)len,
-                                               (wxIPCFormat) wFmt) )
+                                               wxIPC_TEXT ) )
                     {
                         return (DDERETURN)(DWORD)DDE_FACK;
@@ -816,9 +821,9 @@
                     {
                         if (user_size < 0)
-                            user_size = wxStrlen((wxChar*)data) + 1;
+						    user_size = (wxStrlen((wxChar*)data) + 1) * sizeof(wxChar);    // includes final NUL
 
                         HDDEDATA handle = DdeCreateDataHandle(DDEIdInst,
                                                               (LPBYTE)data,
-                                                              user_size*sizeof(wxChar),
+                                                              user_size,
                                                               0,
                                                               hsz2,
@@ -840,9 +845,8 @@
 
                     DWORD len = DdeGetData(hData, NULL, 0, 0);
-                    len = (DWORD)ceil( double(len) / sizeof(wxChar) );
 
                     wxChar *data = connection->GetBufferAtLeast( len );
                     wxASSERT_MSG(data != NULL,
-                                 _T("Buffer too small in _DDECallback (XTYP_EXECUTE)") );
+                                 _T("Buffer too small in _DDECallback (XTYP_POKE)") );
 
                     DdeGetData(hData, (LPBYTE)data, len, 0);
@@ -904,5 +908,5 @@
                                         DDEIdInst,
                                         (LPBYTE)connection->m_sendingData,
-                                        connection->m_dataSize*sizeof(wxChar),
+                                        connection->m_dataSize,
                                         0,
                                         hsz2,
@@ -928,5 +932,4 @@
 
                     DWORD len = DdeGetData(hData, NULL, 0, 0);
-                    len = (DWORD)ceil( double(len) / sizeof(wxChar) );
 
                     wxChar *data = connection->GetBufferAtLeast( len );

 	  	 
