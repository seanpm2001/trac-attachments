Index: build/bakefiles/Bakefiles.bkgen
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/build/bakefiles/Bakefiles.bkgen,v
retrieving revision 1.10
diff -u -2 -r1.10 Bakefiles.bkgen
--- build/bakefiles/Bakefiles.bkgen	2003/10/26 20:45:27	1.10
+++ build/bakefiles/Bakefiles.bkgen	2004/02/27 22:05:45
@@ -45,4 +45,5 @@
         ../../contrib/samples/*/*/*.bkl
         ../../contrib/utils/*/*.bkl
+        ../../tests/*.bkl
     </input>
 
Index: build/bakefiles/common_samples.bkl
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/build/bakefiles/common_samples.bkl,v
retrieving revision 1.17
diff -u -2 -r1.17 common_samples.bkl
--- build/bakefiles/common_samples.bkl	2004/02/10 11:19:46	1.17
+++ build/bakefiles/common_samples.bkl	2004/02/27 22:05:45
@@ -63,4 +63,11 @@
     </template>
 
+    <template id="wx_test_console" template="wx_sample_console">
+        <if cond="FORMAT=='autoconf'">
+            <cppflags>$(CPPUNIT_CFLAGS)</cppflags>
+            <ldflags>$(CPPUNIT_LIBS)</ldflags>
+        </if>
+    </template>
+    
     
     <!-- =============================================================== -->
Index: build/bakefiles/config.bkl
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/build/bakefiles/config.bkl,v
retrieving revision 1.40
diff -u -2 -r1.40 config.bkl
--- build/bakefiles/config.bkl	2004/02/01 18:31:54	1.40
+++ build/bakefiles/config.bkl	2004/02/27 22:05:46
@@ -200,4 +200,6 @@
         <option name="SAMPLES_RPATH_FLAG"/>
         <option name="SAMPLES_RPATH_POSTLINK"/>
+        <option name="CPPUNIT_CFLAGS"/>
+        <option name="CPPUNIT_LIBS"/>
         
         <set var="TOP_SRCDIR">$(top_srcdir)/</set>
Index: configure.in
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/configure.in,v
retrieving revision 1.797
diff -u -2 -r1.797 configure.in
--- configure.in	2004/02/22 12:58:50	1.797
+++ configure.in	2004/02/27 22:06:03
@@ -5903,4 +5903,6 @@
 AC_SUBST(SAMPLES_RPATH_POSTLINK)
 AC_SUBST(HOST_SUFFIX)
+AC_SUBST(CPPUNIT_CFLAGS)
+AC_SUBST(CPPUNIT_LIBS)
 
 AC_BAKEFILE
@@ -6115,4 +6117,6 @@
     SUBDIRS="samples utils"
 fi
+dnl Add tests to the list of subdirs if cppunit 1.8.0+ is detected
+AM_PATH_CPPUNIT(1.8.0, SUBDIRS="$SUBDIRS tests")
 
 for subdir in `echo $SUBDIRS`; do
@@ -6136,9 +6140,11 @@
             if test ${subdir} = "samples"; then
                 makefiles="samples/Makefile.in samples/console/Makefile.in"
-            else dnl utils
+            elif test ${subdir} = "utils"; then
                 makefiles="utils/HelpGen/Makefile.in \
                            utils/HelpGen/src/Makefile.in \
                            utils/tex2rtf/Makefile.in \
                            utils/tex2rtf/src/Makefile.in"
+            else dnl assume that everything compiles for tests
+                makefiles=`(cd $srcdir ; find $subdir -name Makefile.in)`
             fi
         fi
--- /dev/null	Tue Oct  8 15:13:04 2002
+++ tests/test.bkl	Fri Feb 27 20:47:11 2004
@@ -0,0 +1,15 @@
+<?xml version="1.0" ?>
+<!-- $id$ -->
+
+<makefile>
+
+    <include file="../build/bakefiles/common_samples.bkl"/>
+
+    <exe id="test" template="wx_test_console"
+                   template_append="wx_append_base">
+        <sources>test.cpp</sources>
+        <sources>mbconv/main.cpp</sources>
+        <wx-lib>base</wx-lib>
+    </exe>
+
+</makefile>
--- /dev/null	Tue Oct  8 15:13:04 2002
+++ tests/test.cpp	Fri Feb 27 20:48:33 2004
@@ -0,0 +1,136 @@
+///////////////////////////////////////////////////////////////////////////////
+// Name:        test.cpp
+// Purpose:     Test program for wxWidgets
+// Author:      Mike Wetherell
+// RCS-ID:      $Id$
+// Copyright:   (c) 2004 Mike Wetherell
+// Licence:     wxWidgets licence
+///////////////////////////////////////////////////////////////////////////////
+
+#if defined(__GNUG__) && !defined(__APPLE__)
+    #pragma implementation
+    #pragma interface
+#endif
+
+// For compilers that support precompilation, includes "wx/wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+// for all others, include the necessary headers
+#ifndef WX_PRECOMP
+    #include "wx/wx.h"
+#endif
+
+#include "wx/cmdline.h"
+#include "wx/cppunit.h"
+#include <iostream>
+
+using namespace std;
+using namespace CppUnit;
+
+// The application class
+//
+class TestApp : public wxAppConsole
+{
+public:
+    TestApp();
+
+    // standard overrides
+    void OnInitCmdLine(wxCmdLineParser& parser);
+    bool OnCmdLineParsed(wxCmdLineParser& parser);
+    bool OnInit();
+    int  OnRun();
+
+private:
+    void List(Test *test, int depth = 0) const;
+
+    // command lines options/parameters
+    bool m_list;
+    string m_registry;
+};
+
+IMPLEMENT_APP_CONSOLE(TestApp)
+
+TestApp::TestApp()
+  : m_list(false)
+{
+}
+
+// Init
+//
+bool TestApp::OnInit()
+{
+    cout << "Test program for wxWidgets\n"
+         << "build: " << WX_BUILD_OPTIONS_SIGNATURE << endl;
+    return wxAppConsole::OnInit();
+};
+
+// The table of command line options
+//
+void TestApp::OnInitCmdLine(wxCmdLineParser& parser)
+{
+    wxAppConsole::OnInitCmdLine(parser);
+
+    static const wxCmdLineEntryDesc cmdLineDesc[] = {
+        { wxCMD_LINE_SWITCH, _T("l"), _T("list"),
+            _T("list the tests, do not run them"),
+            wxCMD_LINE_VAL_NONE, 0 },
+        { wxCMD_LINE_PARAM, 0, 0, _T("REGISTRY"), wxCMD_LINE_VAL_STRING,
+            wxCMD_LINE_PARAM_OPTIONAL },
+        { wxCMD_LINE_NONE , 0, 0, 0, wxCMD_LINE_VAL_NONE, 0 }
+    };
+
+    parser.SetDesc(cmdLineDesc);
+}
+
+// Handle command line options
+//
+bool TestApp::OnCmdLineParsed(wxCmdLineParser& parser)
+{
+    if (parser.GetParamCount() > 0)
+        m_registry = parser.GetParam(0).mb_str();
+ 
+    m_list = parser.Found(_T("list"));
+
+    return wxAppConsole::OnCmdLineParsed(parser);
+}
+
+// Run
+//
+int TestApp::OnRun()
+{
+    Test *test = m_registry.empty()?
+        TestFactoryRegistry::getRegistry().makeTest() :
+        TestFactoryRegistry::getRegistry(m_registry).makeTest();
+
+    if (m_list) {
+        List(test);
+        return EXIT_SUCCESS;
+    } else {
+        TextUi::TestRunner runner;
+        runner.addTest(test);
+        return runner.run("", false, true, false) ? EXIT_SUCCESS : EXIT_FAILURE;
+    }
+}
+
+// List the tests
+//
+void TestApp::List(Test *test, int depth /*=0*/) const
+{
+    cout << string(depth * 2, ' ') << test->getName() << "\n";
+
+    TestSuite *suite = dynamic_cast<TestSuite*>(test);
+
+    if (suite) {
+        typedef const std::vector<Test*> Tests;
+        typedef Tests::const_iterator Iter;
+
+        Tests& tests = suite->getTests();
+
+        for (Iter it = tests.begin(); it != tests.end(); ++it)
+            List(*it, depth + 1);
+    }
+}
Index: docs/tech/tn0017.txt
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/docs/tech/tn0017.txt,v
retrieving revision 1.1
diff -u -2 -r1.1 tn0017.txt
--- docs/tech/tn0017.txt	2004/02/15 15:43:42	1.1
+++ docs/tech/tn0017.txt	2004/02/27 22:11:48
@@ -4,5 +4,5 @@
  Unit tests for wxWindows are written using small cppunit framework. To compile
 (but not to run) them you need to have it installed. Hence the first part of
-this note exlpains how to do it while the second one explains how to write the
+this note explains how to do it while the second one explains how to write the
 test.
 
@@ -28,13 +28,59 @@
 1. Create a new directory tests/foo
 
-2. Write the main.cpp file for the test program copying, if you want,
+2. Write a cpp file for the test copying, if you want,
    from one of the existing tests. The things to look for:
  a) #include "wx/cppunit.h" instead of directly including CppUnit headers
  b) don't put too many things in one test case nor in one method of a test
     case as it makes understanding what exactly failed harder later
+ c) 'register' your tests as follows so that the test program will find and
+    execute them:
 
+    // register in the unnamed registry so that these tests are run by default
+    CPPUNIT_TEST_SUITE_REGISTRATION(MBConvTestCase);
+
+    // also include in it's own registry so that these tests can be run alone
+    CPPUNIT_TEST_SUITE_NAMED_REGISTRATION(MBConvTestCase, "MBConvTestCase");
+
    Read CppUnit documentation for more.
+
+3. add a '<sources>' tag for your source file to tests/test.bkl
+
+
+III. Running the tests
+----------------------
+
+1. Regenerate the make/project files from test.bkl using bakefile_gen, e.g.:
+        cd build/bakefile
+        bakefile_gen ../../tests/test.bkl
+   and if you're on a unix system re-run configure.
+
+2. Build the test program using one of the make/project files in the tests
+   subdirectory.
+
+3. Run the test program with no arguments to run the default set of tests
+   (which are all those registered with CPPUNIT_TEST_SUITE_REGISTRATION).
+   Or to list the tests without running them:
+      test -l
+
+4. Tests that have been registered under a name using
+   CPPUNIT_TEST_SUITE_NAMED_REGISTRATION can also be run separately. For
+   example:
+      test MBConvTestCase
+   or to list the tests:
+      test -l MBConvTestCase
+
+
+IV. Notes
+---------
+
+1. You can register your tests (or a subset of them) just under a name, and not
+   in the unnamed registry if you don't want them to be executed by default.
+
+2. If you are going to register your tests both in the unnamed registry and
+   under a name, then use the name that the tests have in the 'test -l'
+   listing (which is often the name of the TestCase class). Then the top
+   level names in a 'test -l' listing can be a hint as to the name those
+   tests have been registered under.
 
-3. Write a bakefile for the new test (again, copy an existing one...)
 
 === EOF ===
Index: tests/mbconv/main.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/tests/mbconv/main.cpp,v
retrieving revision 1.1
diff -u -2 -r1.1 main.cpp
--- tests/mbconv/main.cpp	2004/02/15 15:43:21	1.1
+++ tests/mbconv/main.cpp	2004/02/27 23:11:45
@@ -12,4 +12,5 @@
 // ----------------------------------------------------------------------------
 
+#include "wx/wx.h"
 #include "wx/strconv.h"
 #include "wx/string.h"
@@ -33,7 +34,11 @@
     void WC2CP1250();
 
-    NO_COPY_CLASS(MBConvTestCase);
+    DECLARE_NO_COPY_CLASS(MBConvTestCase);
 };
 
+// register in the unnamed registry so that these tests are run by default
+CPPUNIT_TEST_SUITE_REGISTRATION( MBConvTestCase );
+
+// also include in it's own registry so that these tests can be run alone
 CPPUNIT_TEST_SUITE_NAMED_REGISTRATION( MBConvTestCase, "MBConvTestCase" );
 
@@ -57,15 +62,2 @@
     }
 }
-
-// ----------------------------------------------------------------------------
-// program entry point
-// ----------------------------------------------------------------------------
-
-int main()
-{
-  CppUnit::TextUi::TestRunner runner;
-  runner.addTest(MBConvTestCase::suite());
-
-  return runner.run("") ? 0 : 1;
-}
-

 	  	 
