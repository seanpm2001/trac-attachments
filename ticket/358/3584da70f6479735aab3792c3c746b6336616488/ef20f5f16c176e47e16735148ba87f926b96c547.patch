Index: interface/wx/dc.h
===================================================================
--- interface/wx/dc.h	(revision 63543)
+++ interface/wx/dc.h	(working copy)
@@ -232,6 +232,11 @@
                  wxCoord xc, wxCoord yc);
 
     /**
+        @overload
+    */
+    void DrawArc(const wxPoint& pt1, const wxPoint& pt2, const wxPoint& centre);
+
+    /**
         Draw a bitmap on the device context at the specified point. If
         @a transparent is @true and the bitmap has a transparency mask, the
         bitmap will be drawn transparently.
@@ -247,6 +252,12 @@
                     bool useMask = false);
 
     /**
+        @overload
+    */
+    void DrawBitmap(const wxBitmap &bmp, const wxPoint& pt,
+                    bool useMask = false);
+
+    /**
         Draws a check mark inside the given rectangle.
     */
     void DrawCheckMark(wxCoord x, wxCoord y, wxCoord width, wxCoord height);
@@ -307,6 +318,12 @@
                           double start, double end);
 
     /**
+        @overload
+    */
+    void DrawEllipticArc(const wxPoint& pt, const wxSize& sz,
+                         double sa, double ea);
+
+    /**
         Draw an icon on the display (does nothing if the device context is
         PostScript). This can be the simplest way of drawing bitmaps on a
         window.
@@ -314,6 +331,11 @@
     void DrawIcon(const wxIcon& icon, wxCoord x, wxCoord y);
 
     /**
+        @overload
+    */
+    void DrawIcon(const wxIcon& icon, const wxPoint& pt);
+
+    /**
         Draw optional bitmap and the text into the given rectangle and aligns
         it as specified by alignment parameter; it also will emphasize the
         character with the given index if it is != -1 and return the bounding
@@ -340,6 +362,11 @@
     void DrawLine(wxCoord x1, wxCoord y1, wxCoord x2, wxCoord y2);
 
     /**
+        @overload
+    */
+    void DrawLine(const wxPoint& pt1, const wxPoint& pt2);
+
+    /**
         Draws lines using an array of points of size @a n adding the optional
         offset coordinate. The current pen is used for drawing the lines.
 
@@ -380,6 +407,11 @@
     void DrawPoint(wxCoord x, wxCoord y);
 
     /**
+        @overload
+    */
+    void DrawPoint(const wxPoint& pt);
+
+    /**
         Draws a filled polygon using an array of points of size @a n, adding
         the optional offset coordinate. The first and last points are
         automatically closed.
@@ -464,6 +496,16 @@
     void DrawRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height);
 
     /**
+        @overload
+    */
+    void DrawRectangle(const wxPoint& pt, const wxSize& sz);
+
+    /**
+        @overload
+    */
+    void DrawRectangle(const wxRect& rect);
+
+    /**
         Draws the text rotated by @a angle degrees 
         (positive angles are counterclockwise; the full angle is 360 degrees).
 
@@ -478,6 +520,12 @@
                          double angle);
 
     /**
+        @overload
+    */
+    void DrawRotatedText(const wxString& text, const wxPoint&,
+                         double angle);
+
+    /**
         Draws a rectangle with the given top left corner, and with the given
         size. The corners are quarter-circles using the given radius. The
         current pen is used for the outline and the current brush for filling
@@ -494,6 +542,17 @@
                               wxCoord height, double radius);
 
     /**
+        @overload
+    */
+    void DrawRoundedRectangle(const wxPoint& pt, const wxSize& sz,
+                              double radius);
+
+    /**
+        @overload
+    */
+    void DrawRoundedRectangle(const wxRect& rect, double radius);
+
+    /**
         Draws a spline between all given points using the current pen.
 
         @beginWxPythonOnly
@@ -544,6 +603,11 @@
     void DrawText(const wxString& text, wxCoord x, wxCoord y);
 
     /**
+        @overload
+    */
+    void DrawText(const wxString& text, const wxPoint& pt);
+
+    /**
         Fill the area specified by rect with a radial gradient, starting from
         @a initialColour at the centre of the circle and fading to
         @a destColour on the circle outside.
@@ -604,12 +668,23 @@
                    wxFloodFillStyle style = wxFLOOD_SURFACE);
 
     /**
+        @overload
+    */
+    bool FloodFill(const wxPoint& pt, const wxColour& col,
+                   int style = wxFLOOD_SURFACE);
+
+    /**
         Displays a cross hair using the current pen. This is a vertical and
         horizontal line the height and width of the window, centred on the
         given point.
     */
     void CrossHair(wxCoord x, wxCoord y);
 
+    /**
+        @overload
+    */
+    void CrossHair(const wxPoint& pt);
+
     //@}
 
 
