Index: derivdlg.cpp
===================================================================
--- derivdlg.cpp	(revision 65805)
+++ derivdlg.cpp	(working copy)
@@ -42,7 +42,7 @@
 
 BEGIN_EVENT_TABLE(PreferencesDialog, wxDialog)
     EVT_BUTTON( XRCID( "my_button" ), PreferencesDialog::OnMyButtonClicked )
-    EVT_UPDATE_UI(XRCID( "my_checkbox" ), PreferencesDialog::OnUpdateUIMyCheckbox )
+    EVT_COMBOBOX(XRCID("my_combo"), PreferencesDialog::OnMyCombo)
     // Note that the ID here isn't a XRCID, it is one of the standard wx ID's.
     EVT_BUTTON( wxID_OK, PreferencesDialog::OnOK )
 END_EVENT_TABLE()
@@ -72,20 +72,15 @@
 
 // Update the enabled/disabled state of the edit/delete buttons depending on
 // whether a row (item) is selected in the listctrl
-void PreferencesDialog::OnUpdateUIMyCheckbox( wxUpdateUIEvent &WXUNUSED(event) )
+void PreferencesDialog::OnMyCombo( wxCommandEvent &WXUNUSED(event) )
 {
-    // Get a boolean value of whether the checkbox is checked
-    bool myCheckBoxIsChecked;
-    // You could just write:
-    // myCheckBoxIsChecked = event.IsChecked();
-    // since the event that was passed into this function already has the
-    // is a pointer to the right control. However,
-    // this is the XRCCTRL way (which is more obvious as to what is going on).
-    myCheckBoxIsChecked = XRCCTRL(*this, "my_checkbox", wxCheckBox)->IsChecked();
+    // Get a boolean value of whether the choice is enable or disable
+    bool myComboIsSetToEnable;
+    myComboIsSetToEnable = XRCCTRL(*this, "my_combo", wxComboBox)->GetSelection() == 1;
 
     // Now call either Enable(true) or Enable(false) on the textctrl, depending
     // on the value of that boolean.
-    XRCCTRL(*this, "my_textctrl", wxTextCtrl)->Enable(myCheckBoxIsChecked);
+    XRCCTRL(*this, "my_textctrl", wxTextCtrl)->Enable(myComboIsSetToEnable);
 }
 
 
Index: derivdlg.h
===================================================================
--- derivdlg.h	(revision 65805)
+++ derivdlg.h	(working copy)
@@ -44,9 +44,9 @@
     // Stuff to do when "My Button" gets clicked
     void OnMyButtonClicked( wxCommandEvent &event );
 
-    // Stuff to do when a "My Checkbox" gets updated
+    // Stuff to do when a "My Combo" gets updated
     // (drawn, or it changes its value)
-    void OnUpdateUIMyCheckbox( wxUpdateUIEvent &event );
+    void OnMyCombo( wxCommandEvent &event );
 
     // Override base class functions of a wxDialog.
     void OnOK( wxCommandEvent &event );
Index: rc/derivdlg.xrc
===================================================================
--- rc/derivdlg.xrc	(revision 65805)
+++ rc/derivdlg.xrc	(working copy)
@@ -37,8 +37,10 @@
                 <object class="sizeritem">
                     <flag>wxALIGN_CENTRE|wxALL</flag>
                     <border>5</border>
-                    <object class="wxCheckBox" name="my_checkbox">
-                        <label>Enable this text control:</label>
+                    <object class="wxComboBox" name="my_combo">
+                        <item>Disable text control</item>
+                        <item>Enable text control</item>
+                        <selection>0</selection>
                     </object>
                 </object>
                 <object class="sizeritem">
