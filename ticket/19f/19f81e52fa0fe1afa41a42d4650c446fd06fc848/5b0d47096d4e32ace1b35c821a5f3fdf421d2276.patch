Index: menu.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/samples/menu/menu.cpp,v
retrieving revision 1.48
diff -u -4 -r1.48 menu.cpp
--- menu.cpp	2005/04/16 16:53:47	1.48
+++ menu.cpp	2005/05/03 20:31:14
@@ -147,8 +147,10 @@
     void OnUpdateCheckMenuItemUI(wxUpdateUIEvent& event);
 
     void OnSize(wxSizeEvent& event);
 
+    void OnTimer(wxTimerEvent& event);
+
 private:
     void LogMenuOpenOrClose(const wxMenuEvent& event, const wxChar *what);
     void ShowContextMenu(const wxPoint& pos);
 
@@ -321,8 +323,10 @@
     EVT_MENU_OPEN(MyFrame::OnMenuOpen)
     EVT_MENU_CLOSE(MyFrame::OnMenuClose)
 
     EVT_SIZE(MyFrame::OnSize)
+
+    EVT_TIMER(10000, MyFrame::OnTimer)
 END_EVENT_TABLE()
 
 BEGIN_EVENT_TABLE(MyEvtHandler, wxEvtHandler)
     EVT_MENU(wxID_ANY, MyEvtHandler::OnMenuEvent)
@@ -474,8 +478,12 @@
 
     // associate the menu bar with the frame
     SetMenuBar(menuBar);
 
+    menuBar->EnableTop(0, false);
+    menuBar->EnableTop(1, false);
+    menuBar->EnableTop(2, false);
+
     // intercept all menu events and log them in this custom event handler
     PushEventHandler(new MyEvtHandler(this));
 
 #if USE_LOG_WINDOW
@@ -573,10 +581,21 @@
     m_textctrl->Clear();
 }
 #endif
 
+void MyFrame::OnTimer(wxTimerEvent& event)
+{
+    wxMenuBar* MenuBar = GetMenuBar();
+    MenuBar->EnableTop(0, true);
+    MenuBar->EnableTop(1, true);
+    MenuBar->EnableTop(2, true);
+}
+
 void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
 {
+    wxTimer* Timer = new wxTimer(this, 10000);
+    Timer->Start(2000, wxTIMER_ONE_SHOT);
+    
     (void)wxMessageBox(_T("wxWidgets menu sample\n(c) 1999-2001 Vadim Zeitlin"),
                        _T("About wxWidgets menu sample"),
                        wxICON_INFORMATION);
 }

 	  	 
