Index: samples/aui/auidemo.cpp
===================================================================
--- samples/aui/auidemo.cpp	(revision 61400)
+++ samples/aui/auidemo.cpp	(working copy)
@@ -34,6 +34,8 @@
 #include "wx/statusbr.h"
 #include "wx/msgdlg.h"
 #include "wx/textdlg.h"
+#include "wx/tipwin.h"
+#include "wx/log.h"
 
 #include "wx/aui/aui.h"
 #include "../sample.xpm"
@@ -64,6 +66,7 @@
         ID_CreateHTML,
         ID_CreateNotebook,
         ID_CreateSizeReport,
+        ID_CreateTipWindow,
         ID_GridContent,
         ID_TextContent,
         ID_TreeContent,
@@ -143,6 +146,7 @@
     void OnCreateNotebook(wxCommandEvent& evt);
     void OnCreateText(wxCommandEvent& evt);
     void OnCreateSizeReport(wxCommandEvent& evt);
+    void OnCreateTipWindow(wxCommandEvent& evt);
     void OnChangeContentPane(wxCommandEvent& evt);
     void OnDropDownToolbarItem(wxAuiToolBarEvent& evt);
     void OnCreatePerspective(wxCommandEvent& evt);
@@ -581,6 +585,7 @@
     EVT_MENU(MyFrame::ID_CreateText, MyFrame::OnCreateText)
     EVT_MENU(MyFrame::ID_CreateHTML, MyFrame::OnCreateHTML)
     EVT_MENU(MyFrame::ID_CreateSizeReport, MyFrame::OnCreateSizeReport)
+    EVT_MENU(MyFrame::ID_CreateTipWindow, MyFrame::OnCreateTipWindow)
     EVT_MENU(MyFrame::ID_CreateNotebook, MyFrame::OnCreateNotebook)
     EVT_MENU(MyFrame::ID_CreatePerspective, MyFrame::OnCreatePerspective)
     EVT_MENU(MyFrame::ID_CopyPerspectiveCode, MyFrame::OnCopyPerspectiveCode)
@@ -683,6 +688,7 @@
     view_menu->Append(ID_CreateGrid, _("Create Grid"));
     view_menu->Append(ID_CreateNotebook, _("Create Notebook"));
     view_menu->Append(ID_CreateSizeReport, _("Create Size Reporter"));
+    view_menu->Append(ID_CreateTipWindow, _("Create wxTipWindow"));
     view_menu->AppendSeparator();
     view_menu->Append(ID_GridContent, _("Use a Grid for the Content Pane"));
     view_menu->Append(ID_TextContent, _("Use a Text Control for the Content Pane"));
@@ -1394,6 +1400,11 @@
     m_mgr.Update();
 }
 
+void MyFrame::OnCreateTipWindow(wxCommandEvent& WXUNUSED(event))
+{
+    new wxTipWindow(this, "wxTipWindow");
+}
+
 void MyFrame::OnChangeContentPane(wxCommandEvent& evt)
 {
     m_mgr.GetPane(wxT("grid_content")).Show(evt.GetId() == ID_GridContent);
@@ -1541,6 +1552,35 @@
 
 
     tree->Expand(root);
+    class Reporter : public wxEvtHandler
+    {
+    public:
+        void OnLeftDown(wxMouseEvent& evt)
+        {
+            wxTreeCtrl* tree = wxDynamicCast(evt.GetEventObject(), wxTreeCtrl);
+            int part;
+            wxTreeItemId id = tree->HitTest(evt.GetPosition(), part);
+            if (part == wxTREE_HITTEST_ONITEMBUTTON) {
+                wxLogTrace("", "%s:  id %p hit button\n", __FUNCTION__, id.m_pItem);
+            }
+            evt.Skip();
+        }
+        void OnExpanding(wxTreeEvent& evt)
+        {
+            wxLogTrace("", "%s:  id %p\n", __FUNCTION__, evt.GetItem());
+            evt.Skip();
+        }
+        void OnCollapsing(wxTreeEvent& evt)
+        {
+            wxLogTrace("", "%s:  id %p\n", __FUNCTION__, evt.GetItem());
+            evt.Skip();
+        }
+    };
+    static Reporter lmr;
+    wxLog::AddTraceMask("");
+    tree->Bind(wxEVT_LEFT_DOWN, &Reporter::OnLeftDown, &lmr);
+    tree->Bind(wxEVT_COMMAND_TREE_ITEM_COLLAPSING, &Reporter::OnCollapsing, &lmr);
+    tree->Bind(wxEVT_COMMAND_TREE_ITEM_EXPANDING, &Reporter::OnExpanding, &lmr);
 
     return tree;
 }
