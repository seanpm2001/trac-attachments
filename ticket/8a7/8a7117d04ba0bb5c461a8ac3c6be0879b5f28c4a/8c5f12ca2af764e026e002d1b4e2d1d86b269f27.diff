--- arttest.cpp_orig	Tue Jul  9 22:51:17 2002
+++ arttest.cpp	Wed Jul 10 00:01:39 2002
@@ -52,4 +52,6 @@
     void OnPlugProvider(wxCommandEvent& event);
     
+	void OnCursors( wxCommandEvent& event );
+	
     DECLARE_EVENT_TABLE()
 };
@@ -65,5 +67,6 @@
     ID_Logs,
     ID_Browser,
-    ID_PlugProvider
+    ID_PlugProvider,
+    ID_Cursors
 };
 
@@ -78,4 +81,5 @@
     EVT_MENU(ID_Browser,      MyFrame::OnBrowser)
     EVT_MENU(ID_PlugProvider, MyFrame::OnPlugProvider)
+    EVT_MENU(ID_Cursors,      MyFrame::OnCursors)
 END_EVENT_TABLE()
 
@@ -135,4 +139,34 @@
 
 
+// ----------------------------------------------------------------------------
+// CursorChoiceDialog
+// ----------------------------------------------------------------------------
+
+class CursorChoiceDialog : public wxSingleChoiceDialog
+{
+public:
+	CursorChoiceDialog() : wxSingleChoiceDialog() {}
+
+    CursorChoiceDialog( const wxString& message,
+                         const wxString& caption,
+                         int n,
+                         const wxString *choices)
+                         :wxSingleChoiceDialog(NULL,message,caption,n,choices){}
+
+	void OnListBox( wxCommandEvent &event )
+	{
+		FindWindow(event.GetId())->SetCursor(event.GetInt());
+	}
+	
+private:
+    DECLARE_DYNAMIC_CLASS(CursorChoiceDialog)
+    DECLARE_EVENT_TABLE()
+};
+
+IMPLEMENT_DYNAMIC_CLASS(CursorChoiceDialog, wxSingleChoiceDialog)
+
+BEGIN_EVENT_TABLE(CursorChoiceDialog, wxSingleChoiceDialog)
+    EVT_LISTBOX(-1, CursorChoiceDialog::OnListBox)
+END_EVENT_TABLE()
 
 // ----------------------------------------------------------------------------
@@ -160,4 +194,6 @@
     menuFile->AppendSeparator();
 
+	menuFile->Append(ID_Cursors, _T("&Cursor test"), _T("Show available mouse cursors"));
+    menuFile->AppendSeparator();
     menuFile->Append(ID_Quit, _T("E&xit\tAlt-X"), _T("Quit this program"));
 
@@ -169,6 +205,6 @@
     // ... and attach this menu bar to the frame
     SetMenuBar(menuBar);
-}
 
+}
 
 // event handlers
@@ -211,3 +247,60 @@
     else
         wxArtProvider::PopProvider();
+}
+
+void MyFrame::OnCursors( wxCommandEvent &event )
+{
+#ifdef __WXGTK__
+    #define CURSORS 30
+#endif
+#ifdef __X__
+	#define CURSORS 33
+#endif
+#ifndef CURSORS
+	#define CURSORS 29
+#endif
+	wxString cursors[CURSORS] = {
+		wxString("wxCURSOR_NONE"), 
+		wxString("wxCURSOR_ARROW"),
+	    wxString("wxCURSOR_RIGHT_ARROW"),
+	    wxString("wxCURSOR_BULLSEYE"),
+	    wxString("wxCURSOR_CHAR"),
+	    wxString("wxCURSOR_CROSS"),
+	    wxString("wxCURSOR_HAND"),
+	    wxString("wxCURSOR_IBEAM"),
+	    wxString("wxCURSOR_LEFT_BUTTON"),
+	    wxString("wxCURSOR_MAGNIFIER"),
+	    wxString("wxCURSOR_MIDDLE_BUTTON"),
+	    wxString("wxCURSOR_NO_ENTRY"),
+	    wxString("wxCURSOR_PAINT_BRUSH"),
+	    wxString("wxCURSOR_PENCIL"),
+	    wxString("wxCURSOR_POINT_LEFT"),
+	    wxString("wxCURSOR_POINT_RIGHT"),
+	    wxString("wxCURSOR_QUESTION_ARROW"),
+	    wxString("wxCURSOR_RIGHT_BUTTON"),
+	    wxString("wxCURSOR_SIZENESW"),
+	    wxString("wxCURSOR_SIZENS"),
+	    wxString("wxCURSOR_SIZENWSE"),
+	    wxString("wxCURSOR_SIZEWE"),
+	    wxString("wxCURSOR_SIZING"),
+	    wxString("wxCURSOR_SPRAYCAN"),
+	    wxString("wxCURSOR_WAIT"),
+	    wxString("wxCURSOR_WATCH"),
+	    wxString("wxCURSOR_BLANK"),
+#ifdef __WXGTK__
+	    wxString("wxCURSOR_DEFAULT"), // standard X11 cursor
+#endif
+#ifdef __X__
+	    // Not yet implemented for Windows
+	    wxString("wxCURSOR_CROSS_REVERSE"),
+	    wxString("wxCURSOR_DOUBLE_ARROW"),
+	    wxString("wxCURSOR_BASED_ARROW_UP"),
+	    wxString("wxCURSOR_BASED_ARROW_DOWN"),
+#endif // X11
+ 	   wxString("wxCURSOR_ARROWWAIT"),
+	    wxString("wxCURSOR_MAX")
+    };
+	
+	CursorChoiceDialog dialog(_T("Select cursor"), _T("Click to show cursor"), CURSORS, cursors);
+	dialog.ShowModal();
 }

 	  	 
