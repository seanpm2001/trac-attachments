diff --git a/samples/minimal/minimal.cpp b/samples/minimal/minimal.cpp
index fb8f721..b646d45 100644
--- a/samples/minimal/minimal.cpp
+++ b/samples/minimal/minimal.cpp
@@ -67,8 +67,10 @@ class MyFrame : public wxFrame
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    void OnButton(wxCommandEvent& event);
 
 private:
+    wxTextCtrl *m_txtFloat;
     // any class wishing to process wxWidgets events must use this macro
     DECLARE_EVENT_TABLE()
 };
@@ -81,6 +83,7 @@ class MyFrame : public wxFrame
 enum
 {
     // menu items
+    Minimal_Button = wxID_HIGHEST+1,
     Minimal_Quit = wxID_EXIT,
 
     // it is important for the id corresponding to the "About" command to have
@@ -99,6 +102,7 @@ enum
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_BUTTON(Minimal_Button, MyFrame::OnButton)
 END_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -172,6 +176,22 @@ bool MyApp::OnInit()
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+
+    // Add Sizers, a wxButton, and a wxTextCtrl
+    wxBoxSizer *panelSizer = new wxBoxSizer(wxHORIZONTAL);
+    wxStaticBoxSizer *boxSizer = new wxStaticBoxSizer(new wxStaticBox(this
+, -1, wxT("Added a Button!")), wxVERTICAL);
+    panelSizer->Add(boxSizer, 0, wxGROW | wxALL, 5);
+
+    wxControl *button = new wxButton(this, Minimal_Button, wxT("Press Me"));
+    boxSizer->Add(button, 0, wxGROW | wxALL, 3);
+
+    m_txtFloat = new wxTextCtrl(this, wxID_ANY);
+    boxSizer->Add(m_txtFloat, 0,  wxALL, 2);
+
+    SetSizer(panelSizer);
+    SetAutoLayout(true);
+    Layout();
 }
 
 
@@ -198,3 +218,12 @@ void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
                  wxOK | wxICON_INFORMATION,
                  this);
 }
+
+void MyFrame::OnButton(wxCommandEvent& WXUNUSED(event))
+{
+    for( int i=0; i<1000; i++) {
+      wxString str = wxString::Format("%lf",(double)rand()/RAND_MAX);
+      m_txtFloat->ChangeValue(str);
+      std::cerr << str << std::endl;
+    }
+}
