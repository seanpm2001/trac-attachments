diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWidgets-2.5.2-Original/include/wx/ownerdrw.h wxWidgets-2.5.2/include/wx/ownerdrw.h
--- wxWidgets-2.5.2-Original/include/wx/ownerdrw.h	Sun May 23 21:50:24 2004
+++ wxWidgets-2.5.2/include/wx/ownerdrw.h	Wed Sep 15 15:11:58 2004
@@ -38,4 +38,5 @@
   wxOwnerDrawn(const wxString& str = wxEmptyString,
                bool bCheckable = FALSE,
+               wxItemKind itemKind = wxITEM_NORMAL, 
                bool bMenuItem = FALSE); // FIXME kludge for colors
   virtual ~wxOwnerDrawn() { }
@@ -147,4 +148,6 @@
   static size_t ms_nLastMarginWidth;    // handy for aligning all items
 
+  wxItemKind m_itemKind;    // used for default drawing when no bitmaps provided
+  
   bool      m_bCheckable,   // used only for menu or check listbox items
             m_bOwnerDrawn;  // true if something is non standard
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWidgets-2.5.2-Original/src/msw/menu.cpp wxWidgets-2.5.2/src/msw/menu.cpp
--- wxWidgets-2.5.2-Original/src/msw/menu.cpp	Thu May 27 12:31:06 2004
+++ wxWidgets-2.5.2/src/msw/menu.cpp	Wed Sep 15 15:10:44 2004
@@ -374,5 +374,6 @@
 
 #if wxUSE_OWNER_DRAWN
-    if ( pItem->IsOwnerDrawn() ) {  // want to get {Measure|Draw}Item messages?
+    // custom draw anything except separators
+    if ( !pItem->IsSeparator() ) {  // want to get {Measure|Draw}Item messages?
         // item draws itself, pass pointer to it in data parameter
         flags |= MF_OWNERDRAW;
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWidgets-2.5.2-Original/src/msw/menuitem.cpp wxWidgets-2.5.2/src/msw/menuitem.cpp
--- wxWidgets-2.5.2-Original/src/msw/menuitem.cpp	Sun May 23 21:53:00 2004
+++ wxWidgets-2.5.2/src/msw/menuitem.cpp	Wed Sep 15 14:49:00 2004
@@ -136,5 +136,5 @@
           : wxMenuItemBase(pParentMenu, id, text, strHelp, kind, pSubMenu)
 #if wxUSE_OWNER_DRAWN
-            , wxOwnerDrawn(text, kind == wxITEM_CHECK, true)
+            , wxOwnerDrawn(text, kind == wxITEM_CHECK || kind == wxITEM_RADIO, kind, true)
 #endif // owner drawn
 {
@@ -151,5 +151,5 @@
                            isCheckable ? wxITEM_CHECK : wxITEM_NORMAL, subMenu)
 #if wxUSE_OWNER_DRAWN
-           , wxOwnerDrawn(text, isCheckable, true)
+           , wxOwnerDrawn(text, isCheckable, isCheckable ? wxITEM_CHECK : wxITEM_NORMAL, true)
 #endif // owner drawn
 {
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWidgets-2.5.2-Original/src/msw/ownerdrw.cpp wxWidgets-2.5.2/src/msw/ownerdrw.cpp
--- wxWidgets-2.5.2-Original/src/msw/ownerdrw.cpp	Sun May 23 21:53:00 2004
+++ wxWidgets-2.5.2/src/msw/ownerdrw.cpp	Wed Sep 15 15:33:32 2004
@@ -95,5 +95,5 @@
 // ----
 wxOwnerDrawn::wxOwnerDrawn(const wxString& str,
-                           bool bCheckable, bool bMenuItem)
+                           bool bCheckable, wxItemKind itemKind, bool bMenuItem)
             : m_strName(str)
 {
@@ -122,4 +122,5 @@
 
     m_bCheckable   = bCheckable;
+    m_itemKind     = itemKind;
     m_bOwnerDrawn  = FALSE;
     m_nHeight      = 0;
@@ -276,9 +277,11 @@
                       rc.GetRight() + 1, rc.GetBottom() + 1 };
 
-  if ( (st & wxODSelected) && m_bmpChecked.Ok() ) {
+  if ( (st & wxODSelected) && m_bmpChecked.Ok() && draw_bitmap_edge ) {
       // only draw the highlight under the text, not under
-      // the bitmap or checkmark
+      // the bitmap or checkmark (only for menu items with an edged bitmap)
       rectFill.left = xText;
   }
+  // add a 1 pixel gap between the image and the start of the text
+  xText += 1;
 
   FillRect(hdc, &rectFill, hbr);
@@ -346,5 +349,16 @@
       if ( m_nHeight > 0 )
       {
-        ::DrawFrameControl(hdcMem, &rect, DFC_MENU, DFCS_MENUCHECK);
+          switch( m_itemKind )
+          {
+          case wxITEM_RADIO:
+              // draw radio
+              ::DrawFrameControl(hdcMem, &rect, DFC_MENU, DFCS_MENUBULLET);
+          break;
+            
+          default:
+              // default: draw check
+              ::DrawFrameControl(hdcMem, &rect, DFC_MENU, DFCS_MENUCHECK);
+          break;
+          }
       }
 

 	  	 
