--- auidemo_orig.cpp	2012-03-12 14:32:31.472000374 -0700
+++ auidemo.cpp	2012-03-12 14:21:15.076000373 -0700
@@ -4,7 +4,7 @@
 // Author:      Benjamin I. Williams
 // Modified by:
 // Created:     2005-10-03
-// RCS-ID:      $Id$
+// RCS-ID:      $Id: auidemo.cpp 68210 2011-07-09 23:36:44Z VZ $
 // Copyright:   (C) Copyright 2005, Kirix Corporation, All Rights Reserved.
 // Licence:     wxWindows Library Licence, Version 3.1
 ///////////////////////////////////////////////////////////////////////////////
@@ -877,15 +877,15 @@
                   Name(wxT("test1")).Caption(wxT("Pane Caption")).
                   Top());
 
-    m_mgr.AddPane(CreateSizeReportCtrl(), wxAuiPaneInfo().
-                  Name(wxT("test2")).Caption(wxT("Client Size Reporter")).
-                  Bottom().Position(1).
-                  CloseButton(true).MaximizeButton(true));
-
-    m_mgr.AddPane(CreateSizeReportCtrl(), wxAuiPaneInfo().
-                  Name(wxT("test3")).Caption(wxT("Client Size Reporter")).
-                  Bottom().
-                  CloseButton(true).MaximizeButton(true));
+    //m_mgr.AddPane(CreateSizeReportCtrl(), wxAuiPaneInfo().
+    //              Name(wxT("test2")).Caption(wxT("Client Size Reporter")).
+    //              Bottom().Position(1).
+    //              CloseButton(true).MaximizeButton(true));
+
+    //m_mgr.AddPane(CreateSizeReportCtrl(), wxAuiPaneInfo().
+    //              Name(wxT("test3")).Caption(wxT("Client Size Reporter")).
+    //              Bottom().
+    //              CloseButton(true).MaximizeButton(true));
 
     m_mgr.AddPane(CreateSizeReportCtrl(), wxAuiPaneInfo().
                   Name(wxT("test4")).Caption(wxT("Pane Caption")).
@@ -910,13 +910,13 @@
                   Left().Layer(1).Position(1).
                   CloseButton(true).MaximizeButton(true));
 
-    m_mgr.AddPane(CreateSizeReportCtrl(), wxAuiPaneInfo().
-                  Name(wxT("test9")).Caption(wxT("Min Size 200x100")).
-                  BestSize(wxSize(200,100)).MinSize(wxSize(200,100)).
-                  Bottom().Layer(1).
-                  CloseButton(true).MaximizeButton(true));
+    //m_mgr.AddPane(CreateSizeReportCtrl(), wxAuiPaneInfo().
+    //              Name(wxT("test9")).Caption(wxT("Min Size 200x100")).
+    //              BestSize(wxSize(200,100)).MinSize(wxSize(200,100)).
+    //              Bottom().Layer(1).
+    //              CloseButton(true).MaximizeButton(true));
 
-    wxWindow* wnd10 = CreateTextCtrl(wxT("This pane will prompt the user before hiding."));
+    //wxWindow* wnd10 = CreateTextCtrl(wxT("This pane will prompt the user before hiding."));
 
     // Give this pane an icon, too, just for testing.
     int iconSize = m_mgr.GetArtProvider()->GetMetric(wxAUI_DOCKART_CAPTION_SIZE);
@@ -924,21 +924,24 @@
     // Make it even to use 16 pixel icons with default 17 caption height.
     iconSize &= ~1;
 
-    m_mgr.AddPane(wnd10, wxAuiPaneInfo().
-                  Name(wxT("test10")).Caption(wxT("Text Pane with Hide Prompt")).
-                  Bottom().Layer(1).Position(1).
-                  Icon(wxArtProvider::GetBitmap(wxART_WARNING,
-                                                wxART_OTHER,
-                                                wxSize(iconSize, iconSize))));
-
-    m_mgr.AddPane(CreateSizeReportCtrl(), wxAuiPaneInfo().
-                  Name(wxT("test11")).Caption(wxT("Fixed Pane")).
-                  Bottom().Layer(1).Position(2).Fixed());
+    //m_mgr.AddPane(wnd10, wxAuiPaneInfo().
+    //              Name(wxT("test10")).Caption(wxT("Text Pane with Hide Prompt")).
+    //              Bottom().Layer(1).Position(1).
+    //              Icon(wxArtProvider::GetBitmap(wxART_WARNING,
+    //                                            wxART_OTHER,
+    //                                            wxSize(iconSize, iconSize))));
+
+    //m_mgr.AddPane(CreateSizeReportCtrl(), wxAuiPaneInfo().
+    //              Name(wxT("test11")).Caption(wxT("Fixed Pane")).
+    //              Bottom().Layer(1).Position(2).Fixed());
 
 
     m_mgr.AddPane(new SettingsPanel(this,this), wxAuiPaneInfo().
                   Name(wxT("settings")).Caption(wxT("Dock Manager Settings")).
-                  Dockable(false).Float().Hide());
+                  Bottom());
+
+    m_mgr.GetPane(wxT("settings")).MinSize(-1, 200);
+    m_mgr.GetPane(wxT("settings")).MaxSize(-1, 300);
 
     // create some center panes
 
@@ -999,8 +1002,9 @@
     m_mgr.GetPane(wxT("tb1")).Hide();
     m_mgr.GetPane(wxT("tb6")).Hide();
     m_mgr.GetPane(wxT("test8")).Show().Left().Layer(0).Row(0).Position(0);
-    m_mgr.GetPane(wxT("test10")).Show().Bottom().Layer(0).Row(0).Position(0);
+    //m_mgr.GetPane(wxT("test10")).Show().Bottom().Layer(0).Row(0).Position(0);
     m_mgr.GetPane(wxT("notebook_content")).Show();
+    m_mgr.GetPane(wxT("settings")).Show();
     wxString perspective_default = m_mgr.SavePerspective();
 
     m_perspectives.Add(perspective_default);
@@ -1038,10 +1042,10 @@
 void MyFrame::OnSettings(wxCommandEvent& WXUNUSED(evt))
 {
     // show the settings pane, and float it
-    wxAuiPaneInfo& floating_pane = m_mgr.GetPane(wxT("settings")).Float().Show();
-
-    if (floating_pane.floating_pos == wxDefaultPosition)
-        floating_pane.FloatingPosition(GetStartPosition());
+    //wxAuiPaneInfo& floating_pane = m_mgr.GetPane(wxT("settings")).Float().Show();
+    m_mgr.GetPane(wxT("settings")).Show();
+    //if (floating_pane.floating_pos == wxDefaultPosition)
+    //    floating_pane.FloatingPosition(GetStartPosition());
 
     m_mgr.Update();
 }
