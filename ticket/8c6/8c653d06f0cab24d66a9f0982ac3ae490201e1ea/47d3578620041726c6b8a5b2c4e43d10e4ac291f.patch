--- wxPython/src/_image.i.bak	2012-07-25 11:37:53.209783011 +0200
+++ wxPython/src/_image.i	2012-07-25 11:45:29.866238914 +0200
@@ -341,9 +341,11 @@
             ImageFromData,
             "Construct an Image from a buffer of RGB bytes.  Accepts either a
 string or a buffer object holding the data and the length of the data
-must be width*height*3.", "
+must be width*height*3. Contrarily to `ImageFromBuffer`, the buffer is copied, 
+so this method is slower but the buffer can be reused and modified safely
+afterwards.", "
 
-:see: `wx.Image`",
+:see: `wx.Image`, `ImageFromDataWithAlpha`, `ImageFromBuffer`",
             wxImage(int width, int height, buffer data, int DATASIZE))
             {
                 if (DATASIZE != width*height*3) {
@@ -367,9 +369,11 @@
             "Construct an Image from a buffer of RGB bytes with an Alpha channel.
 Accepts either a string or a buffer object holding the data and the
 length of the data must be width*height*3 bytes, and the length of the
-alpha data must be width*height bytes.", "
+alpha data must be width*height bytes. Contrarily to `ImageFromBuffer`, the 
+buffer is copied, so this method is slower but the buffer can be reused and
+modified safely afterwards.", "
 
-:see: `wx.Image`",
+:see: `wx.Image`, `ImageFromData`, `ImageFromBuffer`",
             wxImage(int width, int height, buffer data, int DATASIZE, buffer alpha, int ALPHASIZE))
             {
                 if (DATASIZE != width*height*3) {
@@ -1286,6 +1290,8 @@
     application to crash.  Therefore care should be taken to not manipulate
     the objects used for the data and alpha buffers in a way that would cause
     them to change size.
+    
+    :see: `ImageFromData`, `ImageFromDataWithAlpha`
     """
     image = _core_._ImageFromBuffer(width, height, dataBuffer, alphaBuffer)
     image._buffer = dataBuffer
