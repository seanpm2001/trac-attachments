diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig/include/wx/tbarbase.h wxWindows/include/wx/tbarbase.h
--- wxWindows.orig/include/wx/tbarbase.h	Sat Aug 31 14:29:10 2002
+++ wxWindows/include/wx/tbarbase.h	Tue Sep  9 21:18:14 2003
@@ -581,4 +581,7 @@
     wxToolBarToolBase *FindById(int id) const;
 
+	// un-toggle all buttons in the same radio group
+	void UnToggleRadioGroup(wxToolBarToolBase *tool);
+
     // the list of all our tools
     wxToolBarToolsList m_tools;
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig/src/common/tbarbase.cpp wxWindows/src/common/tbarbase.cpp
--- wxWindows.orig/src/common/tbarbase.cpp	Wed Mar 19 20:25:02 2003
+++ wxWindows/src/common/tbarbase.cpp	Tue Sep  9 21:17:53 2003
@@ -354,4 +354,31 @@
 }
 
+void wxToolBarBase::UnToggleRadioGroup(wxToolBarToolBase *tool)
+{
+    if ( !tool || !tool->IsButton() || tool->GetKind() != wxITEM_RADIO ) return;
+
+    wxToolBarToolsList::Node *base = m_tools.Find(tool);
+
+    if( !base ) return;
+
+    for ( wxToolBarToolsList::Node *node = base->GetNext();
+          node;
+          node = node->GetNext())
+    {
+        tool = node->GetData();
+        if ( !tool->IsButton() || tool->GetKind() != wxITEM_RADIO ) break;
+        tool->Toggle(false);
+    }
+
+    for ( wxToolBarToolsList::Node *node = base->GetPrevious();
+          node;
+          node = node->GetPrevious())
+    {
+        tool = node->GetData();
+        if ( !tool->IsButton() || tool->GetKind() != wxITEM_RADIO ) break;
+        tool->Toggle(false);
+    }
+}
+
 void wxToolBarBase::ClearTools()
 {
@@ -391,4 +418,5 @@
         if ( tool->Toggle(toggle) )
         {
+            UnToggleRadioGroup(tool);
             DoToggleTool(tool, toggle);
         }
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig/src/gtk/tbargtk.cpp wxWindows/src/gtk/tbargtk.cpp
--- wxWindows.orig/src/gtk/tbargtk.cpp	Tue Feb 18 14:10:52 2003
+++ wxWindows/src/gtk/tbargtk.cpp	Tue Sep  9 21:18:04 2003
@@ -176,5 +176,20 @@
     }
 
-    tbar->OnLeftClick( tool->GetId(), tool->IsToggled() );
+    if( !tbar->OnLeftClick( tool->GetId(), tool->IsToggled() ) && tool->CanBeToggled() )
+    {
+        // revert back
+        tool->Toggle();
+
+        wxBitmap bitmap = tool->GetBitmap();
+        if ( bitmap.Ok() )
+        {
+            GtkPixmap *pixmap = GTK_PIXMAP( tool->m_pixmap );
+
+            GdkBitmap *mask = bitmap.GetMask() ? bitmap.GetMask()->GetBitmap()
+                                               : (GdkBitmap *)NULL;
+
+            gtk_pixmap_set( pixmap, bitmap.GetPixmap(), mask );
+        }
+    }
 }
 
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig/src/msw/tbar95.cpp wxWindows/src/msw/tbar95.cpp
--- wxWindows.orig/src/msw/tbar95.cpp	Thu Jan  2 21:30:52 2003
+++ wxWindows/src/msw/tbar95.cpp	Tue Sep  9 21:18:04 2003
@@ -903,26 +903,28 @@
         return FALSE;
 
+    bool toggled;
+
     if ( tool->CanBeToggled() )
     {
         LRESULT state = ::SendMessage(GetHwnd(), TB_GETSTATE, id, 0);
-        tool->Toggle((state & TBSTATE_CHECKED) != 0);
-    }
+        toggled = (state & TBSTATE_CHECKED) != 0;
 
-    bool toggled = tool->IsToggled();
+        // ignore the event when a radio button is released, as this doesn't seem to
+        // happen at all, and is handled otherwise
+        if ( tool->GetKind() == wxITEM_RADIO && !toggled )
+            return TRUE;
+
+        tool->Toggle(toggled);
+        UnToggleRadioGroup(tool);
+    }
 
-    // avoid sending the event when a radio button is released, this is not
-    // interesting
-    if ( !tool->CanBeToggled() || tool->GetKind() != wxITEM_RADIO || toggled )
+    // OnLeftClick() can veto the button state change - for buttons which
+    // may be toggled only, of couse
+    if ( !OnLeftClick((int)id, toggled) && tool->CanBeToggled() )
     {
-        // OnLeftClick() can veto the button state change - for buttons which
-        // may be toggled only, of couse
-        if ( !OnLeftClick((int)id, toggled) && tool->CanBeToggled() )
-        {
-            // revert back
-            toggled = !toggled;
-            tool->SetToggle(toggled);
+        // revert back
+        tool->Toggle(!toggled);
 
-            ::SendMessage(GetHwnd(), TB_CHECKBUTTON, id, MAKELONG(toggled, 0));
-        }
+        ::SendMessage(GetHwnd(), TB_CHECKBUTTON, id, MAKELONG(toggled, 0));
     }
 

 	  	 
