From 259f260927adfb09ee773822de8af57d063673f0 Mon Sep 17 00:00:00 2001
From: Thomas Goyne <tgoyne@gmail.com>
Date: Wed, 19 Mar 2014 17:15:22 -0700
Subject: [PATCH 1/2] Add configure checks and defs.h support for wxOVERRIDE

---
 acinclude.m4      | 33 ++++++++++++++++++++++++++++++++
 configure         | 56 +++++++++++++++++++++++++++++++++++++++++++++++++++++++
 configure.in      |  3 +++
 include/wx/defs.h | 20 ++++++++++++++++++++
 setup.h.in        |  5 +++++
 5 files changed, 117 insertions(+)

diff --git a/acinclude.m4 b/acinclude.m4
index bd17ead..4467957 100644
--- a/acinclude.m4
+++ b/acinclude.m4
@@ -256,6 +256,39 @@ AC_DEFUN([WX_CPP_EXPLICIT],
 ])
 
 dnl ---------------------------------------------------------------------------
+dnl WX_CPP_OVERRIDE checks whether the C++ compiler support the override
+dnl keyword and defines HAVE_OVERRIDE if this is the case
+dnl ---------------------------------------------------------------------------
+
+AC_DEFUN([WX_CPP_OVERRIDE],
+[
+  AC_CACHE_CHECK([if C++ compiler supports the override keyword],
+                 wx_cv_override,
+  [
+    AC_LANG_SAVE
+    AC_LANG_CPLUSPLUS
+
+    AC_TRY_COMPILE(
+      [
+        struct Base { virtual void Foo() = 0; };
+        struct Derived : Base { virtual void Foo() override { } };
+      ],
+      [
+        return 0;
+      ],
+      wx_cv_override=yes,
+      wx_cv_override=no
+    )
+
+    AC_LANG_RESTORE
+  ])
+
+  if test "$wx_cv_override" = "yes"; then
+    AC_DEFINE(HAVE_OVERRIDE)
+  fi
+])
+
+dnl ---------------------------------------------------------------------------
 dnl WX_CHECK_FUNCS(FUNCTIONS...,
 dnl                [ACTION-IF-FOUND],
 dnl                [ACTION-IF-NOT-FOUND],
diff --git a/configure b/configure
index 1e86b67..c5c9720 100755
--- a/configure
+++ b/configure
@@ -21173,6 +21173,62 @@ $as_echo "$wx_cv_explicit" >&6; }
   fi
 
 
+
+  { $as_echo "$as_me:${as_lineno-$LINENO}: checking if C++ compiler supports the override keyword" >&5
+$as_echo_n "checking if C++ compiler supports the override keyword... " >&6; }
+if ${wx_cv_override+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+
+
+    ac_ext=cpp
+ac_cpp='$CXXCPP $CPPFLAGS'
+ac_compile='$CXX -c $CXXFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CXX -o conftest$ac_exeext $CXXFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_cxx_compiler_gnu
+
+
+    cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+        struct Base { virtual void Foo() = 0; };
+        struct Derived : Base { virtual void Foo() override { } };
+
+int
+main ()
+{
+
+        return 0;
+
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_cxx_try_compile "$LINENO"; then :
+  wx_cv_override=yes
+else
+  wx_cv_override=no
+
+fi
+rm -f core conftest.err conftest.$ac_objext conftest.$ac_ext
+
+    ac_ext=c
+ac_cpp='$CPP $CPPFLAGS'
+ac_compile='$CC -c $CFLAGS $CPPFLAGS conftest.$ac_ext >&5'
+ac_link='$CC -o conftest$ac_exeext $CFLAGS $CPPFLAGS $LDFLAGS conftest.$ac_ext $LIBS >&5'
+ac_compiler_gnu=$ac_cv_c_compiler_gnu
+
+
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $wx_cv_override" >&5
+$as_echo "$wx_cv_override" >&6; }
+
+  if test "$wx_cv_override" = "yes"; then
+    $as_echo "#define HAVE_OVERRIDE 1" >>confdefs.h
+
+  fi
+
+
 if test "x$SUNCXX" = xyes; then
     CXXFLAGS="-features=tmplife $GNU_SOURCE_FLAG $CXXFLAGS"
 fi
diff --git a/configure.in b/configure.in
index c8d2732..c6b73c4 100644
--- a/configure.in
+++ b/configure.in
@@ -1793,6 +1793,9 @@ WX_CPP_NEW_HEADERS(, AC_DEFINE(wxUSE_IOSTREAMH))
 dnl check whether C++ compiler supports explicit keyword
 WX_CPP_EXPLICIT
 
+dnl check whether C++ compiler supports override keyword
+WX_CPP_OVERRIDE
+
 dnl With Sun CC, temporaries have block scope by default. This flag is needed
 dnl to get the expression scope behaviour that conforms to the standard.
 if test "x$SUNCXX" = xyes; then
diff --git a/include/wx/defs.h b/include/wx/defs.h
index e921069..6e6ed05 100644
--- a/include/wx/defs.h
+++ b/include/wx/defs.h
@@ -269,6 +269,26 @@ typedef short int WXTYPE;
     #define wxEXPLICIT
 #endif /*  HAVE_EXPLICIT/!HAVE_EXPLICIT */
 
+/*  check for override keyword support */
+#ifndef HAVE_OVERRIDE
+    #if defined(__VISUALC__) && (__VISUALC__ >= 1400)
+        /* VC++ 8.0+ support C++/CLI's override, sealed, and abstract in native
+         * code as a nonstandard extension, and C++/CLI's override fortunately
+         * matches C++11's */
+        #define HAVE_OVERRIDE
+    #elif wxCHECK_GCC_VERSION(4, 7) && __cplusplus >= 201103L
+        #define HAVE_OVERRIDE
+    #elif defined(__has_feature) && __has_feature(cxx_override_control)
+        #define HAVE_OVERRIDE
+    #endif
+#endif /*  !HAVE_OVERRIDE */
+
+#ifdef HAVE_OVERRIDE
+    #define wxOVERRIDE override
+#else /*  !HAVE_OVERRIDE */
+    #define wxOVERRIDE
+#endif /*  HAVE_OVERRIDE/!HAVE_EXPLICIT */
+
 /* these macros are obsolete, use the standard C++ casts directly now */
 #define wx_static_cast(t, x) static_cast<t>(x)
 #define wx_const_cast(t, x) const_cast<t>(x)
diff --git a/setup.h.in b/setup.h.in
index 6b3b5c9..02bdf89 100644
--- a/setup.h.in
+++ b/setup.h.in
@@ -699,6 +699,11 @@
 #undef HAVE_EXPLICIT
 
 /*
+ * Define if your compiler supports the override keyword
+ */
+#undef HAVE_OVERRIDE
+
+/*
  * Define if your compiler has C99 va_copy
  */
 #undef HAVE_VA_COPY
-- 
1.9.0


From 6f260aad5768b613217308590e7dc4786ab0a8bb Mon Sep 17 00:00:00 2001
From: Thomas Goyne <tgoyne@gmail.com>
Date: Wed, 19 Mar 2014 19:27:47 -0700
Subject: [PATCH 2/2] Add wxOVERRIDE where applicable

---
 src/aui/auibar.cpp                 |   2 +-
 src/aui/auibook.cpp                |  10 +--
 src/aui/framemanager.cpp           |   2 +-
 src/aui/tabart.cpp                 |   2 +-
 src/common/any.cpp                 |  10 +--
 src/common/appbase.cpp             |   2 +-
 src/common/artprov.cpp             |   4 +-
 src/common/artstd.cpp              |   2 +-
 src/common/arttango.cpp            |   2 +-
 src/common/bmpbase.cpp             |   4 +-
 src/common/clipcmn.cpp             |   4 +-
 src/common/cmdline.cpp             |  18 ++--
 src/common/combocmn.cpp            |   8 +-
 src/common/cshelp.cpp              |   6 +-
 src/common/datetime.cpp            |   4 +-
 src/common/dcbase.cpp              |   4 +-
 src/common/dcbufcmn.cpp            |   4 +-
 src/common/debugrpt.cpp            |   2 +-
 src/common/dircmn.cpp              |  12 +--
 src/common/dlgcmn.cpp              |   4 +-
 src/common/dpycmn.cpp              |  16 ++--
 src/common/dynload.cpp             |   4 +-
 src/common/fdiodispatcher.cpp      |   4 +-
 src/common/filesys.cpp             |   4 +-
 src/common/fmapbase.cpp            |   4 +-
 src/common/fontenumcmn.cpp         |   4 +-
 src/common/fs_inet.cpp             |   4 +-
 src/common/fswatchercmn.cpp        |   8 +-
 src/common/http.cpp                |   4 +-
 src/common/iconbndl.cpp            |   2 +-
 src/common/image.cpp               |   4 +-
 src/common/init.cpp                |   2 +-
 src/common/intl.cpp                |   4 +-
 src/common/log.cpp                 |   2 +-
 src/common/markupparser.cpp        |  34 ++++----
 src/common/mimecmn.cpp             |   4 +-
 src/common/paper.cpp               |   4 +-
 src/common/prntbase.cpp            |   4 +-
 src/common/sckipc.cpp              |   4 +-
 src/common/socket.cpp              |   4 +-
 src/common/stattextcmn.cpp         |   4 +-
 src/common/strconv.cpp             |  16 ++--
 src/common/strvararg.cpp           |   8 +-
 src/common/translation.cpp         |   4 +-
 src/common/url.cpp                 |   4 +-
 src/common/variant.cpp             | 172 ++++++++++++++++++------------------
 src/common/wincmn.cpp              |  14 +--
 src/common/xlocale.cpp             |   4 +-
 src/common/zipstrm.cpp             |  26 +++---
 src/generic/animateg.cpp           |   4 +-
 src/generic/datectlg.cpp           |  12 +--
 src/generic/dbgrptg.cpp            |   4 +-
 src/generic/dirctrlg.cpp           |   4 +-
 src/generic/htmllbox.cpp           |   4 +-
 src/generic/logg.cpp               |   2 +-
 src/generic/markuptext.cpp         |  12 +--
 src/generic/msgdlgg.cpp            |   2 +-
 src/generic/renderg.cpp            |  46 +++++-----
 src/generic/richtooltipg.cpp       |   2 +-
 src/generic/scrlwing.cpp           |   4 +-
 src/generic/tipdlg.cpp             |   2 +-
 src/generic/treectlg.cpp           |   4 +-
 src/generic/treelist.cpp           |  30 +++----
 src/generic/vscroll.cpp            |   2 +-
 src/generic/wizard.cpp             |   6 +-
 src/html/helpdata.cpp              |   8 +-
 src/html/helpwnd.cpp               |   2 +-
 src/html/htmlfilt.cpp              |   8 +-
 src/html/htmlpars.cpp              |   8 +-
 src/html/htmlwin.cpp               |   6 +-
 src/html/htmprint.cpp              |   4 +-
 src/html/m_hline.cpp               |   4 +-
 src/html/m_image.cpp               |  20 ++---
 src/html/m_layout.cpp              |   4 +-
 src/html/m_links.cpp               |   4 +-
 src/html/m_list.cpp                |   6 +-
 src/html/m_tables.cpp              |   4 +-
 src/osx/artmac.cpp                 |   4 +-
 src/osx/carbon/cursor.cpp          |   2 +-
 src/osx/carbon/dcprint.cpp         |  14 +--
 src/osx/carbon/gdiobj.cpp          |   6 +-
 src/osx/carbon/graphics.cpp        | 174 ++++++++++++++++++-------------------
 src/osx/carbon/icon.cpp            |   2 +-
 src/osx/carbon/metafile.cpp        |   2 +-
 src/osx/carbon/renderer.cpp        |  34 ++++----
 src/osx/cocoa/button.mm            |   2 +-
 src/osx/cocoa/choice.mm            |   2 +-
 src/osx/cocoa/datetimectrl.mm      |  10 +--
 src/osx/cocoa/gauge.mm             |   8 +-
 src/osx/cocoa/listbox.mm           |  42 ++++-----
 src/osx/cocoa/mediactrl.mm         |  34 ++++----
 src/osx/cocoa/menu.mm              |  12 +--
 src/osx/cocoa/menuitem.mm          |  14 +--
 src/osx/cocoa/notebook.mm          |  12 +--
 src/osx/cocoa/preferences.mm       |  12 +--
 src/osx/cocoa/scrolbar.mm          |  12 +--
 src/osx/cocoa/slider.mm            |   4 +-
 src/osx/cocoa/spinbutt.mm          |   4 +-
 src/osx/cocoa/srchctrl.mm          |  16 ++--
 src/osx/cocoa/statbox.mm           |   2 +-
 src/osx/cocoa/stattext.mm          |   4 +-
 src/osx/cocoa/taskbar.mm           |  14 +--
 src/osx/cocoa/toolbar.mm           |   6 +-
 src/osx/core/bitmap.cpp            |   4 +-
 src/osx/core/display.cpp           |  20 ++---
 src/osx/core/hid.cpp               |   4 +-
 src/osx/core/hidjoystick.cpp       |   4 +-
 src/osx/core/sockosx.cpp           |  12 +--
 src/osx/core/sound.cpp             |   4 +-
 src/osx/core/utilsexc_cf.cpp       |   2 +-
 src/osx/dataview_osx.cpp           |  18 ++--
 src/osx/palette.cpp                |   2 +-
 src/osx/sound_osx.cpp              |   2 +-
 src/osx/window_osx.cpp             |   2 +-
 src/propgrid/advprops.cpp          |  12 +--
 src/propgrid/editors.cpp           |   8 +-
 src/propgrid/manager.cpp           |   6 +-
 src/propgrid/propgrid.cpp          |   6 +-
 src/propgrid/propgridiface.cpp     |   2 +-
 src/ribbon/page.cpp                |   2 +-
 src/richtext/richtextbuffer.cpp    |   4 +-
 src/richtext/richtextctrl.cpp      |  14 +--
 src/richtext/richtextformatdlg.cpp |   4 +-
 src/stc/PlatWX.cpp                 | 122 +++++++++++++-------------
 src/stc/ScintillaWX.cpp            |   6 +-
 src/unix/appunix.cpp               |   2 +-
 src/unix/evtloopunix.cpp           |   2 +-
 src/unix/fswatcher_kqueue.cpp      |  14 +--
 src/unix/threadpsx.cpp             |   4 +-
 src/unix/timerunx.cpp              |   4 +-
 src/xrc/xh_unkwn.cpp               |   4 +-
 src/xrc/xmlres.cpp                 |   6 +-
 utils/wxrc/wxrc.cpp                |   4 +-
 133 files changed, 722 insertions(+), 722 deletions(-)

diff --git a/src/aui/auibar.cpp b/src/aui/auibar.cpp
index 05dee6c..5a07334 100644
--- a/src/aui/auibar.cpp
+++ b/src/aui/auibar.cpp
@@ -98,7 +98,7 @@ public:
     ToolbarCommandCapture() { m_lastId = 0; }
     int GetCommandId() const { return m_lastId; }
 
-    bool ProcessEvent(wxEvent& evt)
+    bool ProcessEvent(wxEvent& evt) wxOVERRIDE
     {
         if (evt.GetEventType() == wxEVT_MENU)
         {
diff --git a/src/aui/auibook.cpp b/src/aui/auibook.cpp
index 7177109..7142617 100644
--- a/src/aui/auibook.cpp
+++ b/src/aui/auibook.cpp
@@ -1495,20 +1495,20 @@ public:
 protected:
     void DoSetSize(int x, int y,
                    int width, int height,
-                   int WXUNUSED(sizeFlags = wxSIZE_AUTO))
+                   int WXUNUSED(sizeFlags = wxSIZE_AUTO)) wxOVERRIDE
     {
         m_rect = wxRect(x, y, width, height);
         DoSizing();
     }
 
-    void DoGetClientSize(int* x, int* y) const
+    void DoGetClientSize(int* x, int* y) const wxOVERRIDE
     {
         *x = m_rect.width;
         *y = m_rect.height;
     }
 
 public:
-    bool Show( bool WXUNUSED(show = true) ) { return false; }
+    bool Show( bool WXUNUSED(show = true) ) wxOVERRIDE { return false; }
 
     void DoSizing()
     {
@@ -1584,7 +1584,7 @@ public:
     }
 
 protected:
-    void DoGetSize(int* x, int* y) const
+    void DoGetSize(int* x, int* y) const wxOVERRIDE
     {
         if (x)
             *x = m_rect.GetWidth();
@@ -1593,7 +1593,7 @@ protected:
     }
 
 public:
-    void Update()
+    void Update() wxOVERRIDE
     {
         // does nothing
     }
diff --git a/src/aui/framemanager.cpp b/src/aui/framemanager.cpp
index 20e6547..55451cc 100644
--- a/src/aui/framemanager.cpp
+++ b/src/aui/framemanager.cpp
@@ -112,7 +112,7 @@ public:
         SetTransparent(0);
     }
 
-    virtual bool SetTransparent(wxByte alpha)
+    virtual bool SetTransparent(wxByte alpha) wxOVERRIDE
     {
         if (m_canSetShape)
         {
diff --git a/src/aui/tabart.cpp b/src/aui/tabart.cpp
index bc37671..668b4d1 100644
--- a/src/aui/tabart.cpp
+++ b/src/aui/tabart.cpp
@@ -47,7 +47,7 @@ public:
     wxAuiCommandCapture() { m_lastId = 0; }
     int GetCommandId() const { return m_lastId; }
 
-    bool ProcessEvent(wxEvent& evt)
+    bool ProcessEvent(wxEvent& evt) wxOVERRIDE
     {
         if (evt.GetEventType() == wxEVT_MENU)
         {
diff --git a/src/common/any.cpp b/src/common/any.cpp
index f866c59..dc8da3f 100644
--- a/src/common/any.cpp
+++ b/src/common/any.cpp
@@ -216,11 +216,11 @@ public:
     wxAnyValueTypeGlobalsManager() : wxModule() { }
     virtual ~wxAnyValueTypeGlobalsManager() { }
 
-    virtual bool OnInit()
+    virtual bool OnInit() wxOVERRIDE
     {
         return true;
     }
-    virtual void OnExit()
+    virtual void OnExit() wxOVERRIDE
     {
         wxDELETE(g_wxAnyValueTypeGlobals);
     }
@@ -495,13 +495,13 @@ class wxAnyValueTypeImpl<wxAnyNullValue> : public wxAnyValueType
     WX_DECLARE_ANY_VALUE_TYPE(wxAnyValueTypeImpl<wxAnyNullValue>)
 public:
     // Dummy implementations
-    virtual void DeleteValue(wxAnyValueBuffer& buf) const
+    virtual void DeleteValue(wxAnyValueBuffer& buf) const wxOVERRIDE
     {
         wxUnusedVar(buf);
     }
 
     virtual void CopyBuffer(const wxAnyValueBuffer& src,
-                            wxAnyValueBuffer& dst) const
+                            wxAnyValueBuffer& dst) const wxOVERRIDE
     {
         wxUnusedVar(src);
         wxUnusedVar(dst);
@@ -509,7 +509,7 @@ public:
 
     virtual bool ConvertValue(const wxAnyValueBuffer& src,
                               wxAnyValueType* dstType,
-                              wxAnyValueBuffer& dst) const
+                              wxAnyValueBuffer& dst) const wxOVERRIDE
     {
         wxUnusedVar(src);
         wxUnusedVar(dstType);
diff --git a/src/common/appbase.cpp b/src/common/appbase.cpp
index 68113d9..87e64bb 100644
--- a/src/common/appbase.cpp
+++ b/src/common/appbase.cpp
@@ -938,7 +938,7 @@ wxString wxAppTraitsBase::GetAssertStackTrace()
         const wxString& GetStackTrace() const { return m_stackTrace; }
 
     protected:
-        virtual void OnStackFrame(const wxStackFrame& frame)
+        virtual void OnStackFrame(const wxStackFrame& frame) wxOVERRIDE
         {
             m_stackTrace << wxString::Format
                             (
diff --git a/src/common/artprov.cpp b/src/common/artprov.cpp
index 1be1f22..29c4c54 100644
--- a/src/common/artprov.cpp
+++ b/src/common/artprov.cpp
@@ -411,7 +411,7 @@ bool wxArtProvider::HasNativeProvider()
 class wxArtProviderModule: public wxModule
 {
 public:
-    bool OnInit()
+    bool OnInit() wxOVERRIDE
     {
         // The order here is such that the native provider will be used first
         // and the standard one last as all these default providers add
@@ -425,7 +425,7 @@ public:
 #endif // wxUSE_ARTPROVIDER_STD
         return true;
     }
-    void OnExit()
+    void OnExit() wxOVERRIDE
     {
         wxArtProvider::CleanUpProviders();
     }
diff --git a/src/common/artstd.cpp b/src/common/artstd.cpp
index 4711466..a66f91f 100644
--- a/src/common/artstd.cpp
+++ b/src/common/artstd.cpp
@@ -35,7 +35,7 @@ class wxDefaultArtProvider : public wxArtProvider
 {
 protected:
     virtual wxBitmap CreateBitmap(const wxArtID& id, const wxArtClient& client,
-                                  const wxSize& size);
+                                  const wxSize& size) wxOVERRIDE;
 };
 
 // ----------------------------------------------------------------------------
diff --git a/src/common/arttango.cpp b/src/common/arttango.cpp
index 156ae8f..98e6f00 100644
--- a/src/common/arttango.cpp
+++ b/src/common/arttango.cpp
@@ -91,7 +91,7 @@ public:
 protected:
     virtual wxBitmap CreateBitmap(const wxArtID& id,
                                   const wxArtClient& client,
-                                  const wxSize& size);
+                                  const wxSize& size) wxOVERRIDE;
 
 private:
     bool m_imageHandledAdded;
diff --git a/src/common/bmpbase.cpp b/src/common/bmpbase.cpp
index 763b959..a92b960 100644
--- a/src/common/bmpbase.cpp
+++ b/src/common/bmpbase.cpp
@@ -166,8 +166,8 @@ class wxBitmapBaseModule: public wxModule
 DECLARE_DYNAMIC_CLASS(wxBitmapBaseModule)
 public:
     wxBitmapBaseModule() {}
-    bool OnInit() { wxBitmap::InitStandardHandlers(); return true; }
-    void OnExit() { wxBitmap::CleanUpHandlers(); }
+    bool OnInit() wxOVERRIDE { wxBitmap::InitStandardHandlers(); return true; }
+    void OnExit() wxOVERRIDE { wxBitmap::CleanUpHandlers(); }
 };
 
 IMPLEMENT_DYNAMIC_CLASS(wxBitmapBaseModule, wxModule)
diff --git a/src/common/clipcmn.cpp b/src/common/clipcmn.cpp
index b108944..ff72a13 100644
--- a/src/common/clipcmn.cpp
+++ b/src/common/clipcmn.cpp
@@ -99,8 +99,8 @@ bool wxClipboardBase::IsSupportedAsync( wxEvtHandler *sink )
 class wxClipboardModule : public wxModule
 {
 public:
-    bool OnInit() { return true; }
-    void OnExit() { wxDELETE(gs_clipboard); }
+    bool OnInit() wxOVERRIDE { return true; }
+    void OnExit() wxOVERRIDE { wxDELETE(gs_clipboard); }
 
 private:
     DECLARE_DYNAMIC_CLASS(wxClipboardModule)
diff --git a/src/common/cmdline.cpp b/src/common/cmdline.cpp
index c6067e4..3ad232b 100644
--- a/src/common/cmdline.cpp
+++ b/src/common/cmdline.cpp
@@ -99,29 +99,29 @@ public:
     wxCmdLineParamType type;
 
     // from wxCmdLineArg
-    virtual wxCmdLineEntryType GetKind() const { return kind; }
-    virtual wxString GetShortName() const {
+    virtual wxCmdLineEntryType GetKind() const wxOVERRIDE { return kind; }
+    virtual wxString GetShortName() const wxOVERRIDE {
         wxASSERT_MSG( kind == wxCMD_LINE_OPTION || kind == wxCMD_LINE_SWITCH,
                       wxT("kind mismatch in wxCmdLineArg") );
         return shortName;
     }
-    virtual wxString GetLongName() const {
+    virtual wxString GetLongName() const wxOVERRIDE {
         wxASSERT_MSG( kind == wxCMD_LINE_OPTION || kind == wxCMD_LINE_SWITCH,
                       wxT("kind mismatch in wxCmdLineArg") );
         return longName;
     }
-    virtual wxCmdLineParamType GetType() const {
+    virtual wxCmdLineParamType GetType() const wxOVERRIDE {
         wxASSERT_MSG( kind == wxCMD_LINE_OPTION,
                       wxT("kind mismatch in wxCmdLineArg") );
         return type;
     }
-    double GetDoubleVal() const;
-    long GetLongVal() const;
-    const wxString& GetStrVal() const;
+    double GetDoubleVal() const wxOVERRIDE;
+    long GetLongVal() const wxOVERRIDE;
+    const wxString& GetStrVal() const wxOVERRIDE;
 #if wxUSE_DATETIME
-    const wxDateTime& GetDateVal() const;
+    const wxDateTime& GetDateVal() const wxOVERRIDE;
 #endif // wxUSE_DATETIME
-    bool IsNegated() const {
+    bool IsNegated() const wxOVERRIDE {
         wxASSERT_MSG( kind == wxCMD_LINE_SWITCH,
                       wxT("kind mismatch in wxCmdLineArg") );
         return m_isNegated;
diff --git a/src/common/combocmn.cpp b/src/common/combocmn.cpp
index e3933cc..66c97af 100644
--- a/src/common/combocmn.cpp
+++ b/src/common/combocmn.cpp
@@ -473,10 +473,10 @@ public:
     }
 
 #if USES_WXPOPUPTRANSIENTWINDOW
-    virtual bool Show( bool show );
-    virtual bool ProcessLeftDown(wxMouseEvent& event);
+    virtual bool Show( bool show ) wxOVERRIDE;
+    virtual bool ProcessLeftDown(wxMouseEvent& event) wxOVERRIDE;
 protected:
-    virtual void OnDismiss();
+    virtual void OnDismiss() wxOVERRIDE;
 #endif
 
 private:
@@ -946,7 +946,7 @@ public:
     wxComboCtrlTextCtrl() : wxTextCtrl() { }
     virtual ~wxComboCtrlTextCtrl() { }
 
-    virtual wxWindow *GetMainWindowOfCompositeControl()
+    virtual wxWindow *GetMainWindowOfCompositeControl() wxOVERRIDE
     {
         wxComboCtrl* combo = (wxComboCtrl*) GetParent();
 
diff --git a/src/common/cshelp.cpp b/src/common/cshelp.cpp
index f8cad5a..9f99a8e 100644
--- a/src/common/cshelp.cpp
+++ b/src/common/cshelp.cpp
@@ -52,7 +52,7 @@ public:
         m_contextHelp = contextHelp;
     }
 
-    virtual bool ProcessEvent(wxEvent& event);
+    virtual bool ProcessEvent(wxEvent& event) wxOVERRIDE;
 
 //// Data
     wxContextHelp* m_contextHelp;
@@ -480,8 +480,8 @@ wxString wxContextId(int id)
 class wxHelpProviderModule : public wxModule
 {
 public:
-    bool OnInit();
-    void OnExit();
+    bool OnInit() wxOVERRIDE;
+    void OnExit() wxOVERRIDE;
 
 private:
     DECLARE_DYNAMIC_CLASS(wxHelpProviderModule)
diff --git a/src/common/datetime.cpp b/src/common/datetime.cpp
index e94ff7b..574af7e 100644
--- a/src/common/datetime.cpp
+++ b/src/common/datetime.cpp
@@ -123,14 +123,14 @@ wxCUSTOM_TYPE_INFO(wxDateTime, wxToStringConverter<wxDateTime> , wxFromStringCon
 class wxDateTimeHolidaysModule : public wxModule
 {
 public:
-    virtual bool OnInit()
+    virtual bool OnInit() wxOVERRIDE
     {
         wxDateTimeHolidayAuthority::AddAuthority(new wxDateTimeWorkDays);
 
         return true;
     }
 
-    virtual void OnExit()
+    virtual void OnExit() wxOVERRIDE
     {
         wxDateTimeHolidayAuthority::ClearAllAuthorities();
         wxDateTimeHolidayAuthority::ms_authorities.clear();
diff --git a/src/common/dcbase.cpp b/src/common/dcbase.cpp
index 0823b27..f8337b3 100644
--- a/src/common/dcbase.cpp
+++ b/src/common/dcbase.cpp
@@ -117,8 +117,8 @@ wxDCFactory *wxDCFactory::Get()
 class wxDCFactoryCleanupModule : public wxModule
 {
 public:
-    virtual bool OnInit() { return true; }
-    virtual void OnExit() { wxDCFactory::Set(NULL); }
+    virtual bool OnInit() wxOVERRIDE { return true; }
+    virtual void OnExit() wxOVERRIDE { wxDCFactory::Set(NULL); }
 
 private:
     DECLARE_DYNAMIC_CLASS(wxDCFactoryCleanupModule)
diff --git a/src/common/dcbufcmn.cpp b/src/common/dcbufcmn.cpp
index 3bc2e27..ca100fa 100644
--- a/src/common/dcbufcmn.cpp
+++ b/src/common/dcbufcmn.cpp
@@ -45,8 +45,8 @@ class wxSharedDCBufferManager : public wxModule
 public:
     wxSharedDCBufferManager() { }
 
-    virtual bool OnInit() { return true; }
-    virtual void OnExit() { wxDELETE(ms_buffer); }
+    virtual bool OnInit() wxOVERRIDE { return true; }
+    virtual void OnExit() wxOVERRIDE { wxDELETE(ms_buffer); }
 
     static wxBitmap* GetBuffer(int w, int h)
     {
diff --git a/src/common/debugrpt.cpp b/src/common/debugrpt.cpp
index 7f3c5fb..efd4094 100644
--- a/src/common/debugrpt.cpp
+++ b/src/common/debugrpt.cpp
@@ -77,7 +77,7 @@ public:
     bool IsOk() const { return m_isOk; }
 
 protected:
-    virtual void OnStackFrame(const wxStackFrame& frame);
+    virtual void OnStackFrame(const wxStackFrame& frame) wxOVERRIDE;
 
     wxXmlNode *m_nodeStack;
     bool m_isOk;
diff --git a/src/common/dircmn.cpp b/src/common/dircmn.cpp
index 1185686..311d1ca 100644
--- a/src/common/dircmn.cpp
+++ b/src/common/dircmn.cpp
@@ -222,13 +222,13 @@ class wxDirTraverserSimple : public wxDirTraverser
 public:
     wxDirTraverserSimple(wxArrayString& files) : m_files(files) { }
 
-    virtual wxDirTraverseResult OnFile(const wxString& filename)
+    virtual wxDirTraverseResult OnFile(const wxString& filename) wxOVERRIDE
     {
         m_files.push_back(filename);
         return wxDIR_CONTINUE;
     }
 
-    virtual wxDirTraverseResult OnDir(const wxString& WXUNUSED(dirname))
+    virtual wxDirTraverseResult OnDir(const wxString& WXUNUSED(dirname)) wxOVERRIDE
     {
         return wxDIR_CONTINUE;
     }
@@ -269,13 +269,13 @@ class wxDirTraverserFindFirst : public wxDirTraverser
 public:
     wxDirTraverserFindFirst() { }
 
-    virtual wxDirTraverseResult OnFile(const wxString& filename)
+    virtual wxDirTraverseResult OnFile(const wxString& filename) wxOVERRIDE
     {
         m_file = filename;
         return wxDIR_STOP;
     }
 
-    virtual wxDirTraverseResult OnDir(const wxString& WXUNUSED(dirname))
+    virtual wxDirTraverseResult OnDir(const wxString& WXUNUSED(dirname)) wxOVERRIDE
     {
         return wxDIR_CONTINUE;
     }
@@ -320,7 +320,7 @@ class wxDirTraverserSumSize : public wxDirTraverser
 public:
     wxDirTraverserSumSize() { }
 
-    virtual wxDirTraverseResult OnFile(const wxString& filename)
+    virtual wxDirTraverseResult OnFile(const wxString& filename) wxOVERRIDE
     {
         // wxFileName::GetSize won't use this class again as
         // we're passing it a file and not a directory;
@@ -342,7 +342,7 @@ public:
         return wxDIR_CONTINUE;
     }
 
-    virtual wxDirTraverseResult OnDir(const wxString& WXUNUSED(dirname))
+    virtual wxDirTraverseResult OnDir(const wxString& WXUNUSED(dirname)) wxOVERRIDE
     {
         return wxDIR_CONTINUE;
     }
diff --git a/src/common/dlgcmn.cpp b/src/common/dlgcmn.cpp
index a8e1527..4b23e83 100644
--- a/src/common/dlgcmn.cpp
+++ b/src/common/dlgcmn.cpp
@@ -1001,8 +1001,8 @@ class wxDialogLayoutAdapterModule: public wxModule
     DECLARE_DYNAMIC_CLASS(wxDialogLayoutAdapterModule)
 public:
     wxDialogLayoutAdapterModule() {}
-    virtual void OnExit() { delete wxDialogBase::SetLayoutAdapter(NULL); }
-    virtual bool OnInit() { wxDialogBase::SetLayoutAdapter(new wxStandardDialogLayoutAdapter); return true; }
+    virtual void OnExit() wxOVERRIDE { delete wxDialogBase::SetLayoutAdapter(NULL); }
+    virtual bool OnInit() wxOVERRIDE { wxDialogBase::SetLayoutAdapter(new wxStandardDialogLayoutAdapter); return true; }
 };
 
 IMPLEMENT_DYNAMIC_CLASS(wxDialogLayoutAdapterModule, wxModule)
diff --git a/src/common/dpycmn.cpp b/src/common/dpycmn.cpp
index 1556d57..0d93fd6 100644
--- a/src/common/dpycmn.cpp
+++ b/src/common/dpycmn.cpp
@@ -59,28 +59,28 @@ class WXDLLEXPORT wxDisplayImplSingle : public wxDisplayImpl
 public:
     wxDisplayImplSingle() : wxDisplayImpl(0) { }
 
-    virtual wxRect GetGeometry() const
+    virtual wxRect GetGeometry() const wxOVERRIDE
     {
         wxRect r;
         wxDisplaySize(&r.width, &r.height);
         return r;
     }
 
-    virtual wxRect GetClientArea() const { return wxGetClientDisplayRect(); }
+    virtual wxRect GetClientArea() const wxOVERRIDE { return wxGetClientDisplayRect(); }
 
-    virtual wxString GetName() const { return wxString(); }
+    virtual wxString GetName() const wxOVERRIDE { return wxString(); }
 
 #if wxUSE_DISPLAY
     // no video modes support for us, provide just the stubs
 
-    virtual wxArrayVideoModes GetModes(const wxVideoMode& WXUNUSED(mode)) const
+    virtual wxArrayVideoModes GetModes(const wxVideoMode& WXUNUSED(mode)) const wxOVERRIDE
     {
         return wxArrayVideoModes();
     }
 
-    virtual wxVideoMode GetCurrentMode() const { return wxVideoMode(); }
+    virtual wxVideoMode GetCurrentMode() const wxOVERRIDE { return wxVideoMode(); }
 
-    virtual bool ChangeMode(const wxVideoMode& WXUNUSED(mode)) { return false; }
+    virtual bool ChangeMode(const wxVideoMode& WXUNUSED(mode)) wxOVERRIDE { return false; }
 #endif // wxUSE_DISPLAY
 
 
@@ -94,8 +94,8 @@ public:
 class wxDisplayModule : public wxModule
 {
 public:
-    virtual bool OnInit() { return true; }
-    virtual void OnExit()
+    virtual bool OnInit() wxOVERRIDE { return true; }
+    virtual void OnExit() wxOVERRIDE
     {
         wxDELETE(gs_factory);
     }
diff --git a/src/common/dynload.cpp b/src/common/dynload.cpp
index 0b184d0..9c3ff74 100644
--- a/src/common/dynload.cpp
+++ b/src/common/dynload.cpp
@@ -51,14 +51,14 @@ public:
     wxPluginLibraryModule() { }
 
     // TODO: create ms_classes on demand, why always preallocate it?
-    virtual bool OnInit()
+    virtual bool OnInit() wxOVERRIDE
     {
         wxPluginLibrary::ms_classes = new wxDLImports;
         wxPluginManager::CreateManifest();
         return true;
     }
 
-    virtual void OnExit()
+    virtual void OnExit() wxOVERRIDE
     {
         wxDELETE(wxPluginLibrary::ms_classes);
         wxPluginManager::ClearManifest();
diff --git a/src/common/fdiodispatcher.cpp b/src/common/fdiodispatcher.cpp
index 6093875..4a71593 100644
--- a/src/common/fdiodispatcher.cpp
+++ b/src/common/fdiodispatcher.cpp
@@ -135,8 +135,8 @@ bool wxMappedFDIODispatcher::UnregisterFD(int fd)
 class wxFDIODispatcherModule : public wxModule
 {
 public:
-    virtual bool OnInit() { return true; }
-    virtual void OnExit() { wxDELETE(gs_dispatcher); }
+    virtual bool OnInit() wxOVERRIDE { return true; }
+    virtual void OnExit() wxOVERRIDE { wxDELETE(gs_dispatcher); }
 
 private:
     DECLARE_DYNAMIC_CLASS(wxFDIODispatcherModule)
diff --git a/src/common/filesys.cpp b/src/common/filesys.cpp
index 06edca2..fadcec6 100644
--- a/src/common/filesys.cpp
+++ b/src/common/filesys.cpp
@@ -735,13 +735,13 @@ class wxFileSystemModule : public wxModule
         {
         }
 
-        virtual bool OnInit()
+        virtual bool OnInit() wxOVERRIDE
         {
             m_handler = new wxLocalFSHandler;
             wxFileSystem::AddHandler(m_handler);
             return true;
         }
-        virtual void OnExit()
+        virtual void OnExit() wxOVERRIDE
         {
             delete wxFileSystem::RemoveHandler(m_handler);
 
diff --git a/src/common/fmapbase.cpp b/src/common/fmapbase.cpp
index 698996c..465cdd1 100644
--- a/src/common/fmapbase.cpp
+++ b/src/common/fmapbase.cpp
@@ -362,7 +362,7 @@ class wxFontMapperModule : public wxModule
 public:
     wxFontMapperModule() : wxModule() { }
 
-    virtual bool OnInit()
+    virtual bool OnInit() wxOVERRIDE
     {
         // a dummy wxFontMapperBase object could have been created during the
         // program startup before wxApp was created, we have to delete it to
@@ -376,7 +376,7 @@ public:
         return true;
     }
 
-    virtual void OnExit()
+    virtual void OnExit() wxOVERRIDE
     {
         wxFontMapperBase::Reset();
     }
diff --git a/src/common/fontenumcmn.cpp b/src/common/fontenumcmn.cpp
index 1185a86..3fc8378 100644
--- a/src/common/fontenumcmn.cpp
+++ b/src/common/fontenumcmn.cpp
@@ -39,7 +39,7 @@ public:
     wxSimpleFontEnumerator() { }
 
     // called by EnumerateFacenames
-    virtual bool OnFacename(const wxString& facename)
+    virtual bool OnFacename(const wxString& facename) wxOVERRIDE
     {
         m_arrFacenames.Add(facename);
         return true;
@@ -47,7 +47,7 @@ public:
 
     // called by EnumerateEncodings
     virtual bool OnFontEncoding(const wxString& WXUNUSED(facename),
-                                const wxString& encoding)
+                                const wxString& encoding) wxOVERRIDE
     {
         m_arrEncodings.Add(encoding);
         return true;
diff --git a/src/common/fs_inet.cpp b/src/common/fs_inet.cpp
index 6a9a479..03f3cc0 100644
--- a/src/common/fs_inet.cpp
+++ b/src/common/fs_inet.cpp
@@ -144,14 +144,14 @@ class wxFileSystemInternetModule : public wxModule
         {
         }
 
-        virtual bool OnInit()
+        virtual bool OnInit() wxOVERRIDE
         {
             m_handler = new wxInternetFSHandler;
             wxFileSystem::AddHandler(m_handler);
             return true;
         }
 
-        virtual void OnExit()
+        virtual void OnExit() wxOVERRIDE
         {
             delete wxFileSystem::RemoveHandler(m_handler);
         }
diff --git a/src/common/fswatchercmn.cpp b/src/common/fswatchercmn.cpp
index 66fb869..7ef35a8 100644
--- a/src/common/fswatchercmn.cpp
+++ b/src/common/fswatchercmn.cpp
@@ -192,14 +192,14 @@ bool wxFileSystemWatcherBase::AddTree(const wxFileName& path, int events,
         {
         }
 
-        virtual wxDirTraverseResult OnFile(const wxString& WXUNUSED(filename))
+        virtual wxDirTraverseResult OnFile(const wxString& WXUNUSED(filename)) wxOVERRIDE
         {
             // There is no need to watch individual files as we watch the
             // parent directory which will notify us about any changes in them.
             return wxDIR_CONTINUE;
         }
 
-        virtual wxDirTraverseResult OnDir(const wxString& dirname)
+        virtual wxDirTraverseResult OnDir(const wxString& dirname) wxOVERRIDE
         {
             if ( m_watcher->AddAny(wxFileName::DirName(dirname),
                                    m_events, wxFSWPath_Tree, m_filespec) )
@@ -248,14 +248,14 @@ bool wxFileSystemWatcherBase::RemoveTree(const wxFileName& path)
         {
         }
 
-        virtual wxDirTraverseResult OnFile(const wxString& WXUNUSED(filename))
+        virtual wxDirTraverseResult OnFile(const wxString& WXUNUSED(filename)) wxOVERRIDE
         {
             // We never watch the individual files when watching the tree, so
             // nothing to do here.
             return wxDIR_CONTINUE;
         }
 
-        virtual wxDirTraverseResult OnDir(const wxString& dirname)
+        virtual wxDirTraverseResult OnDir(const wxString& dirname) wxOVERRIDE
         {
             m_watcher->Remove(wxFileName::DirName(dirname));
             return wxDIR_CONTINUE;
diff --git a/src/common/http.cpp b/src/common/http.cpp
index 0ecde88..1573866 100644
--- a/src/common/http.cpp
+++ b/src/common/http.cpp
@@ -468,11 +468,11 @@ public:
         m_read_bytes = 0;
     }
 
-    size_t GetSize() const { return m_httpsize; }
+    size_t GetSize() const wxOVERRIDE { return m_httpsize; }
     virtual ~wxHTTPStream(void) { m_http->Abort(); }
 
 protected:
-    size_t OnSysRead(void *buffer, size_t bufsize);
+    size_t OnSysRead(void *buffer, size_t bufsize) wxOVERRIDE;
 
     wxDECLARE_NO_COPY_CLASS(wxHTTPStream);
 };
diff --git a/src/common/iconbndl.cpp b/src/common/iconbndl.cpp
index f6e0ea5..4bb49e8 100644
--- a/src/common/iconbndl.cpp
+++ b/src/common/iconbndl.cpp
@@ -53,7 +53,7 @@ public:
 
     // default assignment operator and dtor are ok
 
-    virtual bool IsOk() const { return !m_icons.empty(); }
+    virtual bool IsOk() const wxOVERRIDE { return !m_icons.empty(); }
 
     wxIconArray m_icons;
 };
diff --git a/src/common/image.cpp b/src/common/image.cpp
index adf76e8..8cb549b 100644
--- a/src/common/image.cpp
+++ b/src/common/image.cpp
@@ -3649,8 +3649,8 @@ class wxImageModule: public wxModule
 DECLARE_DYNAMIC_CLASS(wxImageModule)
 public:
     wxImageModule() {}
-    bool OnInit() { wxImage::InitStandardHandlers(); return true; }
-    void OnExit() { wxImage::CleanUpHandlers(); }
+    bool OnInit() wxOVERRIDE { wxImage::InitStandardHandlers(); return true; }
+    void OnExit() wxOVERRIDE { wxImage::CleanUpHandlers(); }
 };
 
 IMPLEMENT_DYNAMIC_CLASS(wxImageModule, wxModule)
diff --git a/src/common/init.cpp b/src/common/init.cpp
index e00daeb..561566a 100644
--- a/src/common/init.cpp
+++ b/src/common/init.cpp
@@ -68,7 +68,7 @@ class wxDummyConsoleApp : public wxAppConsole
 public:
     wxDummyConsoleApp() { }
 
-    virtual int OnRun() { wxFAIL_MSG( wxT("unreachable code") ); return 0; }
+    virtual int OnRun() wxOVERRIDE { wxFAIL_MSG( wxT("unreachable code") ); return 0; }
     virtual bool DoYield(bool, long) { return true; }
 
     wxDECLARE_NO_COPY_CLASS(wxDummyConsoleApp);
diff --git a/src/common/intl.cpp b/src/common/intl.cpp
index f8b011a..dd1b0e8 100644
--- a/src/common/intl.cpp
+++ b/src/common/intl.cpp
@@ -1802,12 +1802,12 @@ class wxLocaleModule: public wxModule
     public:
         wxLocaleModule() {}
 
-        bool OnInit()
+        bool OnInit() wxOVERRIDE
         {
             return true;
         }
 
-        void OnExit()
+        void OnExit() wxOVERRIDE
         {
             wxLocale::DestroyLanguagesDB();
         }
diff --git a/src/common/log.cpp b/src/common/log.cpp
index 3180f46..e440025 100644
--- a/src/common/log.cpp
+++ b/src/common/log.cpp
@@ -170,7 +170,7 @@ public:
     wxLogOutputBest() { }
 
 protected:
-    virtual void DoLogText(const wxString& msg)
+    virtual void DoLogText(const wxString& msg) wxOVERRIDE
     {
         wxMessageOutputBest().Output(msg);
     }
diff --git a/src/common/markupparser.cpp b/src/common/markupparser.cpp
index 5dbbf84..9e20730 100644
--- a/src/common/markupparser.cpp
+++ b/src/common/markupparser.cpp
@@ -442,31 +442,31 @@ wxString wxMarkupParser::Strip(const wxString& text)
 
         const wxString& GetText() const { return m_text; }
 
-        virtual void OnText(const wxString& text) { m_text += text; }
+        virtual void OnText(const wxString& text) wxOVERRIDE { m_text += text; }
 
-        virtual void OnBoldStart() { }
-        virtual void OnBoldEnd() { }
+        virtual void OnBoldStart() wxOVERRIDE { }
+        virtual void OnBoldEnd() wxOVERRIDE { }
 
-        virtual void OnItalicStart() { }
-        virtual void OnItalicEnd() { }
+        virtual void OnItalicStart() wxOVERRIDE { }
+        virtual void OnItalicEnd() wxOVERRIDE { }
 
-        virtual void OnUnderlinedStart() { }
-        virtual void OnUnderlinedEnd() { }
+        virtual void OnUnderlinedStart() wxOVERRIDE { }
+        virtual void OnUnderlinedEnd() wxOVERRIDE { }
 
-        virtual void OnStrikethroughStart() { }
-        virtual void OnStrikethroughEnd() { }
+        virtual void OnStrikethroughStart() wxOVERRIDE { }
+        virtual void OnStrikethroughEnd() wxOVERRIDE { }
 
-        virtual void OnBigStart() { }
-        virtual void OnBigEnd() { }
+        virtual void OnBigStart() wxOVERRIDE { }
+        virtual void OnBigEnd() wxOVERRIDE { }
 
-        virtual void OnSmallStart() { }
-        virtual void OnSmallEnd() { }
+        virtual void OnSmallStart() wxOVERRIDE { }
+        virtual void OnSmallEnd() wxOVERRIDE { }
 
-        virtual void OnTeletypeStart() { }
-        virtual void OnTeletypeEnd() { }
+        virtual void OnTeletypeStart() wxOVERRIDE { }
+        virtual void OnTeletypeEnd() wxOVERRIDE { }
 
-        virtual void OnSpanStart(const wxMarkupSpanAttributes& WXUNUSED(a)) { }
-        virtual void OnSpanEnd(const wxMarkupSpanAttributes& WXUNUSED(a)) { }
+        virtual void OnSpanStart(const wxMarkupSpanAttributes& WXUNUSED(a)) wxOVERRIDE { }
+        virtual void OnSpanEnd(const wxMarkupSpanAttributes& WXUNUSED(a)) wxOVERRIDE { }
 
     private:
         wxString m_text;
diff --git a/src/common/mimecmn.cpp b/src/common/mimecmn.cpp
index ceb8622..57a54e1 100644
--- a/src/common/mimecmn.cpp
+++ b/src/common/mimecmn.cpp
@@ -741,8 +741,8 @@ class wxMimeTypeCmnModule: public wxModule
 public:
     wxMimeTypeCmnModule() : wxModule() { }
 
-    virtual bool OnInit() { return true; }
-    virtual void OnExit()
+    virtual bool OnInit() wxOVERRIDE { return true; }
+    virtual void OnExit() wxOVERRIDE
     {
         wxMimeTypesManagerFactory::Set(NULL);
 
diff --git a/src/common/paper.cpp b/src/common/paper.cpp
index 12df669..9610554 100644
--- a/src/common/paper.cpp
+++ b/src/common/paper.cpp
@@ -353,8 +353,8 @@ class WXDLLEXPORT wxPrintPaperModule: public wxModule
 DECLARE_DYNAMIC_CLASS(wxPrintPaperModule)
 public:
     wxPrintPaperModule() {}
-    bool OnInit();
-    void OnExit();
+    bool OnInit() wxOVERRIDE;
+    void OnExit() wxOVERRIDE;
 };
 
 IMPLEMENT_DYNAMIC_CLASS(wxPrintPaperModule, wxModule)
diff --git a/src/common/prntbase.cpp b/src/common/prntbase.cpp
index ed0d471..922b8c9 100644
--- a/src/common/prntbase.cpp
+++ b/src/common/prntbase.cpp
@@ -287,8 +287,8 @@ class wxPrintFactoryModule: public wxModule
 {
 public:
     wxPrintFactoryModule() {}
-    bool OnInit() { return true; }
-    void OnExit() { wxPrintFactory::SetPrintFactory( NULL ); }
+    bool OnInit() wxOVERRIDE { return true; }
+    void OnExit() wxOVERRIDE { wxPrintFactory::SetPrintFactory( NULL ); }
 
 private:
     DECLARE_DYNAMIC_CLASS(wxPrintFactoryModule)
diff --git a/src/common/sckipc.cpp b/src/common/sckipc.cpp
index ea1de8e..9d91a90 100644
--- a/src/common/sckipc.cpp
+++ b/src/common/sckipc.cpp
@@ -155,8 +155,8 @@ public:
     }
 
     // as ms_handler is initialized on demand, don't do anything in OnInit()
-    virtual bool OnInit() { return true; }
-    virtual void OnExit() { wxDELETE(ms_handler); }
+    virtual bool OnInit() wxOVERRIDE { return true; }
+    virtual void OnExit() wxOVERRIDE { wxDELETE(ms_handler); }
 
 private:
     static wxTCPEventHandler *ms_handler;
diff --git a/src/common/socket.cpp b/src/common/socket.cpp
index b39c9c6..bc2ec63 100644
--- a/src/common/socket.cpp
+++ b/src/common/socket.cpp
@@ -2130,14 +2130,14 @@ wxDatagramSocket& wxDatagramSocket::SendTo( const wxSockAddress& addr,
 class wxSocketModule : public wxModule
 {
 public:
-    virtual bool OnInit()
+    virtual bool OnInit() wxOVERRIDE
     {
         // wxSocketBase will call Initialize() itself only if sockets are
         // really used, don't do it from here
         return true;
     }
 
-    virtual void OnExit()
+    virtual void OnExit() wxOVERRIDE
     {
         if ( wxSocketBase::IsInitialized() )
             wxSocketBase::Shutdown();
diff --git a/src/common/stattextcmn.cpp b/src/common/stattextcmn.cpp
index ba7d7f6..b59869d 100644
--- a/src/common/stattextcmn.cpp
+++ b/src/common/stattextcmn.cpp
@@ -169,12 +169,12 @@ public:
     }
 
 protected:
-    virtual void OnOutputLine(const wxString& line)
+    virtual void OnOutputLine(const wxString& line) wxOVERRIDE
     {
         m_text += line;
     }
 
-    virtual void OnNewLine()
+    virtual void OnNewLine() wxOVERRIDE
     {
         m_text += wxT('\n');
     }
diff --git a/src/common/strconv.cpp b/src/common/strconv.cpp
index 6c671f0..e3eed96 100644
--- a/src/common/strconv.cpp
+++ b/src/common/strconv.cpp
@@ -2132,16 +2132,16 @@ public:
 
     // implement base class virtual methods
     virtual size_t ToWChar(wchar_t *dst, size_t dstLen,
-                           const char *src, size_t srcLen = wxNO_LEN) const;
+                           const char *src, size_t srcLen = wxNO_LEN) const wxOVERRIDE;
     virtual size_t FromWChar(char *dst, size_t dstLen,
-                             const wchar_t *src, size_t srcLen = wxNO_LEN) const;
-    virtual size_t GetMBNulLen() const;
+                             const wchar_t *src, size_t srcLen = wxNO_LEN) const wxOVERRIDE;
+    virtual size_t GetMBNulLen() const wxOVERRIDE;
 
 #if wxUSE_UNICODE_UTF8
     virtual bool IsUTF8() const;
 #endif
 
-    virtual wxMBConv *Clone() const
+    virtual wxMBConv *Clone() const wxOVERRIDE
     {
         wxMBConv_iconv *p = new wxMBConv_iconv(m_name);
         p->m_minMBCharWidth = m_minMBCharWidth;
@@ -2897,7 +2897,7 @@ public:
         Init();
     }
 
-    size_t MB2WC(wchar_t *buf, const char *psz, size_t WXUNUSED(n)) const
+    size_t MB2WC(wchar_t *buf, const char *psz, size_t WXUNUSED(n)) const wxOVERRIDE
     {
         size_t inbuf = strlen(psz);
         if (buf)
@@ -2908,7 +2908,7 @@ public:
         return inbuf;
     }
 
-    size_t WC2MB(char *buf, const wchar_t *psz, size_t WXUNUSED(n)) const
+    size_t WC2MB(char *buf, const wchar_t *psz, size_t WXUNUSED(n)) const wxOVERRIDE
     {
         const size_t inbuf = wxWcslen(psz);
         if (buf)
@@ -2920,7 +2920,7 @@ public:
         return inbuf;
     }
 
-    virtual size_t GetMBNulLen() const
+    virtual size_t GetMBNulLen() const wxOVERRIDE
     {
         switch ( m_enc )
         {
@@ -2937,7 +2937,7 @@ public:
         }
     }
 
-    virtual wxMBConv *Clone() const { return new wxMBConv_wxwin(m_enc); }
+    virtual wxMBConv *Clone() const wxOVERRIDE { return new wxMBConv_wxwin(m_enc); }
 
     bool IsOk() const { return m_ok; }
 
diff --git a/src/common/strvararg.cpp b/src/common/strvararg.cpp
index 83d82b3..112018a 100644
--- a/src/common/strvararg.cpp
+++ b/src/common/strvararg.cpp
@@ -418,7 +418,7 @@ class wxPrintfFormatConverterWchar : public wxFormatConverterBase<wchar_t>
 {
     virtual void HandleString(CharType WXUNUSED(conv),
                               SizeModifier WXUNUSED(size),
-                              CharType& outConv, SizeModifier& outSize)
+                              CharType& outConv, SizeModifier& outSize) wxOVERRIDE
     {
         outConv = 's';
         outSize = Size_Long;
@@ -426,7 +426,7 @@ class wxPrintfFormatConverterWchar : public wxFormatConverterBase<wchar_t>
 
     virtual void HandleChar(CharType WXUNUSED(conv),
                             SizeModifier WXUNUSED(size),
-                            CharType& outConv, SizeModifier& outSize)
+                            CharType& outConv, SizeModifier& outSize) wxOVERRIDE
     {
         outConv = 'c';
         outSize = Size_Long;
@@ -499,14 +499,14 @@ class wxPrintfFormatConverterANSI : public wxFormatConverterBase<char>
 class wxScanfFormatConverterWchar : public wxFormatConverterBase<wchar_t>
 {
     virtual void HandleString(CharType conv, SizeModifier size,
-                              CharType& outConv, SizeModifier& outSize)
+                              CharType& outConv, SizeModifier& outSize) wxOVERRIDE
     {
         outConv = 's';
         outSize = GetOutSize(conv == 'S', size);
     }
 
     virtual void HandleChar(CharType conv, SizeModifier size,
-                            CharType& outConv, SizeModifier& outSize)
+                            CharType& outConv, SizeModifier& outSize) wxOVERRIDE
     {
         outConv = 'c';
         outSize = GetOutSize(conv == 'C', size);
diff --git a/src/common/translation.cpp b/src/common/translation.cpp
index ed72d80..a6ec1d3 100644
--- a/src/common/translation.cpp
+++ b/src/common/translation.cpp
@@ -2032,12 +2032,12 @@ class wxTranslationsModule: public wxModule
     public:
         wxTranslationsModule() {}
 
-        bool OnInit()
+        bool OnInit() wxOVERRIDE
         {
             return true;
         }
 
-        void OnExit()
+        void OnExit() wxOVERRIDE
         {
             if ( gs_translationsOwned )
                 delete gs_translations;
diff --git a/src/common/url.cpp b/src/common/url.cpp
index 8d6eb49..4a634d7 100644
--- a/src/common/url.cpp
+++ b/src/common/url.cpp
@@ -450,8 +450,8 @@ class wxURLModule : public wxModule
 public:
     wxURLModule();
 
-    virtual bool OnInit();
-    virtual void OnExit();
+    virtual bool OnInit() wxOVERRIDE;
+    virtual void OnExit() wxOVERRIDE;
 
 private:
     DECLARE_DYNAMIC_CLASS(wxURLModule)
diff --git a/src/common/variant.cpp b/src/common/variant.cpp
index 5fc1931..ab5c2f8 100644
--- a/src/common/variant.cpp
+++ b/src/common/variant.cpp
@@ -247,22 +247,22 @@ public:
     inline long GetValue() const { return m_value; }
     inline void SetValue(long value) { m_value = value; }
 
-    virtual bool Eq(wxVariantData& data) const;
+    virtual bool Eq(wxVariantData& data) const wxOVERRIDE;
 
-    virtual bool Read(wxString& str);
-    virtual bool Write(wxString& str) const;
+    virtual bool Read(wxString& str) wxOVERRIDE;
+    virtual bool Write(wxString& str) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Read(wxSTD istream& str);
-    virtual bool Write(wxSTD ostream& str) const;
+    virtual bool Read(wxSTD istream& str) wxOVERRIDE;
+    virtual bool Write(wxSTD ostream& str) const wxOVERRIDE;
 #endif
 #if wxUSE_STREAMS
     virtual bool Read(wxInputStream& str);
     virtual bool Write(wxOutputStream &str) const;
 #endif // wxUSE_STREAMS
 
-    wxVariantData* Clone() const { return new wxVariantDataLong(m_value); }
+    wxVariantData* Clone() const wxOVERRIDE { return new wxVariantDataLong(m_value); }
 
-    virtual wxString GetType() const { return wxT("long"); }
+    virtual wxString GetType() const wxOVERRIDE { return wxT("long"); }
 
 #if wxUSE_ANY
     // Since wxAny does not have separate type for integers shorter than
@@ -271,7 +271,7 @@ public:
   #ifndef wxLongLong_t
     DECLARE_WXANY_CONVERSION()
   #else
-    bool GetAsAny(wxAny* any) const
+    bool GetAsAny(wxAny* any) const wxOVERRIDE
     {
         *any = m_value;
         return true;
@@ -416,22 +416,22 @@ public:
     inline double GetValue() const { return m_value; }
     inline void SetValue(double value) { m_value = value; }
 
-    virtual bool Eq(wxVariantData& data) const;
-    virtual bool Read(wxString& str);
+    virtual bool Eq(wxVariantData& data) const wxOVERRIDE;
+    virtual bool Read(wxString& str) wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Write(wxSTD ostream& str) const;
+    virtual bool Write(wxSTD ostream& str) const wxOVERRIDE;
 #endif
-    virtual bool Write(wxString& str) const;
+    virtual bool Write(wxString& str) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Read(wxSTD istream& str);
+    virtual bool Read(wxSTD istream& str) wxOVERRIDE;
 #endif
 #if wxUSE_STREAMS
     virtual bool Read(wxInputStream& str);
     virtual bool Write(wxOutputStream &str) const;
 #endif // wxUSE_STREAMS
-    virtual wxString GetType() const { return wxT("double"); }
+    virtual wxString GetType() const wxOVERRIDE { return wxT("double"); }
 
-    wxVariantData* Clone() const { return new wxVariantDoubleData(m_value); }
+    wxVariantData* Clone() const wxOVERRIDE { return new wxVariantDoubleData(m_value); }
 
     DECLARE_WXANY_CONVERSION()
 protected:
@@ -556,22 +556,22 @@ public:
     inline bool GetValue() const { return m_value; }
     inline void SetValue(bool value) { m_value = value; }
 
-    virtual bool Eq(wxVariantData& data) const;
+    virtual bool Eq(wxVariantData& data) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Write(wxSTD ostream& str) const;
+    virtual bool Write(wxSTD ostream& str) const wxOVERRIDE;
 #endif
-    virtual bool Write(wxString& str) const;
-    virtual bool Read(wxString& str);
+    virtual bool Write(wxString& str) const wxOVERRIDE;
+    virtual bool Read(wxString& str) wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Read(wxSTD istream& str);
+    virtual bool Read(wxSTD istream& str) wxOVERRIDE;
 #endif
 #if wxUSE_STREAMS
     virtual bool Read(wxInputStream& str);
     virtual bool Write(wxOutputStream& str) const;
 #endif // wxUSE_STREAMS
-    virtual wxString GetType() const { return wxT("bool"); }
+    virtual wxString GetType() const wxOVERRIDE { return wxT("bool"); }
 
-    wxVariantData* Clone() const { return new wxVariantDataBool(m_value); }
+    wxVariantData* Clone() const wxOVERRIDE { return new wxVariantDataBool(m_value); }
 
     DECLARE_WXANY_CONVERSION()
 protected:
@@ -699,19 +699,19 @@ public:
     inline wxUniChar GetValue() const { return m_value; }
     inline void SetValue(const wxUniChar& value) { m_value = value; }
 
-    virtual bool Eq(wxVariantData& data) const;
+    virtual bool Eq(wxVariantData& data) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Read(wxSTD istream& str);
-    virtual bool Write(wxSTD ostream& str) const;
+    virtual bool Read(wxSTD istream& str) wxOVERRIDE;
+    virtual bool Write(wxSTD ostream& str) const wxOVERRIDE;
 #endif
-    virtual bool Read(wxString& str);
-    virtual bool Write(wxString& str) const;
+    virtual bool Read(wxString& str) wxOVERRIDE;
+    virtual bool Write(wxString& str) const wxOVERRIDE;
 #if wxUSE_STREAMS
     virtual bool Read(wxInputStream& str);
     virtual bool Write(wxOutputStream& str) const;
 #endif // wxUSE_STREAMS
-    virtual wxString GetType() const { return wxT("char"); }
-    wxVariantData* Clone() const { return new wxVariantDataChar(m_value); }
+    virtual wxString GetType() const wxOVERRIDE { return wxT("char"); }
+    wxVariantData* Clone() const wxOVERRIDE { return new wxVariantDataChar(m_value); }
 
     DECLARE_WXANY_CONVERSION()
 protected:
@@ -852,21 +852,21 @@ public:
     inline wxString GetValue() const { return m_value; }
     inline void SetValue(const wxString& value) { m_value = value; }
 
-    virtual bool Eq(wxVariantData& data) const;
+    virtual bool Eq(wxVariantData& data) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Write(wxSTD ostream& str) const;
+    virtual bool Write(wxSTD ostream& str) const wxOVERRIDE;
 #endif
-    virtual bool Read(wxString& str);
-    virtual bool Write(wxString& str) const;
+    virtual bool Read(wxString& str) wxOVERRIDE;
+    virtual bool Write(wxString& str) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Read(wxSTD istream& WXUNUSED(str)) { return false; }
+    virtual bool Read(wxSTD istream& WXUNUSED(str)) wxOVERRIDE { return false; }
 #endif
 #if wxUSE_STREAMS
     virtual bool Read(wxInputStream& str);
     virtual bool Write(wxOutputStream& str) const;
 #endif // wxUSE_STREAMS
-    virtual wxString GetType() const { return wxT("string"); }
-    wxVariantData* Clone() const { return new wxVariantDataString(m_value); }
+    virtual wxString GetType() const wxOVERRIDE { return wxT("string"); }
+    wxVariantData* Clone() const wxOVERRIDE { return new wxVariantDataString(m_value); }
 
     DECLARE_WXANY_CONVERSION()
 protected:
@@ -1047,19 +1047,19 @@ public:
     inline wxObject* GetValue() const { return m_value; }
     inline void SetValue(wxObject* value) { m_value = value; }
 
-    virtual bool Eq(wxVariantData& data) const;
+    virtual bool Eq(wxVariantData& data) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Write(wxSTD ostream& str) const;
+    virtual bool Write(wxSTD ostream& str) const wxOVERRIDE;
 #endif
-    virtual bool Write(wxString& str) const;
+    virtual bool Write(wxString& str) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Read(wxSTD istream& str);
+    virtual bool Read(wxSTD istream& str) wxOVERRIDE;
 #endif
-    virtual bool Read(wxString& str);
-    virtual wxString GetType() const ;
-    virtual wxVariantData* Clone() const { return new wxVariantDataWxObjectPtr(m_value); }
+    virtual bool Read(wxString& str) wxOVERRIDE;
+    virtual wxString GetType() const wxOVERRIDE ;
+    virtual wxVariantData* Clone() const wxOVERRIDE { return new wxVariantDataWxObjectPtr(m_value); }
 
-    virtual wxClassInfo* GetValueClassInfo();
+    virtual wxClassInfo* GetValueClassInfo() wxOVERRIDE;
 
     DECLARE_WXANY_CONVERSION()
 protected:
@@ -1171,17 +1171,17 @@ public:
     inline void* GetValue() const { return m_value; }
     inline void SetValue(void* value) { m_value = value; }
 
-    virtual bool Eq(wxVariantData& data) const;
+    virtual bool Eq(wxVariantData& data) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Write(wxSTD ostream& str) const;
+    virtual bool Write(wxSTD ostream& str) const wxOVERRIDE;
 #endif
-    virtual bool Write(wxString& str) const;
+    virtual bool Write(wxString& str) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Read(wxSTD istream& str);
+    virtual bool Read(wxSTD istream& str) wxOVERRIDE;
 #endif
-    virtual bool Read(wxString& str);
-    virtual wxString GetType() const { return wxT("void*"); }
-    virtual wxVariantData* Clone() const { return new wxVariantDataVoidPtr(m_value); }
+    virtual bool Read(wxString& str) wxOVERRIDE;
+    virtual wxString GetType() const wxOVERRIDE { return wxT("void*"); }
+    virtual wxVariantData* Clone() const wxOVERRIDE { return new wxVariantDataVoidPtr(m_value); }
 
     DECLARE_WXANY_CONVERSION()
 protected:
@@ -1286,17 +1286,17 @@ public:
     inline wxDateTime GetValue() const { return m_value; }
     inline void SetValue(const wxDateTime& value) { m_value = value; }
 
-    virtual bool Eq(wxVariantData& data) const;
+    virtual bool Eq(wxVariantData& data) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Write(wxSTD ostream& str) const;
+    virtual bool Write(wxSTD ostream& str) const wxOVERRIDE;
 #endif
-    virtual bool Write(wxString& str) const;
+    virtual bool Write(wxString& str) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Read(wxSTD istream& str);
+    virtual bool Read(wxSTD istream& str) wxOVERRIDE;
 #endif
-    virtual bool Read(wxString& str);
-    virtual wxString GetType() const { return wxT("datetime"); }
-    virtual wxVariantData* Clone() const { return new wxVariantDataDateTime(m_value); }
+    virtual bool Read(wxString& str) wxOVERRIDE;
+    virtual wxString GetType() const wxOVERRIDE { return wxT("datetime"); }
+    virtual wxVariantData* Clone() const wxOVERRIDE { return new wxVariantDataDateTime(m_value); }
 
     DECLARE_WXANY_CONVERSION()
 protected:
@@ -1419,17 +1419,17 @@ public:
     wxArrayString GetValue() const { return m_value; }
     void SetValue(const wxArrayString& value) { m_value = value; }
 
-    virtual bool Eq(wxVariantData& data) const;
+    virtual bool Eq(wxVariantData& data) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Write(wxSTD ostream& str) const;
+    virtual bool Write(wxSTD ostream& str) const wxOVERRIDE;
 #endif
-    virtual bool Write(wxString& str) const;
+    virtual bool Write(wxString& str) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Read(wxSTD istream& str);
+    virtual bool Read(wxSTD istream& str) wxOVERRIDE;
 #endif
-    virtual bool Read(wxString& str);
-    virtual wxString GetType() const { return wxT("arrstring"); }
-    virtual wxVariantData* Clone() const { return new wxVariantDataArrayString(m_value); }
+    virtual bool Read(wxString& str) wxOVERRIDE;
+    virtual wxString GetType() const wxOVERRIDE { return wxT("arrstring"); }
+    virtual wxVariantData* Clone() const wxOVERRIDE { return new wxVariantDataArrayString(m_value); }
 
     DECLARE_WXANY_CONVERSION()
 protected:
@@ -1547,25 +1547,25 @@ public:
     wxLongLong GetValue() const { return m_value; }
     void SetValue(wxLongLong value) { m_value = value; }
 
-    virtual bool Eq(wxVariantData& data) const;
+    virtual bool Eq(wxVariantData& data) const wxOVERRIDE;
 
-    virtual bool Read(wxString& str);
-    virtual bool Write(wxString& str) const;
+    virtual bool Read(wxString& str) wxOVERRIDE;
+    virtual bool Write(wxString& str) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Read(wxSTD istream& str);
-    virtual bool Write(wxSTD ostream& str) const;
+    virtual bool Read(wxSTD istream& str) wxOVERRIDE;
+    virtual bool Write(wxSTD ostream& str) const wxOVERRIDE;
 #endif
 #if wxUSE_STREAMS
     virtual bool Read(wxInputStream& str);
     virtual bool Write(wxOutputStream &str) const;
 #endif // wxUSE_STREAMS
 
-    wxVariantData* Clone() const
+    wxVariantData* Clone() const wxOVERRIDE
     {
         return new wxVariantDataLongLong(m_value);
     }
 
-    virtual wxString GetType() const { return wxS("longlong"); }
+    virtual wxString GetType() const wxOVERRIDE { return wxS("longlong"); }
 
     DECLARE_WXANY_CONVERSION()
 protected:
@@ -1746,25 +1746,25 @@ public:
     wxULongLong GetValue() const { return m_value; }
     void SetValue(wxULongLong value) { m_value = value; }
 
-    virtual bool Eq(wxVariantData& data) const;
+    virtual bool Eq(wxVariantData& data) const wxOVERRIDE;
 
-    virtual bool Read(wxString& str);
-    virtual bool Write(wxString& str) const;
+    virtual bool Read(wxString& str) wxOVERRIDE;
+    virtual bool Write(wxString& str) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Read(wxSTD istream& str);
-    virtual bool Write(wxSTD ostream& str) const;
+    virtual bool Read(wxSTD istream& str) wxOVERRIDE;
+    virtual bool Write(wxSTD ostream& str) const wxOVERRIDE;
 #endif
 #if wxUSE_STREAMS
     virtual bool Read(wxInputStream& str);
     virtual bool Write(wxOutputStream &str) const;
 #endif // wxUSE_STREAMS
 
-    wxVariantData* Clone() const
+    wxVariantData* Clone() const wxOVERRIDE
     {
         return new wxVariantDataULongLong(m_value);
     }
 
-    virtual wxString GetType() const { return wxS("ulonglong"); }
+    virtual wxString GetType() const wxOVERRIDE { return wxS("ulonglong"); }
 
     DECLARE_WXANY_CONVERSION()
 protected:
@@ -1945,20 +1945,20 @@ public:
     wxVariantList& GetValue() { return m_value; }
     void SetValue(const wxVariantList& value) ;
 
-    virtual bool Eq(wxVariantData& data) const;
+    virtual bool Eq(wxVariantData& data) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Write(wxSTD ostream& str) const;
+    virtual bool Write(wxSTD ostream& str) const wxOVERRIDE;
 #endif
-    virtual bool Write(wxString& str) const;
+    virtual bool Write(wxString& str) const wxOVERRIDE;
 #if wxUSE_STD_IOSTREAM
-    virtual bool Read(wxSTD istream& str);
+    virtual bool Read(wxSTD istream& str) wxOVERRIDE;
 #endif
-    virtual bool Read(wxString& str);
-    virtual wxString GetType() const { return wxT("list"); }
+    virtual bool Read(wxString& str) wxOVERRIDE;
+    virtual wxString GetType() const wxOVERRIDE { return wxT("list"); }
 
     void Clear();
 
-    wxVariantData* Clone() const { return new wxVariantDataList(m_value); }
+    wxVariantData* Clone() const wxOVERRIDE { return new wxVariantDataList(m_value); }
 
     DECLARE_WXANY_CONVERSION()
 protected:
diff --git a/src/common/wincmn.cpp b/src/common/wincmn.cpp
index ad48870..25b4874 100644
--- a/src/common/wincmn.cpp
+++ b/src/common/wincmn.cpp
@@ -2096,12 +2096,12 @@ bool wxWindowBase::Validate()
         {
         }
 
-        virtual bool OnDo(wxValidator* validator)
+        virtual bool OnDo(wxValidator* validator) wxOVERRIDE
         {
             return validator->Validate(m_win);
         }
 
-        virtual bool OnRecurse(wxWindow* child)
+        virtual bool OnRecurse(wxWindow* child) wxOVERRIDE
         {
             return child->Validate();
         }
@@ -2124,7 +2124,7 @@ bool wxWindowBase::TransferDataToWindow()
         {
         }
 
-        virtual bool OnDo(wxValidator* validator)
+        virtual bool OnDo(wxValidator* validator) wxOVERRIDE
         {
             if ( !validator->TransferToWindow() )
             {
@@ -2139,7 +2139,7 @@ bool wxWindowBase::TransferDataToWindow()
             return true;
         }
 
-        virtual bool OnRecurse(wxWindow* child)
+        virtual bool OnRecurse(wxWindow* child) wxOVERRIDE
         {
             return child->TransferDataToWindow();
         }
@@ -2162,12 +2162,12 @@ bool wxWindowBase::TransferDataFromWindow()
         {
         }
 
-        virtual bool OnDo(wxValidator* validator)
+        virtual bool OnDo(wxValidator* validator) wxOVERRIDE
         {
             return validator->TransferFromWindow();
         }
 
-        virtual bool OnRecurse(wxWindow* child)
+        virtual bool OnRecurse(wxWindow* child) wxOVERRIDE
         {
             return child->TransferDataFromWindow();
         }
@@ -3560,7 +3560,7 @@ public:
     DragAcceptFilesTarget(wxWindowBase *win) : m_win(win) {}
 
     virtual bool OnDropFiles(wxCoord x, wxCoord y,
-                             const wxArrayString& filenames)
+                             const wxArrayString& filenames) wxOVERRIDE
     {
         wxDropFilesEvent event(wxEVT_DROP_FILES,
                                filenames.size(),
diff --git a/src/common/xlocale.cpp b/src/common/xlocale.cpp
index 26ac4df..4cbbb69 100644
--- a/src/common/xlocale.cpp
+++ b/src/common/xlocale.cpp
@@ -54,8 +54,8 @@ wxXLocale wxNullXLocale;
 class wxXLocaleModule : public wxModule
 {
 public:
-    virtual bool OnInit() { return true; }
-    virtual void OnExit() { wxDELETE(gs_cLocale); }
+    virtual bool OnInit() wxOVERRIDE { return true; }
+    virtual void OnExit() wxOVERRIDE { wxDELETE(gs_cLocale); }
 
     DECLARE_DYNAMIC_CLASS(wxXLocaleModule)
 };
diff --git a/src/common/zipstrm.cpp b/src/common/zipstrm.cpp
index c583949..f81ec84 100644
--- a/src/common/zipstrm.cpp
+++ b/src/common/zipstrm.cpp
@@ -239,12 +239,12 @@ public:
     void Open(wxFileOffset len) { Close(); m_len = len; }
     void Close() { m_pos = 0; m_lasterror = wxSTREAM_NO_ERROR; }
 
-    virtual char Peek() { return wxInputStream::Peek(); }
-    virtual wxFileOffset GetLength() const { return m_len; }
+    virtual char Peek() wxOVERRIDE { return wxInputStream::Peek(); }
+    virtual wxFileOffset GetLength() const wxOVERRIDE { return m_len; }
 
 protected:
-    virtual size_t OnSysRead(void *buffer, size_t size);
-    virtual wxFileOffset OnSysTell() const { return m_pos; }
+    virtual size_t OnSysRead(void *buffer, size_t size) wxOVERRIDE;
+    virtual wxFileOffset OnSysTell() const wxOVERRIDE { return m_pos; }
 
 private:
     wxFileOffset m_pos;
@@ -284,15 +284,15 @@ public:
     wxStoredOutputStream(wxOutputStream& stream) :
         wxFilterOutputStream(stream), m_pos(0) { }
 
-    bool Close() {
+    bool Close() wxOVERRIDE {
         m_pos = 0;
         m_lasterror = wxSTREAM_NO_ERROR;
         return true;
     }
 
 protected:
-    virtual size_t OnSysWrite(const void *buffer, size_t size);
-    virtual wxFileOffset OnSysTell() const { return m_pos; }
+    virtual size_t OnSysWrite(const void *buffer, size_t size) wxOVERRIDE;
+    virtual wxFileOffset OnSysTell() const wxOVERRIDE { return m_pos; }
 
 private:
     wxFileOffset m_pos;
@@ -346,11 +346,11 @@ public:
     void Open();
     bool Final();
 
-    wxInputStream& Read(void *buffer, size_t size);
+    wxInputStream& Read(void *buffer, size_t size) wxOVERRIDE;
 
 protected:
-    virtual size_t OnSysRead(void *buffer, size_t size);
-    virtual wxFileOffset OnSysTell() const { return m_pos; }
+    virtual size_t OnSysRead(void *buffer, size_t size) wxOVERRIDE;
+    virtual wxFileOffset OnSysTell() const wxOVERRIDE { return m_pos; }
 
 private:
     wxFileOffset m_pos;
@@ -444,8 +444,8 @@ public:
     wxInputStream& GetTee() const { return *m_tee; }
 
 protected:
-    virtual size_t OnSysRead(void *buffer, size_t size);
-    virtual wxFileOffset OnSysTell() const { return m_pos; }
+    virtual size_t OnSysRead(void *buffer, size_t size) wxOVERRIDE;
+    virtual wxFileOffset OnSysTell() const wxOVERRIDE { return m_pos; }
 
 private:
     wxFileOffset m_pos;
@@ -510,7 +510,7 @@ public:
         wxZlibOutputStream(stream, level, wxZLIB_NO_HEADER) { }
 
     bool Open(wxOutputStream& stream);
-    bool Close() { DoFlush(true); m_pos = wxInvalidOffset; return IsOk(); }
+    bool Close() wxOVERRIDE { DoFlush(true); m_pos = wxInvalidOffset; return IsOk(); }
 };
 
 bool wxZlibOutputStream2::Open(wxOutputStream& stream)
diff --git a/src/generic/animateg.cpp b/src/generic/animateg.cpp
index f267c21..d238c82 100644
--- a/src/generic/animateg.cpp
+++ b/src/generic/animateg.cpp
@@ -253,8 +253,8 @@ class wxAnimationModule: public wxModule
 DECLARE_DYNAMIC_CLASS(wxAnimationModule)
 public:
     wxAnimationModule() {}
-    bool OnInit() { wxAnimation::InitStandardHandlers(); return true; }
-    void OnExit() { wxAnimation::CleanUpHandlers(); }
+    bool OnInit() wxOVERRIDE { wxAnimation::InitStandardHandlers(); return true; }
+    void OnExit() wxOVERRIDE { wxAnimation::CleanUpHandlers(); }
 };
 
 IMPLEMENT_DYNAMIC_CLASS(wxAnimationModule, wxModule)
diff --git a/src/generic/datectlg.cpp b/src/generic/datectlg.cpp
index 6ea3d01..320c792 100644
--- a/src/generic/datectlg.cpp
+++ b/src/generic/datectlg.cpp
@@ -63,14 +63,14 @@ public:
     {
     }
 
-    virtual void Init()
+    virtual void Init() wxOVERRIDE
     {
     }
 
     // NB: Don't create lazily since it didn't work that way before
     //     wxComboCtrl was used, and changing behaviour would almost
     //     certainly introduce new bugs.
-    virtual bool Create(wxWindow* parent)
+    virtual bool Create(wxWindow* parent) wxOVERRIDE
     {
         if ( !wxCalendarCtrl::Create(parent, wxID_ANY, wxDefaultDateTime,
                               wxPoint(0, 0), wxDefaultSize,
@@ -95,12 +95,12 @@ public:
 
     virtual wxSize GetAdjustedSize(int WXUNUSED(minWidth),
                                    int WXUNUSED(prefHeight),
-                                   int WXUNUSED(maxHeight))
+                                   int WXUNUSED(maxHeight)) wxOVERRIDE
     {
         return m_useSize;
     }
 
-    virtual wxWindow *GetControl() { return this; }
+    virtual wxWindow *GetControl() wxOVERRIDE { return this; }
 
     void SetDateValue(const wxDateTime& date)
     {
@@ -251,7 +251,7 @@ private:
         return true;
     }
 
-    virtual void SetStringValue(const wxString& s)
+    virtual void SetStringValue(const wxString& s) wxOVERRIDE
     {
         wxDateTime dt;
         if ( !s.empty() && ParseDateTime(s, &dt) )
@@ -259,7 +259,7 @@ private:
         //else: keep the old value
     }
 
-    virtual wxString GetStringValue() const
+    virtual wxString GetStringValue() const wxOVERRIDE
     {
         return GetStringValueFor(GetDate());
     }
diff --git a/src/generic/dbgrptg.cpp b/src/generic/dbgrptg.cpp
index 9941616..7e8c377 100644
--- a/src/generic/dbgrptg.cpp
+++ b/src/generic/dbgrptg.cpp
@@ -252,8 +252,8 @@ class wxDebugReportDialog : public wxDialog
 public:
     wxDebugReportDialog(wxDebugReport& dbgrpt);
 
-    virtual bool TransferDataToWindow();
-    virtual bool TransferDataFromWindow();
+    virtual bool TransferDataToWindow() wxOVERRIDE;
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
 
 private:
     void OnView(wxCommandEvent& );
diff --git a/src/generic/dirctrlg.cpp b/src/generic/dirctrlg.cpp
index bbbc4ef..bfdf023 100644
--- a/src/generic/dirctrlg.cpp
+++ b/src/generic/dirctrlg.cpp
@@ -1529,8 +1529,8 @@ class wxFileIconsTableModule: public wxModule
 DECLARE_DYNAMIC_CLASS(wxFileIconsTableModule)
 public:
     wxFileIconsTableModule() {}
-    bool OnInit() { wxTheFileIconsTable = new wxFileIconsTable; return true; }
-    void OnExit()
+    bool OnInit() wxOVERRIDE { wxTheFileIconsTable = new wxFileIconsTable; return true; }
+    void OnExit() wxOVERRIDE
     {
         wxDELETE(wxTheFileIconsTable);
     }
diff --git a/src/generic/htmllbox.cpp b/src/generic/htmllbox.cpp
index 178f8c4..fdeacaa 100644
--- a/src/generic/htmllbox.cpp
+++ b/src/generic/htmllbox.cpp
@@ -161,7 +161,7 @@ class wxHtmlListBoxStyle : public wxDefaultHtmlRenderingStyle
 public:
     wxHtmlListBoxStyle(const wxHtmlListBox& hlbox) : m_hlbox(hlbox) { }
 
-    virtual wxColour GetSelectedTextColour(const wxColour& colFg)
+    virtual wxColour GetSelectedTextColour(const wxColour& colFg) wxOVERRIDE
     {
         // by default wxHtmlListBox doesn't implement GetSelectedTextColour()
         // and returns wxNullColour from it, so use the default HTML colour for
@@ -175,7 +175,7 @@ public:
         return col;
     }
 
-    virtual wxColour GetSelectedTextBgColour(const wxColour& colBg)
+    virtual wxColour GetSelectedTextBgColour(const wxColour& colBg) wxOVERRIDE
     {
         wxColour col = m_hlbox.GetSelectedTextBgColour(colBg);
         if ( !col.IsOk() )
diff --git a/src/generic/logg.cpp b/src/generic/logg.cpp
index 6204463..a90856a 100644
--- a/src/generic/logg.cpp
+++ b/src/generic/logg.cpp
@@ -448,7 +448,7 @@ public:
     virtual ~wxLogFrame();
 
     // Don't prevent the application from exiting if just this frame remains.
-    virtual bool ShouldPreventAppExit() const { return false; }
+    virtual bool ShouldPreventAppExit() const wxOVERRIDE { return false; }
 
     // menu callbacks
     void OnClose(wxCommandEvent& event);
diff --git a/src/generic/markuptext.cpp b/src/generic/markuptext.cpp
index 03c587c..6516e79 100644
--- a/src/generic/markuptext.cpp
+++ b/src/generic/markuptext.cpp
@@ -59,7 +59,7 @@ public:
     const wxSize& GetSize() const { return m_size; }
 
 
-    virtual void OnText(const wxString& text_)
+    virtual void OnText(const wxString& text_) wxOVERRIDE
     {
         const wxString text(wxControl::RemoveMnemonics(text_));
 
@@ -79,12 +79,12 @@ public:
         }
     }
 
-    virtual void OnAttrStart(const Attr& attr)
+    virtual void OnAttrStart(const Attr& attr) wxOVERRIDE
     {
         m_dc.SetFont(attr.font);
     }
 
-    virtual void OnAttrEnd(const Attr& WXUNUSED(attr))
+    virtual void OnAttrEnd(const Attr& WXUNUSED(attr)) wxOVERRIDE
     {
         m_dc.SetFont(GetFont());
     }
@@ -132,7 +132,7 @@ public:
         m_origTextBackground = dc.GetTextBackground();
     }
 
-    virtual void OnText(const wxString& text_)
+    virtual void OnText(const wxString& text_) wxOVERRIDE
     {
         wxString text;
         int indexAccel = wxControl::FindAccelIndex(text_, &text);
@@ -161,7 +161,7 @@ public:
         m_pos += bounds.width;
     }
 
-    virtual void OnAttrStart(const Attr& attr)
+    virtual void OnAttrStart(const Attr& attr) wxOVERRIDE
     {
         m_dc.SetFont(attr.font);
         if ( attr.foreground.IsOk() )
@@ -176,7 +176,7 @@ public:
         }
     }
 
-    virtual void OnAttrEnd(const Attr& attr)
+    virtual void OnAttrEnd(const Attr& attr) wxOVERRIDE
     {
         // We always restore the font because we always change it...
         m_dc.SetFont(GetFont());
diff --git a/src/generic/msgdlgg.cpp b/src/generic/msgdlgg.cpp
index 5fbded4..a85840e 100644
--- a/src/generic/msgdlgg.cpp
+++ b/src/generic/msgdlgg.cpp
@@ -57,7 +57,7 @@ public:
     }
 
 protected:
-    virtual wxWindow *OnCreateLine(const wxString& s)
+    virtual wxWindow *OnCreateLine(const wxString& s) wxOVERRIDE
     {
         wxWindow * const win = wxTextSizerWrapper::OnCreateLine(s);
 
diff --git a/src/generic/renderg.cpp b/src/generic/renderg.cpp
index 93354ab..3bbe88b 100644
--- a/src/generic/renderg.cpp
+++ b/src/generic/renderg.cpp
@@ -55,84 +55,84 @@ public:
                                   const wxRect& rect,
                                   int flags = 0,
                                   wxHeaderSortIconType sortArrow = wxHDR_SORT_ICON_NONE,
-                                  wxHeaderButtonParams* params = NULL);
+                                  wxHeaderButtonParams* params = NULL) wxOVERRIDE;
 
     virtual int  DrawHeaderButtonContents(wxWindow *win,
                                           wxDC& dc,
                                           const wxRect& rect,
                                           int flags = 0,
                                           wxHeaderSortIconType sortArrow = wxHDR_SORT_ICON_NONE,
-                                          wxHeaderButtonParams* params = NULL);
+                                          wxHeaderButtonParams* params = NULL) wxOVERRIDE;
 
-    virtual int GetHeaderButtonHeight(wxWindow *win);
+    virtual int GetHeaderButtonHeight(wxWindow *win) wxOVERRIDE;
 
-    virtual int GetHeaderButtonMargin(wxWindow *win);
+    virtual int GetHeaderButtonMargin(wxWindow *win) wxOVERRIDE;
 
     virtual void DrawTreeItemButton(wxWindow *win,
                                     wxDC& dc,
                                     const wxRect& rect,
-                                    int flags = 0);
+                                    int flags = 0) wxOVERRIDE;
 
     virtual void DrawSplitterBorder(wxWindow *win,
                                     wxDC& dc,
                                     const wxRect& rect,
-                                    int flags = 0);
+                                    int flags = 0) wxOVERRIDE;
 
     virtual void DrawSplitterSash(wxWindow *win,
                                   wxDC& dc,
                                   const wxSize& size,
                                   wxCoord position,
                                   wxOrientation orient,
-                                  int flags = 0);
+                                  int flags = 0) wxOVERRIDE;
 
     virtual void DrawComboBoxDropButton(wxWindow *win,
                                         wxDC& dc,
                                         const wxRect& rect,
-                                        int flags = 0);
+                                        int flags = 0) wxOVERRIDE;
 
     virtual void DrawDropArrow(wxWindow *win,
                                wxDC& dc,
                                const wxRect& rect,
-                               int flags = 0);
+                               int flags = 0) wxOVERRIDE;
 
     virtual void DrawCheckBox(wxWindow *win,
                               wxDC& dc,
                               const wxRect& rect,
-                              int flags = 0);
+                              int flags = 0) wxOVERRIDE;
 
-    virtual wxSize GetCheckBoxSize(wxWindow *win);
+    virtual wxSize GetCheckBoxSize(wxWindow *win) wxOVERRIDE;
 
     virtual void DrawPushButton(wxWindow *win,
                                 wxDC& dc,
                                 const wxRect& rect,
-                                int flags = 0);
+                                int flags = 0) wxOVERRIDE;
 
     virtual void DrawItemSelectionRect(wxWindow *win,
                                        wxDC& dc,
                                        const wxRect& rect,
-                                       int flags = 0);
+                                       int flags = 0) wxOVERRIDE;
 
-    virtual void DrawFocusRect(wxWindow* win, wxDC& dc, const wxRect& rect, int flags = 0);
+    virtual void DrawFocusRect(wxWindow* win, wxDC& dc, const wxRect& rect, int flags = 0) wxOVERRIDE;
 
-    virtual void DrawChoice(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
+    virtual void DrawChoice(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0) wxOVERRIDE;
 
-    virtual void DrawComboBox(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
+    virtual void DrawComboBox(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0) wxOVERRIDE;
 
-    virtual void DrawTextCtrl(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
+    virtual void DrawTextCtrl(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0) wxOVERRIDE;
 
-    virtual void DrawRadioBitmap(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
+    virtual void DrawRadioBitmap(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0) wxOVERRIDE;
 
 #ifdef wxHAS_DRAW_TITLE_BAR_BITMAP
     virtual void DrawTitleBarBitmap(wxWindow *win,
                                     wxDC& dc,
                                     const wxRect& rect,
                                     wxTitleBarButton button,
-                                    int flags = 0);
+                                    int flags = 0) wxOVERRIDE;
 #endif // wxHAS_DRAW_TITLE_BAR_BITMAP
 
-    virtual wxSplitterRenderParams GetSplitterParams(const wxWindow *win);
+    virtual wxSplitterRenderParams GetSplitterParams(const wxWindow *win) wxOVERRIDE;
 
-    virtual wxRendererVersion GetVersion() const
+    virtual wxRendererVersion GetVersion() const wxOVERRIDE
     {
         return wxRendererVersion(wxRendererVersion::Current_Version,
                                  wxRendererVersion::Current_Age);
@@ -802,8 +802,8 @@ class wxGenericRendererModule: public wxModule
 DECLARE_DYNAMIC_CLASS(wxGenericRendererModule)
 public:
     wxGenericRendererModule() {}
-    bool OnInit() { return true; }
-    void OnExit() { wxRendererGeneric::Cleanup(); }
+    bool OnInit() wxOVERRIDE { return true; }
+    void OnExit() wxOVERRIDE { wxRendererGeneric::Cleanup(); }
 };
 
 IMPLEMENT_DYNAMIC_CLASS(wxGenericRendererModule, wxModule)
diff --git a/src/generic/richtooltipg.cpp b/src/generic/richtooltipg.cpp
index 2986f9b..0b3ed6a 100644
--- a/src/generic/richtooltipg.cpp
+++ b/src/generic/richtooltipg.cpp
@@ -272,7 +272,7 @@ public:
     }
 
 protected:
-    virtual void OnDismiss()
+    virtual void OnDismiss() wxOVERRIDE
     {
         Destroy();
     }
diff --git a/src/generic/scrlwing.cpp b/src/generic/scrlwing.cpp
index c14ab53..d3256ed 100644
--- a/src/generic/scrlwing.cpp
+++ b/src/generic/scrlwing.cpp
@@ -76,7 +76,7 @@ public:
         m_scrollHelper = scrollHelper;
     }
 
-    virtual bool ProcessEvent(wxEvent& event);
+    virtual bool ProcessEvent(wxEvent& event) wxOVERRIDE;
 
 private:
     wxScrollHelperBase *m_scrollHelper;
@@ -98,7 +98,7 @@ public:
                       wxEventType eventTypeToSend,
                       int pos, int orient);
 
-    virtual void Notify();
+    virtual void Notify() wxOVERRIDE;
 
 private:
     wxWindow *m_win;
diff --git a/src/generic/tipdlg.cpp b/src/generic/tipdlg.cpp
index b4ecc00..52c7bef 100644
--- a/src/generic/tipdlg.cpp
+++ b/src/generic/tipdlg.cpp
@@ -76,7 +76,7 @@ class WXDLLIMPEXP_ADV wxFileTipProvider : public wxTipProvider
 public:
     wxFileTipProvider(const wxString& filename, size_t currentTip);
 
-    virtual wxString GetTip();
+    virtual wxString GetTip() wxOVERRIDE;
 
 private:
     wxTextFile m_textfile;
diff --git a/src/generic/treectlg.cpp b/src/generic/treectlg.cpp
index 4637767..da1c4dc 100644
--- a/src/generic/treectlg.cpp
+++ b/src/generic/treectlg.cpp
@@ -80,7 +80,7 @@ public:
 
     wxTreeRenameTimer( wxGenericTreeCtrl *owner );
 
-    virtual void Notify();
+    virtual void Notify() wxOVERRIDE;
 
 private:
     wxGenericTreeCtrl *m_owner;
@@ -126,7 +126,7 @@ public:
 
     wxTreeFindTimer( wxGenericTreeCtrl *owner ) { m_owner = owner; }
 
-    virtual void Notify() { m_owner->ResetFindState(); }
+    virtual void Notify() wxOVERRIDE { m_owner->ResetFindState(); }
 
 private:
     wxGenericTreeCtrl *m_owner;
diff --git a/src/generic/treelist.cpp b/src/generic/treelist.cpp
index 73fbe6c..8d97733 100644
--- a/src/generic/treelist.cpp
+++ b/src/generic/treelist.cpp
@@ -363,24 +363,24 @@ public:
 
 
     // Implement the base class pure virtual methods.
-    virtual unsigned GetColumnCount() const;
-    virtual wxString GetColumnType(unsigned col) const;
+    virtual unsigned GetColumnCount() const wxOVERRIDE;
+    virtual wxString GetColumnType(unsigned col) const wxOVERRIDE;
     virtual void GetValue(wxVariant& variant,
                           const wxDataViewItem& item,
-                          unsigned col) const;
+                          unsigned col) const wxOVERRIDE;
     virtual bool SetValue(const wxVariant& variant,
                           const wxDataViewItem& item,
-                          unsigned col);
-    virtual wxDataViewItem GetParent(const wxDataViewItem& item) const;
-    virtual bool IsContainer(const wxDataViewItem& item) const;
-    virtual bool HasContainerColumns(const wxDataViewItem& item) const;
+                          unsigned col) wxOVERRIDE;
+    virtual wxDataViewItem GetParent(const wxDataViewItem& item) const wxOVERRIDE;
+    virtual bool IsContainer(const wxDataViewItem& item) const wxOVERRIDE;
+    virtual bool HasContainerColumns(const wxDataViewItem& item) const wxOVERRIDE;
     virtual unsigned GetChildren(const wxDataViewItem& item,
-                                 wxDataViewItemArray& children) const;
-    virtual bool IsListModel() const { return m_isFlat; }
+                                 wxDataViewItemArray& children) const wxOVERRIDE;
+    virtual bool IsListModel() const wxOVERRIDE { return m_isFlat; }
     virtual int Compare(const wxDataViewItem& item1,
                         const wxDataViewItem& item2,
                         unsigned col,
-                        bool ascending) const;
+                        bool ascending) const wxOVERRIDE;
 
 private:
     // The control we're associated with.
@@ -456,18 +456,18 @@ public:
     {
     }
 
-    virtual bool SetValue(const wxVariant& value)
+    virtual bool SetValue(const wxVariant& value) wxOVERRIDE
     {
         m_value << value;
         return true;
     }
 
-    virtual bool GetValue(wxVariant& WXUNUSED(value)) const
+    virtual bool GetValue(wxVariant& WXUNUSED(value)) const wxOVERRIDE
     {
         return false;
     }
 
-    wxSize GetSize() const
+    wxSize GetSize() const wxOVERRIDE
     {
         wxSize size = GetCheckSize();
         size.x += MARGIN_CHECK_ICON;
@@ -494,7 +494,7 @@ public:
         return size;
     }
 
-    virtual bool Render(wxRect cell, wxDC* dc, int state)
+    virtual bool Render(wxRect cell, wxDC* dc, int state) wxOVERRIDE
     {
         // Draw the checkbox first.
         int renderFlags = 0;
@@ -552,7 +552,7 @@ public:
                               wxDataViewModel *model,
                               const wxDataViewItem & item,
                               unsigned int WXUNUSED(col),
-                              const wxMouseEvent *mouseEvent)
+                              const wxMouseEvent *mouseEvent) wxOVERRIDE
     {
         if ( mouseEvent )
         {
diff --git a/src/generic/vscroll.cpp b/src/generic/vscroll.cpp
index 38e882b..f00bddd 100644
--- a/src/generic/vscroll.cpp
+++ b/src/generic/vscroll.cpp
@@ -49,7 +49,7 @@ public:
         m_scrollHelper = scrollHelper;
     }
 
-    virtual bool ProcessEvent(wxEvent& event);
+    virtual bool ProcessEvent(wxEvent& event) wxOVERRIDE;
 
 private:
     wxVarScrollHelperBase *m_scrollHelper;
diff --git a/src/generic/wizard.cpp b/src/generic/wizard.cpp
index 25d1a66..bfd140a 100644
--- a/src/generic/wizard.cpp
+++ b/src/generic/wizard.cpp
@@ -53,10 +53,10 @@ class wxWizardSizer : public wxSizer
 public:
     wxWizardSizer(wxWizard *owner);
 
-    virtual wxSizerItem *Insert(size_t index, wxSizerItem *item);
+    virtual wxSizerItem *Insert(size_t index, wxSizerItem *item) wxOVERRIDE;
 
-    virtual void RecalcSizes();
-    virtual wxSize CalcMin();
+    virtual void RecalcSizes() wxOVERRIDE;
+    virtual wxSize CalcMin() wxOVERRIDE;
 
     // get the max size of all wizard pages
     wxSize GetMaxChildSize();
diff --git a/src/html/helpdata.cpp b/src/html/helpdata.cpp
index c60c74e..35d0522 100644
--- a/src/html/helpdata.cpp
+++ b/src/html/helpdata.cpp
@@ -121,10 +121,10 @@ public:
         GetEntitiesParser()->SetEncoding(wxFONTENCODING_ISO8859_1);
     }
 
-    wxObject* GetProduct() { return NULL; }
+    wxObject* GetProduct() wxOVERRIDE { return NULL; }
 
 protected:
-    virtual void AddText(const wxString& WXUNUSED(txt)) {}
+    virtual void AddText(const wxString& WXUNUSED(txt)) wxOVERRIDE {}
 
     wxDECLARE_NO_COPY_CLASS(HP_Parser);
 };
@@ -158,8 +158,8 @@ class HP_TagHandler : public wxHtmlTagHandler
             m_count = 0;
             m_parentItem = NULL;
         }
-        wxString GetSupportedTags() { return wxT("UL,OBJECT,PARAM"); }
-        bool HandleTag(const wxHtmlTag& tag);
+        wxString GetSupportedTags() wxOVERRIDE { return wxT("UL,OBJECT,PARAM"); }
+        bool HandleTag(const wxHtmlTag& tag) wxOVERRIDE;
 
         void Reset(wxHtmlHelpDataItems& data)
         {
diff --git a/src/html/helpwnd.cpp b/src/html/helpwnd.cpp
index 131375b..f5d03af 100644
--- a/src/html/helpwnd.cpp
+++ b/src/html/helpwnd.cpp
@@ -120,7 +120,7 @@ public:
         SetStandardFonts();
     }
 
-    virtual bool LoadPage(const wxString& location)
+    virtual bool LoadPage(const wxString& location) wxOVERRIDE
     {
         if ( !wxHtmlWindow::LoadPage(location) )
             return false;
diff --git a/src/html/htmlfilt.cpp b/src/html/htmlfilt.cpp
index 9564d87..65c5443 100644
--- a/src/html/htmlfilt.cpp
+++ b/src/html/htmlfilt.cpp
@@ -84,8 +84,8 @@ class wxHtmlFilterImage : public wxHtmlFilter
     DECLARE_DYNAMIC_CLASS(wxHtmlFilterImage)
 
     public:
-        virtual bool CanRead(const wxFSFile& file) const;
-        virtual wxString ReadFile(const wxFSFile& file) const;
+        virtual bool CanRead(const wxFSFile& file) const wxOVERRIDE;
+        virtual wxString ReadFile(const wxFSFile& file) const wxOVERRIDE;
 };
 
 IMPLEMENT_DYNAMIC_CLASS(wxHtmlFilterImage, wxHtmlFilter)
@@ -191,13 +191,13 @@ class wxHtmlFilterModule : public wxModule
     DECLARE_DYNAMIC_CLASS(wxHtmlFilterModule)
 
     public:
-        virtual bool OnInit()
+        virtual bool OnInit() wxOVERRIDE
         {
             wxHtmlWindow::AddFilter(new wxHtmlFilterHTML);
             wxHtmlWindow::AddFilter(new wxHtmlFilterImage);
             return true;
         }
-        virtual void OnExit() {}
+        virtual void OnExit() wxOVERRIDE {}
 };
 
 IMPLEMENT_DYNAMIC_CLASS(wxHtmlFilterModule, wxModule)
diff --git a/src/html/htmlpars.cpp b/src/html/htmlpars.cpp
index 308df69..d0663f5 100644
--- a/src/html/htmlpars.cpp
+++ b/src/html/htmlpars.cpp
@@ -889,10 +889,10 @@ class wxMetaTagParser : public wxHtmlParser
 public:
     wxMetaTagParser() { }
 
-    wxObject* GetProduct() { return NULL; }
+    wxObject* GetProduct() wxOVERRIDE { return NULL; }
 
 protected:
-    virtual void AddText(const wxString& WXUNUSED(txt)) {}
+    virtual void AddText(const wxString& WXUNUSED(txt)) wxOVERRIDE {}
 
     wxDECLARE_NO_COPY_CLASS(wxMetaTagParser);
 };
@@ -901,8 +901,8 @@ class wxMetaTagHandler : public wxHtmlTagHandler
 {
 public:
     wxMetaTagHandler(wxString *retval) : wxHtmlTagHandler(), m_retval(retval) {}
-    wxString GetSupportedTags() { return wxT("META,BODY"); }
-    bool HandleTag(const wxHtmlTag& tag);
+    wxString GetSupportedTags() wxOVERRIDE { return wxT("META,BODY"); }
+    bool HandleTag(const wxHtmlTag& tag) wxOVERRIDE;
 
 private:
     wxString *m_retval;
diff --git a/src/html/htmlwin.cpp b/src/html/htmlwin.cpp
index 2891ed8..21fdad2 100644
--- a/src/html/htmlwin.cpp
+++ b/src/html/htmlwin.cpp
@@ -66,7 +66,7 @@ public:
         m_orient = orient;
     }
 
-    virtual void Notify();
+    virtual void Notify() wxOVERRIDE;
 
 private:
     wxScrolledWindow *m_win;
@@ -1846,8 +1846,8 @@ class wxHtmlWinModule: public wxModule
 DECLARE_DYNAMIC_CLASS(wxHtmlWinModule)
 public:
     wxHtmlWinModule() : wxModule() {}
-    bool OnInit() { return true; }
-    void OnExit() { wxHtmlWindow::CleanUpStatics(); }
+    bool OnInit() wxOVERRIDE { return true; }
+    void OnExit() wxOVERRIDE { wxHtmlWindow::CleanUpStatics(); }
 };
 
 IMPLEMENT_DYNAMIC_CLASS(wxHtmlWinModule, wxModule)
diff --git a/src/html/htmprint.cpp b/src/html/htmprint.cpp
index dd7682e..f6fc985 100644
--- a/src/html/htmprint.cpp
+++ b/src/html/htmprint.cpp
@@ -830,8 +830,8 @@ class wxHtmlPrintingModule: public wxModule
 DECLARE_DYNAMIC_CLASS(wxHtmlPrintingModule)
 public:
     wxHtmlPrintingModule() : wxModule() {}
-    bool OnInit() { return true; }
-    void OnExit() { wxHtmlPrintout::CleanUpStatics(); }
+    bool OnInit() wxOVERRIDE { return true; }
+    void OnExit() wxOVERRIDE { wxHtmlPrintout::CleanUpStatics(); }
 };
 
 IMPLEMENT_DYNAMIC_CLASS(wxHtmlPrintingModule, wxModule)
diff --git a/src/html/m_hline.cpp b/src/html/m_hline.cpp
index f1d5429..1632d4b 100644
--- a/src/html/m_hline.cpp
+++ b/src/html/m_hline.cpp
@@ -37,8 +37,8 @@ class wxHtmlLineCell : public wxHtmlCell
     public:
         wxHtmlLineCell(int size, bool shading) : wxHtmlCell() {m_Height = size; m_HasShading = shading;}
         void Draw(wxDC& dc, int x, int y, int view_y1, int view_y2,
-                  wxHtmlRenderingInfo& info);
-        void Layout(int w)
+                  wxHtmlRenderingInfo& info) wxOVERRIDE;
+        void Layout(int w) wxOVERRIDE
             { m_Width = w; wxHtmlCell::Layout(w); }
 
     private:
diff --git a/src/html/m_image.cpp b/src/html/m_image.cpp
index 482692b..d16040f 100644
--- a/src/html/m_image.cpp
+++ b/src/html/m_image.cpp
@@ -61,11 +61,11 @@ class wxHtmlImageMapAreaCell : public wxHtmlCell
         int radius;
     public:
         wxHtmlImageMapAreaCell( celltype t, wxString &coords, double pixel_scale = 1.0);
-        virtual wxHtmlLinkInfo *GetLink( int x = 0, int y = 0 ) const;
+        virtual wxHtmlLinkInfo *GetLink( int x = 0, int y = 0 ) const wxOVERRIDE;
         void Draw(wxDC& WXUNUSED(dc),
                   int WXUNUSED(x), int WXUNUSED(y),
                   int WXUNUSED(view_y1), int WXUNUSED(view_y2),
-                  wxHtmlRenderingInfo& WXUNUSED(info)) {}
+                  wxHtmlRenderingInfo& WXUNUSED(info)) wxOVERRIDE {}
 
 
     wxDECLARE_NO_COPY_CLASS(wxHtmlImageMapAreaCell);
@@ -239,12 +239,12 @@ class wxHtmlImageMapCell : public wxHtmlCell
     protected:
         wxString m_Name;
     public:
-        virtual wxHtmlLinkInfo *GetLink( int x = 0, int y = 0 ) const;
-        virtual const wxHtmlCell *Find( int cond, const void *param ) const;
+        virtual wxHtmlLinkInfo *GetLink( int x = 0, int y = 0 ) const wxOVERRIDE;
+        virtual const wxHtmlCell *Find( int cond, const void *param ) const wxOVERRIDE;
         void Draw(wxDC& WXUNUSED(dc),
                   int WXUNUSED(x), int WXUNUSED(y),
                   int WXUNUSED(view_y1), int WXUNUSED(view_y2),
-                  wxHtmlRenderingInfo& WXUNUSED(info)) {}
+                  wxHtmlRenderingInfo& WXUNUSED(info)) wxOVERRIDE {}
 
     wxDECLARE_NO_COPY_CLASS(wxHtmlImageMapCell);
 };
@@ -293,18 +293,18 @@ public:
                     const wxString& mapname = wxEmptyString);
     virtual ~wxHtmlImageCell();
     void Draw(wxDC& dc, int x, int y, int view_y1, int view_y2,
-              wxHtmlRenderingInfo& info);
-    virtual wxHtmlLinkInfo *GetLink(int x = 0, int y = 0) const;
+              wxHtmlRenderingInfo& info) wxOVERRIDE;
+    virtual wxHtmlLinkInfo *GetLink(int x = 0, int y = 0) const wxOVERRIDE;
 
     void SetImage(const wxImage& img);
 
     // If "alt" text is set, it will be used when converting this cell to text.
     void SetAlt(const wxString& alt);
-    virtual wxString ConvertToText(wxHtmlSelection *sel) const;
+    virtual wxString ConvertToText(wxHtmlSelection *sel) const wxOVERRIDE;
 
 #if wxUSE_GIF && wxUSE_TIMER
     void AdvanceAnimation(wxTimer *timer);
-    virtual void Layout(int w);
+    virtual void Layout(int w) wxOVERRIDE;
 #endif
 
 private:
@@ -334,7 +334,7 @@ class wxGIFTimer : public wxTimer
 {
     public:
         wxGIFTimer(wxHtmlImageCell *cell) : m_cell(cell) {}
-        virtual void Notify()
+        virtual void Notify() wxOVERRIDE
         {
             m_cell->AdvanceAnimation(this);
         }
diff --git a/src/html/m_layout.cpp b/src/html/m_layout.cpp
index 0bc769b..a57746c 100644
--- a/src/html/m_layout.cpp
+++ b/src/html/m_layout.cpp
@@ -71,12 +71,12 @@ public:
 
     bool AdjustPagebreak(int* pagebreak,
                          const wxArrayInt& known_pagebreaks,
-                         int pageHeight) const;
+                         int pageHeight) const wxOVERRIDE;
 
     void Draw(wxDC& WXUNUSED(dc),
               int WXUNUSED(x), int WXUNUSED(y),
               int WXUNUSED(view_y1), int WXUNUSED(view_y2),
-              wxHtmlRenderingInfo& WXUNUSED(info)) {}
+              wxHtmlRenderingInfo& WXUNUSED(info)) wxOVERRIDE {}
 
 private:
     wxDECLARE_NO_COPY_CLASS(wxHtmlPageBreakCell);
diff --git a/src/html/m_links.cpp b/src/html/m_links.cpp
index 4dfebdc..b5a6553 100644
--- a/src/html/m_links.cpp
+++ b/src/html/m_links.cpp
@@ -36,9 +36,9 @@ public:
     void Draw(wxDC& WXUNUSED(dc),
               int WXUNUSED(x), int WXUNUSED(y),
               int WXUNUSED(view_y1), int WXUNUSED(view_y2),
-              wxHtmlRenderingInfo& WXUNUSED(info)) {}
+              wxHtmlRenderingInfo& WXUNUSED(info)) wxOVERRIDE {}
 
-    virtual const wxHtmlCell* Find(int condition, const void* param) const
+    virtual const wxHtmlCell* Find(int condition, const void* param) const wxOVERRIDE
     {
         if ((condition == wxHTML_COND_ISANCHOR) &&
             (m_AnchorName == (*((const wxString*)param))))
diff --git a/src/html/m_list.cpp b/src/html/m_list.cpp
index 12d9d90..836a1f8 100644
--- a/src/html/m_list.cpp
+++ b/src/html/m_list.cpp
@@ -38,7 +38,7 @@ class wxHtmlListmarkCell : public wxHtmlCell
     public:
         wxHtmlListmarkCell(wxDC *dc, const wxColour& clr);
         void Draw(wxDC& dc, int x, int y, int view_y1, int view_y2,
-                  wxHtmlRenderingInfo& info);
+                  wxHtmlRenderingInfo& info) wxOVERRIDE;
 
     wxDECLARE_NO_COPY_CLASS(wxHtmlListmarkCell);
 };
@@ -90,7 +90,7 @@ class wxHtmlListCell : public wxHtmlContainerCell
         wxHtmlListCell(wxHtmlContainerCell *parent);
         virtual ~wxHtmlListCell();
         void AddRow(wxHtmlContainerCell *mark, wxHtmlContainerCell *cont);
-        virtual void Layout(int w);
+        virtual void Layout(int w) wxOVERRIDE;
 
     wxDECLARE_NO_COPY_CLASS(wxHtmlListCell);
 };
@@ -205,7 +205,7 @@ class wxHtmlListcontentCell : public wxHtmlContainerCell
 {
 public:
     wxHtmlListcontentCell(wxHtmlContainerCell *p) : wxHtmlContainerCell(p) {}
-    virtual void Layout(int w) {
+    virtual void Layout(int w) wxOVERRIDE {
         // Reset top indentation, fixes <li><p>
         SetIndent(0, wxHTML_INDENT_TOP);
         wxHtmlContainerCell::Layout(w);
diff --git a/src/html/m_tables.cpp b/src/html/m_tables.cpp
index 592fcc6..779e811 100644
--- a/src/html/m_tables.cpp
+++ b/src/html/m_tables.cpp
@@ -99,9 +99,9 @@ public:
     wxHtmlTableCell(wxHtmlContainerCell *parent, const wxHtmlTag& tag, double pixel_scale = 1.0);
     virtual ~wxHtmlTableCell();
 
-    virtual void RemoveExtraSpacing(bool top, bool bottom);
+    virtual void RemoveExtraSpacing(bool top, bool bottom) wxOVERRIDE;
 
-    virtual void Layout(int w);
+    virtual void Layout(int w) wxOVERRIDE;
 
     void AddRow(const wxHtmlTag& tag);
     void AddCell(wxHtmlContainerCell *cell, const wxHtmlTag& tag);
diff --git a/src/osx/artmac.cpp b/src/osx/artmac.cpp
index d72da8b..481280b 100644
--- a/src/osx/artmac.cpp
+++ b/src/osx/artmac.cpp
@@ -35,12 +35,12 @@ class wxMacArtProvider : public wxArtProvider
 protected:
 #if wxOSX_USE_COCOA_OR_CARBON
     virtual wxIconBundle CreateIconBundle(const wxArtID& id,
-                                          const wxArtClient& client);
+                                          const wxArtClient& client) wxOVERRIDE;
 #endif
 #if wxOSX_USE_COCOA_OR_IPHONE
     virtual wxBitmap CreateBitmap(const wxArtID& id,
                                   const wxArtClient& client,
-                                  const wxSize& size)
+                                  const wxSize& size) wxOVERRIDE
     {
         return wxOSXCreateSystemBitmap(id, client, size);
     }
diff --git a/src/osx/carbon/cursor.cpp b/src/osx/carbon/cursor.cpp
index 34afa0c..3828f56 100644
--- a/src/osx/carbon/cursor.cpp
+++ b/src/osx/carbon/cursor.cpp
@@ -33,7 +33,7 @@ public:
     wxCursorRefData(const wxCursorRefData& cursor);
     virtual ~wxCursorRefData();
 
-    virtual bool IsOk() const
+    virtual bool IsOk() const wxOVERRIDE
     {
 #if wxOSX_USE_COCOA_OR_CARBON
         if ( m_hCursor != NULL )
diff --git a/src/osx/carbon/dcprint.cpp b/src/osx/carbon/dcprint.cpp
index 4b60a42..bcb4920 100644
--- a/src/osx/carbon/dcprint.cpp
+++ b/src/osx/carbon/dcprint.cpp
@@ -55,13 +55,13 @@ class wxMacCarbonPrinterDC : public wxNativePrinterDC
 public :
     wxMacCarbonPrinterDC( wxPrintData* data ) ;
     virtual ~wxMacCarbonPrinterDC() ;
-    virtual bool StartDoc(  wxPrinterDC* dc , const wxString& message ) ;
-    virtual void EndDoc( wxPrinterDC* dc ) ;
-    virtual void StartPage( wxPrinterDC* dc ) ;
-    virtual void EndPage( wxPrinterDC* dc ) ;
-    virtual wxUint32 GetStatus() const { return m_err ; }
-    virtual void GetSize( int *w , int *h) const ;
-    virtual wxSize GetPPI() const ;
+    virtual bool StartDoc(  wxPrinterDC* dc , const wxString& message ) wxOVERRIDE ;
+    virtual void EndDoc( wxPrinterDC* dc ) wxOVERRIDE ;
+    virtual void StartPage( wxPrinterDC* dc ) wxOVERRIDE ;
+    virtual void EndPage( wxPrinterDC* dc ) wxOVERRIDE ;
+    virtual wxUint32 GetStatus() const wxOVERRIDE { return m_err ; }
+    virtual void GetSize( int *w , int *h) const wxOVERRIDE ;
+    virtual wxSize GetPPI() const wxOVERRIDE ;
 private :
     wxCoord m_maxX ;
     wxCoord m_maxY ;
diff --git a/src/osx/carbon/gdiobj.cpp b/src/osx/carbon/gdiobj.cpp
index 3a8b6b8..d178640 100644
--- a/src/osx/carbon/gdiobj.cpp
+++ b/src/osx/carbon/gdiobj.cpp
@@ -27,10 +27,10 @@ wxFORCE_LINK_THIS_MODULE(gdiobj)
 class wxStockGDIMac: public wxStockGDI, public wxModule
 {
 public:
-    virtual const wxFont* GetFont(Item item);
+    virtual const wxFont* GetFont(Item item) wxOVERRIDE;
 
-    virtual bool OnInit();
-    virtual void OnExit();
+    virtual bool OnInit() wxOVERRIDE;
+    virtual void OnExit() wxOVERRIDE;
 
 private:
     typedef wxStockGDI super;
diff --git a/src/osx/carbon/graphics.cpp b/src/osx/carbon/graphics.cpp
index c2aabf5..61179fd 100644
--- a/src/osx/carbon/graphics.cpp
+++ b/src/osx/carbon/graphics.cpp
@@ -212,7 +212,7 @@ public :
         Init( image , transform );
     }
 
-    virtual void Render( CGContextRef ctxRef )
+    virtual void Render( CGContextRef ctxRef ) wxOVERRIDE
     {
         if (m_image != NULL)
             wxMacDrawCGImage( ctxRef, &m_imageBounds, m_image );
@@ -260,7 +260,7 @@ public :
         CGContextStrokeLineSegments( ctxRef , pts , count );
     }
 
-    virtual void Render( CGContextRef ctxRef )
+    virtual void Render( CGContextRef ctxRef ) wxOVERRIDE
     {
         switch ( m_hatch )
         {
@@ -941,7 +941,7 @@ public:
     ~wxMacCoreGraphicsBitmapData();
 
     virtual CGImageRef GetBitmap() { return m_bitmap; }
-    virtual void* GetNativeBitmap() const { return m_bitmap; }
+    virtual void* GetNativeBitmap() const wxOVERRIDE { return m_bitmap; }
     bool IsMonochrome() { return m_monochrome; }
 
 #if wxUSE_IMAGE
@@ -982,53 +982,53 @@ public :
 
     virtual ~wxMacCoreGraphicsMatrixData() ;
 
-    virtual wxGraphicsObjectRefData *Clone() const ;
+    virtual wxGraphicsObjectRefData *Clone() const wxOVERRIDE ;
 
     // concatenates the matrix
-    virtual void Concat( const wxGraphicsMatrixData *t );
+    virtual void Concat( const wxGraphicsMatrixData *t ) wxOVERRIDE;
 
     // sets the matrix to the respective values
     virtual void Set(wxDouble a=1.0, wxDouble b=0.0, wxDouble c=0.0, wxDouble d=1.0,
-        wxDouble tx=0.0, wxDouble ty=0.0);
+        wxDouble tx=0.0, wxDouble ty=0.0) wxOVERRIDE;
 
     // gets the component valuess of the matrix
     virtual void Get(wxDouble* a=NULL, wxDouble* b=NULL,  wxDouble* c=NULL,
-                     wxDouble* d=NULL, wxDouble* tx=NULL, wxDouble* ty=NULL) const;
+                     wxDouble* d=NULL, wxDouble* tx=NULL, wxDouble* ty=NULL) const wxOVERRIDE;
 
     // makes this the inverse matrix
-    virtual void Invert();
+    virtual void Invert() wxOVERRIDE;
 
     // returns true if the elements of the transformation matrix are equal ?
-    virtual bool IsEqual( const wxGraphicsMatrixData* t) const ;
+    virtual bool IsEqual( const wxGraphicsMatrixData* t) const wxOVERRIDE ;
 
     // return true if this is the identity matrix
-    virtual bool IsIdentity() const;
+    virtual bool IsIdentity() const wxOVERRIDE;
 
     //
     // transformation
     //
 
     // add the translation to this matrix
-    virtual void Translate( wxDouble dx , wxDouble dy );
+    virtual void Translate( wxDouble dx , wxDouble dy ) wxOVERRIDE;
 
     // add the scale to this matrix
-    virtual void Scale( wxDouble xScale , wxDouble yScale );
+    virtual void Scale( wxDouble xScale , wxDouble yScale ) wxOVERRIDE;
 
     // add the rotation to this matrix (radians)
-    virtual void Rotate( wxDouble angle );
+    virtual void Rotate( wxDouble angle ) wxOVERRIDE;
 
     //
     // apply the transforms
     //
 
     // applies that matrix to the point
-    virtual void TransformPoint( wxDouble *x, wxDouble *y ) const;
+    virtual void TransformPoint( wxDouble *x, wxDouble *y ) const wxOVERRIDE;
 
     // applies the matrix except for translations
-    virtual void TransformDistance( wxDouble *dx, wxDouble *dy ) const;
+    virtual void TransformDistance( wxDouble *dx, wxDouble *dy ) const wxOVERRIDE;
 
     // returns the native representation
-    virtual void * GetNativeMatrix() const;
+    virtual void * GetNativeMatrix() const wxOVERRIDE;
 
 private :
     CGAffineTransform m_matrix;
@@ -1161,25 +1161,25 @@ public :
 
     ~wxMacCoreGraphicsPathData();
 
-    virtual wxGraphicsObjectRefData *Clone() const;
+    virtual wxGraphicsObjectRefData *Clone() const wxOVERRIDE;
 
     // begins a new subpath at (x,y)
-    virtual void MoveToPoint( wxDouble x, wxDouble y );
+    virtual void MoveToPoint( wxDouble x, wxDouble y ) wxOVERRIDE;
 
     // adds a straight line from the current point to (x,y)
-    virtual void AddLineToPoint( wxDouble x, wxDouble y );
+    virtual void AddLineToPoint( wxDouble x, wxDouble y ) wxOVERRIDE;
 
     // adds a cubic Bezier curve from the current point, using two control points and an end point
-    virtual void AddCurveToPoint( wxDouble cx1, wxDouble cy1, wxDouble cx2, wxDouble cy2, wxDouble x, wxDouble y );
+    virtual void AddCurveToPoint( wxDouble cx1, wxDouble cy1, wxDouble cx2, wxDouble cy2, wxDouble x, wxDouble y ) wxOVERRIDE;
 
     // closes the current sub-path
-    virtual void CloseSubpath();
+    virtual void CloseSubpath() wxOVERRIDE;
 
     // gets the last point of the current path, (0,0) if not yet set
-    virtual void GetCurrentPoint( wxDouble* x, wxDouble* y) const;
+    virtual void GetCurrentPoint( wxDouble* x, wxDouble* y) const wxOVERRIDE;
 
     // adds an arc of a circle centering at (x,y) with radius (r) from startAngle to endAngle
-    virtual void AddArc( wxDouble x, wxDouble y, wxDouble r, wxDouble startAngle, wxDouble endAngle, bool clockwise );
+    virtual void AddArc( wxDouble x, wxDouble y, wxDouble r, wxDouble startAngle, wxDouble endAngle, bool clockwise ) wxOVERRIDE;
 
     //
     // These are convenience functions which - if not available natively will be assembled
@@ -1187,36 +1187,36 @@ public :
     //
 
     // adds a quadratic Bezier curve from the current point, using a control point and an end point
-    virtual void AddQuadCurveToPoint( wxDouble cx, wxDouble cy, wxDouble x, wxDouble y );
+    virtual void AddQuadCurveToPoint( wxDouble cx, wxDouble cy, wxDouble x, wxDouble y ) wxOVERRIDE;
 
     // appends a rectangle as a new closed subpath
-    virtual void AddRectangle( wxDouble x, wxDouble y, wxDouble w, wxDouble h );
+    virtual void AddRectangle( wxDouble x, wxDouble y, wxDouble w, wxDouble h ) wxOVERRIDE;
 
     // appends a circle as a new closed subpath
-    virtual void AddCircle( wxDouble x, wxDouble y, wxDouble r );
+    virtual void AddCircle( wxDouble x, wxDouble y, wxDouble r ) wxOVERRIDE;
 
     // appends an ellipsis as a new closed subpath fitting the passed rectangle
-    virtual void AddEllipse( wxDouble x, wxDouble y, wxDouble w, wxDouble h);
+    virtual void AddEllipse( wxDouble x, wxDouble y, wxDouble w, wxDouble h) wxOVERRIDE;
 
     // draws a an arc to two tangents connecting (current) to (x1,y1) and (x1,y1) to (x2,y2), also a straight line from (current) to (x1,y1)
-    virtual void AddArcToPoint( wxDouble x1, wxDouble y1 , wxDouble x2, wxDouble y2, wxDouble r );
+    virtual void AddArcToPoint( wxDouble x1, wxDouble y1 , wxDouble x2, wxDouble y2, wxDouble r ) wxOVERRIDE;
 
     // adds another path
-    virtual void AddPath( const wxGraphicsPathData* path );
+    virtual void AddPath( const wxGraphicsPathData* path ) wxOVERRIDE;
 
     // returns the native path
-    virtual void * GetNativePath() const { return m_path; }
+    virtual void * GetNativePath() const wxOVERRIDE { return m_path; }
 
     // give the native path returned by GetNativePath() back (there might be some deallocations necessary)
-    virtual void UnGetNativePath(void *WXUNUSED(p)) const {}
+    virtual void UnGetNativePath(void *WXUNUSED(p)) const wxOVERRIDE {}
 
     // transforms each point of this path by the matrix
-    virtual void Transform( const wxGraphicsMatrixData* matrix );
+    virtual void Transform( const wxGraphicsMatrixData* matrix ) wxOVERRIDE;
 
     // gets the bounding box enclosing all points (possibly including control points)
-    virtual void GetBox(wxDouble *x, wxDouble *y, wxDouble *w, wxDouble *h) const;
+    virtual void GetBox(wxDouble *x, wxDouble *y, wxDouble *w, wxDouble *h) const wxOVERRIDE;
 
-    virtual bool Contains( wxDouble x, wxDouble y, wxPolygonFillMode fillStyle = wxODDEVEN_RULE) const;
+    virtual bool Contains( wxDouble x, wxDouble y, wxPolygonFillMode fillStyle = wxODDEVEN_RULE) const wxOVERRIDE;
 private :
     CGMutablePathRef m_path;
 };
@@ -1362,74 +1362,74 @@ public:
 
     void Init();
 
-    virtual void StartPage( wxDouble width, wxDouble height );
+    virtual void StartPage( wxDouble width, wxDouble height ) wxOVERRIDE;
 
-    virtual void EndPage();
+    virtual void EndPage() wxOVERRIDE;
 
-    virtual void Flush();
+    virtual void Flush() wxOVERRIDE;
 
     // push the current state of the context, ie the transformation matrix on a stack
-    virtual void PushState();
+    virtual void PushState() wxOVERRIDE;
 
     // pops a stored state from the stack
-    virtual void PopState();
+    virtual void PopState() wxOVERRIDE;
 
     // clips drawings to the region
-    virtual void Clip( const wxRegion &region );
+    virtual void Clip( const wxRegion &region ) wxOVERRIDE;
 
     // clips drawings to the rect
-    virtual void Clip( wxDouble x, wxDouble y, wxDouble w, wxDouble h );
+    virtual void Clip( wxDouble x, wxDouble y, wxDouble w, wxDouble h ) wxOVERRIDE;
 
     // resets the clipping to original extent
-    virtual void ResetClip();
+    virtual void ResetClip() wxOVERRIDE;
 
-    virtual void * GetNativeContext();
+    virtual void * GetNativeContext() wxOVERRIDE;
 
-    virtual bool SetAntialiasMode(wxAntialiasMode antialias);
+    virtual bool SetAntialiasMode(wxAntialiasMode antialias) wxOVERRIDE;
 
-    virtual bool SetInterpolationQuality(wxInterpolationQuality interpolation);
+    virtual bool SetInterpolationQuality(wxInterpolationQuality interpolation) wxOVERRIDE;
     
-    virtual bool SetCompositionMode(wxCompositionMode op);
+    virtual bool SetCompositionMode(wxCompositionMode op) wxOVERRIDE;
 
-    virtual void BeginLayer(wxDouble opacity);
+    virtual void BeginLayer(wxDouble opacity) wxOVERRIDE;
 
-    virtual void EndLayer();
+    virtual void EndLayer() wxOVERRIDE;
 
     //
     // transformation
     //
 
     // translate
-    virtual void Translate( wxDouble dx , wxDouble dy );
+    virtual void Translate( wxDouble dx , wxDouble dy ) wxOVERRIDE;
 
     // scale
-    virtual void Scale( wxDouble xScale , wxDouble yScale );
+    virtual void Scale( wxDouble xScale , wxDouble yScale ) wxOVERRIDE;
 
     // rotate (radians)
-    virtual void Rotate( wxDouble angle );
+    virtual void Rotate( wxDouble angle ) wxOVERRIDE;
 
     // concatenates this transform with the current transform of this context
-    virtual void ConcatTransform( const wxGraphicsMatrix& matrix );
+    virtual void ConcatTransform( const wxGraphicsMatrix& matrix ) wxOVERRIDE;
 
     // sets the transform of this context
-    virtual void SetTransform( const wxGraphicsMatrix& matrix );
+    virtual void SetTransform( const wxGraphicsMatrix& matrix ) wxOVERRIDE;
 
     // gets the matrix of this context
-    virtual wxGraphicsMatrix GetTransform() const;
+    virtual wxGraphicsMatrix GetTransform() const wxOVERRIDE;
     //
     // setting the paint
     //
 
     // strokes along a path with the current pen
-    virtual void StrokePath( const wxGraphicsPath &path );
+    virtual void StrokePath( const wxGraphicsPath &path ) wxOVERRIDE;
 
     // fills a path with the current brush
-    virtual void FillPath( const wxGraphicsPath &path, wxPolygonFillMode fillStyle = wxODDEVEN_RULE );
+    virtual void FillPath( const wxGraphicsPath &path, wxPolygonFillMode fillStyle = wxODDEVEN_RULE ) wxOVERRIDE;
 
     // draws a path by first filling and then stroking
-    virtual void DrawPath( const wxGraphicsPath &path, wxPolygonFillMode fillStyle = wxODDEVEN_RULE );
+    virtual void DrawPath( const wxGraphicsPath &path, wxPolygonFillMode fillStyle = wxODDEVEN_RULE ) wxOVERRIDE;
 
-    virtual bool ShouldOffset() const
+    virtual bool ShouldOffset() const wxOVERRIDE
     {
         if ( !m_enableOffset )
             return false;
@@ -1448,24 +1448,24 @@ public:
     //
 
     virtual void GetTextExtent( const wxString &text, wxDouble *width, wxDouble *height,
-        wxDouble *descent, wxDouble *externalLeading ) const;
+        wxDouble *descent, wxDouble *externalLeading ) const wxOVERRIDE;
 
-    virtual void GetPartialTextExtents(const wxString& text, wxArrayDouble& widths) const;
+    virtual void GetPartialTextExtents(const wxString& text, wxArrayDouble& widths) const wxOVERRIDE;
 
     //
     // image support
     //
 
-    virtual void DrawBitmap( const wxBitmap &bmp, wxDouble x, wxDouble y, wxDouble w, wxDouble h );
+    virtual void DrawBitmap( const wxBitmap &bmp, wxDouble x, wxDouble y, wxDouble w, wxDouble h ) wxOVERRIDE;
 
-    virtual void DrawBitmap( const wxGraphicsBitmap &bmp, wxDouble x, wxDouble y, wxDouble w, wxDouble h );
+    virtual void DrawBitmap( const wxGraphicsBitmap &bmp, wxDouble x, wxDouble y, wxDouble w, wxDouble h ) wxOVERRIDE;
 
-    virtual void DrawIcon( const wxIcon &icon, wxDouble x, wxDouble y, wxDouble w, wxDouble h );
+    virtual void DrawIcon( const wxIcon &icon, wxDouble x, wxDouble y, wxDouble w, wxDouble h ) wxOVERRIDE;
     
     // fast convenience methods
     
     
-    virtual void DrawRectangle( wxDouble x, wxDouble y, wxDouble w, wxDouble h ); 
+    virtual void DrawRectangle( wxDouble x, wxDouble y, wxDouble w, wxDouble h ) wxOVERRIDE; 
 
     void SetNativeContext( CGContextRef cg );
 
@@ -1475,8 +1475,8 @@ private:
     bool EnsureIsValid();
     void CheckInvariants() const;
 
-    virtual void DoDrawText( const wxString &str, wxDouble x, wxDouble y );
-    virtual void DoDrawRotatedText( const wxString &str, wxDouble x, wxDouble y, wxDouble angle );
+    virtual void DoDrawText( const wxString &str, wxDouble x, wxDouble y ) wxOVERRIDE;
+    virtual void DoDrawRotatedText( const wxString &str, wxDouble x, wxDouble y, wxDouble angle ) wxOVERRIDE;
 
     CGContextRef m_cgContext;
 #if wxOSX_USE_CARBON
@@ -2591,69 +2591,69 @@ public :
 
     // Context
 
-    virtual wxGraphicsContext * CreateContext( const wxWindowDC& dc);
-    virtual wxGraphicsContext * CreateContext( const wxMemoryDC& dc);
+    virtual wxGraphicsContext * CreateContext( const wxWindowDC& dc) wxOVERRIDE;
+    virtual wxGraphicsContext * CreateContext( const wxMemoryDC& dc) wxOVERRIDE;
 #if wxUSE_PRINTING_ARCHITECTURE
-    virtual wxGraphicsContext * CreateContext( const wxPrinterDC& dc);
+    virtual wxGraphicsContext * CreateContext( const wxPrinterDC& dc) wxOVERRIDE;
 #endif
 
-    virtual wxGraphicsContext * CreateContextFromNativeContext( void * context );
+    virtual wxGraphicsContext * CreateContextFromNativeContext( void * context ) wxOVERRIDE;
 
-    virtual wxGraphicsContext * CreateContextFromNativeWindow( void * window );
+    virtual wxGraphicsContext * CreateContextFromNativeWindow( void * window ) wxOVERRIDE;
 
-    virtual wxGraphicsContext * CreateContext( wxWindow* window );
+    virtual wxGraphicsContext * CreateContext( wxWindow* window ) wxOVERRIDE;
 
 #if wxUSE_IMAGE
-    virtual wxGraphicsContext * CreateContextFromImage(wxImage& image);
+    virtual wxGraphicsContext * CreateContextFromImage(wxImage& image) wxOVERRIDE;
 #endif // wxUSE_IMAGE
 
-    virtual wxGraphicsContext * CreateMeasuringContext();
+    virtual wxGraphicsContext * CreateMeasuringContext() wxOVERRIDE;
 
     // Path
 
-    virtual wxGraphicsPath CreatePath();
+    virtual wxGraphicsPath CreatePath() wxOVERRIDE;
 
     // Matrix
 
     virtual wxGraphicsMatrix CreateMatrix( wxDouble a=1.0, wxDouble b=0.0, wxDouble c=0.0, wxDouble d=1.0,
-        wxDouble tx=0.0, wxDouble ty=0.0);
+        wxDouble tx=0.0, wxDouble ty=0.0) wxOVERRIDE;
 
 
-    virtual wxGraphicsPen CreatePen(const wxPen& pen) ;
+    virtual wxGraphicsPen CreatePen(const wxPen& pen) wxOVERRIDE ;
 
-    virtual wxGraphicsBrush CreateBrush(const wxBrush& brush ) ;
+    virtual wxGraphicsBrush CreateBrush(const wxBrush& brush ) wxOVERRIDE ;
 
     virtual wxGraphicsBrush
     CreateLinearGradientBrush(wxDouble x1, wxDouble y1,
                               wxDouble x2, wxDouble y2,
-                              const wxGraphicsGradientStops& stops);
+                              const wxGraphicsGradientStops& stops) wxOVERRIDE;
 
     virtual wxGraphicsBrush
     CreateRadialGradientBrush(wxDouble xo, wxDouble yo,
                               wxDouble xc, wxDouble yc,
                               wxDouble radius,
-                              const wxGraphicsGradientStops& stops);
+                              const wxGraphicsGradientStops& stops) wxOVERRIDE;
 
    // sets the font
-    virtual wxGraphicsFont CreateFont( const wxFont &font , const wxColour &col = *wxBLACK ) ;
+    virtual wxGraphicsFont CreateFont( const wxFont &font , const wxColour &col = *wxBLACK ) wxOVERRIDE ;
     virtual wxGraphicsFont CreateFont(double sizeInPixels,
                                       const wxString& facename,
                                       int flags = wxFONTFLAG_DEFAULT,
-                                      const wxColour& col = *wxBLACK);
+                                      const wxColour& col = *wxBLACK) wxOVERRIDE;
 
     // create a native bitmap representation
-    virtual wxGraphicsBitmap CreateBitmap( const wxBitmap &bitmap ) ;
+    virtual wxGraphicsBitmap CreateBitmap( const wxBitmap &bitmap ) wxOVERRIDE ;
 
 #if wxUSE_IMAGE
-    virtual wxGraphicsBitmap CreateBitmapFromImage(const wxImage& image);
-    virtual wxImage CreateImageFromBitmap(const wxGraphicsBitmap& bmp);
+    virtual wxGraphicsBitmap CreateBitmapFromImage(const wxImage& image) wxOVERRIDE;
+    virtual wxImage CreateImageFromBitmap(const wxGraphicsBitmap& bmp) wxOVERRIDE;
 #endif // wxUSE_IMAGE
 
     // create a graphics bitmap from a native bitmap
-    virtual wxGraphicsBitmap CreateBitmapFromNativeBitmap( void* bitmap );
+    virtual wxGraphicsBitmap CreateBitmapFromNativeBitmap( void* bitmap ) wxOVERRIDE;
 
     // create a native bitmap representation
-    virtual wxGraphicsBitmap CreateSubBitmap( const wxGraphicsBitmap &bitmap, wxDouble x, wxDouble y, wxDouble w, wxDouble h  ) ;
+    virtual wxGraphicsBitmap CreateSubBitmap( const wxGraphicsBitmap &bitmap, wxDouble x, wxDouble y, wxDouble w, wxDouble h  ) wxOVERRIDE ;
 private :
     DECLARE_DYNAMIC_CLASS_NO_COPY(wxMacCoreGraphicsRenderer)
 } ;
diff --git a/src/osx/carbon/icon.cpp b/src/osx/carbon/icon.cpp
index 0dd456a..9ce67cf 100644
--- a/src/osx/carbon/icon.cpp
+++ b/src/osx/carbon/icon.cpp
@@ -31,7 +31,7 @@ public:
     wxIconRefData( WXHICON iconref, int desiredWidth, int desiredHeight );
     virtual ~wxIconRefData() { Free(); }
 
-    virtual bool IsOk() const { return m_iconRef != NULL; }
+    virtual bool IsOk() const wxOVERRIDE { return m_iconRef != NULL; }
 
     virtual void Free();
 
diff --git a/src/osx/carbon/metafile.cpp b/src/osx/carbon/metafile.cpp
index 1e03af7..844b62e 100644
--- a/src/osx/carbon/metafile.cpp
+++ b/src/osx/carbon/metafile.cpp
@@ -53,7 +53,7 @@ public:
 
     virtual ~wxMetafileRefData();
 
-    virtual bool IsOk() const { return m_data != NULL; }
+    virtual bool IsOk() const wxOVERRIDE { return m_data != NULL; }
 
     void Init();
 
diff --git a/src/osx/carbon/renderer.cpp b/src/osx/carbon/renderer.cpp
index 4669639..fec1c19 100644
--- a/src/osx/carbon/renderer.cpp
+++ b/src/osx/carbon/renderer.cpp
@@ -63,17 +63,17 @@ public:
         const wxRect& rect,
         int flags = 0,
         wxHeaderSortIconType sortArrow = wxHDR_SORT_ICON_NONE,
-        wxHeaderButtonParams* params = NULL );
+        wxHeaderButtonParams* params = NULL ) wxOVERRIDE;
 
-    virtual int GetHeaderButtonHeight(wxWindow *win);
+    virtual int GetHeaderButtonHeight(wxWindow *win) wxOVERRIDE;
 
-    virtual int GetHeaderButtonMargin(wxWindow *win);
+    virtual int GetHeaderButtonMargin(wxWindow *win) wxOVERRIDE;
 
     // draw the expanded/collapsed icon for a tree control item
     virtual void DrawTreeItemButton( wxWindow *win,
         wxDC& dc,
         const wxRect& rect,
-        int flags = 0 );
+        int flags = 0 ) wxOVERRIDE;
 
     // draw a (vertical) sash
     virtual void DrawSplitterSash( wxWindow *win,
@@ -81,49 +81,49 @@ public:
         const wxSize& size,
         wxCoord position,
         wxOrientation orient,
-        int flags = 0 );
+        int flags = 0 ) wxOVERRIDE;
 
     virtual void DrawCheckBox(wxWindow *win,
                               wxDC& dc,
                               const wxRect& rect,
-                              int flags = 0);
+                              int flags = 0) wxOVERRIDE;
 
-    virtual wxSize GetCheckBoxSize(wxWindow* win);
+    virtual wxSize GetCheckBoxSize(wxWindow* win) wxOVERRIDE;
 
     virtual void DrawComboBoxDropButton(wxWindow *win,
                                         wxDC& dc,
                                         const wxRect& rect,
-                                        int flags = 0);
+                                        int flags = 0) wxOVERRIDE;
 
     virtual void DrawPushButton(wxWindow *win,
                                 wxDC& dc,
                                 const wxRect& rect,
-                                int flags = 0);
+                                int flags = 0) wxOVERRIDE;
 
     virtual void DrawItemSelectionRect(wxWindow *win,
                                        wxDC& dc,
                                        const wxRect& rect,
-                                       int flags = 0);
+                                       int flags = 0) wxOVERRIDE;
 
-    virtual void DrawFocusRect(wxWindow* win, wxDC& dc, const wxRect& rect, int flags = 0);
+    virtual void DrawFocusRect(wxWindow* win, wxDC& dc, const wxRect& rect, int flags = 0) wxOVERRIDE;
 
-    virtual void DrawChoice(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
+    virtual void DrawChoice(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0) wxOVERRIDE;
 
-    virtual void DrawComboBox(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
+    virtual void DrawComboBox(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0) wxOVERRIDE;
 
-    virtual void DrawTextCtrl(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
+    virtual void DrawTextCtrl(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0) wxOVERRIDE;
 
-    virtual void DrawRadioBitmap(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0);
+    virtual void DrawRadioBitmap(wxWindow* win, wxDC& dc, const wxRect& rect, int flags=0) wxOVERRIDE;
 
 #ifdef wxHAS_DRAW_TITLE_BAR_BITMAP
     virtual void DrawTitleBarBitmap(wxWindow *win,
                                     wxDC& dc,
                                     const wxRect& rect,
                                     wxTitleBarButton button,
-                                    int flags = 0);
+                                    int flags = 0) wxOVERRIDE;
 #endif // wxHAS_DRAW_TITLE_BAR_BITMAP
 
-    virtual wxSplitterRenderParams GetSplitterParams(const wxWindow *win);
+    virtual wxSplitterRenderParams GetSplitterParams(const wxWindow *win) wxOVERRIDE;
 
 private:
     void DrawMacThemeButton(wxWindow *win,
diff --git a/src/osx/cocoa/button.mm b/src/osx/cocoa/button.mm
index 35c2c4d..acdef2f 100644
--- a/src/osx/cocoa/button.mm
+++ b/src/osx/cocoa/button.mm
@@ -480,7 +480,7 @@ public :
     {
     }
 
-    virtual void controlAction(WXWidget slf, void* _cmd, void *sender)
+    virtual void controlAction(WXWidget slf, void* _cmd, void *sender) wxOVERRIDE
     {
         wxDisclosureNSButton* db = (wxDisclosureNSButton*)m_osxView;
         [db toggle];
diff --git a/src/osx/cocoa/choice.mm b/src/osx/cocoa/choice.mm
index 0068d5d..2ab2784 100644
--- a/src/osx/cocoa/choice.mm
+++ b/src/osx/cocoa/choice.mm
@@ -63,7 +63,7 @@ public:
     {
     }
     
-    void GetLayoutInset(int &left , int &top , int &right, int &bottom) const
+    void GetLayoutInset(int &left , int &top , int &right, int &bottom) const wxOVERRIDE
     {
         left = top = right = bottom = 0;
         NSControlSize size = NSRegularControlSize;
diff --git a/src/osx/cocoa/datetimectrl.mm b/src/osx/cocoa/datetimectrl.mm
index 575a8a2..01097ad 100644
--- a/src/osx/cocoa/datetimectrl.mm
+++ b/src/osx/cocoa/datetimectrl.mm
@@ -75,7 +75,7 @@ public:
     {
     }
 
-    virtual void SetDateTime(const wxDateTime& dt)
+    virtual void SetDateTime(const wxDateTime& dt) wxOVERRIDE
     {
         wxDateTime dtFrom, dtTo;
         
@@ -85,12 +85,12 @@ public:
             [View() setDateValue: NSDateFromWX(dt)];
     }
 
-    virtual wxDateTime GetDateTime() const
+    virtual wxDateTime GetDateTime() const wxOVERRIDE
     {
         return NSDateToWX([View() dateValue]);
     }
 
-    virtual void SetDateRange(const wxDateTime& dt1, const wxDateTime& dt2)
+    virtual void SetDateRange(const wxDateTime& dt1, const wxDateTime& dt2) wxOVERRIDE
     {
         // Note that passing nil is ok here so we don't need to test for the
         // dates validity.
@@ -98,7 +98,7 @@ public:
         [View() setMaxDate: NSDateFromWX(dt2)];
     }
 
-    virtual bool GetDateRange(wxDateTime* dt1, wxDateTime* dt2)
+    virtual bool GetDateRange(wxDateTime* dt1, wxDateTime* dt2) wxOVERRIDE
     {
         bool hasLimits = false;
         if ( dt1 )
@@ -118,7 +118,7 @@ public:
 
     virtual void controlAction(WXWidget WXUNUSED(slf),
                                void* WXUNUSED(cmd),
-                               void* WXUNUSED(sender))
+                               void* WXUNUSED(sender)) wxOVERRIDE
     {
         wxWindow* const wxpeer = GetWXPeer();
         if ( wxpeer )
diff --git a/src/osx/cocoa/gauge.mm b/src/osx/cocoa/gauge.mm
index fe15e84..0958d89 100644
--- a/src/osx/cocoa/gauge.mm
+++ b/src/osx/cocoa/gauge.mm
@@ -50,19 +50,19 @@ public :
     {
     }
 
-    void SetMaximum(wxInt32 v)
+    void SetMaximum(wxInt32 v) wxOVERRIDE
     {
         SetDeterminateMode();
         wxWidgetCocoaImpl::SetMaximum( v ) ;
     }
 
-    void SetValue(wxInt32 v)
+    void SetValue(wxInt32 v) wxOVERRIDE
     {
         SetDeterminateMode();
         wxWidgetCocoaImpl::SetValue( v ) ;
     }
 
-    void PulseGauge()
+    void PulseGauge() wxOVERRIDE
     {
         if ( ![(wxNSProgressIndicator*)m_osxView isIndeterminate] )
         {
@@ -71,7 +71,7 @@ public :
         }
     }
 
-    void GetLayoutInset(int &left , int &top , int &right, int &bottom) const
+    void GetLayoutInset(int &left , int &top , int &right, int &bottom) const wxOVERRIDE
     {
         left = top = right = bottom = 0;
         NSControlSize size = [(wxNSProgressIndicator*)m_osxView controlSize];
diff --git a/src/osx/cocoa/listbox.mm b/src/osx/cocoa/listbox.mm
index 95d36c3..3d813af 100644
--- a/src/osx/cocoa/listbox.mm
+++ b/src/osx/cocoa/listbox.mm
@@ -106,44 +106,44 @@ public :
     ~wxListWidgetCocoaImpl();
 
     virtual wxListWidgetColumn*     InsertTextColumn( unsigned pos, const wxString& title, bool editable = false,
-                                wxAlignment just = wxALIGN_LEFT , int defaultWidth = -1)  ;
+                                wxAlignment just = wxALIGN_LEFT , int defaultWidth = -1) wxOVERRIDE  ;
     virtual wxListWidgetColumn*     InsertCheckColumn( unsigned pos , const wxString& title, bool editable = false,
-                                wxAlignment just = wxALIGN_LEFT , int defaultWidth =  -1)  ;
+                                wxAlignment just = wxALIGN_LEFT , int defaultWidth =  -1) wxOVERRIDE  ;
 
     // add and remove
 
-    virtual void            ListDelete( unsigned int n ) ;
-    virtual void            ListInsert( unsigned int n ) ;
-    virtual void            ListClear() ;
+    virtual void            ListDelete( unsigned int n ) wxOVERRIDE ;
+    virtual void            ListInsert( unsigned int n ) wxOVERRIDE ;
+    virtual void            ListClear() wxOVERRIDE ;
 
     // selecting
 
-    virtual void            ListDeselectAll();
+    virtual void            ListDeselectAll() wxOVERRIDE;
 
-    virtual void            ListSetSelection( unsigned int n, bool select, bool multi ) ;
-    virtual int             ListGetSelection() const ;
+    virtual void            ListSetSelection( unsigned int n, bool select, bool multi ) wxOVERRIDE ;
+    virtual int             ListGetSelection() const wxOVERRIDE ;
 
-    virtual int             ListGetSelections( wxArrayInt& aSelections ) const ;
+    virtual int             ListGetSelections( wxArrayInt& aSelections ) const wxOVERRIDE ;
 
-    virtual bool            ListIsSelected( unsigned int n ) const ;
+    virtual bool            ListIsSelected( unsigned int n ) const wxOVERRIDE ;
 
     // display
 
-    virtual void            ListScrollTo( unsigned int n ) ;
+    virtual void            ListScrollTo( unsigned int n ) wxOVERRIDE ;
 
     // accessing content
 
-    virtual unsigned int    ListGetCount() const ;
-    virtual int             DoListHitTest( const wxPoint& inpoint ) const;
+    virtual unsigned int    ListGetCount() const wxOVERRIDE ;
+    virtual int             DoListHitTest( const wxPoint& inpoint ) const wxOVERRIDE;
 
     int                     ListGetColumnType( int col )
     {
         return col;
     }
-    virtual void            UpdateLine( unsigned int n, wxListWidgetColumn* col = NULL ) ;
-    virtual void            UpdateLineToEnd( unsigned int n);
+    virtual void            UpdateLine( unsigned int n, wxListWidgetColumn* col = NULL ) wxOVERRIDE ;
+    virtual void            UpdateLineToEnd( unsigned int n) wxOVERRIDE;
 
-    virtual void            controlDoubleAction(WXWidget slf, void* _cmd, void *sender);
+    virtual void            controlDoubleAction(WXWidget slf, void* _cmd, void *sender) wxOVERRIDE;
 
     
 protected :
@@ -186,20 +186,20 @@ public :
 
     virtual ~wxNSTableViewCellValue() {}
 
-    virtual void Set( CFStringRef v )
+    virtual void Set( CFStringRef v ) wxOVERRIDE
     {
         value = [[(NSString*)v retain] autorelease];
     }
-    virtual void Set( const wxString& value )
+    virtual void Set( const wxString& value ) wxOVERRIDE
     {
         Set( (CFStringRef) wxCFStringRef( value ) );
     }
-    virtual void Set( int v )
+    virtual void Set( int v ) wxOVERRIDE
     {
         value = [NSNumber numberWithInt:v];
     }
 
-    virtual int GetIntValue() const
+    virtual int GetIntValue() const wxOVERRIDE
     {
         if ( [value isKindOfClass:[NSNumber class]] )
             return [ (NSNumber*) value intValue ];
@@ -207,7 +207,7 @@ public :
         return 0;
     }
 
-    virtual wxString GetStringValue() const
+    virtual wxString GetStringValue() const wxOVERRIDE
     {
         if ( [value isKindOfClass:[NSString class]] )
             return wxCFStringRef::AsString( (NSString*) value );
diff --git a/src/osx/cocoa/mediactrl.mm b/src/osx/cocoa/mediactrl.mm
index 7362409..413fe16 100644
--- a/src/osx/cocoa/mediactrl.mm
+++ b/src/osx/cocoa/mediactrl.mm
@@ -78,34 +78,34 @@ public:
                                      const wxSize& size,
                                      long style,
                                      const wxValidator& validator,
-                                     const wxString& name);
+                                     const wxString& name) wxOVERRIDE;
 
-    virtual bool Play();
-    virtual bool Pause();
-    virtual bool Stop();
+    virtual bool Play() wxOVERRIDE;
+    virtual bool Pause() wxOVERRIDE;
+    virtual bool Stop() wxOVERRIDE;
 
-    virtual bool Load(const wxString& fileName);
-    virtual bool Load(const wxURI& location);
+    virtual bool Load(const wxString& fileName) wxOVERRIDE;
+    virtual bool Load(const wxURI& location) wxOVERRIDE;
 
-    virtual wxMediaState GetState();
+    virtual wxMediaState GetState() wxOVERRIDE;
 
-    virtual bool SetPosition(wxLongLong where);
-    virtual wxLongLong GetPosition();
-    virtual wxLongLong GetDuration();
+    virtual bool SetPosition(wxLongLong where) wxOVERRIDE;
+    virtual wxLongLong GetPosition() wxOVERRIDE;
+    virtual wxLongLong GetDuration() wxOVERRIDE;
 
-    virtual void Move(int x, int y, int w, int h);
-    wxSize GetVideoSize() const;
+    virtual void Move(int x, int y, int w, int h) wxOVERRIDE;
+    wxSize GetVideoSize() const wxOVERRIDE;
 
-    virtual double GetPlaybackRate();
-    virtual bool SetPlaybackRate(double dRate);
+    virtual double GetPlaybackRate() wxOVERRIDE;
+    virtual bool SetPlaybackRate(double dRate) wxOVERRIDE;
 
-    virtual double GetVolume();
-    virtual bool SetVolume(double dVolume);
+    virtual double GetVolume() wxOVERRIDE;
+    virtual bool SetVolume(double dVolume) wxOVERRIDE;
     
     void Cleanup();
     void FinishLoad();
 
-    virtual bool   ShowPlayerControls(wxMediaCtrlPlayerControls flags);
+    virtual bool   ShowPlayerControls(wxMediaCtrlPlayerControls flags) wxOVERRIDE;
 private:
     void DoShowPlayerControls(wxMediaCtrlPlayerControls flags);
     
diff --git a/src/osx/cocoa/menu.mm b/src/osx/cocoa/menu.mm
index d5fdc23..fd03afd 100644
--- a/src/osx/cocoa/menu.mm
+++ b/src/osx/cocoa/menu.mm
@@ -165,7 +165,7 @@ public :
 
     virtual ~wxMenuCocoaImpl();
 
-    virtual void InsertOrAppend(wxMenuItem *pItem, size_t pos)
+    virtual void InsertOrAppend(wxMenuItem *pItem, size_t pos) wxOVERRIDE
     {
         NSMenuItem* nsmenuitem = (NSMenuItem*) pItem->GetPeer()->GetHMenuItem();
         // make sure a call of SetSubMenu is also reflected (occurring after Create)
@@ -188,12 +188,12 @@ public :
             [m_osxMenu insertItem:nsmenuitem atIndex:pos];
     }
 
-    virtual void Remove( wxMenuItem *pItem )
+    virtual void Remove( wxMenuItem *pItem ) wxOVERRIDE
     {
         [m_osxMenu removeItem:(NSMenuItem*) pItem->GetPeer()->GetHMenuItem()];
     }
 
-    virtual void MakeRoot()
+    virtual void MakeRoot() wxOVERRIDE
     {
         wxMenu* peer = GetWXPeer();
         
@@ -230,13 +230,13 @@ public :
     {
     }
 
-    virtual void SetTitle( const wxString& text )
+    virtual void SetTitle( const wxString& text ) wxOVERRIDE
     {
         wxCFStringRef cfText(text);
         [m_osxMenu setTitle:cfText.AsNSString()];
     }
 
-    virtual void PopUp( wxWindow *win, int x, int y )
+    virtual void PopUp( wxWindow *win, int x, int y ) wxOVERRIDE
     {
         win->ScreenToClient( &x , &y ) ;
         NSView *view = win->GetPeer()->GetWXWidget();
@@ -254,7 +254,7 @@ public :
         [popUpButtonCell release];
     }
 
-    WXHMENU GetHMenu() { return m_osxMenu; }
+    WXHMENU GetHMenu() wxOVERRIDE { return m_osxMenu; }
 
     static wxMenuImpl* Create( wxMenu* peer, const wxString& title );
     static wxMenuImpl* CreateRootMenu( wxMenu* peer );
diff --git a/src/osx/cocoa/menuitem.mm b/src/osx/cocoa/menuitem.mm
index 578fcef..a29cbce 100644
--- a/src/osx/cocoa/menuitem.mm
+++ b/src/osx/cocoa/menuitem.mm
@@ -244,22 +244,22 @@ public :
 
     ~wxMenuItemCocoaImpl();
 
-    void SetBitmap( const wxBitmap& bitmap )
+    void SetBitmap( const wxBitmap& bitmap ) wxOVERRIDE
     {
         [m_osxMenuItem setImage:bitmap.GetNSImage()];
     }
 
-    void Enable( bool enable )
+    void Enable( bool enable ) wxOVERRIDE
     {
         [m_osxMenuItem setEnabled:enable];
     }
 
-    void Check( bool check )
+    void Check( bool check ) wxOVERRIDE
     {
         [m_osxMenuItem setState:( check ?  NSOnState :  NSOffState) ];
     }
 
-    void Hide( bool hide )
+    void Hide( bool hide ) wxOVERRIDE
     {
         // NB: setHidden is new as of 10.5 so we should not call it below there
         if ([m_osxMenuItem respondsToSelector:@selector(setHidden:)])
@@ -268,7 +268,7 @@ public :
             wxLogDebug("wxMenuItemCocoaImpl::Hide not yet supported under OS X < 10.5");
     }
 
-    void SetLabel( const wxString& text, wxAcceleratorEntry *entry )
+    void SetLabel( const wxString& text, wxAcceleratorEntry *entry ) wxOVERRIDE
     {
         wxCFStringRef cfText(text);
         [m_osxMenuItem setTitle:cfText.AsNSString()];
@@ -276,9 +276,9 @@ public :
         wxMacCocoaMenuItemSetAccelerator( m_osxMenuItem, entry );
     }
     
-    bool DoDefault();
+    bool DoDefault() wxOVERRIDE;
 
-    void * GetHMenuItem() { return m_osxMenuItem; }
+    void * GetHMenuItem() wxOVERRIDE { return m_osxMenuItem; }
 
 protected :
     NSMenuItem* m_osxMenuItem ;
diff --git a/src/osx/cocoa/notebook.mm b/src/osx/cocoa/notebook.mm
index 2f8eceb..33b773b 100644
--- a/src/osx/cocoa/notebook.mm
+++ b/src/osx/cocoa/notebook.mm
@@ -178,7 +178,7 @@ public:
     {
     }
 
-    void GetContentArea( int &left , int &top , int &width , int &height ) const
+    void GetContentArea( int &left , int &top , int &width , int &height ) const wxOVERRIDE
     {
         wxNSTabView* slf = (wxNSTabView*) m_osxView;
         NSRect r = [slf contentRect];
@@ -188,7 +188,7 @@ public:
         height = (int)r.size.height;
     }
 
-    void SetValue( wxInt32 value )
+    void SetValue( wxInt32 value ) wxOVERRIDE
     {
         wxNSTabView* slf = (wxNSTabView*) m_osxView;
         // avoid 'changed' events when setting the tab programmatically
@@ -199,7 +199,7 @@ public:
         [slf setDelegate:controller];
     }
 
-    wxInt32 GetValue() const
+    wxInt32 GetValue() const wxOVERRIDE
     {
         wxNSTabView* slf = (wxNSTabView*) m_osxView;
         NSTabViewItem* selectedItem = [slf selectedTabViewItem];
@@ -209,7 +209,7 @@ public:
             return [slf indexOfTabViewItem:selectedItem]+1;
     }
 
-    void SetMaximum( wxInt32 maximum )
+    void SetMaximum( wxInt32 maximum ) wxOVERRIDE
     {
         wxNSTabView* slf = (wxNSTabView*) m_osxView;
         int cocoacount = [slf numberOfTabViewItems ];
@@ -237,7 +237,7 @@ public:
         [slf setDelegate:controller];
     }
 
-    void SetupTabs( const wxNotebook& notebook)
+    void SetupTabs( const wxNotebook& notebook) wxOVERRIDE
     {
         int pcount = notebook.GetPageCount();
 
@@ -261,7 +261,7 @@ public:
         }
     }
 
-    int TabHitTest(const wxPoint & pt, long* flags)
+    int TabHitTest(const wxPoint & pt, long* flags) wxOVERRIDE
     {
         int retval = wxNOT_FOUND;
         
diff --git a/src/osx/cocoa/preferences.mm b/src/osx/cocoa/preferences.mm
index 7b51732..2590bd2 100644
--- a/src/osx/cocoa/preferences.mm
+++ b/src/osx/cocoa/preferences.mm
@@ -91,7 +91,7 @@ public:
         tool->SetClientData(info.get());
     }
 
-    virtual bool Show(bool show)
+    virtual bool Show(bool show) wxOVERRIDE
     {
         if ( show && !m_toolbarRealized )
         {
@@ -107,12 +107,12 @@ public:
         return wxFrame::Show(show);
     }
 
-    virtual bool ShouldPreventAppExit() const { return false; }
+    virtual bool ShouldPreventAppExit() const wxOVERRIDE { return false; }
 
 protected:
     // Native preferences windows resize when the selected panel changes and
     // the resizing is animated, so we need to override DoMoveWindow.
-    virtual void DoMoveWindow(int x, int y, int width, int height)
+    virtual void DoMoveWindow(int x, int y, int width, int height) wxOVERRIDE
     {
         NSRect r = wxToNSRect(NULL, wxRect(x, y, width, height));
         NSWindow *win = (NSWindow*)GetWXWindow();
@@ -207,12 +207,12 @@ public:
             m_win->Destroy();
     }
 
-    virtual void AddPage(wxPreferencesPage* page)
+    virtual void AddPage(wxPreferencesPage* page) wxOVERRIDE
     {
         GetWin()->AddPage(page);
     }
 
-    virtual void Show(wxWindow* WXUNUSED(parent))
+    virtual void Show(wxWindow* WXUNUSED(parent)) wxOVERRIDE
     {
         // OS X preferences windows don't have parents, they are independent
         // windows, so we just ignore the 'parent' argument.
@@ -221,7 +221,7 @@ public:
         win->Raise();
     }
 
-    virtual void Dismiss()
+    virtual void Dismiss() wxOVERRIDE
     {
         // Don't destroy the window, only hide it, because OS X preferences
         // window typically remember their state even when closed. Reopening
diff --git a/src/osx/cocoa/scrolbar.mm b/src/osx/cocoa/scrolbar.mm
index a93ae41..7f80e3d 100644
--- a/src/osx/cocoa/scrolbar.mm
+++ b/src/osx/cocoa/scrolbar.mm
@@ -48,12 +48,12 @@ public :
         m_maximum = 1;
     }
 
-    void SetMaximum(wxInt32 v)
+    void SetMaximum(wxInt32 v) wxOVERRIDE
     {
         m_maximum = (v == 0) ? 1 : v;
     }
 
-    void    SetScrollThumb( wxInt32 value, wxInt32 thumbSize )
+    void    SetScrollThumb( wxInt32 value, wxInt32 thumbSize ) wxOVERRIDE
     {
         double v = ((double) value)/m_maximum;
         double t = ((double) thumbSize)/(m_maximum+thumbSize);
@@ -61,18 +61,18 @@ public :
         [(wxNSScroller*) m_osxView setKnobProportion:t];
     }
 
-    virtual wxInt32 GetValue() const
+    virtual wxInt32 GetValue() const wxOVERRIDE
     {
         return wxRound([(wxNSScroller*) m_osxView floatValue] * m_maximum);
     }
 
-    virtual wxInt32 GetMaximum() const
+    virtual wxInt32 GetMaximum() const wxOVERRIDE
     {
         return m_maximum;
     }
 
-    virtual void controlAction(WXWidget slf, void* _cmd, void *sender);
-    virtual void mouseEvent(WX_NSEvent event, WXWidget slf, void* _cmd);
+    virtual void controlAction(WXWidget slf, void* _cmd, void *sender) wxOVERRIDE;
+    virtual void mouseEvent(WX_NSEvent event, WXWidget slf, void* _cmd) wxOVERRIDE;
 protected:
     wxInt32 m_maximum;
 };
diff --git a/src/osx/cocoa/slider.mm b/src/osx/cocoa/slider.mm
index 2803fbc..607507b 100644
--- a/src/osx/cocoa/slider.mm
+++ b/src/osx/cocoa/slider.mm
@@ -46,8 +46,8 @@ public :
     {
     }
 
-    virtual void controlAction(WXWidget slf, void* _cmd, void *sender);
-    virtual void mouseEvent(WX_NSEvent event, WXWidget slf, void* _cmd);
+    virtual void controlAction(WXWidget slf, void* _cmd, void *sender) wxOVERRIDE;
+    virtual void mouseEvent(WX_NSEvent event, WXWidget slf, void* _cmd) wxOVERRIDE;
 };
 
 // we will have a mouseDown, then in the native
diff --git a/src/osx/cocoa/spinbutt.mm b/src/osx/cocoa/spinbutt.mm
index 67675ab..e3e197f 100644
--- a/src/osx/cocoa/spinbutt.mm
+++ b/src/osx/cocoa/spinbutt.mm
@@ -47,8 +47,8 @@ public :
     {
     }
 
-    virtual void controlAction(WXWidget slf, void* _cmd, void *sender);
-    virtual void mouseEvent(WX_NSEvent event, WXWidget slf, void* _cmd);
+    virtual void controlAction(WXWidget slf, void* _cmd, void *sender) wxOVERRIDE;
+    virtual void mouseEvent(WX_NSEvent event, WXWidget slf, void* _cmd) wxOVERRIDE;
 private:
     int m_formerValue;
 };
diff --git a/src/osx/cocoa/srchctrl.mm b/src/osx/cocoa/srchctrl.mm
index 880d590..27797dc 100644
--- a/src/osx/cocoa/srchctrl.mm
+++ b/src/osx/cocoa/srchctrl.mm
@@ -101,7 +101,7 @@ public :
     ~wxNSSearchFieldControl();
 
     // search field options
-    virtual void ShowSearchButton( bool show )
+    virtual void ShowSearchButton( bool show ) wxOVERRIDE
     {
         if ( show )
             [m_searchFieldCell resetSearchButtonCell];
@@ -110,12 +110,12 @@ public :
         [m_searchField setNeedsDisplay:YES];
     }
 
-    virtual bool IsSearchButtonVisible() const
+    virtual bool IsSearchButtonVisible() const wxOVERRIDE
     {
         return [m_searchFieldCell searchButtonCell] != nil;
     }
 
-    virtual void ShowCancelButton( bool show )
+    virtual void ShowCancelButton( bool show ) wxOVERRIDE
     {
         if ( show )
             [m_searchFieldCell resetCancelButtonCell];
@@ -124,12 +124,12 @@ public :
         [m_searchField setNeedsDisplay:YES];
     }
 
-    virtual bool IsCancelButtonVisible() const
+    virtual bool IsCancelButtonVisible() const wxOVERRIDE
     {
         return [m_searchFieldCell cancelButtonCell] != nil;
     }
 
-    virtual void SetSearchMenu( wxMenu* menu )
+    virtual void SetSearchMenu( wxMenu* menu ) wxOVERRIDE
     {
         if ( menu )
             [m_searchFieldCell setSearchMenuTemplate:menu->GetHMenu()];
@@ -138,18 +138,18 @@ public :
         [m_searchField setNeedsDisplay:YES];
     }
 
-    virtual void SetDescriptiveText(const wxString& text)
+    virtual void SetDescriptiveText(const wxString& text) wxOVERRIDE
     {
         [m_searchFieldCell setPlaceholderString:
             wxCFStringRef( text , m_wxPeer->GetFont().GetEncoding() ).AsNSString()];
     }
 
-    virtual bool SetFocus()
+    virtual bool SetFocus() wxOVERRIDE
     {
        return  wxNSTextFieldControl::SetFocus();
     }
 
-    void controlAction( WXWidget WXUNUSED(slf), void *WXUNUSED(_cmd), void *WXUNUSED(sender))
+    void controlAction( WXWidget WXUNUSED(slf), void *WXUNUSED(_cmd), void *WXUNUSED(sender)) wxOVERRIDE
     {
         wxSearchCtrl* wxpeer = (wxSearchCtrl*) GetWXPeer();
         if ( wxpeer )
diff --git a/src/osx/cocoa/statbox.mm b/src/osx/cocoa/statbox.mm
index 1a346a4..f299203 100644
--- a/src/osx/cocoa/statbox.mm
+++ b/src/osx/cocoa/statbox.mm
@@ -39,7 +39,7 @@ namespace
         {
         }
 
-        virtual void SetLabel( const wxString& title, wxFontEncoding encoding )
+        virtual void SetLabel( const wxString& title, wxFontEncoding encoding ) wxOVERRIDE
         {
             if (title.empty())
                 [GetNSBox() setTitlePosition:NSNoTitle];
diff --git a/src/osx/cocoa/stattext.mm b/src/osx/cocoa/stattext.mm
index 832b319..d9418a7 100644
--- a/src/osx/cocoa/stattext.mm
+++ b/src/osx/cocoa/stattext.mm
@@ -76,7 +76,7 @@ public:
         m_lineBreak = lineBreak;
     }
 
-    virtual void SetLabel(const wxString& title, wxFontEncoding encoding)
+    virtual void SetLabel(const wxString& title, wxFontEncoding encoding) wxOVERRIDE
     {
         wxCFStringRef text( title , encoding );
 
@@ -87,7 +87,7 @@ public:
     }
 
 #if wxUSE_MARKUP
-    virtual void SetLabelMarkup( const wxString& markup)
+    virtual void SetLabelMarkup( const wxString& markup) wxOVERRIDE
     {
         wxMarkupToAttrString toAttr(GetWXPeer(), markup);
 
diff --git a/src/osx/cocoa/taskbar.mm b/src/osx/cocoa/taskbar.mm
index 06342b4..46354d2 100644
--- a/src/osx/cocoa/taskbar.mm
+++ b/src/osx/cocoa/taskbar.mm
@@ -88,9 +88,9 @@ class wxTaskBarIconDockImpl: public wxTaskBarIconImpl
 public:
     wxTaskBarIconDockImpl(wxTaskBarIcon *taskBarIcon);
     virtual ~wxTaskBarIconDockImpl();
-    virtual bool SetIcon(const wxIcon& icon, const wxString& tooltip = wxEmptyString);
-    virtual bool RemoveIcon();
-    virtual bool PopupMenu(wxMenu *menu);
+    virtual bool SetIcon(const wxIcon& icon, const wxString& tooltip = wxEmptyString) wxOVERRIDE;
+    virtual bool RemoveIcon() wxOVERRIDE;
+    virtual bool PopupMenu(wxMenu *menu) wxOVERRIDE;
 
     static WX_NSMenu OSXGetDockHMenu();
 protected:
@@ -120,11 +120,11 @@ public:
     wxTaskBarIconCustomStatusItemImpl(wxTaskBarIcon *taskBarIcon);
     virtual ~wxTaskBarIconCustomStatusItemImpl();
     
-    virtual bool IsStatusItem() const { return true; }
+    virtual bool IsStatusItem() const wxOVERRIDE { return true; }
 
-    virtual bool SetIcon(const wxIcon& icon, const wxString& tooltip = wxEmptyString);
-    virtual bool RemoveIcon();
-    virtual bool PopupMenu(wxMenu *menu);
+    virtual bool SetIcon(const wxIcon& icon, const wxString& tooltip = wxEmptyString) wxOVERRIDE;
+    virtual bool RemoveIcon() wxOVERRIDE;
+    virtual bool PopupMenu(wxMenu *menu) wxOVERRIDE;
 protected:
     NSStatusItem *m_statusItem;
     wxOSXStatusItemTarget *m_target;
diff --git a/src/osx/cocoa/toolbar.mm b/src/osx/cocoa/toolbar.mm
index 701f3f4..22c69fe 100644
--- a/src/osx/cocoa/toolbar.mm
+++ b/src/osx/cocoa/toolbar.mm
@@ -165,7 +165,7 @@ public:
         return wxPoint( m_x, m_y );
     }
 
-    bool Enable( bool enable );
+    bool Enable( bool enable ) wxOVERRIDE;
 
     void UpdateImages();
 
@@ -236,13 +236,13 @@ public:
         return m_index;
     }
 
-    virtual void SetLabel(const wxString& label)
+    virtual void SetLabel(const wxString& label) wxOVERRIDE
     {
         wxToolBarToolBase::SetLabel(label);
         UpdateLabel();
     }
 
-    virtual bool SetShortHelp(const wxString& help)
+    virtual bool SetShortHelp(const wxString& help) wxOVERRIDE
     {
         if ( !wxToolBarToolBase::SetShortHelp(help) )
             return false;
diff --git a/src/osx/core/bitmap.cpp b/src/osx/core/bitmap.cpp
index 8ee6127..b6e8fe7 100644
--- a/src/osx/core/bitmap.cpp
+++ b/src/osx/core/bitmap.cpp
@@ -66,7 +66,7 @@ public:
 
     virtual ~wxBitmapRefData();
 
-    virtual bool IsOk() const { return m_ok; }
+    virtual bool IsOk() const wxOVERRIDE { return m_ok; }
 
     void Free();
     void SetOk( bool isOk) { m_ok = isOk; }
@@ -1828,7 +1828,7 @@ public:
                           const wxString& name,
                           wxBitmapType type,
                           int desiredWidth,
-                          int desiredHeight);
+                          int desiredHeight) wxOVERRIDE;
 };
 
 IMPLEMENT_ABSTRACT_CLASS(wxBundleResourceHandler, wxBitmapHandler);
diff --git a/src/osx/core/display.cpp b/src/osx/core/display.cpp
index 94efef4..11696b8 100644
--- a/src/osx/core/display.cpp
+++ b/src/osx/core/display.cpp
@@ -52,15 +52,15 @@ public:
     {
     }
 
-    virtual wxRect GetGeometry() const;
-    virtual wxRect GetClientArea() const;
-    virtual wxString GetName() const { return wxString(); }
+    virtual wxRect GetGeometry() const wxOVERRIDE;
+    virtual wxRect GetClientArea() const wxOVERRIDE;
+    virtual wxString GetName() const wxOVERRIDE { return wxString(); }
 
-    virtual wxArrayVideoModes GetModes(const wxVideoMode& mode) const;
-    virtual wxVideoMode GetCurrentMode() const;
-    virtual bool ChangeMode(const wxVideoMode& mode);
+    virtual wxArrayVideoModes GetModes(const wxVideoMode& mode) const wxOVERRIDE;
+    virtual wxVideoMode GetCurrentMode() const wxOVERRIDE;
+    virtual bool ChangeMode(const wxVideoMode& mode) wxOVERRIDE;
 
-    virtual bool IsPrimary() const;
+    virtual bool IsPrimary() const wxOVERRIDE;
 
 private:
     CGDirectDisplayID m_id;
@@ -73,9 +73,9 @@ class wxDisplayFactoryMacOSX : public wxDisplayFactory
 public:
     wxDisplayFactoryMacOSX() {}
 
-    virtual wxDisplayImpl *CreateDisplay(unsigned n);
-    virtual unsigned GetCount();
-    virtual int GetFromPoint(const wxPoint& pt);
+    virtual wxDisplayImpl *CreateDisplay(unsigned n) wxOVERRIDE;
+    virtual unsigned GetCount() wxOVERRIDE;
+    virtual int GetFromPoint(const wxPoint& pt) wxOVERRIDE;
 
 protected:
     wxDECLARE_NO_COPY_CLASS(wxDisplayFactoryMacOSX);
diff --git a/src/osx/core/hid.cpp b/src/osx/core/hid.cpp
index 92c874a..621f35c 100644
--- a/src/osx/core/hid.cpp
+++ b/src/osx/core/hid.cpp
@@ -645,11 +645,11 @@ class wxHIDModule : public wxModule
 
     public:
         static wxArrayPtrVoid sm_keyboards;
-        virtual bool OnInit()
+        virtual bool OnInit() wxOVERRIDE
         {
             return true;
         }
-        virtual void OnExit()
+        virtual void OnExit() wxOVERRIDE
         {
             for(size_t i = 0; i < sm_keyboards.GetCount(); ++i)
                 delete (wxHIDKeyboard*) sm_keyboards[i];
diff --git a/src/osx/core/hidjoystick.cpp b/src/osx/core/hidjoystick.cpp
index e6f3a87..3349ec8 100644
--- a/src/osx/core/hidjoystick.cpp
+++ b/src/osx/core/hidjoystick.cpp
@@ -77,7 +77,7 @@ public:
     virtual ~wxHIDJoystick();
 
     bool Create(int nWhich);
-    virtual void BuildCookies(CFArrayRef Array);
+    virtual void BuildCookies(CFArrayRef Array) wxOVERRIDE;
     void MakeCookies(CFArrayRef Array);
     IOHIDElementCookie* GetCookies();
     IOHIDQueueInterface** GetQueue();
@@ -95,7 +95,7 @@ class wxJoystickThread : public wxThread
 {
 public:
     wxJoystickThread(wxHIDJoystick* hid, int joystick);
-    void* Entry();
+    void* Entry() wxOVERRIDE;
     static void HIDCallback(void* target, IOReturn res, void* context, void* sender);
 
 private:
diff --git a/src/osx/core/sockosx.cpp b/src/osx/core/sockosx.cpp
index 9a54005..899dce6 100644
--- a/src/osx/core/sockosx.cpp
+++ b/src/osx/core/sockosx.cpp
@@ -61,7 +61,7 @@ public:
     }
 
 private:
-    virtual void DoClose()
+    virtual void DoClose() wxOVERRIDE
     {
         wxSocketManager * const manager = wxSocketManager::Get();
         if ( manager )
@@ -183,16 +183,16 @@ private:
 class wxSocketManagerMac : public wxSocketManager
 {
 public:
-    virtual bool OnInit();
-    virtual void OnExit();
+    virtual bool OnInit() wxOVERRIDE;
+    virtual void OnExit() wxOVERRIDE;
 
-    virtual wxSocketImpl *CreateSocket(wxSocketBase& wxsocket)
+    virtual wxSocketImpl *CreateSocket(wxSocketBase& wxsocket) wxOVERRIDE
     {
         return new wxSocketImplMac(wxsocket);
     }
 
-    virtual void Install_Callback(wxSocketImpl *socket, wxSocketNotify event);
-    virtual void Uninstall_Callback(wxSocketImpl *socket, wxSocketNotify event);
+    virtual void Install_Callback(wxSocketImpl *socket, wxSocketNotify event) wxOVERRIDE;
+    virtual void Uninstall_Callback(wxSocketImpl *socket, wxSocketNotify event) wxOVERRIDE;
 
 private:
     // return CFSocket callback mask corresponding to the given event (the
diff --git a/src/osx/core/sound.cpp b/src/osx/core/sound.cpp
index cc6185a..c467cb9 100644
--- a/src/osx/core/sound.cpp
+++ b/src/osx/core/sound.cpp
@@ -38,9 +38,9 @@ public:
 
     ~wxOSXAudioToolboxSoundData();
 
-    virtual bool Play(unsigned flags);
+    virtual bool Play(unsigned flags) wxOVERRIDE;
 
-    virtual void DoStop();
+    virtual void DoStop() wxOVERRIDE;
 protected:
     static void CompletionCallback(SystemSoundID  mySSID, void * soundRef);
     void SoundCompleted();
diff --git a/src/osx/core/utilsexc_cf.cpp b/src/osx/core/utilsexc_cf.cpp
index 2a8c436..38297a0 100644
--- a/src/osx/core/utilsexc_cf.cpp
+++ b/src/osx/core/utilsexc_cf.cpp
@@ -72,7 +72,7 @@ class wxCFEventLoopSourcesManager : public wxEventLoopSourcesManagerBase
 {
 public:
     wxEventLoopSource *
-    AddSourceForFD(int fd, wxEventLoopSourceHandler *handler, int flags)
+    AddSourceForFD(int fd, wxEventLoopSourceHandler *handler, int flags) wxOVERRIDE
     {
         wxCHECK_MSG( fd != -1, NULL, "can't monitor invalid fd" );
 
diff --git a/src/osx/dataview_osx.cpp b/src/osx/dataview_osx.cpp
index 3f88932..f11bc3d 100644
--- a/src/osx/dataview_osx.cpp
+++ b/src/osx/dataview_osx.cpp
@@ -62,15 +62,15 @@ public:
  //
  // inherited methods from wxDataViewModelNotifier
  //
-  virtual bool ItemAdded   (wxDataViewItem const &parent, wxDataViewItem const &item);
-  virtual bool ItemsAdded  (wxDataViewItem const& parent, wxDataViewItemArray const& items);
-  virtual bool ItemChanged (wxDataViewItem const& item);
-  virtual bool ItemsChanged(wxDataViewItemArray const& items);
-  virtual bool ItemDeleted (wxDataViewItem const& parent, wxDataViewItem const& item);
-  virtual bool ItemsDeleted(wxDataViewItem const& parent, wxDataViewItemArray const& items);
-  virtual bool ValueChanged(wxDataViewItem const& item, unsigned int col);
-  virtual bool Cleared();
-  virtual void Resort();
+  virtual bool ItemAdded   (wxDataViewItem const &parent, wxDataViewItem const &item) wxOVERRIDE;
+  virtual bool ItemsAdded  (wxDataViewItem const& parent, wxDataViewItemArray const& items) wxOVERRIDE;
+  virtual bool ItemChanged (wxDataViewItem const& item) wxOVERRIDE;
+  virtual bool ItemsChanged(wxDataViewItemArray const& items) wxOVERRIDE;
+  virtual bool ItemDeleted (wxDataViewItem const& parent, wxDataViewItem const& item) wxOVERRIDE;
+  virtual bool ItemsDeleted(wxDataViewItem const& parent, wxDataViewItemArray const& items) wxOVERRIDE;
+  virtual bool ValueChanged(wxDataViewItem const& item, unsigned int col) wxOVERRIDE;
+  virtual bool Cleared() wxOVERRIDE;
+  virtual void Resort() wxOVERRIDE;
 
 protected:
  // if the dataview control can have a variable row height this method sets the dataview's control row height of
diff --git a/src/osx/palette.cpp b/src/osx/palette.cpp
index ecd9b2d..5e61ebd 100644
--- a/src/osx/palette.cpp
+++ b/src/osx/palette.cpp
@@ -28,7 +28,7 @@ public:
     wxPaletteRefData(const wxPaletteRefData& data);
     virtual ~wxPaletteRefData();
 
-    virtual bool IsOk() const { return m_count > 0; }
+    virtual bool IsOk() const wxOVERRIDE { return m_count > 0; }
 
 protected:
     wxColour* m_palette;
diff --git a/src/osx/sound_osx.cpp b/src/osx/sound_osx.cpp
index 8543b2c..3a125ed 100644
--- a/src/osx/sound_osx.cpp
+++ b/src/osx/sound_osx.cpp
@@ -42,7 +42,7 @@ public:
             m_sound->DoStop();
     }
 
-    void Notify()
+    void Notify() wxOVERRIDE
     {
         if (m_sound)
             m_sound->SoundTask();
diff --git a/src/osx/window_osx.cpp b/src/osx/window_osx.cpp
index 0f8f921..e96cc34 100644
--- a/src/osx/window_osx.cpp
+++ b/src/osx/window_osx.cpp
@@ -156,7 +156,7 @@ public:
 
     virtual ~wxBlindPlateWindow();
 
-    virtual bool AcceptsFocus() const
+    virtual bool AcceptsFocus() const wxOVERRIDE
     {
         return false;
     }
diff --git a/src/propgrid/advprops.cpp b/src/propgrid/advprops.cpp
index 53dc957..9d44156 100644
--- a/src/propgrid/advprops.cpp
+++ b/src/propgrid/advprops.cpp
@@ -436,16 +436,16 @@ class wxPGDatePickerCtrlEditor : public wxPGEditor
 public:
     virtual ~wxPGDatePickerCtrlEditor();
 
-    wxString GetName() const;
+    wxString GetName() const wxOVERRIDE;
     virtual wxPGWindowList CreateControls(wxPropertyGrid* propgrid,
                                           wxPGProperty* property,
                                           const wxPoint& pos,
-                                          const wxSize& size) const;
-    virtual void UpdateControl( wxPGProperty* property, wxWindow* wnd ) const;
+                                          const wxSize& size) const wxOVERRIDE;
+    virtual void UpdateControl( wxPGProperty* property, wxWindow* wnd ) const wxOVERRIDE;
     virtual bool OnEvent( wxPropertyGrid* propgrid, wxPGProperty* property,
-        wxWindow* wnd, wxEvent& event ) const;
-    virtual bool GetValueFromControl( wxVariant& variant, wxPGProperty* property, wxWindow* wnd ) const;
-    virtual void SetValueToUnspecified( wxPGProperty* WXUNUSED(property), wxWindow* wnd ) const;
+        wxWindow* wnd, wxEvent& event ) const wxOVERRIDE;
+    virtual bool GetValueFromControl( wxVariant& variant, wxPGProperty* property, wxWindow* wnd ) const wxOVERRIDE;
+    virtual void SetValueToUnspecified( wxPGProperty* WXUNUSED(property), wxWindow* wnd ) const wxOVERRIDE;
 };
 
 
diff --git a/src/propgrid/editors.cpp b/src/propgrid/editors.cpp
index 33c9a79..61d858b 100644
--- a/src/propgrid/editors.cpp
+++ b/src/propgrid/editors.cpp
@@ -661,7 +661,7 @@ public:
     virtual void OnDrawItem( wxDC& dc,
                              const wxRect& rect,
                              int item,
-                             int flags ) const
+                             int flags ) const wxOVERRIDE
     {
         wxPropertyGrid* pg = GetGrid();
 
@@ -677,7 +677,7 @@ public:
         }
     }
 
-    virtual wxCoord OnMeasureItem( size_t item ) const
+    virtual wxCoord OnMeasureItem( size_t item ) const wxOVERRIDE
     {
         wxPropertyGrid* pg = GetGrid();
         wxRect rect;
@@ -695,7 +695,7 @@ public:
         return pg;
     }
 
-    virtual wxCoord OnMeasureItemWidth( size_t item ) const
+    virtual wxCoord OnMeasureItemWidth( size_t item ) const wxOVERRIDE
     {
         wxPropertyGrid* pg = GetGrid();
         wxRect rect;
@@ -706,7 +706,7 @@ public:
     }
 
     virtual void PositionTextCtrl( int textCtrlXAdjust,
-                                   int WXUNUSED(textCtrlYAdjust) )
+                                   int WXUNUSED(textCtrlYAdjust) ) wxOVERRIDE
     {
         wxPropertyGrid* pg = GetGrid();
     #ifdef wxPG_TEXTCTRLXADJUST
diff --git a/src/propgrid/manager.cpp b/src/propgrid/manager.cpp
index 0a9fcd1..9e971ed 100644
--- a/src/propgrid/manager.cpp
+++ b/src/propgrid/manager.cpp
@@ -305,7 +305,7 @@ public:
         }
     }
 
-    virtual const wxHeaderColumn& GetColumn(unsigned int idx) const
+    virtual const wxHeaderColumn& GetColumn(unsigned int idx) const wxOVERRIDE
     {
         return *m_columns[idx];
     }
@@ -343,7 +343,7 @@ private:
                                   wxPG_SPLITTER_FROM_EVENT);
     }
 
-    virtual bool ProcessEvent( wxEvent& event )
+    virtual bool ProcessEvent( wxEvent& event ) wxOVERRIDE
     {
         if ( event.IsKindOf(wxCLASSINFO(wxHeaderCtrlEvent)) )
         {
@@ -2086,7 +2086,7 @@ public:
         m_it.Init(manager->GetPage(0), flags);
     }
     virtual ~wxPGVIteratorBase_Manager() { }
-    virtual void Next()
+    virtual void Next() wxOVERRIDE
     {
         m_it.Next();
 
diff --git a/src/propgrid/propgrid.cpp b/src/propgrid/propgrid.cpp
index 0bb7c51..aa59c8c 100644
--- a/src/propgrid/propgrid.cpp
+++ b/src/propgrid/propgrid.cpp
@@ -146,8 +146,8 @@ class wxPGGlobalVarsClassManager : public wxModule
     DECLARE_DYNAMIC_CLASS(wxPGGlobalVarsClassManager)
 public:
     wxPGGlobalVarsClassManager() {}
-    virtual bool OnInit() { wxPGGlobalVars = new wxPGGlobalVarsClass(); return true; }
-    virtual void OnExit() { wxDELETE(wxPGGlobalVars); }
+    virtual bool OnInit() wxOVERRIDE { wxPGGlobalVars = new wxPGGlobalVarsClass(); return true; }
+    virtual void OnExit() wxOVERRIDE { wxDELETE(wxPGGlobalVars); }
 };
 
 IMPLEMENT_DYNAMIC_CLASS(wxPGGlobalVarsClassManager, wxModule)
@@ -3856,7 +3856,7 @@ public:
     }
 
 private:
-    bool ProcessEvent( wxEvent& event )
+    bool ProcessEvent( wxEvent& event ) wxOVERRIDE
     {
         // Always skip
         event.Skip();
diff --git a/src/propgrid/propgridiface.cpp b/src/propgrid/propgridiface.cpp
index 4608fb9..5605f7a 100644
--- a/src/propgrid/propgridiface.cpp
+++ b/src/propgrid/propgridiface.cpp
@@ -805,7 +805,7 @@ public:
         m_it.Init( state, flags );
     }
     virtual ~wxPGVIteratorBase_State() { }
-    virtual void Next() { m_it.Next(); }
+    virtual void Next() wxOVERRIDE { m_it.Next(); }
 };
 
 wxPGVIterator wxPropertyGridInterface::GetVIterator( int flags ) const
diff --git a/src/ribbon/page.cpp b/src/ribbon/page.cpp
index 1fd6621..9ae2fba 100644
--- a/src/ribbon/page.cpp
+++ b/src/ribbon/page.cpp
@@ -49,7 +49,7 @@ public:
     virtual ~wxRibbonPageScrollButton();
 
 protected:
-    virtual wxBorder GetDefaultBorder() const { return wxBORDER_NONE; }
+    virtual wxBorder GetDefaultBorder() const wxOVERRIDE { return wxBORDER_NONE; }
 
     void OnEraseBackground(wxEraseEvent& evt);
     void OnPaint(wxPaintEvent& evt);
diff --git a/src/richtext/richtextbuffer.cpp b/src/richtext/richtextbuffer.cpp
index ffd9d9c..f638289 100644
--- a/src/richtext/richtextbuffer.cpp
+++ b/src/richtext/richtextbuffer.cpp
@@ -11386,7 +11386,7 @@ class wxRichTextModule: public wxModule
 DECLARE_DYNAMIC_CLASS(wxRichTextModule)
 public:
     wxRichTextModule() {}
-    bool OnInit()
+    bool OnInit() wxOVERRIDE
     {
         wxRichTextBuffer::SetRenderer(new wxRichTextStdRenderer);
         wxRichTextBuffer::InitStandardHandlers();
@@ -11404,7 +11404,7 @@ public:
 
         return true;
     }
-    void OnExit()
+    void OnExit() wxOVERRIDE
     {
         wxRichTextBuffer::CleanUpHandlers();
         wxRichTextBuffer::CleanUpDrawingHandlers();
diff --git a/src/richtext/richtextctrl.cpp b/src/richtext/richtextctrl.cpp
index 3057450..95420c6 100644
--- a/src/richtext/richtextctrl.cpp
+++ b/src/richtext/richtextctrl.cpp
@@ -88,7 +88,7 @@ class wxRichTextCaretTimer: public wxTimer
     {
         m_caret = caret;
     }
-    virtual void Notify();
+    virtual void Notify() wxOVERRIDE;
     wxRichTextCaret* m_caret;
 };
 
@@ -111,8 +111,8 @@ public:
     // --------------
 
     // called by wxWindow (not using the event tables)
-    virtual void OnSetFocus();
-    virtual void OnKillFocus();
+    virtual void OnSetFocus() wxOVERRIDE;
+    virtual void OnKillFocus() wxOVERRIDE;
 
     // draw the caret on the given DC
     void DoDraw(wxDC *dc);
@@ -130,10 +130,10 @@ public:
     void EnableRefresh(bool b) { m_refreshEnabled = b; }
 
 protected:
-    virtual void DoShow();
-    virtual void DoHide();
-    virtual void DoMove();
-    virtual void DoSize();
+    virtual void DoShow() wxOVERRIDE;
+    virtual void DoHide() wxOVERRIDE;
+    virtual void DoMove() wxOVERRIDE;
+    virtual void DoSize() wxOVERRIDE;
 
     // refresh the caret
     void Refresh();
diff --git a/src/richtext/richtextformatdlg.cpp b/src/richtext/richtextformatdlg.cpp
index 4e2b256..291fbfa 100644
--- a/src/richtext/richtextformatdlg.cpp
+++ b/src/richtext/richtextformatdlg.cpp
@@ -500,8 +500,8 @@ class wxRichTextFormattingDialogModule: public wxModule
 DECLARE_DYNAMIC_CLASS(wxRichTextFormattingDialogModule)
 public:
     wxRichTextFormattingDialogModule() {}
-    bool OnInit() { wxRichTextFormattingDialog::SetFormattingDialogFactory(new wxRichTextFormattingDialogFactory); return true; }
-    void OnExit() { wxRichTextFormattingDialog::SetFormattingDialogFactory(NULL); }
+    bool OnInit() wxOVERRIDE { wxRichTextFormattingDialog::SetFormattingDialogFactory(new wxRichTextFormattingDialogFactory); return true; }
+    void OnExit() wxOVERRIDE { wxRichTextFormattingDialog::SetFormattingDialogFactory(NULL); }
 };
 
 IMPLEMENT_DYNAMIC_CLASS(wxRichTextFormattingDialogModule, wxModule)
diff --git a/src/stc/PlatWX.cpp b/src/stc/PlatWX.cpp
index 393c384..7c0f513 100644
--- a/src/stc/PlatWX.cpp
+++ b/src/stc/PlatWX.cpp
@@ -136,47 +136,47 @@ public:
     SurfaceImpl();
     ~SurfaceImpl();
 
-    virtual void Init(WindowID wid);
-    virtual void Init(SurfaceID sid, WindowID wid);
-    virtual void InitPixMap(int width, int height, Surface *surface_, WindowID wid);
-
-    virtual void Release();
-    virtual bool Initialised();
-    virtual void PenColour(ColourDesired fore);
-    virtual int LogPixelsY();
-    virtual int DeviceHeightFont(int points);
-    virtual void MoveTo(int x_, int y_);
-    virtual void LineTo(int x_, int y_);
-    virtual void Polygon(Point *pts, int npts, ColourDesired fore, ColourDesired back);
-    virtual void RectangleDraw(PRectangle rc, ColourDesired fore, ColourDesired back);
-    virtual void FillRectangle(PRectangle rc, ColourDesired back);
-    virtual void FillRectangle(PRectangle rc, Surface &surfacePattern);
-    virtual void RoundedRectangle(PRectangle rc, ColourDesired fore, ColourDesired back);
+    virtual void Init(WindowID wid) wxOVERRIDE;
+    virtual void Init(SurfaceID sid, WindowID wid) wxOVERRIDE;
+    virtual void InitPixMap(int width, int height, Surface *surface_, WindowID wid) wxOVERRIDE;
+
+    virtual void Release() wxOVERRIDE;
+    virtual bool Initialised() wxOVERRIDE;
+    virtual void PenColour(ColourDesired fore) wxOVERRIDE;
+    virtual int LogPixelsY() wxOVERRIDE;
+    virtual int DeviceHeightFont(int points) wxOVERRIDE;
+    virtual void MoveTo(int x_, int y_) wxOVERRIDE;
+    virtual void LineTo(int x_, int y_) wxOVERRIDE;
+    virtual void Polygon(Point *pts, int npts, ColourDesired fore, ColourDesired back) wxOVERRIDE;
+    virtual void RectangleDraw(PRectangle rc, ColourDesired fore, ColourDesired back) wxOVERRIDE;
+    virtual void FillRectangle(PRectangle rc, ColourDesired back) wxOVERRIDE;
+    virtual void FillRectangle(PRectangle rc, Surface &surfacePattern) wxOVERRIDE;
+    virtual void RoundedRectangle(PRectangle rc, ColourDesired fore, ColourDesired back) wxOVERRIDE;
     virtual void AlphaRectangle(PRectangle rc, int cornerSize, ColourDesired fill, int alphaFill,
-                                ColourDesired outline, int alphaOutline, int flags);
+                                ColourDesired outline, int alphaOutline, int flags) wxOVERRIDE;
     virtual void DrawRGBAImage(PRectangle rc, int width, int height,
-                               const unsigned char *pixelsImage);
-    virtual void Ellipse(PRectangle rc, ColourDesired fore, ColourDesired back);
-    virtual void Copy(PRectangle rc, Point from, Surface &surfaceSource);
-
-    virtual void DrawTextNoClip(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back);
-    virtual void DrawTextClipped(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back);
-    virtual void DrawTextTransparent(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore);
-    virtual void MeasureWidths(Font &font_, const char *s, int len, XYPOSITION *positions);
-    virtual XYPOSITION WidthText(Font &font_, const char *s, int len);
-    virtual XYPOSITION WidthChar(Font &font_, char ch);
-    virtual XYPOSITION Ascent(Font &font_);
-    virtual XYPOSITION Descent(Font &font_);
-    virtual XYPOSITION InternalLeading(Font &font_);
-    virtual XYPOSITION ExternalLeading(Font &font_);
-    virtual XYPOSITION Height(Font &font_);
-    virtual XYPOSITION AverageCharWidth(Font &font_);
-
-    virtual void SetClip(PRectangle rc);
-    virtual void FlushCachedState();
-
-    virtual void SetUnicodeMode(bool unicodeMode_);
-    virtual void SetDBCSMode(int codePage);
+                               const unsigned char *pixelsImage) wxOVERRIDE;
+    virtual void Ellipse(PRectangle rc, ColourDesired fore, ColourDesired back) wxOVERRIDE;
+    virtual void Copy(PRectangle rc, Point from, Surface &surfaceSource) wxOVERRIDE;
+
+    virtual void DrawTextNoClip(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back) wxOVERRIDE;
+    virtual void DrawTextClipped(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore, ColourDesired back) wxOVERRIDE;
+    virtual void DrawTextTransparent(PRectangle rc, Font &font_, XYPOSITION ybase, const char *s, int len, ColourDesired fore) wxOVERRIDE;
+    virtual void MeasureWidths(Font &font_, const char *s, int len, XYPOSITION *positions) wxOVERRIDE;
+    virtual XYPOSITION WidthText(Font &font_, const char *s, int len) wxOVERRIDE;
+    virtual XYPOSITION WidthChar(Font &font_, char ch) wxOVERRIDE;
+    virtual XYPOSITION Ascent(Font &font_) wxOVERRIDE;
+    virtual XYPOSITION Descent(Font &font_) wxOVERRIDE;
+    virtual XYPOSITION InternalLeading(Font &font_) wxOVERRIDE;
+    virtual XYPOSITION ExternalLeading(Font &font_) wxOVERRIDE;
+    virtual XYPOSITION Height(Font &font_) wxOVERRIDE;
+    virtual XYPOSITION AverageCharWidth(Font &font_) wxOVERRIDE;
+
+    virtual void SetClip(PRectangle rc) wxOVERRIDE;
+    virtual void FlushCachedState() wxOVERRIDE;
+
+    virtual void SetUnicodeMode(bool unicodeMode_) wxOVERRIDE;
+    virtual void SetDBCSMode(int codePage) wxOVERRIDE;
 
     void BrushColour(ColourDesired back);
     void SetFont(Font &font_);
@@ -848,7 +848,7 @@ public:
     // Set position in client coords
     virtual void DoSetSize(int x, int y,
                            int width, int height,
-                           int sizeFlags = wxSIZE_AUTO) {
+                           int sizeFlags = wxSIZE_AUTO) wxOVERRIDE {
         if (x != wxDefaultCoord) {
             GetParent()->ClientToScreen(&x, NULL);
         }
@@ -859,7 +859,7 @@ public:
     }
 
     // return position as if it were in client coords
-    virtual void DoGetPosition( int *x, int *y ) const {
+    virtual void DoGetPosition( int *x, int *y ) const wxOVERRIDE {
         int sx, sy;
         wxPopupWindow::DoGetPosition(&sx, &sy);
         GetParent()->ScreenToClient(&sx, &sy);
@@ -868,7 +868,7 @@ public:
     }
 
 
-    bool Destroy() {
+    bool Destroy() wxOVERRIDE {
         if ( !wxPendingDelete.Member(this) )
             wxPendingDelete.Append(this);
         return true;
@@ -1116,27 +1116,27 @@ public:
     ~ListBoxImpl();
     static ListBox *Allocate();
 
-    virtual void SetFont(Font &font);
-    virtual void Create(Window &parent, int ctrlID, Point location_, int lineHeight_, bool unicodeMode_, int technology_);
-    virtual void SetAverageCharWidth(int width);
-    virtual void SetVisibleRows(int rows);
-    virtual int GetVisibleRows() const;
-    virtual PRectangle GetDesiredRect();
-    virtual int CaretFromEdge();
-    virtual void Clear();
-    virtual void Append(char *s, int type = -1);
+    virtual void SetFont(Font &font) wxOVERRIDE;
+    virtual void Create(Window &parent, int ctrlID, Point location_, int lineHeight_, bool unicodeMode_, int technology_) wxOVERRIDE;
+    virtual void SetAverageCharWidth(int width) wxOVERRIDE;
+    virtual void SetVisibleRows(int rows) wxOVERRIDE;
+    virtual int GetVisibleRows() const wxOVERRIDE;
+    virtual PRectangle GetDesiredRect() wxOVERRIDE;
+    virtual int CaretFromEdge() wxOVERRIDE;
+    virtual void Clear() wxOVERRIDE;
+    virtual void Append(char *s, int type = -1) wxOVERRIDE;
             void Append(const wxString& text, int type);
-    virtual int Length();
-    virtual void Select(int n);
-    virtual int GetSelection();
-    virtual int Find(const char *prefix);
-    virtual void GetValue(int n, char *value, int len);
-    virtual void RegisterImage(int type, const char *xpm_data);
+    virtual int Length() wxOVERRIDE;
+    virtual void Select(int n) wxOVERRIDE;
+    virtual int GetSelection() wxOVERRIDE;
+    virtual int Find(const char *prefix) wxOVERRIDE;
+    virtual void GetValue(int n, char *value, int len) wxOVERRIDE;
+    virtual void RegisterImage(int type, const char *xpm_data) wxOVERRIDE;
             void RegisterImageHelper(int type, wxBitmap& bmp);
-    virtual void RegisterRGBAImage(int type, int width, int height, const unsigned char *pixelsImage);
-    virtual void ClearRegisteredImages();
-    virtual void SetDoubleClickAction(CallBackAction, void *);
-    virtual void SetList(const char* list, char separator, char typesep);
+    virtual void RegisterRGBAImage(int type, int width, int height, const unsigned char *pixelsImage) wxOVERRIDE;
+    virtual void ClearRegisteredImages() wxOVERRIDE;
+    virtual void SetDoubleClickAction(CallBackAction, void *) wxOVERRIDE;
+    virtual void SetList(const char* list, char separator, char typesep) wxOVERRIDE;
 };
 
 
diff --git a/src/stc/ScintillaWX.cpp b/src/stc/ScintillaWX.cpp
index eb0d2cd..0a6614d 100644
--- a/src/stc/ScintillaWX.cpp
+++ b/src/stc/ScintillaWX.cpp
@@ -59,7 +59,7 @@ public:
         m_swx = swx;
     }
 
-    void Notify() {
+    void Notify() wxOVERRIDE {
         m_swx->DoTick();
     }
 
@@ -126,7 +126,7 @@ public:
 #endif
     }
 
-    bool AcceptsFocus() const { return false; }
+    bool AcceptsFocus() const wxOVERRIDE { return false; }
 
     void OnPaint(wxPaintEvent& WXUNUSED(evt))
     {
@@ -154,7 +154,7 @@ public:
 
     virtual void DoSetSize(int x, int y,
                            int width, int height,
-                           int sizeFlags = wxSIZE_AUTO)
+                           int sizeFlags = wxSIZE_AUTO) wxOVERRIDE
     {
         // convert coords to screen coords since we're a top-level window
         if (x != wxDefaultCoord) {
diff --git a/src/unix/appunix.cpp b/src/unix/appunix.cpp
index 62f0c79..df1d72e 100644
--- a/src/unix/appunix.cpp
+++ b/src/unix/appunix.cpp
@@ -53,7 +53,7 @@ public:
                                     );
     }
 
-    virtual void OnReadWaiting()
+    virtual void OnReadWaiting() wxOVERRIDE
     {
         // The base class wxWakeUpPipe::OnReadWaiting() needs to be called in order
         // to read the data out of the wake up pipe and clear it for next time.
diff --git a/src/unix/evtloopunix.cpp b/src/unix/evtloopunix.cpp
index bea039e..aa991ae 100644
--- a/src/unix/evtloopunix.cpp
+++ b/src/unix/evtloopunix.cpp
@@ -109,7 +109,7 @@ class wxConsoleEventLoopSourcesManager : public wxEventLoopSourcesManagerBase
 public:
     wxEventLoopSource* AddSourceForFD( int fd,
                                        wxEventLoopSourceHandler *handler,
-                                       int flags)
+                                       int flags) wxOVERRIDE
     {
         wxCHECK_MSG( fd != -1, NULL, "can't monitor invalid fd" );
 
diff --git a/src/unix/fswatcher_kqueue.cpp b/src/unix/fswatcher_kqueue.cpp
index 2bc1634..5ac0796 100644
--- a/src/unix/fswatcher_kqueue.cpp
+++ b/src/unix/fswatcher_kqueue.cpp
@@ -45,9 +45,9 @@ public:
         m_service(service)
     {  }
 
-    virtual void OnReadWaiting();
-    virtual void OnWriteWaiting();
-    virtual void OnExceptionWaiting();
+    virtual void OnReadWaiting() wxOVERRIDE;
+    virtual void OnWriteWaiting() wxOVERRIDE;
+    virtual void OnExceptionWaiting() wxOVERRIDE;
 
 protected:
     wxFSWatcherImplKqueue* m_service;
@@ -82,7 +82,7 @@ public:
         delete m_handler;
     }
 
-    bool Init()
+    bool Init() wxOVERRIDE
     {
         wxCHECK_MSG( !IsOk(), false,
                      "Kqueue appears to be already initialized" );
@@ -117,7 +117,7 @@ public:
         wxDELETE(m_source);
     }
 
-    virtual bool DoAdd(wxSharedPtr<wxFSWatchEntryKq> watch)
+    virtual bool DoAdd(wxSharedPtr<wxFSWatchEntryKq> watch) wxOVERRIDE
     {
         wxCHECK_MSG( IsOk(), false,
                     "Kqueue not initialized or invalid kqueue descriptor" );
@@ -140,7 +140,7 @@ public:
         return true;
     }
 
-    virtual bool DoRemove(wxSharedPtr<wxFSWatchEntryKq> watch)
+    virtual bool DoRemove(wxSharedPtr<wxFSWatchEntryKq> watch) wxOVERRIDE
     {
         wxCHECK_MSG( IsOk(), false,
                     "Kqueue not initialized or invalid kqueue descriptor" );
@@ -157,7 +157,7 @@ public:
         return true;
     }
 
-    virtual bool RemoveAll()
+    virtual bool RemoveAll() wxOVERRIDE
     {
         wxFSWatchEntries::iterator it = m_watches.begin();
         for ( ; it != m_watches.end(); ++it )
diff --git a/src/unix/threadpsx.cpp b/src/unix/threadpsx.cpp
index 509cc78..2b57ca7 100644
--- a/src/unix/threadpsx.cpp
+++ b/src/unix/threadpsx.cpp
@@ -1777,8 +1777,8 @@ void wxOSXThreadModuleOnExit();
 class wxThreadModule : public wxModule
 {
 public:
-    virtual bool OnInit();
-    virtual void OnExit();
+    virtual bool OnInit() wxOVERRIDE;
+    virtual void OnExit() wxOVERRIDE;
 
 private:
     DECLARE_DYNAMIC_CLASS(wxThreadModule)
diff --git a/src/unix/timerunx.cpp b/src/unix/timerunx.cpp
index 1d99805..04e0fef 100644
--- a/src/unix/timerunx.cpp
+++ b/src/unix/timerunx.cpp
@@ -252,8 +252,8 @@ class wxTimerUnixModule : public wxModule
 {
 public:
     wxTimerUnixModule() {}
-    virtual bool OnInit() { return true; }
-    virtual void OnExit() { wxTimerScheduler::Shutdown(); }
+    virtual bool OnInit() wxOVERRIDE { return true; }
+    virtual void OnExit() wxOVERRIDE { wxTimerScheduler::Shutdown(); }
 
     DECLARE_DYNAMIC_CLASS(wxTimerUnixModule)
 };
diff --git a/src/xrc/xh_unkwn.cpp b/src/xrc/xh_unkwn.cpp
index 888f2ae..6671b15 100644
--- a/src/xrc/xh_unkwn.cpp
+++ b/src/xrc/xh_unkwn.cpp
@@ -45,8 +45,8 @@ public:
         SetBackgroundColour(wxColour(255, 0, 255));
     }
 
-    virtual void AddChild(wxWindowBase *child);
-    virtual void RemoveChild(wxWindowBase *child);
+    virtual void AddChild(wxWindowBase *child) wxOVERRIDE;
+    virtual void RemoveChild(wxWindowBase *child) wxOVERRIDE;
 
 protected:
     wxString m_controlName;
diff --git a/src/xrc/xmlres.cpp b/src/xrc/xmlres.cpp
index bfc209a..b859f2b 100644
--- a/src/xrc/xmlres.cpp
+++ b/src/xrc/xmlres.cpp
@@ -1386,7 +1386,7 @@ class wxXmlSubclassFactoryCXX : public wxXmlSubclassFactory
 public:
     ~wxXmlSubclassFactoryCXX() {}
 
-    wxObject *Create(const wxString& className)
+    wxObject *Create(const wxString& className) wxOVERRIDE
     {
         wxClassInfo* classInfo = wxClassInfo::FindClass(className);
 
@@ -2859,12 +2859,12 @@ class wxXmlResourceModule: public wxModule
 DECLARE_DYNAMIC_CLASS(wxXmlResourceModule)
 public:
     wxXmlResourceModule() {}
-    bool OnInit()
+    bool OnInit() wxOVERRIDE
     {
         wxXmlResource::AddSubclassFactory(new wxXmlSubclassFactoryCXX);
         return true;
     }
-    void OnExit()
+    void OnExit() wxOVERRIDE
     {
         delete wxXmlResource::Set(NULL);
         delete wxIdRangeManager::Set(NULL);
diff --git a/utils/wxrc/wxrc.cpp b/utils/wxrc/wxrc.cpp
index fc52279..cc44c88 100644
--- a/utils/wxrc/wxrc.cpp
+++ b/utils/wxrc/wxrc.cpp
@@ -223,8 +223,8 @@ class XmlResApp : public wxAppConsole
 {
 public:
     // don't use builtin cmd line parsing:
-    virtual bool OnInit() { return true; }
-    virtual int OnRun();
+    virtual bool OnInit() wxOVERRIDE { return true; }
+    virtual int OnRun() wxOVERRIDE;
 
 private:
     void ParseParams(const wxCmdLineParser& cmdline);
-- 
1.9.0

