Index: src/common/filehistorycmn.cpp
===================================================================
--- src/common/filehistorycmn.cpp	(revision 77882)
+++ src/common/filehistorycmn.cpp	(working copy)
@@ -215,6 +215,7 @@
 #if wxUSE_CONFIG
 void wxFileHistoryBase::Load(const wxConfigBase& config)
 {
+    size_t old_count = m_fileHistory.GetCount();
     m_fileHistory.Clear();
 
     wxString buf;
@@ -230,7 +231,10 @@
         historyFile = wxEmptyString;
     }
 
-    AddFilesToMenu();
+    if ( old_count )
+        ReplaceFilesOnMenu( old_count );
+    else
+        AddFilesToMenu();
 }
 
 void wxFileHistoryBase::Save(wxConfigBase& config)
@@ -275,4 +279,28 @@
     }
 }
 
+static inline size_t umin(size_t a, size_t b) { return a < b ? a : b; }
+
+void wxFileHistoryBase::ReplaceFilesOnMenu(size_t old_count)
+{
+    size_t new_count = m_fileHistory.GetCount();
+    size_t common_count = umin( old_count, new_count );
+
+    for ( wxList::compatibility_iterator node = m_fileMenus.GetFirst();
+          node;
+          node = node->GetNext() )
+    {
+        wxMenu * const menu = static_cast<wxMenu *>(node->GetData());
+        
+        size_t i = 0;
+        for ( ; i < common_count; ++i )
+            menu->SetLabel(m_idBase + i, GetMRUEntryLabel(i, m_fileHistory[i]));
+
+        for ( ; i < old_count; ++i )
+            menu->Delete(m_idBase + i);
+
+        for ( ; i < new_count; ++i )
+            menu->Append(m_idBase + i, GetMRUEntryLabel(i, m_fileHistory[i]));
+    }
+}
 #endif // wxUSE_FILE_HISTORY
Index: include/wx/filehistory.h
===================================================================
--- include/wx/filehistory.h	(revision 77882)
+++ include/wx/filehistory.h	(working copy)
@@ -61,6 +61,8 @@
     wxWindowID GetBaseId() const { return m_idBase; }
 
 protected:
+    void ReplaceFilesOnMenu(size_t old_count);
+    
     // Last n files
     wxArrayString     m_fileHistory;
 
