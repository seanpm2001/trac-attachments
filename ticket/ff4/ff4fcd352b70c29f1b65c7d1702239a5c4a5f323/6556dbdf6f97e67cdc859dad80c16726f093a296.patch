
C:\src\dev\wxWindows>cvs -d:pserver:anoncvs@cvs.wxwindows.org:/home/wxcvs -z7 diff -bu        
? mdi.patch
Index: include/wx/msw/mdi.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/msw/mdi.h,v
retrieving revision 1.15.2.1
diff -b -u -r1.15.2.1 mdi.h
--- include/wx/msw/mdi.h	2000/06/21 21:10:37	1.15.2.1
+++ include/wx/msw/mdi.h	2001/05/28 21:11:38
@@ -159,6 +159,7 @@
     bool HandleMDIActivate(long bActivate, WXHWND, WXHWND);
     bool HandleWindowPosChanging(void *lpPos);
     bool HandleCommand(WXWORD id, WXWORD cmd, WXHWND control);
+    bool HandleGetMinMaxInfo(void *mmInfo);
 
     virtual long MSWWindowProc(WXUINT message, WXWPARAM wParam, WXLPARAM lParam);
     virtual long MSWDefWindowProc(WXUINT message, WXWPARAM wParam, WXLPARAM lParam);
Index: src/msw/mdi.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/msw/mdi.cpp,v
retrieving revision 1.54.2.10
diff -b -u -r1.54.2.10 mdi.cpp
--- src/msw/mdi.cpp	2001/04/27 00:34:18	1.54.2.10
+++ src/msw/mdi.cpp	2001/05/28 21:11:39
@@ -871,10 +871,8 @@
             break;
 
         case WM_GETMINMAXINFO:
-            // let the default window proc calculate the size of MDI children
-            // frames because it is based on the size of the MDI client window,
-            // not on the values specified in wxWindow m_min/max variables
-            return MSWDefWindowProc(message, wParam, lParam);
+            processed = HandleGetMinMaxInfo((MINMAXINFO *)lParam);
+            break;
 
         case WM_MDIACTIVATE:
             {
@@ -1031,6 +1029,29 @@
 #endif // Win95
 
     return FALSE;
+}
+
+bool wxMDIChildFrame::HandleGetMinMaxInfo(void *mmInfo)
+{
+    MINMAXINFO *info = (MINMAXINFO *)mmInfo;
+
+    // let the default window proc calculate the size of MDI children
+    // frames because it is based on the size of the MDI client window,
+    // not on the values specified in wxWindow m_max variables
+    MSWDefWindowProc(WM_GETMINMAXINFO, 0, (LPARAM)mmInfo);
+    
+    // allow GetSizeHints() to set the min size
+    if ( m_minWidth != -1 )
+    {
+        info->ptMinTrackSize.x = m_minWidth;
+    }
+
+    if ( m_minHeight != -1 )
+    {
+        info->ptMinTrackSize.y = m_minHeight;
+    }
+
+    return TRUE;
 }
 
 // ---------------------------------------------------------------------------

 	  	 
