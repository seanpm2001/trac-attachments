diff -ru2 --ignore-all-space wxWindows.orig/include/wx/dc.h wxWindows/include/wx/dc.h
--- wxWindows.orig/include/wx/dc.h	2002-08-31 13:29:09.000000000 +0200
+++ wxWindows/include/wx/dc.h	2003-12-23 11:28:21.052998400 +0100
@@ -210,4 +210,9 @@
                      int fillStyle = wxODDEVEN_RULE);

+	 void DrawPolyPolygon(int n, int start[], wxPoint points[],
+                     wxCoord xoffset = 0, wxCoord yoffset = 0,
+                     int fillStyle = wxODDEVEN_RULE)
+        { DoDrawPolyPolygon(n, start, points, xoffset, yoffset, fillStyle); }
+
     void DrawRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height)
         { DoDrawRectangle(x, y, width, height); }
@@ -655,4 +660,37 @@
                                wxCoord xoffset, wxCoord yoffset,
                                int fillStyle = wxODDEVEN_RULE) = 0;
+    virtual void DoDrawPolyPolygon(int n, int start[], wxPoint points[],
+                               wxCoord xoffset, wxCoord yoffset,
+                               int fillStyle = wxODDEVEN_RULE)
+	 {
+		  if (n == 1)
+				DoDrawPolygon(start[0], points, xoffset, yoffset, fillStyle);
+		  else {
+				int      i, j, lastOfs;
+				wxPoint* pts;
+				wxPen    pen;
+
+				for (i = j = lastOfs = 0; i < n; i++) {
+					 lastOfs = j;
+					 j      += start[i];
+					 }
+				pts = new wxPoint[j+n-1];
+				for (i = 0; i < j; i++)
+					 pts[i] = points[i];
+				for (i = 2; i <= n; i++) {
+					 lastOfs -= start[n-i];
+					 pts[j++] = pts[lastOfs];
+					 }
+				pen = GetPen();
+				SetPen(wxPen(*wxBLACK, 0, wxTRANSPARENT));
+				DoDrawPolygon(j, pts, xoffset, yoffset, fillStyle);
+				SetPen(pen);
+				for (i = j = 0; i < n; i++) {
+					 DoDrawLines(start[i], pts+j, xoffset, yoffset);
+					 j += start[i];
+					 }
+				delete pts;
+				}
+	 }

     virtual void DoSetClippingRegionAsRegion(const wxRegion& region) = 0;
diff -ru2 --ignore-all-space wxWindows.orig/include/wx/generic/dcpsg.h wxWindows/include/wx/generic/dcpsg.h
--- wxWindows.orig/include/wx/generic/dcpsg.h	2002-09-14 00:00:44.000000000 +0200
+++ wxWindows/include/wx/generic/dcpsg.h	2003-12-23 11:34:54.759120000 +0100
@@ -67,4 +67,5 @@
   void DoDrawLines(int n, wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0);
   void DoDrawPolygon(int n, wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, int fillStyle=wxODDEVEN_RULE);
+  void DoDrawPolyPolygon(int n, int start[], wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, int fillStyle=wxODDEVEN_RULE);
   void DoDrawRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height);
   void DoDrawRoundedRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height, double radius = 20);
Only in wxWindows/include/wx/generic: dcpsg.h.dif
diff -ru2 --ignore-all-space wxWindows.orig/include/wx/msw/dc.h wxWindows/include/wx/msw/dc.h
--- wxWindows.orig/include/wx/msw/dc.h	2002-04-17 13:47:59.000000000 +0200
+++ wxWindows/include/wx/msw/dc.h	2003-12-23 12:19:15.845574400 +0100
@@ -191,4 +191,7 @@
                                wxCoord xoffset, wxCoord yoffset,
                                int fillStyle = wxODDEVEN_RULE);
+    virtual void DoDrawPolyPolygon(int n, int start[], wxPoint points[],
+                               wxCoord xoffset, wxCoord yoffset,
+                               int fillStyle = wxODDEVEN_RULE);


diff -ru2 --ignore-all-space wxWindows.orig/src/generic/dcpsg.cpp wxWindows/src/generic/dcpsg.cpp
--- wxWindows.orig/src/generic/dcpsg.cpp	2003-06-03 15:58:13.000000000 +0200
+++ wxWindows/src/generic/dcpsg.cpp	2003-12-23 12:37:30.449537600 +0100
@@ -558,5 +558,5 @@
 }

-void wxPostScriptDC::DoDrawPolygon (int n, wxPoint points[], wxCoord xoffset, wxCoord yoffset, int WXUNUSED(fillStyle))
+void wxPostScriptDC::DoDrawPolygon (int n, wxPoint points[], wxCoord xoffset, wxCoord yoffset, int fillStyle)
 {
     wxCHECK_RET( m_ok && m_pstream, wxT("invalid postscript dc") );
@@ -587,5 +587,5 @@
         }

-        fprintf( m_pstream, "fill\n" );
+        fprintf( m_pstream, (fillStyle == wxODDEVEN_RULE ? "eofill\n" : "fill\n"));
     }

@@ -618,4 +618,70 @@
 }

+void wxPostScriptDC::DoDrawPolyPolygon (int n, int start[], wxPoint points[], wxCoord xoffset, wxCoord yoffset, int fillStyle)
+{
+    wxCHECK_RET( m_ok && m_pstream, wxT("invalid postscript dc") );
+
+    if (n <= 0) return;
+
+    if (m_brush.GetStyle () != wxTRANSPARENT)
+    {
+        SetBrush( m_brush );
+
+        fprintf( m_pstream, "newpath\n" );
+
+		  int ofs = 0;
+		  for (int i = 0; i < n; ofs += start[i++])
+		  {
+		      wxCoord xx = LogicalToDeviceX(points[ofs].x + xoffset);
+            wxCoord yy = LogicalToDeviceY(points[ofs].y + yoffset);
+
+            fprintf( m_pstream, "%d %d moveto\n", xx, yy );
+
+            CalcBoundingBox( points[ofs].x + xoffset, points[ofs].y + yoffset );
+
+            for (int j = 1; j < start[i]; j++)
+            {
+                xx = LogicalToDeviceX(points[ofs+j].x + xoffset);
+                yy = LogicalToDeviceY(points[ofs+j].y + yoffset);
+
+                fprintf( m_pstream, "%d %d lineto\n", xx, yy );
+
+                CalcBoundingBox( points[ofs+j].x + xoffset, points[ofs+j].y + yoffset);
+            }
+		  }
+        fprintf( m_pstream, (fillStyle == wxODDEVEN_RULE ? "eofill\n" : "fill\n"));
+    }
+
+    if (m_pen.GetStyle () != wxTRANSPARENT)
+    {
+        SetPen( m_pen );
+
+        fprintf( m_pstream, "newpath\n" );
+
+		  int ofs = 0;
+		  for (int i = 0; i < n; ofs += start[i++])
+		  {
+            wxCoord xx = LogicalToDeviceX(points[ofs].x + xoffset);
+            wxCoord yy = LogicalToDeviceY(points[ofs].y + yoffset);
+
+            fprintf( m_pstream, "%d %d moveto\n", xx, yy );
+
+            CalcBoundingBox( points[ofs].x + xoffset, points[ofs].y + yoffset );
+
+            for (int j = 1; j < start[i]; j++)
+            {
+                xx = LogicalToDeviceX(points[ofs+j].x + xoffset);
+                yy = LogicalToDeviceY(points[ofs+j].y + yoffset);
+
+                fprintf( m_pstream, "%d %d lineto\n", xx, yy );
+
+                CalcBoundingBox( points[ofs+j].x + xoffset, points[ofs+j].y + yoffset);
+            }
+		  }
+        fprintf( m_pstream, "closepath\n" );
+        fprintf( m_pstream, "stroke\n" );
+    }
+}
+
 void wxPostScriptDC::DoDrawLines (int n, wxPoint points[], wxCoord xoffset, wxCoord yoffset)
 {
diff -ru2 --ignore-all-space wxWindows.orig/src/msw/dc.cpp wxWindows/src/msw/dc.cpp
--- wxWindows.orig/src/msw/dc.cpp	2003-06-03 15:58:24.000000000 +0200
+++ wxWindows/src/msw/dc.cpp	2003-12-23 12:37:54.333881600 +0100
@@ -704,4 +704,42 @@
 }

+void wxDC::DoDrawPolyPolygon(int n, int start[], wxPoint points[], wxCoord xoffset, wxCoord yoffset,int fillStyle)
+{
+#ifdef __WXMICROWIN__
+    if (!GetHDC()) return;
+#endif
+
+    wxColourChanger cc(*this); // needed for wxSTIPPLE_MASK_OPAQUE handling
+	 int i, cnt;
+	 for (i = cnt = 0; i < n; i++)
+		  cnt += start[i];
+
+    // Do things less efficiently if we have offsets
+    if (xoffset != 0 || yoffset != 0)
+    {
+		  POINT *cpoints = new POINT[cnt];
+        for (i = 0; i < cnt; i++)
+        {
+				cpoints[i].x = (int)(points[i].x + xoffset);
+            cpoints[i].y = (int)(points[i].y + yoffset);
+
+            CalcBoundingBox(cpoints[i].x, cpoints[i].y);
+        }
+        int prev = SetPolyFillMode(GetHdc(),fillStyle==wxODDEVEN_RULE?ALTERNATE:WINDING);
+        (void)PolyPolygon(GetHdc(), cpoints, start, n);
+        SetPolyFillMode(GetHdc(),prev);
+        delete[] cpoints;
+    }
+    else
+    {
+        for (i = 0; i < cnt; i++)
+            CalcBoundingBox(points[i].x, points[i].y);
+
+        int prev = SetPolyFillMode(GetHdc(),fillStyle==wxODDEVEN_RULE?ALTERNATE:WINDING);
+        (void)PolyPolygon(GetHdc(), (POINT*) points, start, n);
+        SetPolyFillMode(GetHdc(),prev);
+    }
+}
+
 void wxDC::DoDrawLines(int n, wxPoint points[], wxCoord xoffset, wxCoord yoffset)
 {


 	  	 
