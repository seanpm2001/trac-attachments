--- window.1.1.cpp	2012-03-15 11:53:30.382537665 +0000
+++ window.cpp	2012-03-15 11:53:30.386537663 +0000
@@ -196,6 +196,9 @@
 // The window that is scheduled to get focus in the next event loop iteration
 // or NULL if there's no pending focus change:
 static wxWindowGTK *gs_pendingFocus = NULL;
+// The window that is scheduled to get focus when the popup menu goes away
+// or NULL if there's no popup menu
+static wxWindowGTK *gs_postPopupMenuFocus = NULL;
 
 // the window that has deferred focus-out event pending, if any (see
 // GTKAddDeferredFocusOut() for details)
@@ -2227,6 +2230,8 @@
         gs_currentFocus = NULL;
     if (gs_pendingFocus == this)
         gs_pendingFocus = NULL;
+    if (gs_postPopupMenuFocus == this)
+        gs_postPopupMenuFocus = NULL;
 
     if ( gs_deferredFocusOut == this )
         gs_deferredFocusOut = NULL;
@@ -4024,9 +4029,12 @@
     // menu has focus while the menu is shown. This is needed because the popup
     // menu actually steals the focus from the window it's associated it in
     // wxGTK unlike, say, wxMSW.
-    wxWindowGTK* const oldPendingFocus = gs_pendingFocus;
+    gs_postPopupMenuFocus = gs_pendingFocus;
     gs_pendingFocus = this;
-    wxON_BLOCK_EXIT_SET( gs_pendingFocus, oldPendingFocus );
+    // Dont use wxON_BLOCK_EXIT_SET as this takes a copy of gs_postPopupMenuFocus.
+    // gs_postPopupMenu focus could be assigned to null by the time this method exits
+    // and this would assign gs_pendingFocus to an invalid pointer
+    //wxON_BLOCK_EXIT_SET( gs_pendingFocus, gs_postPopupMenuFocus );
 
     menu->UpdateUI();
 
@@ -4062,6 +4070,8 @@
         gtk_main_iteration();
     }
 
+    // Manually assign pending focus instead of wxON_BLOCK_EXIT_SET 
+    gs_pendingFocus = gs_postPopupMenuFocus;
     return true;
 }
 
