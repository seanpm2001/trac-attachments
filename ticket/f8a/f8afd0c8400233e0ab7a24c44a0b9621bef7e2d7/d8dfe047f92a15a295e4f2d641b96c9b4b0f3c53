diff -ur wxWindows-2.4.1/docs/latex/wx/fildatob.tex wxWindows-2.4.1-mine/docs/latex/wx/fildatob.tex
--- wxWindows-2.4.1/docs/latex/wx/fildatob.tex	2002-06-07 22:15:22.000000000 +0200
+++ wxWindows-2.4.1-mine/docs/latex/wx/fildatob.tex	2003-08-21 21:52:16.000000000 +0200
@@ -7,11 +7,6 @@
 under Unix which makes it possible to receive files from them using this
 class.
 
-{\bf Warning:} Under all non-Windows platforms this class is currently
-"input-only", i.e. you can receive the files from another application, but
-copying (or dragging) file(s) from a wxWindows application is not currently
-supported.
-
 \wxheading{Virtual functions to override}
 
 None.
@@ -45,7 +40,7 @@
 
 \func{virtual void}{AddFile}{\param{const wxString\& }{file}}
 
-{\bf MSW only:} adds a file to the file list represented by this data object.
+Adds a file to the file list represented by this data object.
 
 \membersection{wxFileDataObject::GetFilenames}\label{wxfiledataobjectgetfilenames}
 
diff -ur wxWindows-2.4.1/samples/dnd/dnd.cpp wxWindows-2.4.1-mine/samples/dnd/dnd.cpp
--- wxWindows-2.4.1/samples/dnd/dnd.cpp	2002-12-16 13:55:56.000000000 +0100
+++ wxWindows-2.4.1-mine/samples/dnd/dnd.cpp	2003-08-21 21:55:51.000000000 +0200
@@ -1365,7 +1365,6 @@
 
 void DnDFrame::OnCopyFiles(wxCommandEvent& WXUNUSED(event))
 {
-#ifdef __WXMSW__
     wxFileDialog dialog(this, _T("Select a file to copy"), _T(""), _T(""),
                          _T("All files (*.*)|*.*"), 0);
 
@@ -1406,9 +1405,6 @@
     {
         wxLogStatus(this, wxT("Aborted"));
     }
-#else // !MSW
-    wxLogError(wxT("Sorry, not implemented"));
-#endif // MSW/!MSW
 }
 
 // ---------------------------------------------------------------------------
diff -ur wxWindows-2.4.1/src/gtk/dataobj.cpp wxWindows-2.4.1-mine/src/gtk/dataobj.cpp
--- wxWindows-2.4.1/src/gtk/dataobj.cpp	2002-11-25 07:22:54.000000000 +0100
+++ wxWindows-2.4.1-mine/src/gtk/dataobj.cpp	2003-08-21 21:25:31.000000000 +0200
@@ -193,14 +193,22 @@
 // wxFileDataObject
 // ----------------------------------------------------------------------------
 
+#define OLD_FORMAT      0
+
 bool wxFileDataObject::GetDataHere(void *buf) const
 {
     wxString filenames;
 
     for (size_t i = 0; i < m_filenames.GetCount(); i++)
     {
+#if OLD_FORMAT
         filenames += m_filenames[i];
         filenames += (wxChar) 0;
+#else
+        filenames += "file:";
+        filenames += m_filenames[i];
+        filenames += "\r\n";
+#endif
     }
 
     memcpy( buf, filenames.mbc_str(), filenames.Len() + 1 );
@@ -215,7 +223,11 @@
     for (size_t i = 0; i < m_filenames.GetCount(); i++)
     {
         res += m_filenames[i].Len();
+#if OLD_FORMAT
         res += 1;
+#else
+        res += 5 + 2; // "file:" (5) + "\r\n" (2)
+#endif
     }
 
     return res + 1;
@@ -224,7 +236,7 @@
 bool wxFileDataObject::SetData(size_t WXUNUSED(size), const void *buf)
 {
     // VZ: old format
-#if 0
+#if OLD_FORMAT
     // filenames are stores as a string with #0 as deliminators
     const char *filenames = (const char*) buf;
     size_t pos = 0;
@@ -239,7 +251,7 @@
         pos += file.Len()+1;
         filenames += file.Len()+1;
     }
-#else // 1
+#else // NEW_FORMAT
     m_filenames.Empty();
 
     // the text/uri-list format is a sequence of URIs (filenames prefixed by
@@ -285,7 +297,7 @@
             filename += *p;
         }
     }
-#endif // 0/1
+#endif // OLD_FORMAT / NEW_FORMAT
 
     return TRUE;
 }
diff -ur wxWindows-2.4.1/src/x11/dataobj.cpp wxWindows-2.4.1-mine/src/x11/dataobj.cpp
--- wxWindows-2.4.1/src/x11/dataobj.cpp	2002-11-03 14:48:03.000000000 +0100
+++ wxWindows-2.4.1-mine/src/x11/dataobj.cpp	2003-08-21 22:05:48.000000000 +0200
@@ -186,14 +186,22 @@
 // wxFileDataObject
 // ----------------------------------------------------------------------------
 
+#define OLD_FORMAT      0
+
 bool wxFileDataObject::GetDataHere(void *buf) const
 {
     wxString filenames;
 
     for (size_t i = 0; i < m_filenames.GetCount(); i++)
     {
+#if OLD_FORMAT
         filenames += m_filenames[i];
         filenames += (wxChar) 0;
+#else
+        filenames += "file:";
+        filenames += m_filenames[i];
+        filenames += "\r\n";
+#endif
     }
 
     memcpy( buf, filenames.mbc_str(), filenames.Len() + 1 );
@@ -208,7 +216,11 @@
     for (size_t i = 0; i < m_filenames.GetCount(); i++)
     {
         res += m_filenames[i].Len();
+#if OLD_FORMAT
         res += 1;
+#else
+        res += 5 + 2; // "file:" (5) + "\r\n" (2)
+#endif
     }
 
     return res + 1;
@@ -217,7 +229,7 @@
 bool wxFileDataObject::SetData(size_t WXUNUSED(size), const void *buf)
 {
     // VZ: old format
-#if 0
+#if OLD_FORMAT
     // filenames are stores as a string with #0 as deliminators
     const char *filenames = (const char*) buf;
     size_t pos = 0;
@@ -232,7 +244,7 @@
         pos += file.Len()+1;
         filenames += file.Len()+1;
     }
-#else // 1
+#else // NEW_FORMAT
     m_filenames.Empty();
 
     // the text/uri-list format is a sequence of URIs (filenames prefixed by
@@ -278,7 +290,7 @@
             filename += *p;
         }
     }
-#endif // 0/1
+#endif // OLD_FORMAT / NEW_FORMAT
 
     return TRUE;
 }

 	  	 
