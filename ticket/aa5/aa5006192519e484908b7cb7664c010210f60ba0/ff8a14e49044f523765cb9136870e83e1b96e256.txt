
import wx

ID_SPLITTER = wx.NewId()

class MessageDialog(wx.Dialog):
    def __init__(self, parent, ID,
            size = wx.DefaultSize, 
            pos = wx.DefaultPosition):

        wx.Dialog.__init__(self, parent, ID, '', size = size)

        self.sizer = wx.BoxSizer(wx.VERTICAL)

        # 2nd
        box2 = wx.StaticBox(self, -1)
        self.boxSizer2 = wx.StaticBoxSizer(box2, wx.HORIZONTAL)

        self.splitter = MySplitter(self, ID_SPLITTER)

        #
        self.incoming = wx.Panel(self.splitter, style=0)
        self.incomingSizer = wx.BoxSizer(wx.VERTICAL)
        self._incoming = wx.TextCtrl(self.incoming, -1, "",
            style=wx.TE_MULTILINE|wx.TE_RICH2|wx.CLIP_CHILDREN)
        self.incomingSizer.Add(self._incoming, 1, wx.EXPAND, 1)
        self.incoming.SetSizer(self.incomingSizer)
        self.incoming.SetAutoLayout(True)
        self.incomingSizer.Fit(self.incoming)

        #
        self.outgoing = wx.Panel(self.splitter, style=0)
        self.outgoingSizer = wx.BoxSizer(wx.VERTICAL)
        self._outgoing = wx.TextCtrl(self.outgoing, -1, "",
            size=wx.DefaultSize, style = wx.TE_MULTILINE | wx.TE_RICH2)

        # Send messages on Ctrl-Enter
        #self._outgoing.Bind(wx.EVT_KEY_DOWN, self.onCtrlEnter)

        self.dropTarget = NTextDropTarget(self._outgoing)
        self._outgoing.SetDropTarget(self.dropTarget)

        self.outgoingSizer.Add(self._outgoing, 1, wx.EXPAND, 1)
        self.outgoing.SetSizer(self.outgoingSizer)
        self.outgoing.SetAutoLayout(True)
        self.outgoingSizer.Fit(self.incoming)

        self.splitter.SetMinimumPaneSize(20)
        self.splitter.SplitHorizontally(self.incoming, self.outgoing, -100)

        self._pane = self.splitter
        self.outgoing.SetFocus()

        self.boxSizer2.Add(self._pane, 1, wx.EXPAND)

        # -- wrap up
        self.sizer.Add(self.boxSizer2, 4, wx.EXPAND)
        self.SetSizer(self.sizer)

        self.SetAutoLayout(True)

class MySplitter(wx.SplitterWindow):
    def __init__(self, parent, Id):
        wx.SplitterWindow.__init__(self, parent, Id,
            style = wx.SP_LIVE_UPDATE)

class NTextDropTarget(wx.TextDropTarget):
    def __init__(self, window):
        wx.TextDropTarget.__init__(self)
        self.window = window

    def OnDropText(self, x, y, text):
        self.window.WriteText("(%d, %d)\n%s\n" % (x, y, text))
        
    def OnDragOver(self, x, y, d):
        return wx.DragCopy

def main():
    class N(wx.App):
        def OnInit(self):
            frame = wx.Frame(None, -1, "")


            self.splitter = MySplitter(frame, -1)
            p1 = wx.Panel(self.splitter, -1)
            p2 = wx.Panel(self.splitter, -1)

            t1 = wx.TextCtrl(p1, -1, size = (200, 200), style = wx.TE_MULTILINE|wx.TE_RICH2|wx.CLIP_CHILDREN)
            dropTarget1 = NTextDropTarget(t1)
            t1.SetDropTarget(dropTarget1)

            t2 = wx.TextCtrl(p2, -1, style = wx.TE_MULTILINE|wx.TE_RICH2|wx.CLIP_CHILDREN)
            dropTarget2 = NTextDropTarget(t2)
            t2.SetDropTarget(dropTarget2)

            self.splitter.SetMinimumPaneSize(10)
            self.splitter.SplitHorizontally(p1, p2, -100)

            self.SetTopWindow(frame)
            frame.Show(True)

            d = MessageDialog(None, -1)
            d.Show()

            return True

    app = N(redirect = False)
    app.MainLoop()

if __name__ == '__main__':
    main()


 	  	 
