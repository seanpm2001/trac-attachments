--- src/gtk/textctrl.cpp.orig	2006-07-22 08:28:34.000000000 +0200
+++ src/gtk/textctrl.cpp	2006-07-22 08:36:29.000000000 +0200
@@ -60,6 +60,21 @@
 }
 
 extern "C" {
+static void wxGtkTextRemoveTagsWithPrefix(GtkTextBuffer *text_buffer, const char *prefix, GtkTextIter *start, GtkTextIter *end)
+{
+    // gtk_text_buffer_remove_all_tags emits a remove_tag signal for each tag.
+    // This signal can be vetoed so that the tag won't be removed.
+    // wxGtkOnRemoveTag will ensure that only named tags starting with the
+    // given prefix will be removed.
+
+    gulong remove_handler_id = g_signal_connect (text_buffer, "remove_tag",
+            G_CALLBACK (wxGtkOnRemoveTag), gpointer(prefix));
+    gtk_text_buffer_remove_all_tags(text_buffer, start, end);
+    g_signal_handler_disconnect (text_buffer, remove_handler_id);
+}
+}
+
+extern "C" {
 static void wxGtkTextApplyTagsFromAttr(GtkWidget *text,
                                        GtkTextBuffer *text_buffer,
                                        const wxTextAttr& attr,
@@ -71,10 +86,7 @@
 
     if (attr.HasFont())
     {
-        gulong remove_handler_id = g_signal_connect (text_buffer, "remove_tag",
-                G_CALLBACK (wxGtkOnRemoveTag), gpointer("WXFONT"));
-        gtk_text_buffer_remove_all_tags(text_buffer, start, end);
-        g_signal_handler_disconnect (text_buffer, remove_handler_id);
+        wxGtkTextRemoveTagsWithPrefix(text_buffer, "WXFONT", start, end);
 
         char *font_string;
         PangoFontDescription *font_description = attr.GetFont().GetNativeFontInfo()->description;
@@ -105,10 +117,7 @@
 
     if (attr.HasTextColour())
     {
-        gulong remove_handler_id = g_signal_connect (text_buffer, "remove_tag",
-                G_CALLBACK (wxGtkOnRemoveTag), gpointer("WXFORECOLOR"));
-        gtk_text_buffer_remove_all_tags(text_buffer, start, end);
-        g_signal_handler_disconnect (text_buffer, remove_handler_id);
+        wxGtkTextRemoveTagsWithPrefix(text_buffer, "WXFORECOLOR", start, end);
 
         const GdkColor *colFg = attr.GetTextColour().GetColor();
         g_snprintf(buf, sizeof(buf), "WXFORECOLOR %d %d %d",
@@ -123,10 +132,7 @@
 
     if (attr.HasBackgroundColour())
     {
-        gulong remove_handler_id = g_signal_connect (text_buffer, "remove_tag",
-                G_CALLBACK (wxGtkOnRemoveTag), gpointer("WXBACKCOLOR"));
-        gtk_text_buffer_remove_all_tags(text_buffer, start, end);
-        g_signal_handler_disconnect (text_buffer, remove_handler_id);
+        wxGtkTextRemoveTagsWithPrefix(text_buffer, "WXBACKCOLOR", start, end);
 
         const GdkColor *colBg = attr.GetBackgroundColour().GetColor();
         g_snprintf(buf, sizeof(buf), "WXBACKCOLOR %d %d %d",
@@ -147,11 +153,7 @@
                                           gtk_text_iter_get_line(start) );
         gtk_text_iter_forward_line(&para_end);
 
-        remove_handler_id = g_signal_connect (text_buffer, "remove_tag",
-                                              G_CALLBACK(wxGtkOnRemoveTag),
-                                              gpointer("WXALIGNMENT"));
-        gtk_text_buffer_remove_all_tags( text_buffer, &para_start, &para_end );
-        g_signal_handler_disconnect (text_buffer, remove_handler_id);
+        wxGtkTextRemoveTagsWithPrefix(text_buffer, "WXALIGNMENT", &para_start, &para_end);
 
         GtkJustification align;
         switch (attr.GetAlignment())
@@ -188,11 +190,7 @@
                                           gtk_text_iter_get_line(start) );
         gtk_text_iter_forward_line(&para_end);
 
-        remove_handler_id = g_signal_connect (text_buffer, "remove_tag",
-                                            G_CALLBACK(wxGtkOnRemoveTag),
-                                            gpointer("WXINDENT"));
-        gtk_text_buffer_remove_all_tags( text_buffer, &para_start, &para_end );
-        g_signal_handler_disconnect (text_buffer, remove_handler_id);
+        wxGtkTextRemoveTagsWithPrefix(text_buffer, "WXINDENT", &para_start, &para_end);
 
         // Convert indent from 1/10th of a mm into pixels
         float factor;
@@ -240,11 +238,7 @@
                                           gtk_text_iter_get_line(start) );
         gtk_text_iter_forward_line(&para_end);
 
-        remove_handler_id = g_signal_connect (text_buffer, "remove_tag",
-                                            G_CALLBACK(wxGtkOnRemoveTag),
-                                            gpointer("WXTABS"));
-        gtk_text_buffer_remove_all_tags( text_buffer, &para_start, &para_end );
-        g_signal_handler_disconnect (text_buffer, remove_handler_id);
+        wxGtkTextRemoveTagsWithPrefix(text_buffer, "WXTABS", &para_start, &para_end);
 
         const wxArrayInt& tabs = attr.GetTabs();
 

 	  	 
