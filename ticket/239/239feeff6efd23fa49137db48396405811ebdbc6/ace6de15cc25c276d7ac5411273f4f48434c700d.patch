Index: Makefile.in
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/Makefile.in,v
retrieving revision 1.669
diff -u -4 -r1.669 Makefile.in
--- Makefile.in	2006/12/04 01:14:25	1.669
+++ Makefile.in	2006/12/10 07:47:03
@@ -2229,8 +2229,11 @@
 	wx/mac/carbon/pngread.h \
 	wx/mac/carbon/printdlg.h \
 	wx/mac/carbon/printmac.h \
 	wx/mac/carbon/private.h \
+	wx/mac/carbon/private/mactext.h \
+	wx/mac/carbon/private/overlay.h \
+	wx/mac/carbon/private/print.h \
 	wx/mac/carbon/radiobox.h \
 	wx/mac/carbon/radiobut.h \
 	wx/mac/carbon/region.h \
 	wx/mac/carbon/scrolbar.h \
@@ -2328,8 +2331,9 @@
 COND_TOOLKIT_MSW_GUI_HDR =  \
 	wx/generic/clrpickerg.h \
 	wx/generic/fontpickerg.h \
 	wx/generic/filepickerg.h \
+	wx/generic/srchctlg.h \
 	wx/msw/accel.h \
 	wx/msw/app.h \
 	wx/msw/bitmap.h \
 	wx/msw/bmpbuttn.h \
@@ -2522,8 +2526,9 @@
 COND_TOOLKIT_WINCE_GUI_HDR =  \
 	wx/generic/clrpickerg.h \
 	wx/generic/fontpickerg.h \
 	wx/generic/filepickerg.h \
+	wx/generic/srchctlg.h \
 	wx/msw/accel.h \
 	wx/msw/app.h \
 	wx/msw/bitmap.h \
 	wx/msw/bmpbuttn.h \
@@ -2987,8 +2992,9 @@
 	wx/scopeguard.h \
 	wx/spinbutt.h \
 	wx/spinctrl.h \
 	wx/splitter.h \
+	wx/srchctrl.h \
 	wx/statline.h \
 	wx/tab.h \
 	wx/tabctrl.h \
 	wx/tbarbase.h \
@@ -3496,8 +3502,9 @@
 	monodll_rendcmn.o \
 	monodll_rgncmn.o \
 	monodll_settcmn.o \
 	monodll_sizer.o \
+	monodll_srchcmn.o \
 	monodll_statbar.o \
 	monodll_stockitem.o \
 	monodll_tbarbase.o \
 	monodll_textcmn.o \
@@ -3531,8 +3538,9 @@
 	monodll_scrlwing.o \
 	monodll_selstore.o \
 	monodll_spinctlg.o \
 	monodll_splitter.o \
+	monodll_srchctlg.o \
 	monodll_textdlgg.o \
 	monodll_tipwin.o \
 	monodll_toolbkg.o \
 	monodll_treectlg.o \
@@ -3669,8 +3677,9 @@
 	monodll_rendcmn.o \
 	monodll_rgncmn.o \
 	monodll_settcmn.o \
 	monodll_sizer.o \
+	monodll_srchcmn.o \
 	monodll_statbar.o \
 	monodll_stockitem.o \
 	monodll_tbarbase.o \
 	monodll_textcmn.o \
@@ -3704,8 +3713,9 @@
 	monodll_scrlwing.o \
 	monodll_selstore.o \
 	monodll_spinctlg.o \
 	monodll_splitter.o \
+	monodll_srchctlg.o \
 	monodll_textdlgg.o \
 	monodll_tipwin.o \
 	monodll_toolbkg.o \
 	monodll_treectlg.o \
@@ -4262,8 +4272,9 @@
 	monodll_settings.o \
 	monodll_slider.o \
 	monodll_spinbutt.o \
 	monodll_spinctrl.o \
+	monodll_srchctrl.o \
 	monodll_statbmp.o \
 	monodll_statbox.o \
 	monodll_statbrma.o \
 	monodll_statlmac.o \
@@ -5270,8 +5281,9 @@
 	monolib_rendcmn.o \
 	monolib_rgncmn.o \
 	monolib_settcmn.o \
 	monolib_sizer.o \
+	monolib_srchcmn.o \
 	monolib_statbar.o \
 	monolib_stockitem.o \
 	monolib_tbarbase.o \
 	monolib_textcmn.o \
@@ -5305,8 +5317,9 @@
 	monolib_scrlwing.o \
 	monolib_selstore.o \
 	monolib_spinctlg.o \
 	monolib_splitter.o \
+	monolib_srchctlg.o \
 	monolib_textdlgg.o \
 	monolib_tipwin.o \
 	monolib_toolbkg.o \
 	monolib_treectlg.o \
@@ -5443,8 +5456,9 @@
 	monolib_rendcmn.o \
 	monolib_rgncmn.o \
 	monolib_settcmn.o \
 	monolib_sizer.o \
+	monolib_srchcmn.o \
 	monolib_statbar.o \
 	monolib_stockitem.o \
 	monolib_tbarbase.o \
 	monolib_textcmn.o \
@@ -5478,8 +5492,9 @@
 	monolib_scrlwing.o \
 	monolib_selstore.o \
 	monolib_spinctlg.o \
 	monolib_splitter.o \
+	monolib_srchctlg.o \
 	monolib_textdlgg.o \
 	monolib_tipwin.o \
 	monolib_toolbkg.o \
 	monolib_treectlg.o \
@@ -6037,8 +6052,9 @@
 	monolib_settings.o \
 	monolib_slider.o \
 	monolib_spinbutt.o \
 	monolib_spinctrl.o \
+	monolib_srchctrl.o \
 	monolib_statbmp.o \
 	monolib_statbox.o \
 	monolib_statbrma.o \
 	monolib_statlmac.o \
@@ -7274,8 +7290,9 @@
 	coredll_rendcmn.o \
 	coredll_rgncmn.o \
 	coredll_settcmn.o \
 	coredll_sizer.o \
+	coredll_srchcmn.o \
 	coredll_statbar.o \
 	coredll_stockitem.o \
 	coredll_tbarbase.o \
 	coredll_textcmn.o \
@@ -7309,8 +7326,9 @@
 	coredll_scrlwing.o \
 	coredll_selstore.o \
 	coredll_spinctlg.o \
 	coredll_splitter.o \
+	coredll_srchctlg.o \
 	coredll_textdlgg.o \
 	coredll_tipwin.o \
 	coredll_toolbkg.o \
 	coredll_treectlg.o \
@@ -7447,8 +7465,9 @@
 	coredll_rendcmn.o \
 	coredll_rgncmn.o \
 	coredll_settcmn.o \
 	coredll_sizer.o \
+	coredll_srchcmn.o \
 	coredll_statbar.o \
 	coredll_stockitem.o \
 	coredll_tbarbase.o \
 	coredll_textcmn.o \
@@ -7482,8 +7501,9 @@
 	coredll_scrlwing.o \
 	coredll_selstore.o \
 	coredll_spinctlg.o \
 	coredll_splitter.o \
+	coredll_srchctlg.o \
 	coredll_textdlgg.o \
 	coredll_tipwin.o \
 	coredll_toolbkg.o \
 	coredll_treectlg.o \
@@ -8041,8 +8061,9 @@
 	coredll_settings.o \
 	coredll_slider.o \
 	coredll_spinbutt.o \
 	coredll_spinctrl.o \
+	coredll_srchctrl.o \
 	coredll_statbmp.o \
 	coredll_statbox.o \
 	coredll_statbrma.o \
 	coredll_statlmac.o \
@@ -8722,8 +8743,9 @@
 	corelib_rendcmn.o \
 	corelib_rgncmn.o \
 	corelib_settcmn.o \
 	corelib_sizer.o \
+	corelib_srchcmn.o \
 	corelib_statbar.o \
 	corelib_stockitem.o \
 	corelib_tbarbase.o \
 	corelib_textcmn.o \
@@ -8757,8 +8779,9 @@
 	corelib_scrlwing.o \
 	corelib_selstore.o \
 	corelib_spinctlg.o \
 	corelib_splitter.o \
+	corelib_srchctlg.o \
 	corelib_textdlgg.o \
 	corelib_tipwin.o \
 	corelib_toolbkg.o \
 	corelib_treectlg.o \
@@ -8895,8 +8918,9 @@
 	corelib_rendcmn.o \
 	corelib_rgncmn.o \
 	corelib_settcmn.o \
 	corelib_sizer.o \
+	corelib_srchcmn.o \
 	corelib_statbar.o \
 	corelib_stockitem.o \
 	corelib_tbarbase.o \
 	corelib_textcmn.o \
@@ -8930,8 +8954,9 @@
 	corelib_scrlwing.o \
 	corelib_selstore.o \
 	corelib_spinctlg.o \
 	corelib_splitter.o \
+	corelib_srchctlg.o \
 	corelib_textdlgg.o \
 	corelib_tipwin.o \
 	corelib_toolbkg.o \
 	corelib_treectlg.o \
@@ -9489,8 +9514,9 @@
 	corelib_settings.o \
 	corelib_slider.o \
 	corelib_spinbutt.o \
 	corelib_spinctrl.o \
+	corelib_srchctrl.o \
 	corelib_statbmp.o \
 	corelib_statbox.o \
 	corelib_statbrma.o \
 	corelib_statlmac.o \
@@ -12851,8 +12877,11 @@
 
 monodll_printmac.o: $(srcdir)/src/mac/carbon/printmac.cpp $(MONODLL_ODEP)
 	$(CXXC) -c -o $@ $(MONODLL_CXXFLAGS) $(srcdir)/src/mac/carbon/printmac.cpp
 
+monodll_srchctrl.o: $(srcdir)/src/mac/carbon/srchctrl.cpp $(MONODLL_ODEP)
+	$(CXXC) -c -o $@ $(MONODLL_CXXFLAGS) $(srcdir)/src/mac/carbon/srchctrl.cpp
+
 monodll_statbrma.o: $(srcdir)/src/mac/carbon/statbrma.cpp $(MONODLL_ODEP)
 	$(CXXC) -c -o $@ $(MONODLL_CXXFLAGS) $(srcdir)/src/mac/carbon/statbrma.cpp
 
 monodll_statlmac.o: $(srcdir)/src/mac/carbon/statlmac.cpp $(MONODLL_ODEP)
@@ -16223,8 +16252,11 @@
 
 @COND_USE_GUI_1@monodll_sizer.o: $(srcdir)/src/common/sizer.cpp $(MONODLL_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(MONODLL_CXXFLAGS) $(srcdir)/src/common/sizer.cpp
 
+@COND_USE_GUI_1@monodll_srchcmn.o: $(srcdir)/src/common/srchcmn.cpp $(MONODLL_ODEP)
+@COND_USE_GUI_1@	$(CXXC) -c -o $@ $(MONODLL_CXXFLAGS) $(srcdir)/src/common/srchcmn.cpp
+
 @COND_USE_GUI_1@monodll_statbar.o: $(srcdir)/src/common/statbar.cpp $(MONODLL_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(MONODLL_CXXFLAGS) $(srcdir)/src/common/statbar.cpp
 
 @COND_USE_GUI_1@monodll_stockitem.o: $(srcdir)/src/common/stockitem.cpp $(MONODLL_ODEP)
@@ -16328,8 +16360,11 @@
 
 @COND_USE_GUI_1@monodll_splitter.o: $(srcdir)/src/generic/splitter.cpp $(MONODLL_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(MONODLL_CXXFLAGS) $(srcdir)/src/generic/splitter.cpp
 
+@COND_USE_GUI_1@monodll_srchctlg.o: $(srcdir)/src/generic/srchctlg.cpp $(MONODLL_ODEP)
+@COND_USE_GUI_1@	$(CXXC) -c -o $@ $(MONODLL_CXXFLAGS) $(srcdir)/src/generic/srchctlg.cpp
+
 @COND_USE_GUI_1@monodll_textdlgg.o: $(srcdir)/src/generic/textdlgg.cpp $(MONODLL_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(MONODLL_CXXFLAGS) $(srcdir)/src/generic/textdlgg.cpp
 
 @COND_USE_GUI_1@monodll_tipwin.o: $(srcdir)/src/generic/tipwin.cpp $(MONODLL_ODEP)
@@ -16958,8 +16993,11 @@
 
 monolib_printmac.o: $(srcdir)/src/mac/carbon/printmac.cpp $(MONOLIB_ODEP)
 	$(CXXC) -c -o $@ $(MONOLIB_CXXFLAGS) $(srcdir)/src/mac/carbon/printmac.cpp
 
+monolib_srchctrl.o: $(srcdir)/src/mac/carbon/srchctrl.cpp $(MONOLIB_ODEP)
+	$(CXXC) -c -o $@ $(MONOLIB_CXXFLAGS) $(srcdir)/src/mac/carbon/srchctrl.cpp
+
 monolib_statbrma.o: $(srcdir)/src/mac/carbon/statbrma.cpp $(MONOLIB_ODEP)
 	$(CXXC) -c -o $@ $(MONOLIB_CXXFLAGS) $(srcdir)/src/mac/carbon/statbrma.cpp
 
 monolib_statlmac.o: $(srcdir)/src/mac/carbon/statlmac.cpp $(MONOLIB_ODEP)
@@ -20330,8 +20368,11 @@
 
 @COND_USE_GUI_1@monolib_sizer.o: $(srcdir)/src/common/sizer.cpp $(MONOLIB_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(MONOLIB_CXXFLAGS) $(srcdir)/src/common/sizer.cpp
 
+@COND_USE_GUI_1@monolib_srchcmn.o: $(srcdir)/src/common/srchcmn.cpp $(MONOLIB_ODEP)
+@COND_USE_GUI_1@	$(CXXC) -c -o $@ $(MONOLIB_CXXFLAGS) $(srcdir)/src/common/srchcmn.cpp
+
 @COND_USE_GUI_1@monolib_statbar.o: $(srcdir)/src/common/statbar.cpp $(MONOLIB_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(MONOLIB_CXXFLAGS) $(srcdir)/src/common/statbar.cpp
 
 @COND_USE_GUI_1@monolib_stockitem.o: $(srcdir)/src/common/stockitem.cpp $(MONOLIB_ODEP)
@@ -20435,8 +20476,11 @@
 
 @COND_USE_GUI_1@monolib_splitter.o: $(srcdir)/src/generic/splitter.cpp $(MONOLIB_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(MONOLIB_CXXFLAGS) $(srcdir)/src/generic/splitter.cpp
 
+@COND_USE_GUI_1@monolib_srchctlg.o: $(srcdir)/src/generic/srchctlg.cpp $(MONOLIB_ODEP)
+@COND_USE_GUI_1@	$(CXXC) -c -o $@ $(MONOLIB_CXXFLAGS) $(srcdir)/src/generic/srchctlg.cpp
+
 @COND_USE_GUI_1@monolib_textdlgg.o: $(srcdir)/src/generic/textdlgg.cpp $(MONOLIB_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(MONOLIB_CXXFLAGS) $(srcdir)/src/generic/textdlgg.cpp
 
 @COND_USE_GUI_1@monolib_tipwin.o: $(srcdir)/src/generic/tipwin.cpp $(MONOLIB_ODEP)
@@ -22064,8 +22108,11 @@
 
 coredll_printmac.o: $(srcdir)/src/mac/carbon/printmac.cpp $(COREDLL_ODEP)
 	$(CXXC) -c -o $@ $(COREDLL_CXXFLAGS) $(srcdir)/src/mac/carbon/printmac.cpp
 
+coredll_srchctrl.o: $(srcdir)/src/mac/carbon/srchctrl.cpp $(COREDLL_ODEP)
+	$(CXXC) -c -o $@ $(COREDLL_CXXFLAGS) $(srcdir)/src/mac/carbon/srchctrl.cpp
+
 coredll_statbrma.o: $(srcdir)/src/mac/carbon/statbrma.cpp $(COREDLL_ODEP)
 	$(CXXC) -c -o $@ $(COREDLL_CXXFLAGS) $(srcdir)/src/mac/carbon/statbrma.cpp
 
 coredll_statlmac.o: $(srcdir)/src/mac/carbon/statlmac.cpp $(COREDLL_ODEP)
@@ -24782,8 +24829,11 @@
 
 @COND_USE_GUI_1@coredll_sizer.o: $(srcdir)/src/common/sizer.cpp $(COREDLL_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(COREDLL_CXXFLAGS) $(srcdir)/src/common/sizer.cpp
 
+@COND_USE_GUI_1@coredll_srchcmn.o: $(srcdir)/src/common/srchcmn.cpp $(COREDLL_ODEP)
+@COND_USE_GUI_1@	$(CXXC) -c -o $@ $(COREDLL_CXXFLAGS) $(srcdir)/src/common/srchcmn.cpp
+
 @COND_USE_GUI_1@coredll_statbar.o: $(srcdir)/src/common/statbar.cpp $(COREDLL_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(COREDLL_CXXFLAGS) $(srcdir)/src/common/statbar.cpp
 
 @COND_USE_GUI_1@coredll_stockitem.o: $(srcdir)/src/common/stockitem.cpp $(COREDLL_ODEP)
@@ -24887,8 +24937,11 @@
 
 @COND_USE_GUI_1@coredll_splitter.o: $(srcdir)/src/generic/splitter.cpp $(COREDLL_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(COREDLL_CXXFLAGS) $(srcdir)/src/generic/splitter.cpp
 
+@COND_USE_GUI_1@coredll_srchctlg.o: $(srcdir)/src/generic/srchctlg.cpp $(COREDLL_ODEP)
+@COND_USE_GUI_1@	$(CXXC) -c -o $@ $(COREDLL_CXXFLAGS) $(srcdir)/src/generic/srchctlg.cpp
+
 @COND_USE_GUI_1@coredll_textdlgg.o: $(srcdir)/src/generic/textdlgg.cpp $(COREDLL_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(COREDLL_CXXFLAGS) $(srcdir)/src/generic/textdlgg.cpp
 
 @COND_USE_GUI_1@coredll_tipwin.o: $(srcdir)/src/generic/tipwin.cpp $(COREDLL_ODEP)
@@ -25007,8 +25060,11 @@
 
 corelib_printmac.o: $(srcdir)/src/mac/carbon/printmac.cpp $(CORELIB_ODEP)
 	$(CXXC) -c -o $@ $(CORELIB_CXXFLAGS) $(srcdir)/src/mac/carbon/printmac.cpp
 
+corelib_srchctrl.o: $(srcdir)/src/mac/carbon/srchctrl.cpp $(CORELIB_ODEP)
+	$(CXXC) -c -o $@ $(CORELIB_CXXFLAGS) $(srcdir)/src/mac/carbon/srchctrl.cpp
+
 corelib_statbrma.o: $(srcdir)/src/mac/carbon/statbrma.cpp $(CORELIB_ODEP)
 	$(CXXC) -c -o $@ $(CORELIB_CXXFLAGS) $(srcdir)/src/mac/carbon/statbrma.cpp
 
 corelib_statlmac.o: $(srcdir)/src/mac/carbon/statlmac.cpp $(CORELIB_ODEP)
@@ -27725,8 +27781,11 @@
 
 @COND_USE_GUI_1@corelib_sizer.o: $(srcdir)/src/common/sizer.cpp $(CORELIB_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(CORELIB_CXXFLAGS) $(srcdir)/src/common/sizer.cpp
 
+@COND_USE_GUI_1@corelib_srchcmn.o: $(srcdir)/src/common/srchcmn.cpp $(CORELIB_ODEP)
+@COND_USE_GUI_1@	$(CXXC) -c -o $@ $(CORELIB_CXXFLAGS) $(srcdir)/src/common/srchcmn.cpp
+
 @COND_USE_GUI_1@corelib_statbar.o: $(srcdir)/src/common/statbar.cpp $(CORELIB_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(CORELIB_CXXFLAGS) $(srcdir)/src/common/statbar.cpp
 
 @COND_USE_GUI_1@corelib_stockitem.o: $(srcdir)/src/common/stockitem.cpp $(CORELIB_ODEP)
@@ -27829,8 +27888,11 @@
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(CORELIB_CXXFLAGS) $(srcdir)/src/generic/spinctlg.cpp
 
 @COND_USE_GUI_1@corelib_splitter.o: $(srcdir)/src/generic/splitter.cpp $(CORELIB_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(CORELIB_CXXFLAGS) $(srcdir)/src/generic/splitter.cpp
+
+@COND_USE_GUI_1@corelib_srchctlg.o: $(srcdir)/src/generic/srchctlg.cpp $(CORELIB_ODEP)
+@COND_USE_GUI_1@	$(CXXC) -c -o $@ $(CORELIB_CXXFLAGS) $(srcdir)/src/generic/srchctlg.cpp
 
 @COND_USE_GUI_1@corelib_textdlgg.o: $(srcdir)/src/generic/textdlgg.cpp $(CORELIB_ODEP)
 @COND_USE_GUI_1@	$(CXXC) -c -o $@ $(CORELIB_CXXFLAGS) $(srcdir)/src/generic/textdlgg.cpp
 
Index: configure.in
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/configure.in,v
retrieving revision 1.1226
diff -u -4 -r1.1226 configure.in
--- configure.in	2006/12/09 23:43:54	1.1226
+++ configure.in	2006/12/10 07:47:04
@@ -551,8 +551,9 @@
   DEFAULT_wxUSE_RADIOBOX=no
   DEFAULT_wxUSE_RADIOBTN=no
   DEFAULT_wxUSE_SASH=no
   DEFAULT_wxUSE_SCROLLBAR=no
+  DEFAULT_wxUSE_SEARCHCTRL=no
   DEFAULT_wxUSE_SLIDER=no
   DEFAULT_wxUSE_SPINBTN=no
   DEFAULT_wxUSE_SPINCTRL=no
   DEFAULT_wxUSE_SPLITTER=no
@@ -774,8 +775,9 @@
   DEFAULT_wxUSE_RADIOBOX=yes
   DEFAULT_wxUSE_RADIOBTN=yes
   DEFAULT_wxUSE_SASH=yes
   DEFAULT_wxUSE_SCROLLBAR=yes
+  DEFAULT_wxUSE_SEARCHCTRL=yes
   DEFAULT_wxUSE_SLIDER=yes
   DEFAULT_wxUSE_SPINBTN=yes
   DEFAULT_wxUSE_SPINCTRL=yes
   DEFAULT_wxUSE_SPLITTER=yes
@@ -1106,8 +1108,9 @@
   DEFAULT_wxUSE_RADIOBOX=yes
   DEFAULT_wxUSE_RADIOBTN=yes
   DEFAULT_wxUSE_SASH=yes
   DEFAULT_wxUSE_SCROLLBAR=yes
+  DEFAULT_wxUSE_SEARCHCTRL=yes
   DEFAULT_wxUSE_SLIDER=yes
   DEFAULT_wxUSE_SPINBTN=yes
   DEFAULT_wxUSE_SPINCTRL=yes
   DEFAULT_wxUSE_SPLITTER=yes
@@ -1158,8 +1161,9 @@
   DEFAULT_wxUSE_RADIOBOX=no
   DEFAULT_wxUSE_RADIOBTN=no
   DEFAULT_wxUSE_SASH=no
   DEFAULT_wxUSE_SCROLLBAR=no
+  DEFAULT_wxUSE_SEARCHCTRL=no
   DEFAULT_wxUSE_SLIDER=no
   DEFAULT_wxUSE_SPINBTN=no
   DEFAULT_wxUSE_SPINCTRL=no
   DEFAULT_wxUSE_SPLITTER=no
@@ -1213,8 +1217,9 @@
 WX_ARG_ENABLE(radiobox,    [  --enable-radiobox       use wxRadioBox class], wxUSE_RADIOBOX)
 WX_ARG_ENABLE(radiobtn,    [  --enable-radiobtn       use wxRadioButton class], wxUSE_RADIOBTN)
 WX_ARG_ENABLE(sash,        [  --enable-sash           use wxSashWindow class], wxUSE_SASH)
 WX_ARG_ENABLE(scrollbar,   [  --enable-scrollbar      use wxScrollBar class and scrollable windows], wxUSE_SCROLLBAR)
+WX_ARG_ENABLE(searchctrl,  [  --enable-searchctrl     use wxSearchCtrl class], wxUSE_SEARCHCTRL)
 WX_ARG_ENABLE(slider,      [  --enable-slider         use wxSlider class], wxUSE_SLIDER)
 WX_ARG_ENABLE(spinbtn,     [  --enable-spinbtn        use wxSpinButton class], wxUSE_SPINBTN)
 WX_ARG_ENABLE(spinctrl,    [  --enable-spinctrl       use wxSpinCtrl class], wxUSE_SPINCTRL)
 WX_ARG_ENABLE(splitter,    [  --enable-splitter       use wxSplitterWindow class], wxUSE_SPLITTER)
@@ -6879,8 +6884,13 @@
 if test "$wxUSE_SCROLLBAR" = "yes"; then
     AC_DEFINE(wxUSE_SCROLLBAR)
     USES_CONTROLS=1
     SAMPLES_SUBDIRS="$SAMPLES_SUBDIRS scroll scrollsub"
+fi
+
+if test "$wxUSE_SEARCHCTRL" = "yes"; then
+    AC_DEFINE(wxUSE_SEARCHCTRL)
+    USES_CONTROLS=1
 fi
 
 if test "$wxUSE_SLIDER" = "yes"; then
     AC_DEFINE(wxUSE_SLIDER)
Index: setup.h.in
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/setup.h.in,v
retrieving revision 1.247
diff -u -4 -r1.247 setup.h.in
--- setup.h.in	2006/12/03 21:59:40	1.247
+++ setup.h.in	2006/12/10 07:47:04
@@ -331,8 +331,9 @@
 #define wxUSE_LISTCTRL      0
 #define wxUSE_RADIOBOX      0
 #define wxUSE_RADIOBTN      0
 #define wxUSE_SCROLLBAR     0
+#define wxUSE_SEARCHCTRL    0
 #define wxUSE_SLIDER        0
 #define wxUSE_SPINBTN       0
 #define wxUSE_SPINCTRL      0
 #define wxUSE_STATBOX       0
Index: build/bakefiles/files.bkl
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/bakefiles/files.bkl,v
retrieving revision 1.412
diff -u -4 -r1.412 files.bkl
--- build/bakefiles/files.bkl	2006/12/04 01:14:19	1.412
+++ build/bakefiles/files.bkl	2006/12/10 07:47:04
@@ -637,8 +637,9 @@
     src/common/rendcmn.cpp
     src/common/rgncmn.cpp
     src/common/settcmn.cpp
     src/common/sizer.cpp
+    src/common/srchcmn.cpp
     src/common/statbar.cpp
     src/common/stockitem.cpp
     src/common/tbarbase.cpp
     src/common/textcmn.cpp
@@ -672,8 +673,9 @@
     src/generic/scrlwing.cpp
     src/generic/selstore.cpp
     src/generic/spinctlg.cpp
     src/generic/splitter.cpp
+    src/generic/srchctlg.cpp
     src/generic/textdlgg.cpp
     src/generic/tipwin.cpp
     src/generic/toolbkg.cpp
     src/generic/treectlg.cpp
@@ -853,8 +855,9 @@
     wx/scopeguard.h
     wx/spinbutt.h
     wx/spinctrl.h
     wx/splitter.h
+    wx/srchctrl.h
     wx/statline.h
     wx/tab.h
     wx/tabctrl.h
     wx/tbarbase.h
@@ -1582,8 +1585,9 @@
 <set var="MSW_HDR" hints="files">
     wx/generic/clrpickerg.h
     wx/generic/fontpickerg.h
     wx/generic/filepickerg.h
+    wx/generic/srchctlg.h
     wx/msw/accel.h
     wx/msw/app.h
     wx/msw/bitmap.h
     wx/msw/bmpbuttn.h
@@ -2134,8 +2138,9 @@
     src/mac/carbon/settings.cpp
     src/mac/carbon/slider.cpp
     src/mac/carbon/spinbutt.cpp
     src/mac/carbon/spinctrl.cpp
+    src/mac/carbon/srchctrl.cpp
     src/mac/carbon/statbmp.cpp
     src/mac/carbon/statbox.cpp
     src/mac/carbon/statbrma.cpp
     src/mac/carbon/statlmac.cpp
@@ -2302,8 +2307,11 @@
     wx/mac/carbon/pngread.h
     wx/mac/carbon/printdlg.h
     wx/mac/carbon/printmac.h
     wx/mac/carbon/private.h
+    wx/mac/carbon/private/mactext.h
+    wx/mac/carbon/private/overlay.h
+    wx/mac/carbon/private/print.h
     wx/mac/carbon/radiobox.h
     wx/mac/carbon/radiobut.h
     wx/mac/carbon/region.h
     wx/mac/carbon/scrolbar.h
Index: build/msw/makefile.bcc
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/msw/makefile.bcc,v
retrieving revision 1.154
diff -u -4 -r1.154 makefile.bcc
--- build/msw/makefile.bcc	2006/11/10 02:31:40	1.154
+++ build/msw/makefile.bcc	2006/12/10 07:47:05
@@ -1489,8 +1489,9 @@
 	$(OBJS)\monodll_rendcmn.obj \
 	$(OBJS)\monodll_rgncmn.obj \
 	$(OBJS)\monodll_settcmn.obj \
 	$(OBJS)\monodll_sizer.obj \
+	$(OBJS)\monodll_srchcmn.obj \
 	$(OBJS)\monodll_statbar.obj \
 	$(OBJS)\monodll_stockitem.obj \
 	$(OBJS)\monodll_tbarbase.obj \
 	$(OBJS)\monodll_textcmn.obj \
@@ -1524,8 +1525,9 @@
 	$(OBJS)\monodll_scrlwing.obj \
 	$(OBJS)\monodll_selstore.obj \
 	$(OBJS)\monodll_spinctlg.obj \
 	$(OBJS)\monodll_splitter.obj \
+	$(OBJS)\monodll_srchctlg.obj \
 	$(OBJS)\monodll_textdlgg.obj \
 	$(OBJS)\monodll_tipwin.obj \
 	$(OBJS)\monodll_toolbkg.obj \
 	$(OBJS)\monodll_treectlg.obj \
@@ -1712,8 +1714,9 @@
 	$(OBJS)\monodll_rendcmn.obj \
 	$(OBJS)\monodll_rgncmn.obj \
 	$(OBJS)\monodll_settcmn.obj \
 	$(OBJS)\monodll_sizer.obj \
+	$(OBJS)\monodll_srchcmn.obj \
 	$(OBJS)\monodll_statbar.obj \
 	$(OBJS)\monodll_stockitem.obj \
 	$(OBJS)\monodll_tbarbase.obj \
 	$(OBJS)\monodll_textcmn.obj \
@@ -1747,8 +1750,9 @@
 	$(OBJS)\monodll_scrlwing.obj \
 	$(OBJS)\monodll_selstore.obj \
 	$(OBJS)\monodll_spinctlg.obj \
 	$(OBJS)\monodll_splitter.obj \
+	$(OBJS)\monodll_srchctlg.obj \
 	$(OBJS)\monodll_textdlgg.obj \
 	$(OBJS)\monodll_tipwin.obj \
 	$(OBJS)\monodll_toolbkg.obj \
 	$(OBJS)\monodll_treectlg.obj \
@@ -2101,8 +2105,9 @@
 	$(OBJS)\monolib_rendcmn.obj \
 	$(OBJS)\monolib_rgncmn.obj \
 	$(OBJS)\monolib_settcmn.obj \
 	$(OBJS)\monolib_sizer.obj \
+	$(OBJS)\monolib_srchcmn.obj \
 	$(OBJS)\monolib_statbar.obj \
 	$(OBJS)\monolib_stockitem.obj \
 	$(OBJS)\monolib_tbarbase.obj \
 	$(OBJS)\monolib_textcmn.obj \
@@ -2136,8 +2141,9 @@
 	$(OBJS)\monolib_scrlwing.obj \
 	$(OBJS)\monolib_selstore.obj \
 	$(OBJS)\monolib_spinctlg.obj \
 	$(OBJS)\monolib_splitter.obj \
+	$(OBJS)\monolib_srchctlg.obj \
 	$(OBJS)\monolib_textdlgg.obj \
 	$(OBJS)\monolib_tipwin.obj \
 	$(OBJS)\monolib_toolbkg.obj \
 	$(OBJS)\monolib_treectlg.obj \
@@ -2324,8 +2330,9 @@
 	$(OBJS)\monolib_rendcmn.obj \
 	$(OBJS)\monolib_rgncmn.obj \
 	$(OBJS)\monolib_settcmn.obj \
 	$(OBJS)\monolib_sizer.obj \
+	$(OBJS)\monolib_srchcmn.obj \
 	$(OBJS)\monolib_statbar.obj \
 	$(OBJS)\monolib_stockitem.obj \
 	$(OBJS)\monolib_tbarbase.obj \
 	$(OBJS)\monolib_textcmn.obj \
@@ -2359,8 +2366,9 @@
 	$(OBJS)\monolib_scrlwing.obj \
 	$(OBJS)\monolib_selstore.obj \
 	$(OBJS)\monolib_spinctlg.obj \
 	$(OBJS)\monolib_splitter.obj \
+	$(OBJS)\monolib_srchctlg.obj \
 	$(OBJS)\monolib_textdlgg.obj \
 	$(OBJS)\monolib_tipwin.obj \
 	$(OBJS)\monolib_toolbkg.obj \
 	$(OBJS)\monolib_treectlg.obj \
@@ -2621,8 +2629,9 @@
 	$(OBJS)\coredll_rendcmn.obj \
 	$(OBJS)\coredll_rgncmn.obj \
 	$(OBJS)\coredll_settcmn.obj \
 	$(OBJS)\coredll_sizer.obj \
+	$(OBJS)\coredll_srchcmn.obj \
 	$(OBJS)\coredll_statbar.obj \
 	$(OBJS)\coredll_stockitem.obj \
 	$(OBJS)\coredll_tbarbase.obj \
 	$(OBJS)\coredll_textcmn.obj \
@@ -2656,8 +2665,9 @@
 	$(OBJS)\coredll_scrlwing.obj \
 	$(OBJS)\coredll_selstore.obj \
 	$(OBJS)\coredll_spinctlg.obj \
 	$(OBJS)\coredll_splitter.obj \
+	$(OBJS)\coredll_srchctlg.obj \
 	$(OBJS)\coredll_textdlgg.obj \
 	$(OBJS)\coredll_tipwin.obj \
 	$(OBJS)\coredll_toolbkg.obj \
 	$(OBJS)\coredll_treectlg.obj \
@@ -2844,8 +2854,9 @@
 	$(OBJS)\coredll_rendcmn.obj \
 	$(OBJS)\coredll_rgncmn.obj \
 	$(OBJS)\coredll_settcmn.obj \
 	$(OBJS)\coredll_sizer.obj \
+	$(OBJS)\coredll_srchcmn.obj \
 	$(OBJS)\coredll_statbar.obj \
 	$(OBJS)\coredll_stockitem.obj \
 	$(OBJS)\coredll_tbarbase.obj \
 	$(OBJS)\coredll_textcmn.obj \
@@ -2879,8 +2890,9 @@
 	$(OBJS)\coredll_scrlwing.obj \
 	$(OBJS)\coredll_selstore.obj \
 	$(OBJS)\coredll_spinctlg.obj \
 	$(OBJS)\coredll_splitter.obj \
+	$(OBJS)\coredll_srchctlg.obj \
 	$(OBJS)\coredll_textdlgg.obj \
 	$(OBJS)\coredll_tipwin.obj \
 	$(OBJS)\coredll_toolbkg.obj \
 	$(OBJS)\coredll_treectlg.obj \
@@ -3068,8 +3080,9 @@
 	$(OBJS)\corelib_rendcmn.obj \
 	$(OBJS)\corelib_rgncmn.obj \
 	$(OBJS)\corelib_settcmn.obj \
 	$(OBJS)\corelib_sizer.obj \
+	$(OBJS)\corelib_srchcmn.obj \
 	$(OBJS)\corelib_statbar.obj \
 	$(OBJS)\corelib_stockitem.obj \
 	$(OBJS)\corelib_tbarbase.obj \
 	$(OBJS)\corelib_textcmn.obj \
@@ -3103,8 +3116,9 @@
 	$(OBJS)\corelib_scrlwing.obj \
 	$(OBJS)\corelib_selstore.obj \
 	$(OBJS)\corelib_spinctlg.obj \
 	$(OBJS)\corelib_splitter.obj \
+	$(OBJS)\corelib_srchctlg.obj \
 	$(OBJS)\corelib_textdlgg.obj \
 	$(OBJS)\corelib_tipwin.obj \
 	$(OBJS)\corelib_toolbkg.obj \
 	$(OBJS)\corelib_treectlg.obj \
@@ -3291,8 +3305,9 @@
 	$(OBJS)\corelib_rendcmn.obj \
 	$(OBJS)\corelib_rgncmn.obj \
 	$(OBJS)\corelib_settcmn.obj \
 	$(OBJS)\corelib_sizer.obj \
+	$(OBJS)\corelib_srchcmn.obj \
 	$(OBJS)\corelib_statbar.obj \
 	$(OBJS)\corelib_stockitem.obj \
 	$(OBJS)\corelib_tbarbase.obj \
 	$(OBJS)\corelib_textcmn.obj \
@@ -3326,8 +3341,9 @@
 	$(OBJS)\corelib_scrlwing.obj \
 	$(OBJS)\corelib_selstore.obj \
 	$(OBJS)\corelib_spinctlg.obj \
 	$(OBJS)\corelib_splitter.obj \
+	$(OBJS)\corelib_srchctlg.obj \
 	$(OBJS)\corelib_textdlgg.obj \
 	$(OBJS)\corelib_tipwin.obj \
 	$(OBJS)\corelib_toolbkg.obj \
 	$(OBJS)\corelib_treectlg.obj \
@@ -6161,8 +6177,13 @@
 	$(CXX) -q -c -P -o$@ $(MONODLL_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
+$(OBJS)\monodll_srchcmn.obj: ..\..\src\common\srchcmn.cpp
+	$(CXX) -q -c -P -o$@ $(MONODLL_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
 $(OBJS)\monodll_statbar.obj: ..\..\src\common\statbar.cpp
 	$(CXX) -q -c -P -o$@ $(MONODLL_CXXFLAGS) $**
 !endif
 
@@ -6336,8 +6357,13 @@
 	$(CXX) -q -c -P -o$@ $(MONODLL_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
+$(OBJS)\monodll_srchctlg.obj: ..\..\src\generic\srchctlg.cpp
+	$(CXX) -q -c -P -o$@ $(MONODLL_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
 $(OBJS)\monodll_textdlgg.obj: ..\..\src\generic\textdlgg.cpp
 	$(CXX) -q -c -P -o$@ $(MONODLL_CXXFLAGS) $**
 !endif
 
@@ -8148,8 +8174,13 @@
 	$(CXX) -q -c -P -o$@ $(MONOLIB_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
+$(OBJS)\monolib_srchcmn.obj: ..\..\src\common\srchcmn.cpp
+	$(CXX) -q -c -P -o$@ $(MONOLIB_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
 $(OBJS)\monolib_statbar.obj: ..\..\src\common\statbar.cpp
 	$(CXX) -q -c -P -o$@ $(MONOLIB_CXXFLAGS) $**
 !endif
 
@@ -8323,8 +8354,13 @@
 	$(CXX) -q -c -P -o$@ $(MONOLIB_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
+$(OBJS)\monolib_srchctlg.obj: ..\..\src\generic\srchctlg.cpp
+	$(CXX) -q -c -P -o$@ $(MONOLIB_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
 $(OBJS)\monolib_textdlgg.obj: ..\..\src\generic\textdlgg.cpp
 	$(CXX) -q -c -P -o$@ $(MONOLIB_CXXFLAGS) $**
 !endif
 
@@ -10159,8 +10195,13 @@
 	$(CXX) -q -c -P -o$@ $(COREDLL_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
+$(OBJS)\coredll_srchcmn.obj: ..\..\src\common\srchcmn.cpp
+	$(CXX) -q -c -P -o$@ $(COREDLL_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
 $(OBJS)\coredll_statbar.obj: ..\..\src\common\statbar.cpp
 	$(CXX) -q -c -P -o$@ $(COREDLL_CXXFLAGS) $**
 !endif
 
@@ -10334,8 +10375,13 @@
 	$(CXX) -q -c -P -o$@ $(COREDLL_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
+$(OBJS)\coredll_srchctlg.obj: ..\..\src\generic\srchctlg.cpp
+	$(CXX) -q -c -P -o$@ $(COREDLL_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
 $(OBJS)\coredll_textdlgg.obj: ..\..\src\generic\textdlgg.cpp
 	$(CXX) -q -c -P -o$@ $(COREDLL_CXXFLAGS) $**
 !endif
 
@@ -11424,8 +11470,13 @@
 	$(CXX) -q -c -P -o$@ $(CORELIB_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
+$(OBJS)\corelib_srchcmn.obj: ..\..\src\common\srchcmn.cpp
+	$(CXX) -q -c -P -o$@ $(CORELIB_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
 $(OBJS)\corelib_statbar.obj: ..\..\src\common\statbar.cpp
 	$(CXX) -q -c -P -o$@ $(CORELIB_CXXFLAGS) $**
 !endif
 
@@ -11595,8 +11646,13 @@
 !endif
 
 !if "$(USE_GUI)" == "1"
 $(OBJS)\corelib_splitter.obj: ..\..\src\generic\splitter.cpp
+	$(CXX) -q -c -P -o$@ $(CORELIB_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
+$(OBJS)\corelib_srchctlg.obj: ..\..\src\generic\srchctlg.cpp
 	$(CXX) -q -c -P -o$@ $(CORELIB_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
Index: build/msw/makefile.gcc
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/msw/makefile.gcc,v
retrieving revision 1.149
diff -u -4 -r1.149 makefile.gcc
--- build/msw/makefile.gcc	2006/11/10 02:31:39	1.149
+++ build/msw/makefile.gcc	2006/12/10 07:47:05
@@ -1499,8 +1499,9 @@
 	$(OBJS)\monodll_rendcmn.o \
 	$(OBJS)\monodll_rgncmn.o \
 	$(OBJS)\monodll_settcmn.o \
 	$(OBJS)\monodll_sizer.o \
+	$(OBJS)\monodll_srchcmn.o \
 	$(OBJS)\monodll_statbar.o \
 	$(OBJS)\monodll_stockitem.o \
 	$(OBJS)\monodll_tbarbase.o \
 	$(OBJS)\monodll_textcmn.o \
@@ -1534,8 +1535,9 @@
 	$(OBJS)\monodll_scrlwing.o \
 	$(OBJS)\monodll_selstore.o \
 	$(OBJS)\monodll_spinctlg.o \
 	$(OBJS)\monodll_splitter.o \
+	$(OBJS)\monodll_srchctlg.o \
 	$(OBJS)\monodll_textdlgg.o \
 	$(OBJS)\monodll_tipwin.o \
 	$(OBJS)\monodll_toolbkg.o \
 	$(OBJS)\monodll_treectlg.o \
@@ -1724,8 +1726,9 @@
 	$(OBJS)\monodll_rendcmn.o \
 	$(OBJS)\monodll_rgncmn.o \
 	$(OBJS)\monodll_settcmn.o \
 	$(OBJS)\monodll_sizer.o \
+	$(OBJS)\monodll_srchcmn.o \
 	$(OBJS)\monodll_statbar.o \
 	$(OBJS)\monodll_stockitem.o \
 	$(OBJS)\monodll_tbarbase.o \
 	$(OBJS)\monodll_textcmn.o \
@@ -1759,8 +1762,9 @@
 	$(OBJS)\monodll_scrlwing.o \
 	$(OBJS)\monodll_selstore.o \
 	$(OBJS)\monodll_spinctlg.o \
 	$(OBJS)\monodll_splitter.o \
+	$(OBJS)\monodll_srchctlg.o \
 	$(OBJS)\monodll_textdlgg.o \
 	$(OBJS)\monodll_tipwin.o \
 	$(OBJS)\monodll_toolbkg.o \
 	$(OBJS)\monodll_treectlg.o \
@@ -2117,8 +2121,9 @@
 	$(OBJS)\monolib_rendcmn.o \
 	$(OBJS)\monolib_rgncmn.o \
 	$(OBJS)\monolib_settcmn.o \
 	$(OBJS)\monolib_sizer.o \
+	$(OBJS)\monolib_srchcmn.o \
 	$(OBJS)\monolib_statbar.o \
 	$(OBJS)\monolib_stockitem.o \
 	$(OBJS)\monolib_tbarbase.o \
 	$(OBJS)\monolib_textcmn.o \
@@ -2152,8 +2157,9 @@
 	$(OBJS)\monolib_scrlwing.o \
 	$(OBJS)\monolib_selstore.o \
 	$(OBJS)\monolib_spinctlg.o \
 	$(OBJS)\monolib_splitter.o \
+	$(OBJS)\monolib_srchctlg.o \
 	$(OBJS)\monolib_textdlgg.o \
 	$(OBJS)\monolib_tipwin.o \
 	$(OBJS)\monolib_toolbkg.o \
 	$(OBJS)\monolib_treectlg.o \
@@ -2342,8 +2348,9 @@
 	$(OBJS)\monolib_rendcmn.o \
 	$(OBJS)\monolib_rgncmn.o \
 	$(OBJS)\monolib_settcmn.o \
 	$(OBJS)\monolib_sizer.o \
+	$(OBJS)\monolib_srchcmn.o \
 	$(OBJS)\monolib_statbar.o \
 	$(OBJS)\monolib_stockitem.o \
 	$(OBJS)\monolib_tbarbase.o \
 	$(OBJS)\monolib_textcmn.o \
@@ -2377,8 +2384,9 @@
 	$(OBJS)\monolib_scrlwing.o \
 	$(OBJS)\monolib_selstore.o \
 	$(OBJS)\monolib_spinctlg.o \
 	$(OBJS)\monolib_splitter.o \
+	$(OBJS)\monolib_srchctlg.o \
 	$(OBJS)\monolib_textdlgg.o \
 	$(OBJS)\monolib_tipwin.o \
 	$(OBJS)\monolib_toolbkg.o \
 	$(OBJS)\monolib_treectlg.o \
@@ -2653,8 +2661,9 @@
 	$(OBJS)\coredll_rendcmn.o \
 	$(OBJS)\coredll_rgncmn.o \
 	$(OBJS)\coredll_settcmn.o \
 	$(OBJS)\coredll_sizer.o \
+	$(OBJS)\coredll_srchcmn.o \
 	$(OBJS)\coredll_statbar.o \
 	$(OBJS)\coredll_stockitem.o \
 	$(OBJS)\coredll_tbarbase.o \
 	$(OBJS)\coredll_textcmn.o \
@@ -2688,8 +2697,9 @@
 	$(OBJS)\coredll_scrlwing.o \
 	$(OBJS)\coredll_selstore.o \
 	$(OBJS)\coredll_spinctlg.o \
 	$(OBJS)\coredll_splitter.o \
+	$(OBJS)\coredll_srchctlg.o \
 	$(OBJS)\coredll_textdlgg.o \
 	$(OBJS)\coredll_tipwin.o \
 	$(OBJS)\coredll_toolbkg.o \
 	$(OBJS)\coredll_treectlg.o \
@@ -2878,8 +2888,9 @@
 	$(OBJS)\coredll_rendcmn.o \
 	$(OBJS)\coredll_rgncmn.o \
 	$(OBJS)\coredll_settcmn.o \
 	$(OBJS)\coredll_sizer.o \
+	$(OBJS)\coredll_srchcmn.o \
 	$(OBJS)\coredll_statbar.o \
 	$(OBJS)\coredll_stockitem.o \
 	$(OBJS)\coredll_tbarbase.o \
 	$(OBJS)\coredll_textcmn.o \
@@ -2913,8 +2924,9 @@
 	$(OBJS)\coredll_scrlwing.o \
 	$(OBJS)\coredll_selstore.o \
 	$(OBJS)\coredll_spinctlg.o \
 	$(OBJS)\coredll_splitter.o \
+	$(OBJS)\coredll_srchctlg.o \
 	$(OBJS)\coredll_textdlgg.o \
 	$(OBJS)\coredll_tipwin.o \
 	$(OBJS)\coredll_toolbkg.o \
 	$(OBJS)\coredll_treectlg.o \
@@ -3108,8 +3120,9 @@
 	$(OBJS)\corelib_rendcmn.o \
 	$(OBJS)\corelib_rgncmn.o \
 	$(OBJS)\corelib_settcmn.o \
 	$(OBJS)\corelib_sizer.o \
+	$(OBJS)\corelib_srchcmn.o \
 	$(OBJS)\corelib_statbar.o \
 	$(OBJS)\corelib_stockitem.o \
 	$(OBJS)\corelib_tbarbase.o \
 	$(OBJS)\corelib_textcmn.o \
@@ -3143,8 +3156,9 @@
 	$(OBJS)\corelib_scrlwing.o \
 	$(OBJS)\corelib_selstore.o \
 	$(OBJS)\corelib_spinctlg.o \
 	$(OBJS)\corelib_splitter.o \
+	$(OBJS)\corelib_srchctlg.o \
 	$(OBJS)\corelib_textdlgg.o \
 	$(OBJS)\corelib_tipwin.o \
 	$(OBJS)\corelib_toolbkg.o \
 	$(OBJS)\corelib_treectlg.o \
@@ -3333,8 +3347,9 @@
 	$(OBJS)\corelib_rendcmn.o \
 	$(OBJS)\corelib_rgncmn.o \
 	$(OBJS)\corelib_settcmn.o \
 	$(OBJS)\corelib_sizer.o \
+	$(OBJS)\corelib_srchcmn.o \
 	$(OBJS)\corelib_statbar.o \
 	$(OBJS)\corelib_stockitem.o \
 	$(OBJS)\corelib_tbarbase.o \
 	$(OBJS)\corelib_textcmn.o \
@@ -3368,8 +3383,9 @@
 	$(OBJS)\corelib_scrlwing.o \
 	$(OBJS)\corelib_selstore.o \
 	$(OBJS)\corelib_spinctlg.o \
 	$(OBJS)\corelib_splitter.o \
+	$(OBJS)\corelib_srchctlg.o \
 	$(OBJS)\corelib_textdlgg.o \
 	$(OBJS)\corelib_tipwin.o \
 	$(OBJS)\corelib_toolbkg.o \
 	$(OBJS)\corelib_treectlg.o \
@@ -3917,9 +3933,9 @@
 
 ifeq ($(MONOLITHIC),1)
 ifeq ($(SHARED),1)
 $(LIBDIRNAME)\wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_gcc$(VENDORTAG).dll: $(MONODLL_OBJECTS) $(OBJS)\monodll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a
-	$(CXX) -shared -fPIC -o $@ $(MONODLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32
+	$(CXX) -shared -fPIC -o $@ $(MONODLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32
 endif
 endif
 
 ifeq ($(MONOLITHIC),1)
@@ -3933,9 +3949,9 @@
 
 ifeq ($(MONOLITHIC),0)
 ifeq ($(SHARED),1)
 $(LIBDIRNAME)\wxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_gcc$(VENDORTAG).dll: $(BASEDLL_OBJECTS) $(OBJS)\basedll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a
-	$(CXX) -shared -fPIC -o $@ $(BASEDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32
+	$(CXX) -shared -fPIC -o $@ $(BASEDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32
 endif
 endif
 
 ifeq ($(MONOLITHIC),0)
@@ -3949,9 +3965,9 @@
 
 ifeq ($(MONOLITHIC),0)
 ifeq ($(SHARED),1)
 $(LIBDIRNAME)\wxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_net_gcc$(VENDORTAG).dll: $(NETDLL_OBJECTS) $(OBJS)\netdll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a $(__basedll___depname)
-	$(CXX) -shared -fPIC -o $@ $(NETDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_net.a  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
+	$(CXX) -shared -fPIC -o $@ $(NETDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_net.a  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
 endif
 endif
 
 ifeq ($(MONOLITHIC),0)
@@ -3966,9 +3982,9 @@
 ifeq ($(MONOLITHIC),0)
 ifeq ($(SHARED),1)
 ifeq ($(USE_GUI),1)
 $(LIBDIRNAME)\wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core_gcc$(VENDORTAG).dll: $(COREDLL_OBJECTS) $(OBJS)\coredll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a $(__basedll___depname)
-	$(CXX) -shared -fPIC -o $@ $(COREDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
+	$(CXX) -shared -fPIC -o $@ $(COREDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
 endif
 endif
 endif
 
@@ -3986,9 +4002,9 @@
 ifeq ($(MONOLITHIC),0)
 ifeq ($(SHARED),1)
 ifeq ($(USE_GUI),1)
 $(LIBDIRNAME)\wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_adv_gcc$(VENDORTAG).dll: $(ADVDLL_OBJECTS) $(OBJS)\advdll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a $(__coredll___depname) $(__basedll___depname)
-	$(CXX) -shared -fPIC -o $@ $(ADVDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_adv.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
+	$(CXX) -shared -fPIC -o $@ $(ADVDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_adv.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
 endif
 endif
 endif
 
@@ -4007,9 +4023,9 @@
 ifeq ($(SHARED),1)
 ifeq ($(USE_GUI),1)
 ifeq ($(USE_MEDIA),1)
 $(LIBDIRNAME)\wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_media_gcc$(VENDORTAG).dll: $(MEDIADLL_OBJECTS) $(OBJS)\mediadll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a $(__coredll___depname) $(__basedll___depname)
-	$(CXX) -shared -fPIC -o $@ $(MEDIADLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_media.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
+	$(CXX) -shared -fPIC -o $@ $(MEDIADLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_media.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
 endif
 endif
 endif
 endif
@@ -4030,9 +4046,9 @@
 ifeq ($(MONOLITHIC),0)
 ifeq ($(SHARED),1)
 ifeq ($(USE_ODBC),1)
 $(LIBDIRNAME)\wxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_odbc_gcc$(VENDORTAG).dll: $(ODBCDLL_OBJECTS) $(OBJS)\odbcdll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a $(__basedll___depname)
-	$(CXX) -shared -fPIC -o $@ $(ODBCDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_odbc.a  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
+	$(CXX) -shared -fPIC -o $@ $(ODBCDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_odbc.a  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
 endif
 endif
 endif
 
@@ -4051,9 +4067,9 @@
 ifeq ($(SHARED),1)
 ifeq ($(USE_GUI),1)
 ifeq ($(USE_ODBC),1)
 $(LIBDIRNAME)\wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_dbgrid_gcc$(VENDORTAG).dll: $(DBGRIDDLL_OBJECTS) $(OBJS)\dbgriddll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a $(__advdll___depname) $(__odbcdll___depname) $(__coredll___depname) $(__basedll___depname)
-	$(CXX) -shared -fPIC -o $@ $(DBGRIDDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_dbgrid.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_adv.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_odbc.a $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
+	$(CXX) -shared -fPIC -o $@ $(DBGRIDDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_dbgrid.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_adv.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_odbc.a $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
 endif
 endif
 endif
 endif
@@ -4075,9 +4091,9 @@
 ifeq ($(SHARED),1)
 ifeq ($(USE_GUI),1)
 ifeq ($(USE_HTML),1)
 $(LIBDIRNAME)\wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_html_gcc$(VENDORTAG).dll: $(HTMLDLL_OBJECTS) $(OBJS)\htmldll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a $(__coredll___depname) $(__basedll___depname)
-	$(CXX) -shared -fPIC -o $@ $(HTMLDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_html.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
+	$(CXX) -shared -fPIC -o $@ $(HTMLDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_html.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
 endif
 endif
 endif
 endif
@@ -4099,9 +4115,9 @@
 ifeq ($(SHARED),1)
 ifeq ($(USE_GUI),1)
 ifeq ($(USE_QA),1)
 $(LIBDIRNAME)\wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_qa_gcc$(VENDORTAG).dll: $(QADLL_OBJECTS) $(OBJS)\qadll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a $(__coredll___depname) $(__basedll___depname) $(__xmldll___depname)
-	$(CXX) -shared -fPIC -o $@ $(QADLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_qa.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_xml.a
+	$(CXX) -shared -fPIC -o $@ $(QADLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_qa.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_xml.a
 endif
 endif
 endif
 endif
@@ -4121,9 +4137,9 @@
 
 ifeq ($(MONOLITHIC),0)
 ifeq ($(SHARED),1)
 $(LIBDIRNAME)\wxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_xml_gcc$(VENDORTAG).dll: $(XMLDLL_OBJECTS) $(OBJS)\xmldll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a $(__basedll___depname)
-	$(CXX) -shared -fPIC -o $@ $(XMLDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_xml.a  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
+	$(CXX) -shared -fPIC -o $@ $(XMLDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_xml.a  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
 endif
 endif
 
 ifeq ($(MONOLITHIC),0)
@@ -4138,9 +4154,9 @@
 ifeq ($(MONOLITHIC),0)
 ifeq ($(SHARED),1)
 ifeq ($(USE_XRC),1)
 $(LIBDIRNAME)\wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_xrc_gcc$(VENDORTAG).dll: $(XRCDLL_OBJECTS) $(OBJS)\xrcdll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a $(__htmldll___depname) $(__advdll___depname) $(__coredll___depname) $(__xmldll___depname) $(__basedll___depname)
-	$(CXX) -shared -fPIC -o $@ $(XRCDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_xrc.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_html.a $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_adv.a $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_xml.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
+	$(CXX) -shared -fPIC -o $@ $(XRCDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_xrc.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_html.a $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_adv.a $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_xml.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
 endif
 endif
 endif
 
@@ -4158,9 +4174,9 @@
 ifeq ($(MONOLITHIC),0)
 ifeq ($(SHARED),1)
 ifeq ($(USE_AUI),1)
 $(LIBDIRNAME)\wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_aui_gcc$(VENDORTAG).dll: $(AUIDLL_OBJECTS) $(OBJS)\auidll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a $(__advdll___depname) $(__coredll___depname) $(__basedll___depname)
-	$(CXX) -shared -fPIC -o $@ $(AUIDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_aui.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_adv.a $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
+	$(CXX) -shared -fPIC -o $@ $(AUIDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_aui.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_adv.a $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
 endif
 endif
 endif
 
@@ -4178,9 +4194,9 @@
 ifeq ($(MONOLITHIC),0)
 ifeq ($(SHARED),1)
 ifeq ($(USE_RICHTEXT),1)
 $(LIBDIRNAME)\wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_richtext_gcc$(VENDORTAG).dll: $(RICHTEXTDLL_OBJECTS) $(OBJS)\richtextdll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a $(__advdll___depname) $(__htmldll___depname) $(__xmldll___depname) $(__coredll___depname) $(__basedll___depname)
-	$(CXX) -shared -fPIC -o $@ $(RICHTEXTDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_richtext.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_adv.a $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_html.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_xml.a $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
+	$(CXX) -shared -fPIC -o $@ $(RICHTEXTDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_richtext.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_adv.a $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_html.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_xml.a $(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.a $(LIBDIRNAME)\libwxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).a
 endif
 endif
 endif
 
@@ -4198,9 +4214,9 @@
 ifeq ($(SHARED),1)
 ifeq ($(USE_GUI),1)
 ifeq ($(USE_OPENGL),1)
 $(LIBDIRNAME)\wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_gl_gcc$(VENDORTAG).dll: $(GLDLL_OBJECTS) $(OBJS)\gldll_version_rc.o $(__wxtiff___depname) $(__wxjpeg___depname) $(__wxpng___depname) $(LIBDIRNAME)\libwxexpat$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxzlib$(WXDEBUGFLAG).a $(LIBDIRNAME)\libwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).a $(__basedll___depname) $(__coredll___depname)
-	$(CXX) -shared -fPIC -o $@ $(GLDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib,$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_gl.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(__WXLIBGLDEP_CORE_p) $(__WXLIBGLDEP_BASE_p) $(__WXLIB_MONO_p) -lopengl32 -lglu32
+	$(CXX) -shared -fPIC -o $@ $(GLDLL_OBJECTS) $(LDFLAGS) $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--out-implib=$(LIBDIRNAME)\libwx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_gl.a  $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  -lwxzlib$(WXDEBUGFLAG)  -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lodbc32 $(__WXLIBGLDEP_CORE_p) $(__WXLIBGLDEP_BASE_p) $(__WXLIB_MONO_p) -lopengl32 -lglu32
 endif
 endif
 endif
 
@@ -6378,8 +6394,13 @@
 	$(CXX) -c -o $@ $(MONODLL_CXXFLAGS) $(CPPDEPS) $<
 endif
 
 ifeq ($(USE_GUI),1)
+$(OBJS)\monodll_srchcmn.o: ../../src/common/srchcmn.cpp
+	$(CXX) -c -o $@ $(MONODLL_CXXFLAGS) $(CPPDEPS) $<
+endif
+
+ifeq ($(USE_GUI),1)
 $(OBJS)\monodll_statbar.o: ../../src/common/statbar.cpp
 	$(CXX) -c -o $@ $(MONODLL_CXXFLAGS) $(CPPDEPS) $<
 endif
 
@@ -6553,8 +6574,13 @@
 	$(CXX) -c -o $@ $(MONODLL_CXXFLAGS) $(CPPDEPS) $<
 endif
 
 ifeq ($(USE_GUI),1)
+$(OBJS)\monodll_srchctlg.o: ../../src/generic/srchctlg.cpp
+	$(CXX) -c -o $@ $(MONODLL_CXXFLAGS) $(CPPDEPS) $<
+endif
+
+ifeq ($(USE_GUI),1)
 $(OBJS)\monodll_textdlgg.o: ../../src/generic/textdlgg.cpp
 	$(CXX) -c -o $@ $(MONODLL_CXXFLAGS) $(CPPDEPS) $<
 endif
 
@@ -8465,8 +8491,13 @@
 	$(CXX) -c -o $@ $(MONOLIB_CXXFLAGS) $(CPPDEPS) $<
 endif
 
 ifeq ($(USE_GUI),1)
+$(OBJS)\monolib_srchcmn.o: ../../src/common/srchcmn.cpp
+	$(CXX) -c -o $@ $(MONOLIB_CXXFLAGS) $(CPPDEPS) $<
+endif
+
+ifeq ($(USE_GUI),1)
 $(OBJS)\monolib_statbar.o: ../../src/common/statbar.cpp
 	$(CXX) -c -o $@ $(MONOLIB_CXXFLAGS) $(CPPDEPS) $<
 endif
 
@@ -8640,8 +8671,13 @@
 	$(CXX) -c -o $@ $(MONOLIB_CXXFLAGS) $(CPPDEPS) $<
 endif
 
 ifeq ($(USE_GUI),1)
+$(OBJS)\monolib_srchctlg.o: ../../src/generic/srchctlg.cpp
+	$(CXX) -c -o $@ $(MONOLIB_CXXFLAGS) $(CPPDEPS) $<
+endif
+
+ifeq ($(USE_GUI),1)
 $(OBJS)\monolib_textdlgg.o: ../../src/generic/textdlgg.cpp
 	$(CXX) -c -o $@ $(MONOLIB_CXXFLAGS) $(CPPDEPS) $<
 endif
 
@@ -10576,8 +10612,13 @@
 	$(CXX) -c -o $@ $(COREDLL_CXXFLAGS) $(CPPDEPS) $<
 endif
 
 ifeq ($(USE_GUI),1)
+$(OBJS)\coredll_srchcmn.o: ../../src/common/srchcmn.cpp
+	$(CXX) -c -o $@ $(COREDLL_CXXFLAGS) $(CPPDEPS) $<
+endif
+
+ifeq ($(USE_GUI),1)
 $(OBJS)\coredll_statbar.o: ../../src/common/statbar.cpp
 	$(CXX) -c -o $@ $(COREDLL_CXXFLAGS) $(CPPDEPS) $<
 endif
 
@@ -10751,8 +10792,13 @@
 	$(CXX) -c -o $@ $(COREDLL_CXXFLAGS) $(CPPDEPS) $<
 endif
 
 ifeq ($(USE_GUI),1)
+$(OBJS)\coredll_srchctlg.o: ../../src/generic/srchctlg.cpp
+	$(CXX) -c -o $@ $(COREDLL_CXXFLAGS) $(CPPDEPS) $<
+endif
+
+ifeq ($(USE_GUI),1)
 $(OBJS)\coredll_textdlgg.o: ../../src/generic/textdlgg.cpp
 	$(CXX) -c -o $@ $(COREDLL_CXXFLAGS) $(CPPDEPS) $<
 endif
 
@@ -11941,8 +11987,13 @@
 	$(CXX) -c -o $@ $(CORELIB_CXXFLAGS) $(CPPDEPS) $<
 endif
 
 ifeq ($(USE_GUI),1)
+$(OBJS)\corelib_srchcmn.o: ../../src/common/srchcmn.cpp
+	$(CXX) -c -o $@ $(CORELIB_CXXFLAGS) $(CPPDEPS) $<
+endif
+
+ifeq ($(USE_GUI),1)
 $(OBJS)\corelib_statbar.o: ../../src/common/statbar.cpp
 	$(CXX) -c -o $@ $(CORELIB_CXXFLAGS) $(CPPDEPS) $<
 endif
 
@@ -12112,8 +12163,13 @@
 endif
 
 ifeq ($(USE_GUI),1)
 $(OBJS)\corelib_splitter.o: ../../src/generic/splitter.cpp
+	$(CXX) -c -o $@ $(CORELIB_CXXFLAGS) $(CPPDEPS) $<
+endif
+
+ifeq ($(USE_GUI),1)
+$(OBJS)\corelib_srchctlg.o: ../../src/generic/srchctlg.cpp
 	$(CXX) -c -o $@ $(CORELIB_CXXFLAGS) $(CPPDEPS) $<
 endif
 
 ifeq ($(USE_GUI),1)
Index: build/msw/makefile.vc
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/msw/makefile.vc,v
retrieving revision 1.155
diff -u -4 -r1.155 makefile.vc
--- build/msw/makefile.vc	2006/11/10 02:31:38	1.155
+++ build/msw/makefile.vc	2006/12/10 07:47:06
@@ -1656,8 +1656,9 @@
 	$(OBJS)\monodll_rendcmn.obj \
 	$(OBJS)\monodll_rgncmn.obj \
 	$(OBJS)\monodll_settcmn.obj \
 	$(OBJS)\monodll_sizer.obj \
+	$(OBJS)\monodll_srchcmn.obj \
 	$(OBJS)\monodll_statbar.obj \
 	$(OBJS)\monodll_stockitem.obj \
 	$(OBJS)\monodll_tbarbase.obj \
 	$(OBJS)\monodll_textcmn.obj \
@@ -1691,8 +1692,9 @@
 	$(OBJS)\monodll_scrlwing.obj \
 	$(OBJS)\monodll_selstore.obj \
 	$(OBJS)\monodll_spinctlg.obj \
 	$(OBJS)\monodll_splitter.obj \
+	$(OBJS)\monodll_srchctlg.obj \
 	$(OBJS)\monodll_textdlgg.obj \
 	$(OBJS)\monodll_tipwin.obj \
 	$(OBJS)\monodll_toolbkg.obj \
 	$(OBJS)\monodll_treectlg.obj \
@@ -1879,8 +1881,9 @@
 	$(OBJS)\monodll_rendcmn.obj \
 	$(OBJS)\monodll_rgncmn.obj \
 	$(OBJS)\monodll_settcmn.obj \
 	$(OBJS)\monodll_sizer.obj \
+	$(OBJS)\monodll_srchcmn.obj \
 	$(OBJS)\monodll_statbar.obj \
 	$(OBJS)\monodll_stockitem.obj \
 	$(OBJS)\monodll_tbarbase.obj \
 	$(OBJS)\monodll_textcmn.obj \
@@ -1914,8 +1917,9 @@
 	$(OBJS)\monodll_scrlwing.obj \
 	$(OBJS)\monodll_selstore.obj \
 	$(OBJS)\monodll_spinctlg.obj \
 	$(OBJS)\monodll_splitter.obj \
+	$(OBJS)\monodll_srchctlg.obj \
 	$(OBJS)\monodll_textdlgg.obj \
 	$(OBJS)\monodll_tipwin.obj \
 	$(OBJS)\monodll_toolbkg.obj \
 	$(OBJS)\monodll_treectlg.obj \
@@ -2274,8 +2278,9 @@
 	$(OBJS)\monolib_rendcmn.obj \
 	$(OBJS)\monolib_rgncmn.obj \
 	$(OBJS)\monolib_settcmn.obj \
 	$(OBJS)\monolib_sizer.obj \
+	$(OBJS)\monolib_srchcmn.obj \
 	$(OBJS)\monolib_statbar.obj \
 	$(OBJS)\monolib_stockitem.obj \
 	$(OBJS)\monolib_tbarbase.obj \
 	$(OBJS)\monolib_textcmn.obj \
@@ -2309,8 +2314,9 @@
 	$(OBJS)\monolib_scrlwing.obj \
 	$(OBJS)\monolib_selstore.obj \
 	$(OBJS)\monolib_spinctlg.obj \
 	$(OBJS)\monolib_splitter.obj \
+	$(OBJS)\monolib_srchctlg.obj \
 	$(OBJS)\monolib_textdlgg.obj \
 	$(OBJS)\monolib_tipwin.obj \
 	$(OBJS)\monolib_toolbkg.obj \
 	$(OBJS)\monolib_treectlg.obj \
@@ -2497,8 +2503,9 @@
 	$(OBJS)\monolib_rendcmn.obj \
 	$(OBJS)\monolib_rgncmn.obj \
 	$(OBJS)\monolib_settcmn.obj \
 	$(OBJS)\monolib_sizer.obj \
+	$(OBJS)\monolib_srchcmn.obj \
 	$(OBJS)\monolib_statbar.obj \
 	$(OBJS)\monolib_stockitem.obj \
 	$(OBJS)\monolib_tbarbase.obj \
 	$(OBJS)\monolib_textcmn.obj \
@@ -2532,8 +2539,9 @@
 	$(OBJS)\monolib_scrlwing.obj \
 	$(OBJS)\monolib_selstore.obj \
 	$(OBJS)\monolib_spinctlg.obj \
 	$(OBJS)\monolib_splitter.obj \
+	$(OBJS)\monolib_srchctlg.obj \
 	$(OBJS)\monolib_textdlgg.obj \
 	$(OBJS)\monolib_tipwin.obj \
 	$(OBJS)\monolib_toolbkg.obj \
 	$(OBJS)\monolib_treectlg.obj \
@@ -2824,8 +2832,9 @@
 	$(OBJS)\coredll_rendcmn.obj \
 	$(OBJS)\coredll_rgncmn.obj \
 	$(OBJS)\coredll_settcmn.obj \
 	$(OBJS)\coredll_sizer.obj \
+	$(OBJS)\coredll_srchcmn.obj \
 	$(OBJS)\coredll_statbar.obj \
 	$(OBJS)\coredll_stockitem.obj \
 	$(OBJS)\coredll_tbarbase.obj \
 	$(OBJS)\coredll_textcmn.obj \
@@ -2859,8 +2868,9 @@
 	$(OBJS)\coredll_scrlwing.obj \
 	$(OBJS)\coredll_selstore.obj \
 	$(OBJS)\coredll_spinctlg.obj \
 	$(OBJS)\coredll_splitter.obj \
+	$(OBJS)\coredll_srchctlg.obj \
 	$(OBJS)\coredll_textdlgg.obj \
 	$(OBJS)\coredll_tipwin.obj \
 	$(OBJS)\coredll_toolbkg.obj \
 	$(OBJS)\coredll_treectlg.obj \
@@ -3047,8 +3057,9 @@
 	$(OBJS)\coredll_rendcmn.obj \
 	$(OBJS)\coredll_rgncmn.obj \
 	$(OBJS)\coredll_settcmn.obj \
 	$(OBJS)\coredll_sizer.obj \
+	$(OBJS)\coredll_srchcmn.obj \
 	$(OBJS)\coredll_statbar.obj \
 	$(OBJS)\coredll_stockitem.obj \
 	$(OBJS)\coredll_tbarbase.obj \
 	$(OBJS)\coredll_textcmn.obj \
@@ -3082,8 +3093,9 @@
 	$(OBJS)\coredll_scrlwing.obj \
 	$(OBJS)\coredll_selstore.obj \
 	$(OBJS)\coredll_spinctlg.obj \
 	$(OBJS)\coredll_splitter.obj \
+	$(OBJS)\coredll_srchctlg.obj \
 	$(OBJS)\coredll_textdlgg.obj \
 	$(OBJS)\coredll_tipwin.obj \
 	$(OBJS)\coredll_toolbkg.obj \
 	$(OBJS)\coredll_treectlg.obj \
@@ -3277,8 +3289,9 @@
 	$(OBJS)\corelib_rendcmn.obj \
 	$(OBJS)\corelib_rgncmn.obj \
 	$(OBJS)\corelib_settcmn.obj \
 	$(OBJS)\corelib_sizer.obj \
+	$(OBJS)\corelib_srchcmn.obj \
 	$(OBJS)\corelib_statbar.obj \
 	$(OBJS)\corelib_stockitem.obj \
 	$(OBJS)\corelib_tbarbase.obj \
 	$(OBJS)\corelib_textcmn.obj \
@@ -3312,8 +3325,9 @@
 	$(OBJS)\corelib_scrlwing.obj \
 	$(OBJS)\corelib_selstore.obj \
 	$(OBJS)\corelib_spinctlg.obj \
 	$(OBJS)\corelib_splitter.obj \
+	$(OBJS)\corelib_srchctlg.obj \
 	$(OBJS)\corelib_textdlgg.obj \
 	$(OBJS)\corelib_tipwin.obj \
 	$(OBJS)\corelib_toolbkg.obj \
 	$(OBJS)\corelib_treectlg.obj \
@@ -3500,8 +3514,9 @@
 	$(OBJS)\corelib_rendcmn.obj \
 	$(OBJS)\corelib_rgncmn.obj \
 	$(OBJS)\corelib_settcmn.obj \
 	$(OBJS)\corelib_sizer.obj \
+	$(OBJS)\corelib_srchcmn.obj \
 	$(OBJS)\corelib_statbar.obj \
 	$(OBJS)\corelib_stockitem.obj \
 	$(OBJS)\corelib_tbarbase.obj \
 	$(OBJS)\corelib_textcmn.obj \
@@ -3535,8 +3550,9 @@
 	$(OBJS)\corelib_scrlwing.obj \
 	$(OBJS)\corelib_selstore.obj \
 	$(OBJS)\corelib_spinctlg.obj \
 	$(OBJS)\corelib_splitter.obj \
+	$(OBJS)\corelib_srchctlg.obj \
 	$(OBJS)\corelib_textdlgg.obj \
 	$(OBJS)\corelib_tipwin.obj \
 	$(OBJS)\corelib_toolbkg.obj \
 	$(OBJS)\corelib_treectlg.obj \
@@ -6494,8 +6510,13 @@
 	$(CXX) /c /nologo /TP /Fo$@ $(MONODLL_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
+$(OBJS)\monodll_srchcmn.obj: ..\..\src\common\srchcmn.cpp
+	$(CXX) /c /nologo /TP /Fo$@ $(MONODLL_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
 $(OBJS)\monodll_statbar.obj: ..\..\src\common\statbar.cpp
 	$(CXX) /c /nologo /TP /Fo$@ $(MONODLL_CXXFLAGS) $**
 !endif
 
@@ -6669,8 +6690,13 @@
 	$(CXX) /c /nologo /TP /Fo$@ $(MONODLL_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
+$(OBJS)\monodll_srchctlg.obj: ..\..\src\generic\srchctlg.cpp
+	$(CXX) /c /nologo /TP /Fo$@ $(MONODLL_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
 $(OBJS)\monodll_textdlgg.obj: ..\..\src\generic\textdlgg.cpp
 	$(CXX) /c /nologo /TP /Fo$@ $(MONODLL_CXXFLAGS) $**
 !endif
 
@@ -8481,8 +8507,13 @@
 	$(CXX) /c /nologo /TP /Fo$@ $(MONOLIB_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
+$(OBJS)\monolib_srchcmn.obj: ..\..\src\common\srchcmn.cpp
+	$(CXX) /c /nologo /TP /Fo$@ $(MONOLIB_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
 $(OBJS)\monolib_statbar.obj: ..\..\src\common\statbar.cpp
 	$(CXX) /c /nologo /TP /Fo$@ $(MONOLIB_CXXFLAGS) $**
 !endif
 
@@ -8656,8 +8687,13 @@
 	$(CXX) /c /nologo /TP /Fo$@ $(MONOLIB_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
+$(OBJS)\monolib_srchctlg.obj: ..\..\src\generic\srchctlg.cpp
+	$(CXX) /c /nologo /TP /Fo$@ $(MONOLIB_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
 $(OBJS)\monolib_textdlgg.obj: ..\..\src\generic\textdlgg.cpp
 	$(CXX) /c /nologo /TP /Fo$@ $(MONOLIB_CXXFLAGS) $**
 !endif
 
@@ -10492,8 +10528,13 @@
 	$(CXX) /c /nologo /TP /Fo$@ $(COREDLL_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
+$(OBJS)\coredll_srchcmn.obj: ..\..\src\common\srchcmn.cpp
+	$(CXX) /c /nologo /TP /Fo$@ $(COREDLL_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
 $(OBJS)\coredll_statbar.obj: ..\..\src\common\statbar.cpp
 	$(CXX) /c /nologo /TP /Fo$@ $(COREDLL_CXXFLAGS) $**
 !endif
 
@@ -10667,8 +10708,13 @@
 	$(CXX) /c /nologo /TP /Fo$@ $(COREDLL_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
+$(OBJS)\coredll_srchctlg.obj: ..\..\src\generic\srchctlg.cpp
+	$(CXX) /c /nologo /TP /Fo$@ $(COREDLL_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
 $(OBJS)\coredll_textdlgg.obj: ..\..\src\generic\textdlgg.cpp
 	$(CXX) /c /nologo /TP /Fo$@ $(COREDLL_CXXFLAGS) $**
 !endif
 
@@ -11757,8 +11803,13 @@
 	$(CXX) /c /nologo /TP /Fo$@ $(CORELIB_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
+$(OBJS)\corelib_srchcmn.obj: ..\..\src\common\srchcmn.cpp
+	$(CXX) /c /nologo /TP /Fo$@ $(CORELIB_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
 $(OBJS)\corelib_statbar.obj: ..\..\src\common\statbar.cpp
 	$(CXX) /c /nologo /TP /Fo$@ $(CORELIB_CXXFLAGS) $**
 !endif
 
@@ -11928,8 +11979,13 @@
 !endif
 
 !if "$(USE_GUI)" == "1"
 $(OBJS)\corelib_splitter.obj: ..\..\src\generic\splitter.cpp
+	$(CXX) /c /nologo /TP /Fo$@ $(CORELIB_CXXFLAGS) $**
+!endif
+
+!if "$(USE_GUI)" == "1"
+$(OBJS)\corelib_srchctlg.obj: ..\..\src\generic\srchctlg.cpp
 	$(CXX) /c /nologo /TP /Fo$@ $(CORELIB_CXXFLAGS) $**
 !endif
 
 !if "$(USE_GUI)" == "1"
Index: build/msw/makefile.wat
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/msw/makefile.wat,v
retrieving revision 1.152
diff -u -4 -r1.152 makefile.wat
--- build/msw/makefile.wat	2006/11/10 02:31:37	1.152
+++ build/msw/makefile.wat	2006/12/10 07:47:06
@@ -382,8 +382,9 @@
 	$(OBJS)\monodll_rendcmn.obj &
 	$(OBJS)\monodll_rgncmn.obj &
 	$(OBJS)\monodll_settcmn.obj &
 	$(OBJS)\monodll_sizer.obj &
+	$(OBJS)\monodll_srchcmn.obj &
 	$(OBJS)\monodll_statbar.obj &
 	$(OBJS)\monodll_stockitem.obj &
 	$(OBJS)\monodll_tbarbase.obj &
 	$(OBJS)\monodll_textcmn.obj &
@@ -417,8 +418,9 @@
 	$(OBJS)\monodll_scrlwing.obj &
 	$(OBJS)\monodll_selstore.obj &
 	$(OBJS)\monodll_spinctlg.obj &
 	$(OBJS)\monodll_splitter.obj &
+	$(OBJS)\monodll_srchctlg.obj &
 	$(OBJS)\monodll_textdlgg.obj &
 	$(OBJS)\monodll_tipwin.obj &
 	$(OBJS)\monodll_toolbkg.obj &
 	$(OBJS)\monodll_treectlg.obj &
@@ -607,8 +609,9 @@
 	$(OBJS)\monodll_rendcmn.obj &
 	$(OBJS)\monodll_rgncmn.obj &
 	$(OBJS)\monodll_settcmn.obj &
 	$(OBJS)\monodll_sizer.obj &
+	$(OBJS)\monodll_srchcmn.obj &
 	$(OBJS)\monodll_statbar.obj &
 	$(OBJS)\monodll_stockitem.obj &
 	$(OBJS)\monodll_tbarbase.obj &
 	$(OBJS)\monodll_textcmn.obj &
@@ -642,8 +645,9 @@
 	$(OBJS)\monodll_scrlwing.obj &
 	$(OBJS)\monodll_selstore.obj &
 	$(OBJS)\monodll_spinctlg.obj &
 	$(OBJS)\monodll_splitter.obj &
+	$(OBJS)\monodll_srchctlg.obj &
 	$(OBJS)\monodll_textdlgg.obj &
 	$(OBJS)\monodll_tipwin.obj &
 	$(OBJS)\monodll_toolbkg.obj &
 	$(OBJS)\monodll_treectlg.obj &
@@ -1004,8 +1008,9 @@
 	$(OBJS)\monolib_rendcmn.obj &
 	$(OBJS)\monolib_rgncmn.obj &
 	$(OBJS)\monolib_settcmn.obj &
 	$(OBJS)\monolib_sizer.obj &
+	$(OBJS)\monolib_srchcmn.obj &
 	$(OBJS)\monolib_statbar.obj &
 	$(OBJS)\monolib_stockitem.obj &
 	$(OBJS)\monolib_tbarbase.obj &
 	$(OBJS)\monolib_textcmn.obj &
@@ -1039,8 +1044,9 @@
 	$(OBJS)\monolib_scrlwing.obj &
 	$(OBJS)\monolib_selstore.obj &
 	$(OBJS)\monolib_spinctlg.obj &
 	$(OBJS)\monolib_splitter.obj &
+	$(OBJS)\monolib_srchctlg.obj &
 	$(OBJS)\monolib_textdlgg.obj &
 	$(OBJS)\monolib_tipwin.obj &
 	$(OBJS)\monolib_toolbkg.obj &
 	$(OBJS)\monolib_treectlg.obj &
@@ -1229,8 +1235,9 @@
 	$(OBJS)\monolib_rendcmn.obj &
 	$(OBJS)\monolib_rgncmn.obj &
 	$(OBJS)\monolib_settcmn.obj &
 	$(OBJS)\monolib_sizer.obj &
+	$(OBJS)\monolib_srchcmn.obj &
 	$(OBJS)\monolib_statbar.obj &
 	$(OBJS)\monolib_stockitem.obj &
 	$(OBJS)\monolib_tbarbase.obj &
 	$(OBJS)\monolib_textcmn.obj &
@@ -1264,8 +1271,9 @@
 	$(OBJS)\monolib_scrlwing.obj &
 	$(OBJS)\monolib_selstore.obj &
 	$(OBJS)\monolib_spinctlg.obj &
 	$(OBJS)\monolib_splitter.obj &
+	$(OBJS)\monolib_srchctlg.obj &
 	$(OBJS)\monolib_textdlgg.obj &
 	$(OBJS)\monolib_tipwin.obj &
 	$(OBJS)\monolib_toolbkg.obj &
 	$(OBJS)\monolib_treectlg.obj &
@@ -1547,8 +1555,9 @@
 	$(OBJS)\coredll_rendcmn.obj &
 	$(OBJS)\coredll_rgncmn.obj &
 	$(OBJS)\coredll_settcmn.obj &
 	$(OBJS)\coredll_sizer.obj &
+	$(OBJS)\coredll_srchcmn.obj &
 	$(OBJS)\coredll_statbar.obj &
 	$(OBJS)\coredll_stockitem.obj &
 	$(OBJS)\coredll_tbarbase.obj &
 	$(OBJS)\coredll_textcmn.obj &
@@ -1582,8 +1591,9 @@
 	$(OBJS)\coredll_scrlwing.obj &
 	$(OBJS)\coredll_selstore.obj &
 	$(OBJS)\coredll_spinctlg.obj &
 	$(OBJS)\coredll_splitter.obj &
+	$(OBJS)\coredll_srchctlg.obj &
 	$(OBJS)\coredll_textdlgg.obj &
 	$(OBJS)\coredll_tipwin.obj &
 	$(OBJS)\coredll_toolbkg.obj &
 	$(OBJS)\coredll_treectlg.obj &
@@ -1772,8 +1782,9 @@
 	$(OBJS)\coredll_rendcmn.obj &
 	$(OBJS)\coredll_rgncmn.obj &
 	$(OBJS)\coredll_settcmn.obj &
 	$(OBJS)\coredll_sizer.obj &
+	$(OBJS)\coredll_srchcmn.obj &
 	$(OBJS)\coredll_statbar.obj &
 	$(OBJS)\coredll_stockitem.obj &
 	$(OBJS)\coredll_tbarbase.obj &
 	$(OBJS)\coredll_textcmn.obj &
@@ -1807,8 +1818,9 @@
 	$(OBJS)\coredll_scrlwing.obj &
 	$(OBJS)\coredll_selstore.obj &
 	$(OBJS)\coredll_spinctlg.obj &
 	$(OBJS)\coredll_splitter.obj &
+	$(OBJS)\coredll_srchctlg.obj &
 	$(OBJS)\coredll_textdlgg.obj &
 	$(OBJS)\coredll_tipwin.obj &
 	$(OBJS)\coredll_toolbkg.obj &
 	$(OBJS)\coredll_treectlg.obj &
@@ -2004,8 +2016,9 @@
 	$(OBJS)\corelib_rendcmn.obj &
 	$(OBJS)\corelib_rgncmn.obj &
 	$(OBJS)\corelib_settcmn.obj &
 	$(OBJS)\corelib_sizer.obj &
+	$(OBJS)\corelib_srchcmn.obj &
 	$(OBJS)\corelib_statbar.obj &
 	$(OBJS)\corelib_stockitem.obj &
 	$(OBJS)\corelib_tbarbase.obj &
 	$(OBJS)\corelib_textcmn.obj &
@@ -2039,8 +2052,9 @@
 	$(OBJS)\corelib_scrlwing.obj &
 	$(OBJS)\corelib_selstore.obj &
 	$(OBJS)\corelib_spinctlg.obj &
 	$(OBJS)\corelib_splitter.obj &
+	$(OBJS)\corelib_srchctlg.obj &
 	$(OBJS)\corelib_textdlgg.obj &
 	$(OBJS)\corelib_tipwin.obj &
 	$(OBJS)\corelib_toolbkg.obj &
 	$(OBJS)\corelib_treectlg.obj &
@@ -2229,8 +2243,9 @@
 	$(OBJS)\corelib_rendcmn.obj &
 	$(OBJS)\corelib_rgncmn.obj &
 	$(OBJS)\corelib_settcmn.obj &
 	$(OBJS)\corelib_sizer.obj &
+	$(OBJS)\corelib_srchcmn.obj &
 	$(OBJS)\corelib_statbar.obj &
 	$(OBJS)\corelib_stockitem.obj &
 	$(OBJS)\corelib_tbarbase.obj &
 	$(OBJS)\corelib_textcmn.obj &
@@ -2264,8 +2279,9 @@
 	$(OBJS)\corelib_scrlwing.obj &
 	$(OBJS)\corelib_selstore.obj &
 	$(OBJS)\corelib_spinctlg.obj &
 	$(OBJS)\corelib_splitter.obj &
+	$(OBJS)\corelib_srchctlg.obj &
 	$(OBJS)\corelib_textdlgg.obj &
 	$(OBJS)\corelib_tipwin.obj &
 	$(OBJS)\corelib_toolbkg.obj &
 	$(OBJS)\corelib_treectlg.obj &
@@ -6606,8 +6622,13 @@
 	$(CXX) -bt=nt -zq -fo=$^@ $(MONODLL_CXXFLAGS) $<
 !endif
 
 !ifeq USE_GUI 1
+$(OBJS)\monodll_srchcmn.obj :  .AUTODEPEND ..\..\src\common\srchcmn.cpp
+	$(CXX) -bt=nt -zq -fo=$^@ $(MONODLL_CXXFLAGS) $<
+!endif
+
+!ifeq USE_GUI 1
 $(OBJS)\monodll_statbar.obj :  .AUTODEPEND ..\..\src\common\statbar.cpp
 	$(CXX) -bt=nt -zq -fo=$^@ $(MONODLL_CXXFLAGS) $<
 !endif
 
@@ -6781,8 +6802,13 @@
 	$(CXX) -bt=nt -zq -fo=$^@ $(MONODLL_CXXFLAGS) $<
 !endif
 
 !ifeq USE_GUI 1
+$(OBJS)\monodll_srchctlg.obj :  .AUTODEPEND ..\..\src\generic\srchctlg.cpp
+	$(CXX) -bt=nt -zq -fo=$^@ $(MONODLL_CXXFLAGS) $<
+!endif
+
+!ifeq USE_GUI 1
 $(OBJS)\monodll_textdlgg.obj :  .AUTODEPEND ..\..\src\generic\textdlgg.cpp
 	$(CXX) -bt=nt -zq -fo=$^@ $(MONODLL_CXXFLAGS) $<
 !endif
 
@@ -8693,8 +8719,13 @@
 	$(CXX) -bt=nt -zq -fo=$^@ $(MONOLIB_CXXFLAGS) $<
 !endif
 
 !ifeq USE_GUI 1
+$(OBJS)\monolib_srchcmn.obj :  .AUTODEPEND ..\..\src\common\srchcmn.cpp
+	$(CXX) -bt=nt -zq -fo=$^@ $(MONOLIB_CXXFLAGS) $<
+!endif
+
+!ifeq USE_GUI 1
 $(OBJS)\monolib_statbar.obj :  .AUTODEPEND ..\..\src\common\statbar.cpp
 	$(CXX) -bt=nt -zq -fo=$^@ $(MONOLIB_CXXFLAGS) $<
 !endif
 
@@ -8868,8 +8899,13 @@
 	$(CXX) -bt=nt -zq -fo=$^@ $(MONOLIB_CXXFLAGS) $<
 !endif
 
 !ifeq USE_GUI 1
+$(OBJS)\monolib_srchctlg.obj :  .AUTODEPEND ..\..\src\generic\srchctlg.cpp
+	$(CXX) -bt=nt -zq -fo=$^@ $(MONOLIB_CXXFLAGS) $<
+!endif
+
+!ifeq USE_GUI 1
 $(OBJS)\monolib_textdlgg.obj :  .AUTODEPEND ..\..\src\generic\textdlgg.cpp
 	$(CXX) -bt=nt -zq -fo=$^@ $(MONOLIB_CXXFLAGS) $<
 !endif
 
@@ -10804,8 +10840,13 @@
 	$(CXX) -bt=nt -zq -fo=$^@ $(COREDLL_CXXFLAGS) $<
 !endif
 
 !ifeq USE_GUI 1
+$(OBJS)\coredll_srchcmn.obj :  .AUTODEPEND ..\..\src\common\srchcmn.cpp
+	$(CXX) -bt=nt -zq -fo=$^@ $(COREDLL_CXXFLAGS) $<
+!endif
+
+!ifeq USE_GUI 1
 $(OBJS)\coredll_statbar.obj :  .AUTODEPEND ..\..\src\common\statbar.cpp
 	$(CXX) -bt=nt -zq -fo=$^@ $(COREDLL_CXXFLAGS) $<
 !endif
 
@@ -10979,8 +11020,13 @@
 	$(CXX) -bt=nt -zq -fo=$^@ $(COREDLL_CXXFLAGS) $<
 !endif
 
 !ifeq USE_GUI 1
+$(OBJS)\coredll_srchctlg.obj :  .AUTODEPEND ..\..\src\generic\srchctlg.cpp
+	$(CXX) -bt=nt -zq -fo=$^@ $(COREDLL_CXXFLAGS) $<
+!endif
+
+!ifeq USE_GUI 1
 $(OBJS)\coredll_textdlgg.obj :  .AUTODEPEND ..\..\src\generic\textdlgg.cpp
 	$(CXX) -bt=nt -zq -fo=$^@ $(COREDLL_CXXFLAGS) $<
 !endif
 
@@ -12169,8 +12215,13 @@
 	$(CXX) -bt=nt -zq -fo=$^@ $(CORELIB_CXXFLAGS) $<
 !endif
 
 !ifeq USE_GUI 1
+$(OBJS)\corelib_srchcmn.obj :  .AUTODEPEND ..\..\src\common\srchcmn.cpp
+	$(CXX) -bt=nt -zq -fo=$^@ $(CORELIB_CXXFLAGS) $<
+!endif
+
+!ifeq USE_GUI 1
 $(OBJS)\corelib_statbar.obj :  .AUTODEPEND ..\..\src\common\statbar.cpp
 	$(CXX) -bt=nt -zq -fo=$^@ $(CORELIB_CXXFLAGS) $<
 !endif
 
@@ -12340,8 +12391,13 @@
 !endif
 
 !ifeq USE_GUI 1
 $(OBJS)\corelib_splitter.obj :  .AUTODEPEND ..\..\src\generic\splitter.cpp
+	$(CXX) -bt=nt -zq -fo=$^@ $(CORELIB_CXXFLAGS) $<
+!endif
+
+!ifeq USE_GUI 1
+$(OBJS)\corelib_srchctlg.obj :  .AUTODEPEND ..\..\src\generic\srchctlg.cpp
 	$(CXX) -bt=nt -zq -fo=$^@ $(CORELIB_CXXFLAGS) $<
 !endif
 
 !ifeq USE_GUI 1
Index: build/msw/wx_core.dsp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/msw/wx_core.dsp,v
retrieving revision 1.124
diff -u -4 -r1.124 wx_core.dsp
--- build/msw/wx_core.dsp	2006/11/10 02:31:35	1.124
+++ build/msw/wx_core.dsp	2006/12/10 07:47:06
@@ -777,8 +777,12 @@
 SOURCE=..\..\src\common\sizer.cpp
 # End Source File
 # Begin Source File
 
+SOURCE=..\..\src\common\srchcmn.cpp
+# End Source File
+# Begin Source File
+
 SOURCE=..\..\src\common\statbar.cpp
 # End Source File
 # Begin Source File
 
@@ -4673,8 +4677,12 @@
 SOURCE=..\..\src\generic\splitter.cpp
 # End Source File
 # Begin Source File
 
+SOURCE=..\..\src\generic\srchctlg.cpp
+# End Source File
+# Begin Source File
+
 SOURCE=..\..\src\generic\statusbr.cpp
 
 !IF  "$(CFG)" == "core - Win32 DLL Universal Unicode Release"
 
@@ -8352,8 +8360,12 @@
 SOURCE=..\..\include\wx\generic\splitter.h
 # End Source File
 # Begin Source File
 
+SOURCE=..\..\include\wx\generic\srchctlg.h
+# End Source File
+# Begin Source File
+
 SOURCE=..\..\include\wx\generic\statusbr.h
 # End Source File
 # Begin Source File
 
@@ -9261,8 +9273,12 @@
 # End Source File
 # Begin Source File
 
 SOURCE=..\..\include\wx\splitter.h
+# End Source File
+# Begin Source File
+
+SOURCE=..\..\include\wx\srchctrl.h
 # End Source File
 # Begin Source File
 
 SOURCE=..\..\include\wx\statbmp.h
Index: docs/latex/wx/classes.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/classes.tex,v
retrieving revision 1.220
diff -u -4 -r1.220 classes.tex
--- docs/latex/wx/classes.tex	2006/11/20 12:58:21	1.220
+++ docs/latex/wx/classes.tex	2006/12/10 07:47:06
@@ -347,8 +347,9 @@
 \input semaphor.tex
 \input setcursorevt.tex
 \input ipcservr.tex
 \input hprovsmp.tex
+\input srchctrl.tex
 \input sngchdlg.tex
 \input snglinst.tex
 \input size.tex
 \input sizeevt.tex
Index: docs/latex/wx/srchctrl.tex
===================================================================
RCS file: srchctrl.tex
diff -N srchctrl.tex
--- /dev/null	Sun Dec 10 08:47:08 2006
+++ srchctrl.tex	Sun Dec 10 08:47:07 2006
@@ -0,0 +1,156 @@
+%%%%%%%%%%%%%%%%%%%%%%%%%%%% wxSearchCtrl %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
+
+\section{\class{wxSearchCtrl}}\label{wxsearchctrl}
+
+A search control is a composite control with a search button, a text 
+control, and a cancel button.
+
+\wxheading{Derived from}
+
+\helpref{wxTextCtrl}{wxsearchctrl}\\
+streambuf\\
+\helpref{wxControl}{wxcontrol}\\
+\helpref{wxWindow}{wxwindow}\\
+\helpref{wxEvtHandler}{wxevthandler}\\
+\helpref{wxObject}{wxobject}
+
+\wxheading{Include files}
+
+<wx/srchctrl.h>
+
+\wxheading{Window styles}
+
+\twocolwidtha{5cm}
+\begin{twocollist}\itemsep=0pt
+\twocolitem{\windowstyle{wxTE\_PROCESS\_ENTER}}{The control will generate
+the event wxEVT\_COMMAND\_TEXT\_ENTER (otherwise pressing Enter key
+is either processed internally by the control or used for navigation between
+dialog controls).}
+\twocolitem{\windowstyle{wxTE\_PROCESS\_TAB}}{The control will receive
+wxEVT\_CHAR events for TAB pressed - normally, TAB is used for passing to the
+next control in a dialog instead. For the control created with this style,
+you can still use Ctrl-Enter to pass to the next control from the keyboard.}
+\twocolitem{\windowstyle{wxTE\_NOHIDESEL}}{By default, the Windows text control
+doesn't show the selection when it doesn't have focus - use this style to force
+it to always show it. It doesn't do anything under other platforms.}
+\twocolitem{\windowstyle{wxTE\_LEFT}}{The text in the control will be left-justified (default).}
+\twocolitem{\windowstyle{wxTE\_CENTRE}}{The text in the control will be centered (currently wxMSW and wxGTK2 only).}
+\twocolitem{\windowstyle{wxTE\_RIGHT}}{The text in the control will be right-justified (currently wxMSW and wxGTK2 only).}
+\twocolitem{\windowstyle{wxTE\_CAPITALIZE}}{On PocketPC and Smartphone, causes the first letter to be capitalized.}
+\end{twocollist}
+
+See also \helpref{window styles overview}{windowstyles} and \helpref{wxSearchCtrl::wxSearchCtrl}{wxsearchctrlctor}.
+
+\wxheading{Event handling}
+
+To process input from a search control, use these event handler macros to direct input to member
+functions that take a \helpref{wxCommandEvent}{wxcommandevent} argument.
+
+\twocolwidtha{9cm}%
+\begin{twocollist}\itemsep=0pt
+\twocolitem{{\bf EVT\_SEARCHCTRL\_SEARCH(id, func)}}{Respond to a wxEVT\_SEARCHCTRL\_SEARCH event,
+generated when the search button is clicked.}
+\twocolitem{{\bf EVT\_SEARCHCTRL\_CANCEL(id, func)}}{Respond to a wxEVT\_SEARCHCTRL\_CANCEL event,
+generated when the cancel button is clicked.}
+\end{twocollist}%
+
+
+\latexignore{\rtfignore{\wxheading{Members}}}
+
+
+\membersection{wxSearchCtrl::wxSearchCtrl}\label{wxsearchctrlctor}
+
+\func{}{wxSearchCtrl}{\void}
+
+Default constructor.
+
+\func{}{wxSearchCtrl}{\param{wxWindow* }{parent}, \param{wxWindowID}{ id},\rtfsp
+\param{const wxString\& }{value = ``"}, \param{const wxPoint\& }{pos = wxDefaultPosition}, \param{const wxSize\& }{size = wxDefaultSize},\rtfsp
+\param{long}{ style = 0}, \param{const wxValidator\& }{validator = wxDefaultValidator}, \param{const wxString\& }{name = wxSearchCtrlNameStr}}
+
+Constructor, creating and showing a text control.
+
+\wxheading{Parameters}
+
+\docparam{parent}{Parent window. Should not be NULL.}
+
+\docparam{id}{Control identifier. A value of -1 denotes a default value.}
+
+\docparam{value}{Default text value.}
+
+\docparam{pos}{Text control position.}
+
+\docparam{size}{Text control size.}
+
+\docparam{style}{Window style. See \helpref{wxSearchCtrl}{wxsearchctrl}.}
+
+\docparam{validator}{Window validator.}
+
+\docparam{name}{Window name.}
+
+\wxheading{See also}
+
+\helpref{wxTextCtrl::Create}{wxtextctrlcreate}, \helpref{wxValidator}{wxvalidator}
+
+
+\membersection{wxSearchCtrl::\destruct{wxSearchCtrl}}\label{wxsearchctrldtor}
+
+\func{}{\destruct{wxSearchCtrl}}{\void}
+
+Destructor, destroying the search control.
+
+
+\membersection{wxSearchCtrl::SetMenu}\label{wxsearchctrlsetmenu}
+
+\func{virtual void}{SetMenu}{\param{wxMenu* }{ menu}}
+
+Sets the search control's menu object.  If there is already a menu associated with
+the search control it is deleted.
+
+
+\wxheading{Parameters}
+
+\docparam{menu}{Menu to attach to the search control.}
+
+\membersection{wxSearchCtrl::GetMenu}\label{wxsearchctrlgetmenu}
+
+\func{virtual wxMenu*}{GetMenu}{\void}
+
+Returns a pointer to the search control's menu object or NULL if there is no 
+menu attached.
+
+
+\membersection{wxSearchCtrl::SetSearchButtonVisible}\label{wxsearchctrlsetsearchbuttonvisible}
+
+\func{virtual void}{SetSearchButtonVisible}{\param{bool }{ show}}
+
+Sets the search button visibility value on the search control.  
+If there is a menu attached, the search button will be visible regardless of the search
+button visibility value. 
+
+This has no effect in Mac OS X v10.3
+
+
+\membersection{wxSearchCtrl::GetSearchButtonVisible}\label{wxsearchctrlgetsearchbuttonvisible}
+
+\func{virtual bool}{GetSearchButtonVisible}{\void}
+
+Returns the search button visibility value.  
+If there is a menu attached, the search button will be visible regardless of the search
+button visibility value. 
+
+This always returns false in Mac OS X v10.3
+
+
+\membersection{wxSearchCtrl::SetCancelButtonVisible}\label{wxsearchctrlsetcancelbuttonvisible}
+
+\func{virtual void}{SetCancelButtonVisible}{\param{bool }{ show}}
+
+Shows or hides the cancel button.
+
+
+\membersection{wxSearchCtrl::GetCancelButtonVisible}\label{wxsearchctrlgetcancelbuttonvisible}
+
+\func{virtual bool}{GetCancelButtonVisible}{\void}
+
+Indicates whether the cancel button is visible.
Index: include/wx/setup_inc.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/setup_inc.h,v
retrieving revision 1.58
diff -u -4 -r1.58 setup_inc.h
--- include/wx/setup_inc.h	2006/11/09 00:49:10	1.58
+++ include/wx/setup_inc.h	2006/12/10 07:47:07
@@ -633,8 +633,9 @@
 #define wxUSE_LISTCTRL      1   // wxListCtrl
 #define wxUSE_RADIOBOX      1   // wxRadioBox
 #define wxUSE_RADIOBTN      1   // wxRadioButton
 #define wxUSE_SCROLLBAR     1   // wxScrollBar
+#define wxUSE_SEARCHCTRL    1   // wxSearchCtrl
 #define wxUSE_SLIDER        1   // wxSlider
 #define wxUSE_SPINBTN       1   // wxSpinButton
 #define wxUSE_SPINCTRL      1   // wxSpinCtrl
 #define wxUSE_STATBOX       1   // wxStaticBox
Index: include/wx/srchctrl.h
===================================================================
RCS file: srchctrl.h
diff -N srchctrl.h
--- /dev/null	Sun Dec 10 08:47:08 2006
+++ srchctrl.h	Sun Dec 10 08:47:07 2006
@@ -0,0 +1,66 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        srchctrl.h
+// Purpose:     wxSearchCtrlBase class
+// Author:      Vince Harron
+// Modified by:
+// Created:     2006-02-18
+// RCS-ID:      
+// Copyright:   (c) Vince Harron
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_SEARCHCTRL_H_BASE_
+#define _WX_SEARCHCTRL_H_BASE_
+
+#include "wx/defs.h"
+
+#if wxUSE_SEARCHCTRL
+
+#include "wx/textctrl.h"
+
+// ----------------------------------------------------------------------------
+// constants
+// ----------------------------------------------------------------------------
+
+extern WXDLLEXPORT_DATA(const wxChar) wxSearchCtrlNameStr[];
+
+BEGIN_DECLARE_EVENT_TYPES()
+    DECLARE_EVENT_TYPE(wxEVT_COMMAND_SEARCHCTRL_CANCEL, 1119)
+    DECLARE_EVENT_TYPE(wxEVT_COMMAND_SEARCHCTRL_SEARCH, 1120)
+END_DECLARE_EVENT_TYPES()
+
+// ----------------------------------------------------------------------------
+// a search ctrl is a text control with a search button and a cancel button
+// it is based on the MacOSX 10.3 control HISearchFieldCreate
+// ----------------------------------------------------------------------------
+
+// ----------------------------------------------------------------------------
+// include the platform-dependent class implementation
+// ----------------------------------------------------------------------------
+
+#if !defined(__WXUNIVERSAL__) && defined( __WXMAC__ ) && defined( __WXMAC_OSX__ ) && ( MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_3 )
+    // search control was introduced in Mac OS X 10.3 Panther
+    #define USE_NATIVE_SEARCH_CONTROL 1
+#else
+    //not supported on these platforms, leave 0
+    #define USE_NATIVE_SEARCH_CONTROL 0
+#endif
+
+#if USE_NATIVE_SEARCH_CONTROL
+    #if defined(__WXMAC__)
+        #include "wx/mac/srchctrl.h"
+    #endif
+#else
+    #include "wx/generic/srchctlg.h"
+#endif
+
+// macros for handling search events
+#define EVT_SEARCHCTRL_CANCEL(id, fn) \
+    wx__DECLARE_EVT1(wxEVT_COMMAND_SEARCHCTRL_CANCEL, id, wxCommandEventHandler(fn))
+
+#define EVT_SEARCHCTRL_SEARCH(id, fn) \
+    wx__DECLARE_EVT1(wxEVT_COMMAND_SEARCHCTRL_SEARCH, id, wxCommandEventHandler(fn))
+
+#endif // wxUSE_SEARCHCTRL
+
+#endif // _WX_SEARCHCTRL_H_BASE_
Index: include/wx/generic/srchctlg.h
===================================================================
RCS file: srchctlg.h
diff -N srchctlg.h
--- /dev/null	Sun Dec 10 08:47:08 2006
+++ srchctlg.h	Sun Dec 10 08:47:07 2006
@@ -0,0 +1,268 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        wx/generic/srchctlg.h
+// Purpose:     generic wxSearchCtrl class
+// Author:      Vince Harron
+// Modified by:
+// Created:     2006-02-19
+// RCS-ID:      
+// Copyright:   Vince Harron
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_GENERIC_SEARCHCTRL_H_
+#define _WX_GENERIC_SEARCHCTRL_H_
+
+#if wxUSE_SEARCHCTRL
+
+#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
+    #pragma interface "srchctlg.h"
+#endif
+
+class WXDLLEXPORT wxSearchButton;
+class WXDLLEXPORT wxSearchTextCtrl;
+
+class WXDLLEXPORT wxSearchCtrlBase : public wxTextCtrlBase
+{
+public:
+    wxSearchCtrlBase() {}
+    virtual ~wxSearchCtrlBase() {}
+
+    // search control 
+    virtual void SetMenu( wxMenu* menu ) = 0;
+    virtual wxMenu* GetMenu() = 0;
+
+
+    // get/set options
+    virtual void SetSearchButtonVisible( bool show ) = 0;
+    virtual bool GetSearchButtonVisible() const = 0;
+
+    virtual void SetCancelButtonVisible( bool show ) = 0;
+    virtual bool GetCancelButtonVisible() const = 0;
+protected:
+};
+
+// ----------------------------------------------------------------------------
+// wxSearchCtrl is a combination of wxTextCtrl and wxSearchButton
+// ----------------------------------------------------------------------------
+
+class WXDLLEXPORT wxSearchCtrl : public wxSearchCtrlBase
+{
+public:
+    // creation
+    // --------
+
+    wxSearchCtrl();
+    wxSearchCtrl(wxWindow *parent, wxWindowID id,
+               const wxString& value = wxEmptyString,
+               const wxPoint& pos = wxDefaultPosition,
+               const wxSize& size = wxDefaultSize,
+               long style = 0,
+               const wxValidator& validator = wxDefaultValidator,
+               const wxString& name = wxSearchCtrlNameStr);
+
+    ~wxSearchCtrl();
+
+    bool Create(wxWindow *parent, wxWindowID id,
+                const wxString& value = wxEmptyString,
+                const wxPoint& pos = wxDefaultPosition,
+                const wxSize& size = wxDefaultSize,
+                long style = 0,
+                const wxValidator& validator = wxDefaultValidator,
+                const wxString& name = wxSearchCtrlNameStr);
+
+    // get/set search button menu
+    // --------------------------
+    virtual void SetMenu( wxMenu* menu );
+    virtual wxMenu* GetMenu();
+    
+    // get/set search options
+    // ----------------------
+    virtual void SetSearchButtonVisible( bool show );
+    virtual bool GetSearchButtonVisible() const;
+
+    virtual void SetCancelButtonVisible( bool show );
+    virtual bool GetCancelButtonVisible() const;
+
+    // accessors
+    // ---------
+
+    virtual wxString GetValue() const;
+    virtual void SetValue(const wxString& value);
+
+    virtual wxString GetRange(long from, long to) const;
+
+    virtual int GetLineLength(long lineNo) const;
+    virtual wxString GetLineText(long lineNo) const;
+    virtual int GetNumberOfLines() const;
+
+    virtual bool IsModified() const;
+    virtual bool IsEditable() const;
+
+    // more readable flag testing methods
+    virtual bool IsSingleLine() const;
+    virtual bool IsMultiLine() const;
+
+    // If the return values from and to are the same, there is no selection.
+    virtual void GetSelection(long* from, long* to) const;
+
+    virtual wxString GetStringSelection() const;
+
+    // operations
+    // ----------
+
+    // editing
+    virtual void Clear();
+    virtual void Replace(long from, long to, const wxString& value);
+    virtual void Remove(long from, long to);
+
+    // load/save the controls contents from/to the file
+    virtual bool LoadFile(const wxString& file);
+    virtual bool SaveFile(const wxString& file = wxEmptyString);
+
+    // sets/clears the dirty flag
+    virtual void MarkDirty();
+    virtual void DiscardEdits();
+
+    // set the max number of characters which may be entered in a single line
+    // text control
+    virtual void SetMaxLength(unsigned long WXUNUSED(len));
+
+    // writing text inserts it at the current position, appending always
+    // inserts it at the end
+    virtual void WriteText(const wxString& text);
+    virtual void AppendText(const wxString& text);
+
+    // insert the character which would have resulted from this key event,
+    // return true if anything has been inserted
+    virtual bool EmulateKeyPress(const wxKeyEvent& event);
+
+    // text control under some platforms supports the text styles: these
+    // methods allow to apply the given text style to the given selection or to
+    // set/get the style which will be used for all appended text
+    virtual bool SetStyle(long start, long end, const wxTextAttr& style);
+    virtual bool GetStyle(long position, wxTextAttr& style);
+    virtual bool SetDefaultStyle(const wxTextAttr& style);
+    virtual const wxTextAttr& GetDefaultStyle() const;
+
+    // translate between the position (which is just an index in the text ctrl
+    // considering all its contents as a single strings) and (x, y) coordinates
+    // which represent column and line.
+    virtual long XYToPosition(long x, long y) const;
+    virtual bool PositionToXY(long pos, long *x, long *y) const;
+
+    virtual void ShowPosition(long pos);
+
+    // find the character at position given in pixels
+    //
+    // NB: pt is in device coords (not adjusted for the client area origin nor
+    //     scrolling)
+    virtual wxTextCtrlHitTestResult HitTest(const wxPoint& pt, long *pos) const;
+    virtual wxTextCtrlHitTestResult HitTest(const wxPoint& pt,
+                                            wxTextCoord *col,
+                                            wxTextCoord *row) const;
+
+    // Clipboard operations
+    virtual void Copy();
+    virtual void Cut();
+    virtual void Paste();
+
+    virtual bool CanCopy() const;
+    virtual bool CanCut() const;
+    virtual bool CanPaste() const;
+
+    // Undo/redo
+    virtual void Undo();
+    virtual void Redo();
+
+    virtual bool CanUndo() const;
+    virtual bool CanRedo() const;
+
+    // Insertion point
+    virtual void SetInsertionPoint(long pos);
+    virtual void SetInsertionPointEnd();
+    virtual long GetInsertionPoint() const;
+    virtual wxTextPos GetLastPosition() const;
+
+    virtual void SetSelection(long from, long to);
+    virtual void SelectAll();
+    virtual void SetEditable(bool editable);
+
+#if 0
+
+    // override streambuf method
+#if wxHAS_TEXT_WINDOW_STREAM
+    int overflow(int i);
+#endif // wxHAS_TEXT_WINDOW_STREAM
+
+    // stream-like insertion operators: these are always available, whether we
+    // were, or not, compiled with streambuf support
+    wxTextCtrl& operator<<(const wxString& s);
+    wxTextCtrl& operator<<(int i);
+    wxTextCtrl& operator<<(long i);
+    wxTextCtrl& operator<<(float f);
+    wxTextCtrl& operator<<(double d);
+    wxTextCtrl& operator<<(const wxChar c);
+#endif
+
+    // do the window-specific processing after processing the update event
+    virtual void DoUpdateWindowUI(wxUpdateUIEvent& event);
+
+    virtual bool ShouldInheritColours() const;
+
+    // wxWindow overrides
+    virtual bool SetFont(const wxFont& font);
+
+    // search control generic only
+    void SetSearchBitmap( const wxBitmap& bitmap );
+    void SetSearchMenuBitmap( const wxBitmap& bitmap );
+    void SetCancelBitmap( const wxBitmap& bitmap );
+
+protected:
+    virtual void DoSetValue(const wxString& value, int flags = 0);
+
+    // override the base class virtuals involved into geometry calculations
+    virtual wxSize DoGetBestSize() const;
+    virtual void DoMoveWindow(int x, int y, int width, int height);
+    virtual void LayoutControls(int x, int y, int width, int height);
+
+    virtual void RecalcBitmaps();
+
+    void Init();
+
+    virtual wxBitmap RenderSearchBitmap( int x, int y, bool renderDrop );
+    virtual wxBitmap RenderCancelBitmap( int x, int y );
+
+    virtual void OnSearchButton( wxCommandEvent& event );
+
+    void OnSetFocus( wxFocusEvent& event );
+
+private:
+    friend class wxSearchButton;
+
+    void PopupSearchMenu();
+
+    // the subcontrols
+    wxSearchTextCtrl *m_text;
+    wxSearchButton *m_searchButton;
+    wxSearchButton *m_cancelButton;
+    wxMenu *m_menu;
+
+    bool m_searchButtonVisible;
+    bool m_cancelButtonVisible;
+
+    bool m_searchBitmapUser;
+    bool m_searchMenuBitmapUser;
+    bool m_cancelBitmapUser;
+    wxBitmap m_searchBitmap;
+    wxBitmap m_searchMenuBitmap;
+    wxBitmap m_cancelBitmap;
+private:
+    DECLARE_DYNAMIC_CLASS(wxSearchCtrl)
+
+    DECLARE_EVENT_TABLE()
+};
+
+#endif // wxUSE_SEARCHCTRL
+
+#endif // _WX_GENERIC_SEARCHCTRL_H_
+
Index: include/wx/mac/setup0.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/setup0.h,v
retrieving revision 1.96
diff -u -4 -r1.96 setup0.h
--- include/wx/mac/setup0.h	2006/11/09 00:54:57	1.96
+++ include/wx/mac/setup0.h	2006/12/10 07:47:07
@@ -638,8 +638,9 @@
 #define wxUSE_LISTCTRL      1   // wxListCtrl
 #define wxUSE_RADIOBOX      1   // wxRadioBox
 #define wxUSE_RADIOBTN      1   // wxRadioButton
 #define wxUSE_SCROLLBAR     1   // wxScrollBar
+#define wxUSE_SEARCHCTRL    1   // wxSearchCtrl
 #define wxUSE_SLIDER        1   // wxSlider
 #define wxUSE_SPINBTN       1   // wxSpinButton
 #define wxUSE_SPINCTRL      1   // wxSpinCtrl
 #define wxUSE_STATBOX       1   // wxStaticBox
Index: include/wx/mac/srchctrl.h
===================================================================
RCS file: srchctrl.h
diff -N srchctrl.h
--- /dev/null	Sun Dec 10 08:47:08 2006
+++ srchctrl.h	Sun Dec 10 08:47:07 2006
@@ -0,0 +1,5 @@
+#ifdef __WXMAC_CLASSIC__
+#include "wx/generic/srchctlg.h"
+#else
+#include "wx/mac/carbon/srchctrl.h"
+#endif
Index: include/wx/mac/carbon/srchctrl.h
===================================================================
RCS file: srchctrl.h
diff -N srchctrl.h
--- /dev/null	Sun Dec 10 08:47:08 2006
+++ srchctrl.h	Sun Dec 10 08:47:07 2006
@@ -0,0 +1,107 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        wx/mac/carbon/srchctrl.h
+// Purpose:     mac carbon wxSearchCtrl class
+// Author:      Vince Harron
+// Modified by:
+// Created:     2006-02-19
+// RCS-ID:      
+// Copyright:   Vince Harron
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_SEARCHCTRL_H_
+#define _WX_SEARCHCTRL_H_
+
+#if wxUSE_SEARCHCTRL
+
+#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
+    #pragma interface "srchctrl.h"
+#endif
+
+class WXDLLEXPORT wxSearchCtrlBase : public wxTextCtrl
+{
+public:
+    wxSearchCtrlBase() {}
+    virtual ~wxSearchCtrlBase() {}
+
+    // search control 
+    virtual void SetMenu( wxMenu* menu ) = 0;
+    virtual wxMenu* GetMenu() = 0;
+
+
+    // get/set options
+    virtual void SetSearchButtonVisible( bool show ) = 0;
+    virtual bool GetSearchButtonVisible() const = 0;
+
+    virtual void SetCancelButtonVisible( bool show ) = 0;
+    virtual bool GetCancelButtonVisible() const = 0;
+protected:
+};
+
+class wxMacSearchFieldControl;
+
+class WXDLLEXPORT wxSearchCtrl : public wxSearchCtrlBase
+{
+public:
+    // creation
+    // --------
+
+    wxSearchCtrl();
+    wxSearchCtrl(wxWindow *parent, wxWindowID id,
+               const wxString& value = wxEmptyString,
+               const wxPoint& pos = wxDefaultPosition,
+               const wxSize& size = wxDefaultSize,
+               long style = 0,
+               const wxValidator& validator = wxDefaultValidator,
+               const wxString& name = wxSearchCtrlNameStr);
+
+    ~wxSearchCtrl();
+
+    bool Create(wxWindow *parent, wxWindowID id,
+                const wxString& value = wxEmptyString,
+                const wxPoint& pos = wxDefaultPosition,
+                const wxSize& size = wxDefaultSize,
+                long style = 0,
+                const wxValidator& validator = wxDefaultValidator,
+                const wxString& name = wxSearchCtrlNameStr);
+
+    // get/set search button menu
+    // --------------------------
+    virtual void SetMenu( wxMenu* menu );
+    virtual wxMenu* GetMenu();
+    
+    // get/set search options
+    // ----------------------
+    virtual void SetSearchButtonVisible( bool show );
+    virtual bool GetSearchButtonVisible() const;
+
+    virtual void SetCancelButtonVisible( bool show );
+    virtual bool GetCancelButtonVisible() const;
+
+    virtual wxInt32     MacSearchFieldSearchHit( WXEVENTHANDLERREF handler , WXEVENTREF event ) ;
+    virtual wxInt32     MacSearchFieldCancelHit( WXEVENTHANDLERREF handler , WXEVENTREF event ) ;
+
+    wxMacSearchFieldControl * GetPeer() const
+    { return (wxMacSearchFieldControl*) m_peer; }
+	
+protected:
+
+    void Init();
+
+    virtual void CreatePeer(
+           const wxString& str,
+           const wxPoint& pos,
+           const wxSize& size, long style );
+
+    wxMenu *m_menu;
+
+private:
+    DECLARE_DYNAMIC_CLASS(wxSearchCtrl)
+
+    DECLARE_EVENT_TABLE()
+};
+
+#endif // wxUSE_SEARCHCTRL
+
+#endif // _WX_SEARCHCTRL_H_
+
Index: include/wx/mac/carbon/textctrl.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/textctrl.h,v
retrieving revision 1.23
diff -u -4 -r1.23 textctrl.h
--- include/wx/mac/carbon/textctrl.h	2006/11/21 07:08:28	1.23
+++ include/wx/mac/carbon/textctrl.h	2006/12/10 07:47:07
@@ -191,8 +191,10 @@
     void Init();
 
     virtual wxSize DoGetBestSize() const;
 
+    virtual void CreatePeer(const wxString& str, const wxPoint& pos, const wxSize& size, long style );
+	
     virtual void DoSetValue(const wxString& value, int flags = 0);
 
     bool  m_editable;
 
Index: include/wx/mac/carbon/private/mactext.h
===================================================================
RCS file: mactext.h
diff -N mactext.h
--- /dev/null	Sun Dec 10 08:47:08 2006
+++ mactext.h	Sun Dec 10 08:47:07 2006
@@ -0,0 +1,115 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        mactext.h
+// Purpose:     private wxMacTextControl base class
+// Author:      Stefan Csomor
+// Modified by:
+// Created:     03/02/99
+// RCS-ID:      $Id: 
+// Copyright:   (c) Stefan Csomor
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_MAC_PRIVATE_MACTEXT_H_
+#define _WX_MAC_PRIVATE_MACTEXT_H_
+
+#include "wx/mac/private.h"
+
+// common interface for all implementations
+class wxMacTextControl : public wxMacControl
+{
+public :
+    wxMacTextControl( wxTextCtrl *peer ) ;
+    virtual ~wxMacTextControl() ;
+
+    virtual wxString GetStringValue() const = 0 ;
+    virtual void SetStringValue( const wxString &val ) = 0 ;
+    virtual void SetSelection( long from, long to ) = 0 ;
+    virtual void GetSelection( long* from, long* to ) const = 0 ;
+    virtual void WriteText( const wxString& str ) = 0 ;
+
+    virtual void SetStyle( long start, long end, const wxTextAttr& style ) ;
+    virtual void Copy() ;
+    virtual void Cut() ;
+    virtual void Paste() ;
+    virtual bool CanPaste() const ;
+    virtual void SetEditable( bool editable ) ;
+    virtual wxTextPos GetLastPosition() const ;
+    virtual void Replace( long from, long to, const wxString &str ) ;
+    virtual void Remove( long from, long to ) ;
+
+
+    virtual bool HasOwnContextMenu() const
+    { return false ; }
+
+    virtual bool SetupCursor( const wxPoint& pt )
+    { return false ; }
+
+    virtual void Clear() ;
+    virtual bool CanUndo() const;
+    virtual void Undo() ;
+    virtual bool CanRedo() const;
+    virtual void Redo() ;
+    virtual int GetNumberOfLines() const ;
+    virtual long XYToPosition(long x, long y) const;
+    virtual bool PositionToXY(long pos, long *x, long *y) const ;
+    virtual void ShowPosition(long WXUNUSED(pos)) ;
+    virtual int GetLineLength(long lineNo) const ;
+    virtual wxString GetLineText(long lineNo) const ;
+    virtual void CheckSpelling(bool check) { }
+
+#ifndef __WXMAC_OSX__
+    virtual void            MacControlUserPaneDrawProc(wxInt16 part) = 0 ;
+    virtual wxInt16         MacControlUserPaneHitTestProc(wxInt16 x, wxInt16 y) = 0 ;
+    virtual wxInt16         MacControlUserPaneTrackingProc(wxInt16 x, wxInt16 y, void* actionProc) = 0 ;
+    virtual void            MacControlUserPaneIdleProc() = 0 ;
+    virtual wxInt16         MacControlUserPaneKeyDownProc(wxInt16 keyCode, wxInt16 charCode, wxInt16 modifiers) = 0 ;
+    virtual void            MacControlUserPaneActivateProc(bool activating) = 0 ;
+    virtual wxInt16         MacControlUserPaneFocusProc(wxInt16 action) = 0 ;
+    virtual void            MacControlUserPaneBackgroundProc(void* info) = 0 ;
+#endif
+} ;
+
+#if TARGET_API_MAC_OSX
+
+class wxMacUnicodeTextControl : public wxMacTextControl
+{
+public :
+    wxMacUnicodeTextControl( wxTextCtrl *wxPeer ) ;
+    wxMacUnicodeTextControl( wxTextCtrl *wxPeer,
+                             const wxString& str,
+                             const wxPoint& pos,
+                             const wxSize& size, long style ) ;
+    virtual ~wxMacUnicodeTextControl();
+
+    virtual bool Create( wxTextCtrl *wxPeer,
+                         const wxString& str,
+                         const wxPoint& pos,
+                         const wxSize& size, long style ) ;
+    virtual void VisibilityChanged(bool shown);
+    virtual wxString GetStringValue() const ;
+    virtual void SetStringValue( const wxString &str) ;
+    virtual void Copy();
+    virtual void Cut();
+    virtual void Paste();
+    virtual bool CanPaste() const;
+    virtual void SetEditable(bool editable) ;
+    virtual void GetSelection( long* from, long* to) const ;
+    virtual void SetSelection( long from , long to ) ;
+    virtual void WriteText(const wxString& str) ;
+
+protected :
+	virtual void CreateControl( wxTextCtrl* peer, const Rect* bounds, CFStringRef cfr );
+
+    // contains the tag for the content (is different for password and non-password controls)
+    OSType m_valueTag ;
+
+    // as the selection tag only works correctly when the control has the focus we have to mirror the
+    // intended value
+    EventHandlerRef m_focusHandlerRef ;
+public :
+    ControlEditTextSelectionRec m_selection ;
+};
+
+#endif // TARGET_API_MAC_OSX
+
+#endif // _WX_MAC_PRIVATE_MACTEXT_H_
\ No newline at end of file
Index: include/wx/motif/setup0.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/motif/setup0.h,v
retrieving revision 1.34
diff -u -4 -r1.34 setup0.h
--- include/wx/motif/setup0.h	2006/11/09 00:55:05	1.34
+++ include/wx/motif/setup0.h	2006/12/10 07:47:07
@@ -637,8 +637,9 @@
 #define wxUSE_LISTCTRL      1   // wxListCtrl
 #define wxUSE_RADIOBOX      1   // wxRadioBox
 #define wxUSE_RADIOBTN      1   // wxRadioButton
 #define wxUSE_SCROLLBAR     1   // wxScrollBar
+#define wxUSE_SEARCHCTRL    1   // wxSearchCtrl
 #define wxUSE_SLIDER        1   // wxSlider
 #define wxUSE_SPINBTN       1   // wxSpinButton
 #define wxUSE_SPINCTRL      1   // wxSpinCtrl
 #define wxUSE_STATBOX       1   // wxStaticBox
Index: include/wx/msw/setup0.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/setup0.h,v
retrieving revision 1.246
diff -u -4 -r1.246 setup0.h
--- include/wx/msw/setup0.h	2006/11/09 00:54:51	1.246
+++ include/wx/msw/setup0.h	2006/12/10 07:47:07
@@ -637,8 +637,9 @@
 #define wxUSE_LISTCTRL      1   // wxListCtrl
 #define wxUSE_RADIOBOX      1   // wxRadioBox
 #define wxUSE_RADIOBTN      1   // wxRadioButton
 #define wxUSE_SCROLLBAR     1   // wxScrollBar
+#define wxUSE_SEARCHCTRL    1   // wxSearchCtrl
 #define wxUSE_SLIDER        1   // wxSlider
 #define wxUSE_SPINBTN       1   // wxSpinButton
 #define wxUSE_SPINCTRL      1   // wxSpinCtrl
 #define wxUSE_STATBOX       1   // wxStaticBox
Index: include/wx/msw/wince/setup.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/wince/setup.h,v
retrieving revision 1.98
diff -u -4 -r1.98 setup.h
--- include/wx/msw/wince/setup.h	2006/11/09 00:54:55	1.98
+++ include/wx/msw/wince/setup.h	2006/12/10 07:47:07
@@ -637,8 +637,9 @@
 #define wxUSE_LISTCTRL      1   // wxListCtrl
 #define wxUSE_RADIOBOX      1   // wxRadioBox
 #define wxUSE_RADIOBTN      1   // wxRadioButton
 #define wxUSE_SCROLLBAR     1   // wxScrollBar
+#define wxUSE_SEARCHCTRL    1   // wxSearchCtrl
 #define wxUSE_SLIDER        1   // wxSlider
 #define wxUSE_SPINBTN       1   // wxSpinButton
 #define wxUSE_SPINCTRL      1   // wxSpinCtrl
 #define wxUSE_STATBOX       1   // wxStaticBox
Index: include/wx/os2/setup0.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/setup0.h,v
retrieving revision 1.94
diff -u -4 -r1.94 setup0.h
--- include/wx/os2/setup0.h	2006/11/09 00:55:02	1.94
+++ include/wx/os2/setup0.h	2006/12/10 07:47:08
@@ -637,8 +637,9 @@
 #define wxUSE_LISTCTRL      1   // wxListCtrl
 #define wxUSE_RADIOBOX      1   // wxRadioBox
 #define wxUSE_RADIOBTN      1   // wxRadioButton
 #define wxUSE_SCROLLBAR     1   // wxScrollBar
+#define wxUSE_SEARCHCTRL    1   // wxSearchCtrl
 #define wxUSE_SLIDER        1   // wxSlider
 #define wxUSE_SPINBTN       1   // wxSpinButton
 #define wxUSE_SPINCTRL      1   // wxSpinCtrl
 #define wxUSE_STATBOX       1   // wxStaticBox
Index: include/wx/palmos/setup0.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/setup0.h,v
retrieving revision 1.51
diff -u -4 -r1.51 setup0.h
--- include/wx/palmos/setup0.h	2006/11/09 00:54:59	1.51
+++ include/wx/palmos/setup0.h	2006/12/10 07:47:08
@@ -637,8 +637,9 @@
 #define wxUSE_LISTCTRL      1   // wxListCtrl
 #define wxUSE_RADIOBOX      1   // wxRadioBox
 #define wxUSE_RADIOBTN      1   // wxRadioButton
 #define wxUSE_SCROLLBAR     1   // wxScrollBar
+#define wxUSE_SEARCHCTRL    1   // wxSearchCtrl
 #define wxUSE_SLIDER        1   // wxSlider
 #define wxUSE_SPINBTN       1   // wxSpinButton
 #define wxUSE_SPINCTRL      1   // wxSpinCtrl
 #define wxUSE_STATBOX       1   // wxStaticBox
Index: include/wx/univ/setup0.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/univ/setup0.h,v
retrieving revision 1.62
diff -u -4 -r1.62 setup0.h
--- include/wx/univ/setup0.h	2006/11/08 00:09:15	1.62
+++ include/wx/univ/setup0.h	2006/12/10 07:47:08
@@ -661,8 +661,9 @@
 #define wxUSE_LISTCTRL         1    // wxListCtrl
 #define wxUSE_RADIOBOX         1    // wxRadioBox
 #define wxUSE_RADIOBTN         1    // wxRadioButton
 #define wxUSE_SCROLLBAR        1    // wxScrollBar
+#define wxUSE_SEARCHCTRL       1    // wxSearchCtrl
 #define wxUSE_SLIDER           1    // wxSlider
 #define wxUSE_SPINBTN          1    // wxSpinButton
 #define wxUSE_SPINCTRL         1    // wxSpinCtrl
 #define wxUSE_STATBOX          1    // wxStaticBox
Index: samples/widgets/widgets.bkl
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/widgets/widgets.bkl,v
retrieving revision 1.14
diff -u -4 -r1.14 widgets.bkl
--- samples/widgets/widgets.bkl	2006/10/05 10:20:22	1.14
+++ samples/widgets/widgets.bkl	2006/12/10 07:47:08
@@ -21,8 +21,9 @@
             listbox.cpp
             notebook.cpp
             odcombobox.cpp
             radiobox.cpp
+	    searchctrl.cpp
             slider.cpp
             spinbtn.cpp
             static.cpp
             textctrl.cpp
Index: src/common/srchcmn.cpp
===================================================================
RCS file: srchcmn.cpp
diff -N srchcmn.cpp
--- /dev/null	Sun Dec 10 08:47:08 2006
+++ srchcmn.cpp	Sun Dec 10 08:47:08 2006
@@ -0,0 +1,42 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        src/common/srchcmn.cpp
+// Purpose:     common (to all ports) bits of wxSearchCtrl
+// Author:      Robin Dunn
+// Modified by:
+// Created:     19-Dec-2006
+// RCS-ID:      $Id: $
+// Copyright:   (c) wxWidgets team
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+// ============================================================================
+// declarations
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+#if wxUSE_SEARCHCTRL
+
+#include "wx/srchctrl.h"
+
+#ifndef WX_PRECOMP
+#endif
+
+// ----------------------------------------------------------------------------
+
+const wxChar wxSearchCtrlNameStr[] = wxT("searchCtrl");
+
+DEFINE_EVENT_TYPE(wxEVT_COMMAND_SEARCHCTRL_CANCEL)
+DEFINE_EVENT_TYPE(wxEVT_COMMAND_SEARCHCTRL_SEARCH)
+
+
+#endif // wxUSE_SEARCHCTRL
Index: src/generic/srchctlg.cpp
===================================================================
RCS file: srchctlg.cpp
diff -N srchctlg.cpp
--- /dev/null	Sun Dec 10 08:47:08 2006
+++ srchctlg.cpp	Sun Dec 10 08:47:08 2006
@@ -0,0 +1,1054 @@
+///////////////////////////////////////////////////////////////////////////////
+// Name:        src/generic/srchctlg.cpp
+// Purpose:     implements wxSearchCtrl as a composite control
+// Author:      Vince Harron
+// Modified by:
+// Created:     2006-02-19
+// RCS-ID:      
+// Copyright:   Vince Harron
+// License:     wxWindows licence
+///////////////////////////////////////////////////////////////////////////////
+
+// ============================================================================
+// declarations
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
+    #pragma implementation "srchctlg.h"
+#endif
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+#ifndef WX_PRECOMP
+    #include "wx/button.h"
+#endif //WX_PRECOMP
+
+#if wxUSE_SEARCHCTRL
+
+#if !USE_NATIVE_SEARCH_CONTROL
+
+#include "wx/srchctrl.h"
+#include "wx/image.h"
+
+#define WXMIN(a,b) (a)<(b)?(a):(b)
+#define WXMAX(a,b) (a)>(b)?(a):(b)
+
+// ----------------------------------------------------------------------------
+// constants
+// ----------------------------------------------------------------------------
+
+// the margin between the text control and the search/cancel buttons
+static const wxCoord MARGIN = 2;
+
+// 1 pixel border around all controls (wxSIMPLE_BORDER)
+static const wxCoord BORDER = 2;
+
+// ----------------------------------------------------------------------------
+// wxSearchTextCtrl: text control used by search control
+// ----------------------------------------------------------------------------
+
+class wxSearchTextCtrl : public wxTextCtrl
+{
+public:
+    wxSearchTextCtrl(wxSearchCtrl *search, const wxString& value)
+        : wxTextCtrl(search, wxID_ANY, value, wxDefaultPosition, wxDefaultSize, wxNO_BORDER )
+    {
+        m_search = search;
+
+        // remove the default minsize, the searchctrl will have one instead
+        SetSizeHints(wxDefaultCoord,wxDefaultCoord);
+    }
+
+protected:
+    void OnText(wxCommandEvent& eventText)
+    {
+        wxCommandEvent event(eventText);
+        event.SetEventObject(m_search);
+        event.SetId(m_search->GetId());
+
+        m_search->GetEventHandler()->ProcessEvent(event);
+    }
+
+    void OnTextUrl(wxTextUrlEvent& eventText)
+    {
+        // copy constructor is disabled for some reason?
+        //wxTextUrlEvent event(eventText);
+        wxTextUrlEvent event(
+            m_search->GetId(), 
+            eventText.GetMouseEvent(),
+            eventText.GetURLStart(),
+            eventText.GetURLEnd()
+            );
+        event.SetEventObject(m_search);
+
+        m_search->GetEventHandler()->ProcessEvent(event);
+    }
+
+private:
+    wxSearchCtrl* m_search;
+
+    DECLARE_EVENT_TABLE()
+};
+
+BEGIN_EVENT_TABLE(wxSearchTextCtrl, wxTextCtrl)
+    EVT_TEXT(wxID_ANY, wxSearchTextCtrl::OnText)
+    EVT_TEXT_ENTER(wxID_ANY, wxSearchTextCtrl::OnText)
+    EVT_TEXT_URL(wxID_ANY, wxSearchTextCtrl::OnTextUrl)
+    EVT_TEXT_MAXLEN(wxID_ANY, wxSearchTextCtrl::OnText)
+END_EVENT_TABLE()
+
+// ----------------------------------------------------------------------------
+// wxSearchButton: search button used by search control
+// ----------------------------------------------------------------------------
+
+class wxSearchButton : public wxBitmapButton
+{
+public:
+    wxSearchButton(wxSearchCtrl *search, int eventType, const wxBitmap& bmp)
+        : wxBitmapButton(search, wxID_ANY, bmp, wxDefaultPosition, wxDefaultSize, wxNO_BORDER)
+    {
+        m_search = search;
+        m_eventType = eventType;
+
+        // remove the default minsize, the searchctrl will have one instead
+        SetSizeHints(wxDefaultCoord,wxDefaultCoord);
+    }
+
+protected:
+    void OnButton(wxCommandEvent& /*eventSearch*/)
+    {
+        wxCommandEvent event(m_eventType, m_search->GetId());
+        event.SetEventObject(m_search);
+
+        GetEventHandler()->ProcessEvent(event);
+
+        m_search->SetFocus();
+
+        if ( m_eventType == wxEVT_COMMAND_SEARCHCTRL_SEARCH )
+        {
+            // this happens automatically, just like on Mac OS X
+            m_search->PopupSearchMenu();
+        }
+    }
+
+private:
+    wxSearchCtrl *m_search;
+    wxEventType   m_eventType;
+
+    DECLARE_EVENT_TABLE()
+};
+
+BEGIN_EVENT_TABLE(wxSearchButton, wxButton)
+    EVT_BUTTON(wxID_ANY, wxSearchButton::OnButton)
+END_EVENT_TABLE()
+
+BEGIN_EVENT_TABLE(wxSearchCtrl, wxSearchCtrlBase)
+    EVT_SEARCHCTRL_SEARCH(wxID_ANY, wxSearchCtrl::OnSearchButton)
+    EVT_SET_FOCUS(wxSearchCtrl::OnSetFocus)
+END_EVENT_TABLE()
+
+IMPLEMENT_DYNAMIC_CLASS(wxSearchCtrl, wxSearchCtrlBase)
+
+// ============================================================================
+// implementation
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// wxSearchCtrl creation
+// ----------------------------------------------------------------------------
+
+// creation
+// --------
+
+wxSearchCtrl::wxSearchCtrl()
+{ 
+    Init();
+}
+
+wxSearchCtrl::wxSearchCtrl(wxWindow *parent, wxWindowID id,
+           const wxString& value,
+           const wxPoint& pos,
+           const wxSize& size,
+           long style,
+           const wxValidator& validator,
+           const wxString& name)
+{
+    Init();
+
+    Create(parent, id, value, pos, size, style, validator, name);
+}
+
+void wxSearchCtrl::Init()
+{
+    m_text = 0;
+    m_searchButton = 0;
+    m_cancelButton = 0;
+    m_menu = 0;
+
+    m_searchButtonVisible = true;
+    m_cancelButtonVisible = false;
+
+    m_searchMenuBitmapUser = false;
+    m_searchBitmapUser = false;
+    m_cancelBitmapUser = false;
+}
+
+bool wxSearchCtrl::Create(wxWindow *parent, wxWindowID id,
+            const wxString& value,
+            const wxPoint& pos,
+            const wxSize& size,
+            long style,
+            const wxValidator& validator,
+            const wxString& name)
+{
+    if ( !wxTextCtrlBase::Create(parent, id, pos, size, wxSIMPLE_BORDER | style, validator, name) )
+    {
+        return false;
+    }
+
+    m_text = new wxSearchTextCtrl(this,value);
+    wxSize sizeText = m_text->GetBestSize();
+
+    m_searchButton = new wxSearchButton(this,wxEVT_COMMAND_SEARCHCTRL_SEARCH,m_searchBitmap);
+    m_cancelButton = new wxSearchButton(this,wxEVT_COMMAND_SEARCHCTRL_CANCEL,m_cancelBitmap);
+
+    SetForegroundColour( m_text->GetForegroundColour() );
+    m_searchButton->SetForegroundColour( m_text->GetForegroundColour() );
+    m_cancelButton->SetForegroundColour( m_text->GetForegroundColour() );
+
+    SetBackgroundColour( m_text->GetBackgroundColour() );
+    m_searchButton->SetBackgroundColour( m_text->GetBackgroundColour() );
+    m_cancelButton->SetBackgroundColour( m_text->GetBackgroundColour() );
+
+    RecalcBitmaps();
+
+    SetInitialSize(size);
+    Move(pos);
+    return true;
+}
+
+wxSearchCtrl::~wxSearchCtrl()
+{
+    delete m_text;
+    delete m_searchButton;
+    delete m_cancelButton;
+    delete m_menu;
+}
+
+
+// search control specific interfaces
+void wxSearchCtrl::SetMenu( wxMenu* menu )
+{
+    if ( menu == m_menu )
+    {
+        // no change
+        return;
+    }
+    delete m_menu;
+    bool hadMenu = (m_menu!=0);
+    m_menu = menu;
+
+    if ( m_menu && !hadMenu )
+    {
+        m_searchButton->SetBitmapLabel(m_searchMenuBitmap);
+        m_searchButton->Refresh();
+        if ( !m_searchButtonVisible )
+        {
+            // adding the menu will force the search button to be visible
+            wxRect rect = GetRect();
+            LayoutControls(0, 0, rect.GetWidth(), rect.GetHeight());
+        }
+    }
+    else if ( !m_menu && hadMenu )
+    {
+        m_searchButton->SetBitmapLabel(m_searchBitmap);
+        if ( m_searchButtonVisible )
+        {
+            m_searchButton->Refresh();
+        }
+        else
+        {
+            wxRect rect = GetRect();
+            LayoutControls(0, 0, rect.GetWidth(), rect.GetHeight());
+        }
+    }
+}
+
+wxMenu* wxSearchCtrl::GetMenu()
+{
+    return m_menu;
+}
+
+void wxSearchCtrl::SetSearchButtonVisible( bool show )
+{
+    if ( m_searchButtonVisible == show )
+    {
+        // no change
+        return;
+    }
+    m_searchButtonVisible = show;
+    if ( m_searchButtonVisible )
+    {
+        RecalcBitmaps();
+    }
+
+    wxRect rect = GetRect();
+    LayoutControls(0, 0, rect.GetWidth(), rect.GetHeight());
+}
+
+bool wxSearchCtrl::GetSearchButtonVisible() const
+{
+    return m_searchButtonVisible;
+}
+
+
+void wxSearchCtrl::SetCancelButtonVisible( bool show )
+{
+    if ( m_cancelButtonVisible == show )
+    {
+        // no change
+        return;
+    }
+    m_cancelButtonVisible = show;
+
+    wxRect rect = GetRect();
+    LayoutControls(0, 0, rect.GetWidth(), rect.GetHeight());
+}
+
+bool wxSearchCtrl::GetCancelButtonVisible() const
+{
+    return m_cancelButtonVisible;
+}
+
+
+// ----------------------------------------------------------------------------
+// geometry
+// ----------------------------------------------------------------------------
+
+wxSize wxSearchCtrl::DoGetBestSize() const
+{
+    wxSize sizeText = m_text->GetBestSize();
+    wxSize sizeSearch(0,0);
+    wxSize sizeCancel(0,0);
+    int searchMargin = 0;
+    int cancelMargin = 0;
+    if ( m_searchButtonVisible || m_menu )
+    {
+        sizeSearch = m_searchButton->GetBestSize();
+        searchMargin = MARGIN;
+    }
+    if ( m_cancelButtonVisible )
+    {
+        sizeCancel = m_cancelButton->GetBestSize();
+        cancelMargin = MARGIN;
+    }
+
+    int horizontalBorder = 1 + ( sizeText.y - sizeText.y * 14 / 21 ) / 2;
+
+    // buttons are square and equal to the height of the text control
+    int height = sizeText.y;
+    return wxSize(sizeSearch.x + searchMargin + sizeText.x + cancelMargin + sizeCancel.x + 2*horizontalBorder, height + 2*BORDER);
+}
+
+void wxSearchCtrl::DoMoveWindow(int x, int y, int width, int height)
+{
+    wxSearchCtrlBase::DoMoveWindow(x, y, width, height);
+
+    LayoutControls(0, 0, width, height);
+}
+
+void wxSearchCtrl::LayoutControls(int x, int y, int width, int height)
+{
+    wxSize sizeText = m_text->GetBestSize();
+    // make room for the search menu & clear button
+    int horizontalBorder = 1 + ( sizeText.y - sizeText.y * 14 / 21 ) / 2;
+    x += horizontalBorder;
+    y += BORDER;
+    width -= horizontalBorder*2;
+    height -= BORDER*2;
+
+    wxSize sizeSearch(0,0);
+    wxSize sizeCancel(0,0);
+    int searchMargin = 0;
+    int cancelMargin = 0;
+    if ( m_searchButtonVisible || m_menu )
+    {
+        sizeSearch = m_searchButton->GetBestSize();
+        searchMargin = MARGIN;
+    }
+    if ( m_cancelButtonVisible )
+    {
+        sizeCancel = m_cancelButton->GetBestSize();
+        cancelMargin = MARGIN;
+    }
+    m_searchButton->Show( m_searchButtonVisible || m_menu );
+    m_cancelButton->Show( m_cancelButtonVisible );
+
+    if ( sizeSearch.x + sizeCancel.x > width )
+    {
+        sizeSearch.x = width/2;
+        sizeCancel.x = width/2;
+        searchMargin = 0;
+        cancelMargin = 0;
+    }
+    wxCoord textWidth = width - sizeSearch.x - sizeCancel.x - searchMargin - cancelMargin;
+
+    // position the subcontrols inside the client area
+
+    m_searchButton->SetSize(x, y, sizeSearch.x, height);
+    m_text->SetSize(x + sizeSearch.x + searchMargin, y, textWidth, height);
+    m_cancelButton->SetSize(x + sizeSearch.x + searchMargin + textWidth + cancelMargin,y,sizeCancel.x,height);
+}
+
+
+// accessors
+// ---------
+
+wxString wxSearchCtrl::GetValue() const
+{
+    return m_text->GetValue();
+}
+void wxSearchCtrl::SetValue(const wxString& value)
+{
+    m_text->SetValue(value);
+}
+
+wxString wxSearchCtrl::GetRange(long from, long to) const
+{
+    return m_text->GetRange(from, to);
+}
+
+int wxSearchCtrl::GetLineLength(long lineNo) const
+{
+    return m_text->GetLineLength(lineNo);
+}
+wxString wxSearchCtrl::GetLineText(long lineNo) const
+{
+    return m_text->GetLineText(lineNo);
+}
+int wxSearchCtrl::GetNumberOfLines() const
+{
+    return m_text->GetNumberOfLines();
+}
+
+bool wxSearchCtrl::IsModified() const
+{
+    return m_text->IsModified();
+}
+bool wxSearchCtrl::IsEditable() const
+{
+    return m_text->IsEditable();
+}
+
+// more readable flag testing methods
+bool wxSearchCtrl::IsSingleLine() const
+{
+    return m_text->IsSingleLine();
+}
+bool wxSearchCtrl::IsMultiLine() const
+{
+    return m_text->IsMultiLine();
+}
+
+// If the return values from and to are the same, there is no selection.
+void wxSearchCtrl::GetSelection(long* from, long* to) const
+{
+    m_text->GetSelection(from, to);
+}
+
+wxString wxSearchCtrl::GetStringSelection() const
+{
+    return m_text->GetStringSelection();
+}
+
+// operations
+// ----------
+
+// editing
+void wxSearchCtrl::Clear()
+{
+    m_text->Clear();
+}
+void wxSearchCtrl::Replace(long from, long to, const wxString& value)
+{
+    m_text->Replace(from, to, value);
+}
+void wxSearchCtrl::Remove(long from, long to)
+{
+    m_text->Remove(from, to);
+}
+
+// load/save the controls contents from/to the file
+bool wxSearchCtrl::LoadFile(const wxString& file)
+{
+    return m_text->LoadFile(file);
+}
+bool wxSearchCtrl::SaveFile(const wxString& file)
+{
+    return m_text->SaveFile(file);
+}
+
+// sets/clears the dirty flag
+void wxSearchCtrl::MarkDirty()
+{
+    m_text->MarkDirty();
+}
+void wxSearchCtrl::DiscardEdits()
+{
+    m_text->DiscardEdits();
+}
+
+// set the max number of characters which may be entered in a single line
+// text control
+void wxSearchCtrl::SetMaxLength(unsigned long len)
+{
+    m_text->SetMaxLength(len);
+}
+
+// writing text inserts it at the current position, appending always
+// inserts it at the end
+void wxSearchCtrl::WriteText(const wxString& text)
+{
+    m_text->WriteText(text);
+}
+void wxSearchCtrl::AppendText(const wxString& text)
+{
+    m_text->AppendText(text);
+}
+
+// insert the character which would have resulted from this key event,
+// return true if anything has been inserted
+bool wxSearchCtrl::EmulateKeyPress(const wxKeyEvent& event)
+{
+    return m_text->EmulateKeyPress(event);
+}
+
+// text control under some platforms supports the text styles: these
+// methods allow to apply the given text style to the given selection or to
+// set/get the style which will be used for all appended text
+bool wxSearchCtrl::SetStyle(long start, long end, const wxTextAttr& style)
+{
+    return m_text->SetStyle(start, end, style);
+}
+bool wxSearchCtrl::GetStyle(long position, wxTextAttr& style)
+{
+    return m_text->GetStyle(position, style);
+}
+bool wxSearchCtrl::SetDefaultStyle(const wxTextAttr& style)
+{
+    return m_text->SetDefaultStyle(style);
+}
+const wxTextAttr& wxSearchCtrl::GetDefaultStyle() const
+{
+    return m_text->GetDefaultStyle();
+}
+
+// translate between the position (which is just an index in the text ctrl
+// considering all its contents as a single strings) and (x, y) coordinates
+// which represent column and line.
+long wxSearchCtrl::XYToPosition(long x, long y) const
+{
+    return m_text->XYToPosition(x, y);
+}
+bool wxSearchCtrl::PositionToXY(long pos, long *x, long *y) const
+{
+    return m_text->PositionToXY(pos, x, y);
+}
+
+void wxSearchCtrl::ShowPosition(long pos)
+{
+    m_text->ShowPosition(pos);
+}
+
+// find the character at position given in pixels
+//
+// NB: pt is in device coords (not adjusted for the client area origin nor
+//     scrolling)
+wxTextCtrlHitTestResult wxSearchCtrl::HitTest(const wxPoint& pt, long *pos) const
+{
+    return m_text->HitTest(pt, pos);
+}
+wxTextCtrlHitTestResult wxSearchCtrl::HitTest(const wxPoint& pt,
+                                        wxTextCoord *col,
+                                        wxTextCoord *row) const
+{
+    return m_text->HitTest(pt, col, row);
+}
+
+// Clipboard operations
+void wxSearchCtrl::Copy()
+{
+    m_text->Copy();
+}
+void wxSearchCtrl::Cut()
+{
+    m_text->Cut();
+}
+void wxSearchCtrl::Paste()
+{
+    m_text->Paste();
+}
+
+bool wxSearchCtrl::CanCopy() const
+{
+    return m_text->CanCopy();
+}
+bool wxSearchCtrl::CanCut() const
+{
+    return m_text->CanCut();
+}
+bool wxSearchCtrl::CanPaste() const
+{
+    return m_text->CanPaste();
+}
+
+// Undo/redo
+void wxSearchCtrl::Undo()
+{
+    m_text->Undo();
+}
+void wxSearchCtrl::Redo()
+{
+    m_text->Redo();
+}
+
+bool wxSearchCtrl::CanUndo() const
+{
+    return m_text->CanUndo();
+}
+bool wxSearchCtrl::CanRedo() const
+{
+    return m_text->CanRedo();
+}
+
+// Insertion point
+void wxSearchCtrl::SetInsertionPoint(long pos)
+{
+    m_text->SetInsertionPoint(pos);
+}
+void wxSearchCtrl::SetInsertionPointEnd()
+{
+    m_text->SetInsertionPointEnd();
+}
+long wxSearchCtrl::GetInsertionPoint() const
+{
+    return m_text->GetInsertionPoint();
+}
+wxTextPos wxSearchCtrl::GetLastPosition() const
+{
+    return m_text->GetLastPosition();
+}
+
+void wxSearchCtrl::SetSelection(long from, long to)
+{
+    m_text->SetSelection(from, to);
+}
+void wxSearchCtrl::SelectAll()
+{
+    m_text->SelectAll();
+}
+
+void wxSearchCtrl::SetEditable(bool editable)
+{
+    m_text->SetEditable(editable);
+}
+
+bool wxSearchCtrl::SetFont(const wxFont& font)
+{
+    bool result = wxSearchCtrlBase::SetFont(font);
+    if ( result && m_text )
+    {
+        result &= m_text->SetFont(font);
+    }
+    RecalcBitmaps();
+    return result;
+}
+
+// search control generic only
+void wxSearchCtrl::SetSearchBitmap( const wxBitmap& bitmap )
+{
+    m_searchBitmap = bitmap;
+    m_searchBitmapUser = bitmap.Ok();
+    if ( m_searchBitmapUser )
+    {
+        if ( m_searchButton && !m_menu )
+        {
+            m_searchButton->SetBitmapLabel( m_searchBitmap );
+        }
+    }
+    else
+    {
+        // the user bitmap was just cleared, generate one
+        RecalcBitmaps();
+    }
+}
+
+void wxSearchCtrl::SetSearchMenuBitmap( const wxBitmap& bitmap )
+{
+    m_searchMenuBitmap = bitmap;
+    m_searchMenuBitmapUser = bitmap.Ok();
+    if ( m_searchMenuBitmapUser )
+    {
+        if ( m_searchButton && m_menu )
+        {
+            m_searchButton->SetBitmapLabel( m_searchMenuBitmap );
+        }
+    }
+    else
+    {
+        // the user bitmap was just cleared, generate one
+        RecalcBitmaps();
+    }
+}
+
+void wxSearchCtrl::SetCancelBitmap( const wxBitmap& bitmap )
+{
+    m_cancelBitmap = bitmap;
+    m_cancelBitmapUser = bitmap.Ok();
+    if ( m_cancelBitmapUser )
+    {
+        if ( m_cancelButton )
+        {
+            m_cancelButton->SetBitmapLabel( m_cancelBitmap );
+        }
+    }
+    else
+    {
+        // the user bitmap was just cleared, generate one
+        RecalcBitmaps();
+    }
+}
+
+#if 0
+
+// override streambuf method
+#if wxHAS_TEXT_WINDOW_STREAM
+int overflow(int i);
+#endif // wxHAS_TEXT_WINDOW_STREAM
+
+// stream-like insertion operators: these are always available, whether we
+// were, or not, compiled with streambuf support
+wxTextCtrl& operator<<(const wxString& s);
+wxTextCtrl& operator<<(int i);
+wxTextCtrl& operator<<(long i);
+wxTextCtrl& operator<<(float f);
+wxTextCtrl& operator<<(double d);
+wxTextCtrl& operator<<(const wxChar c);
+#endif
+
+void wxSearchCtrl::DoSetValue(const wxString& value, int flags)
+{
+    m_text->ChangeValue( value );
+    if ( flags & SetValue_SendEvent )
+        SendTextUpdatedEvent();
+}
+
+// do the window-specific processing after processing the update event
+void wxSearchCtrl::DoUpdateWindowUI(wxUpdateUIEvent& event)
+{
+    wxSearchCtrlBase::DoUpdateWindowUI(event);
+}
+
+bool wxSearchCtrl::ShouldInheritColours() const
+{
+    return true;
+}
+
+// icons are rendered at 3-8 times larger than necessary and downscaled for
+// antialiasing
+static int GetMultiplier()
+{
+#ifdef __WXWINCE__
+    // speed up bitmap generation by using a small bitmap
+    return 3;
+#else
+    int depth = ::wxDisplayDepth();
+
+    if  ( depth >= 24 )
+    {
+        return 8;
+    }
+    return 6;
+#endif
+}
+
+wxBitmap wxSearchCtrl::RenderSearchBitmap( int x, int y, bool renderDrop )
+{
+    wxColour bg = GetBackgroundColour();
+    wxColour fg = GetForegroundColour();
+
+    //===============================================================================
+    // begin drawing code
+    //===============================================================================
+    // image stats
+
+    // force width:height ratio
+    if ( 14*x > y*20 )
+    {
+        // x is too big
+        x = y*20/14;
+    }
+    else
+    {
+        // y is too big
+        y = x*14/20;
+    }
+
+    // glass 11x11, top left corner
+    // handle (9,9)-(13,13)
+    // drop (13,16)-(19,6)-(16,9)
+
+    int multiplier = GetMultiplier();
+    int penWidth = multiplier * 2;
+
+    penWidth = penWidth * x / 20;
+
+    wxBitmap bitmap( multiplier*x, multiplier*y );
+    wxMemoryDC mem;
+    mem.SelectObject(bitmap);
+
+    // clear background
+    mem.SetBrush( wxBrush(bg) );
+    mem.SetPen( wxPen(bg) );
+    mem.DrawRectangle(0,0,bitmap.GetWidth(),bitmap.GetHeight());
+
+    // draw drop glass
+    mem.SetBrush( wxBrush(fg) );
+    mem.SetPen( wxPen(fg) );
+    int glassBase = 5 * x / 20;
+    int glassFactor = 2*glassBase + 1;
+    int radius = multiplier*glassFactor/2;
+    mem.DrawCircle(radius,radius,radius);
+    mem.SetBrush( wxBrush(bg) );
+    mem.SetPen( wxPen(bg) );
+    mem.DrawCircle(radius,radius,radius-penWidth);
+
+    // draw handle
+    int lineStart = radius + (radius-penWidth/2) * 707 / 1000; // 707 / 1000 = 0.707 = 1/sqrt(2);
+
+    mem.SetPen( wxPen(fg) );
+    mem.SetBrush( wxBrush(fg) );
+    int handleCornerShift = penWidth * 707 / 1000 / 2; // 707 / 1000 = 0.707 = 1/sqrt(2);
+    handleCornerShift = WXMAX( handleCornerShift, 1 );
+    int handleBase = 4 * x / 20;
+    int handleLength = 2*handleBase+1;
+    wxPoint handlePolygon[] =
+    {
+        wxPoint(-handleCornerShift,+handleCornerShift),
+        wxPoint(+handleCornerShift,-handleCornerShift),
+        wxPoint(multiplier*handleLength/2+handleCornerShift,multiplier*handleLength/2-handleCornerShift),
+        wxPoint(multiplier*handleLength/2-handleCornerShift,multiplier*handleLength/2+handleCornerShift),
+    };
+    mem.DrawPolygon(WXSIZEOF(handlePolygon),handlePolygon,lineStart,lineStart);
+
+    // draw drop triangle
+    int triangleX = 13 * x / 20;
+    int triangleY = 5 * x / 20;
+    int triangleBase = 3 * x / 20;
+    int triangleFactor = triangleBase*2+1;
+    if ( renderDrop )
+    {
+        wxPoint dropPolygon[] =
+        {
+            wxPoint(multiplier*0,multiplier*0), // triangle left
+            wxPoint(multiplier*triangleFactor-1,multiplier*0), // triangle right
+            wxPoint(multiplier*triangleFactor/2,multiplier*triangleFactor/2), // triangle bottom
+        };
+        mem.DrawPolygon(WXSIZEOF(dropPolygon),dropPolygon,multiplier*triangleX,multiplier*triangleY);
+    }
+
+    //===============================================================================
+    // end drawing code
+    //===============================================================================
+
+    if ( multiplier != 1 )
+    {
+        wxImage image = bitmap.ConvertToImage();
+        image.Rescale(x,y);
+        bitmap = wxBitmap( image );
+    }
+
+    return bitmap;
+}
+
+wxBitmap wxSearchCtrl::RenderCancelBitmap( int x, int y )
+{
+    wxColour bg = GetBackgroundColour();
+    wxColour fg = GetForegroundColour();
+
+    //===============================================================================
+    // begin drawing code
+    //===============================================================================
+    // image stats
+
+    // total size 14x14
+    // force 1:1 ratio
+    if ( x > y )
+    {
+        // x is too big
+        x = y;
+    }
+    else
+    {
+        // y is too big
+        y = x;
+    }
+
+    // 14x14 circle
+    // cross line starts (4,4)-(10,10)
+    // drop (13,16)-(19,6)-(16,9)
+
+    int multiplier = GetMultiplier();
+
+    int penWidth = multiplier * x / 14;
+
+    wxBitmap bitmap( multiplier*x, multiplier*y );
+    wxMemoryDC mem;
+    mem.SelectObject(bitmap);
+
+    // clear background
+    mem.SetBrush( wxBrush(bg) );
+    mem.SetPen( wxPen(bg) );
+    mem.DrawRectangle(0,0,bitmap.GetWidth(),bitmap.GetHeight());
+
+    // draw drop glass
+    mem.SetBrush( wxBrush(fg) );
+    mem.SetPen( wxPen(fg) );
+    int radius = multiplier*x/2;
+    mem.DrawCircle(radius,radius,radius);
+
+    // draw cross
+    int lineStartBase = 4 * x / 14;
+    int lineLength = x - 2*lineStartBase;
+
+    mem.SetPen( wxPen(bg) );
+    mem.SetBrush( wxBrush(bg) );
+    int handleCornerShift = penWidth/2;
+    handleCornerShift = WXMAX( handleCornerShift, 1 );
+    wxPoint handlePolygon[] =
+    {
+        wxPoint(-handleCornerShift,+handleCornerShift),
+        wxPoint(+handleCornerShift,-handleCornerShift),
+        wxPoint(multiplier*lineLength+handleCornerShift,multiplier*lineLength-handleCornerShift),
+        wxPoint(multiplier*lineLength-handleCornerShift,multiplier*lineLength+handleCornerShift),
+    };
+    mem.DrawPolygon(WXSIZEOF(handlePolygon),handlePolygon,multiplier*lineStartBase,multiplier*lineStartBase);
+    wxPoint handlePolygon2[] =
+    {
+        wxPoint(+handleCornerShift,+handleCornerShift),
+        wxPoint(-handleCornerShift,-handleCornerShift),
+        wxPoint(multiplier*lineLength-handleCornerShift,-multiplier*lineLength-handleCornerShift),
+        wxPoint(multiplier*lineLength+handleCornerShift,-multiplier*lineLength+handleCornerShift),
+    };
+    mem.DrawPolygon(WXSIZEOF(handlePolygon2),handlePolygon2,multiplier*lineStartBase,multiplier*(x-lineStartBase));
+
+    //===============================================================================
+    // end drawing code
+    //===============================================================================
+
+    if ( multiplier != 1 )
+    {
+        wxImage image = bitmap.ConvertToImage();
+        image.Rescale(x,y);
+        bitmap = wxBitmap( image );
+    }
+
+    return bitmap;
+}
+
+void wxSearchCtrl::RecalcBitmaps()
+{
+    if ( !m_text )
+    {
+        return;
+    }
+    wxSize sizeText = m_text->GetBestSize();
+
+    //int bitmapHeight = sizeText.y * 14 / 21;
+    //int bitmapWidth  = bitmapHeight * 20 / 14;
+    int bitmapHeight = sizeText.y;
+    int bitmapWidth  = sizeText.y * 20 / 14;
+
+    if ( !m_searchBitmapUser )
+    {
+        if ( 
+            !m_searchBitmap.Ok() ||
+            m_searchBitmap.GetHeight() != bitmapHeight || 
+            m_searchBitmap.GetWidth() != bitmapWidth
+            )
+        {
+            m_searchBitmap = RenderSearchBitmap(bitmapWidth,bitmapHeight,false);
+            if ( !m_menu )
+            {
+                m_searchButton->SetBitmapLabel(m_searchBitmap);
+            }
+        }
+        // else this bitmap was set by user, don't alter
+    }
+
+    if ( !m_searchMenuBitmapUser )
+    {
+        if ( 
+            !m_searchMenuBitmap.Ok() ||
+            m_searchMenuBitmap.GetHeight() != bitmapHeight || 
+            m_searchMenuBitmap.GetWidth() != bitmapWidth
+            )
+        {
+            m_searchMenuBitmap = RenderSearchBitmap(bitmapWidth,bitmapHeight,true);
+            if ( m_menu )
+            {
+                m_searchButton->SetBitmapLabel(m_searchMenuBitmap);
+            }
+        }
+        // else this bitmap was set by user, don't alter
+    }
+
+    if ( !m_cancelBitmapUser )
+    {
+        if ( 
+            !m_cancelBitmap.Ok() ||
+            m_cancelBitmap.GetHeight() != bitmapHeight || 
+            m_cancelBitmap.GetWidth() != bitmapHeight
+            )
+        {
+            m_cancelBitmap = RenderCancelBitmap(bitmapHeight-BORDER,bitmapHeight-BORDER); // square
+            m_cancelButton->SetBitmapLabel(m_cancelBitmap);
+        }
+        // else this bitmap was set by user, don't alter
+    }
+}
+
+void wxSearchCtrl::OnSearchButton( wxCommandEvent& event )
+{
+    event.Skip();
+}
+
+void wxSearchCtrl::OnSetFocus( wxFocusEvent& /*event*/ )
+{
+    if ( m_text )
+    {
+        m_text->SetFocus();
+    }
+}
+
+void wxSearchCtrl::PopupSearchMenu()
+{
+    if ( m_menu )
+    {
+        wxSize size = GetSize();
+        PopupMenu( m_menu, 0, size.y );
+    }
+}
+
+#endif // !USE_NATIVE_SEARCH_CONTROL
+
+#endif // wxUSE_SEARCHCTRL
Index: src/mac/carbon/srchctrl.cpp
===================================================================
RCS file: srchctrl.cpp
diff -N srchctrl.cpp
--- /dev/null	Sun Dec 10 08:47:08 2006
+++ srchctrl.cpp	Sun Dec 10 08:47:08 2006
@@ -0,0 +1,361 @@
+///////////////////////////////////////////////////////////////////////////////
+// Name:        src/mac/carbon/srchctrl.cpp
+// Purpose:     implements mac carbon wxSearchCtrl
+// Author:      Vince Harron
+// Modified by:
+// Created:     2006-02-19
+// RCS-ID:      
+// Copyright:   Vince Harron
+// License:     wxWindows licence
+///////////////////////////////////////////////////////////////////////////////
+
+// ============================================================================
+// declarations
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+#if defined(__GNUG__) && !defined(NO_GCC_PRAGMA)
+    #pragma implementation "srchctrl.h"
+#endif
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+#ifndef WX_PRECOMP
+    #include "wx/menu.h"
+#endif //WX_PRECOMP
+
+#if wxUSE_SEARCHCTRL
+
+#if USE_NATIVE_SEARCH_CONTROL
+
+#include "wx/srchctrl.h"
+#include "wx/mac/uma.h"
+#include "wx/mac/carbon/private/mactext.h"
+
+BEGIN_EVENT_TABLE(wxSearchCtrl, wxSearchCtrlBase)
+END_EVENT_TABLE()
+
+IMPLEMENT_DYNAMIC_CLASS(wxSearchCtrl, wxSearchCtrlBase)
+
+// ============================================================================
+// wxMacSearchFieldControl
+// ============================================================================
+
+#if MAC_OS_X_VERSION_MAX_ALLOWED > MAC_OS_X_VERSION_10_2
+
+
+static const EventTypeSpec eventList[] =
+{
+    { kEventClassSearchField, kEventSearchFieldCancelClicked } ,
+    { kEventClassSearchField, kEventSearchFieldSearchClicked } ,
+};
+
+class wxMacSearchFieldControl : public wxMacUnicodeTextControl
+{
+public :
+    wxMacSearchFieldControl( wxTextCtrl *wxPeer,
+                             const wxString& str,
+                             const wxPoint& pos,
+                             const wxSize& size, long style ) : wxMacUnicodeTextControl( wxPeer )
+    {
+        Create( wxPeer, str, pos, size, style );
+    }
+
+    // search field options
+    virtual void SetSearchButtonVisible( bool show );
+    virtual bool GetSearchButtonVisible() const;
+
+    virtual void SetCancelButtonVisible( bool show );
+    virtual bool GetCancelButtonVisible() const;
+
+    virtual void SetSearchMenu( wxMenu* menu );
+    virtual wxMenu* GetSearchMenu() const;
+protected :
+    virtual void CreateControl( wxTextCtrl* peer, const Rect* bounds, CFStringRef crf );
+
+private:
+    wxMenu* m_menu;
+} ;
+
+void wxMacSearchFieldControl::CreateControl( wxTextCtrl* /*peer*/, const Rect* bounds, CFStringRef crf )
+{
+    OptionBits attributes = 0;
+    if ( UMAGetSystemVersion() >= 0x1040 )
+    {
+		attributes = kHISearchFieldAttributesSearchIcon;
+	}
+    HIRect hibounds = { { bounds->left, bounds->top }, { bounds->right-bounds->left, bounds->bottom-bounds->top } };
+    verify_noerr( HISearchFieldCreate( 
+        &hibounds,
+        attributes,
+        0, // MenuRef
+        CFSTR("Search"),
+        &m_controlRef
+        ) );
+    HIViewSetVisible (m_controlRef, true); 
+}
+
+// search field options
+void wxMacSearchFieldControl::SetSearchButtonVisible( bool show )
+{
+    if ( UMAGetSystemVersion() >= 0x1040 )
+    {
+        OptionBits set = 0;
+        OptionBits clear = 0;
+        if ( show )
+        {
+            set |= kHISearchFieldAttributesSearchIcon;
+        }
+        else
+        {
+            clear |= kHISearchFieldAttributesSearchIcon;
+        }
+        HISearchFieldChangeAttributes( m_controlRef, set, clear );
+    }
+}
+
+bool wxMacSearchFieldControl::GetSearchButtonVisible() const
+{ 
+    OptionBits attributes = 0;
+    verify_noerr( HISearchFieldGetAttributes( m_controlRef, &attributes ) );
+    return ( attributes & kHISearchFieldAttributesSearchIcon ) != 0;
+}
+
+void wxMacSearchFieldControl::SetCancelButtonVisible( bool show )
+{
+    OptionBits set = 0;
+    OptionBits clear = 0;
+    if ( show )
+    {
+        set |= kHISearchFieldAttributesCancel;
+    }
+    else
+    {
+        clear |= kHISearchFieldAttributesCancel;
+    }
+    HISearchFieldChangeAttributes( m_controlRef, set, clear );
+}
+
+bool wxMacSearchFieldControl::GetCancelButtonVisible() const
+{ 
+    OptionBits attributes = 0;
+    verify_noerr( HISearchFieldGetAttributes( m_controlRef, &attributes ) );
+    return ( attributes & kHISearchFieldAttributesCancel ) != 0;
+}
+
+void wxMacSearchFieldControl::SetSearchMenu( wxMenu* menu )
+{
+    m_menu = menu;
+    if ( m_menu )
+    {
+        verify_noerr( HISearchFieldSetSearchMenu( m_controlRef, MAC_WXHMENU(m_menu->GetHMenu()) ) );
+    }
+    else
+    {
+        verify_noerr( HISearchFieldSetSearchMenu( m_controlRef, 0 ) );
+    }
+}
+
+wxMenu* wxMacSearchFieldControl::GetSearchMenu() const
+{
+    return m_menu;
+}
+
+#endif
+
+// ============================================================================
+// implementation
+// ============================================================================
+
+static pascal OSStatus wxMacSearchControlEventHandler( EventHandlerCallRef handler , EventRef event , void *data )
+{
+    OSStatus result = eventNotHandledErr ;
+
+    wxMacCarbonEvent cEvent( event ) ;
+
+    ControlRef controlRef ;
+    wxSearchCtrl* thisWindow = (wxSearchCtrl*) data ;
+    wxTextCtrl* textCtrl = wxDynamicCast( thisWindow , wxTextCtrl ) ;
+    cEvent.GetParameter( kEventParamDirectObject , &controlRef ) ;
+
+    switch( GetEventKind( event ) )
+    {
+        case kEventSearchFieldCancelClicked :
+            thisWindow->MacSearchFieldCancelHit( handler , event ) ;
+            break ;
+        case kEventSearchFieldSearchClicked :
+            thisWindow->MacSearchFieldSearchHit( handler , event ) ;
+            break ;
+    }
+
+    return result ;
+}
+
+DEFINE_ONE_SHOT_HANDLER_GETTER( wxMacSearchControlEventHandler )
+
+
+// ----------------------------------------------------------------------------
+// wxSearchCtrl creation
+// ----------------------------------------------------------------------------
+
+// creation
+// --------
+
+wxSearchCtrl::wxSearchCtrl()
+{ 
+    Init();
+}
+
+wxSearchCtrl::wxSearchCtrl(wxWindow *parent, wxWindowID id,
+           const wxString& value,
+           const wxPoint& pos,
+           const wxSize& size,
+           long style,
+           const wxValidator& validator,
+           const wxString& name)
+{
+    Init();
+
+    Create(parent, id, value, pos, size, style, validator, name);
+}
+
+void wxSearchCtrl::Init()
+{
+    m_menu = 0;
+}
+
+bool wxSearchCtrl::Create(wxWindow *parent, wxWindowID id,
+            const wxString& value,
+            const wxPoint& pos,
+            const wxSize& size,
+            long style,
+            const wxValidator& validator,
+            const wxString& name)
+{
+    if ( !wxTextCtrl::Create(parent, id, wxEmptyString, pos, size, wxBORDER_NONE | style, validator, name) )
+    {
+        return false;
+    }
+
+    EventHandlerRef searchEventHandler;
+    InstallControlEventHandler( m_peer->GetControlRef(), GetwxMacSearchControlEventHandlerUPP(),
+        GetEventTypeCount(eventList), eventList, this,
+        (EventHandlerRef *)&searchEventHandler);
+
+    return true;
+}
+
+wxSearchCtrl::~wxSearchCtrl()
+{
+    delete m_menu;
+}
+
+// search control specific interfaces
+// wxSearchCtrl owns menu after this call
+void wxSearchCtrl::SetMenu( wxMenu* menu )
+{
+    if ( menu == m_menu )
+    {
+        // no change
+        return;
+    }
+
+    if ( m_menu )
+    {
+        m_menu->SetInvokingWindow( 0 );
+    }
+
+    delete m_menu;
+    m_menu = menu;
+
+    if ( m_menu )
+    {
+        m_menu->SetInvokingWindow( this );
+    }
+
+    GetPeer()->SetSearchMenu( m_menu );
+}
+
+wxMenu* wxSearchCtrl::GetMenu()
+{
+    return m_menu;
+}
+
+void wxSearchCtrl::SetSearchButtonVisible( bool show )
+{
+    if ( GetSearchButtonVisible() == show )
+    {
+        // no change
+        return;
+    }
+    GetPeer()->SetSearchButtonVisible( show );
+}
+
+bool wxSearchCtrl::GetSearchButtonVisible() const
+{
+    return GetPeer()->GetSearchButtonVisible();
+}
+
+
+void wxSearchCtrl::SetCancelButtonVisible( bool show )
+{
+    if ( GetCancelButtonVisible() == show )
+    {
+        // no change
+        return;
+    }
+    GetPeer()->SetCancelButtonVisible( show );
+}
+
+bool wxSearchCtrl::GetCancelButtonVisible() const
+{
+    return GetPeer()->GetCancelButtonVisible();
+}
+
+wxInt32 wxSearchCtrl::MacSearchFieldSearchHit(WXEVENTHANDLERREF WXUNUSED(handler) , WXEVENTREF WXUNUSED(event) )
+{
+    wxCommandEvent event(wxEVT_COMMAND_SEARCHCTRL_SEARCH, m_windowId );
+    event.SetEventObject(this);
+    ProcessCommand(event);
+    return eventNotHandledErr ;
+}
+
+wxInt32 wxSearchCtrl::MacSearchFieldCancelHit(WXEVENTHANDLERREF WXUNUSED(handler) , WXEVENTREF WXUNUSED(event) )
+{
+    wxCommandEvent event(wxEVT_COMMAND_SEARCHCTRL_CANCEL, m_windowId );
+    event.SetEventObject(this);
+    ProcessCommand(event);
+    return eventNotHandledErr ;
+}
+
+
+void wxSearchCtrl::CreatePeer(
+           const wxString& str,
+           const wxPoint& pos,
+           const wxSize& size, long style )
+{
+#ifdef __WXMAC_OSX__
+#if MAC_OS_X_VERSION_MAX_ALLOWED > MAC_OS_X_VERSION_10_2
+    if ( UMAGetSystemVersion() >= 0x1030 )
+    {
+        m_peer = new wxMacSearchFieldControl( this , str , pos , size , style );
+    }
+#endif
+#endif
+    if ( !m_peer )
+    {
+        wxTextCtrl::CreatePeer( str, pos, size, style );
+    }
+}
+
+#endif // USE_NATIVE_SEARCH_CONTROL
+
+#endif // wxUSE_SEARCHCTRL
Index: src/mac/carbon/textctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/textctrl.cpp,v
retrieving revision 1.208
diff -u -4 -r1.208 textctrl.cpp
--- src/mac/carbon/textctrl.cpp	2006/11/21 07:08:35	1.208
+++ src/mac/carbon/textctrl.cpp	2006/12/10 07:47:08
@@ -62,8 +62,9 @@
 #include <TextEncodingConverter.h>
 #endif
 
 #include "wx/mac/uma.h"
+#include "wx/mac/carbon/private/mactext.h"
 
 #ifndef __WXMAC_OSX__
 enum
 {
@@ -164,62 +165,8 @@
     wxMutexGuiEnter() ;
     return result ;
 }
 
-// common interface for all implementations
-class wxMacTextControl : public wxMacControl
-{
-public :
-    wxMacTextControl( wxTextCtrl *peer ) ;
-    virtual ~wxMacTextControl() ;
-
-    virtual wxString GetStringValue() const = 0 ;
-    virtual void SetStringValue( const wxString &val ) = 0 ;
-    virtual void SetSelection( long from, long to ) = 0 ;
-    virtual void GetSelection( long* from, long* to ) const = 0 ;
-    virtual void WriteText( const wxString& str ) = 0 ;
-
-    virtual void SetStyle( long start, long end, const wxTextAttr& style ) ;
-    virtual void Copy() ;
-    virtual void Cut() ;
-    virtual void Paste() ;
-    virtual bool CanPaste() const ;
-    virtual void SetEditable( bool editable ) ;
-    virtual wxTextPos GetLastPosition() const ;
-    virtual void Replace( long from, long to, const wxString &str ) ;
-    virtual void Remove( long from, long to ) ;
-
-
-    virtual bool HasOwnContextMenu() const
-    { return false ; }
-
-    virtual bool SetupCursor( const wxPoint& pt )
-    { return false ; }
-
-    virtual void Clear() ;
-    virtual bool CanUndo() const;
-    virtual void Undo() ;
-    virtual bool CanRedo() const;
-    virtual void Redo() ;
-    virtual int GetNumberOfLines() const ;
-    virtual long XYToPosition(long x, long y) const;
-    virtual bool PositionToXY(long pos, long *x, long *y) const ;
-    virtual void ShowPosition(long WXUNUSED(pos)) ;
-    virtual int GetLineLength(long lineNo) const ;
-    virtual wxString GetLineText(long lineNo) const ;
-    virtual void CheckSpelling(bool check) { }
-
-#ifndef __WXMAC_OSX__
-    virtual void            MacControlUserPaneDrawProc(wxInt16 part) = 0 ;
-    virtual wxInt16         MacControlUserPaneHitTestProc(wxInt16 x, wxInt16 y) = 0 ;
-    virtual wxInt16         MacControlUserPaneTrackingProc(wxInt16 x, wxInt16 y, void* actionProc) = 0 ;
-    virtual void            MacControlUserPaneIdleProc() = 0 ;
-    virtual wxInt16         MacControlUserPaneKeyDownProc(wxInt16 keyCode, wxInt16 charCode, wxInt16 modifiers) = 0 ;
-    virtual void            MacControlUserPaneActivateProc(bool activating) = 0 ;
-    virtual wxInt16         MacControlUserPaneFocusProc(wxInt16 action) = 0 ;
-    virtual void            MacControlUserPaneBackgroundProc(void* info) = 0 ;
-#endif
-} ;
 
 // common parts for implementations based on MLTE
 
 class wxMacMLTEControl : public wxMacTextControl
@@ -318,40 +265,8 @@
 };
 
 #endif
 
-class wxMacUnicodeTextControl : public wxMacTextControl
-{
-public :
-    wxMacUnicodeTextControl( wxTextCtrl *wxPeer,
-                             const wxString& str,
-                             const wxPoint& pos,
-                             const wxSize& size, long style ) ;
-    virtual ~wxMacUnicodeTextControl();
-
-    virtual void VisibilityChanged(bool shown);
-    virtual wxString GetStringValue() const ;
-    virtual void SetStringValue( const wxString &str) ;
-    virtual void Copy();
-    virtual void Cut();
-    virtual void Paste();
-    virtual bool CanPaste() const;
-    virtual void SetEditable(bool editable) ;
-    virtual void GetSelection( long* from, long* to) const ;
-    virtual void SetSelection( long from , long to ) ;
-    virtual void WriteText(const wxString& str) ;
-
-protected :
-    // contains the tag for the content (is different for password and non-password controls)
-    OSType m_valueTag ;
-
-    // as the selection tag only works correctly when the control has the focus we have to mirror the
-    // intended value
-    EventHandlerRef m_focusHandlerRef ;
-public :
-    ControlEditTextSelectionRec m_selection ;
-};
-
 #endif
 
 // 'classic' MLTE implementation
 
@@ -479,8 +394,29 @@
         m_windowStyle |= wxTE_PROCESS_ENTER;
         style |= wxTE_PROCESS_ENTER ;
     }
 
+    CreatePeer( str, pos, size, style );
+
+    MacPostControlCreate(pos, size) ;
+
+    // only now the embedding is correct and we can do a positioning update
+
+    MacSuperChangedPosition() ;
+
+    if ( m_windowStyle & wxTE_READONLY)
+        SetEditable( false ) ;
+
+    SetCursor( wxCursor( wxCURSOR_IBEAM ) ) ;
+
+    return true;
+}
+
+void wxTextCtrl::CreatePeer(
+           const wxString& str,
+           const wxPoint& pos,
+           const wxSize& size, long style )
+{
     bool forceMLTE = false ;
 
 #if wxUSE_SYSTEM_OPTIONS
     if (wxSystemOptions::HasOption( wxMAC_TEXTCONTROL_USE_MLTE ) && (wxSystemOptions::GetOptionInt( wxMAC_TEXTCONTROL_USE_MLTE ) == 1))
@@ -516,21 +452,8 @@
 #if MAC_OS_X_VERSION_MAX_ALLOWED < MAC_OS_X_VERSION_10_5
     if ( !m_peer )
         m_peer = new wxMacMLTEClassicControl( this , str , pos , size , style ) ;
 #endif
-
-    MacPostControlCreate(pos, size) ;
-
-    // only now the embedding is correct and we can do a positioning update
-
-    MacSuperChangedPosition() ;
-
-    if ( m_windowStyle & wxTE_READONLY)
-        SetEditable( false ) ;
-
-    SetCursor( wxCursor( wxCURSOR_IBEAM ) ) ;
-
-    return true;
 }
 
 void wxTextCtrl::MacSuperChangedPosition()
 {
@@ -1425,35 +1348,45 @@
 }
 
 DEFINE_ONE_SHOT_HANDLER_GETTER( wxMacUnicodeTextControlEventHandler )
 
+wxMacUnicodeTextControl::wxMacUnicodeTextControl( wxTextCtrl *wxPeer ) : wxMacTextControl( wxPeer )
+{
+}
+
 wxMacUnicodeTextControl::wxMacUnicodeTextControl( wxTextCtrl *wxPeer,
     const wxString& str,
     const wxPoint& pos,
     const wxSize& size, long style )
     : wxMacTextControl( wxPeer )
 {
+    Create( wxPeer, str, pos, size, style );
+}
+
+bool wxMacUnicodeTextControl::Create( wxTextCtrl *wxPeer,
+    const wxString& str,
+    const wxPoint& pos,
+    const wxSize& size, long style )
+{
     m_font = wxPeer->GetFont() ;
     m_windowStyle = style ;
     Rect bounds = wxMacGetBoundsForControl( wxPeer , pos , size ) ;
     wxString st = str ;
     wxMacConvertNewlines10To13( &st ) ;
     wxMacCFStringHolder cf(st , m_font.GetEncoding()) ;
     CFStringRef cfr = cf ;
-    Boolean isPassword = ( m_windowStyle & wxTE_PASSWORD ) != 0 ;
-    m_valueTag = isPassword ? kControlEditTextPasswordCFStringTag : kControlEditTextCFStringTag ;
+    
+    m_valueTag = kControlEditTextCFStringTag ;
+    CreateControl( wxPeer, &bounds, cfr );
 
-    OSStatus err = CreateEditUnicodeTextControl(
-        MAC_WXHWND(wxPeer->MacGetTopLevelWindowRef()), &bounds , cfr ,
-        isPassword , NULL , &m_controlRef ) ;
-    verify_noerr( err );
-
     if ( !(m_windowStyle & wxTE_MULTILINE) )
         SetData<Boolean>( kControlEditTextPart , kControlEditTextSingleLineTag , true ) ;
 
     InstallControlEventHandler( m_controlRef , GetwxMacUnicodeTextControlEventHandlerUPP(),
                                 GetEventTypeCount(unicodeTextControlEventList), unicodeTextControlEventList, this,
                                 &m_focusHandlerRef);
+                                
+    return true;
 }
 
 wxMacUnicodeTextControl::~wxMacUnicodeTextControl()
 {
@@ -1502,8 +1435,21 @@
     wxString st = str ;
     wxMacConvertNewlines10To13( &st ) ;
     wxMacCFStringHolder cf( st , m_font.GetEncoding() ) ;
     verify_noerr( SetData<CFStringRef>( 0, m_valueTag , cf ) ) ;
+}
+
+void wxMacUnicodeTextControl::CreateControl( wxTextCtrl* peer, const Rect* bounds, CFStringRef cfr )
+{
+    Boolean isPassword = ( m_windowStyle & wxTE_PASSWORD ) != 0 ;
+    if ( isPassword )
+    {
+        m_valueTag = kControlEditTextPasswordCFStringTag ;
+    }
+    OSStatus err = CreateEditUnicodeTextControl(
+        MAC_WXHWND(peer->MacGetTopLevelWindowRef()), bounds , cfr ,
+        isPassword , NULL , &m_controlRef ) ;
+    verify_noerr( err );
 }
 
 void wxMacUnicodeTextControl::Copy()
 {
Index: src/wxWindows.xcodeproj/project.pbxproj
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/wxWindows.xcodeproj/project.pbxproj,v
retrieving revision 1.9
diff -u -4 -r1.9 project.pbxproj
--- src/wxWindows.xcodeproj/project.pbxproj	2006/11/06 12:50:11	1.9
+++ src/wxWindows.xcodeproj/project.pbxproj	2006/12/10 07:47:09
@@ -405,9 +405,8 @@
 		4086C858063AB2FF00D4CD53 /* pngwtran.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863DC01FA022D0175ACA7 /* pngwtran.c */; };
 		4086C859063AB2FF00D4CD53 /* pngwrite.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863DB01FA022D0175ACA7 /* pngwrite.c */; };
 		4086C85A063AB2FF00D4CD53 /* pngwio.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863DA01FA022D0175ACA7 /* pngwio.c */; };
 		4086C85B063AB2FF00D4CD53 /* pngtrans.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863D901FA022D0175ACA7 /* pngtrans.c */; };
-		4086C85C063AB2FF00D4CD53 /* pngtest.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863D801FA022D0175ACA7 /* pngtest.c */; };
 		4086C85D063AB2FF00D4CD53 /* pngset.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863D701FA022D0175ACA7 /* pngset.c */; };
 		4086C85E063AB2FF00D4CD53 /* pngrutil.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863D601FA022D0175ACA7 /* pngrutil.c */; };
 		4086C85F063AB2FF00D4CD53 /* pngrtran.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863D501FA022D0175ACA7 /* pngrtran.c */; };
 		4086C860063AB2FF00D4CD53 /* pngrio.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863D401FA022D0175ACA7 /* pngrio.c */; };
@@ -779,9 +778,8 @@
 		4086CB6B063AB30000D4CD53 /* pngwtran.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863DC01FA022D0175ACA7 /* pngwtran.c */; };
 		4086CB6C063AB30000D4CD53 /* pngwrite.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863DB01FA022D0175ACA7 /* pngwrite.c */; };
 		4086CB6D063AB30000D4CD53 /* pngwio.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863DA01FA022D0175ACA7 /* pngwio.c */; };
 		4086CB6E063AB30000D4CD53 /* pngtrans.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863D901FA022D0175ACA7 /* pngtrans.c */; };
-		4086CB6F063AB30000D4CD53 /* pngtest.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863D801FA022D0175ACA7 /* pngtest.c */; };
 		4086CB70063AB30000D4CD53 /* pngset.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863D701FA022D0175ACA7 /* pngset.c */; };
 		4086CB71063AB30000D4CD53 /* pngrutil.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863D601FA022D0175ACA7 /* pngrutil.c */; };
 		4086CB72063AB30000D4CD53 /* pngrtran.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863D501FA022D0175ACA7 /* pngrtran.c */; };
 		4086CB73063AB30000D4CD53 /* pngrio.c in Sources */ = {isa = PBXBuildFile; fileRef = F5A863D401FA022D0175ACA7 /* pngrio.c */; };
@@ -1111,8 +1109,17 @@
 		43DFF5BA09926F7B0033000B /* helpdlg.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 43DFF5B809926F7B0033000B /* helpdlg.cpp */; };
 		43DFF5BB09926F7B0033000B /* helpwnd.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 43DFF5B909926F7B0033000B /* helpwnd.cpp */; };
 		43DFF5BC09926F7B0033000B /* helpdlg.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 43DFF5B809926F7B0033000B /* helpdlg.cpp */; };
 		43DFF5BD09926F7B0033000B /* helpwnd.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 43DFF5B909926F7B0033000B /* helpwnd.cpp */; };
+		61048A650B2756CB009C253D /* srchctrl.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 61048A640B2756CB009C253D /* srchctrl.cpp */; };
+		61048A660B2756CB009C253D /* srchctrl.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 61048A640B2756CB009C253D /* srchctrl.cpp */; };
+		61048A740B277DE5009C253D /* mactext.h in Headers */ = {isa = PBXBuildFile; fileRef = 61048A6E0B277DE5009C253D /* mactext.h */; };
+		61048A750B277DE5009C253D /* overlay.h in Headers */ = {isa = PBXBuildFile; fileRef = 61048A6F0B277DE5009C253D /* overlay.h */; };
+		61048A760B277DE5009C253D /* print.h in Headers */ = {isa = PBXBuildFile; fileRef = 61048A700B277DE5009C253D /* print.h */; };
+		61048AE20B278C9A009C253D /* srchctrl.h in Headers */ = {isa = PBXBuildFile; fileRef = 61048AE10B278C9A009C253D /* srchctrl.h */; };
+		61048AE30B278C9A009C253D /* srchctrl.h in Headers */ = {isa = PBXBuildFile; fileRef = 61048AE10B278C9A009C253D /* srchctrl.h */; };
+		61048BE90B27B7D0009C253D /* srchctlg.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 61048BE80B27B7D0009C253D /* srchctlg.cpp */; };
+		61048BEA0B27B7D0009C253D /* srchctlg.cpp in Sources */ = {isa = PBXBuildFile; fileRef = 61048BE80B27B7D0009C253D /* srchctlg.cpp */; };
 /* End PBXBuildFile section */
 
 /* Begin PBXBuildRule section */
 		40EEBF1E08BE1E8B000BD0A5 /* PBXBuildRule */ = {
@@ -1124,25 +1131,8 @@
 			);
 		};
 /* End PBXBuildRule section */
 
-/* Begin PBXBuildStyle section */
-		402AB2150AFF45A400C0D0C9 /* Development */ = {
-			isa = PBXBuildStyle;
-			buildSettings = {
-				COPY_PHASE_STRIP = NO;
-			};
-			name = Development;
-		};
-		402AB2160AFF45A400C0D0C9 /* Deployment */ = {
-			isa = PBXBuildStyle;
-			buildSettings = {
-				COPY_PHASE_STRIP = YES;
-			};
-			name = Deployment;
-		};
-/* End PBXBuildStyle section */
-
 /* Begin PBXContainerItemProxy section */
 		4086D202063BC05E00D4CD53 /* PBXContainerItemProxy */ = {
 			isa = PBXContainerItemProxy;
 			containerPortal = 0867D690FE84028FC02AAC07 /* Project object */;
@@ -1158,20 +1148,8 @@
 			remoteInfo = wxDynamicDebug;
 		};
 /* End PBXContainerItemProxy section */
 
-/* Begin PBXCopyFilesBuildPhase section */
-		409E9DD5065140690091DE7E /* CopyFiles */ = {
-			isa = PBXCopyFilesBuildPhase;
-			buildActionMask = 2147483647;
-			dstPath = "";
-			dstSubfolderSpec = 7;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-		};
-/* End PBXCopyFilesBuildPhase section */
-
 /* Begin PBXFileReference section */
 		08FB77AAFE841565C02AAC07 /* Carbon.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; name = Carbon.framework; path = /System/Library/Frameworks/Carbon.framework; sourceTree = "<absolute>"; };
 		0A98CB6A07146A06007B4289 /* statbar.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = statbar.cpp; sourceTree = "<group>"; };
 		0A98CC470715CFBC007B4289 /* gdiobj.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = gdiobj.cpp; sourceTree = "<group>"; };
@@ -1351,8 +1329,14 @@
 		43DFF59B09926B080033000B /* helpdlg.h */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.c.h; path = helpdlg.h; sourceTree = "<group>"; };
 		43DFF59C09926B080033000B /* helpwnd.h */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.c.h; path = helpwnd.h; sourceTree = "<group>"; };
 		43DFF5B809926F7B0033000B /* helpdlg.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = helpdlg.cpp; sourceTree = "<group>"; };
 		43DFF5B909926F7B0033000B /* helpwnd.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = helpwnd.cpp; sourceTree = "<group>"; };
+		61048A640B2756CB009C253D /* srchctrl.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = srchctrl.cpp; sourceTree = "<group>"; };
+		61048A6E0B277DE5009C253D /* mactext.h */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.c.h; name = mactext.h; path = private/mactext.h; sourceTree = "<group>"; };
+		61048A6F0B277DE5009C253D /* overlay.h */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.c.h; name = overlay.h; path = private/overlay.h; sourceTree = "<group>"; };
+		61048A700B277DE5009C253D /* print.h */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.c.h; name = print.h; path = private/print.h; sourceTree = "<group>"; };
+		61048AE10B278C9A009C253D /* srchctrl.h */ = {isa = PBXFileReference; fileEncoding = 30; indentWidth = 4; lastKnownFileType = sourcecode.c.h; path = srchctrl.h; sourceTree = "<group>"; tabWidth = 4; usesTabs = 0; };
+		61048BE80B27B7D0009C253D /* srchctlg.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = srchctlg.cpp; sourceTree = "<group>"; };
 		CA0CB57B0450773900000102 /* accesscmn.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = accesscmn.cpp; sourceTree = "<group>"; };
 		CA0CB57C0450773900000102 /* datacmn.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = datacmn.cpp; sourceTree = "<group>"; };
 		CA0CB57D0450773900000102 /* dpycmn.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = dpycmn.cpp; sourceTree = "<group>"; };
 		CA0CB57E0450773900000102 /* rgncmn.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = rgncmn.cpp; sourceTree = "<group>"; };
@@ -2016,9 +2000,9 @@
 		F5A861F901FA022C0175ACA7 /* statbrma.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = statbrma.cpp; sourceTree = "<group>"; };
 		F5A861FB01FA022C0175ACA7 /* statlmac.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = statlmac.cpp; sourceTree = "<group>"; };
 		F5A861FC01FA022C0175ACA7 /* stattext.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = stattext.cpp; sourceTree = "<group>"; };
 		F5A861FD01FA022C0175ACA7 /* tabctrl.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = tabctrl.cpp; sourceTree = "<group>"; };
-		F5A861FF01FA022C0175ACA7 /* textctrl.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = textctrl.cpp; sourceTree = "<group>"; };
+		F5A861FF01FA022C0175ACA7 /* textctrl.cpp */ = {isa = PBXFileReference; fileEncoding = 30; indentWidth = 4; lastKnownFileType = sourcecode.cpp.cpp; path = textctrl.cpp; sourceTree = "<group>"; tabWidth = 4; usesTabs = 0; };
 		F5A8620101FA022C0175ACA7 /* timer.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = timer.cpp; sourceTree = "<group>"; };
 		F5A8620201FA022C0175ACA7 /* toolbar.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = toolbar.cpp; sourceTree = "<group>"; };
 		F5A8620301FA022C0175ACA7 /* tooltip.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = tooltip.cpp; sourceTree = "<group>"; };
 		F5A8620401FA022C0175ACA7 /* toplevel.cpp */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.cpp.cpp; path = toplevel.cpp; sourceTree = "<group>"; };
@@ -2035,9 +2019,8 @@
 		F5A863D401FA022D0175ACA7 /* pngrio.c */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.c.c; path = pngrio.c; sourceTree = "<group>"; };
 		F5A863D501FA022D0175ACA7 /* pngrtran.c */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.c.c; path = pngrtran.c; sourceTree = "<group>"; };
 		F5A863D601FA022D0175ACA7 /* pngrutil.c */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.c.c; path = pngrutil.c; sourceTree = "<group>"; };
 		F5A863D701FA022D0175ACA7 /* pngset.c */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.c.c; path = pngset.c; sourceTree = "<group>"; };
-		F5A863D801FA022D0175ACA7 /* pngtest.c */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.c.c; path = pngtest.c; sourceTree = "<group>"; };
 		F5A863D901FA022D0175ACA7 /* pngtrans.c */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.c.c; path = pngtrans.c; sourceTree = "<group>"; };
 		F5A863DA01FA022D0175ACA7 /* pngwio.c */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.c.c; path = pngwio.c; sourceTree = "<group>"; };
 		F5A863DB01FA022D0175ACA7 /* pngwrite.c */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.c.c; path = pngwrite.c; sourceTree = "<group>"; };
 		F5A863DC01FA022D0175ACA7 /* pngwtran.c */ = {isa = PBXFileReference; fileEncoding = 30; lastKnownFileType = sourcecode.c.c; path = pngwtran.c; sourceTree = "<group>"; };
@@ -2286,8 +2269,18 @@
 			);
 			path = richtext;
 			sourceTree = "<group>";
 		};
+		61048A6D0B277DC2009C253D /* private */ = {
+			isa = PBXGroup;
+			children = (
+				61048A6E0B277DE5009C253D /* mactext.h */,
+				61048A6F0B277DE5009C253D /* overlay.h */,
+				61048A700B277DE5009C253D /* print.h */,
+			);
+			name = private;
+			sourceTree = "<group>";
+		};
 		CADEF54203C8C0A800000133 /* morefilex */ = {
 			isa = PBXGroup;
 			children = (
 				CADEF54303C8C0A800000133 /* MoreFilesX.c */,
@@ -2482,8 +2475,9 @@
 				F5A85F2701FA022B0175ACA7 /* spinbutt.h */,
 				F5A85F2801FA022B0175ACA7 /* spinctrl.h */,
 				F5A85F2901FA022B0175ACA7 /* splash.h */,
 				F5A85F2A01FA022B0175ACA7 /* splitter.h */,
+				61048AE10B278C9A009C253D /* srchctrl.h */,
 				F5A85F2B01FA022B0175ACA7 /* stack.h */,
 				F5A85F2C01FA022B0175ACA7 /* statbmp.h */,
 				F5A85F2D01FA022B0175ACA7 /* statbox.h */,
 				F5A85F3001FA022B0175ACA7 /* statusbr.h */,
@@ -2610,8 +2604,9 @@
 		};
 		F5A85D3B01FA022B0175ACA7 /* mac/carbon */ = {
 			isa = PBXGroup;
 			children = (
+				61048A6D0B277DC2009C253D /* private */,
 				F5A85D3C01FA022B0175ACA7 /* accel.h */,
 				F5A85D3D01FA022B0175ACA7 /* aga.h */,
 				F5A85D3E01FA022B0175ACA7 /* app.h */,
 				F5A85D3F01FA022B0175ACA7 /* bitmap.h */,
@@ -2971,8 +2966,9 @@
 				F5A8609501FA022C0175ACA7 /* scrlwing.cpp */,
 				CA60176D04D43CAA00000080 /* selstore.cpp */,
 				F5A8609701FA022C0175ACA7 /* splash.cpp */,
 				F5A8609801FA022C0175ACA7 /* splitter.cpp */,
+				61048BE80B27B7D0009C253D /* srchctlg.cpp */,
 				F5A8609A01FA022C0175ACA7 /* statusbr.cpp */,
 				F5A8609B01FA022C0175ACA7 /* tabg.cpp */,
 				F5A8609D01FA022C0175ACA7 /* textdlgg.cpp */,
 				F5A8609E01FA022C0175ACA7 /* tipdlg.cpp */,
@@ -3147,8 +3143,9 @@
 				F5A861F401FA022C0175ACA7 /* slider.cpp */,
 				4086C3A2063A454900D4CD53 /* sound.cpp */,
 				F5A861F501FA022C0175ACA7 /* spinbutt.cpp */,
 				407A90F6065742ED00F01665 /* spinctrl.cpp */,
+				61048A640B2756CB009C253D /* srchctrl.cpp */,
 				F5A861F701FA022C0175ACA7 /* statbmp.cpp */,
 				F5A861F801FA022C0175ACA7 /* statbox.cpp */,
 				F5A861F901FA022C0175ACA7 /* statbrma.cpp */,
 				F5A861FB01FA022C0175ACA7 /* statlmac.cpp */,
@@ -3198,9 +3195,8 @@
 				F5A863D401FA022D0175ACA7 /* pngrio.c */,
 				F5A863D501FA022D0175ACA7 /* pngrtran.c */,
 				F5A863D601FA022D0175ACA7 /* pngrutil.c */,
 				F5A863D701FA022D0175ACA7 /* pngset.c */,
-				F5A863D801FA022D0175ACA7 /* pngtest.c */,
 				F5A863D901FA022D0175ACA7 /* pngtrans.c */,
 				F5A863DA01FA022D0175ACA7 /* pngwio.c */,
 				F5A863DB01FA022D0175ACA7 /* pngwrite.c */,
 				F5A863DC01FA022D0175ACA7 /* pngwtran.c */,
@@ -3274,8 +3270,9 @@
 				4086C745063AB2FF00D4CD53 /* setup.h in Headers */,
 				40011F3D0897D8DF00E4DE95 /* setup0.h in Headers */,
 				43DFF59D09926B080033000B /* helpdlg.h in Headers */,
 				43DFF59E09926B080033000B /* helpwnd.h in Headers */,
+				61048AE20B278C9A009C253D /* srchctrl.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
 		4086CA57063AB30000D4CD53 /* Headers */ = {
@@ -3285,8 +3282,12 @@
 				4086CA58063AB30000D4CD53 /* setup.h in Headers */,
 				40011F3C0897D8DF00E4DE95 /* setup0.h in Headers */,
 				43DFF59F09926B080033000B /* helpdlg.h in Headers */,
 				43DFF5A009926B080033000B /* helpwnd.h in Headers */,
+				61048A740B277DE5009C253D /* mactext.h in Headers */,
+				61048A750B277DE5009C253D /* overlay.h in Headers */,
+				61048A760B277DE5009C253D /* print.h in Headers */,
+				61048AE30B278C9A009C253D /* srchctrl.h in Headers */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
 /* End PBXHeadersBuildPhase section */
@@ -3295,10 +3296,8 @@
 		4086C742063AB2FF00D4CD53 /* static */ = {
 			isa = PBXNativeTarget;
 			buildConfigurationList = 18B5B98A08564B5D002803C9 /* Build configuration list for PBXNativeTarget "static" */;
 			buildPhases = (
-				4086C743063AB2FF00D4CD53 /* ShellScript */,
-				409E9DD5065140690091DE7E /* CopyFiles */,
 				4086C744063AB2FF00D4CD53 /* Headers */,
 				4086C746063AB2FF00D4CD53 /* Sources */,
 				4086C8C8063AB2FF00D4CD53 /* Frameworks */,
 				4086C8C9063AB2FF00D4CD53 /* Rez */,
@@ -3337,14 +3336,8 @@
 /* Begin PBXProject section */
 		0867D690FE84028FC02AAC07 /* Project object */ = {
 			isa = PBXProject;
 			buildConfigurationList = 18B5B99E08564B5D002803C9 /* Build configuration list for PBXProject "wxWindows" */;
-			buildSettings = {
-			};
-			buildStyles = (
-				402AB2150AFF45A400C0D0C9 /* Development */,
-				402AB2160AFF45A400C0D0C9 /* Deployment */,
-			);
 			hasScannedForEncodings = 1;
 			mainGroup = 0867D691FE84028FC02AAC07 /* wxWindows */;
 			productRefGroup = 034768DDFF38A45A11DB9C8B /* Products */;
 			projectDirPath = "";
@@ -3373,17 +3366,8 @@
 		};
 /* End PBXRezBuildPhase section */
 
 /* Begin PBXShellScriptBuildPhase section */
-		4086C743063AB2FF00D4CD53 /* ShellScript */ = {
-			isa = PBXShellScriptBuildPhase;
-			buildActionMask = 2147483647;
-			files = (
-			);
-			runOnlyForDeploymentPostprocessing = 0;
-			shellPath = /bin/sh;
-			shellScript = "$SRCROOT/../distrib/mac/pbsetup-sh \"${SRCROOT}\" \"${SYMROOT}\"";
-		};
 		4086CA56063AB30000D4CD53 /* ShellScript */ = {
 			isa = PBXShellScriptBuildPhase;
 			buildActionMask = 2147483647;
 			files = (
@@ -3667,9 +3651,8 @@
 				4086C858063AB2FF00D4CD53 /* pngwtran.c in Sources */,
 				4086C859063AB2FF00D4CD53 /* pngwrite.c in Sources */,
 				4086C85A063AB2FF00D4CD53 /* pngwio.c in Sources */,
 				4086C85B063AB2FF00D4CD53 /* pngtrans.c in Sources */,
-				4086C85C063AB2FF00D4CD53 /* pngtest.c in Sources */,
 				4086C85D063AB2FF00D4CD53 /* pngset.c in Sources */,
 				4086C85E063AB2FF00D4CD53 /* pngrutil.c in Sources */,
 				4086C85F063AB2FF00D4CD53 /* pngrtran.c in Sources */,
 				4086C860063AB2FF00D4CD53 /* pngrio.c in Sources */,
@@ -3932,8 +3915,10 @@
 				402AB2800AFF567600C0D0C9 /* xh_animatctrl.cpp in Sources */,
 				402AB2810AFF567600C0D0C9 /* xh_collpane.cpp in Sources */,
 				402AB2820AFF567600C0D0C9 /* xh_htmllbox.cpp in Sources */,
 				402AB42C0AFF574600C0D0C9 /* imagtga.cpp in Sources */,
+				61048A650B2756CB009C253D /* srchctrl.cpp in Sources */,
+				61048BE90B27B7D0009C253D /* srchctlg.cpp in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
 		4086CA59063AB30000D4CD53 /* Sources */ = {
@@ -4208,9 +4193,8 @@
 				4086CB6B063AB30000D4CD53 /* pngwtran.c in Sources */,
 				4086CB6C063AB30000D4CD53 /* pngwrite.c in Sources */,
 				4086CB6D063AB30000D4CD53 /* pngwio.c in Sources */,
 				4086CB6E063AB30000D4CD53 /* pngtrans.c in Sources */,
-				4086CB6F063AB30000D4CD53 /* pngtest.c in Sources */,
 				4086CB70063AB30000D4CD53 /* pngset.c in Sources */,
 				4086CB71063AB30000D4CD53 /* pngrutil.c in Sources */,
 				4086CB72063AB30000D4CD53 /* pngrtran.c in Sources */,
 				4086CB73063AB30000D4CD53 /* pngrio.c in Sources */,
@@ -4473,8 +4457,10 @@
 				402AB27D0AFF567500C0D0C9 /* xh_animatctrl.cpp in Sources */,
 				402AB27E0AFF567600C0D0C9 /* xh_collpane.cpp in Sources */,
 				402AB27F0AFF567600C0D0C9 /* xh_htmllbox.cpp in Sources */,
 				402AB42B0AFF574600C0D0C9 /* imagtga.cpp in Sources */,
+				61048A660B2756CB009C253D /* srchctrl.cpp in Sources */,
+				61048BEA0B27B7D0009C253D /* srchctlg.cpp in Sources */,
 			);
 			runOnlyForDeploymentPostprocessing = 0;
 		};
 /* End PBXSourcesBuildPhase section */

 	  	 
