Index: src/common/db.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/db.cpp,v
retrieving revision 1.114
diff -u -w -b -2 -r1.114 db.cpp
--- src/common/db.cpp	2004/12/29 21:19:37	1.114
+++ src/common/db.cpp	2005/01/30 07:23:44
@@ -473,4 +473,8 @@
         Close();
     }
+    // Free the connection to the datasource
+    if (hdbc!=NULL && SQLFreeConnect(hdbc) != SQL_SUCCESS)
+        DispAllErrors(henv, hdbc);
+
 }  // wxDb destructor
 
@@ -796,4 +800,9 @@
 {
     wxASSERT(inConnectStr.Length());
+    return Open(inConnectStr, NULL, failOnDataTypeUnsupported);
+}
+
+bool wxDb::Open(const wxString& inConnectStr, SQLHWND parentWnd, bool failOnDataTypeUnsupported)
+{
     dsn        = wxT("");
     uid        = wxT("");
@@ -824,5 +833,5 @@
     inConnectionStr = inConnectStr;
 
-    retcode = SQLDriverConnect(hdbc, NULL, (SQLTCHAR FAR *)inConnectionStr.c_str(),
+    retcode = SQLDriverConnect(hdbc, parentWnd, (SQLTCHAR FAR *)inConnectionStr.c_str(),
                         (SWORD)inConnectionStr.Length(), (SQLTCHAR FAR *)outConnectBuffer,
                         sizeof(outConnectBuffer), &outConnectBufferLen, SQL_DRIVER_COMPLETE );
@@ -1731,4 +1740,5 @@
     dbIsOpen = false;
 
+	initialize();
 } // wxDb::Close()
 
@@ -1780,5 +1790,4 @@
  */
 {
-    wxString odbcErrMsg;
 
 #ifdef __VMS
@@ -1788,11 +1797,11 @@
 #endif
      {
-        odbcErrMsg.Printf(wxT("SQL State = %s\nNative Error Code = %li\nError Message = %s\n"), sqlState, nativeError, errorMsg);
-        logError(odbcErrMsg, sqlState);
+        m_last_error_msg.Printf(wxT("SQL State = %s\nNative Error Code = %li\nError Message = %s\n"), sqlState, nativeError, errorMsg);
+        logError(m_last_error_msg, sqlState);
         if (!silent)
         {
 #ifdef DBDEBUG_CONSOLE
             // When run in console mode, use standard out to display errors.
-            cout << odbcErrMsg.c_str() << endl;
+            cout << m_last_error_msg.c_str() << endl;
             cout << wxT("Press any key to continue...") << endl;
             getchar();
@@ -1800,5 +1809,5 @@
 
 #ifdef __WXDEBUG__
-            wxLogDebug(odbcErrMsg,wxT("ODBC DEBUG MESSAGE from DispAllErrors()"));
+            wxLogDebug(m_last_error_msg,wxT("ODBC DEBUG MESSAGE from DispAllErrors()"));
 #endif
         }
@@ -1828,9 +1837,7 @@
 void wxDb::DispNextError(void)
 {
-    wxString odbcErrMsg;
+    m_last_error_msg.Printf(wxT("SQL State = %s\nNative Error Code = %li\nError Message = %s\n"), sqlState, nativeError, errorMsg);
+    logError(m_last_error_msg, sqlState);
 
-    odbcErrMsg.Printf(wxT("SQL State = %s\nNative Error Code = %li\nError Message = %s\n"), sqlState, nativeError, errorMsg);
-    logError(odbcErrMsg, sqlState);
-
     if (silent)
         return;
@@ -1838,5 +1845,5 @@
 #ifdef DBDEBUG_CONSOLE
     // When run in console mode, use standard out to display errors.
-    cout << odbcErrMsg.c_str() << endl;
+    cout << m_last_error_msg.c_str() << endl;
     cout << wxT("Press any key to continue...")  << endl;
     getchar();
@@ -1844,5 +1851,5 @@
 
 #ifdef __WXDEBUG__
-    wxLogDebug(odbcErrMsg,wxT("ODBC DEBUG MESSAGE"));
+    wxLogDebug(m_last_error_msg,wxT("ODBC DEBUG MESSAGE"));
 #endif  // __WXDEBUG__
 
@@ -1861,5 +1868,5 @@
     {
         int i;
-        for (i = 0; i < DB_MAX_ERROR_HISTORY; i++)
+        for (i = 0; i < DB_MAX_ERROR_HISTORY-1; i++)
             wxStrcpy(errorList[i], errorList[i+1]);
         pLast--;
@@ -1867,5 +1874,5 @@
 
     wxStrncpy(errorList[pLast], errMsg, DB_MAX_ERROR_MSG_LEN);
-    errorList[pLast][DB_MAX_ERROR_MSG_LEN] = 0;
+    errorList[pLast][DB_MAX_ERROR_MSG_LEN-1] = 0;
 
     if (SQLState.Length())
Index: include/wx/db.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/db.h,v
retrieving revision 1.89
diff -u -w -b -2 -r1.89 db.h
--- include/wx/db.h	2005/01/21 18:48:18	1.89
+++ include/wx/db.h	2005/01/29 07:11:23
@@ -598,4 +598,7 @@
 #endif
     wxChar errorMsg[SQL_MAX_MESSAGE_LENGTH];
+
+    wxString m_last_error_msg;                          ///< contains the most recent error message written into the log file
+
     SDWORD nativeError;
     wxChar sqlState[20];
@@ -621,4 +624,6 @@
     // Data Source Name, User ID, Password and whether open should fail on data type not supported
     bool         Open(const wxString& inConnectStr, bool failOnDataTypeUnsupported=true);
+                    ///This version of Open will open the odbc source selection dialog. Cast a wxWindow::GetHandle() to SQLHWND to use.
+    bool         Open(const wxString& inConnectStr, SQLHWND parentWnd, bool failOnDataTypeUnsupported=true);
     bool         Open(const wxString &Dsn, const wxString &Uid, const wxString &AuthStr, bool failOnDataTypeUnsupported=true);
     bool         Open(wxDbConnectInf *dbConnectInf, bool failOnDataTypeUnsupported=true);
@@ -693,4 +698,6 @@
 
     bool         FwdOnlyCursors(void)  {return fwdOnlyCursors;}
+
+    wxString     GetLastErrorMsg() const { return m_last_error_msg; }
 
     // These two functions are provided strictly for use by wxDbTable.


 	  	 
