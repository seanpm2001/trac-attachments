Index: contrib/samples/gizmos/dynsash_switch/dynsash_switch.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/contrib/samples/gizmos/dynsash_switch/dynsash_switch.cpp,v
retrieving revision 1.7
diff -u -B -r1.7 dynsash_switch.cpp
--- contrib/samples/gizmos/dynsash_switch/dynsash_switch.cpp	2004/06/08 19:27:33	1.7
+++ contrib/samples/gizmos/dynsash_switch/dynsash_switch.cpp	2005/01/17 11:28:17
@@ -239,7 +239,7 @@
     wxScrollBar *hscroll = m_dyn_sash->GetHScrollBar(this);
     wxScrollBar *vscroll = m_dyn_sash->GetVScrollBar(this);
 
-    if (event.m_eventObject == hscroll || event.m_eventObject == vscroll) {
+    if (event.GetEventObject() == hscroll || event.GetEventObject() == vscroll) {
         m_view->SetFocus();
     } else {
         event.Skip();
Index: contrib/src/fl/controlbar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/contrib/src/fl/controlbar.cpp,v
retrieving revision 1.23
diff -u -B -r1.23 controlbar.cpp
--- contrib/src/fl/controlbar.cpp	2004/10/28 11:20:44	1.23
+++ contrib/src/fl/controlbar.cpp	2005/01/17 11:28:18
@@ -1558,11 +1558,11 @@
     {
         bool isInputEvt = true;
 #if wxCHECK_VERSION(2,3,0)
-        if ( event.m_eventType != cbEVT_PL_LEFT_DOWN &&
-             event.m_eventType != cbEVT_PL_LEFT_UP &&
-             event.m_eventType != cbEVT_PL_RIGHT_DOWN &&
-             event.m_eventType != cbEVT_PL_RIGHT_UP &&
-             event.m_eventType != cbEVT_PL_MOTION )
+        if ( event.GetEventType() != cbEVT_PL_LEFT_DOWN &&
+             event.GetEventType() != cbEVT_PL_LEFT_UP &&
+             event.GetEventType() != cbEVT_PL_RIGHT_DOWN &&
+             event.GetEventType() != cbEVT_PL_RIGHT_UP &&
+             event.GetEventType() != cbEVT_PL_MOTION )
             isInputEvt = false;
 #else
         switch ( event.m_eventType )
Index: contrib/src/gizmos/dynamicsash.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/contrib/src/gizmos/dynamicsash.cpp,v
retrieving revision 1.12
diff -u -B -r1.12 dynamicsash.cpp
--- contrib/src/gizmos/dynamicsash.cpp	2004/10/06 17:04:05	1.12
+++ contrib/src/gizmos/dynamicsash.cpp	2005/01/17 11:28:18
@@ -1180,7 +1180,7 @@
 }
 
 void wxDynamicSashWindowLeaf::OnFocus(wxFocusEvent &event) {
-    if (event.m_eventObject == m_hscroll || event.m_eventObject == m_vscroll) {
+    if (event.GetEventObject() == m_hscroll || event.GetEventObject() == m_vscroll) {
         m_child->SetFocus();
     }
 }
Index: docs/changes.txt
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/changes.txt,v
retrieving revision 1.600
diff -u -B -r1.600 changes.txt
--- docs/changes.txt	2005/01/16 20:50:06	1.600
+++ docs/changes.txt	2005/01/17 11:28:20
@@ -7,6 +7,8 @@
 
 All:
 
+- wxEvent and its derivatives have their variable members nonpublic now.
+  Use the Get/Set accessors (Mart Raudsepp)
 - new classes for reading and writing ZIP files (M.J.Wetherell)
 - large files support for wxFFile (M.J.Wetherell)
 - classes in the manual are now cross-referenced (Zbigniew Zagórski)
@@ -71,6 +73,7 @@
   runtime, which library version is installed so that these functions
   are only called with GTK+ 2.4.x installed and should yield linker
   errors otherwise.
+- wxTextCtrl text insertion efficiency fixed. (Mart Raudsepp)
 
 wxMac:
 
Index: docs/latex/wx/activevt.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/activevt.tex,v
retrieving revision 1.8
diff -u -B -r1.8 activevt.tex
--- docs/latex/wx/activevt.tex	2004/10/14 22:31:52	1.8
+++ docs/latex/wx/activevt.tex	2005/01/17 11:28:20
@@ -49,12 +49,6 @@
 
 Constructor.
 
-\membersection{wxActivateEvent::m\_active}\label{wxactivateeventmactive}
-
-\member{bool}{m\_active}
-
-true if the window or application was activated.
-
 \membersection{wxActivateEvent::GetActive}\label{wxactivateeventgetactive}
 
 \constfunc{bool}{GetActive}{\void}
Index: docs/latex/wx/eraseevt.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/eraseevt.tex,v
retrieving revision 1.6
diff -u -B -r1.6 eraseevt.tex
--- docs/latex/wx/eraseevt.tex	2004/09/30 11:15:57	1.6
+++ docs/latex/wx/eraseevt.tex	2005/01/17 11:28:20
@@ -33,8 +33,8 @@
 
 \wxheading{Remarks}
 
-Use the {\bf m\_DC} device context to draw into, don't create wxPaintDC in 
-the event handler.
+Use the device context returned by \helpref{GetDC}{wxeraseeventgetdc} to draw into,
+don't create wxPaintDC in the event handler.
 
 \wxheading{See also}
 
@@ -49,15 +49,9 @@
 
 Constructor.
 
-\membersection{wxEraseEvent::m\_dc}\label{wxeraseeventmdc}
-
-\member{wxDC*}{m\_dc}
-
-The device context associated with the erase event.
-
 \membersection{wxEraseEvent::GetDC}\label{wxeraseeventgetdc}
 
 \constfunc{wxDC*}{GetDC}{\void}
 
-Returns the device context to draw into.
+Returns the device context associated with the erase event to draw into.
 
Index: docs/latex/wx/event.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/event.tex,v
retrieving revision 1.16
diff -u -B -r1.16 event.tex
--- docs/latex/wx/event.tex	2005/01/13 20:52:35	1.16
+++ docs/latex/wx/event.tex	2005/01/17 11:28:20
@@ -6,7 +6,7 @@
 
 For more information about events, see the \helpref{Event handling overview}{eventhandlingoverview}.
 
-\perlnote{In wxPerl custome event classes should be derived from
+\perlnote{In wxPerl custom event classes should be derived from
 \texttt{Wx::PlEvent} and \texttt{Wx::PlCommandEvent}.}
 
 \wxheading{Derived from}
@@ -30,25 +30,6 @@
 
 Constructor. Should not need to be used directly by an application.
 
-\membersection{wxEvent::m\_eventObject}\label{wxeventmeventobject}
-
-\member{wxObject*}{m\_eventObject}
-
-The object (usually a window) that the event was generated from,
-or should be sent to.
-
-\membersection{wxEvent::m\_eventType}\label{wxeventmeventtype}
-
-\member{WXTYPE}{m\_eventType}
-
-The type of the event, such as wxEVENT\_TYPE\_BUTTON\_COMMAND.
-
-\membersection{wxEvent::m\_id}\label{wxeventmid}
-
-\member{int}{m\_id}
-
-Identifier for the window.
-
 \membersection{wxEvent::m\_propagationLevel}\label{wxeventmpropagationlevel}
 
 \member{int}{m\_propagationLevel}
@@ -68,18 +49,6 @@
 the given number of times. E.g. the propagation level may be set to $1$ to
 propagate the event to its parent only, but not to its grandparent.
 
-\membersection{wxEvent::m\_skipped}\label{wxeventmskipped}
-
-\member{bool}{m\_skipped}
-
-Set to true by {\bf Skip} if this event should be skipped.
-
-\membersection{wxEvent::m\_timeStamp}\label{wxeventmtimestamp}
-
-\member{long}{m\_timeStamp}
-
-Timestamp for this event.
-
 \membersection{wxEvent::Clone}\label{wxeventclone}
 
 \constfunc{virtual wxEvent*}{Clone}{\void}
@@ -105,7 +74,7 @@
 
 \func{wxObject*}{GetEventObject}{\void}
 
-Returns the object associated with the
+Returns the object (usually a window) associated with the
 event, if any.
 
 \membersection{wxEvent::GetEventType}\label{wxeventgeteventtype}
@@ -173,8 +142,6 @@
 \func{void}{SetTimestamp}{\param{long }{timeStamp}}
 
 Sets the timestamp for the event.
-
-Sets the originating object.
 
 \membersection{wxEvent::ShouldPropagate}\label{wxeventshouldpropagate}
 
Index: docs/latex/wx/menuevt.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/menuevt.tex,v
retrieving revision 1.13
diff -u -B -r1.13 menuevt.tex
--- docs/latex/wx/menuevt.tex	2004/12/11 21:32:56	1.13
+++ docs/latex/wx/menuevt.tex	2005/01/17 11:28:20
@@ -48,13 +48,6 @@
 Constructor.
 
 
-\membersection{wxMenuEvent::m\_menuId}\label{wxmenueventmmenuid}
-
-\member{int}{m\_menuId}
-
-The relevant menu identifier.
-
-
 \membersection{wxMenuEvent::GetMenu}\label{wxmenueventgetmenu}
 
 \constfunc{wxMenu *}{GetMenu}{\void}
Index: docs/latex/wx/tchanges.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/tchanges.tex,v
retrieving revision 1.10
diff -u -B -r1.10 tchanges.tex
--- docs/latex/wx/tchanges.tex	2004/12/20 20:27:22	1.10
+++ docs/latex/wx/tchanges.tex	2005/01/17 11:28:20
@@ -8,6 +8,13 @@
 
 \subsection{Incompatible changes since 2.4.x}\label{incompatiblesince24}
 
+\subsubsection{wxEvent and its derivatives loosing public variable members}\label{wxeventpublictoprotected}
+
+\helpref{wxEvent}{wxevent} and its \helpref{derivatives}{eventhandlingoverview} do not have their public variable members public anymore.
+Use the Get/Set accessors as you always should have.
+
+
+
 \subsubsection{New window repainting behaviour}\label{newwindowrepainting}
 
 Windows are no longer fully repainted when resized, use new style \windowstyle{wxFULL\_REPAINT\_ON\_RESIZE} to force this (\windowstyle{wxNO\_FULL\_REPAINT\_ON\_RESIZE} still exists but doesn't do anything any more, this behaviour is default now).
Index: docs/latex/wx/upduievt.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/upduievt.tex,v
retrieving revision 1.10
diff -u -B -r1.10 upduievt.tex
--- docs/latex/wx/upduievt.tex	2004/09/22 10:59:56	1.10
+++ docs/latex/wx/upduievt.tex	2005/01/17 11:28:21
@@ -81,43 +81,6 @@
 
 Constructor.
 
-\membersection{wxUpdateUIEvent::m\_checked}\label{wxupdateuieventmchecked}
-
-\member{bool}{m\_checked}
-
-true if the element should be checked, false otherwise.
-
-\membersection{wxUpdateUIEvent::m\_enabled}\label{wxupdateuieventmenabled}
-
-\member{bool}{m\_checked}
-
-true if the element should be enabled, false otherwise.
-
-\membersection{wxUpdateUIEvent::m\_setChecked}\label{wxupdateuieventmsetchecked}
-
-\member{bool}{m\_setChecked}
-
-true if the application has set the {\bf m\_checked} member.
-
-\membersection{wxUpdateUIEvent::m\_setEnabled}\label{wxupdateuieventmsetenabled}
-
-\member{bool}{m\_setEnabled}
-
-true if the application has set the {\bf m\_enabled} member.
-
-\membersection{wxUpdateUIEvent::m\_setText}\label{wxupdateuieventmsettext}
-
-\member{bool}{m\_setText}
-
-true if the application has set the {\bf m\_text} member.
-
-\membersection{wxUpdateUIEvent::m\_text}\label{wxupdateuieventmtext}
-
-\member{wxString}{m\_text}
-
-Holds the text with which the the application wishes to
-update the UI element.
-
 \membersection{wxUpdateUIEvent::CanUpdate}\label{wxupdateuieventcanupdate}
 
 \func{static bool}{CanUpdate}{\param{wxWindow*}{ window}}
@@ -169,19 +132,19 @@
 
 \constfunc{bool}{GetSetChecked}{\void}
 
-Returns true if the application has called {\bf SetChecked}. For wxWidgets internal use only.
+Returns true if the application has called \helpref{wxUpdateUIEvent::Check}{wxupdateuieventcheck}. For wxWidgets internal use only.
 
 \membersection{wxUpdateUIEvent::GetSetEnabled}\label{wxupdateuieventgetsetenabled}
 
 \constfunc{bool}{GetSetEnabled}{\void}
 
-Returns true if the application has called {\bf SetEnabled}. For wxWidgets internal use only.
+Returns true if the application has called \helpref{wxUpdateUIEvent::Enable}{wxupdateuieventenable}. For wxWidgets internal use only.
 
 \membersection{wxUpdateUIEvent::GetSetText}\label{wxupdateuieventgetsettext}
 
 \constfunc{bool}{GetSetText}{\void}
 
-Returns true if the application has called {\bf SetText}. For wxWidgets internal use only.
+Returns true if the application has called \helpref{wxUpdateUIEvent::SetText}{wxupdateuieventsettext}. For wxWidgets internal use only.
 
 \membersection{wxUpdateUIEvent::GetText}\label{wxupdateuieventgettext}
 
Index: include/wx/event.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/event.h,v
retrieving revision 1.214
diff -u -B -r1.214 event.h
--- include/wx/event.h	2004/12/05 16:30:49	1.214
+++ include/wx/event.h	2005/01/17 11:28:21
@@ -382,11 +382,18 @@
         m_propagationLevel = propagationLevel;
     }
 
+#if WXWIN_COMPATIBILITY_2_4
 public:
+#else
+protected:
+#endif
     wxObject*         m_eventObject;
     wxEventType       m_eventType;
     long              m_timeStamp;
     int               m_id;
+
+public:
+    // m_callbackUserData is for internal usage only
     wxObject*         m_callbackUserData;
 
 protected:
@@ -397,7 +404,11 @@
     // backwards compatibility as it is new
     int               m_propagationLevel;
 
+#if WXWIN_COMPATIBILITY_2_4
 public:
+#else
+protected:
+#endif
     bool              m_skipped;
     bool              m_isCommandEvent;
 
@@ -478,6 +489,27 @@
  wxEVT_COMMAND_TOGGLEBUTTON_CLICKED
 */
 
+#if WXWIN_COMPATIBILITY_2_4
+// Backwards compatibility for wxCommandEvent::m_commandString, will lead to compilation errors in some cases of usage
+class WXDLLIMPEXP_CORE wxCommandEvent;
+
+class wxCommandEventStringHelper
+{
+public:
+    wxCommandEventStringHelper(wxCommandEvent * evt)
+        : m_evt(evt)
+        { }
+
+    void operator=(const wxString &str);
+    operator wxString();
+    const wxChar* c_str() const;
+
+private:
+    wxCommandEvent* m_evt;
+};
+#endif
+
+
 class WXDLLIMPEXP_CORE wxCommandEvent : public wxEvent
 {
 public:
@@ -485,7 +517,10 @@
 
     wxCommandEvent(const wxCommandEvent& event)
         : wxEvent(event),
-          m_commandString(event.m_commandString),
+#if WXWIN_COMPATIBILITY_2_4
+          m_commandString(this),
+#endif
+          m_cmdString(event.m_cmdString),
           m_commandInt(event.m_commandInt),
           m_extraLong(event.m_extraLong),
           m_clientData(event.m_clientData),
@@ -504,8 +539,8 @@
     int GetSelection() const { return m_commandInt; }
 
     // Set/Get listbox/choice selection string
-    void SetString(const wxString& s) { m_commandString = s; }
-    wxString GetString() const { return m_commandString; }
+    void SetString(const wxString& s) { m_cmdString = s; }
+    wxString GetString() const;
 
     // Get checkbox value
     bool IsChecked() const { return m_commandInt != 0; }
@@ -521,8 +556,13 @@
 
     virtual wxEvent *Clone() const { return new wxCommandEvent(*this); }
 
+#if WXWIN_COMPATIBILITY_2_4
 public:
-    wxString          m_commandString; // String event argument
+    wxCommandEventStringHelper m_commandString;
+#else
+protected:
+#endif
+    wxString          m_cmdString;     // String event argument
     int               m_commandInt;
     long              m_extraLong;     // Additional information (e.g. select/deselect)
     void*             m_clientData;    // Arbitrary client data
@@ -532,6 +572,23 @@
     DECLARE_DYNAMIC_CLASS_NO_ASSIGN(wxCommandEvent)
 };
 
+#if WXWIN_COMPATIBILITY_2_4
+inline void wxCommandEventStringHelper::operator=(const wxString &str)
+{
+    m_evt->SetString(str);
+}
+
+inline wxCommandEventStringHelper::operator wxString()
+{
+    return m_evt->GetString();
+}
+
+inline const wxChar* wxCommandEventStringHelper::c_str() const
+{
+    return m_evt->GetString().c_str();
+}
+#endif
+
 // this class adds a possibility to react (from the user) code to a control
 // notification: allow or veto the operation being reported.
 class WXDLLIMPEXP_CORE wxNotifyEvent  : public wxCommandEvent
@@ -623,7 +680,11 @@
 
     virtual wxEvent *Clone() const { return new wxScrollWinEvent(*this); }
 
+#if WXWIN_COMPATIBILITY_2_4
 public:
+#else
+protected:
+#endif
     int               m_commandInt;
     long              m_extraLong;
 
@@ -1024,6 +1085,7 @@
     virtual wxEvent *Clone() const { return new wxSizeEvent(*this); }
 
 public:
+    // For internal usage only. Will be converted to protected members.
     wxSize m_size;
     wxRect m_rect; // Used for wxEVT_SIZING
 
@@ -1061,6 +1123,11 @@
 
     virtual wxEvent *Clone() const { return new wxMoveEvent(*this); }
 
+#if WXWIN_COMPATIBILITY_2_4
+public:
+#else
+protected:
+#endif
     wxPoint m_pos;
     wxRect m_rect;
 
@@ -1148,6 +1215,11 @@
 
     virtual wxEvent *Clone() const { return new wxEraseEvent(*this); }
 
+#if WXWIN_COMPATIBILITY_2_4
+public:
+#else
+protected:
+#endif
     wxDC *m_dc;
 
 private:
@@ -1425,13 +1497,18 @@
 
 class WXDLLIMPEXP_CORE wxJoystickEvent : public wxEvent
 {
+#if WXWIN_COMPATIBILITY_2_4
 public:
+#else
+protected:
+#endif
     wxPoint   m_pos;
     int       m_zPosition;
     int       m_buttonChange;   // Which button changed?
     int       m_buttonState;    // Which buttons are down?
     int       m_joyStick;       // Which joystick?
 
+public:
     wxJoystickEvent(wxEventType type = wxEVT_NULL,
                     int state = 0,
                     int joystick = wxJOYSTICK1,
Index: samples/opengl/cube/cube.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/opengl/cube/cube.cpp,v
retrieving revision 1.15
diff -u -B -r1.15 cube.cpp
--- samples/opengl/cube/cube.cpp	2004/10/13 21:19:29	1.15
+++ samples/opengl/cube/cube.cpp	2005/01/17 11:28:22
@@ -371,7 +371,7 @@
     if (!m_TimeInitialized)
     {
         m_TimeInitialized = 1;
-        m_xsynct = event.m_timeStamp;
+        m_xsynct = event.GetTimestamp();
         m_gsynct = wxStopWatch(&m_secbase);
 
         m_Key = evkey;
@@ -380,7 +380,7 @@
         m_LastRedraw = 0;
     }
 
-    unsigned long currTime = event.m_timeStamp - m_xsynct;
+    unsigned long currTime = event.GetTimestamp() - m_xsynct;
 
     if (evkey != m_Key)
     {
Index: samples/scroll/scroll.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/scroll/scroll.cpp,v
retrieving revision 1.35
diff -u -B -r1.35 scroll.cpp
--- samples/scroll/scroll.cpp	2004/12/06 23:41:28	1.35
+++ samples/scroll/scroll.cpp	2005/01/17 11:28:23
@@ -905,15 +905,15 @@
     // FIXME: the cursor also moves when the scrollbar arrows are clicked
     if (HasCapture()) {
         if (event.GetOrientation() == wxHORIZONTAL) {
-            if (event.m_eventType == wxEVT_SCROLLWIN_LINEUP) {
+            if (event.GetEventType() == wxEVT_SCROLLWIN_LINEUP) {
                 --m_cursor.x;
-            } else if (event.m_eventType == wxEVT_SCROLLWIN_LINEDOWN) {
+            } else if (event.GetEventType() == wxEVT_SCROLLWIN_LINEDOWN) {
                 ++m_cursor.x;
             }
         } else if (event.GetOrientation() == wxVERTICAL) {
-            if (event.m_eventType == wxEVT_SCROLLWIN_LINEUP) {
+            if (event.GetEventType() == wxEVT_SCROLLWIN_LINEUP) {
                 --m_cursor.y;
-            } else if (event.m_eventType == wxEVT_SCROLLWIN_LINEDOWN) {
+            } else if (event.GetEventType() == wxEVT_SCROLLWIN_LINEDOWN) {
                 ++m_cursor.y;
             }
         }
Index: src/common/choiccmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/choiccmn.cpp,v
retrieving revision 1.17
diff -u -B -r1.17 choiccmn.cpp
--- src/common/choiccmn.cpp	2004/10/12 20:13:14	1.17
+++ src/common/choiccmn.cpp	2005/01/17 11:28:23
@@ -64,7 +64,7 @@
 
 void wxChoiceBase::Command(wxCommandEvent& event)
 {
-    SetSelection(event.m_commandInt);
+    SetSelection(event.GetInt());
     (void)ProcessEvent(event);
 }
 
Index: src/common/event.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/event.cpp,v
retrieving revision 1.153
diff -u -B -r1.153 event.cpp
--- src/common/event.cpp	2004/12/12 11:44:46	1.153
+++ src/common/event.cpp	2005/01/17 11:28:23
@@ -382,6 +382,9 @@
 
 wxCommandEvent::wxCommandEvent(wxEventType commandType, int theId)
               : wxEvent(theId, commandType)
+#if WXWIN_COMPATIBILITY_2_4
+              , m_commandString(this)
+#endif
 {
     m_clientData = (char *) NULL;
     m_clientObject = (wxClientData *) NULL;
@@ -393,6 +396,20 @@
     m_propagationLevel = wxEVENT_PROPAGATE_MAX;
 }
 
+wxString wxCommandEvent::GetString() const
+{
+    if(m_eventType != wxEVT_COMMAND_TEXT_UPDATED || !m_eventObject)
+        return m_cmdString;
+    else
+    {
+        wxTextCtrl *txt = wxDynamicCast(m_eventObject, wxTextCtrl);
+        if(txt)
+            return txt->GetValue();
+        else
+            return m_cmdString;
+    }
+}
+
 /*
  * UI update events
  */
@@ -1345,7 +1362,7 @@
         wxDynamicEventTableEntry *entry = (wxDynamicEventTableEntry*)node->GetData();
 #endif // WXWIN_COMPATIBILITY_EVENT_TYPES/!WXWIN_COMPATIBILITY_EVENT_TYPES
 
-        if ((event.m_eventType == entry->m_eventType) && (entry->m_fn != 0))
+        if ((event.GetEventType() == entry->m_eventType) && (entry->m_fn != 0))
         {
             wxEvtHandler *handler =
 #if !WXWIN_COMPATIBILITY_EVENT_TYPES
Index: src/common/lboxcmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/lboxcmn.cpp,v
retrieving revision 1.13
diff -u -B -r1.13 lboxcmn.cpp
--- src/common/lboxcmn.cpp	2004/09/17 17:57:44	1.13
+++ src/common/lboxcmn.cpp	2005/01/17 11:28:23
@@ -118,7 +118,7 @@
 
 void wxListBoxBase::Command(wxCommandEvent& event)
 {
-    SetSelection(event.m_commandInt, event.m_extraLong != 0);
+    SetSelection(event.GetInt(), event.GetExtraLong() != 0);
     (void)ProcessEvent(event);
 }
 
Index: src/common/wincmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/wincmn.cpp,v
retrieving revision 1.213
diff -u -B -r1.213 wincmn.cpp
--- src/common/wincmn.cpp	2005/01/07 23:51:02	1.213
+++ src/common/wincmn.cpp	2005/01/17 11:28:24
@@ -2033,7 +2033,7 @@
 void wxWindowBase::UpdateWindowUI(long flags)
 {
     wxUpdateUIEvent event(GetId());
-    event.m_eventObject = this;
+    event.SetEventObject(this);
 
     if ( GetEventHandler()->ProcessEvent(event) )
     {
@@ -2155,7 +2155,7 @@
         if ( !win->IsTopLevel() )
         {
             wxSysColourChangedEvent event2;
-            event.m_eventObject = win;
+            event.SetEventObject(win);
             win->GetEventHandler()->ProcessEvent(event2);
         }
 
Index: src/generic/scrlwing.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/scrlwing.cpp,v
retrieving revision 1.57
diff -u -B -r1.57 scrlwing.cpp
--- src/generic/scrlwing.cpp	2005/01/07 20:03:22	1.57
+++ src/generic/scrlwing.cpp	2005/01/17 11:28:24
@@ -1175,14 +1175,14 @@
 
         newEvent.SetPosition(0);
         newEvent.SetOrientation(wxVERTICAL);
-        newEvent.m_eventObject = m_win;
+        newEvent.SetEventObject(m_win);
 
         if (event.IsPageScroll())
         {
             if (lines > 0)
-                newEvent.m_eventType = wxEVT_SCROLLWIN_PAGEUP;
+                newEvent.SetEventType(wxEVT_SCROLLWIN_PAGEUP);
             else
-                newEvent.m_eventType = wxEVT_SCROLLWIN_PAGEDOWN;
+                newEvent.SetEventType(wxEVT_SCROLLWIN_PAGEDOWN);
 
             m_win->GetEventHandler()->ProcessEvent(newEvent);
         }
@@ -1190,9 +1190,9 @@
         {
             lines *= event.GetLinesPerAction();
             if (lines > 0)
-                newEvent.m_eventType = wxEVT_SCROLLWIN_LINEUP;
+                newEvent.SetEventType(wxEVT_SCROLLWIN_LINEUP);
             else
-                newEvent.m_eventType = wxEVT_SCROLLWIN_LINEDOWN;
+                newEvent.SetEventType(wxEVT_SCROLLWIN_LINEDOWN);
 
             int times = abs(lines);
             for (; times > 0; times--)
Index: src/generic/vlbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/vlbox.cpp,v
retrieving revision 1.18
diff -u -B -r1.18 vlbox.cpp
--- src/generic/vlbox.cpp	2004/07/17 23:22:21	1.18
+++ src/generic/vlbox.cpp	2005/01/17 11:28:25
@@ -243,7 +243,7 @@
 
     wxCommandEvent event(wxEVT_COMMAND_LISTBOX_SELECTED, GetId());
     event.SetEventObject(this);
-    event.m_commandInt = m_current;
+    event.SetInt(m_current);
 
     (void)GetEventHandler()->ProcessEvent(event);
 }
@@ -602,7 +602,7 @@
     {
         wxCommandEvent event(wxEVT_COMMAND_LISTBOX_DOUBLECLICKED, GetId());
         event.SetEventObject(this);
-        event.m_commandInt = item;
+        event.SetInt(item);
 
         (void)GetEventHandler()->ProcessEvent(event);
     }
Index: src/gtk/listbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/listbox.cpp,v
retrieving revision 1.145
diff -u -B -r1.145 listbox.cpp
--- src/gtk/listbox.cpp	2005/01/16 16:54:50	1.145
+++ src/gtk/listbox.cpp	2005/01/17 11:28:25
@@ -194,7 +194,7 @@
         n = -1;
     }
 
-    event.m_commandInt = n;
+    event.SetInt(n);
 
     listbox->GetEventHandler()->ProcessEvent( event );
 
@@ -320,7 +320,7 @@
             {
                 n = -1;
             }
-            new_event.m_commandInt = n;
+            new_event.SetInt(n);
             listbox->GetEventHandler()->ProcessEvent( new_event );
         }
     }
@@ -393,7 +393,7 @@
         n = -1;
     }
 
-    event.m_commandInt = n;
+    event.SetInt(n);
 
 //    No longer required with new code in wxLB_SINGLE
 //    listbox->GetEventHandler()->AddPendingEvent( event );
Index: src/gtk/textctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/textctrl.cpp,v
retrieving revision 1.197
diff -u -B -r1.197 textctrl.cpp
--- src/gtk/textctrl.cpp	2005/01/08 15:41:04	1.197
+++ src/gtk/textctrl.cpp	2005/01/17 11:28:25
@@ -202,7 +202,6 @@
 
     wxCommandEvent event( wxEVT_COMMAND_TEXT_UPDATED, win->GetId() );
     event.SetEventObject( win );
-    event.SetString( win->GetValue() );
     win->GetEventHandler()->ProcessEvent( event );
 }
 
Index: src/gtk/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/window.cpp,v
retrieving revision 1.513
diff -u -B -r1.513 window.cpp
--- src/gtk/window.cpp	2005/01/16 15:27:06	1.513
+++ src/gtk/window.cpp	2005/01/17 11:28:27
@@ -3350,7 +3350,7 @@
         gtk_widget_hide( m_widget );
 
     wxShowEvent eventShow(GetId(), show);
-    eventShow.m_eventObject = this;
+    eventShow.SetEventObject(this);
 
     GetEventHandler()->ProcessEvent(eventShow);
 
Index: src/mac/carbon/app.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/app.cpp,v
retrieving revision 1.171
diff -u -B -r1.171 app.cpp
--- src/mac/carbon/app.cpp	2004/10/07 11:26:32	1.171
+++ src/mac/carbon/app.cpp	2005/01/17 11:28:27
@@ -1241,7 +1241,7 @@
 
     event.m_x = wherex;
     event.m_y = wherey;
-    event.m_timeStamp = when;
+    event.SetTimestamp(when);
     event.SetEventObject(focus);
     handled = focus->GetEventHandler()->ProcessEvent( event ) ;
     if ( handled && event.GetSkipped() )
@@ -1366,7 +1366,7 @@
 
     event.m_x = wherex;
     event.m_y = wherey;
-    event.m_timeStamp = when;
+    event.SetTimestamp(when);
     event.SetEventObject(focus);
     handled = focus->GetEventHandler()->ProcessEvent( event ) ;
 
Index: src/mac/carbon/listbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/listbox.cpp,v
retrieving revision 1.91
diff -u -B -r1.91 listbox.cpp
--- src/mac/carbon/listbox.cpp	2004/11/16 06:04:59	1.91
+++ src/mac/carbon/listbox.cpp	2005/01/17 11:28:27
@@ -864,7 +864,7 @@
             n = -1;
         }
         
-        event.m_commandInt = n;
+        event.SetInt(n);
         
         GetEventHandler()->ProcessEvent(event);
     }
@@ -891,7 +891,7 @@
                     event.SetClientData( GetClientData(line) );
                 event.SetString( GetString(line) );
                 
-                event.m_commandInt = line ;
+                event.SetInt(line);
                 
                 GetEventHandler()->ProcessEvent(event);
             }
Index: src/mac/carbon/scrolbar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/scrolbar.cpp,v
retrieving revision 1.31
diff -u -B -r1.31 scrolbar.cpp
--- src/mac/carbon/scrolbar.cpp	2004/07/11 16:17:35	1.31
+++ src/mac/carbon/scrolbar.cpp	2005/01/17 11:28:27
@@ -92,7 +92,7 @@
 
 void wxScrollBar::Command(wxCommandEvent& event)
 {
-    SetThumbPosition(event.m_commandInt);
+    SetThumbPosition(event.GetInt());
     ProcessCommand(event);
 }
 
Index: src/mac/carbon/textctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/textctrl.cpp,v
retrieving revision 1.126
diff -u -B -r1.126 textctrl.cpp
--- src/mac/carbon/textctrl.cpp	2005/01/09 06:27:42	1.126
+++ src/mac/carbon/textctrl.cpp	2005/01/17 11:28:28
@@ -484,7 +484,6 @@
         GetPeer()->Cut() ;    
 
         wxCommandEvent event(wxEVT_COMMAND_TEXT_UPDATED, m_windowId);
-        event.SetString( GetValue() ) ;
         event.SetEventObject( this );
         GetEventHandler()->ProcessEvent(event);
       }
@@ -498,7 +497,6 @@
         // eventually we should add setting the default style again
 
         wxCommandEvent event(wxEVT_COMMAND_TEXT_UPDATED, m_windowId);
-        event.SetString( GetValue() ) ;
         event.SetEventObject( this );
         GetEventHandler()->ProcessEvent(event);
     }
@@ -907,7 +905,6 @@
          key == WXK_BACK)
     {
         wxCommandEvent event1(wxEVT_COMMAND_TEXT_UPDATED, m_windowId);
-        event1.SetString( GetValue() ) ;
         event1.SetEventObject( this );
         wxPostEvent(GetEventHandler(),event1);
     }
Index: src/mac/carbon/toplevel.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/toplevel.cpp,v
retrieving revision 1.127
diff -u -B -r1.127 toplevel.cpp
--- src/mac/carbon/toplevel.cpp	2005/01/01 13:36:29	1.127
+++ src/mac/carbon/toplevel.cpp	2005/01/17 11:28:28
@@ -211,7 +211,7 @@
 
                 event.m_x = point.h;
                 event.m_y = point.v;
-                event.m_timeStamp = when;
+                event.SetTimestamp(when);
                 wxWindow* focus = wxWindow::FindFocus() ;
                 event.SetEventObject(focus);
 
Index: src/mac/carbon/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/window.cpp,v
retrieving revision 1.223
diff -u -B -r1.223 window.cpp
--- src/mac/carbon/window.cpp	2004/12/22 05:51:02	1.223
+++ src/mac/carbon/window.cpp	2005/01/17 11:28:29
@@ -2512,29 +2512,29 @@
 
 void wxWindowMac::MacOnScroll(wxScrollEvent &event )
 {
-    if ( event.m_eventObject == m_vScrollBar || event.m_eventObject == m_hScrollBar )
+    if ( event.GetEventObject() == m_vScrollBar || event.GetEventObject() == m_hScrollBar )
     {
         wxScrollWinEvent wevent;
         wevent.SetPosition(event.GetPosition());
         wevent.SetOrientation(event.GetOrientation());
-        wevent.m_eventObject = this;
+        wevent.SetEventObject(this);
 
-        if (event.m_eventType == wxEVT_SCROLL_TOP)
-            wevent.m_eventType = wxEVT_SCROLLWIN_TOP;
-        else if (event.m_eventType == wxEVT_SCROLL_BOTTOM)
-            wevent.m_eventType = wxEVT_SCROLLWIN_BOTTOM;
-        else if (event.m_eventType == wxEVT_SCROLL_LINEUP)
-            wevent.m_eventType = wxEVT_SCROLLWIN_LINEUP;
-        else if (event.m_eventType == wxEVT_SCROLL_LINEDOWN)
-            wevent.m_eventType = wxEVT_SCROLLWIN_LINEDOWN;
-        else if (event.m_eventType == wxEVT_SCROLL_PAGEUP)
-            wevent.m_eventType = wxEVT_SCROLLWIN_PAGEUP;
-        else if (event.m_eventType == wxEVT_SCROLL_PAGEDOWN)
-            wevent.m_eventType = wxEVT_SCROLLWIN_PAGEDOWN;
-        else if (event.m_eventType == wxEVT_SCROLL_THUMBTRACK)
-            wevent.m_eventType = wxEVT_SCROLLWIN_THUMBTRACK;
-        else if (event.m_eventType == wxEVT_SCROLL_THUMBRELEASE)
-            wevent.m_eventType = wxEVT_SCROLLWIN_THUMBRELEASE;
+        if (event.GetEventType() == wxEVT_SCROLL_TOP)
+            wevent.SetEventType( wxEVT_SCROLLWIN_TOP );
+        else if (event.GetEventType() == wxEVT_SCROLL_BOTTOM)
+            wevent.SetEventType( wxEVT_SCROLLWIN_BOTTOM );
+        else if (event.GetEventType() == wxEVT_SCROLL_LINEUP)
+            wevent.SetEventType( wxEVT_SCROLLWIN_LINEUP );
+        else if (event.GetEventType() == wxEVT_SCROLL_LINEDOWN)
+            wevent.SetEventType( wxEVT_SCROLLWIN_LINEDOWN );
+        else if (event.GetEventType() == wxEVT_SCROLL_PAGEUP)
+            wevent.SetEventType( wxEVT_SCROLLWIN_PAGEUP );
+        else if (event.GetEventType() == wxEVT_SCROLL_PAGEDOWN)
+            wevent.SetEventType( wxEVT_SCROLLWIN_PAGEDOWN );
+        else if (event.GetEventType() == wxEVT_SCROLL_THUMBTRACK)
+            wevent.SetEventType( wxEVT_SCROLLWIN_THUMBTRACK );
+        else if (event.GetEventType() == wxEVT_SCROLL_THUMBRELEASE)
+            wevent.SetEventType( wxEVT_SCROLLWIN_THUMBRELEASE );
 
         GetEventHandler()->ProcessEvent(wevent);
     }
@@ -2845,7 +2845,7 @@
         {
             // paint the window itself
             wxPaintEvent event;
-            event.m_timeStamp = time ;
+            event.SetTimestamp(time);
             event.SetEventObject(this);
             handled = GetEventHandler()->ProcessEvent(event);
 
Index: src/mac/classic/app.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/classic/app.cpp,v
retrieving revision 1.7
diff -u -B -r1.7 app.cpp
--- src/mac/classic/app.cpp	2004/09/27 22:46:08	1.7
+++ src/mac/classic/app.cpp	2005/01/17 11:28:30
@@ -1479,7 +1479,7 @@
 
         event.m_x = ev->where.h;
         event.m_y = ev->where.v;
-        event.m_timeStamp = ev->when;
+        event.SetTimestamp( ev->when );
         wxWindow* focus = wxWindow::FindFocus() ;
         event.SetEventObject(focus);
 
@@ -1953,7 +1953,7 @@
 
     event.m_x = wherex;
     event.m_y = wherey;
-    event.m_timeStamp = when;
+    event.SetTimestamp(when);
     event.SetEventObject(focus);
     handled = focus->GetEventHandler()->ProcessEvent( event ) ;
     if ( handled && event.GetSkipped() )
@@ -2080,7 +2080,7 @@
 
     event.m_x = wherex;
     event.m_y = wherey;
-    event.m_timeStamp = when;
+    event.SetTimestamp(when);
     event.SetEventObject(focus);
     handled = focus->GetEventHandler()->ProcessEvent( event ) ;
 
@@ -2219,7 +2219,7 @@
                     event.m_metaDown = ev->modifiers & cmdKey;
                     event.m_x = ev->where.h;
                     event.m_y = ev->where.v;
-                    event.m_timeStamp = ev->when;
+                    event.SetTimestamp( ev->when );
                     event.SetEventObject(this);
 
                     if ( wxWindow::s_lastMouseWindow )
@@ -2322,7 +2322,7 @@
 
         event.m_x = x;
         event.m_y = y;
-        event.m_timeStamp = timestamp;
+        event.SetTimestamp(timestamp);
 
         if ( wxWindow::s_lastMouseWindow )
         {
Index: src/mac/classic/listbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/classic/listbox.cpp,v
retrieving revision 1.5
diff -u -B -r1.5 listbox.cpp
--- src/mac/classic/listbox.cpp	2004/08/18 15:37:00	1.5
+++ src/mac/classic/listbox.cpp	2005/01/17 11:28:30
@@ -909,7 +909,7 @@
         n = -1;
     }
     
-    event.m_commandInt = n;
+    event.SetInt(n);
     
     GetEventHandler()->ProcessEvent(event);
 }
@@ -990,7 +990,7 @@
             n = -1;
         }
         
-        event.m_commandInt = n;
+        event.SetInt(n);
         
         GetEventHandler()->ProcessEvent(event);
     }
@@ -1017,7 +1017,7 @@
                     event.SetClientData( GetClientData(line) );
                 event.SetString( GetString(line) );
                 
-                event.m_commandInt = line ;
+                event.SetInt(line);
                 
                 GetEventHandler()->ProcessEvent(event);
             }
Index: src/mac/classic/scrolbar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/classic/scrolbar.cpp,v
retrieving revision 1.4
diff -u -B -r1.4 scrolbar.cpp
--- src/mac/classic/scrolbar.cpp	2004/08/18 15:37:00	1.4
+++ src/mac/classic/scrolbar.cpp	2005/01/17 11:28:30
@@ -102,7 +102,7 @@
 
 void wxScrollBar::Command(wxCommandEvent& event)
 {
-    SetThumbPosition(event.m_commandInt);
+    SetThumbPosition(event.GetInt());
     ProcessCommand(event);
 }
 
Index: src/mac/classic/textctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/classic/textctrl.cpp,v
retrieving revision 1.7
diff -u -B -r1.7 textctrl.cpp
--- src/mac/classic/textctrl.cpp	2004/08/18 15:37:00	1.7
+++ src/mac/classic/textctrl.cpp	2005/01/17 11:28:31
@@ -1039,7 +1039,6 @@
             TXNConvertToPublicScrap();
         }
         wxCommandEvent event(wxEVT_COMMAND_TEXT_UPDATED, m_windowId);
-        event.SetString( GetValue() ) ;
         event.SetEventObject( this );
         GetEventHandler()->ProcessEvent(event);
       }
@@ -1062,7 +1061,6 @@
             SetStyle( kTXNUseCurrentSelection , kTXNUseCurrentSelection , GetDefaultStyle() ) ;
         }
         wxCommandEvent event(wxEVT_COMMAND_TEXT_UPDATED, m_windowId);
-        event.SetString( GetValue() ) ;
         event.SetEventObject( this );
         GetEventHandler()->ProcessEvent(event);
     }
@@ -1704,7 +1702,6 @@
          key == WXK_BACK)
     {
         wxCommandEvent event1(wxEVT_COMMAND_TEXT_UPDATED, m_windowId);
-        event1.SetString( GetValue() ) ;
         event1.SetEventObject( this );
         wxPostEvent(GetEventHandler(),event1);
     }
Index: src/mac/classic/toplevel.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/classic/toplevel.cpp,v
retrieving revision 1.4
diff -u -B -r1.4 toplevel.cpp
--- src/mac/classic/toplevel.cpp	2004/08/18 15:37:01	1.4
+++ src/mac/classic/toplevel.cpp	2005/01/17 11:28:31
@@ -211,7 +211,7 @@
 
                 event.m_x = point.h;
                 event.m_y = point.v;
-                event.m_timeStamp = when;
+                event.SetTimestamp(when);
                 wxWindow* focus = wxWindow::FindFocus() ;
                 event.SetEventObject(focus);
 
@@ -971,7 +971,7 @@
     event.m_x += m_x;
     event.m_y += m_y;
 
-    event.m_timeStamp = timestamp;
+    event.SetTimestamp(timestamp);
     event.SetEventObject(this);
     if ( wxTheApp->s_captureWindow )
     {
@@ -1051,7 +1051,7 @@
         s_macDeactivateWindow=NULL;
     MacDelayedDeactivation(timestamp);
     wxActivateEvent event(wxEVT_ACTIVATE, inIsActivating , m_windowId);
-    event.m_timeStamp = timestamp ;
+    event.SetTimestamp(timestamp);
     event.SetEventObject(this);
 
     GetEventHandler()->ProcessEvent(event);
Index: src/mac/classic/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/classic/window.cpp,v
retrieving revision 1.7
diff -u -B -r1.7 window.cpp
--- src/mac/classic/window.cpp	2004/09/29 14:28:20	1.7
+++ src/mac/classic/window.cpp	2005/01/17 11:28:32
@@ -1303,29 +1303,29 @@
 
 void wxWindowMac::MacOnScroll(wxScrollEvent &event )
 {
-    if ( event.m_eventObject == m_vScrollBar || event.m_eventObject == m_hScrollBar )
+    if ( event.GetEventObject() == m_vScrollBar || event.GetEventObject() == m_hScrollBar )
     {
         wxScrollWinEvent wevent;
         wevent.SetPosition(event.GetPosition());
         wevent.SetOrientation(event.GetOrientation());
-        wevent.m_eventObject = this;
+        wevent.SetEventObject(this);
 
-        if (event.m_eventType == wxEVT_SCROLL_TOP)
-            wevent.m_eventType = wxEVT_SCROLLWIN_TOP;
-        else if (event.m_eventType == wxEVT_SCROLL_BOTTOM)
-            wevent.m_eventType = wxEVT_SCROLLWIN_BOTTOM;
-        else if (event.m_eventType == wxEVT_SCROLL_LINEUP)
-            wevent.m_eventType = wxEVT_SCROLLWIN_LINEUP;
-        else if (event.m_eventType == wxEVT_SCROLL_LINEDOWN)
-            wevent.m_eventType = wxEVT_SCROLLWIN_LINEDOWN;
-        else if (event.m_eventType == wxEVT_SCROLL_PAGEUP)
-            wevent.m_eventType = wxEVT_SCROLLWIN_PAGEUP;
-        else if (event.m_eventType == wxEVT_SCROLL_PAGEDOWN)
-            wevent.m_eventType = wxEVT_SCROLLWIN_PAGEDOWN;
-        else if (event.m_eventType == wxEVT_SCROLL_THUMBTRACK)
-            wevent.m_eventType = wxEVT_SCROLLWIN_THUMBTRACK;
-        else if (event.m_eventType == wxEVT_SCROLL_THUMBRELEASE)
-            wevent.m_eventType = wxEVT_SCROLLWIN_THUMBRELEASE;
+        if (event.GetEventType() == wxEVT_SCROLL_TOP)
+            wevent.SetEventType( wxEVT_SCROLLWIN_TOP );
+        else if (event.GetEventType() == wxEVT_SCROLL_BOTTOM)
+            wevent.SetEventType( wxEVT_SCROLLWIN_BOTTOM );
+        else if (event.GetEventType() == wxEVT_SCROLL_LINEUP)
+            wevent.SetEventType( wxEVT_SCROLLWIN_LINEUP );
+        else if (event.GetEventType() == wxEVT_SCROLL_LINEDOWN)
+            wevent.SetEventType( wxEVT_SCROLLWIN_LINEDOWN );
+        else if (event.GetEventType() == wxEVT_SCROLL_PAGEUP)
+            wevent.SetEventType( wxEVT_SCROLLWIN_PAGEUP );
+        else if (event.GetEventType() == wxEVT_SCROLL_PAGEDOWN)
+            wevent.SetEventType( wxEVT_SCROLLWIN_PAGEDOWN );
+        else if (event.GetEventType() == wxEVT_SCROLL_THUMBTRACK)
+            wevent.SetEventType( wxEVT_SCROLLWIN_THUMBTRACK );
+        else if (event.GetEventType() == wxEVT_SCROLL_THUMBRELEASE)
+            wevent.SetEventType( wxEVT_SCROLLWIN_THUMBRELEASE );
 
         GetEventHandler()->ProcessEvent(wevent);
     }
@@ -1805,7 +1805,7 @@
             }
             
             wxPaintEvent event;
-            event.m_timeStamp = time ;
+            event.SetTimestamp(time);
             event.SetEventObject(this);
             GetEventHandler()->ProcessEvent(event);
  
Index: src/motif/checklst.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/checklst.cpp,v
retrieving revision 1.18
diff -u -B -r1.18 checklst.cpp
--- src/motif/checklst.cpp	2004/05/23 20:52:48	1.18
+++ src/motif/checklst.cpp	2005/01/17 11:28:32
@@ -146,8 +146,8 @@
             event.SetClientObject( GetClientObject(n) );
         else if( HasClientUntypedData() )
             event.SetClientData( GetClientData(n) );
-        event.m_commandInt = n;
-        event.m_extraLong = TRUE;
+        event.SetInt(n);
+        event.SetExtraLong(TRUE);
         event.SetEventObject(this);
         event.SetString( GetString( n ) );
 
Index: src/motif/choice.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/choice.cpp,v
retrieving revision 1.42
diff -u -B -r1.42 choice.cpp
--- src/motif/choice.cpp	2004/08/31 13:59:01	1.42
+++ src/motif/choice.cpp	2005/01/17 11:28:32
@@ -441,8 +441,8 @@
         {
             wxCommandEvent event(wxEVT_COMMAND_CHOICE_SELECTED, item->GetId());
             event.SetEventObject(item);
-            event.m_commandInt = n;
-            event.m_commandString = item->GetStrings().Item(n)->GetData();
+            event.SetInt(n);
+            event.SetString( item->GetStrings().Item(n)->GetData() );
             if ( item->HasClientObjectData() )
                 event.SetClientObject( item->GetClientObject(n) );
             else if ( item->HasClientUntypedData() )
Index: src/motif/combobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/combobox.cpp,v
retrieving revision 1.30
diff -u -B -r1.30 combobox.cpp
--- src/motif/combobox.cpp	2004/05/23 20:52:48	1.30
+++ src/motif/combobox.cpp	2005/01/17 11:28:32
@@ -318,13 +318,13 @@
         {
             wxCommandEvent event (wxEVT_COMMAND_COMBOBOX_SELECTED,
                                   item->GetId());
-            event.m_commandInt = cbs->index - 1;
-            event.m_commandString = item->GetString (event.m_commandInt);
+            event.SetInt(cbs->index - 1);
+            event.SetString( item->GetString ( event.GetInt() ) );
             if ( item->HasClientObjectData() )
                 event.SetClientObject( item->GetClientObject(cbs->index - 1) );
             else if ( item->HasClientUntypedData() )
                 event.SetClientData( item->GetClientData(cbs->index - 1) );
-            event.m_extraLong = TRUE;
+            event.SetExtraLong(TRUE);
             event.SetEventObject(item);
             item->ProcessCommand (event);
             break;
@@ -332,9 +332,9 @@
     case XmCR_VALUE_CHANGED:
         {
             wxCommandEvent event (wxEVT_COMMAND_TEXT_UPDATED, item->GetId());
-            event.m_commandInt = -1;
-            event.m_commandString = item->GetValue();
-            event.m_extraLong = TRUE;
+            event.SetInt(-1);
+            event.SetString( item->GetValue() );
+            event.SetExtraLong(TRUE);
             event.SetEventObject(item);
             item->ProcessCommand (event);
             break;
Index: src/motif/combobox_native.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/combobox_native.cpp,v
retrieving revision 1.12
diff -u -B -r1.12 combobox_native.cpp
--- src/motif/combobox_native.cpp	2004/05/23 20:52:48	1.12
+++ src/motif/combobox_native.cpp	2005/01/17 11:28:32
@@ -378,13 +378,13 @@
             wxCommandEvent event (wxEVT_COMMAND_COMBOBOX_SELECTED,
                                   item->GetId());
             int idx = cbs->item_position;
-            event.m_commandInt = idx;
-            event.m_commandString = item->GetString (idx);
+            event.SetInt(idx);
+            event.SetString( item->GetString (idx) );
             if ( item->HasClientObjectData() )
                 event.SetClientObject( item->GetClientObject(idx) );
             else if ( item->HasClientUntypedData() )
                 event.SetClientData( item->GetClientData(idx) );
-            event.m_extraLong = true;
+            event.SetExtraLong(true);
             event.SetEventObject(item);
             item->GetEventHandler()->ProcessEvent(event);
             break;
@@ -392,9 +392,9 @@
     case XmCR_VALUE_CHANGED:
         {
             wxCommandEvent event (wxEVT_COMMAND_TEXT_UPDATED, item->GetId());
-            event.m_commandInt = -1;
-            event.m_commandString = item->GetValue();
-            event.m_extraLong = true;
+            event.SetInt(-1);
+            event.SetString( item->GetValue() );
+            event.SetExtraLong(true);
             event.SetEventObject(item);
             item->GetEventHandler()->ProcessEvent(event);
             break;
Index: src/motif/listbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/listbox.cpp,v
retrieving revision 1.40
diff -u -B -r1.40 listbox.cpp
--- src/motif/listbox.cpp	2004/05/23 20:52:49	1.40
+++ src/motif/listbox.cpp	2005/01/17 11:28:32
@@ -546,11 +546,11 @@
 
 void wxListBox::Command (wxCommandEvent & event)
 {
-    if (event.m_extraLong)
-        SetSelection (event.m_commandInt);
+    if (event.GetExtraLong())
+        SetSelection (event.GetInt());
     else
     {
-        Deselect (event.m_commandInt);
+        Deselect (event.GetInt());
         return;
     }
     ProcessCommand (event);
@@ -577,8 +577,8 @@
         event.SetClientObject( item->GetClientObject(n) );
     else if ( item->HasClientUntypedData() )
         event.SetClientData( item->GetClientData(n) );
-    event.m_commandInt = n;
-    event.m_extraLong = TRUE;
+    event.SetInt(n);
+    event.SetExtraLong(TRUE);
     event.SetEventObject(item);
     event.SetString( item->GetString( n ) );
 
Index: src/motif/radiobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/radiobox.cpp,v
retrieving revision 1.40
diff -u -B -r1.40 radiobox.cpp
--- src/motif/radiobox.cpp	2004/05/23 20:52:49	1.40
+++ src/motif/radiobox.cpp	2005/01/17 11:28:32
@@ -345,7 +345,7 @@
 
 void wxRadioBox::Command (wxCommandEvent & event)
 {
-    SetSelection (event.m_commandInt);
+    SetSelection (event.GetInt());
     ProcessCommand (event);
 }
 
Index: src/motif/radiobut.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/radiobut.cpp,v
retrieving revision 1.27
diff -u -B -r1.27 radiobut.cpp
--- src/motif/radiobut.cpp	2004/05/23 20:52:49	1.27
+++ src/motif/radiobut.cpp	2005/01/17 11:28:32
@@ -136,7 +136,7 @@
 
 void wxRadioButton::Command (wxCommandEvent & event)
 {
-    SetValue ( (event.m_commandInt != 0) );
+    SetValue ( (event.GetInt() != 0) );
     ProcessCommand (event);
 }
 
Index: src/motif/scrolbar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/scrolbar.cpp,v
retrieving revision 1.23
diff -u -B -r1.23 scrolbar.cpp
--- src/motif/scrolbar.cpp	2004/05/23 20:52:49	1.23
+++ src/motif/scrolbar.cpp	2005/01/17 11:28:32
@@ -107,7 +107,7 @@
 
 void wxScrollBar::Command(wxCommandEvent& event)
 {
-    SetThumbPosition(event.m_commandInt);
+    SetThumbPosition(event.GetInt());
     ProcessCommand(event);
 }
 
Index: src/motif/slider.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/slider.cpp,v
retrieving revision 1.23
diff -u -B -r1.23 slider.cpp
--- src/motif/slider.cpp	2004/08/31 13:59:01	1.23
+++ src/motif/slider.cpp	2005/01/17 11:28:32
@@ -235,7 +235,9 @@
     }
 
     wxScrollEvent event(scrollEvent, slider->GetId());
-    XtVaGetValues (widget, XmNvalue, &event.m_commandInt, NULL);
+    int commandInt = event.GetInt();
+    XtVaGetValues (widget, XmNvalue, &commandInt, NULL);
+    event.SetInt(commandInt);
     event.SetEventObject(slider);
     slider->GetEventHandler()->ProcessEvent(event);
 
Index: src/motif/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/window.cpp,v
retrieving revision 1.125
diff -u -B -r1.125 window.cpp
--- src/motif/window.cpp	2004/09/29 14:28:36	1.125
+++ src/motif/window.cpp	2005/01/17 11:28:33
@@ -1673,7 +1673,7 @@
         if ( win->GetParent() )
         {
             wxSysColourChangedEvent event2;
-            event.m_eventObject = win;
+            event.SetEventObject(win);
             win->GetEventHandler()->ProcessEvent(event2);
         }
 
Index: src/msw/listbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/listbox.cpp,v
retrieving revision 1.114
diff -u -B -r1.114 listbox.cpp
--- src/msw/listbox.cpp	2004/12/20 09:24:55	1.114
+++ src/msw/listbox.cpp	2005/01/17 11:28:33
@@ -732,7 +732,7 @@
         event.SetExtraLong( HasMultipleSelection() ? IsSelected(n) : true );
     }
 
-    event.m_commandInt = n;
+    event.SetInt(n);
 
     return GetEventHandler()->ProcessEvent(event);
 }
Index: src/msw/radiobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/radiobox.cpp,v
retrieving revision 1.104
diff -u -B -r1.104 radiobox.cpp
--- src/msw/radiobox.cpp	2004/12/16 13:21:33	1.104
+++ src/msw/radiobox.cpp	2005/01/17 11:28:33
@@ -315,7 +315,7 @@
 
 void wxRadioBox::Command(wxCommandEvent & event)
 {
-    SetSelection (event.m_commandInt);
+    SetSelection (event.GetInt());
     SetFocus();
     ProcessCommand(event);
 }
Index: src/msw/radiobut.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/radiobut.cpp,v
retrieving revision 1.55
diff -u -B -r1.55 radiobut.cpp
--- src/msw/radiobut.cpp	2004/10/18 20:20:38	1.55
+++ src/msw/radiobut.cpp	2005/01/17 11:28:34
@@ -237,7 +237,7 @@
 
 void wxRadioButton::Command (wxCommandEvent& event)
 {
-    SetValue(event.m_commandInt != 0);
+    SetValue(event.GetInt() != 0);
     ProcessCommand(event);
 }
 
Index: src/msw/scrolbar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/scrolbar.cpp,v
retrieving revision 1.50
diff -u -B -r1.50 scrolbar.cpp
--- src/msw/scrolbar.cpp	2004/11/19 19:40:28	1.50
+++ src/msw/scrolbar.cpp	2005/01/17 11:28:34
@@ -365,7 +365,7 @@
 
 void wxScrollBar::Command(wxCommandEvent& event)
 {
-    SetThumbPosition(event.m_commandInt);
+    SetThumbPosition(event.GetInt());
     ProcessCommand(event);
 }
 
Index: src/msw/textctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/textctrl.cpp,v
retrieving revision 1.236
diff -u -B -r1.236 textctrl.cpp
--- src/msw/textctrl.cpp	2004/12/21 16:25:51	1.236
+++ src/msw/textctrl.cpp	2005/01/17 11:28:34
@@ -1836,7 +1836,6 @@
 
     wxCommandEvent event(wxEVT_COMMAND_TEXT_UPDATED, GetId());
     InitCommandEvent(event);
-    event.SetString(GetValue());
 
     return ProcessCommand(event);
 }
Index: src/msw/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/window.cpp,v
retrieving revision 1.555
diff -u -B -r1.555 window.cpp
--- src/msw/window.cpp	2005/01/12 12:58:59	1.555
+++ src/msw/window.cpp	2005/01/17 11:28:36
@@ -3545,7 +3545,7 @@
 bool wxWindowMSW::HandleShow(bool show, int WXUNUSED(status))
 {
     wxShowEvent event(GetId(), show);
-    event.m_eventObject = this;
+    event.SetEventObject(this);
 
     return GetEventHandler()->ProcessEvent(event);
 }
@@ -3553,7 +3553,7 @@
 bool wxWindowMSW::HandleInitDialog(WXHWND WXUNUSED(hWndFocus))
 {
     wxInitDialogEvent event(GetId());
-    event.m_eventObject = this;
+    event.SetEventObject(this);
 
     return GetEventHandler()->ProcessEvent(event);
 }
@@ -3588,7 +3588,7 @@
     DragFinish (hFilesInfo);
 
     wxDropFilesEvent event(wxEVT_DROP_FILES, gwFilesDropped, files);
-    event.m_eventObject = this;
+    event.SetEventObject(this);
 
     POINT dropPoint;
     DragQueryPoint(hFilesInfo, (LPPOINT) &dropPoint);
@@ -4404,7 +4404,7 @@
     event.SetTimestamp(::GetMessageTime());
 #endif
 
-    event.m_eventObject = this;
+    event.SetEventObject(this);
     event.SetId(GetId());
 
 #if wxUSE_MOUSEEVENT_HACK
@@ -4609,7 +4609,7 @@
     event.m_controlDown = wxIsCtrlDown();
     event.m_altDown = (HIWORD(lParam) & KF_ALTDOWN) == KF_ALTDOWN;
 
-    event.m_eventObject = (wxWindow *)this; // const_cast
+    event.SetEventObject((wxWindow *)this); // const_cast
     event.m_keyCode = id;
 #if wxUSE_UNICODE
     event.m_uniChar = (wxChar) wParam;
@@ -4912,32 +4912,32 @@
     wxScrollWinEvent event;
     event.SetPosition(pos);
     event.SetOrientation(orientation);
-    event.m_eventObject = this;
+    event.SetEventObject(this);
 
     switch ( wParam )
     {
     case SB_TOP:
-        event.m_eventType = wxEVT_SCROLLWIN_TOP;
+        event.SetEventType(wxEVT_SCROLLWIN_TOP);
         break;
 
     case SB_BOTTOM:
-        event.m_eventType = wxEVT_SCROLLWIN_BOTTOM;
+        event.SetEventType(wxEVT_SCROLLWIN_BOTTOM);
         break;
 
     case SB_LINEUP:
-        event.m_eventType = wxEVT_SCROLLWIN_LINEUP;
+        event.SetEventType(wxEVT_SCROLLWIN_LINEUP);
         break;
 
     case SB_LINEDOWN:
-        event.m_eventType = wxEVT_SCROLLWIN_LINEDOWN;
+        event.SetEventType(wxEVT_SCROLLWIN_LINEDOWN);
         break;
 
     case SB_PAGEUP:
-        event.m_eventType = wxEVT_SCROLLWIN_PAGEUP;
+        event.SetEventType(wxEVT_SCROLLWIN_PAGEUP);
         break;
 
     case SB_PAGEDOWN:
-        event.m_eventType = wxEVT_SCROLLWIN_PAGEDOWN;
+        event.SetEventType(wxEVT_SCROLLWIN_PAGEDOWN);
         break;
 
     case SB_THUMBPOSITION:
@@ -4963,9 +4963,9 @@
             event.SetPosition(scrollInfo.nTrackPos);
         }
 
-        event.m_eventType = wParam == SB_THUMBPOSITION
+        event.SetEventType( wParam == SB_THUMBPOSITION
                                 ? wxEVT_SCROLLWIN_THUMBRELEASE
-                                : wxEVT_SCROLLWIN_THUMBTRACK;
+                                : wxEVT_SCROLLWIN_THUMBTRACK );
         break;
 
     default:
@@ -5333,7 +5333,7 @@
             if ( (HIWORD(lParam) & KF_ALTDOWN) == KF_ALTDOWN )
                 event.m_altDown = true;
 
-            event.m_eventObject = NULL;
+            event.SetEventObject(NULL);
             event.m_keyCode = id;
             event.m_shiftDown = wxIsShiftDown();
             event.m_controlDown = wxIsCtrlDown();
Index: src/os2/listbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/listbox.cpp,v
retrieving revision 1.29
diff -u -B -r1.29 listbox.cpp
--- src/os2/listbox.cpp	2005/01/04 19:32:42	1.29
+++ src/os2/listbox.cpp	2005/01/17 11:28:36
@@ -810,7 +810,7 @@
     {
         n = -1;
     }
-    vEvent.m_commandInt = n;
+    vEvent.SetInt(n);
     return GetEventHandler()->ProcessEvent(vEvent);
 } // end of wxListBox::OS2Command
 
Index: src/os2/scrolbar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/scrolbar.cpp,v
retrieving revision 1.13
diff -u -B -r1.13 scrolbar.cpp
--- src/os2/scrolbar.cpp	2004/05/23 20:53:14	1.13
+++ src/os2/scrolbar.cpp	2005/01/17 11:28:36
@@ -307,7 +307,7 @@
   wxCommandEvent&                   rEvent
 )
 {
-    SetThumbPosition(rEvent.m_commandInt);
+    SetThumbPosition(rEvent.GetInt());
     ProcessCommand(rEvent);
 } // end of wxScrollBar::Command
 
Index: src/os2/textctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/textctrl.cpp,v
retrieving revision 1.42
diff -u -B -r1.42 textctrl.cpp
--- src/os2/textctrl.cpp	2004/05/23 20:53:15	1.42
+++ src/os2/textctrl.cpp	2005/01/17 11:28:37
@@ -1103,7 +1103,6 @@
                                           );
 
                 InitCommandEvent(vEvent);
-                vEvent.SetString((char*)GetValue().c_str());
                 ProcessCommand(vEvent);
             }
             break;
Index: src/os2/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/window.cpp,v
retrieving revision 1.147
diff -u -B -r1.147 window.cpp
--- src/os2/window.cpp	2004/11/28 18:39:26	1.147
+++ src/os2/window.cpp	2005/01/17 11:28:38
@@ -3358,7 +3358,7 @@
 {
     wxShowEvent                     vEvent(GetId(), bShow);
 
-    vEvent.m_eventObject = this;
+    vEvent.SetEventObject(this);
     return GetEventHandler()->ProcessEvent(vEvent);
 } // end of wxWindowOS2::HandleShow
 
@@ -3368,7 +3368,7 @@
 {
     wxInitDialogEvent               vEvent(GetId());
 
-    vEvent.m_eventObject = this;
+    vEvent.SetEventObject(this);
     return GetEventHandler()->ProcessEvent(vEvent);
 } // end of wxWindowOS2::HandleInitDialog
 
@@ -3673,7 +3673,7 @@
         {
             wxSysColourChangedEvent vEvent;
 
-            rEvent.m_eventObject = pWin;
+            rEvent.SetEventObject(pWin);
             pWin->GetEventHandler()->ProcessEvent(vEvent);
         }
         node = node->GetNext();
@@ -4057,7 +4057,7 @@
     rEvent.m_rightDown   = (::WinGetKeyState(HWND_DESKTOP, VK_BUTTON2) &
 			    0x8000) != 0;
     rEvent.SetTimestamp(s_currentMsg.time);
-    rEvent.m_eventObject = this;
+    rEvent.SetEventObject(this);
     rEvent.SetId(GetId());
 
 #if wxUSE_MOUSEEVENT_HACK
@@ -4174,7 +4174,7 @@
     vEvent.m_controlDown = IsCtrlDown();
     vEvent.m_altDown     = (HIWORD(lParam) & KC_ALT) == KC_ALT;
 
-    vEvent.m_eventObject = (wxWindow *)this; // const_cast
+    vEvent.SetEventObject((wxWindow *)this); // const_cast
     vEvent.m_keyCode     = nId;
     vEvent.m_rawCode = (wxUint32)wParam;
     vEvent.m_rawFlags = (wxUint32)lParam;
@@ -4363,32 +4363,32 @@
 
     vEvent.SetPosition(wPos);
     vEvent.SetOrientation(nOrientation);
-    vEvent.m_eventObject = this;
+    vEvent.SetEventObject(this);
 
     switch (wParam)
     {
         case SB_LINEUP:
-            vEvent.m_eventType = wxEVT_SCROLLWIN_LINEUP;
+            vEvent.SetEventType(wxEVT_SCROLLWIN_LINEUP);
             break;
 
         case SB_LINEDOWN:
-            vEvent.m_eventType = wxEVT_SCROLLWIN_LINEDOWN;
+            vEvent.SetEventType(wxEVT_SCROLLWIN_LINEDOWN);
             break;
 
         case SB_PAGEUP:
-            vEvent.m_eventType = wxEVT_SCROLLWIN_PAGEUP;
+            vEvent.SetEventType(wxEVT_SCROLLWIN_PAGEUP);
             break;
 
         case SB_PAGEDOWN:
-            vEvent.m_eventType = wxEVT_SCROLLWIN_PAGEDOWN;
+            vEvent.SetEventType(wxEVT_SCROLLWIN_PAGEDOWN);
             break;
 
         case SB_SLIDERPOSITION:
-            vEvent.m_eventType = wxEVT_SCROLLWIN_THUMBRELEASE;
+            vEvent.SetEventType(wxEVT_SCROLLWIN_THUMBRELEASE);
             break;
 
         case SB_SLIDERTRACK:
-            vEvent.m_eventType = wxEVT_SCROLLWIN_THUMBTRACK;
+            vEvent.SetEventType(wxEVT_SCROLLWIN_THUMBTRACK);
             break;
 
         default:
Index: src/univ/listbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/univ/listbox.cpp,v
retrieving revision 1.29
diff -u -B -r1.29 listbox.cpp
--- src/univ/listbox.cpp	2004/11/19 20:38:04	1.29
+++ src/univ/listbox.cpp	2005/01/17 11:28:39
@@ -892,7 +892,7 @@
         event.SetString(GetString(item));
     }
 
-    event.m_commandInt = item;
+    event.SetInt(item);
 
     return GetEventHandler()->ProcessEvent(event);
 }
Index: src/univ/textctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/univ/textctrl.cpp,v
retrieving revision 1.31
diff -u -B -r1.31 textctrl.cpp
--- src/univ/textctrl.cpp	2004/11/05 21:04:46	1.31
+++ src/univ/textctrl.cpp	2005/01/17 11:28:40
@@ -4680,7 +4680,6 @@
 
         wxCommandEvent event(wxEVT_COMMAND_TEXT_UPDATED, GetId());
         InitCommandEvent(event);
-        event.SetString(GetValue());
         GetEventHandler()->ProcessEvent(event);
 
         // as the text changed...
Index: src/x11/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/x11/window.cpp,v
retrieving revision 1.85
diff -u -B -r1.85 window.cpp
--- src/x11/window.cpp	2004/09/30 16:33:36	1.85
+++ src/x11/window.cpp	2005/01/17 11:28:40
@@ -1252,7 +1252,7 @@
         if ( win->GetParent() )
         {
             wxSysColourChangedEvent event2;
-            event.m_eventObject = win;
+            event.SetEventObject(win);
             win->GetEventHandler()->ProcessEvent(event2);
         }
 

 	  	 
