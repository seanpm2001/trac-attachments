 samples/dataview/dataview.cpp | 49 ++++++++++++++++++++++++-------------------
 samples/dataview/mymodels.cpp |  7 +++++++
 samples/dataview/mymodels.h   |  7 ++++++-
 3 files changed, 41 insertions(+), 22 deletions(-)

diff --git a/samples/dataview/dataview.cpp b/samples/dataview/dataview.cpp
index 29f1110..516d729 100644
--- a/samples/dataview/dataview.cpp
+++ b/samples/dataview/dataview.cpp
@@ -609,6 +609,13 @@ void MyFrame::BuildDataViewCtrl(wxPanel* parent, unsigned int nPanel, unsigned l
                                       wxDATAVIEW_COL_RESIZABLE );
             m_ctrl[0]->AppendColumn( column5 );
 
+            wxDataViewToggleRenderer *t =
+                new wxDataViewToggleRenderer(_T("bool"), wxDATAVIEW_CELL_ACTIVATABLE);
+            wxDataViewColumn *column6 =
+                new wxDataViewColumn( "MP3", t, 6, 100, wxALIGN_LEFT,
+                                      wxDATAVIEW_COL_REORDERABLE | wxDATAVIEW_COL_RESIZABLE );
+            m_ctrl[0]->AppendColumn( column6 );
+
 
             // select initially the ninth symphony:
             m_ctrl[0]->Select(m_music_model->GetNinthItem());
@@ -1107,30 +1114,30 @@ void MyFrame::OnHeaderRightClick( wxDataViewEvent &event )
 
 void MyFrame::OnSortedList( wxDataViewEvent &/*event*/)
 {
-    wxVector<wxDataViewColumn *> const columns = m_ctrl[1]->GetSortingColumns();
-    wxLogMessage( "wxEVT_DATAVIEW_COLUMN_SORTED using the following columns");
-
-    for ( wxVector<wxDataViewColumn *>::const_iterator it = columns.begin(),
-                                                      end = columns.end();
-          it != end;
-          ++it )
-    {
-        wxDataViewColumn* const col = *it;
-
-        wxLogMessage("\t%d. %s %s",
-                     col->GetModelColumn(),
-                     col->GetTitle(),
-                     col->IsSortOrderAscending() ? "ascending" : "descending");
-    }
+    //wxVector<wxDataViewColumn *> const columns = m_ctrl[1]->GetSortingColumns();
+    //wxLogMessage( "wxEVT_DATAVIEW_COLUMN_SORTED using the following columns");
+
+    //for ( wxVector<wxDataViewColumn *>::const_iterator it = columns.begin(),
+    //                                                  end = columns.end();
+    //      it != end;
+    //      ++it )
+    //{
+    //    wxDataViewColumn* const col = *it;
+
+    //    wxLogMessage("\t%d. %s %s",
+    //                 col->GetModelColumn(),
+    //                 col->GetTitle(),
+    //                 col->IsSortOrderAscending() ? "ascending" : "descending");
+    //}
 }
 
 void MyFrame::OnHeaderClickList( wxDataViewEvent &event )
 {
     // Use control+click to toggle sorting by this column.
-    if ( wxGetKeyState(WXK_CONTROL) )
-        m_ctrl[1]->ToggleSortByColumn(event.GetColumn());
-    else
-        event.Skip();
+    //if ( wxGetKeyState(WXK_CONTROL) )
+    //    m_ctrl[1]->ToggleSortByColumn(event.GetColumn());
+    //else
+    //    event.Skip();
 }
 
 void MyFrame::OnSorted( wxDataViewEvent &event )
@@ -1227,7 +1234,7 @@ void MyFrame::OnAddTreeContainerItem(wxCommandEvent& WXUNUSED(event))
 
 void MyFrame::OnMultipleSort( wxCommandEvent &event )
 {
-    if ( !m_ctrl[1]->AllowMultiColumnSort(event.IsChecked()) )
-        wxLogMessage("Sorting by multiple columns not supported");
+    //if ( !m_ctrl[1]->AllowMultiColumnSort(event.IsChecked()) )
+    //    wxLogMessage("Sorting by multiple columns not supported");
 }
 
diff --git a/samples/dataview/mymodels.cpp b/samples/dataview/mymodels.cpp
index e1df2f0..2b2ff8e 100644
--- a/samples/dataview/mymodels.cpp
+++ b/samples/dataview/mymodels.cpp
@@ -210,6 +210,9 @@ void MyMusicTreeModel::GetValue( wxVariant &variant,
         else
             variant = "new";
         break;
+    case 6:
+        variant = node->m_mp3;
+        break;
 
     default:
         wxLogError( "MyMusicTreeModel::GetValue: wrong column %d", col );
@@ -237,6 +240,10 @@ bool MyMusicTreeModel::SetValue( const wxVariant &variant,
             node->m_quality = variant.GetString();
             return true;
 
+        case 6:
+            node->m_mp3 = variant.GetBool();
+            return true;
+
         default:
             wxLogError( "MyMusicTreeModel::SetValue: wrong column" );
     }
diff --git a/samples/dataview/mymodels.h b/samples/dataview/mymodels.h
index d925779..e8af303 100644
--- a/samples/dataview/mymodels.h
+++ b/samples/dataview/mymodels.h
@@ -29,6 +29,7 @@ public:
         m_artist = artist;
         m_year = year;
         m_quality = "good";
+        m_mp3 = false;
 
         m_container = false;
     }
@@ -40,6 +41,7 @@ public:
 
         m_title = branch;
         m_year = -1;
+        m_mp3 = false;
 
         m_container = true;
     }
@@ -76,6 +78,7 @@ public:     // public to avoid getters/setters
     wxString                m_artist;
     int                     m_year;
     wxString                m_quality;
+    bool                    m_mp3;
 
     // TODO/FIXME:
     // the GTK version of wxDVC (in particular wxDataViewCtrlInternal::ItemAdded)
@@ -146,13 +149,15 @@ public:
 
     virtual unsigned int GetColumnCount() const
     {
-        return 6;
+        return 7;
     }
 
     virtual wxString GetColumnType( unsigned int col ) const
     {
         if (col == 2)
             return wxT("long");
+        else if (col == 6)
+            return wxT("bool");
 
         return wxT("string");
     }
