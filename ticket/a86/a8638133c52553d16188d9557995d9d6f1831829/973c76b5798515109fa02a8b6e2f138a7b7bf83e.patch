Index: src/common/colourcmn.cpp
===================================================================
RCS file: colourcmn.cpp
diff -N colourcmn.cpp
--- /dev/null	Sat Apr 22 16:06:43 2006
+++ colourcmn.cpp	Sat Apr 22 16:06:50 2006
@@ -0,0 +1,93 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        src/common/colourcmn.cpp
+// Purpose:     wxColourBase implementation
+// Author:      Francesco Montorsi
+// Modified by:
+// Created:     20/4/2006
+// RCS-ID:      $Id$
+// Copyright:   (c) Francesco Montorsi
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+#pragma hdrstop
+#endif
+
+#include "wx/colour.h"
+
+
+
+// ============================================================================
+// wxString <-> wxColour conversions
+// ============================================================================
+
+bool wxColourBase::InitWith(const wxChar *str)
+{
+    if ( str == NULL || str[0] == wxT('\0'))
+        return false;       // invalid or empty string
+
+    if ( wxStrncmp(str, wxT("RGB"), 3) == 0 ||
+         wxStrncmp(str, wxT("rgb"), 3) == 0 )
+    {
+        // RGB specification CSS-like
+        int red, green, blue;
+        if (wxSscanf(&str[3], wxT("(%d, %d, %d)"), &red, &green, &blue) != 3)
+            return false;
+
+        Set(red, green, blue);
+    }
+    else if ( str[0] == wxT('#') && wxStrlen(str) == 7 )
+    {
+        // hexadecimal prefixed with # (HTML syntax)
+        unsigned long tmp;
+        if (wxSscanf(&str[1], wxT("%lX"), &tmp) != 1)
+            return false;
+
+        Set(tmp);   // set from packed long
+    }
+    else if (wxTheColourDatabase) // a colour name ?
+    {
+        *this = wxTheColourDatabase->Find(str);
+    }
+
+    if (Ok())
+        return true;
+
+    wxLogDebug(wxT("wxColour::Set - couldn't set to colour string '%s'"), str);
+    return false;
+}
+
+wxString wxColourBase::GetAsString(long flags) const
+{
+    wxString colName;
+
+    if (flags & wxC2S_NAME)
+        colName = wxTheColourDatabase->FindName((const wxColour &)(*this)).MakeLower();
+
+    if ( colName.IsEmpty() && (flags & wxC2S_CSS_SYNTAX) )
+    {
+        // no name for this colour; return it in CSS syntax
+        colName.Printf(wxT("rgb(%d, %d, %d)"),
+                       Red(), Green(), Blue());
+    }
+    else if ( colName.IsEmpty() && (flags & wxC2S_HTML_SYNTAX) )
+    {
+        // no name for this colour; return it in HTML syntax
+        colName.Printf(wxT("#%02X%02X%02X"),
+                       Red(), Green(), Blue());
+    }
+
+    // this function always returns a non-empty string
+    wxASSERT_MSG(!colName.IsEmpty(),
+                 wxT("Invalid wxColour -> wxString conversion flags"));
+    return colName;
+}
+
+wxColour wxColourBase::CreateByName(const wxString& name)
+{
+    return wxColour(name);
+}
Index: src/cocoa/colour.mm
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/cocoa/colour.mm,v
retrieving revision 1.8
diff -b -u -2 -r1.8 colour.mm
--- src/cocoa/colour.mm	2005/10/05 16:22:35	1.8
+++ src/cocoa/colour.mm	2006/04/22 14:06:51
@@ -56,20 +56,4 @@
 }

-void wxColour::InitFromName(const wxString& name)
-{
-    if ( wxTheColourDatabase )
-    {
-        wxColour col = wxTheColourDatabase->Find(name);
-        if ( col.Ok() )
-        {
-            *this = col;
-            return;
-        }
-    }
-
-    // leave invalid
-    Init();
-}
-
 wxColour::~wxColour ()
 {
@@ -77,5 +61,5 @@
 }

-void wxColour::Set (unsigned char r, unsigned char g, unsigned char b)
+void wxColour::InitWith (unsigned char r, unsigned char g, unsigned char b)
 {
     wxAutoNSAutoreleasePool pool;
Index: src/gtk1/colour.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk1/colour.cpp,v
retrieving revision 1.53
diff -b -u -2 -r1.53 colour.cpp
--- src/gtk1/colour.cpp	2006/01/23 14:29:29	1.53
+++ src/gtk1/colour.cpp	2006/04/22 14:06:51
@@ -137,54 +137,4 @@
 IMPLEMENT_DYNAMIC_CLASS(wxColour,wxGDIObject)

-wxColour::wxColour( unsigned char red, unsigned char green, unsigned char blue )
-{
-    m_refData = new wxColourRefData();
-    M_COLDATA->m_color.red = ((unsigned short)red) << SHIFT;
-    M_COLDATA->m_color.green = ((unsigned short)green) << SHIFT;
-    M_COLDATA->m_color.blue = ((unsigned short)blue) << SHIFT;
-    M_COLDATA->m_color.pixel = 0;
-}
-
-/* static */
-wxColour wxColour::CreateByName(const wxString& name)
-{
-    wxColour col;
-
-    GdkColor colGDK;
-    if ( gdk_color_parse( wxGTK_CONV( name ), &colGDK ) )
-    {
-        wxColourRefData *refData = new wxColourRefData;
-        refData->m_color = colGDK;
-        col.m_refData = refData;
-    }
-
-    return col;
-}
-
-
-void wxColour::InitFromName( const wxString &colourName )
-{
-    // check the cache first
-    wxColour col;
-    if ( wxTheColourDatabase )
-    {
-        col = wxTheColourDatabase->Find(colourName);
-    }
-
-    if ( !col.Ok() )
-    {
-        col = CreateByName(colourName);
-    }
-
-    if ( col.Ok() )
-    {
-        *this = col;
-    }
-    else
-    {
-        wxFAIL_MSG( wxT("wxColour: couldn't find colour") );
-    }
-}
-
 wxColour::~wxColour()
 {
@@ -216,5 +166,5 @@
 }

-void wxColour::Set( unsigned char red, unsigned char green, unsigned char blue )
+void wxColour::InitWith( unsigned char red, unsigned char green, unsigned char blue )
 {
     AllocExclusive();
@@ -269,3 +219,18 @@

     return &M_COLDATA->m_color;
+}
+
+bool wxColour::InitWith(const wxChar *str)
+{
+    GdkColor colGDK;
+    if ( gdk_color_parse( wxGTK_CONV_SYS( str ), &colGDK ) )
+    {
+        UnRef();
+
+        m_refData = new wxColourRefData;
+        M_COLDATA->m_color = colGDK;
+        return true;
+    }
+
+    return wxColourBase::InitWith(str);
 }
Index: src/gtk/colour.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/colour.cpp,v
retrieving revision 1.54
diff -b -u -2 -r1.54 colour.cpp
--- src/gtk/colour.cpp	2006/04/10 22:22:09	1.54
+++ src/gtk/colour.cpp	2006/04/22 14:06:51
@@ -82,49 +82,4 @@
 IMPLEMENT_DYNAMIC_CLASS(wxColour,wxGDIObject)

-wxColour::wxColour( unsigned char red, unsigned char green, unsigned char blue )
-{
-    m_refData = new wxColourRefData;
-    M_COLDATA->m_color.red = ((unsigned short)red) << SHIFT;
-    M_COLDATA->m_color.green = ((unsigned short)green) << SHIFT;
-    M_COLDATA->m_color.blue = ((unsigned short)blue) << SHIFT;
-    M_COLDATA->m_color.pixel = 0;
-}
-
-/* static */
-wxColour wxColour::CreateByName(const wxString& name)
-{
-    wxColour col;
-
-    GdkColor colGDK;
-    if ( gdk_color_parse( wxGTK_CONV_SYS( name ), &colGDK ) )
-    {
-        wxColourRefData *refData = new wxColourRefData;
-        refData->m_color = colGDK;
-        col.m_refData = refData;
-    }
-
-    return col;
-}
-
-
-void wxColour::InitFromName( const wxString &colourName )
-{
-    // check the cache first
-    if ( wxTheColourDatabase )
-    {
-        *this = wxTheColourDatabase->Find(colourName);
-    }
-
-    if ( !Ok() )
-    {
-        *this = CreateByName(colourName);
-    }
-
-    if ( !Ok() )
-    {
-        wxFAIL_MSG( wxT("wxColour: couldn't find colour") );
-    }
-}
-
 wxColour::~wxColour()
 {
@@ -156,5 +111,5 @@
 }

-void wxColour::Set( unsigned char red, unsigned char green, unsigned char blue )
+void wxColour::InitWith( unsigned char red, unsigned char green, unsigned char blue )
 {
     AllocExclusive();
@@ -209,3 +164,18 @@

     return &M_COLDATA->m_color;
+}
+
+bool wxColour::InitWith(const wxChar *str)
+{
+    GdkColor colGDK;
+    if ( gdk_color_parse( wxGTK_CONV_SYS( str ), &colGDK ) )
+    {
+        UnRef();
+
+        m_refData = new wxColourRefData;
+        M_COLDATA->m_color = colGDK;
+        return true;
+    }
+
+    return wxColourBase::InitWith(str);
 }
Index: src/mgl/colour.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mgl/colour.cpp,v
retrieving revision 1.13
diff -b -u -2 -r1.13 colour.cpp
--- src/mgl/colour.cpp	2005/10/05 16:22:40	1.13
+++ src/mgl/colour.cpp	2006/04/22 14:06:51
@@ -51,25 +51,9 @@
 }

-void wxColour::InitFromName(const wxString& name)
-{
-    if ( wxTheColourDatabase )
-    {
-        wxColour col = wxTheColourDatabase->Find(name);
-        if ( col.Ok() )
-        {
-            *this = col;
-            return;
-        }
-    }
-
-    // leave invalid
-    Init();
-}
-
 wxColour::~wxColour()
 {
 }

-void wxColour::Set(unsigned char r, unsigned char g, unsigned char b)
+void wxColour::InitWith(unsigned char r, unsigned char g, unsigned char b)
 {
     m_red = r;
Index: src/motif/colour.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/colour.cpp,v
retrieving revision 1.18
diff -b -u -2 -r1.18 colour.cpp
--- src/motif/colour.cpp	2005/10/03 16:33:03	1.18
+++ src/motif/colour.cpp	2006/04/22 14:06:52
@@ -43,9 +43,4 @@
 }

-wxColour::wxColour()
-{
-    Init();
-}
-
 wxColour::wxColour(const wxColour& col)
 {
@@ -63,45 +58,9 @@
 }

-void wxColour::InitFromName(const wxString& name)
-{
-    if ( wxTheColourDatabase )
-    {
-        wxColour col = wxTheColourDatabase->Find(name);
-        if ( col.Ok() )
-        {
-            *this = col;
-            return;
-        }
-    }
-
-    // leave invalid
-    Init();
-}
-
-/* static */
-wxColour wxColour::CreateByName(const wxString& name)
-{
-    wxColour col;
-
-    Display *dpy = wxGlobalDisplay();
-    WXColormap colormap = wxTheApp->GetMainColormap( dpy );
-    XColor xcol;
-    if ( XParseColor( dpy, (Colormap)colormap, name.mb_str(), &xcol ) )
-    {
-        col.m_red = (unsigned char)(xcol.red & 0xff);
-        col.m_green = (unsigned char)(xcol.green & 0xff);
-        col.m_blue = (unsigned char)(xcol.blue & 0xff);
-        col.m_isInit = true;
-        col.m_pixel = -1;
-    }
-
-    return col;
-}
-
 wxColour::~wxColour()
 {
 }

-void wxColour::Set(unsigned char r, unsigned char g, unsigned char b)
+void wxColour::InitWith(unsigned char r, unsigned char g, unsigned char b)
 {
     m_red = r;
Index: src/msw/colour.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/colour.cpp,v
retrieving revision 1.25
diff -b -u -2 -r1.25 colour.cpp
--- src/msw/colour.cpp	2006/02/09 00:49:40	1.25
+++ src/msw/colour.cpp	2006/04/22 14:06:52
@@ -27,9 +27,5 @@
 template<> void wxStringReadValue(const wxString &s , wxColour &data )
 {
-    // copied from VS xrc
-    unsigned long tmp = 0;
-
-    if (s.Length() != 7 || s[0u] != wxT('#')
-        || wxSscanf(s.c_str(), wxT("#%lX"), &tmp) != 1)
+    if ( !data.Set(s) )
     {
         wxLogError(_("String To Colour : Incorrect colour specification : %s"),
@@ -37,16 +33,9 @@
         data = wxNullColour;
     }
-    else
-    {
-        data = wxColour((unsigned char) ((tmp & 0xFF0000) >> 16) ,
-            (unsigned char) ((tmp & 0x00FF00) >> 8),
-            (unsigned char) ((tmp & 0x0000FF)));
-    }
 }

 template<> void wxStringWriteValue(wxString &s , const wxColour &data )
 {
-    s = wxString::Format(wxT("#%02X%02X%02X"),
-        data.Red(), data.Green(), data.Blue() );
+    s = data.GetAsString(wxC2S_HTML_SYNTAX);
 }

@@ -81,25 +70,9 @@
 }

-void wxColour::InitFromName(const wxString& name)
-{
-    if ( wxTheColourDatabase )
-    {
-        wxColour col = wxTheColourDatabase->Find(name);
-        if ( col.Ok() )
-        {
-            *this = col;
-            return;
-        }
-    }
-
-    // leave invalid
-    Init();
-}
-
 wxColour::~wxColour()
 {
 }

-void wxColour::Set(unsigned char r, unsigned char g, unsigned char b)
+void wxColour::InitWith(unsigned char r, unsigned char g, unsigned char b)
 {
     m_red = r;
Index: src/os2/colour.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/colour.cpp,v
retrieving revision 1.13
diff -b -u -2 -r1.13 colour.cpp
--- src/os2/colour.cpp	2005/10/05 16:22:42	1.13
+++ src/os2/colour.cpp	2006/04/22 14:06:52
@@ -70,13 +70,6 @@
 )
 {
-    if ( wxTheColourDatabase )
-    {
-        wxColour col = wxTheColourDatabase->Find(sCol);
-        if ( col.Ok() )
-        {
-            *this = col;
+    if ( wxString2Colour(sCol, this) )
             return;
-        }
-    }

     // leave invalid
Index: src/palmos/colour.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/palmos/colour.cpp,v
retrieving revision 1.4
diff -b -u -2 -r1.4 colour.cpp
--- src/palmos/colour.cpp	2005/10/05 16:22:43	1.4
+++ src/palmos/colour.cpp	2006/04/22 14:06:52
@@ -26,9 +26,5 @@
 template<> void wxStringReadValue(const wxString &s , wxColour &data )
 {
-    // copied from VS xrc
-    unsigned long tmp = 0;
-
-    if (s.Length() != 7 || s[0u] != wxT('#')
-        || wxSscanf(s.c_str(), wxT("#%lX"), &tmp) != 1)
+    if ( !data.Set(s) )
     {
         wxLogError(_("String To Colour : Incorrect colour specification : %s"),
@@ -36,16 +32,9 @@
         data = wxNullColour;
     }
-    else
-    {
-        data = wxColour((unsigned char) ((tmp & 0xFF0000) >> 16) ,
-            (unsigned char) ((tmp & 0x00FF00) >> 8),
-            (unsigned char) ((tmp & 0x0000FF)));
-    }
 }

 template<> void wxStringWriteValue(wxString &s , const wxColour &data )
 {
-    s = wxString::Format(wxT("#%02X%02X%02X"),
-        data.Red(), data.Green(), data.Blue() );
+    s = data.GetAsString(wxC2S_HTML_SYNTAX);
 }

@@ -95,15 +84,9 @@
 }

-void wxColour::InitFromName(const wxString& name)
-{
-    // leave invalid
-    Init();
-}
-
 wxColour::~wxColour()
 {
 }

-void wxColour::Set(unsigned char r, unsigned char g, unsigned char b)
+void wxColour::InitWith(unsigned char r, unsigned char g, unsigned char b)
 {
     m_red = r;
Index: src/x11/colour.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/x11/colour.cpp,v
retrieving revision 1.23
diff -b -u -2 -r1.23 colour.cpp
--- src/x11/colour.cpp	2005/10/05 16:22:44	1.23
+++ src/x11/colour.cpp	2006/04/22 14:06:52
@@ -137,62 +137,4 @@
 IMPLEMENT_DYNAMIC_CLASS(wxColour,wxGDIObject)

-wxColour::wxColour( unsigned char red, unsigned char green, unsigned char blue )
-{
-    m_refData = new wxColourRefData();
-#if wxUSE_NANOX
-    M_COLDATA->m_color.red = ((unsigned short)red) ;
-    M_COLDATA->m_color.green = ((unsigned short)green) ;
-    M_COLDATA->m_color.blue = ((unsigned short)blue) ;
-#else
-    M_COLDATA->m_color.red = ((unsigned short)red) << SHIFT;
-    M_COLDATA->m_color.green = ((unsigned short)green) << SHIFT;
-    M_COLDATA->m_color.blue = ((unsigned short)blue) << SHIFT;
-#endif
-    M_COLDATA->m_color.pixel = 0;
-}
-
-/* static */
-wxColour wxColour::CreateByName(const wxString& name)
-{
-    wxColour col;
-
-    Display *dpy = wxGlobalDisplay();
-    WXColormap colormap = wxTheApp->GetMainColormap( dpy );
-    XColor xcol;
-    if ( XParseColor( dpy, (Colormap)colormap, name.mb_str(), &xcol ) )
-    {
-        wxColourRefData *refData = new wxColourRefData;
-        refData->m_colormap = colormap;
-        refData->m_color = xcol;
-        col.m_refData = refData;
-    }
-
-    return col;
-}
-
-void wxColour::InitFromName( const wxString &colourName )
-{
-    // check the cache first
-    wxColour col;
-    if ( wxTheColourDatabase )
-    {
-        col = wxTheColourDatabase->Find(colourName);
-    }
-
-    if ( !col.Ok() )
-    {
-        col = CreateByName(colourName);
-    }
-
-    if ( col.Ok() )
-    {
-        *this = col;
-    }
-    else
-    {
-        wxFAIL_MSG( wxT("wxColour: couldn't find colour") );
-    }
-}
-
 wxColour::~wxColour()
 {
@@ -224,5 +166,5 @@
 }

-void wxColour::Set( unsigned char red, unsigned char green, unsigned char blue )
+void wxColour::InitWith( unsigned char red, unsigned char green, unsigned char blue )
 {
     AllocExclusive();
@@ -295,2 +237,20 @@
     return (WXColor*) &M_COLDATA->m_color;
 }
+
+bool wxColour::InitWith(const wxChar *name)
+{
+    Display *dpy = wxGlobalDisplay();
+    WXColormap colormap = wxTheApp->GetMainColormap( dpy );
+    XColor xcol;
+    if ( XParseColor( dpy, (Colormap)colormap, wxGTK_CONV_SYS( name ), &xcol ) )
+    {
+        UnRef();
+
+        m_refData = new wxColourRefData;
+        M_COLDATA->m_colormap = colormap;
+        M_COLDATA->m_color = xcol;
+        return true;
+    }
+
+    return wxColourBase::InitWith(name);
+}
\ No newline at end of file
Index: src/mac/carbon/colour.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/colour.cpp,v
retrieving revision 1.19
diff -b -u -2 -r1.19 colour.cpp
--- src/mac/carbon/colour.cpp	2006/02/09 00:49:21	1.19
+++ src/mac/carbon/colour.cpp	2006/04/22 14:06:52
@@ -38,25 +38,9 @@
 }

-void wxColour::InitFromName(const wxString& name)
-{
-    if ( wxTheColourDatabase )
-    {
-        wxColour col = wxTheColourDatabase->Find( name );
-        if ( col.Ok() )
-        {
-            *this = col;
-            return;
-        }
-    }
-
-    // leave invalid
-    Init();
-}
-
 wxColour::~wxColour ()
 {
 }

-void wxColour::Set (unsigned char r, unsigned char g, unsigned char b)
+void wxColour::InitWith (unsigned char r, unsigned char g, unsigned char b)
 {
     m_red = r;
Index: src/mac/classic/colour.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/classic/colour.cpp,v
retrieving revision 1.6
diff -b -u -2 -r1.6 colour.cpp
--- src/mac/classic/colour.cpp	2005/10/05 16:22:39	1.6
+++ src/mac/classic/colour.cpp	2006/04/22 14:06:52
@@ -71,25 +71,9 @@
 }

-void wxColour::InitFromName(const wxString& name)
-{
-    if ( wxTheColourDatabase )
-    {
-        wxColour col = wxTheColourDatabase->Find(name);
-        if ( col.Ok() )
-        {
-            *this = col;
-            return;
-        }
-    }
-
-    // leave invalid
-    Init();
-}
-
 wxColour::~wxColour ()
 {
 }

-void wxColour::Set (unsigned char r, unsigned char g, unsigned char b)
+void wxColour::InitWith (unsigned char r, unsigned char g, unsigned char b)
 {
     m_red = r;
Index: include/wx/colour.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/colour.h,v
retrieving revision 1.13
diff -b -u -2 -r1.13 colour.h
--- include/wx/colour.h	2006/01/25 00:18:00	1.13
+++ include/wx/colour.h	2006/04/22 14:06:52
@@ -1,7 +1,7 @@
 /////////////////////////////////////////////////////////////////////////////
 // Name:        wx/colour.h
-// Purpose:     Includes platform-specific wxColour file
+// Purpose:     wxColourBase definition
 // Author:      Julian Smart
-// Modified by:
+// Modified by: Francesco Montorsi
 // Created:
 // RCS-ID:      $Id: colour.h,v 1.13 2006/01/25 00:18:00 MW Exp $
@@ -14,4 +14,92 @@

 #include "wx/defs.h"
+#include "wx/gdiobj.h"
+
+
+// the standard wxColour constructor.
+// this macro avoids to repeat these lines across all colour.h files, since
+// Set() is a virtual function and thus cannot be called by wxColourBase
+// constructors
+#define DEFINE_STD_WXCOLOUR_CONSTRUCTORS                                        \
+    wxColour( unsigned char red, unsigned char green, unsigned char blue )      \
+        { Set(red, green, blue); }                                              \
+    wxColour( unsigned long colRGB ) { Set(colRGB); }                           \
+    wxColour(const wxString &colourName) { Set(colourName); }                   \
+    wxColour(const wxChar *colourName) { Set(colourName); }
+
+
+// for wxString <-> wxColour
+#define wxC2S_NAME              1   // return colour name, when possible
+#define wxC2S_CSS_SYNTAX        2   // return colour in rgb(r,g,b) syntax
+#define wxC2S_HTML_SYNTAX       4   // return colour in #rrggbb syntax
+
+
+class WXDLLEXPORT wxColour;
+
+
+//-----------------------------------------------------------------------------
+// wxColourBase: this class has no data members, just some functions to avoid
+//               code redundancy in all native wxColour implementations
+//-----------------------------------------------------------------------------
+
+class WXDLLEXPORT wxColourBase : public wxGDIObject
+{
+protected:
+
+    virtual void InitWith(unsigned char red, unsigned char green, unsigned char blue) = 0;
+    virtual bool InitWith(const wxChar *);
+
+public:
+    wxColourBase() {}
+    virtual ~wxColourBase() {}
+
+
+    // Set() functions
+    // ---------------
+
+    void Set(unsigned char red, unsigned char green, unsigned char blue)
+        { InitWith(red,green,blue); }
+
+    // implemented in colourcmn.cpp
+    bool Set(const wxChar *str)
+        { return InitWith(str); }
+
+    bool Set(const wxString &str)
+        { return Set((const wxChar *)str); }
+
+    void Set(unsigned long colRGB)
+    {
+        // we don't need to know sizeof(long) here because we assume that the three
+        // least significant bytes contain the R, G and B values
+        Set((unsigned char)colRGB,
+            (unsigned char)(colRGB >> 8),
+            (unsigned char)(colRGB >> 16));
+    }
+
+
+
+    // accessors
+    // ---------
+
+    virtual bool Ok() const = 0;
+
+    virtual unsigned char Red() const = 0;
+    virtual unsigned char Green() const = 0;
+    virtual unsigned char Blue() const = 0;
+
+    // implemented in colourcmn.cpp
+    virtual wxString GetAsString(long flags = wxC2S_NAME | wxC2S_CSS_SYNTAX) const;
+
+
+
+    // old, deprecated
+    // ---------------
+
+    static wxColour CreateByName(const wxString& name);
+    void InitFromName(const wxString& col)
+        { Set(col); }
+};
+
+

 #if defined(__WXPALMOS__)
Index: include/wx/cocoa/colour.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/cocoa/colour.h,v
retrieving revision 1.10
diff -b -u -2 -r1.10 colour.h
--- include/wx/cocoa/colour.h	2005/10/05 16:22:25	1.10
+++ include/wx/cocoa/colour.h	2006/04/22 14:06:53
@@ -19,5 +19,6 @@
 // wxColour
 // ========================================================================
-class WXDLLEXPORT wxColour: public wxObject
+
+class WXDLLEXPORT wxColour : public wxColourBase
 {
 public:
@@ -27,26 +28,9 @@
     // default
     wxColour() { Init(); }
-
-    // from separate RGB
-    wxColour( unsigned char red, unsigned char green, unsigned char blue )
-    :   m_cocoaNSColor(NULL)
-    {   Set(red,green,blue); }
-
-    // from packed RGB
-    wxColour( unsigned long colRGB )
-    :   m_cocoaNSColor(NULL)
-    {   Set(colRGB); }
+    DEFINE_STD_WXCOLOUR_CONSTRUCTORS

     // initialization using existing NSColor
     wxColour( WX_NSColor aColor );

-    // implicit conversion from the colour name
-    wxColour( const wxString &colourName )
-    {   InitFromName(colourName); }
-    wxColour( const char *colourName )
-    {   InitFromName(wxString::FromAscii(colourName)); }
-#if wxUSE_UNICODE
-    wxColour( const wxChar *colourName ) { InitFromName( wxString(colourName) ); }
-#endif

     // copy ctors and assignment operators
@@ -77,13 +61,4 @@

     // Set() functions
-    void Set( unsigned char red, unsigned char green, unsigned char blue );
-    void Set( unsigned long colRGB )
-    {
-        // we don't need to know sizeof(long) here because we assume that the three
-        // least significant bytes contain the R, G and B values
-        Set((unsigned char)colRGB,
-            (unsigned char)(colRGB >> 8),
-            (unsigned char)(colRGB >> 16));
-    }
     void Set( WX_NSColor aColor );

@@ -92,6 +67,5 @@
     void Init();

-    // create the object from name, leaves it uninitialized if it failed
-    void InitFromName(const wxString& col);
+    void InitWith( unsigned char red, unsigned char green, unsigned char blue );

 private:
Index: include/wx/gtk1/colour.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk1/colour.h,v
retrieving revision 1.26
diff -b -u -2 -r1.26 colour.h
--- include/wx/gtk1/colour.h	2006/02/10 15:40:59	1.26
+++ include/wx/gtk1/colour.h	2006/04/22 14:06:53
@@ -32,5 +32,5 @@
 //-----------------------------------------------------------------------------

-class WXDLLIMPEXP_CORE wxColour: public wxGDIObject
+class WXDLLIMPEXP_CORE wxColour : public wxColourBase
 {
 public:
@@ -39,21 +39,11 @@

     // default
-    wxColour() { }
+    wxColour() { Init(); }
+    DEFINE_STD_WXCOLOUR_CONSTRUCTORS

-    // from separate RGB
-    wxColour( unsigned char red, unsigned char green, unsigned char blue );
-
-    // from packed RGB
-    wxColour( unsigned long colRGB ) { Set(colRGB); }
-
-    // Implicit conversion from the colour name
-    wxColour( const wxString &colourName ) { InitFromName(colourName); }
-    wxColour( const char *colourName ) { InitFromName( wxString::FromAscii(colourName) ); }
-#if wxUSE_UNICODE
-    wxColour( const wxChar *colourName ) { InitFromName( wxString(colourName) ); }
-#endif
-
     ~wxColour();

+    virtual bool InitWith(const wxChar *str);
+
     bool Ok() const { return m_refData != NULL; }

@@ -61,14 +51,4 @@
     bool operator != ( const wxColour& col ) const { return !(*this == col); }

-    void Set( unsigned char red, unsigned char green, unsigned char blue );
-    void Set( unsigned long colRGB )
-    {
-        // We don't need to know sizeof(long) here because we assume that the three
-        // least significant bytes contain the R, G and B values
-        Set((unsigned char)colRGB,
-            (unsigned char)(colRGB >> 8),
-            (unsigned char)(colRGB >> 16));
-    }
-
     unsigned char Red() const;
     unsigned char Green() const;
@@ -76,7 +56,4 @@


-    // Get colour from name or wxNullColour
-    static wxColour CreateByName(const wxString& name);
-
     // Implementation part
     void CalcPixel( GdkColormap *cmap );
@@ -84,6 +61,4 @@
     GdkColor *GetColor() const;

-    void InitFromName(const wxString& colourName);
-
 protected:
     // ref counting code
@@ -91,4 +66,5 @@
     virtual wxObjectRefData *CloneRefData(const wxObjectRefData *data) const;

+    void InitWith( unsigned char red, unsigned char green, unsigned char blue );

 private:
Index: include/wx/gtk/colour.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/colour.h,v
retrieving revision 1.25
diff -b -u -2 -r1.25 colour.h
--- include/wx/gtk/colour.h	2006/02/09 00:48:42	1.25
+++ include/wx/gtk/colour.h	2006/04/22 14:06:53
@@ -32,5 +32,5 @@
 //-----------------------------------------------------------------------------

-class WXDLLIMPEXP_CORE wxColour: public wxGDIObject
+class WXDLLIMPEXP_CORE wxColour : public wxColourBase
 {
 public:
@@ -39,21 +39,11 @@

     // default
-    wxColour() { }
+    wxColour() {}
+    DEFINE_STD_WXCOLOUR_CONSTRUCTORS

-    // from separate RGB
-    wxColour( unsigned char red, unsigned char green, unsigned char blue );
-
-    // from packed RGB
-    wxColour( unsigned long colRGB ) { Set(colRGB); }
-
-    // Implicit conversion from the colour name
-    wxColour( const wxString &colourName ) { InitFromName(colourName); }
-    wxColour( const char *colourName ) { InitFromName( wxString::FromAscii(colourName) ); }
-#if wxUSE_UNICODE
-    wxColour( const wxChar *colourName ) { InitFromName( wxString(colourName) ); }
-#endif
-
     ~wxColour();

+    virtual bool InitWith(const wxChar *str);
+
     bool Ok() const { return m_refData != NULL; }

@@ -61,22 +51,8 @@
     bool operator != ( const wxColour& col ) const { return !(*this == col); }

-    void Set( unsigned char red, unsigned char green, unsigned char blue );
-    void Set( unsigned long colRGB )
-    {
-        // We don't need to know sizeof(long) here because we assume that the three
-        // least significant bytes contain the R, G and B values
-        Set((unsigned char)colRGB,
-            (unsigned char)(colRGB >> 8),
-            (unsigned char)(colRGB >> 16));
-    }
-
     unsigned char Red() const;
     unsigned char Green() const;
     unsigned char Blue() const;

-
-    // Get colour from name or wxNullColour
-    static wxColour CreateByName(const wxString& name);
-
     // Implementation part
     void CalcPixel( GdkColormap *cmap );
@@ -84,6 +60,4 @@
     GdkColor *GetColor() const;

-    void InitFromName(const wxString& colourName);
-
 protected:
     // ref counting code
@@ -91,4 +65,5 @@
     virtual wxObjectRefData *CloneRefData(const wxObjectRefData *data) const;

+    void InitWith( unsigned char red, unsigned char green, unsigned char blue );

 private:
Index: include/wx/mgl/colour.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mgl/colour.h,v
retrieving revision 1.10
diff -b -u -2 -r1.10 colour.h
--- include/wx/mgl/colour.h	2005/10/05 16:22:30	1.10
+++ include/wx/mgl/colour.h	2006/04/22 14:06:53
@@ -16,5 +16,5 @@

 // Colour
-class WXDLLEXPORT wxColour: public wxObject
+class WXDLLEXPORT wxColour: public wxColourBase
 {
 public:
@@ -23,18 +23,7 @@

     // default
-    wxColour();
+    wxColour() { Init(); }
+    DEFINE_STD_WXCOLOUR_CONSTRUCTORS

-    // from separate RGB
-    wxColour(unsigned char red, unsigned char green, unsigned char blue)
-        { Set(red, green, blue); }
-
-    // from packed RGB
-    wxColour(unsigned long colRGB) { Set(colRGB); }
-
-    // implicit conversion from the colour name
-    wxColour(const wxString &colourName) { InitFromName(colourName); }
-    wxColour(const char *colourName) { InitFromName(colourName); }
-
-
     // copy ctors and assignment operators
     wxColour(const wxColour& col);
@@ -44,15 +33,4 @@
     ~wxColour();

-    // Set() functions
-    void Set(unsigned char red, unsigned char green, unsigned char blue);
-    void Set(unsigned long colRGB)
-    {
-        // we don't need to know sizeof(long) here because we assume that the three
-        // least significant bytes contain the R, G and B values
-        Set((unsigned char)colRGB,
-            (unsigned char)(colRGB >> 8),
-            (unsigned char)(colRGB >> 16));
-    }
-
     // accessors
     bool Ok() const { return m_isInit; }
@@ -72,5 +50,4 @@
     bool operator != (const wxColour& colour) const { return !(*this == colour); }

-    void InitFromName(const wxString& colourName);

 protected:
@@ -78,4 +55,6 @@
     // Helper function
     void Init();
+
+    void InitWith(unsigned char red, unsigned char green, unsigned char blue);

 private:
Index: include/wx/motif/colour.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/motif/colour.h,v
retrieving revision 1.19
diff -b -u -2 -r1.19 colour.h
--- include/wx/motif/colour.h	2005/10/05 16:22:31	1.19
+++ include/wx/motif/colour.h	2006/04/22 14:06:53
@@ -17,5 +17,5 @@

 // Colour
-class WXDLLEXPORT wxColour : public wxObject
+class WXDLLEXPORT wxColour : public wxColourBase
 {
     DECLARE_DYNAMIC_CLASS(wxColour)
@@ -25,17 +25,7 @@

     // default
-    wxColour();
+    wxColour() { Init(); }
+    DEFINE_STD_WXCOLOUR_CONSTRUCTORS

-    // from separate RGB
-    wxColour( unsigned char red, unsigned char green, unsigned char blue )
-        { Set(red, green, blue); }
-
-    // from packed RGB
-    wxColour( unsigned long colRGB ) { Set(colRGB); }
-
-    // implicit conversion from the colour name
-    wxColour( const wxString &colourName ) { InitFromName(colourName); }
-    wxColour( const char *colourName ) { InitFromName(colourName); }
-
     // copy ctors and assignment operators
     wxColour( const wxColour& col );
@@ -45,14 +35,4 @@
     ~wxColour();

-    // Set() functions
-    void Set( unsigned char red, unsigned char green, unsigned char blue );
-    void Set( unsigned long colRGB )
-    {
-        // we don't need to know sizeof(long) here because we assume that the three
-        // least significant bytes contain the R, G and B values
-        Set((unsigned char)colRGB,
-            (unsigned char)(colRGB >> 8),
-            (unsigned char)(colRGB >> 16));
-    }

     // accessors
@@ -69,7 +49,4 @@
     inline bool operator != (const wxColour& colour) const { return (!(m_red == colour.m_red && m_green == colour.m_green && m_blue == colour.m_blue)); }

-    // Get colour from name or wxNullColour
-    static wxColour CreateByName(const wxString& name);
-
     // Allocate a colour, or nearest colour, using the given display.
     // If realloc is true, ignore the existing pixel, otherwise just return
@@ -82,9 +59,9 @@
     int AllocColour(WXDisplay* display, bool realloc = false);

-    void InitFromName(const wxString& col);
-
 protected:
     // Helper function
     void Init();
+
+    void InitWith( unsigned char red, unsigned char green, unsigned char blue );

 private:
Index: include/wx/msw/colour.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/colour.h,v
retrieving revision 1.24
diff -b -u -2 -r1.24 colour.h
--- include/wx/msw/colour.h	2006/02/09 00:48:58	1.24
+++ include/wx/msw/colour.h	2006/04/22 14:06:53
@@ -19,5 +19,5 @@
 // ----------------------------------------------------------------------------

-class WXDLLEXPORT wxColour : public wxObject
+class WXDLLEXPORT wxColour : public wxColourBase
 {
 public:
@@ -27,15 +27,6 @@
     // default
     wxColour() { Init(); }
+    DEFINE_STD_WXCOLOUR_CONSTRUCTORS

-    // from separate RGB
-    wxColour( unsigned char red, unsigned char green, unsigned char blue )
-        { Set(red, green, blue); }
-
-    // from packed RGB
-    wxColour( unsigned long colRGB ) { Set(colRGB); }
-
-    // implicit conversion from the colour name
-    wxColour(const wxString &colourName) { InitFromName(colourName); }
-    wxColour(const wxChar *colourName) { InitFromName(colourName); }

     // dtor
@@ -43,22 +34,4 @@


-    // other methods
-    // -------------
-
-    // to have the matching Create also for this class
-    void Create( unsigned char red, unsigned char green, unsigned char blue )
-    { Set(red, green, blue); }
-
-    // Set() functions
-    void Set(unsigned char red, unsigned char green, unsigned char blue);
-    void Set(unsigned long colRGB)
-    {
-        // we don't need to know sizeof(long) here because we assume that the three
-        // least significant bytes contain the R, G and B values
-        Set((unsigned char)colRGB,
-            (unsigned char)(colRGB >> 8),
-            (unsigned char)(colRGB >> 16));
-    }
-
     // accessors
     // ---------
@@ -83,5 +56,4 @@
     WXCOLORREF GetPixel() const { return m_pixel; };

-    void InitFromName(const wxString& colourName);

 public:
@@ -91,4 +63,6 @@
     // Helper function
     void Init();
+
+    void InitWith(unsigned char red, unsigned char green, unsigned char blue);

 private:
Index: include/wx/os2/colour.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/colour.h,v
retrieving revision 1.13
diff -b -u -2 -r1.13 colour.h
--- include/wx/os2/colour.h	2005/10/05 16:22:32	1.13
+++ include/wx/os2/colour.h	2006/04/22 14:06:53
@@ -16,5 +16,5 @@

 // Colour
-class WXDLLEXPORT wxColour: public wxObject
+class WXDLLEXPORT wxColour: public wxColourBase
 {
 public:
@@ -23,16 +23,7 @@

     // default
-    wxColour();
+    wxColour() { Init(); }
+    DEFINE_STD_WXCOLOUR_CONSTRUCTORS

-    // from separate RGB
-    wxColour( unsigned char cRed, unsigned char cGreen, unsigned char cBlue );
-
-    // from packed RGB
-    wxColour( unsigned long colRGB ) { Set(colRGB); }
-
-    // Implicit conversion from the colour name
-    wxColour(const wxString& rColourName) { InitFromName(rColourName); }
-    wxColour(const wxChar *zColourName) { InitFromName(zColourName); }
-
     // Copy ctors and assignment operators
     wxColour(const wxColour& rCol);
@@ -43,20 +34,4 @@
     ~wxColour();

-    // Set functions
-    void Set( unsigned char cRed, unsigned char cGreen, unsigned char cBlue);
-    void Set( unsigned long lColRGB)
-    {
-        // We don't need to know sizeof(long) here because we assume that the three
-        // least significant bytes contain the R, G and B values
-        Set( (unsigned char)lColRGB
-            ,(unsigned char)(lColRGB >> 8)
-            ,(unsigned char)(lColRGB >> 16)
-           );
-    }
-    void Set(const wxString& rsColour)
-    {
-        InitFromName(rsColour);
-    }
-
     // Accessors
     bool Ok(void) const {return m_bIsInit; }
@@ -80,5 +55,4 @@
     WXCOLORREF GetPixel(void) const { return m_vPixel; };

-    void InitFromName(const wxString& rCol);

 private:
@@ -91,4 +65,6 @@
     unsigned char                   m_cBlue;
     unsigned char                   m_cGreen;
+
+    void InitWith( unsigned char cRed, unsigned char cGreen, unsigned char cBlue);

 public:
Index: include/wx/palmos/colour.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/colour.h,v
retrieving revision 1.3
diff -b -u -2 -r1.3 colour.h
--- include/wx/palmos/colour.h	2005/09/23 12:50:32	1.3
+++ include/wx/palmos/colour.h	2006/04/22 14:06:53
@@ -16,8 +16,8 @@

 // ----------------------------------------------------------------------------
-// Colour
+// wxColour
 // ----------------------------------------------------------------------------

-class WXDLLEXPORT wxColour : public wxObject
+class WXDLLEXPORT wxColour : public wxColourBase
 {
 public:
@@ -25,19 +25,7 @@
     // ------------

-    // default
     wxColour() { Init(); }
+    DEFINE_STD_WXCOLOUR_CONSTRUCTORS

-    // from separate RGB
-    wxColour( unsigned char red, unsigned char green, unsigned char blue )
-        { Set(red, green, blue); }
-
-    // from packed RGB
-    wxColour( unsigned long colRGB ) { Set(colRGB); }
-
-    // implicit conversion from the colour name
-    wxColour(const wxString &colourName) { InitFromName(colourName); }
-    wxColour(const wxChar *colourName) { InitFromName(colourName); }
-
-
     // copy ctors and assignment operators
     wxColour(const wxColour& col);
@@ -48,25 +36,5 @@


-    // other methods
-    // -------------

-    // to have the matching Create also for this class
-    void Create( unsigned char red, unsigned char green, unsigned char blue )
-    { Set(red, green, blue); }
-
-    // Set() functions
-    void Set(unsigned char red, unsigned char green, unsigned char blue);
-    void Set(unsigned long colRGB)
-    {
-        // we don't need to know sizeof(long) here because we assume that the three
-        // least significant bytes contain the R, G and B values
-        Set((unsigned char)colRGB,
-            (unsigned char)(colRGB >> 8),
-            (unsigned char)(colRGB >> 16));
-    }
-
-    // accessors
-    // ---------
-
     bool Ok() const { return m_isInit; }

@@ -88,6 +56,4 @@
     WXCOLORREF GetPixel() const { return m_pixel; };

-    void InitFromName(const wxString& colourName);
-
 public:
     WXCOLORREF m_pixel;
@@ -96,4 +62,5 @@
     // Helper function
     void Init();
+    void InitWith(unsigned char red, unsigned char green, unsigned char blue);

 private:
Index: include/wx/x11/colour.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/x11/colour.h,v
retrieving revision 1.14
diff -b -u -2 -r1.14 colour.h
--- include/wx/x11/colour.h	2006/02/09 00:49:09	1.14
+++ include/wx/x11/colour.h	2006/04/22 14:06:53
@@ -34,5 +34,5 @@
 //-----------------------------------------------------------------------------

-class WXDLLEXPORT wxColour: public wxGDIObject
+class WXDLLEXPORT wxColour : public wxColourBase
 {
 public:
@@ -40,25 +40,11 @@
     // ------------

-    // default
-    wxColour() { }
+    wxColour() {}
+    DEFINE_STD_WXCOLOUR_CONSTRUCTORS

-    // from separate RGB
-    wxColour( unsigned char red, unsigned char green, unsigned char blue );
-
-    // from packed RGB
-    wxColour( unsigned long colRGB ) { Set(colRGB); }
-
-    // Implicit conversion from the colour name
-    wxColour( const wxString &colourName ) { InitFromName(colourName); }
-    wxColour( const char *colourName ) { InitFromName( wxString::FromAscii(colourName) ); }
-#if wxUSE_UNICODE
-    wxColour( const wxChar *colourName ) { InitFromName( wxString(colourName) ); }
-#endif
-
-    // Get colour from name or wxNullColour
-    static wxColour CreateByName(const wxString& name);
-
     ~wxColour();

+    virtual bool InitWith(const wxChar *str);
+
     bool Ok() const { return m_refData != NULL; }

@@ -66,14 +52,4 @@
     bool operator != ( const wxColour& col ) const { return !(*this == col); }

-    void Set( unsigned char red, unsigned char green, unsigned char blue );
-    void Set( unsigned long colRGB )
-    {
-        // We don't need to know sizeof(long) here because we assume that the three
-        // least significant bytes contain the R, G and B values
-        Set((unsigned char)colRGB,
-            (unsigned char)(colRGB >> 8),
-            (unsigned char)(colRGB >> 16));
-    }
-
     unsigned char Red() const;
     unsigned char Green() const;
@@ -86,6 +62,4 @@
     WXColor *GetColor() const;

-    void InitFromName(const wxString& colourName);
-
 protected:
     // ref counting code
@@ -93,4 +67,5 @@
     virtual wxObjectRefData *CloneRefData(const wxObjectRefData *data) const;

+    void InitWith( unsigned char red, unsigned char green, unsigned char blue );

 private:
Index: docs/latex/wx/colour.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/colour.tex,v
retrieving revision 1.22
diff -b -u -2 -r1.22 colour.tex
--- docs/latex/wx/colour.tex	2005/10/05 16:22:23	1.22
+++ docs/latex/wx/colour.tex	2006/04/22 14:06:55
@@ -3,5 +3,5 @@
 %% Purpose:     wxColour docs
 %% Author:
-%% Modified by:
+%% Modified by: Francesco Montorsi
 %% Created:
 %% RCS-ID:      $Id: colour.tex,v 1.22 2005/10/05 16:22:23 ABX Exp $
@@ -65,6 +65,5 @@
 \func{}{wxColour}{\param{const wxString\& }{colourNname}}

-Constructs a colour object using a colour name
-listed in {\bf wxTheColourDatabase}.
+Constructs a colour using the given string. See \helpref{Set}{wxcolourset3} for more info.

 \func{}{wxColour}{\param{const wxColour\&}{ colour}}
@@ -104,4 +103,21 @@


+\membersection{wxColour::GetAsString}\label{wxcolourgetasstring}
+
+\constfunc{wxString}{GetAsString}{\param{long}{ flags}}
+
+Converts this colour to a \helpref{wxString}{wxstring}
+using the given {\it flags}.
+
+The supported flags are {\bf wxC2S_NAME}, to obtain the colour
+name (e.g. wxColour(255,0,0) -> \texttt{``red"}), {\bf wxC2S_CSS_SYNTAX}, to obtain
+the colour in the \texttt{``rgb(r,g,b)"} syntax
+(e.g. wxColour(255,0,0) -> \texttt{``rgb(255,0,0)"}), and {\bf wxC2S_HTML_SYNTAX}, to obtain
+the colour as  \texttt{``\#"} followed by 6 hexadecimal digits
+(e.g. wxColour(255,0,0) -> \texttt{``\#FF0000"}).
+
+This function never fails and always returns a non-empty string.
+
+
 \membersection{wxColour::GetPixel}\label{wxcolourgetpixel}

@@ -140,4 +156,21 @@

 Sets the RGB intensity values.
+
+
+\membersection{wxColour::Set}\label{wxcolourset2}
+
+\func{void}{Set}{\param{unsigned long}{ RGB}}
+
+Sets the RGB intensity values extracting them from the packed long.
+
+
+\membersection{wxColour::Set}\label{wxcolourset3}
+
+\func{bool}{Set}{\param{const wxString \&}{ str}}
+
+Sets the colour using the given string.
+Accepts colour names (those listed in \helpref{wxTheColourDatabase}{wxcolourdatabase}), the CSS-like \texttt{``RGB(r,g,b)"} syntax (case insensitive) and the HTML-like syntax (i.e. \texttt{``\#"} followed by 6 hexadecimal digits for red, green, blue components).
+
+Returns \true if the conversion was successful, \false otherwise.


Index: src/common/gdicmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/gdicmn.cpp,v
retrieving revision 1.121
diff -b -u -2 -r1.121 gdicmn.cpp
--- src/common/gdicmn.cpp       2006/04/16 22:33:16     1.121
+++ src/common/gdicmn.cpp       2006/04/23 10:42:20
@@ -401,6 +401,4 @@
     self->Initialize();

-    // first look among the existing colours
-
     // make the comparaison case insensitive and also match both grey and gray
     wxString colName = colour;
@@ -415,47 +413,11 @@
     if ( it != m_map->end() )
         return *(it->second);
-
-    // if we didn't find it, query the system, maybe it knows about it
-#if defined(__WXGTK__) || defined(__X__)
-    wxColour col = wxColour::CreateByName(colour);
-
-    if ( col.Ok() )
-    {
-        // cache it
-        self->AddColour(colour, col);
-    }
-
-    return col;
-#elif defined(__X__)
-    // TODO: move this to wxColour::CreateByName()
-    XColor xcolour;
-
-#ifdef __WXMOTIF__
-    Display *display = XtDisplay((Widget) wxTheApp->GetTopLevelWidget()) ;
-#endif
-#ifdef __WXX11__
-    Display* display = (Display*) wxGetDisplay();
-#endif
-    /* MATTHEW: [4] Use wxGetMainColormap */
-    if (!XParseColor(display, (Colormap) wxTheApp->GetMainColormap((WXDisplay*) display), colour.ToAscii() ,&xcolour))
-        return NULL;
-
-#if wxUSE_NANOX
-    unsigned char r = (unsigned char)(xcolour.red);
-    unsigned char g = (unsigned char)(xcolour.green);
-    unsigned char b = (unsigned char)(xcolour.blue);
-#else
-    unsigned char r = (unsigned char)(xcolour.red >> 8);
-    unsigned char g = (unsigned char)(xcolour.green >> 8);
-    unsigned char b = (unsigned char)(xcolour.blue >> 8);
-#endif
-
-    wxColour col(r, g, b);
-    AddColour(colour, col);

-    return col;
-#else // other platform
+    // we did not find any result in existing colours:
+    // we won't use wxString -> wxColour conversion because the
+    // wxColour::Set(const wxString &) function which does that conversion
+    // internally uses this function (wxColourDatabase::Find) and we want
+    // to avoid infinite recursion !
     return wxNullColour;
-#endif // platforms
 }

Index: build/bakefiles/files.bkl
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/bakefiles/files.bkl,v
retrieving revision 1.322
diff -b -u -2 -r1.322 files.bkl
--- build/bakefiles/files.bkl   2006/04/16 22:33:22     1.322
+++ build/bakefiles/files.bkl   2006/04/23 10:51:41
@@ -552,4 +552,5 @@
     src/common/choiccmn.cpp
     src/common/clipcmn.cpp
+    src/common/colourcmn.cpp
     src/common/cmdproc.cpp
     src/common/cmndata.cpp

 	  	 
