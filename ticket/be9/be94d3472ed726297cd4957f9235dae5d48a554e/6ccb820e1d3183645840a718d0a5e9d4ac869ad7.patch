Index: src/msw/ole/dataobj.cpp
===================================================================
--- src/msw/ole/dataobj.cpp	(revision 61651)
+++ src/msw/ole/dataobj.cpp	(working copy)
@@ -1196,23 +1196,6 @@
         return buffer;
     }
 
-#if wxUSE_UNICODE
-    virtual bool GetDataHere( void* buffer ) const
-    {
-        // CFSTR_SHELLURL is _always_ ANSI!
-        wxCharBuffer char_buffer( GetDataSize() );
-        wxCustomDataObject::GetDataHere( (void*)char_buffer.data() );
-        wxString unicode_buffer( char_buffer, wxConvLibc );
-        memcpy( buffer, unicode_buffer.c_str(),
-                ( unicode_buffer.length() + 1 ) * sizeof(wxChar) );
-
-        return true;
-    }
-    virtual bool GetDataHere(const wxDataFormat& WXUNUSED(format),
-                             void *buf) const
-        { return GetDataHere(buf); }
-#endif
-
     DECLARE_NO_COPY_CLASS(CFSTR_SHELLURLDataObject)
 };
 
@@ -1250,10 +1233,20 @@
     wxString url;
     wxCHECK_MSG( m_dataObjectLast, url, _T("no data in wxURLDataObject") );
 
-    size_t len = m_dataObjectLast->GetDataSize();
+    if (m_dataObjectLast->GetPreferredFormat() == CFSTR_SHELLURL)
+    {
+#if wxUSE_UNICODE
+        // CFSTR_SHELLURL is _always_ ANSI! 
+        wxCharBuffer char_buffer( m_dataObjectLast->GetDataSize() );
+        m_dataObjectLast->GetDataHere( (void*)char_buffer.data() );
+        url = wxString(char_buffer, wxConvLibc);
+#else
+        m_dataObjectLast->GetDataHere(wxStringBuffer(url, len));
+#endif
+    }
+    else
+        url = ((wxTextDataObject *)m_dataObjectLast)->GetText();
 
-    m_dataObjectLast->GetDataHere(wxStringBuffer(url, len));
-
     return url;
 }
 
