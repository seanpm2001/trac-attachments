Index: include/wx/richtext/richtextbuffer.h
===================================================================
--- include/wx/richtext/richtextbuffer.h	(revision 71954)
+++ include/wx/richtext/richtextbuffer.h	(working copy)
@@ -3613,7 +3613,9 @@
     /**
         Copy constructor.
     */
-    wxRichTextFieldType(const wxRichTextFieldType& fieldType) { Copy(fieldType); }
+    wxRichTextFieldType(const wxRichTextFieldType& fieldType)
+        : wxObject(fieldType)
+    { Copy(fieldType); }
 
     void Copy(const wxRichTextFieldType& fieldType) { m_name = fieldType.m_name; }
 
@@ -3766,7 +3768,9 @@
         The copy constructor.
 
     */
-    wxRichTextFieldTypeStandard(const wxRichTextFieldTypeStandard& field) { Copy(field); }
+    wxRichTextFieldTypeStandard(const wxRichTextFieldTypeStandard& field)
+        : wxRichTextFieldType(field)
+    { Copy(field); }
 
     /**
         Initialises the object.
Index: src/common/imagtga.cpp
===================================================================
--- src/common/imagtga.cpp	(revision 71954)
+++ src/common/imagtga.cpp	(working copy)
@@ -292,9 +292,9 @@
 
         case 1:
         {
-            unsigned char r;
-            unsigned char g;
-            unsigned char b;
+            unsigned char r = 0;
+            unsigned char g = 0;
+            unsigned char b = 0;
 
             // No compression read the data directly to imageData.
 
@@ -486,9 +486,9 @@
 
         case 9:
         {
-            unsigned char r;
-            unsigned char g;
-            unsigned char b;
+            unsigned char r = 0;
+            unsigned char g = 0;
+            unsigned char b = 0;
 
             // Decode the RLE data.
 
Index: src/common/time.cpp
===================================================================
--- src/common/time.cpp	(revision 71954)
+++ src/common/time.cpp	(working copy)
@@ -3,7 +3,7 @@
 // Purpose:     Implementation of time-related functions.
 // Author:      Vadim Zeitlin
 // Created:     2011-11-26
-// RCS-ID:      $Id: wxhead.cpp,v 1.11 2010-04-22 12:44:51 zeitlin Exp $
+// RCS-ID:      $Id$
 // Copyright:   (c) 2011 Vadim Zeitlin <vadim@wxwidgets.org>
 // Licence:     wxWindows licence
 ///////////////////////////////////////////////////////////////////////////////
@@ -292,7 +292,9 @@
 // Get local time as milliseconds since 00:00:00, Jan 1st 1970
 wxLongLong wxGetUTCTimeMillis()
 {
+#if !defined(__WINDOWS__)
     wxLongLong val = MILLISECONDS_PER_SECOND;
+#endif
 
     // If possible, use a function which avoids conversions from
     // broken-up time structures to milliseconds
Index: src/msw/fswatcher.cpp
===================================================================
--- src/msw/fswatcher.cpp	(revision 71954)
+++ src/msw/fswatcher.cpp	(working copy)
@@ -154,6 +154,7 @@
             break;
 
         case wxFSWPath_None:
+        default:
             wxFAIL_MSG( "Invalid watch type." );
             return false;
     }
Index: src/msw/treectrl.cpp
===================================================================
--- src/msw/treectrl.cpp	(revision 71954)
+++ src/msw/treectrl.cpp	(working copy)
@@ -2926,7 +2926,7 @@
                 if ( processed )
                 {
                     int htFlags = 0;
-                    wxTreeItemId item = HitTest(wxPoint(x, y), htFlags);
+                    HitTest(wxPoint(x, y), htFlags);
 
                     if ( htFlags & wxTREE_HITTEST_ONITEMSTATEICON )
                     {
Index: src/msw/webview_ie.cpp
===================================================================
--- src/msw/webview_ie.cpp	(revision 71954)
+++ src/msw/webview_ie.cpp	(working copy)
@@ -112,11 +112,11 @@
     if (psaStrings != NULL)
     {
         VARIANT *param;
-        HRESULT hr = SafeArrayAccessData(psaStrings, (LPVOID*)&param);
+        SafeArrayAccessData(psaStrings, (LPVOID*)&param);
         param->vt = VT_BSTR;
         param->bstrVal = bstr;
 
-        hr = SafeArrayUnaccessData(psaStrings);
+        SafeArrayUnaccessData(psaStrings);
 
         wxCOMPtr<IHTMLDocument2> document(GetDocument());
 
@@ -134,10 +134,10 @@
         psaStrings = SafeArrayCreateVector(VT_VARIANT, 0, 1);
         if (psaStrings != NULL)
         {
-            hr = SafeArrayAccessData(psaStrings, (LPVOID*)&param);
+            SafeArrayAccessData(psaStrings, (LPVOID*)&param);
             param->vt = VT_BSTR;
             param->bstrVal = bstr;
-            hr = SafeArrayUnaccessData(psaStrings);
+            SafeArrayUnaccessData(psaStrings);
 
             document = GetDocument();
 
Index: src/propgrid/propgrid.cpp
===================================================================
--- src/propgrid/propgrid.cpp	(revision 71954)
+++ src/propgrid/propgrid.cpp	(working copy)
@@ -5553,13 +5553,6 @@
 
     if ( keycode == WXK_TAB )
     {
-        wxWindow* mainControl;
-
-        if ( HasInternalFlag(wxPG_FL_IN_MANAGER) )
-            mainControl = GetParent();
-        else
-            mainControl = this;
-
         if ( !event.ShiftDown() )
         {
             if ( !editorFocused && m_wndEditor )
@@ -5574,6 +5567,8 @@
                 // in every scenario (for instance, when property grid
                 // is either first or last control).
             #if defined(__WXGTK__)
+                wxWindow* mainControl = HasInternalFlag(wxPG_FL_IN_MANAGER) ?
+                                        GetParent() : this;
                 wxWindow* sibling = mainControl->GetNextSibling();
                 if ( sibling )
                     sibling->SetFocusFromKbd();
@@ -5591,6 +5586,8 @@
             else
             {
             #if defined(__WXGTK__)
+                wxWindow* mainControl = HasInternalFlag(wxPG_FL_IN_MANAGER) ?
+                                        GetParent() : this;
                 wxWindow* sibling = mainControl->GetPrevSibling();
                 if ( sibling )
                     sibling->SetFocusFromKbd();
