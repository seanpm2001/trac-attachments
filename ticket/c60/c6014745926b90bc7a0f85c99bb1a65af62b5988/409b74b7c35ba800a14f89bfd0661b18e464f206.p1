--- window-o.cpp	2007-07-28 20:06:10.000000000 +0200
+++ window.cpp	2007-07-28 20:23:15.000000000 +0200
@@ -2133,6 +2147,25 @@
     }
 }
 
+//-----------------------------------------------------------------------------
+// "grab_broken" 
+//-----------------------------------------------------------------------------
+
+static void
+gtk_window_grab_broken( GtkWidget *m_widget, 
+                        GdkEventGrabBroken *event,
+                        wxWindow *win )
+{
+    // Mouse capture has been lost unvolontarily. Notify app.
+    if( !(event->keyboard) && win && wxWindow::GetCapture()==win )
+    {
+        wxMouseCaptureLostEvent evt( win->GetId() );
+        evt.SetEventObject( win );
+        win->GetEventHandler()->ProcessEvent( evt );
+    }
+}
+
+
 } // extern "C"
 
 // ----------------------------------------------------------------------------
@@ -2545,9 +2579,15 @@
         // Catch native resize events
         g_signal_connect (m_wxwindow, "size_allocate",
                           G_CALLBACK (gtk_window_size_callback), this);
-    }
+        // Make sure we can notify app code when mouse capture is lost
+        g_signal_connect (m_wxwindow, "grab_broken_event",
+                          G_CALLBACK (gtk_window_grab_broken), this);
+    }
+    if( connect_widget!=m_wxwindow )
+        // Make sure we can notify app code when mouse capture is lost
+        g_signal_connect (connect_widget, "grab_broken_event",
+                        G_CALLBACK (gtk_window_grab_broken), this);
 
 #if wxUSE_COMBOBOX
     if (GTK_IS_COMBO(m_widget))
     {
         GtkCombo *gcombo = GTK_COMBO(m_widget);
@@ -4093,6 +4130,13 @@
     gdk_pointer_ungrab ( (guint32)GDK_CURRENT_TIME );
 }
 
+void wxWindowGTK::GTKReleaseMouseAndNotify(){
+    DoReleaseMouse();
+    wxMouseCaptureLostEvent evt(GetId());
+    evt.SetEventObject( this );
+    GetEventHandler()->ProcessEvent( evt );
+}
+
 /* static */
 wxWindow *wxWindowBase::GetCapture()
 {
--- window-o.h	2007-07-28 20:08:25.000000000 +0200
+++ window.h	2007-07-28 20:30:05.000000000 +0200
@@ -178,6 +178,10 @@
     // there is also the exception of wxMenuBar)
     virtual bool GTKNeedsParent() const { return !IsTopLevel(); }
 
+    // This is called when capture is taken from the window. It will 
+    // fire off capture lost events.
+    void GTKReleaseMouseAndNotify();
+    
 protected:
     // Override GTKWidgetNeedsMnemonic and return true if your
     // needs to set its mnemonic widget, such as for a
--- dialog-o.cpp	2007-07-26 18:11:59.000000000 +0200
+++ dialog.cpp	2007-07-28 20:28:20.000000000 +0200
@@ -112,6 +112,10 @@
        return GetReturnCode();
     }
 
+    // If some window has capture, release and notify
+    if( wxWindow::GetCapture() )
+        wxWindow::GetCapture()->GTKReleaseMouseAndNotify();
+        
     // use the apps top level window as parent if none given unless explicitly
     // forbidden
     if ( !GetParent() && !(GetWindowStyleFlag() & wxDIALOG_NO_PARENT) )
--- msgdlg-o.cpp	2007-07-26 18:14:14.000000000 +0200
+++ msgdlg.cpp	2007-07-28 20:42:19.000000000 +0200
@@ -137,6 +137,10 @@
 
 int wxMessageDialog::ShowModal()
 {
+    // If some window has capture, release and notify
+    if( wxWindow::GetCapture() )
+        wxWindow::GetCapture()->GTKReleaseMouseAndNotify();
+    
     if ( !m_widget )
     {
         GTKCreateMsgDialog();

 	  	 
