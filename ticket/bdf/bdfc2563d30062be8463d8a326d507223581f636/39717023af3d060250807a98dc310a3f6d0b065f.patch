Index: src/common/strconv.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/strconv.cpp,v
retrieving revision 1.82
diff -u -r1.82 strconv.cpp
--- src/common/strconv.cpp	2003/09/22 00:12:10	1.82
+++ src/common/strconv.cpp	2003/09/22 09:36:25
@@ -570,9 +570,13 @@
 
         if (buf)
         {
-            *((wxUint16*)buf)++ = cc[0];
+            *(wxUint16*)buf = cc[0];
+            buf += sizeof(wxUint16); 
             if (pa > 1)
-                *((wxUint16*)buf)++ = cc[1];
+            {
+                *(wxUint16*)buf = cc[1];
+                buf += sizeof(wxUint16);
+            }
         }
 
         len += pa*sizeof(wxUint16);
Index: include/wx/fontenc.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/fontenc.h,v
retrieving revision 1.16
diff -u -r1.16 fontenc.h
--- include/wx/fontenc.h	2003/09/22 00:12:08	1.16
+++ include/wx/fontenc.h	2003/09/22 09:36:25
@@ -90,5 +90,30 @@
     wxFONTENCODING_MAX
 };
 
+
+#ifndef SIZEOF_WCHAR_T
+    #define SIZEOF_WCHAR_T 2
+#endif // !defined(SIZEOF_WCHAR_T)
+
+#ifdef WORDS_BIGENDIAN
+
+#if SIZEOF_WCHAR_T == 2
+#define wxFONTENCODING_NATIVE   wxFONTENCODING_UTF16BE
+#endif
+#if SIZEOF_WCHAR_T == 4
+#define wxFONTENCODING_NATIVE   wxFONTENCODING_UTF32BE
+#endif
+
+#else   // WORDS_BIGENDIAN
+
+#if SIZEOF_WCHAR_T == 2
+#define wxFONTENCODING_NATIVE   wxFONTENCODING_UTF16LE
+#endif
+#if SIZEOF_WCHAR_T == 4
+#define wxFONTENCODING_NATIVE   wxFONTENCODING_UTF32LE
+#endif
+
+#endif  // WORDS_BIGENDIAN
+
 #endif // _WX_FONTENC_H_
 
Index: include/wx/strconv.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/strconv.h,v
retrieving revision 1.22
diff -u -r1.22 strconv.h
--- include/wx/strconv.h	2003/09/22 00:12:08	1.22
+++ include/wx/strconv.h	2003/09/22 09:36:26
@@ -102,6 +102,8 @@
     virtual size_t WC2MB(char *buf, const wchar_t *psz, size_t n) const;
 };
 
+WXDLLIMPEXP_DATA_BASE(extern wxMBConvUTF16LE) wxConvUTF16LE;
+
 // ----------------------------------------------------------------------------
 // wxMBConvUTF16BE (for conversion using UTF16 Big Endian encoding)
 // ----------------------------------------------------------------------------
@@ -113,6 +115,24 @@
     virtual size_t WC2MB(char *buf, const wchar_t *psz, size_t n) const;
 };
 
+WXDLLIMPEXP_DATA_BASE(extern wxMBConvUTF16BE) wxConvUTF16BE;
+
+// ----------------------------------------------------------------------------
+// wxMBConvUTF16 (for conversion using UTF16 encoding in machine's Endian)
+// ----------------------------------------------------------------------------
+
+#ifdef WORDS_BIGENDIAN
+
+typedef wxMBConvUTF16BE wxMBConvUTF16;
+#define wxConvUTF16 wxConvUTF16BE
+
+#else
+
+typedef wxMBConvUTF16LE wxMBConvUTF16;
+#define wxConvUTF16 wxConvUTF16LE
+
+#endif
+
 // ----------------------------------------------------------------------------
 // wxMBConvUCS4LE (for conversion using UTF32 Little Endian encoding)
 // ----------------------------------------------------------------------------
@@ -124,6 +144,8 @@
     virtual size_t WC2MB(char *buf, const wchar_t *psz, size_t n) const;
 };
 
+WXDLLIMPEXP_DATA_BASE(extern wxMBConvUTF32LE) wxConvUTF32LE;
+
 // ----------------------------------------------------------------------------
 // wxMBConvUCS4BE (for conversion using UTF32 Big Endian encoding)
 // ----------------------------------------------------------------------------
@@ -135,6 +157,24 @@
     virtual size_t WC2MB(char *buf, const wchar_t *psz, size_t n) const;
 };
 
+WXDLLIMPEXP_DATA_BASE(extern wxMBConvUTF32BE) wxConvUTF32BE;
+
+// ----------------------------------------------------------------------------
+// wxMBConvUTF16 (for conversion using UTF32 encoding in machine's Endian)
+// ----------------------------------------------------------------------------
+
+#ifdef WORDS_BIGENDIAN
+
+typedef wxMBConvUTF32BE wxMBConvUTF32;
+#define wxConvUTF32 wxConvUTF32BE
+
+#else
+
+typedef wxMBConvUTF32LE wxMBConvUTF32;
+#define wxConvUTF32 wxConvUTF32LE
+
+#endif
+
 // ----------------------------------------------------------------------------
 // wxCSConv (for conversion based on loadable char sets)
 // ----------------------------------------------------------------------------
@@ -216,7 +256,11 @@
                                        wxConvFile,
                                        wxConvLocal,
                                        wxConvISO8859_1,
-                                       wxConvUTF8;
+                                       wxConvUTF8,
+                                       wxConvUTF16BE,
+                                       wxConvUTF16LE,
+                                       wxConvUTF32BE,
+                                       wxConvUTF32LE;
 WXDLLIMPEXP_DATA_BASE(extern wxMBConv *) wxConvCurrent;
 
 #define wxFNCONV(name) name

 	  	 
