diff '--unified=3' --recursive wxWidgets-3.1.3.orig/include/wx/private/jsscriptwrapper.h wxWidgets-3.1.3/include/wx/private/jsscriptwrapper.h
--- wxWidgets-3.1.3.orig/include/wx/private/jsscriptwrapper.h	2019-10-28 01:41:42.000000000 +0800
+++ wxWidgets-3.1.3/include/wx/private/jsscriptwrapper.h	2019-12-03 12:49:32.443304512 +0800
@@ -38,8 +38,45 @@
 
         // Adds one escape level if there is a single quote, double quotes or
         // escape characters
-        wxRegEx escapeDoubleQuotes("(\\\\*)([\\'\"\n\r\v\t\b\f])");
-        escapeDoubleQuotes.Replace(&m_escapedCode,"\\1\\1\\\\\\2");
+        /**
+         * The original code didn't escape '\n', '\r', etc. correctly. So, here
+         * is this patch.
+         *
+         * Also, the original code escapes single-quote mark '\'' as well, but
+         * it seems unnecessary because single-quote mark literals don't need
+         * to be escaped in real JavaScript codes when these literals are inside
+         * double-quote quotation.
+         */
+        const char *s_szCharsNeededToBeEscaped = "\\\"\n\r\v\t\b\f";
+        for (
+            size_t pos = m_escapedCode.find_first_of(s_szCharsNeededToBeEscaped, 0);
+            pos != wxString::npos;
+            pos = m_escapedCode.find_first_of(s_szCharsNeededToBeEscaped, pos)
+        ) {
+            switch (m_escapedCode[pos].GetValue())
+            {
+            case 0x0A: // '\n'
+                m_escapedCode[pos] = 'n';
+                break;
+            case 0x0D: // '\r'
+                m_escapedCode[pos] = 'r';
+                break;
+            case 0x0B: // '\v'
+                m_escapedCode[pos] = 'v';
+                break;
+            case 0x09: // '\t'
+                m_escapedCode[pos] = 't';
+                break;
+            case 0x08: // '\b'
+                m_escapedCode[pos] = 'b';
+                break;
+            case 0x0C: // '\f'
+                m_escapedCode[pos] = 'f';
+                break;
+            }
+            m_escapedCode.insert(pos, '\\');
+            pos += 2;
+        }
     }
 
     // Get the code to execute, its returned value will be either boolean true,
