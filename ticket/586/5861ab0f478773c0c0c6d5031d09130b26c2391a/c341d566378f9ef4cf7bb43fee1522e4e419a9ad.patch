From 95a1db5c932f6b7409b751cd7c846a09526251be Mon Sep 17 00:00:00 2001
From: Christian Walther <walther@indel.ch>
Date: Mon, 14 Apr 2014 09:40:40 +0200
Subject: [PATCH] Add wxEVT_STC_CLIPBOARD_{COPY|PASTE} events.

In analogy to wxEVT_STC_START_DRAG and wxEVT_STC_DO_DROP, these allow the copied or pasted text to be transformed between the clipboard and the wxStyledTextControl.
---
 include/wx/stc/stc.h       |   15 ++++++++++-----
 interface/wx/stc/stc.h     |    6 ++++++
 src/stc/ScintillaWX.cpp    |   18 ++++++++++++++++--
 src/stc/stc.cpp            |    2 ++
 src/stc/stc.cpp.in         |    2 ++
 src/stc/stc.h.in           |   15 ++++++++++-----
 src/stc/stc.interface.h.in |    6 ++++++
 7 files changed, 52 insertions(+), 12 deletions(-)

diff --git a/include/wx/stc/stc.h b/include/wx/stc/stc.h
index 3209a69..491ebae 100644
--- a/include/wx/stc/stc.h
+++ b/include/wx/stc/stc.h
@@ -5060,8 +5060,8 @@ public:
     void SetToken(int val)                { m_token = val; }
     void SetAnnotationLinesAdded(int val) { m_annotationLinesAdded = val; }
     void SetUpdated(int val)              { m_updated = val; }
-#ifdef  STC_USE_DND
     void SetDragText(const wxString& val) { m_dragText = val; }
+#ifdef  STC_USE_DND
     void SetDragFlags(int flags)          { m_dragFlags = flags; }
     void SetDragResult(wxDragResult val)  { m_dragResult = val; }
 
@@ -5097,8 +5097,8 @@ public:
     int  GetAnnotationsLinesAdded() const { return m_annotationLinesAdded; }
     int  GetUpdated() const               { return m_updated; }
     
-#ifdef STC_USE_DND
     wxString GetDragText()           { return m_dragText; }
+#ifdef STC_USE_DND
     int GetDragFlags()               { return m_dragFlags; }
     wxDragResult GetDragResult()     { return m_dragResult; }
 
@@ -5141,9 +5141,8 @@ private:
     int m_annotationLinesAdded; // wxEVT_STC_MODIFIED with SC_MOD_CHANGEANNOTATION 
     int m_updated;              // wxEVT_STC_UPDATEUI
 
-
+    wxString m_dragText;        // wxEVT_STC_START_DRAG, wxEVT_STC_DO_DROP, wxEVT_STC_CLIPBOARD_COPY, wxEVT_STC_CLIPBOARD_PASTE
 #if wxUSE_DRAG_AND_DROP
-    wxString m_dragText;        // wxEVT_STC_START_DRAG, wxEVT_STC_DO_DROP
     int      m_dragFlags;       // wxEVT_STC_START_DRAG
     wxDragResult m_dragResult;  // wxEVT_STC_DRAG_OVER,wxEVT_STC_DO_DROP
 #endif
@@ -5184,6 +5183,8 @@ wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_INDICATOR_RELEASE, wxStyled
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_AUTOCOMP_CANCELLED, wxStyledTextEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_AUTOCOMP_CHAR_DELETED, wxStyledTextEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_HOTSPOT_RELEASE_CLICK, wxStyledTextEvent );
+wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_CLIPBOARD_COPY, wxStyledTextEvent );
+wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_CLIPBOARD_PASTE, wxStyledTextEvent );
 #else
     enum {
         wxEVT_STC_CHANGE,
@@ -5216,7 +5217,9 @@ wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_HOTSPOT_RELEASE_CLICK, wxSt
         wxEVT_STC_INDICATOR_RELEASE,
         wxEVT_STC_AUTOCOMP_CANCELLED,
         wxEVT_STC_AUTOCOMP_CHAR_DELETED,
-        wxEVT_STC_HOTSPOT_RELEASE_CLICK
+        wxEVT_STC_HOTSPOT_RELEASE_CLICK,
+        wxEVT_STC_CLIPBOARD_COPY,
+        wxEVT_STC_CLIPBOARD_PASTE
     };
 #endif
 
@@ -5259,6 +5262,8 @@ typedef void (wxEvtHandler::*wxStyledTextEventFunction)(wxStyledTextEvent&);
 #define EVT_STC_AUTOCOMP_CANCELLED(id, fn)    wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_AUTOCOMP_CANCELLED,    id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
 #define EVT_STC_AUTOCOMP_CHAR_DELETED(id, fn) wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_AUTOCOMP_CHAR_DELETED, id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
 #define EVT_STC_HOTSPOT_RELEASE_CLICK(id, fn) wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_HOTSPOT_RELEASE_CLICK, id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
+#define EVT_STC_CLIPBOARD_COPY(id, fn)        wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_CLIPBOARD_COPY,        id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
+#define EVT_STC_CLIPBOARD_PASTE(id, fn)       wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_CLIPBOARD_PASTE,       id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
 
 #endif
 
diff --git a/interface/wx/stc/stc.h b/interface/wx/stc/stc.h
index 0a3fc95..d59af88 100644
--- a/interface/wx/stc/stc.h
+++ b/interface/wx/stc/stc.h
@@ -2643,6 +2643,10 @@
         TOWRITE
     @event{EVT_STC_HOTSPOT_RELEASE_CLICK(id, fn)}
         TOWRITE
+    @event{EVT_STC_CLIPBOARD_COPY(id, fn)}
+        TOWRITE
+    @event{EVT_STC_CLIPBOARD_PASTE(id, fn)}
+        TOWRITE
     @endEventTable
 
     @library{wxstc}
@@ -6231,3 +6235,5 @@ const wxEventType wxEVT_STC_INDICATOR_RELEASE;
 const wxEventType wxEVT_STC_AUTOCOMP_CANCELLED;
 const wxEventType wxEVT_STC_AUTOCOMP_CHAR_DELETED;
 const wxEventType wxEVT_STC_HOTSPOT_RELEASE_CLICK;
+const wxEventType wxEVT_STC_CLIPBOARD_COPY;
+const wxEventType wxEVT_STC_CLIPBOARD_PASTE;
diff --git a/src/stc/ScintillaWX.cpp b/src/stc/ScintillaWX.cpp
index 0a6614d..6958a80 100644
--- a/src/stc/ScintillaWX.cpp
+++ b/src/stc/ScintillaWX.cpp
@@ -501,7 +501,15 @@ void ScintillaWX::Paste() {
     if (gotData) {
         wxString   text = wxTextBuffer::Translate(data.GetText(),
                                                   wxConvertEOLMode(pdoc->eolMode));
-        wxWX2MBbuf buf = (wxWX2MBbuf)wx2stc(text);
+
+        // Send an event to allow the pasted text to be changed
+        wxStyledTextEvent evt(wxEVT_STC_CLIPBOARD_PASTE, stc->GetId());
+        evt.SetEventObject(stc);
+        evt.SetPosition(sel.MainCaret());
+        evt.SetDragText(text);
+        stc->GetEventHandler()->ProcessEvent(evt);
+
+        wxWX2MBbuf buf = (wxWX2MBbuf)wx2stc(evt.GetDragText());
 
 #if wxUSE_UNICODE
         // free up the old character buffer in case the text is real big
@@ -526,9 +534,15 @@ void ScintillaWX::CopyToClipboard(const SelectionText& st) {
     if ( !st.LengthWithTerminator() )
         return;
 
+    // Send an event to allow the copied text to be changed
+    wxStyledTextEvent evt(wxEVT_STC_CLIPBOARD_COPY, stc->GetId());
+    evt.SetEventObject(stc);
+    evt.SetDragText(wxTextBuffer::Translate(stc2wx(st.Data(), st.Length())));
+    stc->GetEventHandler()->ProcessEvent(evt);
+
     wxTheClipboard->UsePrimarySelection(false);
     if (wxTheClipboard->Open()) {
-        wxString text = wxTextBuffer::Translate(stc2wx(st.Data(), st.Length()));
+        wxString text = evt.GetDragText();
         wxTheClipboard->SetData(new wxTextDataObject(text));
         wxTheClipboard->Close();
     }
diff --git a/src/stc/stc.cpp b/src/stc/stc.cpp
index 2d82a2c..683025c 100644
--- a/src/stc/stc.cpp
+++ b/src/stc/stc.cpp
@@ -134,6 +134,8 @@ wxDEFINE_EVENT( wxEVT_STC_INDICATOR_RELEASE, wxStyledTextEvent );
 wxDEFINE_EVENT( wxEVT_STC_AUTOCOMP_CANCELLED, wxStyledTextEvent );
 wxDEFINE_EVENT( wxEVT_STC_AUTOCOMP_CHAR_DELETED, wxStyledTextEvent );
 wxDEFINE_EVENT( wxEVT_STC_HOTSPOT_RELEASE_CLICK, wxStyledTextEvent );
+wxDEFINE_EVENT( wxEVT_STC_CLIPBOARD_COPY, wxStyledTextEvent );
+wxDEFINE_EVENT( wxEVT_STC_CLIPBOARD_PASTE, wxStyledTextEvent );
 
 
 
diff --git a/src/stc/stc.cpp.in b/src/stc/stc.cpp.in
index 900a2bc..a205b55 100644
--- a/src/stc/stc.cpp.in
+++ b/src/stc/stc.cpp.in
@@ -134,6 +134,8 @@ wxDEFINE_EVENT( wxEVT_STC_INDICATOR_RELEASE, wxStyledTextEvent );
 wxDEFINE_EVENT( wxEVT_STC_AUTOCOMP_CANCELLED, wxStyledTextEvent );
 wxDEFINE_EVENT( wxEVT_STC_AUTOCOMP_CHAR_DELETED, wxStyledTextEvent );
 wxDEFINE_EVENT( wxEVT_STC_HOTSPOT_RELEASE_CLICK, wxStyledTextEvent );
+wxDEFINE_EVENT( wxEVT_STC_CLIPBOARD_COPY, wxStyledTextEvent );
+wxDEFINE_EVENT( wxEVT_STC_CLIPBOARD_PASTE, wxStyledTextEvent );
 
 
 
diff --git a/src/stc/stc.h.in b/src/stc/stc.h.in
index b8279aa..eeffb2f 100644
--- a/src/stc/stc.h.in
+++ b/src/stc/stc.h.in
@@ -554,8 +554,8 @@ public:
     void SetToken(int val)                { m_token = val; }
     void SetAnnotationLinesAdded(int val) { m_annotationLinesAdded = val; }
     void SetUpdated(int val)              { m_updated = val; }
-#ifdef  STC_USE_DND
     void SetDragText(const wxString& val) { m_dragText = val; }
+#ifdef  STC_USE_DND
     void SetDragFlags(int flags)          { m_dragFlags = flags; }
     void SetDragResult(wxDragResult val)  { m_dragResult = val; }
 
@@ -591,8 +591,8 @@ public:
     int  GetAnnotationsLinesAdded() const { return m_annotationLinesAdded; }
     int  GetUpdated() const               { return m_updated; }
     
-#ifdef STC_USE_DND
     wxString GetDragText()           { return m_dragText; }
+#ifdef STC_USE_DND
     int GetDragFlags()               { return m_dragFlags; }
     wxDragResult GetDragResult()     { return m_dragResult; }
 
@@ -635,9 +635,8 @@ private:
     int m_annotationLinesAdded; // wxEVT_STC_MODIFIED with SC_MOD_CHANGEANNOTATION 
     int m_updated;              // wxEVT_STC_UPDATEUI
 
-
+    wxString m_dragText;        // wxEVT_STC_START_DRAG, wxEVT_STC_DO_DROP, wxEVT_STC_CLIPBOARD_COPY, wxEVT_STC_CLIPBOARD_PASTE
 #if wxUSE_DRAG_AND_DROP
-    wxString m_dragText;        // wxEVT_STC_START_DRAG, wxEVT_STC_DO_DROP
     int      m_dragFlags;       // wxEVT_STC_START_DRAG
     wxDragResult m_dragResult;  // wxEVT_STC_DRAG_OVER,wxEVT_STC_DO_DROP
 #endif
@@ -678,6 +677,8 @@ wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_INDICATOR_RELEASE, wxStyled
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_AUTOCOMP_CANCELLED, wxStyledTextEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_AUTOCOMP_CHAR_DELETED, wxStyledTextEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_HOTSPOT_RELEASE_CLICK, wxStyledTextEvent );
+wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_CLIPBOARD_COPY, wxStyledTextEvent );
+wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_CLIPBOARD_PASTE, wxStyledTextEvent );
 #else
     enum {
         wxEVT_STC_CHANGE,
@@ -710,7 +711,9 @@ wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_HOTSPOT_RELEASE_CLICK, wxSt
         wxEVT_STC_INDICATOR_RELEASE,
         wxEVT_STC_AUTOCOMP_CANCELLED,
         wxEVT_STC_AUTOCOMP_CHAR_DELETED,
-        wxEVT_STC_HOTSPOT_RELEASE_CLICK
+        wxEVT_STC_HOTSPOT_RELEASE_CLICK,
+        wxEVT_STC_CLIPBOARD_COPY,
+        wxEVT_STC_CLIPBOARD_PASTE
     };
 #endif
 
@@ -753,6 +756,8 @@ typedef void (wxEvtHandler::*wxStyledTextEventFunction)(wxStyledTextEvent&);
 #define EVT_STC_AUTOCOMP_CANCELLED(id, fn)    wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_AUTOCOMP_CANCELLED,    id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
 #define EVT_STC_AUTOCOMP_CHAR_DELETED(id, fn) wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_AUTOCOMP_CHAR_DELETED, id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
 #define EVT_STC_HOTSPOT_RELEASE_CLICK(id, fn) wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_HOTSPOT_RELEASE_CLICK, id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
+#define EVT_STC_CLIPBOARD_COPY(id, fn)        wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_CLIPBOARD_COPY,        id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
+#define EVT_STC_CLIPBOARD_PASTE(id, fn)       wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_CLIPBOARD_PASTE,       id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
 
 #endif
 
diff --git a/src/stc/stc.interface.h.in b/src/stc/stc.interface.h.in
index acd3015..ed58e57 100644
--- a/src/stc/stc.interface.h.in
+++ b/src/stc/stc.interface.h.in
@@ -108,6 +108,10 @@
         TOWRITE
     @event{EVT_STC_HOTSPOT_RELEASE_CLICK(id, fn)}
         TOWRITE
+    @event{EVT_STC_CLIPBOARD_COPY(id, fn)}
+        TOWRITE
+    @event{EVT_STC_CLIPBOARD_PASTE(id, fn)}
+        TOWRITE
     @endEventTable
 
     @library{wxstc}
@@ -509,3 +513,5 @@ const wxEventType wxEVT_STC_INDICATOR_RELEASE;
 const wxEventType wxEVT_STC_AUTOCOMP_CANCELLED;
 const wxEventType wxEVT_STC_AUTOCOMP_CHAR_DELETED;
 const wxEventType wxEVT_STC_HOTSPOT_RELEASE_CLICK;
+const wxEventType wxEVT_STC_CLIPBOARD_COPY;
+const wxEventType wxEVT_STC_CLIPBOARD_PASTE;
-- 
1.7.5.4

