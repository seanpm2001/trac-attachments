From 6e36fc6aff5078a7db0a2c6d9c144ecb0a278f52 Mon Sep 17 00:00:00 2001
From: Christian Walther <walther@indel.ch>
Date: Mon, 14 Apr 2014 09:40:40 +0200
Subject: [PATCH] Add wxEVT_STC_CLIPBOARD_{COPY|PASTE} events.

In analogy to wxEVT_STC_START_DRAG and wxEVT_STC_DO_DROP, these allow the copied or pasted text to be transformed between the clipboard and the wxStyledTextControl. In addition, the involved text for all these events can now be accessed using Get/SetString() (Get/SetText() and Get/SetDragText() remain available as aliases for backwards compatibility).
---
 include/wx/stc/stc.h       |   23 +++++++++++++++--------
 interface/wx/stc/stc.h     |   14 ++++++++++++--
 src/stc/ScintillaWX.cpp    |   26 ++++++++++++++++++++------
 src/stc/stc.cpp            |    6 +++---
 src/stc/stc.cpp.in         |    6 +++---
 src/stc/stc.h.in           |   23 +++++++++++++++--------
 src/stc/stc.interface.h.in |   14 ++++++++++++--
 7 files changed, 80 insertions(+), 32 deletions(-)

diff --git a/include/wx/stc/stc.h b/include/wx/stc/stc.h
index 3209a69..0848a54 100644
--- a/include/wx/stc/stc.h
+++ b/include/wx/stc/stc.h
@@ -5044,7 +5044,8 @@ public:
     void SetKey(int k)                    { m_key = k; }
     void SetModifiers(int m)              { m_modifiers = m; }
     void SetModificationType(int t)       { m_modificationType = t; }
-    void SetText(const wxString& t)       { m_text = t; }
+    // Kept for backwards compatibility, use SetString().
+    void SetText(const wxString& t)       { SetString(t); }
     void SetLength(int len)               { m_length = len; }
     void SetLinesAdded(int num)           { m_linesAdded = num; }
     void SetLine(int val)                 { m_line = val; }
@@ -5060,8 +5061,9 @@ public:
     void SetToken(int val)                { m_token = val; }
     void SetAnnotationLinesAdded(int val) { m_annotationLinesAdded = val; }
     void SetUpdated(int val)              { m_updated = val; }
+    // Kept for backwards compatibility, use SetString().
+    void SetDragText(const wxString& val) { SetString(val); }
 #ifdef  STC_USE_DND
-    void SetDragText(const wxString& val) { m_dragText = val; }
     void SetDragFlags(int flags)          { m_dragFlags = flags; }
     void SetDragResult(wxDragResult val)  { m_dragResult = val; }
 
@@ -5080,7 +5082,8 @@ public:
     int  GetKey()  const             { return m_key; }
     int  GetModifiers() const        { return m_modifiers; }
     int  GetModificationType() const { return m_modificationType; }
-    wxString GetText() const         { return m_text; }
+    // Kept for backwards compatibility, use GetString().
+    wxString GetText() const         { return GetString(); }
     int  GetLength() const           { return m_length; }
     int  GetLinesAdded() const       { return m_linesAdded; }
     int  GetLine() const             { return m_line; }
@@ -5097,8 +5100,9 @@ public:
     int  GetAnnotationsLinesAdded() const { return m_annotationLinesAdded; }
     int  GetUpdated() const               { return m_updated; }
     
+    // Kept for backwards compatibility, use GetString().
+    wxString GetDragText()           { return GetString(); }
 #ifdef STC_USE_DND
-    wxString GetDragText()           { return m_dragText; }
     int GetDragFlags()               { return m_dragFlags; }
     wxDragResult GetDragResult()     { return m_dragResult; }
 
@@ -5120,7 +5124,6 @@ private:
     int  m_modifiers;
 
     int  m_modificationType;    // wxEVT_STC_MODIFIED
-    wxString m_text;
     int  m_length;
     int  m_linesAdded;
     int  m_line;
@@ -5141,9 +5144,7 @@ private:
     int m_annotationLinesAdded; // wxEVT_STC_MODIFIED with SC_MOD_CHANGEANNOTATION 
     int m_updated;              // wxEVT_STC_UPDATEUI
 
-
 #if wxUSE_DRAG_AND_DROP
-    wxString m_dragText;        // wxEVT_STC_START_DRAG, wxEVT_STC_DO_DROP
     int      m_dragFlags;       // wxEVT_STC_START_DRAG
     wxDragResult m_dragResult;  // wxEVT_STC_DRAG_OVER,wxEVT_STC_DO_DROP
 #endif
@@ -5184,6 +5185,8 @@ wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_INDICATOR_RELEASE, wxStyled
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_AUTOCOMP_CANCELLED, wxStyledTextEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_AUTOCOMP_CHAR_DELETED, wxStyledTextEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_HOTSPOT_RELEASE_CLICK, wxStyledTextEvent );
+wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_CLIPBOARD_COPY, wxStyledTextEvent );
+wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_CLIPBOARD_PASTE, wxStyledTextEvent );
 #else
     enum {
         wxEVT_STC_CHANGE,
@@ -5216,7 +5219,9 @@ wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_HOTSPOT_RELEASE_CLICK, wxSt
         wxEVT_STC_INDICATOR_RELEASE,
         wxEVT_STC_AUTOCOMP_CANCELLED,
         wxEVT_STC_AUTOCOMP_CHAR_DELETED,
-        wxEVT_STC_HOTSPOT_RELEASE_CLICK
+        wxEVT_STC_HOTSPOT_RELEASE_CLICK,
+        wxEVT_STC_CLIPBOARD_COPY,
+        wxEVT_STC_CLIPBOARD_PASTE
     };
 #endif
 
@@ -5259,6 +5264,8 @@ typedef void (wxEvtHandler::*wxStyledTextEventFunction)(wxStyledTextEvent&);
 #define EVT_STC_AUTOCOMP_CANCELLED(id, fn)    wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_AUTOCOMP_CANCELLED,    id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
 #define EVT_STC_AUTOCOMP_CHAR_DELETED(id, fn) wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_AUTOCOMP_CHAR_DELETED, id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
 #define EVT_STC_HOTSPOT_RELEASE_CLICK(id, fn) wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_HOTSPOT_RELEASE_CLICK, id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
+#define EVT_STC_CLIPBOARD_COPY(id, fn)        wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_CLIPBOARD_COPY,        id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
+#define EVT_STC_CLIPBOARD_PASTE(id, fn)       wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_CLIPBOARD_PASTE,       id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
 
 #endif
 
diff --git a/interface/wx/stc/stc.h b/interface/wx/stc/stc.h
index 0a3fc95..ed14753 100644
--- a/interface/wx/stc/stc.h
+++ b/interface/wx/stc/stc.h
@@ -2618,11 +2618,11 @@
     @event{EVT_STC_DWELLEND(id, fn)}
         TOWRITE
     @event{EVT_STC_START_DRAG(id, fn)}
-        TOWRITE
+        Process a @c wxEVT_STC_START_DRAG event, generated when text is being dragged from the control. Details of the drag may be altered by changing the respective fields of the event; in particular, set an empty string to prohibit the drag entirely. Valid event functions: @link wxStyledTextEvent::GetDragFlags GetDragFlags@endlink, @link wxStyledTextEvent::SetDragFlags SetDragFlags@endlink, @link wxStyledTextEvent::GetPosition GetPosition@endlink, @link wxStyledTextEvent::GetString GetString@endlink, @link wxStyledTextEvent::SetString SetString@endlink.
     @event{EVT_STC_DRAG_OVER(id, fn)}
         TOWRITE
     @event{EVT_STC_DO_DROP(id, fn)}
-        TOWRITE
+        Process a @c wxEVT_STC_DO_DROP event, generated when text is being dropped into the control. Details of the drag may be altered by changing the respective fields of the event. Valid event functions: @link wxStyledTextEvent::GetDragResult GetDragResult@endlink, @link wxStyledTextEvent::SetDragResult SetDragResult@endlink, @link wxStyledTextEvent::GetPosition GetPosition@endlink, @link wxStyledTextEvent::SetPosition SetPosition@endlink, @link wxStyledTextEvent::GetString GetString@endlink, @link wxStyledTextEvent::SetString SetString@endlink, @link wxStyledTextEvent::GetX GetX@endlink, @link wxStyledTextEvent::GetY GetY@endlink.
     @event{EVT_STC_ZOOM(id, fn)}
         TOWRITE
     @event{EVT_STC_HOTSPOT_CLICK(id, fn)}
@@ -2643,6 +2643,14 @@
         TOWRITE
     @event{EVT_STC_HOTSPOT_RELEASE_CLICK(id, fn)}
         TOWRITE
+    @event{EVT_STC_CLIPBOARD_COPY(id, fn)}
+        Process a @c wxEVT_STC_CLIPBOARD_COPY event, generated when text is being cut or copied to the clipboard. Use wxStyledTextEvent::SetString() to modify the text that will be placed on the clipboard. Valid event functions: @link wxStyledTextEvent::GetString GetString@endlink, @link wxStyledTextEvent::SetString SetString@endlink.
+        @since 3.1.0
+
+    @event{EVT_STC_CLIPBOARD_PASTE(id, fn)}
+        Process a @c wxEVT_STC_CLIPBOARD_PASTE event, generated when text is being pasted from the clipboard. Use wxStyledTextEvent::SetString() to modify the text that will be inserted into the control. Valid event functions: @link wxStyledTextEvent::GetPosition GetPosition@endlink, @link wxStyledTextEvent::GetString GetString@endlink, @link wxStyledTextEvent::SetString SetString@endlink.
+        @since 3.1.0
+
     @endEventTable
 
     @library{wxstc}
@@ -6231,3 +6239,5 @@ const wxEventType wxEVT_STC_INDICATOR_RELEASE;
 const wxEventType wxEVT_STC_AUTOCOMP_CANCELLED;
 const wxEventType wxEVT_STC_AUTOCOMP_CHAR_DELETED;
 const wxEventType wxEVT_STC_HOTSPOT_RELEASE_CLICK;
+const wxEventType wxEVT_STC_CLIPBOARD_COPY;
+const wxEventType wxEVT_STC_CLIPBOARD_PASTE;
diff --git a/src/stc/ScintillaWX.cpp b/src/stc/ScintillaWX.cpp
index fd57208..c80c774 100644
--- a/src/stc/ScintillaWX.cpp
+++ b/src/stc/ScintillaWX.cpp
@@ -299,12 +299,12 @@ void ScintillaWX::StartDrag() {
     // Send an event to allow the drag text to be changed
     wxStyledTextEvent evt(wxEVT_STC_START_DRAG, stc->GetId());
     evt.SetEventObject(stc);
-    evt.SetDragText(dragText);
+    evt.SetString(dragText);
     evt.SetDragFlags(wxDrag_DefaultMove);
     evt.SetPosition(wxMin(stc->GetSelectionStart(),
                           stc->GetSelectionEnd()));
     stc->GetEventHandler()->ProcessEvent(evt);
-    dragText = evt.GetDragText();
+    dragText = evt.GetString();
 
     if ( !dragText.empty() ) {
         wxDropSource        source(stc);
@@ -516,7 +516,15 @@ void ScintillaWX::Paste() {
     if (gotData) {
         wxString   text = wxTextBuffer::Translate(data.GetText(),
                                                   wxConvertEOLMode(pdoc->eolMode));
-        wxWX2MBbuf buf = (wxWX2MBbuf)wx2stc(text);
+
+        // Send an event to allow the pasted text to be changed
+        wxStyledTextEvent evt(wxEVT_STC_CLIPBOARD_PASTE, stc->GetId());
+        evt.SetEventObject(stc);
+        evt.SetPosition(sel.MainCaret());
+        evt.SetString(text);
+        stc->GetEventHandler()->ProcessEvent(evt);
+
+        wxWX2MBbuf buf = (wxWX2MBbuf)wx2stc(evt.GetString());
 
 #if wxUSE_UNICODE
         // free up the old character buffer in case the text is real big
@@ -553,9 +561,15 @@ void ScintillaWX::CopyToClipboard(const SelectionText& st) {
     if ( !st.LengthWithTerminator() )
         return;
 
+    // Send an event to allow the copied text to be changed
+    wxStyledTextEvent evt(wxEVT_STC_CLIPBOARD_COPY, stc->GetId());
+    evt.SetEventObject(stc);
+    evt.SetString(wxTextBuffer::Translate(stc2wx(st.Data(), st.Length())));
+    stc->GetEventHandler()->ProcessEvent(evt);
+
     wxTheClipboard->UsePrimarySelection(false);
     if (wxTheClipboard->Open()) {
-        wxString text = wxTextBuffer::Translate(stc2wx(st.Data(), st.Length()));
+        wxString text = evt.GetString();
 
 #ifdef wxHAVE_STC_RECT_FORMAT
         if (st.rectangular)
@@ -1124,13 +1138,13 @@ bool ScintillaWX::DoDropText(long x, long y, const wxString& data) {
     evt.SetX(x);
     evt.SetY(y);
     evt.SetPosition(PositionFromLocation(Point(x,y)));
-    evt.SetDragText(text);
+    evt.SetString(text);
     stc->GetEventHandler()->ProcessEvent(evt);
 
     dragResult = evt.GetDragResult();
     if (dragResult == wxDragMove || dragResult == wxDragCopy) {
         DropAt(SelectionPosition(evt.GetPosition()),
-               wx2stc(evt.GetDragText()),
+               wx2stc(evt.GetString()),
                dragResult == wxDragMove,
                false); // TODO: rectangular?
         return true;
diff --git a/src/stc/stc.cpp b/src/stc/stc.cpp
index 2d82a2c..f54566f 100644
--- a/src/stc/stc.cpp
+++ b/src/stc/stc.cpp
@@ -134,6 +134,8 @@ wxDEFINE_EVENT( wxEVT_STC_INDICATOR_RELEASE, wxStyledTextEvent );
 wxDEFINE_EVENT( wxEVT_STC_AUTOCOMP_CANCELLED, wxStyledTextEvent );
 wxDEFINE_EVENT( wxEVT_STC_AUTOCOMP_CHAR_DELETED, wxStyledTextEvent );
 wxDEFINE_EVENT( wxEVT_STC_HOTSPOT_RELEASE_CLICK, wxStyledTextEvent );
+wxDEFINE_EVENT( wxEVT_STC_CLIPBOARD_COPY, wxStyledTextEvent );
+wxDEFINE_EVENT( wxEVT_STC_CLIPBOARD_PASTE, wxStyledTextEvent );
 
 
 
@@ -5082,7 +5084,7 @@ static void SetEventText(wxStyledTextEvent& evt, const char* text,
                          size_t length) {
     if(!text) return;
 
-    evt.SetText(stc2wx(text, length));
+    evt.SetString(stc2wx(text, length));
 }
 
 
@@ -5284,7 +5286,6 @@ wxStyledTextEvent::wxStyledTextEvent(const wxStyledTextEvent& event):
     m_key =           event.m_key;
     m_modifiers =     event.m_modifiers;
     m_modificationType = event.m_modificationType;
-    m_text =          event.m_text;
     m_length =        event.m_length;
     m_linesAdded =    event.m_linesAdded;
     m_line =          event.m_line;
@@ -5306,7 +5307,6 @@ wxStyledTextEvent::wxStyledTextEvent(const wxStyledTextEvent& event):
     m_updated =      event.m_updated;
 
 #if wxUSE_DRAG_AND_DROP
-    m_dragText =     event.m_dragText;
     m_dragFlags =    event.m_dragFlags;
     m_dragResult =   event.m_dragResult;
 #endif
diff --git a/src/stc/stc.cpp.in b/src/stc/stc.cpp.in
index 900a2bc..621d8e6 100644
--- a/src/stc/stc.cpp.in
+++ b/src/stc/stc.cpp.in
@@ -134,6 +134,8 @@ wxDEFINE_EVENT( wxEVT_STC_INDICATOR_RELEASE, wxStyledTextEvent );
 wxDEFINE_EVENT( wxEVT_STC_AUTOCOMP_CANCELLED, wxStyledTextEvent );
 wxDEFINE_EVENT( wxEVT_STC_AUTOCOMP_CHAR_DELETED, wxStyledTextEvent );
 wxDEFINE_EVENT( wxEVT_STC_HOTSPOT_RELEASE_CLICK, wxStyledTextEvent );
+wxDEFINE_EVENT( wxEVT_STC_CLIPBOARD_COPY, wxStyledTextEvent );
+wxDEFINE_EVENT( wxEVT_STC_CLIPBOARD_PASTE, wxStyledTextEvent );
 
 
 
@@ -970,7 +972,7 @@ static void SetEventText(wxStyledTextEvent& evt, const char* text,
                          size_t length) {
     if(!text) return;
 
-    evt.SetText(stc2wx(text, length));
+    evt.SetString(stc2wx(text, length));
 }
 
 
@@ -1172,7 +1174,6 @@ wxStyledTextEvent::wxStyledTextEvent(const wxStyledTextEvent& event):
     m_key =           event.m_key;
     m_modifiers =     event.m_modifiers;
     m_modificationType = event.m_modificationType;
-    m_text =          event.m_text;
     m_length =        event.m_length;
     m_linesAdded =    event.m_linesAdded;
     m_line =          event.m_line;
@@ -1194,7 +1195,6 @@ wxStyledTextEvent::wxStyledTextEvent(const wxStyledTextEvent& event):
     m_updated =      event.m_updated;
 
 #if wxUSE_DRAG_AND_DROP
-    m_dragText =     event.m_dragText;
     m_dragFlags =    event.m_dragFlags;
     m_dragResult =   event.m_dragResult;
 #endif
diff --git a/src/stc/stc.h.in b/src/stc/stc.h.in
index b8279aa..dbf952d 100644
--- a/src/stc/stc.h.in
+++ b/src/stc/stc.h.in
@@ -538,7 +538,8 @@ public:
     void SetKey(int k)                    { m_key = k; }
     void SetModifiers(int m)              { m_modifiers = m; }
     void SetModificationType(int t)       { m_modificationType = t; }
-    void SetText(const wxString& t)       { m_text = t; }
+    // Kept for backwards compatibility, use SetString().
+    void SetText(const wxString& t)       { SetString(t); }
     void SetLength(int len)               { m_length = len; }
     void SetLinesAdded(int num)           { m_linesAdded = num; }
     void SetLine(int val)                 { m_line = val; }
@@ -554,8 +555,9 @@ public:
     void SetToken(int val)                { m_token = val; }
     void SetAnnotationLinesAdded(int val) { m_annotationLinesAdded = val; }
     void SetUpdated(int val)              { m_updated = val; }
+    // Kept for backwards compatibility, use SetString().
+    void SetDragText(const wxString& val) { SetString(val); }
 #ifdef  STC_USE_DND
-    void SetDragText(const wxString& val) { m_dragText = val; }
     void SetDragFlags(int flags)          { m_dragFlags = flags; }
     void SetDragResult(wxDragResult val)  { m_dragResult = val; }
 
@@ -574,7 +576,8 @@ public:
     int  GetKey()  const             { return m_key; }
     int  GetModifiers() const        { return m_modifiers; }
     int  GetModificationType() const { return m_modificationType; }
-    wxString GetText() const         { return m_text; }
+    // Kept for backwards compatibility, use GetString().
+    wxString GetText() const         { return GetString(); }
     int  GetLength() const           { return m_length; }
     int  GetLinesAdded() const       { return m_linesAdded; }
     int  GetLine() const             { return m_line; }
@@ -591,8 +594,9 @@ public:
     int  GetAnnotationsLinesAdded() const { return m_annotationLinesAdded; }
     int  GetUpdated() const               { return m_updated; }
     
+    // Kept for backwards compatibility, use GetString().
+    wxString GetDragText()           { return GetString(); }
 #ifdef STC_USE_DND
-    wxString GetDragText()           { return m_dragText; }
     int GetDragFlags()               { return m_dragFlags; }
     wxDragResult GetDragResult()     { return m_dragResult; }
 
@@ -614,7 +618,6 @@ private:
     int  m_modifiers;
 
     int  m_modificationType;    // wxEVT_STC_MODIFIED
-    wxString m_text;
     int  m_length;
     int  m_linesAdded;
     int  m_line;
@@ -635,9 +638,7 @@ private:
     int m_annotationLinesAdded; // wxEVT_STC_MODIFIED with SC_MOD_CHANGEANNOTATION 
     int m_updated;              // wxEVT_STC_UPDATEUI
 
-
 #if wxUSE_DRAG_AND_DROP
-    wxString m_dragText;        // wxEVT_STC_START_DRAG, wxEVT_STC_DO_DROP
     int      m_dragFlags;       // wxEVT_STC_START_DRAG
     wxDragResult m_dragResult;  // wxEVT_STC_DRAG_OVER,wxEVT_STC_DO_DROP
 #endif
@@ -678,6 +679,8 @@ wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_INDICATOR_RELEASE, wxStyled
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_AUTOCOMP_CANCELLED, wxStyledTextEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_AUTOCOMP_CHAR_DELETED, wxStyledTextEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_HOTSPOT_RELEASE_CLICK, wxStyledTextEvent );
+wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_CLIPBOARD_COPY, wxStyledTextEvent );
+wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_CLIPBOARD_PASTE, wxStyledTextEvent );
 #else
     enum {
         wxEVT_STC_CHANGE,
@@ -710,7 +713,9 @@ wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_STC, wxEVT_STC_HOTSPOT_RELEASE_CLICK, wxSt
         wxEVT_STC_INDICATOR_RELEASE,
         wxEVT_STC_AUTOCOMP_CANCELLED,
         wxEVT_STC_AUTOCOMP_CHAR_DELETED,
-        wxEVT_STC_HOTSPOT_RELEASE_CLICK
+        wxEVT_STC_HOTSPOT_RELEASE_CLICK,
+        wxEVT_STC_CLIPBOARD_COPY,
+        wxEVT_STC_CLIPBOARD_PASTE
     };
 #endif
 
@@ -753,6 +758,8 @@ typedef void (wxEvtHandler::*wxStyledTextEventFunction)(wxStyledTextEvent&);
 #define EVT_STC_AUTOCOMP_CANCELLED(id, fn)    wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_AUTOCOMP_CANCELLED,    id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
 #define EVT_STC_AUTOCOMP_CHAR_DELETED(id, fn) wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_AUTOCOMP_CHAR_DELETED, id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
 #define EVT_STC_HOTSPOT_RELEASE_CLICK(id, fn) wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_HOTSPOT_RELEASE_CLICK, id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
+#define EVT_STC_CLIPBOARD_COPY(id, fn)        wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_CLIPBOARD_COPY,        id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
+#define EVT_STC_CLIPBOARD_PASTE(id, fn)       wxDECLARE_EVENT_TABLE_ENTRY( wxEVT_STC_CLIPBOARD_PASTE,       id, wxID_ANY, wxStyledTextEventHandler( fn ), (wxObject *) NULL ),
 
 #endif
 
diff --git a/src/stc/stc.interface.h.in b/src/stc/stc.interface.h.in
index acd3015..2832716 100644
--- a/src/stc/stc.interface.h.in
+++ b/src/stc/stc.interface.h.in
@@ -83,11 +83,11 @@
     @event{EVT_STC_DWELLEND(id, fn)}
         TOWRITE
     @event{EVT_STC_START_DRAG(id, fn)}
-        TOWRITE
+        Process a @c wxEVT_STC_START_DRAG event, generated when text is being dragged from the control. Details of the drag may be altered by changing the respective fields of the event; in particular, set an empty string to prohibit the drag entirely. Valid event functions: @link wxStyledTextEvent::GetDragFlags GetDragFlags@endlink, @link wxStyledTextEvent::SetDragFlags SetDragFlags@endlink, @link wxStyledTextEvent::GetPosition GetPosition@endlink, @link wxStyledTextEvent::GetString GetString@endlink, @link wxStyledTextEvent::SetString SetString@endlink.
     @event{EVT_STC_DRAG_OVER(id, fn)}
         TOWRITE
     @event{EVT_STC_DO_DROP(id, fn)}
-        TOWRITE
+        Process a @c wxEVT_STC_DO_DROP event, generated when text is being dropped into the control. Details of the drag may be altered by changing the respective fields of the event. Valid event functions: @link wxStyledTextEvent::GetDragResult GetDragResult@endlink, @link wxStyledTextEvent::SetDragResult SetDragResult@endlink, @link wxStyledTextEvent::GetPosition GetPosition@endlink, @link wxStyledTextEvent::SetPosition SetPosition@endlink, @link wxStyledTextEvent::GetString GetString@endlink, @link wxStyledTextEvent::SetString SetString@endlink, @link wxStyledTextEvent::GetX GetX@endlink, @link wxStyledTextEvent::GetY GetY@endlink.
     @event{EVT_STC_ZOOM(id, fn)}
         TOWRITE
     @event{EVT_STC_HOTSPOT_CLICK(id, fn)}
@@ -108,6 +108,14 @@
         TOWRITE
     @event{EVT_STC_HOTSPOT_RELEASE_CLICK(id, fn)}
         TOWRITE
+    @event{EVT_STC_CLIPBOARD_COPY(id, fn)}
+        Process a @c wxEVT_STC_CLIPBOARD_COPY event, generated when text is being cut or copied to the clipboard. Use wxStyledTextEvent::SetString() to modify the text that will be placed on the clipboard. Valid event functions: @link wxStyledTextEvent::GetString GetString@endlink, @link wxStyledTextEvent::SetString SetString@endlink.
+        @since 3.1.0
+
+    @event{EVT_STC_CLIPBOARD_PASTE(id, fn)}
+        Process a @c wxEVT_STC_CLIPBOARD_PASTE event, generated when text is being pasted from the clipboard. Use wxStyledTextEvent::SetString() to modify the text that will be inserted into the control. Valid event functions: @link wxStyledTextEvent::GetPosition GetPosition@endlink, @link wxStyledTextEvent::GetString GetString@endlink, @link wxStyledTextEvent::SetString SetString@endlink.
+        @since 3.1.0
+
     @endEventTable
 
     @library{wxstc}
@@ -509,3 +517,5 @@ const wxEventType wxEVT_STC_INDICATOR_RELEASE;
 const wxEventType wxEVT_STC_AUTOCOMP_CANCELLED;
 const wxEventType wxEVT_STC_AUTOCOMP_CHAR_DELETED;
 const wxEventType wxEVT_STC_HOTSPOT_RELEASE_CLICK;
+const wxEventType wxEVT_STC_CLIPBOARD_COPY;
+const wxEventType wxEVT_STC_CLIPBOARD_PASTE;
-- 
1.7.5.4

