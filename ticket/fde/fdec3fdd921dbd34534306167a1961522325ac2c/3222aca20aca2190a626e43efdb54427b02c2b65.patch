diff -ru2 wxWindows.orig/include/wx/prntbase.h wxWindows/include/wx/prntbase.h
--- wxWindows.orig/include/wx/prntbase.h	Sun Jun  3 04:58:56 2001
+++ wxWindows/include/wx/prntbase.h	Thu Aug 15 14:25:14 2002
@@ -224,6 +224,10 @@
 #define wxPREVIEW_NEXT         4
 #define wxPREVIEW_ZOOM         8
+#define wxPREVIEW_FIRST       16
+#define wxPREVIEW_LAST        32
+#define wxPREVIEW_GOTO        64
 
-#define wxPREVIEW_DEFAULT      wxPREVIEW_PREVIOUS|wxPREVIEW_NEXT|wxPREVIEW_ZOOM
+#define wxPREVIEW_DEFAULT  wxPREVIEW_PREVIOUS|wxPREVIEW_NEXT|wxPREVIEW_ZOOM\
+                          |wxPREVIEW_FIRST|wxPREVIEW_GOTO|wxPREVIEW_LAST
 
 // Ids for controls
@@ -233,4 +237,7 @@
 #define wxID_PREVIEW_PRINT      4
 #define wxID_PREVIEW_ZOOM       5
+#define wxID_PREVIEW_FIRST      6
+#define wxID_PREVIEW_LAST       7
+#define wxID_PREVIEW_GOTO       8
 
 class WXDLLEXPORT wxPreviewControlBar: public wxPanel
@@ -258,6 +265,12 @@
     void OnNext();
     void OnPrevious();
+    void OnFirst();
+    void OnLast();
+    void OnGoto();
     void OnNextButton(wxCommandEvent & WXUNUSED(event)) { OnNext(); }
     void OnPreviousButton(wxCommandEvent & WXUNUSED(event)) { OnPrevious(); }
+    void OnFirstButton(wxCommandEvent & WXUNUSED(event)) { OnFirst(); }
+    void OnLastButton(wxCommandEvent & WXUNUSED(event)) { OnLast(); }
+    void OnGotoButton(wxCommandEvent & WXUNUSED(event)) { OnGoto(); }
     void OnChar(wxKeyEvent &event);
     void OnZoom(wxCommandEvent& event);
@@ -271,4 +284,7 @@
     wxButton*             m_printButton;
     wxChoice*             m_zoomControl;
+    wxButton*             m_firstPageButton;
+    wxButton*             m_lastPageButton;
+    wxButton*             m_gotoPageButton;
     long                  m_buttonFlags;
 
diff -ru2 wxWindows.orig/src/common/prntbase.cpp wxWindows/src/common/prntbase.cpp
--- wxWindows.orig/src/common/prntbase.cpp	Wed Mar  6 18:50:52 2002
+++ wxWindows/src/common/prntbase.cpp	Fri Aug 16 16:15:31 2002
@@ -48,5 +48,5 @@
 
 #include <wx/sizer.h>
-									     
+                                         
 #ifdef __WXMSW__
     #include "wx/msw/private.h"
@@ -235,4 +235,7 @@
     EVT_BUTTON(wxID_PREVIEW_PREVIOUS, wxPreviewControlBar::OnPreviousButton)
     EVT_BUTTON(wxID_PREVIEW_NEXT,     wxPreviewControlBar::OnNextButton)
+    EVT_BUTTON(wxID_PREVIEW_FIRST,    wxPreviewControlBar::OnFirstButton)
+    EVT_BUTTON(wxID_PREVIEW_LAST,     wxPreviewControlBar::OnLastButton)
+    EVT_BUTTON(wxID_PREVIEW_GOTO,     wxPreviewControlBar::OnGotoButton)
     EVT_CHAR(wxPreviewControlBar::OnChar)
     EVT_CHOICE(wxID_PREVIEW_ZOOM,     wxPreviewControlBar::OnZoom)
@@ -289,4 +292,10 @@
    case WXK_PRIOR:
       OnPrevious(); break;
+   case WXK_HOME:
+      OnFirst(); break;
+   case WXK_END:
+      OnLast(); break;
+   case WXK_TAB:
+      OnGoto(); break;
    default:
       event.Skip();
@@ -324,4 +333,58 @@
 }
 
+void wxPreviewControlBar::OnFirst(void)
+{
+    wxPrintPreviewBase *preview = GetPrintPreview();
+    if (preview)
+    {
+        int currentPage = preview->GetMinPage();
+        if (preview->GetPrintout()->HasPage(currentPage))
+        {
+            preview->SetCurrentPage(currentPage);
+        }
+    }
+}
+
+void wxPreviewControlBar::OnLast(void)
+{
+    wxPrintPreviewBase *preview = GetPrintPreview();
+    if (preview)
+    {
+        int currentPage = preview->GetMaxPage();
+        if (preview->GetPrintout()->HasPage(currentPage))
+        {
+            preview->SetCurrentPage(currentPage);
+        }
+    }
+}
+
+void wxPreviewControlBar::OnGoto(void)
+{
+    wxPrintPreviewBase *preview = GetPrintPreview();
+    if (preview)
+    {
+        long currentPage;
+
+        if (preview->GetMinPage() > 0)
+        {
+            wxString strPrompt;
+            wxString strPage;
+
+            strPrompt.Printf( _("%d...%d"),
+                preview->GetMinPage(), preview->GetMaxPage());
+            strPage.Printf( _("%d"), preview->GetCurrentPage() );
+
+            strPage =
+                wxGetTextFromUser( strPrompt, _("Goto Page"), strPage);
+
+            if ( strPage.ToLong( &currentPage ) )
+                if (preview->GetPrintout()->HasPage(currentPage))
+                {
+                    preview->SetCurrentPage(currentPage);
+                }
+        }
+    }
+}
+
 void wxPreviewControlBar::OnZoom(wxCommandEvent& WXUNUSED(event))
 {
@@ -346,5 +409,6 @@
     */
 
-    int buttonWidth = 65;
+    int buttonWidth = 60;
+    int buttonNavigation = 30;
 #ifdef __WXGTK__
     int buttonHeight = -1;
@@ -374,9 +438,16 @@
     }
 
+    if (m_buttonFlags & wxPREVIEW_FIRST)
+    {
+        m_firstPageButton = new wxButton(this, wxID_PREVIEW_FIRST, wxT("|<<"), wxPoint(x, y),
+            wxSize(buttonNavigation, buttonHeight));
+        x += gap + buttonNavigation;
+    }
+
     if (m_buttonFlags & wxPREVIEW_PREVIOUS)
     {
         m_previousPageButton = new wxButton(this, wxID_PREVIEW_PREVIOUS, wxT("<<"), wxPoint(x, y),
-            wxSize(buttonWidth, buttonHeight));
-        x += gap + buttonWidth;
+            wxSize(buttonNavigation, buttonHeight));
+        x += gap + buttonNavigation;
     }
 
@@ -384,5 +455,19 @@
     {
         m_nextPageButton = new wxButton(this, wxID_PREVIEW_NEXT, wxT(">>"),
-            wxPoint(x, y), wxSize(buttonWidth, buttonHeight));
+            wxPoint(x, y), wxSize(buttonNavigation, buttonHeight));
+        x += gap + buttonNavigation;
+    }
+
+    if (m_buttonFlags & wxPREVIEW_LAST)
+    {
+        m_lastPageButton = new wxButton(this, wxID_PREVIEW_LAST, wxT(">>|"), wxPoint(x, y),
+            wxSize(buttonNavigation, buttonHeight));
+        x += gap + buttonNavigation;
+    }
+
+    if (m_buttonFlags & wxPREVIEW_GOTO)
+    {
+        m_gotoPageButton = new wxButton(this, wxID_PREVIEW_GOTO, wxT("Goto..."), wxPoint(x, y),
+            wxSize(buttonWidth, buttonHeight));
         x += gap + buttonWidth;
     }
@@ -619,5 +704,5 @@
     {
         if (!RenderPage(pageNum))
-        	return FALSE;
+            return FALSE;
         m_previewCanvas->Refresh();
     }
@@ -631,5 +716,5 @@
     if (!m_previewBitmap)
         if (!RenderPage(m_currentPage))
-        	return FALSE;
+            return FALSE;
 
     if (!m_previewBitmap)

 	  	 
