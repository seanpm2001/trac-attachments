Index: samples/minimal/minimal.cpp
===================================================================
--- samples/minimal/minimal.cpp	(revision 78518)
+++ samples/minimal/minimal.cpp	(working copy)
@@ -30,6 +30,9 @@
     #include "wx/wx.h"
 #endif
 
+#include "wx/xrc/xmlres.h"
+#pragma comment(lib, "wxmsw31ud_xrc.lib")
+
 // ----------------------------------------------------------------------------
 // resources
 // ----------------------------------------------------------------------------
@@ -67,6 +70,7 @@
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    void OnHotKey(wxKeyEvent&);
 
 private:
     // any class wishing to process wxWidgets events must use this macro
@@ -99,6 +103,7 @@
 wxBEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_HOTKEY(XRCID("hotkey"), MyFrame::OnHotKey)
 wxEND_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -127,6 +132,11 @@
     // create the main application window
     MyFrame *frame = new MyFrame("Minimal wxWidgets App");
 
+    int command = XRCID("hotkey");
+    int hotflags = wxMOD_SHIFT | wxMOD_CONTROL;
+    int keycode = WXK_RETURN;
+    frame->RegisterHotKey(command, hotflags, keycode);
+
     // and show it (the frames, unlike simple controls, are not shown when
     // created initially)
     frame->Show(true);
@@ -198,3 +208,8 @@
                  wxOK | wxICON_INFORMATION,
                  this);
 }
+
+void MyFrame::OnHotKey(wxKeyEvent&)
+{
+    wxMessageBox(wxT("hotkey"));
+}
