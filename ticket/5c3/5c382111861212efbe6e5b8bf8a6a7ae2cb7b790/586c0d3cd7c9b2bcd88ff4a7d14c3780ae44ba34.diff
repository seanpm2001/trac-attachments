diff --git a/samples/propgrid/propgrid_minimal.cpp b/samples/propgrid/propgrid_minimal.cpp
index 8b0ac77..0894bc9 100644
--- a/samples/propgrid/propgrid_minimal.cpp
+++ b/samples/propgrid/propgrid_minimal.cpp
@@ -20,6 +20,7 @@ public:
     void OnAction(wxCommandEvent& event);
     void OnPropertyGridChange(wxPropertyGridEvent& event);
     void OnPropertyGridChanging(wxPropertyGridEvent& event);
+    void Construct();
 
 private:
     wxPropertyGrid* m_pg;
@@ -45,14 +46,38 @@ MyFrame::MyFrame(wxWindow* parent)
                         wxPG_SPLITTER_AUTO_CENTER |
                         wxPG_BOLD_MODIFIED );
     m_pg = pg;
-
-    pg->Append( new wxStringProperty("String Property", wxPG_LABEL) );
-    pg->Append( new wxIntProperty("Int Property", wxPG_LABEL) );
-    pg->Append( new wxBoolProperty("Bool Property", wxPG_LABEL) );
+    wxPrintf("About to call Construct() from MyFrame::MyFrame\n");
+    Construct();
 
     SetSize(400, 600);
 }
 
+void MyFrame::Construct()
+{    
+    m_pg->Clear();
+
+    m_pg->Append( new wxStringProperty("String Property", wxPG_LABEL) );
+    m_pg->Append( new wxIntProperty("Int Property", wxPG_LABEL) );
+    
+    m_pg->Append(new wxPropertyCategory("Category"));
+    m_pg->Append( new wxBoolProperty("Bool Property", wxPG_LABEL) );
+ 
+  /* static const wxChar* enum_prop_labels[] = { wxT("One Item"),
+        wxT("Another Item"), wxT("One More"), wxT("This Is Last"), NULL };    static long enum_prop_values[] = { 40, 80, 120, 160 };
+    
+    m_pg->Append( new wxEnumProperty(wxT("EnumProperty"),wxPG_LABEL,
+        enum_prop_labels, enum_prop_values, 80 ) );
+
+     wxPGChoices choices;
+    for (int n=0; n < 5; ++n)
+    {
+        choices.Add(wxString::Format("Item %i", n+1), n);
+    }
+    wxFlagsProperty* pflags;
+    pflags = (wxFlagsProperty*)m_pg->Append( new wxFlagsProperty(_("Flags"), wxPG_LABEL, choices, 0) );
+    wxPrintf("MyFrame::Construct:  pflags %p parent %p grid %p\n", pflags, pflags->GetParent(), m_pg);*/
+}
+
 void MyFrame::OnPropertyGridChange(wxPropertyGridEvent &event)
 {
     wxPGProperty* p = event.GetProperty();
@@ -66,6 +91,9 @@ void MyFrame::OnPropertyGridChange(wxPropertyGridEvent &event)
     {
         wxLogVerbose("OnPropertyGridChange(NULL)");
     }
+    wxPrintf("About to call Construct() from OnPropertyGridChange()\n");
+    Construct();
+    //CallAfter(&MyFrame::Construct);
 }
 
 void MyFrame::OnPropertyGridChanging(wxPropertyGridEvent &event)
@@ -73,6 +101,8 @@ void MyFrame::OnPropertyGridChanging(wxPropertyGridEvent &event)
     wxPGProperty* p = event.GetProperty();
 
     wxLogVerbose("OnPropertyGridChanging(%s)", p->GetName().c_str());
+
+   // Construct();
 }
 
 void MyFrame::OnAction(wxCommandEvent &)
