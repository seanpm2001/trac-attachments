diff -rbu2 wxCVS1/wxWindows/docs/latex/wx/notebook.tex wxCVS/wxWindows/docs/latex/wx/notebook.tex
--- wxCVS1/wxWindows/docs/latex/wx/notebook.tex	Tue Jul  9 02:42:47 2002
+++ wxCVS/wxWindows/docs/latex/wx/notebook.tex	Tue Jul  9 14:09:43 2002
@@ -264,4 +264,6 @@
 Sets the amount of space around each page's icon and label, in pixels.
 
+{\bf NB:} The vertical padding cannot be changed in wxGTK.
+
 \membersection{wxNotebook::SetPageSize}\label{wxnotebooksetpagesize}
 
@@ -269,4 +271,6 @@
 
 Sets the width and height of the pages.
+
+{\bf NB:} This method is currently not implemented for wxGTK.
 
 \membersection{wxNotebook::SetPageImage}\label{wxnotebooksetpageimage}

diff -rbu2 wxCVS1/wxWindows/include/wx/gtk/notebook.h wxCVS/wxWindows/include/wx/gtk/notebook.h
--- wxCVS1/wxWindows/include/wx/gtk/notebook.h	Mon Jul  2 14:34:11 2001
+++ wxCVS/wxWindows/include/wx/gtk/notebook.h	Tue Jul  9 11:15:24 2002
@@ -128,4 +128,7 @@
 
 private:
+
+    int m_padding;
+
     DECLARE_DYNAMIC_CLASS(wxNotebook)
     DECLARE_EVENT_TABLE()

diff -rbu2 wxCVS1/wxWindows/src/gtk/notebook.cpp wxCVS/wxWindows/src/gtk/notebook.cpp
--- wxCVS1/wxWindows/src/gtk/notebook.cpp	Tue Jul  9 02:43:06 2002
+++ wxCVS/wxWindows/src/gtk/notebook.cpp	Tue Jul  9 14:09:15 2002
@@ -191,6 +191,6 @@
     {
         int sel = win->GetSelection();
-        wxGtkNotebookPage *page = win->GetNotebookPage(sel);
-        wxCHECK_MSG( page, FALSE, _T("invalid selection in wxNotebook") );
+        wxGtkNotebookPage *nb_page = win->GetNotebookPage(sel);
+        wxCHECK_MSG( nb_page, FALSE, _T("invalid selection in wxNotebook") );
 
         wxNavigationKeyEvent event;
@@ -236,4 +236,5 @@
 void wxNotebook::Init()
 {
+    m_padding = 0;
     m_imageList = (wxImageList *) NULL;
     m_pagesData.DeleteContents( TRUE );
@@ -317,7 +318,7 @@
     if ( m_selection == -1 )
     {
-        GList *pages = GTK_NOTEBOOK(m_widget)->children;
+        GList *nb_pages = GTK_NOTEBOOK(m_widget)->children;
 
-        if (g_list_length(pages) != 0)
+        if (g_list_length(nb_pages) != 0)
         {
             GtkNotebook *notebook = GTK_NOTEBOOK(m_widget);
@@ -327,5 +328,5 @@
             {
                 wxConstCast(this, wxNotebook)->m_selection =
-                    g_list_index( pages, cur );
+                    g_list_index( nb_pages, cur );
             }
         }
@@ -471,5 +472,5 @@
 
         /* CHECKME: Are these pack flags okay? */
-        gtk_box_pack_start(GTK_BOX(nb_page->m_box), pixmapwid, FALSE, FALSE, 3);
+        gtk_box_pack_start(GTK_BOX(nb_page->m_box), pixmapwid, FALSE, FALSE, m_padding);
         gtk_widget_show(pixmapwid);
     }
@@ -490,7 +491,29 @@
 }
 
-void wxNotebook::SetPadding( const wxSize &WXUNUSED(padding) )
+void wxNotebook::SetPadding( const wxSize &padding )
 {
-    wxFAIL_MSG( wxT("wxNotebook::SetPadding not implemented") );
+    wxCHECK_RET( m_widget != NULL, wxT("invalid notebook") );
+
+    m_padding = padding.GetWidth();
+
+    int i;
+    for (i=0; i<int(GetPageCount()); i++)
+    {
+        wxGtkNotebookPage* nb_page = GetNotebookPage(i);
+        wxASSERT(nb_page != NULL);
+
+        if (nb_page->m_image != -1)
+        {
+            // gtk_box_set_child_packing sets padding on BOTH sides
+            // icon provides left padding, label provides center and right
+            int image = nb_page->m_image;
+            SetPageImage(i,-1);
+            SetPageImage(i,image);
+        }
+        wxASSERT(nb_page->m_label);
+        gtk_box_set_child_packing(GTK_BOX(nb_page->m_box),
+                                  GTK_WIDGET(nb_page->m_label),
+                                  FALSE, FALSE, m_padding, GTK_PACK_END);
+    }
 }
 
@@ -570,15 +593,15 @@
     GtkNotebook *notebook = GTK_NOTEBOOK(m_widget);
 
-    wxGtkNotebookPage *page = new wxGtkNotebookPage();
+    wxGtkNotebookPage *nb_page = new wxGtkNotebookPage();
 
     if ( position == GetPageCount() )
-        m_pagesData.Append( page );
+        m_pagesData.Append( nb_page );
     else
-        m_pagesData.Insert( m_pagesData.Item( position ), page );
+        m_pagesData.Insert( m_pagesData.Item( position ), nb_page );
 
     m_pages.Insert(win, position);
 
-    page->m_box = gtk_hbox_new( FALSE, 0 );
-    gtk_container_border_width( GTK_CONTAINER(page->m_box), 2 );
+    nb_page->m_box = gtk_hbox_new( FALSE, 1 );
+    gtk_container_border_width( GTK_CONTAINER(nb_page->m_box), 2 );
 
     gtk_signal_connect( GTK_OBJECT(win->m_widget), "size_allocate",
@@ -586,12 +609,12 @@
 
     if (position < 0)
-        gtk_notebook_append_page( notebook, win->m_widget, page->m_box );
+        gtk_notebook_append_page( notebook, win->m_widget, nb_page->m_box );
     else
-        gtk_notebook_insert_page( notebook, win->m_widget, page->m_box, position );
+        gtk_notebook_insert_page( notebook, win->m_widget, nb_page->m_box, position );
 
-    page->m_page = (GtkNotebookPage*) g_list_last(notebook->children)->data;
+    nb_page->m_page = (GtkNotebookPage*) g_list_last(notebook->children)->data;
 
     /* set the label image */
-    page->m_image = imageId;
+    nb_page->m_image = imageId;
 
     if (imageId != -1)
@@ -609,5 +632,5 @@
         GtkWidget *pixmapwid = gtk_pixmap_new (pixmap, mask );
 
-        gtk_box_pack_start(GTK_BOX(page->m_box), pixmapwid, FALSE, FALSE, 3);
+        gtk_box_pack_start(GTK_BOX(nb_page->m_box), pixmapwid, FALSE, FALSE, m_padding);
 
         gtk_widget_show(pixmapwid);
@@ -615,12 +638,12 @@
 
     /* set the label text */
-    page->m_text = text;
-    if (page->m_text.IsEmpty()) page->m_text = wxT("");
+    nb_page->m_text = text;
+    if (nb_page->m_text.IsEmpty()) nb_page->m_text = wxT("");
 
-    page->m_label = GTK_LABEL( gtk_label_new(page->m_text.mbc_str()) );
-    gtk_box_pack_end( GTK_BOX(page->m_box), GTK_WIDGET(page->m_label), FALSE, FALSE, 3 );
+    nb_page->m_label = GTK_LABEL( gtk_label_new(nb_page->m_text.mbc_str()) );
+    gtk_box_pack_end( GTK_BOX(nb_page->m_box), GTK_WIDGET(nb_page->m_label), FALSE, FALSE, m_padding );
 
     /* show the label */
-    gtk_widget_show( GTK_WIDGET(page->m_label) );
+    gtk_widget_show( GTK_WIDGET(nb_page->m_label) );
 
     if (select && (m_pagesData.GetCount() > 1))

 	  	 
