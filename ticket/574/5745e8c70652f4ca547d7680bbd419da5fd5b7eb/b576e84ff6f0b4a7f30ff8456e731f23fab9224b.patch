? contrib/src/fl/controlbar_orig.cpp
Index: contrib/src/fl/controlbar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/contrib/src/fl/controlbar.cpp,v
retrieving revision 1.18
diff -u -r1.18 controlbar.cpp
--- contrib/src/fl/controlbar.cpp	2003/11/09 21:40:31	1.18
+++ contrib/src/fl/controlbar.cpp	2004/01/16 08:14:47
@@ -1016,105 +1016,108 @@
 
 void wxFrameLayout::RecalcLayout( bool repositionBarsNow )
 {
-    mRecalcPending = FALSE;
+	mRecalcPending = FALSE;
 
-    int frmWidth, frmHeight;
-    mpFrame->GetClientSize( &frmWidth, &frmHeight );
+	int frmWidth, frmHeight;
+	mpFrame->GetClientSize( &frmWidth, &frmHeight );
+	int paneHeight = 0;
 
-    int curY = 0;
-    int curX = 0;
-    wxRect rect;
+	int curY = 0;
+	int curX = 0;
+	wxRect rect;
 
-    // pane positioning priorities in decreasing order:
-    // top, bottom, left, right
+	// pane positioning priorities in decreasing order:
+	// top, left, right, bottom
+	
+	// setup TOP pane
 
-    // setup TOP pane
+	cbDockPane* pPane = mPanes[ FL_ALIGN_TOP ];
 
-    cbDockPane* pPane = mPanes[ FL_ALIGN_TOP ];
+	pPane->SetPaneWidth( frmWidth );
+	pPane->RecalcLayout();
 
-    pPane->SetPaneWidth( frmWidth );
-    pPane->RecalcLayout();
+	paneHeight = pPane->GetPaneHeight();
 
-    int paneHeight = pPane->GetPaneHeight();
+	rect.x      = curX;
+	rect.y      = curY;
+	rect.width  = frmWidth;
+	rect.height = wxMin( paneHeight, frmHeight - curY );
 
-    rect.x      = curX;
-    rect.y      = curY;
-    rect.width  = frmWidth;
-    rect.height = wxMin( paneHeight, frmHeight - curY );
+	pPane->SetBoundsInParent( rect );
 
-    pPane->SetBoundsInParent( rect );
+	curY += paneHeight;
+	
+	// setup LEFT pane 
 
-    curY += paneHeight;
+	pPane = mPanes[ FL_ALIGN_LEFT ];
 
-    // setup BOTTOM pane
+	// bottom pane's y
+	pPane->SetPaneWidth( frmHeight - curY );
 
-    pPane = mPanes[ FL_ALIGN_BOTTOM ];
+	pPane->RecalcLayout();
+	paneHeight = pPane->GetPaneHeight();
 
-    pPane->SetPaneWidth( frmWidth );
-    pPane->RecalcLayout();
+	// bottom rect's y
+	rect.height = frmHeight - curY;
+	rect.x = curX;
+	rect.y = curY;
+	rect.width  = wxMin( paneHeight, frmWidth );
 
-    paneHeight = pPane->GetPaneHeight();
+	pPane->SetBoundsInParent( rect );
 
-    rect.x      = curX;
-    rect.y      = wxMax( frmHeight - paneHeight, curY );
-    rect.width  = frmWidth;
-    rect.height = frmHeight - rect.y;
+	curX += rect.width;
 
-    pPane->SetBoundsInParent( rect );
+	// setup RIGHT pane
 
-    // setup LEFT pane 
+	pPane = mPanes[ FL_ALIGN_RIGHT ];
 
-    pPane = mPanes[ FL_ALIGN_LEFT ];
+	// left pane's height
+	pPane->SetPaneWidth( rect.height );
 
-                         // bottom pane's y
-    pPane->SetPaneWidth( rect.y - curY );
+	pPane->RecalcLayout();
+	paneHeight = pPane->GetPaneHeight();
 
-    pPane->RecalcLayout();
-    paneHeight = pPane->GetPaneHeight();
+	// left pane's height
+	rect.height = rect.height;
+	rect.x = wxMax( frmWidth - paneHeight, curX );
+	rect.y = curY;
+	rect.width  = frmWidth - rect.x;
 
-                  // bottom rect's y
-    rect.height = rect.y - curY;
-    rect.x = curX;
-    rect.y = curY;
-    rect.width  = wxMin( paneHeight, frmWidth );
+	pPane->SetBoundsInParent( rect );
 
-    pPane->SetBoundsInParent( rect );
+	
+	// setup BOTTOM pane
 
-    curX += rect.width;
+	pPane = mPanes[ FL_ALIGN_BOTTOM ];
 
-    // setup RIGHT pane
+	pPane->SetPaneWidth( frmWidth -rect.width-curX);
+	pPane->RecalcLayout();
 
-    pPane = mPanes[ FL_ALIGN_RIGHT ];
+	paneHeight = pPane->GetPaneHeight();
 
-                         // left pane's height
-    pPane->SetPaneWidth( rect.height );
+	rect.x      = curX;
+	rect.y      = wxMax( frmHeight - paneHeight, curY );
+	rect.width  = frmWidth-rect.width-curX;
+	rect.height = frmHeight - rect.y;
 
-    pPane->RecalcLayout();
-    paneHeight = pPane->GetPaneHeight();
+	pPane->SetBoundsInParent( rect );
+	
 
-                  // left pane's height
-    rect.height = rect.height;
-    rect.x = wxMax( frmWidth - paneHeight, curX );
-    rect.y = curY;
-    rect.width  = frmWidth - rect.x;
+	// recalc bounds of the client-window
 
-    pPane->SetBoundsInParent( rect );
+	mClntWndBounds.x = mPanes[FL_ALIGN_LEFT]->mBoundsInParent.x + 
+		mPanes[FL_ALIGN_LEFT]->mBoundsInParent.width;
+	mClntWndBounds.y = mPanes[FL_ALIGN_TOP ]->mBoundsInParent.y + 
+		mPanes[FL_ALIGN_TOP ]->mBoundsInParent.height;
 
-    // recalc bounds of the client-window
+	mClntWndBounds.width  = mPanes[FL_ALIGN_RIGHT]->mBoundsInParent.x -
+		mClntWndBounds.x;
+	mClntWndBounds.height = mPanes[FL_ALIGN_BOTTOM]->mBoundsInParent.y -
+		mClntWndBounds.y;
 
-    mClntWndBounds.x = mPanes[FL_ALIGN_LEFT]->mBoundsInParent.x + 
-                       mPanes[FL_ALIGN_LEFT]->mBoundsInParent.width;
-    mClntWndBounds.y = mPanes[FL_ALIGN_TOP ]->mBoundsInParent.y + 
-                       mPanes[FL_ALIGN_TOP ]->mBoundsInParent.height;
+	if ( repositionBarsNow )
 
-    mClntWndBounds.width  = mPanes[FL_ALIGN_RIGHT]->mBoundsInParent.x -
-                            mClntWndBounds.x;
-    mClntWndBounds.height = mPanes[FL_ALIGN_BOTTOM]->mBoundsInParent.y -
-                            mClntWndBounds.y;
-
-    if ( repositionBarsNow )
-
-        PositionPanes();
+		PositionPanes();
 }
 
 int wxFrameLayout::GetClientHeight()

 	  	 
