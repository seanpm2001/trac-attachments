? wxPython/wx/lib/colourchooser/canvas.py
Index: include/wx/confbase.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/confbase.h,v
retrieving revision 1.53
diff -u -r1.53 confbase.h
--- include/wx/confbase.h	2004/10/13 14:07:56	1.53
+++ include/wx/confbase.h	2005/08/10 22:20:19
@@ -297,7 +297,7 @@
 class WXDLLIMPEXP_BASE wxConfigPathChanger
 {
 public:
-  // ctor/dtor do path changing/restorin
+  // ctor/dtor do path changing/restoring
   wxConfigPathChanger(const wxConfigBase *pContainer, const wxString& strEntry);
  ~wxConfigPathChanger();
 
Index: include/wx/datetime.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/datetime.h,v
retrieving revision 1.63
diff -u -r1.63 datetime.h
--- include/wx/datetime.h	2005/05/31 09:18:13	1.63
+++ include/wx/datetime.h	2005/08/10 22:20:20
@@ -400,7 +400,9 @@
     {
     public:
         TimeZone(TZ tz);
-        TimeZone(wxDateTime_t offset = 0) { m_offset = offset; }
+        TimeZone(wxDateTime_t offset = 0)
+		: m_offset(offset)
+	{ }
 
         long GetOffset() const { return m_offset; }
 
@@ -543,7 +545,9 @@
     // ------------------------------------------------------------------------
 
         // default ctor does not initialize the object, use Set()!
-    wxDateTime() { m_time = wxLongLong((long)ULONG_MAX, ULONG_MAX); }
+    wxDateTime()
+	    : m_time(wxLongLong((long)ULONG_MAX, ULONG_MAX))
+	  { };
 
         // from time_t: seconds since the Epoch 00:00:00 UTC, Jan 1, 1970)
 #if (!(defined(__VISAGECPP__) && __IBMCPP__ >= 400))
@@ -1031,7 +1035,9 @@
     // ------------------------------------------------------------------------
 
         // construct from internal representation
-    wxDateTime(const wxLongLong& time) { m_time = time; }
+    wxDateTime(const wxLongLong& time)
+	    : m_time(time)
+	  { };
 
         // get the internal representation
     inline wxLongLong GetValue() const;
@@ -1250,7 +1256,9 @@
     // ------------------------------------------------------------------------
 
         // construct from internal representation
-    wxTimeSpan(const wxLongLong& diff) { m_diff = diff; }
+    wxTimeSpan(const wxLongLong& diff)
+	    : m_diff(diff)
+	  { }
 
         // get the internal representation
     wxLongLong GetValue() const { return m_diff; }
@@ -1303,12 +1311,11 @@
 
         // this many years/months/weeks/days
     wxDateSpan(int years = 0, int months = 0, int weeks = 0, int days = 0)
-    {
-        m_years = years;
-        m_months = months;
-        m_weeks = weeks;
-        m_days = days;
-    }
+	    : m_years(years)
+	    , m_months(months)
+	    , m_weeks(weeks)
+	    , m_days(days)
+	{ }
 
         // get an object for the given number of days
     static wxDateSpan Days(int days) { return wxDateSpan(0, 0, 0, days); }
Index: include/wx/dir.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dir.h,v
retrieving revision 1.18
diff -u -r1.18 dir.h
--- include/wx/dir.h	2005/02/24 14:33:28	1.18
+++ include/wx/dir.h	2005/08/10 22:20:20
@@ -95,7 +95,9 @@
     // -----
 
     // default, use Open()
-    wxDir() { m_data = NULL; }
+    wxDir()
+	    : m_data(NULL)
+	{ }
 
     // opens the directory for enumeration, use IsOpened() to test success
     wxDir(const wxString& dir);
Index: include/wx/ffile.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/ffile.h,v
retrieving revision 1.23
diff -u -r1.23 ffile.h
--- include/wx/ffile.h	2005/06/08 15:17:42	1.23
+++ include/wx/ffile.h	2005/08/10 22:20:20
@@ -40,11 +40,13 @@
   // ctors
   // -----
     // def ctor
-  wxFFile() { m_fp = NULL; }
+  wxFFile()
+	  : m_fp(NULL)
+	{ }
     // open specified file (may fail, use IsOpened())
   wxFFile(const wxChar *filename, const wxChar *mode = _T("r"));
     // attach to (already opened) file
-  wxFFile(FILE *lfp) { m_fp = lfp; }
+  wxFFile(FILE *lfp) : m_fp(lfp) { }
 
   // open/close
     // open a file (existing or not - the mode controls what happens)
Index: include/wx/file.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/file.h,v
retrieving revision 1.47
diff -u -r1.47 file.h
--- include/wx/file.h	2005/06/08 15:17:42	1.47
+++ include/wx/file.h	2005/08/10 22:20:20
@@ -75,11 +75,17 @@
   // ctors
   // -----
     // def ctor
-  wxFile() { m_fd = fd_invalid; m_error = false; }
+  wxFile()
+	  : m_fd(fd_invalid)
+	  , m_error(false)
+	{ }
     // open specified file (may fail, use IsOpened())
   wxFile(const wxChar *szFileName, OpenMode mode = read);
     // attach to (already opened) file
-  wxFile(int lfd) { m_fd = lfd; m_error = false; }
+  wxFile(int lfd)
+	  : m_fd(lfd)
+	  , m_error(false)
+	{ }
 
   // open/close
     // create a new file (with the default value of bOverwrite, it will fail if
Index: include/wx/fmappriv.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/fmappriv.h,v
retrieving revision 1.5
diff -u -r1.5 fmappriv.h
--- include/wx/fmappriv.h	2004/05/26 10:49:43	1.5
+++ include/wx/fmappriv.h	2005/08/10 22:20:20
@@ -41,9 +41,9 @@
 {
 public:
     wxFontMapperPathChanger(wxFontMapperBase *fontMapper, const wxString& path)
+	    : m_fontMapper(fontMapper)
+	    , m_ok(m_fontMapper->ChangePath(path, &m_pathOld))
     {
-        m_fontMapper = fontMapper;
-        m_ok = m_fontMapper->ChangePath(path, &m_pathOld);
     }
 
     bool IsOk() const { return m_ok; }
Index: include/wx/stopwatch.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/stopwatch.h,v
retrieving revision 1.9
diff -u -r1.9 stopwatch.h
--- include/wx/stopwatch.h	2005/05/04 18:52:03	1.9
+++ include/wx/stopwatch.h	2005/08/10 22:20:20
@@ -24,7 +24,9 @@
 {
 public:
     // ctor starts the stop watch
-    wxStopWatch() { m_pauseCount = 0; Start(); }
+    wxStopWatch()
+	    : m_pauseCount(0)
+	  { Start(); }
 
     // start the stop watch at the moment t0
     void Start(long t0 = 0);
Index: include/wx/string.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/string.h,v
retrieving revision 1.206
diff -u -r1.206 string.h
--- include/wx/string.h	2005/08/10 21:24:42	1.206
+++ include/wx/string.h	2005/08/10 22:20:20
@@ -262,7 +262,7 @@
     // initializes the string to the empty value (must be called only from
     // ctors, use Reinit() otherwise)
   void Init() { m_pchData = (wxChar *)wxEmptyString; }
-    // initializaes the string with (a part of) C-string
+    // initializes the string with (a part of) C-string
   void InitWith(const wxChar *psz, size_t nPos = 0, size_t nLen = npos);
     // as Init, but also frees old data
   void Reinit() { GetStringData()->Unlock(); Init(); }
Index: include/wx/textbuf.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/textbuf.h,v
retrieving revision 1.20
diff -u -r1.20 textbuf.h
--- include/wx/textbuf.h	2005/05/04 18:52:03	1.20
+++ include/wx/textbuf.h	2005/08/10 22:20:21
@@ -172,7 +172,9 @@
     // -----
 
     // default ctor, use Open(string)
-    wxTextBuffer() { m_isOpened = false; }
+    wxTextBuffer()
+	    : m_isOpened(false)
+	  { }
 
     // ctor from filename
     wxTextBuffer(const wxString& strBufferName);
Index: include/wx/tokenzr.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/tokenzr.h,v
retrieving revision 1.19
diff -u -r1.19 tokenzr.h
--- include/wx/tokenzr.h	2004/05/23 20:50:25	1.19
+++ include/wx/tokenzr.h	2005/08/10 22:20:21
@@ -47,7 +47,9 @@
 public:
     // ctors and initializers
         // default ctor, call SetString() later
-    wxStringTokenizer() { m_mode = wxTOKEN_INVALID; }
+    wxStringTokenizer()
+	    : m_mode(wxTOKEN_INVALID)
+	  { }
         // ctor which gives us the string
     wxStringTokenizer(const wxString& str,
                       const wxString& delims = wxDEFAULT_DELIMITERS,
Index: src/common/appbase.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/appbase.cpp,v
retrieving revision 1.60
diff -u -r1.60 appbase.cpp
--- src/common/appbase.cpp	2005/08/03 23:58:54	1.60
+++ src/common/appbase.cpp	2005/08/10 22:20:22
@@ -118,9 +118,8 @@
 // ----------------------------------------------------------------------------
 
 wxAppConsole::wxAppConsole()
+	: m_traits(NULL)
 {
-    m_traits = NULL;
-
     ms_appInstance = this;
 
 #ifdef __WXDEBUG__
Index: src/common/cmdline.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/cmdline.cpp,v
retrieving revision 1.41
diff -u -r1.41 cmdline.cpp
--- src/common/cmdline.cpp	2004/12/25 01:58:36	1.41
+++ src/common/cmdline.cpp	2005/08/10 22:20:22
@@ -155,10 +155,9 @@
                    wxCmdLineParamType typ,
                    int fl)
         : description(desc)
-    {
-        type = typ;
-        flags = fl;
-    }
+	, type(typ)
+	, flags(fl)
+    { }
 
     wxString description;
     wxCmdLineParamType type;
@@ -208,13 +207,13 @@
 // ----------------------------------------------------------------------------
 
 wxCmdLineParserData::wxCmdLineParserData()
-{
-    m_enableLongOptions = true;
 #ifdef __UNIX_LIKE__
-    m_switchChars = _T("-");
+	: m_switchChars(_T("-"))
 #else // !Unix
-    m_switchChars = _T("/-");
+	: m_switchChars(_T("/-"))
 #endif
+	, m_enableLongOptions(true)
+{
 }
 
 void wxCmdLineParserData::SetArguments(int argc, char **argv)
Index: src/common/config.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/config.cpp,v
retrieving revision 1.76
diff -u -r1.76 config.cpp
--- src/common/config.cpp	2005/04/16 16:03:42	1.76
+++ src/common/config.cpp	2005/08/10 22:20:22
@@ -67,10 +67,12 @@
                            const wxString& WXUNUSED(localFilename),
                            const wxString& WXUNUSED(globalFilename),
                            long style)
-            : m_appName(appName), m_vendorName(vendorName), m_style(style)
+        : m_bExpandEnvVars(true)
+	, m_bRecordDefaults(false)
+	, m_appName(appName)
+	, m_vendorName(vendorName)
+	, m_style(style)
 {
-    m_bExpandEnvVars = true;
-    m_bRecordDefaults = false;
 }
 
 wxConfigBase::~wxConfigBase()
@@ -229,9 +231,10 @@
 
 wxConfigPathChanger::wxConfigPathChanger(const wxConfigBase *pContainer,
                                  const wxString& strEntry)
+	: m_pContainer((wxConfigBase *)pContainer)
+	, m_strName(strEntry)
+	, m_bChanged(false)
 {
-  m_pContainer = (wxConfigBase *)pContainer;
-
   // the path is everything which precedes the last slash
   wxString strPath = strEntry.BeforeLast(wxCONFIG_PATH_SEPARATOR);
 
@@ -268,11 +271,6 @@
 
     // in any case, use the just the name, not full path
     m_strName = strEntry.AfterLast(wxCONFIG_PATH_SEPARATOR);
-  }
-  else {
-    // it's a name only, without path - nothing to do
-    m_bChanged = false;
-    m_strName = strEntry;
   }
 }
 
Index: src/common/datetime.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/datetime.cpp,v
retrieving revision 1.132
diff -u -r1.132 datetime.cpp
--- src/common/datetime.cpp	2005/06/02 07:47:57	1.132
+++ src/common/datetime.cpp	2005/08/10 22:20:23
@@ -560,26 +560,29 @@
 // ----------------------------------------------------------------------------
 
 wxDateTime::Tm::Tm()
+	: msec(0)
+	, sec(0)
+	, min(0)
+	, hour(0)
+	, mday(0)
+	, mon(wxDateTime::Inv_Month)
+	, year((wxDateTime_t)wxDateTime::Inv_Year)
+	, wday(wxDateTime::Inv_WeekDay)
 {
-    year = (wxDateTime_t)wxDateTime::Inv_Year;
-    mon = wxDateTime::Inv_Month;
-    mday = 0;
-    hour = min = sec = msec = 0;
-    wday = wxDateTime::Inv_WeekDay;
 }
 
 wxDateTime::Tm::Tm(const struct tm& tm, const TimeZone& tz)
-              : m_tz(tz)
+	: msec(0)
+	, sec((wxDateTime::wxDateTime_t)tm.tm_sec)
+	, min((wxDateTime::wxDateTime_t)tm.tm_min)
+	, hour((wxDateTime::wxDateTime_t)tm.tm_hour)
+	, mday((wxDateTime::wxDateTime_t)tm.tm_mday)
+	, mon((wxDateTime::Month)tm.tm_mon)
+	, year(1900 + tm.tm_year)
+	, m_tz(tz)
+	, wday((wxDateTime::wxDateTime_t)tm.tm_wday)
+	, yday((wxDateTime::wxDateTime_t)tm.tm_yday)
 {
-    msec = 0;
-    sec = (wxDateTime::wxDateTime_t)tm.tm_sec;
-    min = (wxDateTime::wxDateTime_t)tm.tm_min;
-    hour = (wxDateTime::wxDateTime_t)tm.tm_hour;
-    mday = (wxDateTime::wxDateTime_t)tm.tm_mday;
-    mon = (wxDateTime::Month)tm.tm_mon;
-    year = 1900 + tm.tm_year;
-    wday = (wxDateTime::wxDateTime_t)tm.tm_wday;
-    yday = (wxDateTime::wxDateTime_t)tm.tm_yday;
 }
 
 bool wxDateTime::Tm::IsValid() const
Index: src/common/encconv.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/encconv.cpp,v
retrieving revision 1.37
diff -u -r1.37 encconv.cpp
--- src/common/encconv.cpp	2005/07/24 13:28:52	1.37
+++ src/common/encconv.cpp	2005/08/10 22:20:24
@@ -117,10 +117,11 @@
 
 
 wxEncodingConverter::wxEncodingConverter()
+	: m_Table(NULL)
+	, m_UnicodeInput(false)
+	, m_UnicodeOutput(false)
+	, m_JustCopy(false)
 {
-    m_Table = NULL;
-    m_UnicodeInput = m_UnicodeOutput = false;
-    m_JustCopy = false;
 }
 
 
Index: src/common/event.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/event.cpp,v
retrieving revision 1.166
diff -u -r1.166 event.cpp
--- src/common/event.cpp	2005/06/30 00:52:05	1.166
+++ src/common/event.cpp	2005/08/10 22:20:24
@@ -357,15 +357,15 @@
  */
 
 wxEvent::wxEvent(int theId, wxEventType commandType )
+	: m_eventObject((wxObject *) NULL)
+	, m_eventType(commandType)
+	, m_timeStamp(0)
+	, m_id(theId)
+	, m_callbackUserData((wxObject *) NULL)
+	, m_propagationLevel(wxEVENT_PROPAGATE_NONE)
+	, m_skipped(false)
+	, m_isCommandEvent(false)
 {
-    m_eventType = commandType;
-    m_eventObject = (wxObject *) NULL;
-    m_timeStamp = 0;
-    m_id = theId;
-    m_skipped = false;
-    m_callbackUserData = (wxObject *) NULL;
-    m_isCommandEvent = false;
-    m_propagationLevel = wxEVENT_PROPAGATE_NONE;
 }
 
 wxEvent::wxEvent(const wxEvent &src)
@@ -396,15 +396,15 @@
 #endif
 
 wxCommandEvent::wxCommandEvent(wxEventType commandType, int theId)
-              : wxEvent(theId, commandType)
+	: wxEvent(theId, commandType)
 #if WXWIN_COMPATIBILITY_2_4
-              , m_commandString(this)
+	, m_commandString(this)
 #endif
+	, m_commandInt(0)
+	, m_extraLong(0)
+	, m_clientData(NULL)
+	, m_clientObject(NULL)
 {
-    m_clientData = (char *) NULL;
-    m_clientObject = (wxClientData *) NULL;
-    m_extraLong = 0;
-    m_commandInt = 0;
     m_isCommandEvent = true;
 
     // the command events are propagated upwards by default
@@ -998,20 +998,21 @@
  */
 
 wxEvtHandler::wxEvtHandler()
-{
-    m_nextHandler = (wxEvtHandler *) NULL;
-    m_previousHandler = (wxEvtHandler *) NULL;
-    m_enabled = true;
-    m_dynamicEvents = (wxList *) NULL;
-    m_pendingEvents = (wxList *) NULL;
+	: m_nextHandler(NULL)
+	, m_previousHandler(NULL)
+	, m_dynamicEvents(NULL)
+	, m_pendingEvents(NULL)
 #if wxUSE_THREADS
 #  if !defined(__VISAGECPP__)
-    m_eventsLocker = new wxCriticalSection;
+	, m_eventsLocker(new wxCriticalSection)
 #  endif
 #endif
-    // no client data (yet)
-    m_clientData = NULL;
-    m_clientDataType = wxClientData_None;
+	, m_enabled(true)
+
+	// no client data (yet)
+	, m_clientData(NULL)
+	, m_clientDataType(wxClientData_None)
+{
 }
 
 wxEvtHandler::~wxEvtHandler()
Index: src/common/file.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/file.cpp,v
retrieving revision 1.96
diff -u -r1.96 file.cpp
--- src/common/file.cpp	2005/08/04 21:00:49	1.96
+++ src/common/file.cpp	2005/08/10 22:20:24
@@ -190,10 +190,9 @@
 
 // ctors
 wxFile::wxFile(const wxChar *szFileName, OpenMode mode)
+	: m_fd(fd_invalid)
+	, m_error(false)
 {
-    m_fd = fd_invalid;
-    m_error = false;
-
     Open(szFileName, mode);
 }
 
Index: src/common/fileconf.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/fileconf.cpp,v
retrieving revision 1.137
diff -u -r1.137 fileconf.cpp
--- src/common/fileconf.cpp	2005/07/05 15:30:36	1.137
+++ src/common/fileconf.cpp	2005/08/10 22:20:25
@@ -475,17 +475,15 @@
 #if wxUSE_STREAMS
 
 wxFileConfig::wxFileConfig(wxInputStream &inStream, wxMBConv& conv)
-            : m_conv(conv)
+        : m_linesHead(NULL)
+	, m_linesTail(NULL)
+	, m_pRootGroup(new wxFileConfigGroup(NULL, wxEmptyString, this))
+	, m_pCurrentGroup(m_pRootGroup)
+	, m_conv(conv)
 {
     // always local_file when this constructor is called (?)
     SetStyle(GetStyle() | wxCONFIG_USE_LOCAL_FILE);
 
-    m_pCurrentGroup =
-    m_pRootGroup    = new wxFileConfigGroup(NULL, wxEmptyString, this);
-
-    m_linesHead =
-    m_linesTail = NULL;
-
     // translate everything to the current (platform-dependent) line
     // termination character
     wxString strTrans;
@@ -1319,16 +1317,15 @@
 wxFileConfigGroup::wxFileConfigGroup(wxFileConfigGroup *pParent,
                                        const wxString& strName,
                                        wxFileConfig *pConfig)
-                         : m_aEntries(CompareEntries),
-                           m_aSubgroups(CompareGroups),
-                           m_strName(strName)
-{
-  m_pConfig = pConfig;
-  m_pParent = pParent;
-  m_pLine   = NULL;
-
-  m_pLastEntry = NULL;
-  m_pLastGroup = NULL;
+	: m_pConfig(pConfig)
+	, m_pParent(pParent)
+	, m_aEntries(CompareEntries)
+	, m_aSubgroups(CompareGroups)
+	, m_strName(strName)
+	, m_pLine(NULL)
+	, m_pLastEntry(NULL)
+	, m_pLastGroup(NULL)
+{
 }
 
 // dtor deletes all children
@@ -1808,17 +1805,15 @@
 wxFileConfigEntry::wxFileConfigEntry(wxFileConfigGroup *pParent,
                                        const wxString& strName,
                                        int nLine)
-                         : m_strName(strName)
+	: m_pParent(pParent)
+	, m_strName(strName)
+	, m_bImmutable(strName[0] == wxCONFIG_IMMUTABLE_PREFIX)
+	, m_bHasValue(false)
+	, m_nLine(nLine)
+	, m_pLine(NULL)
 {
   wxASSERT( !strName.empty() );
 
-  m_pParent = pParent;
-  m_nLine   = nLine;
-  m_pLine   = NULL;
-
-  m_bHasValue = false;
-
-  m_bImmutable = strName[0] == wxCONFIG_IMMUTABLE_PREFIX;
   if ( m_bImmutable )
     m_strName.erase(0, 1);  // remove first character
 }
Index: src/common/filename.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/filename.cpp,v
retrieving revision 1.158
diff -u -r1.158 filename.cpp
--- src/common/filename.cpp	2005/07/21 16:19:39	1.158
+++ src/common/filename.cpp	2005/08/10 22:20:25
@@ -831,7 +831,7 @@
                 filename.IsAbsolute()
 #endif
             )
-                currPath += wxFILE_SEP_PATH;
+            currPath += wxFILE_SEP_PATH;
             currPath += dirs[i];
 
             if (!DirExists(currPath))
Index: src/common/fmapbase.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/fmapbase.cpp,v
retrieving revision 1.15
diff -u -r1.15 fmapbase.cpp
--- src/common/fmapbase.cpp	2005/06/16 14:16:43	1.15
+++ src/common/fmapbase.cpp	2005/08/10 22:20:26
@@ -221,11 +221,11 @@
 // ----------------------------------------------------------------------------
 
 wxFontMapperBase::wxFontMapperBase()
-{
 #if wxUSE_CONFIG && wxUSE_FILECONFIG
-    m_config = NULL;
-    m_configIsDummy = false;
+	: m_config(NULL)
+	, m_configIsDummy(false)
 #endif // wxUSE_CONFIG
+{
 }
 
 wxFontMapperBase::~wxFontMapperBase()
Index: src/common/fs_zip.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/fs_zip.cpp,v
retrieving revision 1.41
diff -u -r1.41 fs_zip.cpp
--- src/common/fs_zip.cpp	2005/07/28 21:00:44	1.41
+++ src/common/fs_zip.cpp	2005/08/10 22:20:26
@@ -42,8 +42,8 @@
     public:
        wxZipFSInputStream(wxFSFile *file)
                : wxZipInputStream(*file->GetStream())
+	       , m_file(file)
        {
-            m_file = file;
 #if 1 //WXWIN_COMPATIBILITY_2_6
             m_allowSeeking = true;
 #endif
@@ -59,12 +59,16 @@
 // wxZipFSHandler
 //----------------------------------------------------------------------------
 
-wxZipFSHandler::wxZipFSHandler() : wxFileSystemHandler()
+wxZipFSHandler::wxZipFSHandler()
+	: wxFileSystemHandler()
+	, m_Archive(NULL)
+	, m_Pattern(wxEmptyString)
+	, m_BaseDir(wxEmptyString)
+	, m_ZipFile(wxEmptyString)
+	, m_AllowDirs(true)
+	, m_AllowFiles(true)
+	, m_DirsFound(NULL)
 {
-    m_Archive = NULL;
-    m_ZipFile = m_Pattern = m_BaseDir = wxEmptyString;
-    m_AllowDirs = m_AllowFiles = true;
-    m_DirsFound = NULL;
 }
 
 
Index: src/common/ftp.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/ftp.cpp,v
retrieving revision 1.61
diff -u -r1.61 ftp.cpp
--- src/common/ftp.cpp	2005/05/31 09:19:50	1.61
+++ src/common/ftp.cpp	2005/08/10 22:20:26
@@ -82,19 +82,18 @@
 // ----------------------------------------------------------------------------
 
 wxFTP::wxFTP()
+	: m_user(wxT("anonymous"))
+	, m_lastError(wxPROTO_NOERR)
+	, m_streaming(false)
+	, m_currentTransfermode(NONE)
+	, m_bPassive(true)
+	, m_bEncounteredError(false)
 {
-    m_lastError = wxPROTO_NOERR;
-    m_streaming = false;
-    m_currentTransfermode = NONE;
-
-    m_user = wxT("anonymous");
     m_passwd << wxGetUserId() << wxT('@') << wxGetFullHostName();
 
     SetNotify(0);
     SetFlags(wxSOCKET_NONE);
-    m_bPassive = true;
     SetDefaultTimeout(60); // Default is Sixty Seconds
-    m_bEncounteredError = false;
 }
 
 wxFTP::~wxFTP()
Index: src/common/hash.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/hash.cpp,v
retrieving revision 1.37
diff -u -r1.37 hash.cpp
--- src/common/hash.cpp	2005/02/02 13:56:59	1.37
+++ src/common/hash.cpp	2005/08/10 22:20:26
@@ -50,16 +50,16 @@
 // ============================================================================
 
 // ----------------------------------------------------------------------------
-// wxHashTablleBase for working with "void *" data
+// wxHashTableBase for working with "void *" data
 // ----------------------------------------------------------------------------
 
 wxHashTableBase::wxHashTableBase()
+	: m_hashTable((wxListBase **)NULL)
+	, m_hashSize(0)
+	, m_keyType(wxKEY_NONE)
+	, m_count(0)
+	, m_deleteContents(false)
 {
-    m_deleteContents = false;
-    m_hashTable = (wxListBase **)NULL;
-    m_hashSize = 0;
-    m_count = 0;
-    m_keyType = wxKEY_NONE;
 }
 
 void wxHashTableBase::Create(wxKeyType keyType, size_t size)
@@ -240,11 +240,11 @@
 // ----------------------------------------------------------------------------
 
 wxStringHashTable::wxStringHashTable(size_t sizeTable)
+	: m_hashSize(sizeTable)
 {
     m_keys = new wxArrayLong *[sizeTable];
     m_values = new wxArrayString *[sizeTable];
 
-    m_hashSize = sizeTable;
     for ( size_t n = 0; n < m_hashSize; n++ )
     {
         m_values[n] = (wxArrayString *)NULL;
@@ -345,12 +345,12 @@
 // ----------------------------------------------------------------------------
 
 wxHashTable::wxHashTable (int the_key_type, int size)
+	: n(0)
+	, hash_table((wxList**) NULL)
+	, m_count(0)
+	, m_deleteContents(false)
 {
-  n = 0;
-  hash_table = (wxList**) NULL;
   Create(the_key_type, size);
-  m_count = 0;
-  m_deleteContents = false;
 /*
   n = size;
   current_position = -1;
Index: src/common/http.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/http.cpp,v
retrieving revision 1.74
diff -u -r1.74 http.cpp
--- src/common/http.cpp	2005/07/29 22:28:02	1.74
+++ src/common/http.cpp	2005/08/10 22:20:26
@@ -41,14 +41,13 @@
 IMPLEMENT_PROTOCOL(wxHTTP, wxT("http"), wxT("80"), true)
 
 wxHTTP::wxHTTP()
-  : wxProtocol()
+	: wxProtocol()
+	, m_read(false)
+	, m_proxy_mode(false)
+	, m_addr(NULL)
+	, m_post_buf()
+	, m_http_response(0)
 {
-    m_addr = NULL;
-    m_read = false;
-    m_proxy_mode = false;
-    m_post_buf = wxEmptyString;
-    m_http_response = 0;
-
     SetNotify(wxSOCKET_LOST_FLAG);
 }
 
Index: src/common/intl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/intl.cpp,v
retrieving revision 1.159
diff -u -r1.159 intl.cpp
--- src/common/intl.cpp	2005/06/16 14:16:43	1.159
+++ src/common/intl.cpp	2005/08/10 22:20:27
@@ -995,9 +995,9 @@
 // ----------------------------------------------------------------------------
 
 wxMsgCatalogFile::wxMsgCatalogFile()
+	: m_pData(NULL)
+	, m_nSize(0)
 {
-    m_pData = NULL;
-    m_nSize = 0;
 }
 
 wxMsgCatalogFile::~wxMsgCatalogFile()
Index: src/common/list.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/list.cpp,v
retrieving revision 1.55
diff -u -r1.55 list.cpp
--- src/common/list.cpp	2005/06/07 18:59:29	1.55
+++ src/common/list.cpp	2005/08/10 22:20:27
@@ -72,12 +72,11 @@
 wxNodeBase::wxNodeBase(wxListBase *list,
                        wxNodeBase *previous, wxNodeBase *next,
                        void *data, const wxListKey& key)
+	: m_data(data)
+	, m_next(next)
+	, m_previous(previous)
+	, m_list(list)
 {
-    m_list = list;
-    m_data = data;
-    m_previous = previous;
-    m_next = next;
-
     switch ( key.GetKeyType() )
     {
         case wxKEY_NONE:
@@ -164,7 +163,7 @@
 void wxListBase::DoCopy(const wxListBase& list)
 {
     wxASSERT_MSG( !list.m_destroy,
-                  wxT("copying list which owns it's elements is a bad idea") );
+                  wxT("copying list which owns its elements is a bad idea") );
 
     m_destroy = list.m_destroy;
     m_keyType = list.m_keyType;
Index: src/common/mimecmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/mimecmn.cpp,v
retrieving revision 1.40
diff -u -r1.40 mimecmn.cpp
--- src/common/mimecmn.cpp	2005/07/21 16:19:40	1.40
+++ src/common/mimecmn.cpp	2005/08/10 22:20:28
@@ -100,12 +100,12 @@
 
 
 wxFileTypeInfo::wxFileTypeInfo(const wxArrayString& sArray)
-{
-    m_mimeType = sArray [0u];
-    m_openCmd  = sArray [1u];
-    m_printCmd = sArray [2u];
-    m_desc     = sArray [3u];
+	: m_mimeType(sArray [0u])
+	, m_openCmd (sArray [1u])
+	, m_printCmd(sArray [2u])
+	, m_desc    (sArray [3u])
 
+{
     size_t count = sArray.GetCount();
     for ( size_t i = 4; i < count; i++ )
     {
@@ -210,15 +210,15 @@
 }
 
 wxFileType::wxFileType(const wxFileTypeInfo& info)
+	: m_info(&info)
+	, m_impl(NULL)
 {
-    m_info = &info;
-    m_impl = NULL;
 }
 
 wxFileType::wxFileType()
+	: m_info(NULL)
+	, m_impl(new wxFileTypeImpl)
 {
-    m_info = NULL;
-    m_impl = new wxFileTypeImpl;
 }
 
 wxFileType::~wxFileType()
@@ -482,8 +482,8 @@
 }
 
 wxMimeTypesManager::wxMimeTypesManager()
+	: m_impl(NULL)
 {
-    m_impl = NULL;
 }
 
 wxMimeTypesManager::~wxMimeTypesManager()
Index: src/common/mstream.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/mstream.cpp,v
retrieving revision 1.34
diff -u -r1.34 mstream.cpp
--- src/common/mstream.cpp	2005/04/05 10:23:27	1.34
+++ src/common/mstream.cpp	2005/08/10 22:20:28
@@ -43,13 +43,12 @@
 // ----------------------------------------------------------------------------
 
 wxMemoryInputStream::wxMemoryInputStream(const void *data, size_t len)
+	: m_i_streambuf(new wxStreamBuffer(wxStreamBuffer::read))
+	, m_length(len)
 {
-    m_i_streambuf = new wxStreamBuffer(wxStreamBuffer::read);
     m_i_streambuf->SetBufferIO((void *)data, len); // const_cast
     m_i_streambuf->SetIntPosition(0); // seek to start pos
     m_i_streambuf->Fixed(true);
-
-    m_length = len;
 }
 
 wxMemoryInputStream::wxMemoryInputStream(const wxMemoryOutputStream& stream)
Index: src/common/sckaddr.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/sckaddr.cpp,v
retrieving revision 1.46
diff -u -r1.46 sckaddr.cpp
--- src/common/sckaddr.cpp	2005/04/12 17:03:49	1.46
+++ src/common/sckaddr.cpp	2005/08/10 22:20:28
@@ -65,18 +65,16 @@
 }
 
 wxSockAddress::wxSockAddress()
+	: m_address(GAddress_new())
 {
     Init();
-
-    m_address = GAddress_new();
 }
 
 wxSockAddress::wxSockAddress(const wxSockAddress& other)
-    : wxObject()
+	: wxObject()
+	, m_address(GAddress_copy(other.m_address))
 {
     Init();
-
-    m_address = GAddress_copy(other.m_address);
 }
 
 wxSockAddress::~wxSockAddress()
Index: src/common/sckipc.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/sckipc.cpp,v
retrieving revision 1.46
diff -u -r1.46 sckipc.cpp
--- src/common/sckipc.cpp	2005/04/12 17:16:37	1.46
+++ src/common/sckipc.cpp	2005/08/10 22:20:28
@@ -236,9 +236,10 @@
 // wxTCPServer
 // --------------------------------------------------------------------------
 
-wxTCPServer::wxTCPServer () : wxServerBase()
+wxTCPServer::wxTCPServer ()
+	: wxServerBase()
+	, m_server(NULL)
 {
-  m_server = NULL;
 }
 
 bool wxTCPServer::Create(const wxString& serverName)
@@ -339,21 +340,22 @@
 // wxTCPConnection
 // --------------------------------------------------------------------------
 
-wxTCPConnection::wxTCPConnection () : wxConnectionBase()
+wxTCPConnection::wxTCPConnection ()
+	: wxConnectionBase()
+	, m_sock(NULL)
+	, m_sockstrm(NULL)
+	, m_codeci(NULL)
+	, m_codeco(NULL)
 {
-  m_sock     = NULL;
-  m_sockstrm = NULL;
-  m_codeci   = NULL;
-  m_codeco   = NULL;
 }
 
 wxTCPConnection::wxTCPConnection(wxChar *buffer, int size)
-       : wxConnectionBase(buffer, size)
+	: wxConnectionBase(buffer, size)
+	, m_sock(NULL)
+	, m_sockstrm(NULL)
+	, m_codeci(NULL)
+	, m_codeco(NULL)
 {
-  m_sock     = NULL;
-  m_sockstrm = NULL;
-  m_codeci   = NULL;
-  m_codeco   = NULL;
 }
 
 wxTCPConnection::~wxTCPConnection ()
Index: src/common/strconv.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/strconv.cpp,v
retrieving revision 1.153
diff -u -r1.153 strconv.cpp
--- src/common/strconv.cpp	2005/08/08 22:29:01	1.153
+++ src/common/strconv.cpp	2005/08/10 22:20:29
@@ -2376,9 +2376,8 @@
     }
 
     wxMBConv_wxwin(wxFontEncoding enc)
+	    : m_enc(enc)
     {
-        m_enc = enc;
-
         Init();
     }
 
Index: src/common/stream.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/stream.cpp,v
retrieving revision 1.94
diff -u -r1.94 stream.cpp
--- src/common/stream.cpp	2005/03/03 19:12:18	1.94
+++ src/common/stream.cpp	2005/08/10 22:20:29
@@ -101,21 +101,20 @@
 }
 
 wxStreamBuffer::wxStreamBuffer(const wxStreamBuffer& buffer)
+	: m_buffer_start(buffer.m_buffer_start)
+	, m_buffer_end(buffer.m_buffer_end)
+	, m_buffer_pos(buffer.m_buffer_pos)
+	, m_buffer_size(buffer.m_buffer_size)
+	, m_stream(buffer.m_stream)
+	, m_mode(buffer.m_mode)
+	, m_destroybuf(false)
+	, m_fixed(buffer.m_fixed)
+	, m_flushable(buffer.m_flushable)
 {
     // doing this has big chances to lead to a crash when the source buffer is
     // destroyed (otherwise assume the caller knows what he does)
     wxASSERT_MSG( !buffer.m_destroybuf,
                   _T("it's a bad idea to copy this buffer") );
-
-    m_buffer_start = buffer.m_buffer_start;
-    m_buffer_end = buffer.m_buffer_end;
-    m_buffer_pos = buffer.m_buffer_pos;
-    m_buffer_size = buffer.m_buffer_size;
-    m_fixed = buffer.m_fixed;
-    m_flushable = buffer.m_flushable;
-    m_stream = buffer.m_stream;
-    m_mode = buffer.m_mode;
-    m_destroybuf = false;
 }
 
 void wxStreamBuffer::FreeBuffer()
@@ -652,9 +651,9 @@
 // ----------------------------------------------------------------------------
 
 wxStreamBase::wxStreamBase()
+	: m_lastcount(0)
+	, m_lasterror(wxSTREAM_NO_ERROR)
 {
-    m_lasterror = wxSTREAM_NO_ERROR;
-    m_lastcount = 0;
 }
 
 wxStreamBase::~wxStreamBase()
@@ -696,10 +695,10 @@
 // ----------------------------------------------------------------------------
 
 wxInputStream::wxInputStream()
+	: m_wback(NULL)
+	, m_wbacksize(0)
+	, m_wbackcur(0)
 {
-    m_wback = NULL;
-    m_wbacksize =
-    m_wbackcur = 0;
 }
 
 wxInputStream::~wxInputStream()
@@ -977,8 +976,8 @@
 // ----------------------------------------------------------------------------
 
 wxCountingOutputStream::wxCountingOutputStream ()
+	: m_currentPos(0)
 {
-     m_currentPos = 0;
 }
 
 wxFileOffset wxCountingOutputStream::GetLength() const
@@ -1039,13 +1038,13 @@
 // ----------------------------------------------------------------------------
 
 wxFilterInputStream::wxFilterInputStream()
+	: m_parent_i_stream(NULL)
 {
-    m_parent_i_stream = NULL;
 }
 
 wxFilterInputStream::wxFilterInputStream(wxInputStream& stream)
+	: m_parent_i_stream(&stream)
 {
-    m_parent_i_stream = &stream;
 }
 
 wxFilterInputStream::~wxFilterInputStream()
@@ -1057,13 +1056,13 @@
 // ----------------------------------------------------------------------------
 
 wxFilterOutputStream::wxFilterOutputStream()
+	: m_parent_o_stream(NULL)
 {
-    m_parent_o_stream = NULL;
 }
 
 wxFilterOutputStream::wxFilterOutputStream(wxOutputStream& stream)
+	: m_parent_o_stream(&stream)
 {
-    m_parent_o_stream = &stream;
 }
 
 wxFilterOutputStream::~wxFilterOutputStream()
@@ -1076,7 +1075,7 @@
 
 wxBufferedInputStream::wxBufferedInputStream(wxInputStream& s,
                                              wxStreamBuffer *buffer)
-                     : wxFilterInputStream(s)
+	: wxFilterInputStream(s)
 {
     if ( buffer )
     {
Index: src/common/textbuf.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/textbuf.cpp,v
retrieving revision 1.11
diff -u -r1.11 textbuf.cpp
--- src/common/textbuf.cpp	2005/02/02 13:57:01	1.11
+++ src/common/textbuf.cpp	2005/08/10 22:20:29
@@ -140,10 +140,10 @@
 // ----------------------------------------------------------------------------
 
 wxTextBuffer::wxTextBuffer(const wxString& strBufferName)
-            : m_strBufferName(strBufferName)
+	: m_strBufferName(strBufferName)
+	, m_nCurLine(0)
+	, m_isOpened(false)
 {
-    m_nCurLine = 0;
-    m_isOpened = false;
 }
 
 wxTextBuffer::~wxTextBuffer()
Index: src/common/uri.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/uri.cpp,v
retrieving revision 1.26
diff -u -r1.26 uri.cpp
--- src/common/uri.cpp	2005/07/28 21:52:50	1.26
+++ src/common/uri.cpp	2005/08/10 22:20:29
@@ -176,7 +176,7 @@
       size_t dwPasswordPos = m_userinfo.find(':');
 
       if (dwPasswordPos == wxString::npos)
-          return wxT("");
+          return wxEmptyString;
       else
           return m_userinfo(dwPasswordPos+1, m_userinfo.length() + 1);    
 }
Index: src/common/utilscmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/utilscmn.cpp,v
retrieving revision 1.144
diff -u -r1.144 utilscmn.cpp
--- src/common/utilscmn.cpp	2005/07/22 12:51:12	1.144
+++ src/common/utilscmn.cpp	2005/08/10 22:20:30
@@ -618,7 +618,7 @@
         if(lpShellExecute == NULL)
             return false;
 
-        // Windows sometimes doesn't open the browser correctly when using mime
+        // Windows sometimes doesn't open the browser correctly when using MIME
         // types, so do ShellExecute - i.e. start <url> (from James Carroll)
         nResult = (int) (*lpShellExecute)(NULL, NULL, finalurl.c_str(),
                                           NULL, wxT(""), SW_SHOWNORMAL);
Index: src/common/variant.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/variant.cpp,v
retrieving revision 1.68
diff -u -r1.68 variant.cpp
--- src/common/variant.cpp	2005/08/06 21:16:55	1.68
+++ src/common/variant.cpp	2005/08/10 22:20:30
@@ -55,7 +55,7 @@
 {
 DECLARE_DYNAMIC_CLASS(wxVariantDataList)
 public:
-    wxVariantDataList() {}
+    wxVariantDataList() : m_value() {}
     wxVariantDataList(const wxList& list);
     ~wxVariantDataList();
 
@@ -204,8 +204,8 @@
 {
 DECLARE_DYNAMIC_CLASS(wxVariantDataStringList)
 public:
-    wxVariantDataStringList() {}
-    wxVariantDataStringList(const wxStringList& list) { m_value = list; }
+    wxVariantDataStringList() : m_value() {}
+    wxVariantDataStringList(const wxStringList& list) : m_value(list) { }
 
     wxStringList& GetValue() const { return (wxStringList&) m_value; }
     void SetValue(const wxStringList& value);
@@ -314,8 +314,8 @@
 {
 DECLARE_DYNAMIC_CLASS(wxVariantDataLong)
 public:
-    wxVariantDataLong() { m_value = 0; }
-    wxVariantDataLong(long value) { m_value = value; }
+    wxVariantDataLong() : m_value(0) { }
+    wxVariantDataLong(long value) : m_value(value) { }
 
     inline long GetValue() const { return m_value; }
     inline void SetValue(long value) { m_value = value; }
@@ -415,8 +415,8 @@
 {
 DECLARE_DYNAMIC_CLASS(wxVariantDataReal)
 public:
-    wxVariantDataReal() { m_value = 0.0; }
-    wxVariantDataReal(double value) { m_value = value; }
+    wxVariantDataReal() : m_value(0.0) { }
+    wxVariantDataReal(double value) : m_value(value) { }
 
     inline double GetValue() const { return m_value; }
     inline void SetValue(double value) { m_value = value; }
@@ -516,8 +516,8 @@
 {
 DECLARE_DYNAMIC_CLASS(wxVariantDataBool)
 public:
-    wxVariantDataBool() { m_value = 0; }
-    wxVariantDataBool(bool value) { m_value = value; }
+    wxVariantDataBool() : m_value(0) { }
+    wxVariantDataBool(bool value) : m_value(value) { }
 
     inline bool GetValue() const { return m_value; }
     inline void SetValue(bool value) { m_value = value; }
@@ -620,8 +620,8 @@
 {
 DECLARE_DYNAMIC_CLASS(wxVariantDataChar)
 public:
-    wxVariantDataChar() { m_value = 0; }
-    wxVariantDataChar(char value) { m_value = value; }
+    wxVariantDataChar() : m_value(0) { }
+    wxVariantDataChar(char value) : m_value(value) { }
 
     inline char GetValue() const { return m_value; }
     inline void SetValue(char value) { m_value = value; }
@@ -721,8 +721,8 @@
 {
 DECLARE_DYNAMIC_CLASS(wxVariantDataString)
 public:
-    wxVariantDataString() { }
-    wxVariantDataString(const wxString& value) { m_value = value; }
+    wxVariantDataString() : m_value() { }
+    wxVariantDataString(const wxString& value) : m_value(value) { }
 
     inline wxString GetValue() const { return m_value; }
     inline void SetValue(const wxString& value) { m_value = value; }
@@ -821,8 +821,8 @@
 {
 DECLARE_DYNAMIC_CLASS(wxVariantDataVoidPtr)
 public:
-    wxVariantDataVoidPtr() { }
-    wxVariantDataVoidPtr(void* value) { m_value = value; }
+    wxVariantDataVoidPtr() : m_value(NULL) { }
+    wxVariantDataVoidPtr(void* value) : m_value(value) { }
 
     inline void* GetValue() const { return m_value; }
     inline void SetValue(void* value) { m_value = value; }
@@ -904,8 +904,8 @@
 {
 DECLARE_DYNAMIC_CLASS(wxVariantDataWxObjectPtr)
 public:
-    wxVariantDataWxObjectPtr() { }
-    wxVariantDataWxObjectPtr(wxObject* value) { m_value = value; }
+    wxVariantDataWxObjectPtr() : m_value(NULL) { }
+    wxVariantDataWxObjectPtr(wxObject* value) : m_value(value) { }
 
     inline wxObject* GetValue() const { return m_value; }
     inline void SetValue(wxObject* value) { m_value = value; }
@@ -1012,8 +1012,8 @@
     DECLARE_DYNAMIC_CLASS(wxVariantDataDateTime)
 
 public:
-    wxVariantDataDateTime() { }
-    wxVariantDataDateTime(const wxDateTime& value) { m_value = value; }
+    wxVariantDataDateTime() : m_value() { }
+    wxVariantDataDateTime(const wxDateTime& value) : m_value(value) { }
 #if wxUSE_ODBC
     wxVariantDataDateTime(const TIME_STRUCT* valptr)
         { m_value = wxDateTime(valptr->hour, valptr->minute, valptr->second); }
@@ -1108,8 +1108,8 @@
 class wxVariantDataArrayString: public wxVariantData
 {
 public:
-    wxVariantDataArrayString() { }
-    wxVariantDataArrayString(const wxArrayString& value) { m_value = value; }
+    wxVariantDataArrayString() : m_value() { }
+    wxVariantDataArrayString(const wxArrayString& value) : m_value(value) { }
 
     wxArrayString GetValue() const { return m_value; }
     void SetValue(const wxArrayString& value) { m_value = value; }
@@ -1209,127 +1209,127 @@
 
 // Construction & destruction
 wxVariant::wxVariant()
+	 : m_data((wxVariantData*) NULL),
+	   m_name()
 {
-    m_data = (wxVariantData*) NULL;
 }
 
 wxVariant::wxVariant(double val, const wxString& name)
+	 : m_data(new wxVariantDataReal(val)),
+	   m_name(name)
 {
-    m_data = new wxVariantDataReal(val);
-    m_name = name;
 }
 
 wxVariant::wxVariant(long val, const wxString& name)
+	 : m_data(new wxVariantDataLong(val)),
+	   m_name(name)
 {
-    m_data = new wxVariantDataLong(val);
-    m_name = name;
 }
 
 #ifdef HAVE_BOOL
 wxVariant::wxVariant(bool val, const wxString& name)
+	 : m_data(new wxVariantDataBool(val)),
+	   m_name(name)
 {
-    m_data = new wxVariantDataBool(val);
-    m_name = name;
 }
 #endif
 
 wxVariant::wxVariant(char val, const wxString& name)
+	 : m_data(new wxVariantDataChar(val)),
+	   m_name(name)
 {
-    m_data = new wxVariantDataChar(val);
-    m_name = name;
 }
 
 wxVariant::wxVariant(const wxString& val, const wxString& name)
+	 : m_data(new wxVariantDataString(val)),
+	   m_name(name)
 {
-    m_data = new wxVariantDataString(val);
-    m_name = name;
 }
 
 wxVariant::wxVariant(const wxChar* val, const wxString& name)
+	 : m_data(new wxVariantDataString(wxString(val))),
+	   m_name(name)
 {
-    m_data = new wxVariantDataString(wxString(val));
-    m_name = name;
 }
 
 #if WXWIN_COMPATIBILITY_2_4
 
 wxVariant::wxVariant(const wxStringList& val, const wxString& name)
+	 : m_data(new wxVariantDataStringList(val)),
+	   m_name(name)
 {
-    m_data = new wxVariantDataStringList(val);
-    m_name = name;
 }
 
 #endif
 
 wxVariant::wxVariant(const wxList& val, const wxString& name) // List of variants
+	 : m_data(new wxVariantDataList(val)),
+	   m_name(name)
 {
-    m_data = new wxVariantDataList(val);
-    m_name = name;
 }
 
 wxVariant::wxVariant( void* val, const wxString& name)
+	 : m_data(new wxVariantDataVoidPtr(val)),
+	   m_name(name)
 {
-    m_data = new wxVariantDataVoidPtr(val);
-    m_name = name;
 }
 
 wxVariant::wxVariant( wxObject* val, const wxString& name)
+	 : m_data(new wxVariantDataWxObjectPtr(val)),
+	   m_name(name)
 {
-    m_data = new wxVariantDataWxObjectPtr(val);
-    m_name = name;
 }
 
 #if wxUSE_DATETIME
 wxVariant::wxVariant(const wxDateTime& val, const wxString& name) // Date
+	 : m_data(new wxVariantDataDateTime(val)),
+	   m_name(name)
 {
-    m_data = new wxVariantDataDateTime(val);
-    m_name = name;
 }
 #endif // wxUSE_DATETIME
 
 #if wxUSE_ODBC
 wxVariant::wxVariant(const TIME_STRUCT* valptr, const wxString& name) // Date
+	 : m_data(new wxVariantDataDateTime(valptr)),
+	   m_name(name)
 {
-    m_data = new wxVariantDataDateTime(valptr);
-    m_name = name;
 }
 
 wxVariant::wxVariant(const TIMESTAMP_STRUCT* valptr, const wxString& name) // Date
+	 : m_data(new wxVariantDataDateTime(valptr)),
+	   m_name(name)
 {
-    m_data = new wxVariantDataDateTime(valptr);
-    m_name = name;
 }
 
 wxVariant::wxVariant(const DATE_STRUCT* valptr, const wxString& name) // Date
+	 : m_data(new wxVariantDataDateTime(valptr)),
+	   m_name(name)
 {
-    m_data = new wxVariantDataDateTime(valptr);
-    m_name = name;
 }
 #endif // wxUSE_ODBC
 
 wxVariant::wxVariant(const wxArrayString& val, const wxString& name) // Strings
+	 : m_data(new wxVariantDataArrayString(val)),
+	   m_name(name)
 {
-    m_data = new wxVariantDataArrayString(val);
-    m_name = name;
 }
 
 wxVariant::wxVariant(const wxVariant& variant)
-    : wxObject()
+    : wxObject(),
+      m_data((wxVariantData*) NULL),
+      m_name(variant.m_name)
 {
     if (!variant.IsNull())
     {
         m_data = (wxVariantData*) variant.GetData()->GetClassInfo()->CreateObject();
         variant.m_data->Copy(*m_data);
     }
-    else
-        m_data = (wxVariantData*) NULL;
-    m_name = variant.m_name;
 }
 
 wxVariant::wxVariant(wxVariantData* data, const wxString& name) // User-defined data
+	 : m_data(data),
+	   m_name(name)
 {
-    m_data = data;
-    m_name = name;
 }
 
 wxVariant::~wxVariant()
Index: src/common/zstream.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/zstream.cpp,v
retrieving revision 1.51
diff -u -r1.51 zstream.cpp
--- src/common/zstream.cpp	2005/05/31 09:19:53	1.51
+++ src/common/zstream.cpp	2005/08/10 22:20:30
@@ -48,12 +48,12 @@
 //////////////////////
 
 wxZlibInputStream::wxZlibInputStream(wxInputStream& stream, int flags)
-  : wxFilterInputStream(stream)
+	: wxFilterInputStream(stream)
+	, m_z_size(ZSTREAM_BUFFER_SIZE)
+	, m_z_buffer(new unsigned char[ZSTREAM_BUFFER_SIZE])
+	, m_inflate(NULL)
+	, m_pos(0)
 {
-  m_inflate = NULL;
-  m_z_buffer = new unsigned char[ZSTREAM_BUFFER_SIZE];
-  m_z_size = ZSTREAM_BUFFER_SIZE;
-  m_pos = 0;
 
 #if WXWIN_COMPATIBILITY_2_4
   // treat compatibility mode as auto
@@ -188,12 +188,12 @@
 wxZlibOutputStream::wxZlibOutputStream(wxOutputStream& stream,
                                        int level,
                                        int flags)
- : wxFilterOutputStream(stream)
+ : wxFilterOutputStream(stream),
+   m_z_size(ZSTREAM_BUFFER_SIZE),
+   m_z_buffer(new unsigned char[ZSTREAM_BUFFER_SIZE]),
+   m_deflate(NULL),
+   m_pos(0)
 {
-  m_deflate = NULL;
-  m_z_buffer = new unsigned char[ZSTREAM_BUFFER_SIZE];
-  m_z_size = ZSTREAM_BUFFER_SIZE;
-  m_pos = 0;
 
   if ( level == -1 )
   {
Index: src/unix/gsocket.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/gsocket.cpp,v
retrieving revision 1.45
diff -u -r1.45 gsocket.cpp
--- src/unix/gsocket.cpp	2005/07/26 15:38:55	1.45
+++ src/unix/gsocket.cpp	2005/08/10 22:20:31
@@ -270,26 +270,25 @@
 /* Constructors / Destructors for GSocket */
 
 GSocket::GSocket()
+	: m_fd(INVALID_SOCKET)
+	, m_local(NULL)
+	, m_peer(NULL)
+	, m_error(GSOCK_NOERROR)
+	, m_non_blocking(false)
+	, m_server(false)
+	, m_stream(true)
+	, m_establishing(false)
+	, m_reusable(false)
+	, m_timeout(10*60*1000) /* 10 minutes * 60 sec * 1000 millisec */
+	, m_detected(0)
+	, m_gui_dependent(NULL)
 {
   int i;
 
-  m_fd                  = INVALID_SOCKET;
   for (i=0;i<GSOCK_MAX_EVENT;i++)
   {
     m_cbacks[i]         = NULL;
   }
-  m_detected            = 0;
-  m_local               = NULL;
-  m_peer                = NULL;
-  m_error               = GSOCK_NOERROR;
-  m_server              = false;
-  m_stream              = true;
-  m_gui_dependent       = NULL;
-  m_non_blocking        = false;
-  m_reusable            = false;
-  m_timeout             = 10*60*1000;
-                                /* 10 minutes * 60 sec * 1000 millisec */
-  m_establishing        = false;
 
   assert(gs_gui_functions);
   /* Per-socket GUI-specific initialization */
Index: src/unix/mimetype.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/mimetype.cpp,v
retrieving revision 1.53
diff -u -r1.53 mimetype.cpp
--- src/unix/mimetype.cpp	2005/06/13 12:19:33	1.53
+++ src/unix/mimetype.cpp	2005/08/10 22:20:32
@@ -1474,9 +1474,9 @@
 
 
 wxMimeTypesManagerImpl::wxMimeTypesManagerImpl()
+	: m_initialized(false)
+	, m_mailcapStylesInited(0)
 {
-    m_initialized = false;
-    m_mailcapStylesInited = 0;
 }
 
 void wxMimeTypesManagerImpl::InitIfNeeded()
@@ -2403,7 +2403,11 @@
          needsterminal,
          copiousoutput;
 
-    MailcapLineData() { testfailed = needsterminal = copiousoutput = false; }
+    MailcapLineData()
+	    : testfailed(false)
+	    , needsterminal(false)
+	    , copiousoutput(false)
+	{ }
 };
 
 // process a non-standard (i.e. not the first or second one) mailcap field
Index: src/unix/snglinst.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/snglinst.cpp,v
retrieving revision 1.16
diff -u -r1.16 snglinst.cpp
--- src/unix/snglinst.cpp	2004/11/12 03:30:00	1.16
+++ src/unix/snglinst.cpp	2005/08/10 22:20:32
@@ -116,9 +116,9 @@
 {
 public:
     wxSingleInstanceCheckerImpl()
+	    : m_fdLock(-1)
+	    , m_pidLocker(0)
     {
-        m_fdLock = -1;
-        m_pidLocker = 0;
     }
 
     bool Create(const wxString& name);
Index: src/unix/stackwalk.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/stackwalk.cpp,v
retrieving revision 1.5
diff -u -r1.5 stackwalk.cpp
--- src/unix/stackwalk.cpp	2005/07/14 09:14:31	1.5
+++ src/unix/stackwalk.cpp	2005/08/10 22:20:32
@@ -49,8 +49,8 @@
 public:
     // ctor parameters are passed to popen()
     wxStdioPipe(const char *command, const char *type)
+	    : m_fp(popen(command, type))
     {
-        m_fp = popen(command, type);
     }
 
     // conversion to stdio FILE
Index: src/unix/threadpsx.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/threadpsx.cpp,v
retrieving revision 1.81
diff -u -r1.81 threadpsx.cpp
--- src/unix/threadpsx.cpp	2005/08/04 01:06:36	1.81
+++ src/unix/threadpsx.cpp	2005/08/10 22:20:32
@@ -832,19 +832,19 @@
 // ----------------------------------------------------------------------------
 
 wxThreadInternal::wxThreadInternal()
+	: m_threadId(0)
+	, m_state(STATE_NEW)
+	, m_prio(WXTHREAD_DEFAULT_PRIORITY)
+	, m_cancelled(FALSE)
+
+	// set to TRUE only when the thread starts waiting on m_semSuspend
+	, m_isPaused(FALSE)
+	, m_exitcode(0)
+
+	// defaults for joinable threads
+	, m_shouldBeJoined(TRUE)
+	, m_isDetached(FALSE)
 {
-    m_state = STATE_NEW;
-    m_cancelled = FALSE;
-    m_prio = WXTHREAD_DEFAULT_PRIORITY;
-    m_threadId = 0;
-    m_exitcode = 0;
-
-    // set to TRUE only when the thread starts waiting on m_semSuspend
-    m_isPaused = FALSE;
-
-    // defaults for joinable threads
-    m_shouldBeJoined = TRUE;
-    m_isDetached = FALSE;
 }
 
 wxThreadInternal::~wxThreadInternal()
@@ -1053,13 +1053,11 @@
 // -----------------------------------------------------------------------------
 
 wxThread::wxThread(wxThreadKind kind)
+	: m_internal(new wxThreadInternal())
+	, m_isDetached(kind == wxTHREAD_DETACHED)
 {
     // add this thread to the global list of all threads
     gs_allThreads.Add(this);
-
-    m_internal = new wxThreadInternal();
-
-    m_isDetached = kind == wxTHREAD_DETACHED;
 }
 
 wxThreadError wxThread::Create(unsigned int WXUNUSED(stackSize))

 	  	 
