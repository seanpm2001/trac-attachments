diff -ru wxWidgets.orig/docs/latex/wx/image.tex wxWidgets/docs/latex/wx/image.tex
--- wxWidgets.orig/docs/latex/wx/image.tex	2005-08-05 20:56:10.000000000 +1000
+++ wxWidgets/docs/latex/wx/image.tex	2005-10-28 03:15:15.000000000 +1000
@@ -293,6 +293,16 @@
 (which takes wxImage and depth as its arguments) instead.
 
 
+\membersection{wxImage::ConvertToGreyscale}\label{wximageconverttogreyscale}
+
+\constfunc{wxImage}{ConvertToGreyscale}{\param{double}{ lr = 0.299}, \param{double}{ lg = 0.587}, \param{double}{ lb = 0.114}}
+
+Returns a greyscale version of the image. The returned image uses the luminance
+component of the original to calculate the greyscale. Defaults to using
+ITU-T BT.601 when converting to YUV, where every pixel equals
+(R * {\it lr}) + (G * {\it lg}) + (B * {\it lb}).
+
+
 \membersection{wxImage::ConvertToMono}\label{wxbitmapconverttomono}
 
 \constfunc{wxImage}{ConvertToMono}{\param{unsigned char}{ r}, \param{unsigned char}{ g}, \param{unsigned char}{ b}}
diff -ru wxWidgets.orig/include/wx/image.h wxWidgets/include/wx/image.h
--- wxWidgets.orig/include/wx/image.h	2005-09-26 12:19:50.000000000 +1000
+++ wxWidgets/include/wx/image.h	2005-10-28 03:18:54.000000000 +1000
@@ -160,7 +160,7 @@
     public:
       RGBValue(unsigned char r=0, unsigned char g=0, unsigned char b=0)
         : red(r), green(g), blue(b) {}
-        unsigned char red;  
+        unsigned char red;
         unsigned char green;
         unsigned char blue;
     };
@@ -171,7 +171,7 @@
     public:
         HSVValue(double h=0.0, double s=0.0, double v=0.0)
             : hue(h), saturation(s), value(v) {}
-        double hue;  
+        double hue;
         double saturation;
         double value;
     };
@@ -241,6 +241,10 @@
     void Replace( unsigned char r1, unsigned char g1, unsigned char b1,
                   unsigned char r2, unsigned char g2, unsigned char b2 );
 
+    // Convert to greyscale image. Uses the luminance component (Y) of the image.
+    // The luma value (YUV) is calculated using (R * lr) + (G * lg) + (B * lb), defaults to ITU-T BT.601
+    wxImage ConvertToGreyscale( double lr = 0.299, double lg = 0.587, double lb = 0.114 ) const;
+
     // convert to monochrome image (<r,g,b> will be replaced by white,
     // everything else by black)
     wxImage ConvertToMono( unsigned char r, unsigned char g, unsigned char b ) const;
diff -ru wxWidgets.orig/src/common/image.cpp wxWidgets/src/common/image.cpp
--- wxWidgets.orig/src/common/image.cpp	2005-10-28 02:51:14.000000000 +1000
+++ wxWidgets/src/common/image.cpp	2005-10-28 03:21:35.000000000 +1000
@@ -769,6 +769,46 @@
         }
 }
 
+wxImage wxImage::ConvertToGreyscale( double lr, double lg, double lb ) const
+{
+    wxImage image;
+
+    wxCHECK_MSG( Ok(), image, wxT("invalid image") );
+
+    image.Create(M_IMGDATA->m_width, M_IMGDATA->m_height, false);
+
+    unsigned char *dest = image.GetData();
+
+    wxCHECK_MSG( dest, image, wxT("unable to create image") );
+
+    unsigned char *src = M_IMGDATA->m_data;
+    bool hasMask = M_IMGDATA->m_hasMask;
+    unsigned char maskRed = M_IMGDATA->m_maskRed;
+    unsigned char maskGreen = M_IMGDATA->m_maskGreen;
+    unsigned char maskBlue = M_IMGDATA->m_maskBlue;
+
+    if ( hasMask )
+        image.SetMaskColour(maskRed, maskGreen, maskBlue);
+
+    const long size = M_IMGDATA->m_width * M_IMGDATA->m_height;
+    for ( long i = 0; i < size; i++, src += 3, dest += 3 )
+    {
+        // don't modify the mask
+        if ( hasMask && src[0] == maskRed && src[1] == maskGreen && src[2] == maskBlue )
+        {
+            memcpy(dest, src, 3);
+        }
+        else
+        {
+            // calculate the luma
+            double luma = (src[0] * lr + src[1] * lg + src[2] * lb) + 0.5;
+            dest[0] = dest[1] = dest[2] = wx_static_cast(unsigned char, luma);
+        }
+    }
+
+    return image;
+}
+
 wxImage wxImage::ConvertToMono( unsigned char r, unsigned char g, unsigned char b ) const
 {
     wxImage image;

 	  	 
