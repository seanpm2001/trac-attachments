Index: src/msw/calctrl.cpp
===================================================================
--- src/msw/calctrl.cpp	(revision 70555)
+++ src/msw/calctrl.cpp	(working copy)
@@ -120,8 +120,8 @@
 
     SetDate(dt.IsValid() ? dt : wxDateTime::Today());
 
-    if ( SetHolidayAttrs() )
-        UpdateMarks();
+    (void)SetHolidayAttrs();
+    UpdateMarks();
 
     Connect(wxEVT_LEFT_DOWN,
             wxMouseEventHandler(wxCalendarCtrl::MSWOnClick));
@@ -399,7 +399,7 @@
     // we show only one full month but there can be some days from the month
     // before it and from the one after it so days from 3 different months can
     // be partially shown
-    MONTHDAYSTATE states[3] = { 0 };
+    MONTHDAYSTATE states[14] = { 0 };
     const DWORD nMonths = MonthCal_GetMonthRange(GetHwnd(), GMR_DAYSTATE, NULL);
 
     // although in principle the calendar might not show any days from the
@@ -412,15 +412,12 @@
     // in its window if you "zoom out" of it by double clicking on free areas
     // so the return value can be (much, in case of decades view) greater than
     // 3 but in this case marks are not visible anyhow so simply ignore it
-    if ( nMonths < WXSIZEOF(states) )
+    if ( nMonths>=2 && nMonths <= WXSIZEOF(states) )
     {
-        wxFAIL_MSG("unexpectedly few months shown in the control");
-    }
-    else if ( nMonths == WXSIZEOF(states) )
-    {
-        // the fully visible month is the one in the middle
+        // the fully visible month is the second one
         states[1] = m_marks | m_holidays;
 
+        wxLogDebug("updatemarks");
         if ( !MonthCal_SetDayState(GetHwnd(), nMonths, states) )
         {
             wxLogLastError(wxT("MonthCal_SetDayState"));
@@ -462,8 +459,8 @@
                     {
                         // month changed, need to update the holidays if we use
                         // them
-                        if ( SetHolidayAttrs() )
-                            UpdateMarks();
+                        (void)SetHolidayAttrs();
+                        UpdateMarks();
                     }
                 }
             }
@@ -472,9 +469,23 @@
         case MCN_GETDAYSTATE:
             {
                 const NMDAYSTATE * const ds = (NMDAYSTATE *)lParam;
+
+                wxDateTime startDate;
+                startDate.SetFromMSWSysDate(ds->stStart);
+
+                wxDateTime currentDate = m_date;
+                // for comparsion with startDate from above, set day to 1
+                currentDate.SetDay(1);
+
                 for ( int i = 0; i < ds->cDayState; i++ )
                 {
+                  // set holiday/marks only for the "current" month
+                  if ( startDate == currentDate ) 
                     ds->prgDayState[i] = m_marks | m_holidays;
+                  else
+                    ds->prgDayState[i] = 0;
+
+                  startDate += wxDateSpan(0, 1, 0, 0);    // add one month
                 }
             }
             break;
