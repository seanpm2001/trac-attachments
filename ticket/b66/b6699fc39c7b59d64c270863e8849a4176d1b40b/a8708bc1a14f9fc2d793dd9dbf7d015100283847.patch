--- datetime.orig.cpp	Fri Oct 08 08:05:36 2004
+++ datetime.cpp	Fri Feb 11 10:39:10 2005
@@ -347,5 +347,5 @@
 {
     wxChar buf[4096];
-    if ( !wxStrftime(buf, WXSIZEOF(buf), format, tm) )
+	if ( !wxStrftime(buf, WXSIZEOF(buf), format, tm) )
     {
         // buffer is too small?
@@ -802,5 +802,5 @@
 {
     wxCHECK_MSG( month != Inv_Month, _T(""), _T("invalid month") );
-
+#ifndef __WXWINCE__
     // notice that we must set all the fields to avoid confusing libc (GNU one
     // gets confused to a crash if we don't do this)
@@ -810,4 +810,47 @@
 
     return CallStrftime(flags == Name_Abbr ? _T("%b") : _T("%B"), &tm);
+#else
+	wxString ret;
+	switch(month)
+	{
+		case Jan: 
+			ret = (flags == Name_Abbr ? wxT("Jan"): wxT("January"));
+			break;
+		case Feb: 
+			ret = (flags == Name_Abbr ? wxT("Feb"): wxT("Febuary"));
+			break;
+		case Mar: 
+			ret = (flags == Name_Abbr ? wxT("Mar"): wxT("March"));
+			break;
+		case Apr: 
+			ret = (flags == Name_Abbr ? wxT("Apr"): wxT("April"));
+			break;
+		case May: 
+			ret = (flags == Name_Abbr ? wxT("May"): wxT("May"));
+			break;
+		case Jun: 
+			ret = (flags == Name_Abbr ? wxT("Jun"): wxT("June"));
+			break;
+		case Jul: 
+			ret = (flags == Name_Abbr ? wxT("Jul"): wxT("July"));
+			break;
+		case Aug: 
+			ret = (flags == Name_Abbr ? wxT("Aug"): wxT("August"));
+			break;
+		case Sep: 
+			ret = (flags == Name_Abbr ? wxT("Sep"): wxT("September"));
+			break;
+		case Oct: 
+			ret = (flags == Name_Abbr ? wxT("Oct"): wxT("October"));
+			break;
+		case Nov: 
+			ret = (flags == Name_Abbr ? wxT("Nov"): wxT("November"));
+			break;
+		case Dec: 
+			ret = (flags == Name_Abbr ? wxT("Dec"): wxT("December"));
+			break;
+	}
+	return ret;
+#endif
 }
 
@@ -817,5 +860,5 @@
 {
     wxCHECK_MSG( wday != Inv_WeekDay, _T(""), _T("invalid weekday") );
-
+#ifndef __WXWINCE__
     // take some arbitrary Sunday (but notice that the day should be such that
     // after adding wday to it below we still have a valid date, e.g. don't
@@ -835,4 +878,33 @@
     // ... and call strftime()
     return CallStrftime(flags == Name_Abbr ? _T("%a") : _T("%A"), &tm);
+#else
+	wxString ret;
+	switch(wday)
+	{
+		case Sun: 
+			ret = (flags == Name_Abbr ? wxT("Sun") : wxT("Sunday"));
+			break;
+		case Mon:
+			ret = (flags == Name_Abbr ? wxT("Mon") : wxT("Monday"));
+			break;
+		case Tue:
+			ret = (flags == Name_Abbr ? wxT("Tue") : wxT("Tuesday"));
+			break;
+		case Wed:
+			ret = (flags == Name_Abbr ? wxT("Wed") : wxT("Wednesday"));
+			break;
+		case Thu:
+			ret = (flags == Name_Abbr ? wxT("Thu") : wxT("Thursday"));
+			break;
+		case Fri:
+			ret = (flags == Name_Abbr ? wxT("Fri") : wxT("Friday"));
+			break;
+		case Sat:
+			ret = (flags == Name_Abbr ? wxT("Sat") : wxT("Saturday"));
+			break;
+	}
+	return ret;
+
+#endif
 }
 
@@ -877,5 +949,5 @@
 {
     // TODO use LOCALE_ICOUNTRY setting under Win32
-
+#ifndef __WXWINCE__
     if ( ms_country == Country_Unknown )
     {
@@ -911,4 +983,7 @@
         }
     }
+#else
+     ms_country = USA;
+#endif
 
     return ms_country;
@@ -2100,9 +2175,11 @@
             }
         }
-
+#ifndef __WXWINCE__
+	//Windows CE doesn't support strftime or wcsftime, so we use the generic implementation
         if ( tm )
         {
             return CallStrftime(format, tm);
         }
+#endif
         //else: use generic code below
     }
@@ -2183,4 +2260,5 @@
                 case _T('c'):       // locale default date and time  representation
                 case _T('x'):       // locale default date representation
+#ifndef __WXWINCE__
                     //
                     // the problem: there is no way to know what do these format
@@ -2312,4 +2390,9 @@
                         res += str;
                     }
+#else
+					//Use "%m/%d/%y %H:%M:%S" format instead
+					res += wxString::Format(wxT("%02d/%02d/%04d %02d:%02d:%02d"),
+							tm.mon+1,tm.mday, tm.year, tm.hour, tm.min, tm.sec);
+#endif
                     break;
 
@@ -2348,5 +2431,9 @@
 
                 case _T('p'):       // AM or PM string
+#ifndef __WXWINCE__
                     res += CallStrftime(_T("%p"), &tmTimeOnly);
+#else
+					res += (tmTimeOnly.tm_hour > 12) ? wxT("pm") : wxT("am");
+#endif
                     break;
 
@@ -2371,5 +2458,9 @@
                 case _T('X'):       // locale default time representation
                     // just use strftime() to format the time for us
+#ifndef __WXWINCE__
                     res += CallStrftime(_T("%X"), &tmTimeOnly);
+#else
+					res += wxString::Format(wxT("%02d:%02d:%02d"),tm.hour, tm.min, tm.sec);
+#endif
                     break;
 
@@ -2383,5 +2474,7 @@
 
                 case _T('Z'):       // timezone name
+#ifndef __WXWINCE__
                     res += CallStrftime(_T("%Z"), &tmTimeOnly);
+#endif
                     break;
 

 	  	 
