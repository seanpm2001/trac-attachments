Index: src/msw/timer.cpp
===================================================================
--- src/msw/timer.cpp	(revision 63483)
+++ src/msw/timer.cpp	(working copy)
@@ -118,22 +118,12 @@
 // wxMSWTimerImpl class
 // ----------------------------------------------------------------------------
 
-wxMSWTimerImpl::wxMSWTimerImpl(wxTimer *timer)
-:wxTimerImpl(timer)
-{
-    m_id = GetNewTimerId(this);
-}
-
-wxMSWTimerImpl::~wxMSWTimerImpl()
-{
-    TimerMap().erase(m_id);
-}
-
 bool wxMSWTimerImpl::Start(int milliseconds, bool oneShot)
 {
     if ( !wxTimerImpl::Start(milliseconds, oneShot) )
         return false;
 
+    m_id = GetNewTimerId(this);
     // SetTimer() normally returns just idTimer but this might change in the
     // future so use its return value to be safe
     UINT_PTR ret = ::SetTimer
@@ -157,6 +147,8 @@
 void wxMSWTimerImpl::Stop()
 {
     ::KillTimer(wxTimerHiddenWindowModule::GetHWND(), m_id);
+    TimerMap().erase(m_id);
+    m_id = 0;
 }
 
 // ----------------------------------------------------------------------------
Index: include/wx/msw/private/timer.h
===================================================================
--- include/wx/msw/private/timer.h	(revision 63483)
+++ include/wx/msw/private/timer.h	(working copy)
@@ -19,8 +19,7 @@
 class WXDLLIMPEXP_BASE wxMSWTimerImpl : public wxTimerImpl
 {
 public:
-    wxMSWTimerImpl(wxTimer *timer);
-    virtual ~wxMSWTimerImpl();
+    wxMSWTimerImpl(wxTimer *timer) : wxTimerImpl(timer) { m_id = 0; };
 
     virtual bool Start(int milliseconds = -1, bool oneShot = false);
     virtual void Stop();
