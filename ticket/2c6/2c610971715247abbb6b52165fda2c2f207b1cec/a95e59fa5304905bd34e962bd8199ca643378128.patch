Index: install.txt
===================================================================
--- install.txt	(revision 65008)
+++ install.txt	(working copy)
@@ -704,12 +704,14 @@
   (SHARED=0).
 
 UNICODE=0
-  To build ANSI versions of the libraries, add UNICODE=0 to make invocation
-  (default is UNICODE=1). If you want to be able to use Unicode version on
-  Windows9x, you will need to set MSLU=1 as well.
+  To build ANSI versions of the libraries set UNICODE=0.
+  (default is UNICODE=1).
+  If you want to be able to use Unicode version on Windows9x,
+  you will need to set both MSLU=1 and UNICODE=1.
 
-  This option affect name of the library ('u' is appended) and the directory
-  where the library and setup.h are store (ditto).
+  This option affects the name of the library ('u' is appended for 
+  UNICODE=1) and the directory where the library and setup.h are stored
+  (ditto).
 
 WXUNIV=1
   Build wxUniversal instead of native wxMSW (see
@@ -719,11 +721,11 @@
 ----------------------------------------------------------------
 
 MONOLITHIC=1
+  Build single library ("monolithic build") using MONOLITHIC=1.
   Starting with version 2.5.1, wxWidgets has the ability to be built as
   several smaller libraries instead of single big one as used to be the case
-  in 2.4 and older versions. This is called "multilib build" and is the
-  default behaviour of makefiles. You can still build single library
-  ("monolithic build") by setting MONOLITHIC variable to 1.
+  in 2.4 and older versions. That is called "multilib build" and is the
+  default behaviour of makefiles.
 
 USE_GUI=0
   Disable building GUI parts of the library, build only wxBase components used
@@ -737,11 +739,6 @@
   OpenGL library is always built as additional library, even in monolithic
   build!
 
-USE_ODBC=1
-  Build two additional libraries in multilib mode, one with database
-  classes and one with wxGrid database support. You must
-  #define wxUSE_ODBC 1 in setup.h
-
 USE_HTML=0
   Do not build wxHTML library. If MONOLITHIC=1, then you must also
   #define wxUSE_HTML 1 in setup.h.
@@ -768,16 +765,23 @@
 
 DEBUG_FLAG=0
 DEBUG_FLAG=1
-  If set to 1, define __WXDEBUG__ symbol, append 'd' to library name and do
-  sanity checks at runtime. If set to 0, don't do it. By default, this is
-  governed by BUILD option (if 'debug', DEBUG_FLAG=1, if 'release' it is 0),
-  but it is sometimes desirable to modify default behaviour and e.g. define
-  __WXDEBUG__ even in release builds.
+DEBUG_FLAG=2
+  Specifies the level of debug support. By default it is set to 1 for any
+  BUILD option ('debug' or 'release'). Actual meanings:
+  0:  No assertion macros at all. Arguably this should only be used
+      when optimizing for resource-constrained systems (i.e. embedded ones).
+  1:  Default level, most of the assertions are enabled.
+  2:  Maximal (at least for now): asserts which are "expensive"
+      (performance-wise) or only make sense for finding errors in wxWidgets
+      itself, as opposed to bugs in applications using it, are also enabled.
+  If DEBUG_FLAG!=0, __WXDEBUG__ symbol is also defined.
 
+DEBUG_INFO=default
 DEBUG_INFO=0
 DEBUG_INFO=1
-  Same as DEBUG_FLAG in behaviour, this option affects whether debugging
-  information is included in the executable or not.
+  This option affects whether debugging information is included
+  in the executable or not. If omitted or set to 'default' its value
+  is determined the value of the BUILD option.
 
 TARGET_CPU=AMD64|IA64
   (VC++ only.) Set this variable to build for x86_64 systems. If unset, x86
