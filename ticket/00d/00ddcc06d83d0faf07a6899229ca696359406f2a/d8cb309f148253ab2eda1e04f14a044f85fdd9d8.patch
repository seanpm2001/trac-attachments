Index: include/wx/gtk/window.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/window.h,v
retrieving revision 1.139
diff -b -u -2 -r1.139 window.h
--- include/wx/gtk/window.h	2006/02/09 03:50:59	1.139
+++ include/wx/gtk/window.h	2006/03/12 07:32:51
@@ -157,4 +157,11 @@
     void ConnectWidget( GtkWidget *widget );
 
+    // Override NeedsMnemonicGtkWidget and return true if your
+    // needs to set its mnemonic widget, such as for a 
+    // GtkLabel for wxStaticText, then do the actual
+    // setting of the widget inside DoSetMnemonicGtkWidget
+    virtual bool NeedsMnemonicGtkWidget() const;
+    virtual void DoSetMnemonicGtkWidget(GtkWidget* w);
+
     // Returns the default context which usually is anti-aliased
     PangoContext   *GtkGetPangoDefaultContext();
Index: include/wx/gtk/control.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/control.h,v
retrieving revision 1.31
diff -b -u -2 -r1.31 control.h
--- include/wx/gtk/control.h	2005/12/18 16:37:51	1.31
+++ include/wx/gtk/control.h	2006/03/12 07:32:51
@@ -67,6 +67,9 @@
     void GTKSetLabelForLabel(GtkLabel *w, const wxString& label);
 
-    // as GTKSetLabelForLabel() but for a GtkFrame widget
+    // GtkFrame helpers
+    GtkWidget* GTKCreateFrame(const wxString& label);
     void GTKSetLabelForFrame(GtkFrame *w, const wxString& label);
+    void GTKFrameApplyWidgetStyle(GtkFrame* w, GtkRcStyle* rc);
+    void GTKFrameSetMnemonicWidget(GtkFrame* w, GtkWidget* widget);
 
     // remove mnemonics ("&"s) from the label
Index: include/wx/gtk/statbox.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/statbox.h,v
retrieving revision 1.17
diff -b -u -2 -r1.17 statbox.h
--- include/wx/gtk/statbox.h	2005/09/23 12:49:18	1.17
+++ include/wx/gtk/statbox.h	2006/03/12 07:32:51
@@ -44,4 +44,7 @@
 
 protected:
+    bool NeedsMnemonicGtkWidget() const;
+    void DoSetMnemonicGtkWidget(GtkWidget* w);
+
     void DoApplyWidgetStyle(GtkRcStyle *style);
     
Index: include/wx/gtk/radiobox.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/radiobox.h,v
retrieving revision 1.47
diff -b -u -2 -r1.47 radiobox.h
--- include/wx/gtk/radiobox.h	2006/02/08 21:45:44	1.47
+++ include/wx/gtk/radiobox.h	2006/03/12 07:32:52
@@ -128,4 +128,7 @@
     void DoApplyWidgetStyle(GtkRcStyle *style);
 
+    bool NeedsMnemonicGtkWidget() const;
+    void DoSetMnemonicGtkWidget(GtkWidget* w);
+
     // common part of all ctors
     void Init();
Index: include/wx/gtk/stattext.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/stattext.h,v
retrieving revision 1.20
diff -b -u -2 -r1.20 stattext.h
--- include/wx/gtk/stattext.h	2005/09/23 12:49:19	1.20
+++ include/wx/gtk/stattext.h	2006/03/12 07:32:52
@@ -66,4 +66,7 @@
 
 protected:
+    bool NeedsMnemonicGtkWidget() const;
+    void DoSetMnemonicGtkWidget(GtkWidget* w);
+
     virtual void DoSetSize(int x, int y,
                            int width, int height,
Index: src/gtk/control.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/control.cpp,v
retrieving revision 1.48
diff -b -u -2 -r1.48 control.cpp
--- src/gtk/control.cpp	2006/01/22 20:29:13	1.48
+++ src/gtk/control.cpp	2006/03/12 07:32:52
@@ -67,5 +67,4 @@
 }
 
-
 void wxControl::PostCreation(const wxSize& size)
 {
@@ -111,15 +110,45 @@
 }
 
+// ----------------------------------------------------------------------------
+// GtkFrame helpers
+//
+// GtkFrames do in fact support mnemonics in GTK2+ but not through
+// gtk_frame_set_label, rather you need to use a custom label widget
+// instead (idea gleaned from the native gtk font dialog code in GTK)
+// ----------------------------------------------------------------------------
+
+GtkWidget* wxControl::GTKCreateFrame(const wxString& label)
+{
+    const wxString labelGTK = GTKConvertMnemonics(label);
+    GtkWidget* labelwidget = gtk_label_new_with_mnemonic(wxGTK_CONV(labelGTK));
+    gtk_widget_show(labelwidget); // without this it won't show...
+
+    GtkWidget* framewidget = gtk_frame_new(NULL);
+    gtk_frame_set_label_widget(GTK_FRAME(framewidget), labelwidget);
+
+    return framewidget; //note that the label is already set so you'll 
+                        //only need to call wxControl::SetLabel afterwards
+}
+
 void wxControl::GTKSetLabelForFrame(GtkFrame *w, const wxString& label)
 {
-    wxControl::SetLabel(label);
+    GtkLabel* labelwidget = GTK_LABEL(gtk_frame_get_label_widget(w));
+    GTKSetLabelForLabel(labelwidget, label);
+}
+
+void wxControl::GTKFrameApplyWidgetStyle(GtkFrame* w, GtkRcStyle* style)
+{
+    gtk_widget_modify_style(GTK_WIDGET(w), style);
+    gtk_widget_modify_style(gtk_frame_get_label_widget (w), style);
+}
 
-    // frames don't support mnemonics even under GTK+ 2
-    const wxString labelGTK = GTKRemoveMnemonics(label);
+void wxControl::GTKFrameSetMnemonicWidget(GtkFrame* w, GtkWidget* widget)
+{
+    GtkLabel* labelwidget = GTK_LABEL(gtk_frame_get_label_widget(w));
 
-    gtk_frame_set_label(w, labelGTK.empty() ? (char *)NULL
-                                            : wxGTK_CONV(labelGTK));
+    gtk_label_set_mnemonic_widget(labelwidget, widget);
 }
 
+// ----------------------------------------------------------------------------
 // worker function implementing both GTKConvert/RemoveMnemonics()
 //
@@ -127,4 +156,6 @@
 // it doesn't support mnemonics anyhow but this would make the code so ugly
 // that we do the same thing for GKT+ 1 and 2
+// ----------------------------------------------------------------------------
+
 enum MnemonicsFlag
 {
Index: src/gtk/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/window.cpp,v
retrieving revision 1.583
diff -b -u -2 -r1.583 window.cpp
--- src/gtk/window.cpp	2006/03/09 13:36:53	1.583
+++ src/gtk/window.cpp	2006/03/12 07:32:55
@@ -51,5 +51,4 @@
 #include "wx/log.h"
 #include "wx/fontutil.h"
-#include "wx/stattext.h"
 
 #ifdef __WXDEBUG__
@@ -3607,4 +3606,14 @@
 }
 
+bool wxWindowGTK::NeedsMnemonicGtkWidget() const
+{
+    return false; //none needed by default
+}
+
+void wxWindowGTK::DoSetMnemonicGtkWidget(GtkWidget* w)
+{
+    //nothing to do by default since none is needed
+}
+
 void wxWindowGTK::RealizeTabOrder()
 {
@@ -3613,15 +3622,10 @@
         if ( !m_children.empty() )
         {
-#if wxUSE_STATTEXT
             // we don't only construct the correct focus chain but also use
-            // this opportunity to update the mnemonic widgets for all labels
-            //
-            // it would be nice to extract this code from here and put it in
-            // stattext.cpp to reduce dependencies but there is no really easy
-            // way to do it unfortunately
-            wxStaticText *lastLabel = NULL;
-#endif // wxUSE_STATTEXT
+            // this opportunity to update the mnemonic widgets for the widgets
+            // that need them
 
             GList *chain = NULL;
+            wxWindowGTK* mnemonicWindow = NULL;
 
             for ( wxWindowList::const_iterator i = m_children.begin();
@@ -3630,19 +3634,30 @@
             {
                 wxWindowGTK *win = *i;
-#if wxUSE_STATTEXT
-                if ( lastLabel )
+
+                if ( mnemonicWindow )
                 {
                     if ( win->AcceptsFocusFromKeyboard() )
                     {
-                        GtkLabel *l = GTK_LABEL(lastLabel->m_widget);
-                        gtk_label_set_mnemonic_widget(l, win->m_widget);
-                        lastLabel = NULL;
-                    }
+                        //wxComboBox et al. needs to focus on 
+                        //on a different widget then m_widget,
+                        //so if the main widget isn't focusable try the 
+                        //connect widget
+                        GtkWidget* w = win->m_widget;
+                        if(!GTK_WIDGET_CAN_FOCUS(w))
+                        {
+                            w = win->GetConnectWidget();
+                            if(!GTK_WIDGET_CAN_FOCUS(w))
+                                w = NULL;
                 }
-                else // check if this one is a label
+
+                        if(w)
                 {
-                    lastLabel = wxDynamicCast(win, wxStaticText);
+                            mnemonicWindow->DoSetMnemonicGtkWidget(w);
+                            mnemonicWindow = NULL;
+                        } 
+                    }
                 }
-#endif // wxUSE_STATTEXT
+                else if (win->NeedsMnemonicGtkWidget())
+                    mnemonicWindow = win;
 
                 chain = g_list_prepend(chain, win->m_widget);
Index: src/gtk/statbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/statbox.cpp,v
retrieving revision 1.44
diff -b -u -2 -r1.44 statbox.cpp
--- src/gtk/statbox.cpp	2006/01/22 20:29:16	1.44
+++ src/gtk/statbox.cpp	2006/03/12 07:32:55
@@ -57,6 +57,6 @@
     }
 
-    m_widget = gtk_frame_new(NULL);
-    SetLabel(label);
+    m_widget = GTKCreateFrame(label);
+    wxControl::SetLabel(label);
 
     m_parent->DoAddChild( this );
@@ -88,6 +88,15 @@
 void wxStaticBox::DoApplyWidgetStyle(GtkRcStyle *style)
 {
-    gtk_widget_modify_style(m_widget, style);
-    gtk_widget_modify_style(GTK_FRAME(m_widget)->label_widget, style);
+    GTKFrameApplyWidgetStyle(GTK_FRAME(m_widget), style);
+}
+
+bool wxStaticBox::NeedsMnemonicGtkWidget() const
+{
+    return true;
+}
+
+void wxStaticBox::DoSetMnemonicGtkWidget(GtkWidget* w)
+{
+    GTKFrameSetMnemonicWidget(GTK_FRAME(m_widget), w);
 }
 
Index: src/gtk/stattext.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/stattext.cpp,v
retrieving revision 1.64
diff -b -u -2 -r1.64 stattext.cpp
--- src/gtk/stattext.cpp	2006/02/05 22:41:39	1.64
+++ src/gtk/stattext.cpp	2006/03/12 07:32:55
@@ -167,4 +167,14 @@
 }
 
+bool wxStaticText::NeedsMnemonicGtkWidget() const
+{
+    return true;
+}
+
+void wxStaticText::DoSetMnemonicGtkWidget(GtkWidget* w)
+{
+    gtk_label_set_mnemonic_widget(GTK_LABEL(m_widget), w);
+}
+
 // static
 wxVisualAttributes
Index: src/gtk/radiobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/radiobox.cpp,v
retrieving revision 1.112
diff -b -u -2 -r1.112 radiobox.cpp
--- src/gtk/radiobox.cpp	2006/02/16 11:26:03	1.112
+++ src/gtk/radiobox.cpp	2006/03/12 07:32:55
@@ -213,6 +213,6 @@
     }
 
-    m_widget = gtk_frame_new(NULL);
-    SetLabel(title);
+    m_widget = GTKCreateFrame(title);
+    wxControl::SetLabel(title);
 
     // majorDim may be 0 if all trailing parameters were omitted, so don't
@@ -538,6 +538,5 @@
 void wxRadioBox::DoApplyWidgetStyle(GtkRcStyle *style)
 {
-    gtk_widget_modify_style( m_widget, style );
-    gtk_widget_modify_style(GTK_FRAME(m_widget)->label_widget, style);
+    GTKFrameApplyWidgetStyle(GTK_FRAME(m_widget), style);
 
     wxList::compatibility_iterator node = m_boxes.GetFirst();
@@ -551,4 +550,14 @@
         node = node->GetNext();
     }
+}
+
+bool wxRadioBox::NeedsMnemonicGtkWidget() const
+{
+    return true;
+}
+
+void wxRadioBox::DoSetMnemonicGtkWidget(GtkWidget* w)
+{
+    GTKFrameSetMnemonicWidget(GTK_FRAME(m_widget), w);
 }
 
Index: docs/changes.txt
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/changes.txt,v
retrieving revision 1.819
diff -b -u -2 -r1.819 changes.txt
--- docs/changes.txt	2006/02/12 02:21:13	1.819
+++ docs/changes.txt	2006/03/12 07:32:58
@@ -152,4 +152,9 @@
 - Fixed problems with CJK input method.
 - Implemented ScrollLines/Pages() for all windows (Paul Cornett)
+- Fixed focusing with mnemonic accelerator keys on wxStaticText which
+  is now able to focus on wxComboBox and possibly other controls
+  previously unable to be focused upon before
+- Enabled mnemonics and the corresponding accelerator keys for 
+  wxStaticBox and wxRadioBox
 
 wxMac:

 	  	 
