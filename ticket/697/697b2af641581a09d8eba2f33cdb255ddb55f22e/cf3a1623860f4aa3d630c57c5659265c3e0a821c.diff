Index: configure.in
===================================================================
--- configure.in	(revision 53976)
+++ configure.in	(working copy)
@@ -1954,6 +1954,27 @@
          AC_DEFINE(HAVE_EXT_HASH_MAP)
          AC_DEFINE(HAVE_GNU_CXX_HASH_MAP)
     fi
+
+    AC_CHECK_HEADER([tr1/unordered_map],
+        [AC_CACHE_CHECK([for tr1/unordered_map and tr1/unordered_set],
+            wx_cv_class_tr1unorderedmapset,
+            [AC_TRY_COMPILE([#include <tr1/unordered_map>
+                #include <tr1/unordered_set>],
+                [std::tr1::unordered_map<double*, char*, std::tr1::hash<double*>, std::equal_to<double*> > test1;
+                 std::tr1::unordered_set<char*, std::tr1::hash<char*>, std::equal_to<char*> > test2;],
+                wx_cv_class_tr1unorderedmapset=yes,
+                wx_cv_class_tr1unorderedmapset=no)
+            ]
+        )],
+        [],
+        [ ]
+    )
+
+    if test "$wx_cv_class_tr1unorderedmapset" = yes; then
+         AC_DEFINE(HAVE_TR1_UNORDERED_MAP)
+         AC_DEFINE(HAVE_TR1_UNORDERED_SET)
+    fi
+
 fi
 
 dnl check for atomic operations builtins for wx/atomic.h:
Index: setup.h.in
===================================================================
--- setup.h.in	(revision 53976)
+++ setup.h.in	(working copy)
@@ -673,6 +673,16 @@
 #undef HAVE_GNU_CXX_HASH_MAP
 
 /*
+ * Define if your compiler has std::tr1::unordered_map
+ */
+#undef HAVE_TR1_UNORDERED_MAP
+
+/*
+ * Define if your compiler has std::tr1::unordered_set
+ */
+#undef HAVE_TR1_UNORDERED_SET
+
+/*
  * Define if the compiler supports simple visibility declarations.
  */
 #undef HAVE_VISIBILITY
Index: include/wx/hashmap.h
===================================================================
--- include/wx/hashmap.h	(revision 53976)
+++ include/wx/hashmap.h	(working copy)
@@ -20,8 +20,22 @@
     #define HAVE_STL_HASH_MAP
 #endif
 
-#if wxUSE_STL && defined(HAVE_STL_HASH_MAP)
+#if defined(HAVE_TR1_UNORDERED_MAP) 
+    #define HAVE_STL_UNORDERED_MAP
+#endif
 
+#if wxUSE_STL && defined(HAVE_STL_UNORDERED_MAP)
+
+#if defined(HAVE_TR1_UNORDERED_MAP) 
+    #include <tr1/unordered_map>
+    #define WX_HASH_MAP_NAMESPACE std::tr1
+#endif
+
+#define _WX_DECLARE_HASH_MAP( KEY_T, VALUE_T, HASH_T, KEY_EQ_T, CLASSNAME, CLASSEXP ) \
+    typedef std::tr1::unordered_map< KEY_T, VALUE_T, HASH_T, KEY_EQ_T > CLASSNAME
+
+#elif wxUSE_STL && defined(HAVE_STL_HASH_MAP)
+
 #if defined(HAVE_EXT_HASH_MAP)
     #include <ext/hash_map>
 #elif defined(HAVE_HASH_MAP)
@@ -37,9 +51,7 @@
 #define _WX_DECLARE_HASH_MAP( KEY_T, VALUE_T, HASH_T, KEY_EQ_T, CLASSNAME, CLASSEXP ) \
     typedef WX_HASH_MAP_NAMESPACE::hash_map< KEY_T, VALUE_T, HASH_T, KEY_EQ_T > CLASSNAME
 
-#else // !wxUSE_STL || !defined(HAVE_STL_HASH_MAP)
-
-
+#else //!wxUSE_STL || (!defined(HAVE_STL_HASH_MAP) && !(defined(HAVE_STL_UNORDERED_MAP)) 
 #ifdef __WXWINCE__
 typedef int ptrdiff_t;
 #else
Index: include/wx/hashset.h
===================================================================
--- include/wx/hashset.h	(revision 53976)
+++ include/wx/hashset.h	(working copy)
@@ -14,8 +14,22 @@
 
 #include "wx/hashmap.h"
 
-#if wxUSE_STL && defined(HAVE_STL_HASH_MAP)
+#if defined(HAVE_TR1_UNORDERED_SET) 
+    #define HAVE_UNORDERED_SET
+#endif
 
+#if wxUSE_STL && defined(HAVE_UNORDERED_SET)
+
+#if defined(HAVE_TR1_UNORDERED_SET)
+    #include <tr1/unordered_set>
+#define _WX_DECLARE_HASH_SET( KEY_T, HASH_T, KEY_EQ_T, CLASSNAME, CLASSEXP )\
+    typedef std::tr1::unordered_set< KEY_T, HASH_T, KEY_EQ_T > CLASSNAME
+#else
+#error Update this code: unordered_set is available, but I do not know where.
+#endif
+
+#elif wxUSE_STL && defined(HAVE_STL_HASH_MAP)
+
 #if defined(HAVE_EXT_HASH_MAP)
     #include <ext/hash_set>
 #elif defined(HAVE_HASH_MAP)
