Index: wxWindows/src/gtk/combobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/gtk/combobox.cpp,v
retrieving revision 1.99
diff -b -u -2 -r1.99 combobox.cpp
--- wxWindows/src/gtk/combobox.cpp	2003/08/30 23:11:46	1.99
+++ wxWindows/src/gtk/combobox.cpp	2003/09/09 01:51:08
@@ -224,5 +224,5 @@
 }
 
-int wxComboBox::AppendCommon( const wxString &item )
+int wxComboBox::DoAppend( const wxString &item )
 {
     wxCHECK_MSG( m_widget != NULL, -1, wxT("invalid combobox") );
@@ -246,34 +246,17 @@
     gtk_widget_show( list_item );
 
-    EnableEvents();
-
-    return GetCount() - 1;
-}
+    const int count = GetCount();
 
-int wxComboBox::Append( const wxString &item )
-{
+    if ( (int)m_clientDataList.GetCount() < count )
     m_clientDataList.Append( (wxObject*) NULL );
+    if ( (int)m_clientObjectList.GetCount() < count )
     m_clientObjectList.Append( (wxObject*) NULL );
-
-    return AppendCommon( item );
-}
-
-int wxComboBox::Append( const wxString &item, void *clientData )
-{
-    m_clientDataList.Append( (wxObject*) clientData );
-    m_clientObjectList.Append( (wxObject*)NULL );
 
-    return AppendCommon( item );
-}
-
-int wxComboBox::Append( const wxString &item, wxClientData *clientData )
-{
-    m_clientDataList.Append( (wxObject*) NULL );
-    m_clientObjectList.Append( (wxObject*) clientData );
+    EnableEvents();
 
-    return AppendCommon( item );
+    return count - 1;
 }
 
-int wxComboBox::InsertCommon( const wxString &item, int pos )
+int wxComboBox::DoInsert( const wxString &item, int pos )
 {
     wxCHECK_MSG( !(GetWindowStyle() & wxCB_SORT), -1,
@@ -283,8 +266,8 @@
 
     int count = GetCount();
+    wxCHECK_MSG( (pos >= 0) && (pos <= count), -1, wxT("invalid index") );
+
     if (pos == count)
-    {
-        return AppendCommon(item);
-    }
+        return Append(item);
 
     DisableEvents();
@@ -308,59 +291,18 @@
 
     gtk_widget_show( list_item );
-
-    EnableEvents();
 
-    return pos;
-}
-
-int wxComboBox::Insert( const wxString &item, int pos )
-{
-    const int count = GetCount();
-    wxCHECK_MSG( (pos >= 0) && (pos <= count), -1, wxT("invalid index") );
+    count = GetCount();
 
-    if (pos == count)
-    {
-        return Append(item);
-    }
-
+    if ( (int)m_clientDataList.GetCount() < count )
     m_clientDataList.Insert( pos, (wxObject*) NULL );
+    if ( (int)m_clientObjectList.GetCount() < count )
     m_clientObjectList.Insert( pos, (wxObject*) NULL );
-
-    return InsertCommon( item, pos );
-}
 
-int wxComboBox::Insert( const wxString &item, int pos, void *clientData )
-{
-    int count = GetCount();
-    wxCHECK_MSG( (pos >= 0) && (pos <= count), -1, wxT("invalid index") );
-
-    if (pos == count)
-    {
-        return Append(item, clientData);
-    }
-
-    m_clientDataList.Insert( pos, (wxObject*) clientData );
-    m_clientObjectList.Insert( pos, (wxObject*)NULL );
-
-    return InsertCommon( item, pos );
-}
-
-int wxComboBox::Insert( const wxString &item, int pos, wxClientData *clientData )
-{
-    int count = GetCount();
-    wxCHECK_MSG( (pos >= 0) && (pos <= count), -1, wxT("invalid index") );
-
-    if (pos == count)
-    {
-        return Append(item, clientData);
-    }
-
-    m_clientDataList.Insert( pos, (wxObject*) NULL );
-    m_clientObjectList.Insert( pos, (wxObject*) clientData );
+    EnableEvents();
 
-    return InsertCommon( item, pos );
+    return pos;
 }
 
-void wxComboBox::SetClientData( int n, void* clientData )
+void wxComboBox::DoSetItemClientData( int n, void* clientData )
 {
     wxCHECK_RET( m_widget != NULL, wxT("invalid combobox") );
@@ -372,5 +314,5 @@
 }
 
-void* wxComboBox::GetClientData( int n ) const
+void* wxComboBox::DoGetItemClientData( int n ) const
 {
     wxCHECK_MSG( m_widget != NULL, NULL, wxT("invalid combobox") );
@@ -381,5 +323,5 @@
 }
 
-void wxComboBox::SetClientObject( int n, wxClientData* clientData )
+void wxComboBox::DoSetItemClientObject( int n, wxClientData* clientData )
 {
     wxCHECK_RET( m_widget != NULL, wxT("invalid combobox") );
@@ -394,5 +336,5 @@
 }
 
-wxClientData* wxComboBox::GetClientObject( int n ) const
+wxClientData* wxComboBox::DoGetItemClientObject( int n ) const
 {
     wxCHECK_MSG( m_widget != NULL, (wxClientData*)NULL, wxT("invalid combobox") );
@@ -410,5 +352,5 @@
 
     GtkWidget *list = GTK_COMBO(m_widget)->list;
-    gtk_list_clear_items( GTK_LIST(list), 0, Number() );
+    gtk_list_clear_items( GTK_LIST(list), 0, GetCount() );
 
     wxList::compatibility_iterator node = m_clientObjectList.GetFirst();
@@ -480,5 +422,5 @@
 }
 
-int wxComboBox::FindString( const wxString &item )
+int wxComboBox::FindString( const wxString &item ) const
 {
     wxCHECK_MSG( m_widget != NULL, -1, wxT("invalid combobox") );
@@ -579,5 +521,5 @@
 }
 
-int wxComboBox::Number() const
+int wxComboBox::GetCount() const
 {
     wxCHECK_MSG( m_widget != NULL, 0, wxT("invalid combobox") );
@@ -669,15 +611,11 @@
     wxCHECK_RET( m_widget != NULL, wxT("invalid combobox") );
 
+    if ( pos == GetLastPosition() )
+        pos = -1;
+
     GtkWidget *entry = GTK_COMBO(m_widget)->entry;
     gtk_entry_set_position( GTK_ENTRY(entry), (int)pos );
 }
 
-void wxComboBox::SetInsertionPointEnd()
-{
-    wxCHECK_RET( m_widget != NULL, wxT("invalid combobox") );
-
-    SetInsertionPoint( -1 );
-}
-
 long wxComboBox::GetInsertionPoint() const
 {
@@ -707,12 +645,4 @@
     gtk_editable_insert_text( GTK_EDITABLE(entry), value.c_str(), value.Length(), &pos );
 #endif
-}
-
-void wxComboBox::Remove(long from, long to)
-{
-    wxCHECK_RET( m_widget != NULL, wxT("invalid combobox") );
-
-    GtkWidget *entry = GTK_COMBO(m_widget)->entry;
-    gtk_editable_delete_text( GTK_EDITABLE(entry), (gint)from, (gint)to );
 }
 
Index: wxWindows/include/wx/gtk/combobox.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/gtk/combobox.h,v
retrieving revision 1.36
diff -b -u -2 -r1.36 combobox.h
--- wxWindows/include/wx/gtk/combobox.h	2003/08/30 23:03:07	1.36
+++ wxWindows/include/wx/gtk/combobox.h	2003/09/09 01:51:08
@@ -22,5 +22,5 @@
 
 #include "wx/object.h"
-#include "wx/control.h"
+#include "wx/ctrlsub.h"
 
 //-----------------------------------------------------------------------------
@@ -41,5 +41,5 @@
 //-----------------------------------------------------------------------------
 
-class wxComboBox : public wxControl
+class wxComboBox : public wxControlWithItems
 {
 public:
@@ -56,5 +56,7 @@
         Create(parent, id, value, pos, size, n, choices, style, validator, name);
     }
+
     ~wxComboBox();
+
     bool Create(wxWindow *parent, wxWindowID id,
            const wxString& value = wxEmptyString,
@@ -66,32 +68,15 @@
            const wxString& name = wxComboBoxNameStr);
 
-    int Append( const wxString &item );
-    int Append( const wxString &item, void* clientData );
-    int Append( const wxString &item, wxClientData* clientData );
-
-    int Insert( const wxString &item, int pos );
-    int Insert( const wxString &item, int pos, void* clientData );
-    int Insert( const wxString &item, int pos, wxClientData* clientData );
-
-    void SetClientData( int n, void* clientData );
-    void* GetClientData( int n ) const;
-    void SetClientObject( int n, wxClientData* clientData );
-    wxClientData* GetClientObject( int n ) const;
-
-    void SetClientObject( wxClientData *data )  { wxControl::SetClientObject( data ); }
-    wxClientData *GetClientObject() const       { return wxControl::GetClientObject(); }
-    void SetClientData( void *data )            { wxControl::SetClientData( data ); }
-    void *GetClientData() const                 { return wxControl::GetClientData(); }
-
     void Clear();
     void Delete( int n );
 
-    int FindString( const wxString &item );
+    virtual int FindString( const wxString &item ) const;
     int GetSelection() const;
     wxString GetString( int n ) const;
     wxString GetStringSelection() const;
-    int GetCount() const { return Number(); }
-    int Number() const;
+    int GetCount() const;
+    int Number() const { return GetCount(); }
     void SetSelection( int n );
+    void Select( int n ) { return SetSelection( n ); }
     void SetStringSelection( const wxString &string );
     void SetString(int n, const wxString &text);
@@ -104,9 +89,9 @@
     void Paste();
     void SetInsertionPoint( long pos );
-    void SetInsertionPointEnd();
+    void SetInsertionPointEnd() { SetInsertionPoint( -1 ); }
     long GetInsertionPoint() const;
     long GetLastPosition() const;
+    void Remove(long from, long to) { Replace(from, to, wxEmptyString); }
     void Replace( long from, long to, const wxString& value );
-    void Remove( long from, long to );
     void SetSelection( long from, long to );
     void SetEditable( bool editable );
@@ -126,6 +111,4 @@
     void DisableEvents();
     void EnableEvents();
-    int AppendCommon( const wxString &item );
-    int InsertCommon( const wxString &item, int pos );
     GtkWidget* GetConnectWidget();
     bool IsOwnGtkWindow( GdkWindow *window );
@@ -133,8 +116,16 @@
 
 protected:
+    virtual int DoAppend(const wxString& item);
+    virtual int DoInsert(const wxString& item, int pos);
+
+    virtual void DoSetItemClientData( int n, void* clientData );
+    virtual void* DoGetItemClientData( int n ) const;
+    virtual void DoSetItemClientObject( int n, wxClientData* clientData );
+    virtual wxClientData* DoGetItemClientObject( int n ) const;
+
     virtual wxSize DoGetBestSize() const;
 
 private:
-    DECLARE_DYNAMIC_CLASS(wxComboBox)
+    DECLARE_DYNAMIC_CLASS_NO_COPY(wxComboBox)
     DECLARE_EVENT_TABLE()
 };

 	  	 
