Index: include/wx/msw/tglbtn.h
===================================================================
--- include/wx/msw/tglbtn.h	(revision 78361)
+++ include/wx/msw/tglbtn.h	(working copy)
@@ -46,8 +46,6 @@
     virtual bool MSWCommand(WXUINT param, WXWORD id);
     virtual void Command(wxCommandEvent& event);
 
-    virtual State GetNormalState() const;
-
     // returns true if the platform should explicitly apply a theme border
     virtual bool CanApplyThemeBorder() const { return false; }
 
Index: include/wx/msw/anybutton.h
===================================================================
--- include/wx/msw/anybutton.h	(revision 78361)
+++ include/wx/msw/anybutton.h	(working copy)
@@ -36,7 +36,6 @@
     virtual WXLRESULT MSWWindowProc(WXUINT nMsg, WXWPARAM wParam, WXLPARAM lParam);
 
     virtual bool MSWOnDraw(WXDRAWITEMSTRUCT *item);
-    virtual State GetNormalState() const { return State_Normal; }
 
     // returns true if the platform should explicitly apply a theme border
     virtual bool CanApplyThemeBorder() const { return false; }
Index: include/wx/tglbtn.h
===================================================================
--- include/wx/tglbtn.h	(revision 78361)
+++ include/wx/tglbtn.h	(working copy)
@@ -36,6 +36,15 @@
     virtual void SetValue(bool state) = 0;
     virtual bool GetValue() const = 0;
 
+    // The current "normal" state for the button depends upon the value
+    wxAnyButton::State GetNormalState() const wxOVERRIDE
+    {
+        if ( GetValue() )
+            return State_Pressed;
+        else
+            return State_Normal;
+    }
+
     void UpdateWindowUI(long flags) wxOVERRIDE
     {
         wxControl::UpdateWindowUI(flags);
Index: include/wx/anybutton.h
===================================================================
--- include/wx/anybutton.h	(revision 78361)
+++ include/wx/anybutton.h	(working copy)
@@ -135,6 +135,13 @@
         State_Max
     };
 
+    // return the current setting for the "normal" state of the button,
+    // overridden by wxToggleButtonBase
+    virtual State GetNormalState() const
+    {
+        return State_Normal;
+    }
+
     // return true if this button shouldn't show the text label, either because
     // it doesn't have it or because it was explicitly disabled with wxBU_NOTEXT
     bool DontShowLabel() const
Index: src/gtk/anybutton.cpp
===================================================================
--- src/gtk/anybutton.cpp	(revision 78361)
+++ src/gtk/anybutton.cpp	(working copy)
@@ -138,8 +138,19 @@
 
 wxAnyButton::State wxAnyButton::GTKGetCurrentState() const
 {
+    State normalState = GetNormalState();
+    if ( !m_bitmaps[normalState].IsOk() )
+    {
+        normalState = State_Normal;
+    }
+
     if ( !IsThisEnabled() )
-        return m_bitmaps[State_Disabled].IsOk() ? State_Disabled : State_Normal;
+    {
+        if ( m_bitmaps[State_Disabled].IsOk() )
+            return State_Disabled;
+        else
+            return normalState;
+    }
 
     if ( m_isPressed && m_bitmaps[State_Pressed].IsOk() )
         return State_Pressed;
@@ -150,7 +161,7 @@
     if ( HasFocus() && m_bitmaps[State_Focused].IsOk() )
         return State_Focused;
 
-    return State_Normal;
+    return normalState;
 }
 
 void wxAnyButton::GTKUpdateBitmap()
Index: src/msw/tglbtn.cpp
===================================================================
--- src/msw/tglbtn.cpp	(revision 78361)
+++ src/msw/tglbtn.cpp	(working copy)
@@ -190,12 +190,4 @@
     return true;
 }
 
-wxAnyButton::State wxToggleButton::GetNormalState() const
-{
-    if ( GetValue() )
-        return State_Pressed;
-    else
-        return State_Normal;
-}
-
 #endif // wxUSE_TOGGLEBTN
