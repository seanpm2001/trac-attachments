diff -rU2 wxWidgets.orig/include/wx/msw/notebook.h wxWidgets/include/wx/msw/notebook.h
--- wxWidgets.orig/include/wx/msw/notebook.h	2005-04-11 16:41:38.000000000 +1000
+++ wxWidgets/include/wx/msw/notebook.h	2005-04-13 14:39:36.114678808 +1000
@@ -233,4 +233,6 @@
 #endif // wxUSE_UXTHEME
 
+  void OnEraseBackground(wxEraseEvent& event);
+  void OnPaint(wxPaintEvent& event);
 
   DECLARE_DYNAMIC_CLASS_NO_COPY(wxNotebook)
diff -rU2 wxWidgets.orig/src/msw/notebook.cpp wxWidgets/src/msw/notebook.cpp
--- wxWidgets.orig/src/msw/notebook.cpp	2005-04-11 16:42:43.000000000 +1000
+++ wxWidgets/src/msw/notebook.cpp	2005-04-13 14:39:43.797510840 +1000
@@ -94,4 +94,6 @@
 
 BEGIN_EVENT_TABLE(wxNotebook, wxControl)
+    EVT_ERASE_BACKGROUND(wxNotebook::OnEraseBackground)
+    EVT_PAINT(wxNotebook::OnPaint)
     EVT_NOTEBOOK_PAGE_CHANGED(-1, wxNotebook::OnSelChange)
     EVT_SIZE(wxNotebook::OnSize)
@@ -181,4 +183,21 @@
 IMPLEMENT_DYNAMIC_CLASS(wxNotebookEvent, wxNotifyEvent)
 
+// ---------------------------------------------------------------------------
+// private functions
+// ---------------------------------------------------------------------------
+
+// wnd proc for the spin button
+LRESULT APIENTRY _EXPORT wxNotebookSpinBtnWndProc(HWND hWnd,
+                                                  UINT message,
+                                                  WPARAM wParam,
+                                                  LPARAM lParam);
+
+// ---------------------------------------------------------------------------
+// global vars
+// ---------------------------------------------------------------------------
+
+// the pointer to standard spin button wnd proc
+static WXFARPROC s_wndprocNotebookSpinBtn = (WXFARPROC)NULL;
+
 // ============================================================================
 // implementation
@@ -1180,3 +1199,68 @@
 }
 
+void wxNotebook::OnEraseBackground(wxEraseEvent& WXUNUSED(event))
+{
+    // do nothing here
+}
+
+void wxNotebook::OnPaint(wxPaintEvent& WXUNUSED(event))
+{
+    wxPaintDC dc(this);
+    wxMemoryDC memdc;
+    RECT rc;
+    ::GetClientRect(GetHwnd(), &rc);
+    wxBitmap bmp(rc.right, rc.bottom);
+    memdc.SelectObject(bmp);
+
+    // iterate over all child windows to find spin button
+    for ( HWND child = ::GetWindow(GetHwnd(), GW_CHILD);
+          child;
+          child = ::GetWindow(child, GW_HWNDNEXT) )
+    {
+        wxWindow *childWindow = wxFindWinFromHandle((WXHWND)child);
+
+        // see if it exists, if no wxWindow found then assume it's the spin btn
+        if ( !childWindow )
+        {
+            // subclass the spin button to override WM_ERASEBKGND
+            if ( !s_wndprocNotebookSpinBtn )
+                s_wndprocNotebookSpinBtn = (WXFARPROC)wxGetWindowProc(child);
+
+            wxSetWindowProc(child, wxNotebookSpinBtnWndProc);
+	    break;
+        }
+    }
+
+    HBRUSH hbr = (HBRUSH)m_hbrBackground;
+
+    // if there is no special brush just use the solid background colour
+    wxBrush brush;
+    if ( !hbr )
+    {
+        brush = wxBrush(GetBackgroundColour());
+        hbr = GetHbrushOf(brush);
+    }
+
+    ::FillRect(GetHdcOf(memdc), &rc, hbr);
+
+    MSWDefWindowProc(WM_PAINT, (WPARAM)memdc.GetHDC(), 0);
+
+    dc.Blit(0, 0, rc.right, rc.bottom, &memdc, 0, 0);
+}
+
+// ---------------------------------------------------------------------------
+// window proc for spin button
+// ---------------------------------------------------------------------------
+
+LRESULT APIENTRY _EXPORT wxNotebookSpinBtnWndProc(HWND hwnd,
+                                                  UINT message,
+                                                  WPARAM wParam,
+                                                  LPARAM lParam)
+{
+    if ( message == WM_ERASEBKGND )
+        return 0;
+
+    return ::CallWindowProc(CASTWNDPROC s_wndprocNotebookSpinBtn, hwnd, message, wParam, lParam);
+}
+
 #endif // wxUSE_NOTEBOOK

 	  	 
