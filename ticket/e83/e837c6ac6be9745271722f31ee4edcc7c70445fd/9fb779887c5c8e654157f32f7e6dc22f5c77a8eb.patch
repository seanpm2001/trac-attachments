Index: src/gtk/window.cpp
===================================================================
--- src/gtk/window.cpp	(revision 65724)
+++ src/gtk/window.cpp	(working copy)
@@ -1432,7 +1432,7 @@
     event.SetEventObject( win );
     event.SetId( win->GetId() );
 
-    bool ret = win->GTKProcessEvent( event );
+    const bool ret = win->GTKProcessEvent( event );
     g_lastMouseEvent = NULL;
     if ( ret )
         return TRUE;
@@ -1443,23 +1443,6 @@
         win->SetFocus();
     }
 
-    if (event_type == wxEVT_RIGHT_DOWN)
-    {
-        // generate a "context menu" event: this is similar to right mouse
-        // click under many GUIs except that it is generated differently
-        // (right up under MSW, ctrl-click under Mac, right down here) and
-        //
-        // (a) it's a command event and so is propagated to the parent
-        // (b) under some ports it can be generated from kbd too
-        // (c) it uses screen coords (because of (a))
-        wxContextMenuEvent evtCtx(
-            wxEVT_CONTEXT_MENU,
-            win->GetId(),
-            win->ClientToScreen(event.GetPosition()));
-        evtCtx.SetEventObject(win);
-        return win->GTKProcessEvent(evtCtx);
-    }
-
     return FALSE;
 }
 
@@ -1511,11 +1494,31 @@
     event.SetEventObject( win );
     event.SetId( win->GetId() );
 
-    bool ret = win->GTKProcessEvent(event);
+    const bool ret = win->GTKProcessEvent(event);
 
     g_lastMouseEvent = NULL;
 
-    return ret;
+    if ( ret )
+        return TRUE;
+
+    if (event_type == wxEVT_RIGHT_UP)
+    {
+        // generate a "context menu" event: this is similar to right mouse
+        // click under many GUIs except that it is generated differently
+        // (right up under MSW and here, ctrl-click under Mac) and
+        //
+        // (a) it's a command event and so is propagated to the parent
+        // (b) under some ports it can be generated from kbd too
+        // (c) it uses screen coords (because of (a))
+        wxContextMenuEvent evtCtx(
+            wxEVT_CONTEXT_MENU,
+            win->GetId(),
+            win->ClientToScreen(event.GetPosition()));
+        evtCtx.SetEventObject(win);
+        return win->GTKProcessEvent(evtCtx);
+    }
+
+    return FALSE;
 }
 
 //-----------------------------------------------------------------------------
