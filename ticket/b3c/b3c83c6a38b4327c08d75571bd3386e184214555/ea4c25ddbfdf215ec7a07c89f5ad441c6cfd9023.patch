Index: src/msw/wince/clean_vcp.py
===================================================================
--- src/msw/wince/clean_vcp.py	(Revision 73433)
+++ src/msw/wince/clean_vcp.py	(Arbeitskopie)
@@ -1,7 +1,7 @@
 '''
 This script will delete dependences from *.vcp files.
 After using this script, next time when you will try to save project,
-you will have wait untill 'Visual Tools' will rebuild all dependencies
+you will have wait until 'Visual Tools' will rebuild all dependencies
 and this process might take HUGE amount of time
 
 Author : Viktor Voroshylo
Index: src/msw/dialup.cpp
===================================================================
--- src/msw/dialup.cpp	(Revision 73433)
+++ src/msw/dialup.cpp	(Arbeitskopie)
@@ -1284,7 +1284,7 @@
     }
 
     // we don't need it any more now and if this thread ran, it is our
-    // responsability to free the data
+    // responsibility to free the data
     delete data;
 
     return 0;
Index: src/msw/mediactrl_wmp10.cpp
===================================================================
--- src/msw/mediactrl_wmp10.cpp	(Revision 73433)
+++ src/msw/mediactrl_wmp10.cpp	(Arbeitskopie)
@@ -28,7 +28,7 @@
 // is about to be played - and if the user didn't change the state of the
 // media (m_bWasStateChanged), when set it back to the stop state.
 //
-// The ActiveX control itself is particularily stubborn, calling
+// The ActiveX control itself is particularly stubborn, calling
 // IOleInPlaceSite::OnPosRectChange every file change trying to set itself
 // to something different then what we told it to before.
 //
@@ -861,7 +861,7 @@
     IWMPPlayer2* pWMPPlayer2; // Only 2 has windowless video and stretchtofit
     if(m_pWMPPlayer->QueryInterface(IID_IWMPPlayer2, (void**)&pWMPPlayer2) == 0)
     {
-        // We don't check errors here as these arn't particularily important
+        // We don't check errors here as these arn't particularly important
         // and may not be implemented (i.e. stretchToFit on CE)
         pWMPPlayer2->put_windowlessVideo(VARIANT_TRUE);
         pWMPPlayer2->put_stretchToFit(VARIANT_TRUE);
@@ -1472,7 +1472,7 @@
 // you playing a file through WMP.
 //
 // Here are those hacks. They do indeed "work" as expected - just call
-// SendMessage with one of those myterious values layed out in
+// SendMessage with one of those myterious values laid out in
 // Peter Foot's Friday, May 21, 2004 Blog Post on the issue.
 // (He says they are in a registery section entitled "Pendant Bus")
 //
Index: src/msw/mediactrl_am.cpp
===================================================================
--- src/msw/mediactrl_am.cpp	(Revision 73433)
+++ src/msw/mediactrl_am.cpp	(Arbeitskopie)
@@ -1540,14 +1540,14 @@
     {
         return wxString::Format(wxT("DirectShow error \"%s\" \n")
                                      wxT("(numeric %X)\n")
-                                     wxT("occured"),
+                                     wxT("occurred"),
                                      szError, (int)hrdsv);
     }
     else
     {
         return wxString::Format(wxT("Unknown error \n")
                                      wxT("(numeric %X)\n")
-                                     wxT("occured"),
+                                     wxT("occurred"),
                                      (int)hrdsv);
     }
 }
Index: src/msw/ole/activex.cpp
===================================================================
--- src/msw/ole/activex.cpp	(Revision 73433)
+++ src/msw/ole/activex.cpp	(Arbeitskopie)
@@ -1269,7 +1269,7 @@
 // wxActiveXContainer::MSWTranslateMessage
 //
 // Called for every message that needs to be translated.
-// Some controls might need more keyboard keys to process (CTRL-C, CTRL-A ect),
+// Some controls might need more keyboard keys to process (CTRL-C, CTRL-A etc),
 // In that case TranslateAccelerator should always be called first.
 //---------------------------------------------------------------------------
 bool wxActiveXContainer::MSWTranslateMessage(WXMSG* pMsg)
Index: src/msw/ole/dataobj.cpp
===================================================================
--- src/msw/ole/dataobj.cpp	(Revision 73433)
+++ src/msw/ole/dataobj.cpp	(Arbeitskopie)
@@ -930,7 +930,7 @@
     ((wxIDataObject *)m_pIDataObject)->SetDeleteFlag();
     m_pIDataObject->Release();
 
-    // so that the dtor doesnt' crash
+    // so that the dtor doesn't crash
     m_pIDataObject = NULL;
 }
 
@@ -1316,7 +1316,7 @@
     static const size_t sizeOfChar = sizeof(wxChar);
 #endif // wxUSE_UNICODE_MSLU/!wxUSE_UNICODE_MSLU
 
-    // inital size of DROPFILES struct + null byte
+    // initial size of DROPFILES struct + null byte
     size_t sz = sizeof(DROPFILES) + sizeOfChar;
 
     const size_t count = m_filenames.size();
Index: src/msw/checklst.cpp
===================================================================
--- src/msw/checklst.cpp	(Revision 73433)
+++ src/msw/checklst.cpp	(Arbeitskopie)
@@ -61,7 +61,7 @@
     // space around check mark bitmap in pixels
     static const int CHECKMARK_EXTRA_SPACE = 1;
 
-    // space betwen check bitmap and text label
+    // space between check bitmap and text label
     static const int CHECKMARK_LABEL_SPACE = 2;
 
 } // anonymous namespace
Index: src/msw/window.cpp
===================================================================
--- src/msw/window.cpp	(Revision 73433)
+++ src/msw/window.cpp	(Arbeitskopie)
@@ -1430,7 +1430,7 @@
     // it doesn't seem useful to use WS_CLIPSIBLINGS here as we officially
     // don't support overlapping windows and it only makes sense for them and,
     // presumably, gives the system some extra work (to manage more clipping
-    // regions), so avoid it alltogether
+    // regions), so avoid it altogether
 
 
     if ( flags & wxVSCROLL )
@@ -5451,7 +5451,7 @@
     };
 
 #ifdef wxHAS_XBUTTON
-    // the same messages are used for both auxillary mouse buttons so we need
+    // the same messages are used for both auxiliary mouse buttons so we need
     // to adjust the index manually
     switch ( msg )
     {
Index: src/msw/webview_ie.cpp
===================================================================
--- src/msw/webview_ie.cpp	(Revision 73433)
+++ src/msw/webview_ie.cpp	(Arbeitskopie)
@@ -1486,7 +1486,7 @@
     }
     else
     {
-        //Dummy return to surpress a compiler warning
+        //Dummy return to suppress a compiler warning
         wxFAIL;
         return INET_E_DOWNLOAD_FAILURE;
     }
Index: src/msw/sockmsw.cpp
===================================================================
--- src/msw/sockmsw.cpp	(Revision 73433)
+++ src/msw/sockmsw.cpp	(Arbeitskopie)
@@ -120,7 +120,7 @@
 #ifdef __WXWINCE__
 /* This thread handles socket events on WinCE using WSAEventSelect() as
  * WSAAsyncSelect is not supported. When an event occurs for the socket, it is
- * checked what kind of event happend and the correct message gets posted so
+ * checked what kind of event happened and the correct message gets posted so
  * that the hidden window can handle it as it would in other MSW builds.
 */
 DWORD WINAPI SocketThread(LPVOID data)
Index: src/msw/regconf.cpp
===================================================================
--- src/msw/regconf.cpp	(Revision 73433)
+++ src/msw/regconf.cpp	(Arbeitskopie)
@@ -79,7 +79,7 @@
   bool bDoUseGlobal = (style & wxCONFIG_USE_GLOBAL_FILE) != 0;
 
   // the convention is to put the programs keys under <vendor>\<appname>
-  // (but it can be overridden by specifying the pathes explicitly in strLocal
+  // (but it can be overridden by specifying the paths explicitly in strLocal
   // and/or strGlobal)
   if ( strLocal.empty() || (strGlobal.empty() && bDoUseGlobal) )
   {
Index: src/msw/printdlg.cpp
===================================================================
--- src/msw/printdlg.cpp	(Revision 73433)
+++ src/msw/printdlg.cpp	(Arbeitskopie)
@@ -396,7 +396,7 @@
 
     // From MSDN: How To Modify Printer Settings with the DocumentProperties() Function
     // The purpose of this is to fill the DEVMODE with privdata from printer driver.
-    // If we have a printer name and OpenPrinter sucessfully returns
+    // If we have a printer name and OpenPrinter successfully returns
     // this replaces the PrintDlg function which creates the DEVMODE filled only with data from default printer.
     if ( !m_devMode && !printerName.IsEmpty() )
     {
