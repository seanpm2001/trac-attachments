diff -x docs -x CVS -x *.o -x lib -x *Dll -N -r -b -u -2 ../wxWindows.cvs/distrib/msw/tmake/filelist.txt ./distrib/msw/tmake/filelist.txt
--- ../wxWindows.cvs/distrib/msw/tmake/filelist.txt	Fri Apr 27 22:30:34 2001
+++ ./distrib/msw/tmake/filelist.txt	Sat Apr 28 20:56:12 2001
@@ -263,4 +263,5 @@
 gdiobj.cpp	M
 glcanvas.cpp	M
+helpbest.cpp	M	32
 helpchm.cpp	M	32
 helpwin.cpp	M
@@ -923,4 +924,5 @@
 gdiobj.h	9
 glcanvas.h	9
+helpbest.h	9
 helpchm.h	9
 helpwin.h	9
diff -x docs -x CVS -x *.o -x lib -x *Dll -N -r -b -u -2 ../wxWindows.cvs/include/wx/msw/helpbest.h ./include/wx/msw/helpbest.h
--- ../wxWindows.cvs/include/wx/msw/helpbest.h	Thu Jan  1 01:00:00 1970
+++ ./include/wx/msw/helpbest.h	Fri Apr 27 11:04:20 2001
@@ -0,0 +1,128 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        helpbest.h
+// Purpose:     Tries to load MS HTML Help, falls back to wxHTML upon failure
+// Author:      Mattia Barbon
+// Modified by:
+// Created:     02/04/2001
+// RCS-ID:      $Id$
+// Copyright:   (c) Mattia Barbon
+// Licence:   	wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_HELPBEST_H_
+#define _WX_HELPBEST_H_
+
+#ifdef __GNUG__
+#pragma interface "helpbest.h"
+#endif
+
+#include "wx/wx.h"
+
+#if wxUSE_HELP
+
+#include "wx/helpbase.h"
+
+class WXDLLEXPORT wxBestHelpController: public wxHelpControllerBase
+{
+    DECLARE_DYNAMIC_CLASS(wxBestHelpController)
+        
+public:
+    wxBestHelpController():m_helpControllerType( wxUseNone ),
+        m_helpController( 0 ) {}
+    ~wxBestHelpController() { delete m_helpController; }
+    
+    // Must call this to set the filename
+    virtual bool Initialize(const wxString& file);
+    
+    // If file is "", reloads file given in Initialize
+    virtual bool LoadFile(const wxString& file = wxEmptyString)
+    {
+        wxASSERT( m_helpController );
+        return m_helpController->LoadFile( GetValidFilename( file ) );
+    }
+
+    virtual bool DisplayContents()
+    {
+        wxASSERT( m_helpController );
+        return m_helpController->DisplayContents();
+    }
+
+    virtual bool DisplaySection(int sectionNo)
+    {
+        wxASSERT( m_helpController );
+        return m_helpController->DisplaySection( sectionNo );
+    }
+
+    virtual bool DisplaySection(const wxString& section)
+    {
+        wxASSERT( m_helpController );
+        return m_helpController->DisplaySection( section );
+    }
+
+    virtual bool DisplayBlock(long blockNo)
+    {
+        wxASSERT( m_helpController );
+        return m_helpController->DisplayBlock( blockNo );
+    }
+
+    virtual bool DisplayContextPopup(int contextId)
+    {
+        wxASSERT( m_helpController );
+        return m_helpController->DisplayContextPopup( contextId );
+    }
+
+    virtual bool DisplayTextPopup(const wxString& text, const wxPoint& pos)
+    {
+        wxASSERT( m_helpController );
+        return m_helpController->DisplayTextPopup( text, pos );
+    }
+
+    virtual bool KeywordSearch(const wxString& k)
+    {
+        wxASSERT( m_helpController );
+        return m_helpController->KeywordSearch( k );
+    }
+
+    virtual bool Quit()
+    {
+        wxASSERT( m_helpController );
+        return m_helpController->Quit();
+    }
+
+    /// Allows one to override the default settings for the help frame.
+    virtual void SetFrameParameters(const wxString& title,
+        const wxSize& size,
+        const wxPoint& pos = wxDefaultPosition,
+        bool newFrameEachTime = FALSE)
+    {
+        wxASSERT( m_helpController );
+        m_helpController->SetFrameParameters( title, size, pos,
+                                              newFrameEachTime );
+    }
+
+    /// Obtains the latest settings used by the help frame and the help 
+    /// frame.
+    virtual wxFrame *GetFrameParameters(wxSize *size = NULL,
+        wxPoint *pos = NULL,
+        bool *newFrameEachTime = NULL)
+    {
+        wxASSERT( m_helpController );
+        return m_helpController->GetFrameParameters( size, pos,
+                                                     newFrameEachTime );
+    }
+
+protected:
+    // Append/change extension if necessary.
+    wxString GetValidFilename(const wxString& file) const;
+    
+protected:
+    enum HelpControllerType { wxUseNone, wxUseHtmlHelp, wxUseChmHelp };
+
+    HelpControllerType m_helpControllerType;
+    wxHelpControllerBase* m_helpController;
+};
+
+#endif // wxUSE_HELP
+
+#endif
+    // _WX_HELPBEST_H_
diff -x docs -x CVS -x *.o -x lib -x *Dll -N -r -b -u -2 ../wxWindows.cvs/include/wx/msw/setup0.h ./include/wx/msw/setup0.h
--- ../wxWindows.cvs/include/wx/msw/setup0.h	Fri Apr 27 22:30:38 2001
+++ ./include/wx/msw/setup0.h	Mon Apr 23 21:02:00 2001
@@ -734,7 +734,4 @@
 #define wxUSE_DEBUG_NEW_ALWAYS          0
 
-#undef wxUSE_MS_HTML_HELP
-#define wxUSE_MS_HTML_HELP 0
-
 // Cygwin betas don't have wcslen
 #if defined(__CYGWIN__) || defined(__CYGWIN32__)
diff -x docs -x CVS -x *.o -x lib -x *Dll -N -r -b -u -2 ../wxWindows.cvs/samples/help/demo.cpp ./samples/help/demo.cpp
--- ../wxWindows.cvs/samples/help/demo.cpp	Fri Apr 27 22:30:48 2001
+++ ./samples/help/demo.cpp	Fri Apr 27 15:08:48 2001
@@ -68,4 +68,8 @@
 #endif
 
+#if wxUSE_MS_HTML_HELP && wxUSE_HTML
+#include "wx/msw/helpbest.h"
+#endif
+
 // ----------------------------------------------------------------------------
 // ressources
@@ -114,4 +118,7 @@
     wxCHMHelpController& GetMSHtmlHelpController() { return m_msHtmlHelp; }
 #endif
+#if wxUSE_MS_HTML_HELP && wxUSE_HTML
+    wxBestHelpController& GetBestHelpController() { return m_bestHelp; }
+#endif
 
     // event handlers (these functions should _not_ be virtual)
@@ -121,4 +128,5 @@
     void OnAdvancedHtmlHelp(wxCommandEvent& event);
     void OnMSHtmlHelp(wxCommandEvent& event);
+    void OnBestHelp(wxCommandEvent& event);
 
     void OnShowContextHelp(wxCommandEvent& event);
@@ -141,4 +149,8 @@
 #endif
 
+#if wxUSE_MS_HTML_HELP && wxUSE_HTML
+    wxBestHelpController    m_bestHelp;
+#endif
+
     // any class wishing to process wxWindows events must use this macro
    DECLARE_EVENT_TABLE()
@@ -191,4 +203,10 @@
     HelpDemo_MS_Html_Help_Search,
 
+    HelpDemo_Best_Help_Index,
+    HelpDemo_Best_Help_Classes,
+    HelpDemo_Best_Help_Functions,
+    HelpDemo_Best_Help_Help,
+    HelpDemo_Best_Help_Search,
+
     HelpDemo_Help_KDE,
     HelpDemo_Help_GNOME,
@@ -233,4 +251,6 @@
     EVT_MENU(HelpDemo_MS_Html_Help_Search, MyFrame::OnMSHtmlHelp)
 
+    EVT_MENU(HelpDemo_Best_Help_Index, MyFrame::OnBestHelp)
+
     EVT_MENU(HelpDemo_Help_KDE, MyFrame::OnHelp)
     EVT_MENU(HelpDemo_Help_GNOME, MyFrame::OnHelp)
@@ -298,4 +318,19 @@
     }
 
+#if wxUSE_MS_HTML_HELP
+    if( !frame->GetMSHtmlHelpController().Initialize("doc") )
+    {
+        wxLogError("Cannot initialize the MS HTML Help system.");
+    }
+#endif
+
+#if wxUSE_MS_HTML_HELP && wxUSE_HTML
+    // you need to call Initialize in order to use wxBestHelpController
+    if( !frame->GetBestHelpController().Initialize("doc") )
+    {
+        wxLogError("Cannot initialize the best help system, aborting.");
+    }
+#endif
+
 #if USE_HTML_HELP
     // initialise the standard HTML help system: this means that the HTML docs are in the
@@ -320,5 +355,6 @@
 #endif
 
-#if defined(__WXMSW__) && wxUSE_MS_HTML_HELP
+#if 0
+    // defined(__WXMSW__) && wxUSE_MS_HTML_HELP
     wxString path(wxGetCwd());
     if ( !frame->GetMSHtmlHelpController().Initialize(path + "\\doc.chm") )
@@ -388,4 +424,9 @@
 #endif
 
+#if wxUSE_MS_HTML_HELP && wxUSE_HTML
+    menuFile->AppendSeparator();
+    menuFile->Append(HelpDemo_Best_Help_Index, "Best &Help Index...");
+#endif
+
 #ifndef __WXMSW__
 #if !wxUSE_HTML
@@ -471,4 +512,11 @@
 }
 
+void MyFrame::OnBestHelp(wxCommandEvent& event)
+{
+#if wxUSE_MS_HTML_HELP && wxUSE_HTML
+    ShowHelp(event.GetId(), m_bestHelp);
+#endif
+}
+
 /*
  Notes: ShowHelp uses section ids for displaying particular topics,
@@ -546,4 +594,5 @@
    case HelpDemo_Advanced_Html_Help_Classes:
    case HelpDemo_MS_Html_Help_Classes:
+   case HelpDemo_Best_Help_Classes:
       helpController.DisplaySection(2);
       //helpController.DisplaySection("Classes"); // An alternative form for most controllers
@@ -561,4 +610,5 @@
    case HelpDemo_Advanced_Html_Help_Help:
    case HelpDemo_MS_Html_Help_Help:
+   case HelpDemo_Best_Help_Help:
       helpController.DisplaySection(3);
       //helpController.DisplaySection("About"); // An alternative form for most controllers
@@ -569,4 +619,5 @@
    case HelpDemo_Advanced_Html_Help_Search:
    case HelpDemo_MS_Html_Help_Search:
+   case HelpDemo_Best_Help_Search:
    {
       wxString key = wxGetTextFromUser("Search for?",
@@ -583,4 +634,5 @@
    case HelpDemo_Advanced_Html_Help_Index:
    case HelpDemo_MS_Html_Help_Index:
+   case HelpDemo_Best_Help_Index:
       helpController.DisplayContents();
       break;
diff -x docs -x CVS -x *.o -x lib -x *Dll -N -r -b -u -2 ../wxWindows.cvs/src/common/log.cpp ./src/common/log.cpp
--- ../wxWindows.cvs/src/common/log.cpp	Fri Apr 27 22:30:52 2001
+++ ./src/common/log.cpp	Fri Apr 27 15:23:20 2001
@@ -656,5 +656,8 @@
 
     // copy it to our buffer and free memory
+    if( lpMsgBuf != 0 )
     wxStrncpy(s_szBuf, (const wxChar *)lpMsgBuf, WXSIZEOF(s_szBuf) - 1);
+    else
+        s_szBuf[0] = wxT('\0');
     s_szBuf[WXSIZEOF(s_szBuf) - 1] = wxT('\0');
     LocalFree(lpMsgBuf);
diff -x docs -x CVS -x *.o -x lib -x *Dll -N -r -b -u -2 ../wxWindows.cvs/src/msw/helpbest.cpp ./src/msw/helpbest.cpp
--- ../wxWindows.cvs/src/msw/helpbest.cpp	Thu Jan  1 01:00:00 1970
+++ ./src/msw/helpbest.cpp	Fri Apr 27 15:10:12 2001
@@ -0,0 +1,102 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        helpbest.cpp
+// Purpose:     Tries to load MS HTML Help, falls back to wxHTML upon failure
+// Author:      Mattia Barbon
+// Modified by:
+// Created:     02/04/2001
+// RCS-ID:      $Id$
+// Copyright:   (c) Mattia Barbon
+// Licence:   	wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifdef __GNUG__
+#pragma implementation "helpbest.h"
+#endif
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+#pragma hdrstop
+#endif
+
+#ifndef WX_PRECOMP
+#include "wx/defs.h"
+#endif
+
+#include "wx/filefn.h"
+
+#if wxUSE_HELP && wxUSE_MS_HTML_HELP && defined(__WIN95__) && wxUSE_HTML
+#include "wx/msw/helpchm.h"
+#include "wx/html/helpctrl.h"
+#include "wx/msw/helpbest.h"
+
+IMPLEMENT_DYNAMIC_CLASS( wxBestHelpController, wxHelpControllerBase );
+
+bool wxBestHelpController::Initialize( const wxString& filename )
+{
+    // try wxCHMHelpController
+    wxCHMHelpController* chm = new wxCHMHelpController;
+
+    m_helpControllerType = wxUseChmHelp;
+    // do not warn upon failure
+    wxLogNull dontWarnOnFailure;
+
+    if( chm->Initialize( GetValidFilename( filename ) ) )
+    {
+        m_helpController = chm;
+        return TRUE;
+    }
+
+    // failed
+    delete chm;
+
+    // try wxHtmlHelpController
+    wxHtmlHelpController* html = new wxHtmlHelpController;
+
+    m_helpControllerType = wxUseHtmlHelp;
+    if( html->Initialize( GetValidFilename( filename ) ) )
+    {
+        m_helpController = html;
+        return TRUE;
+    }
+
+    // failed
+    delete html;
+
+    return FALSE;
+}
+
+wxString wxBestHelpController::GetValidFilename( const wxString& filename ) const
+{
+    wxString tmp = filename;
+    ::wxStripExtension( tmp );
+
+    switch( m_helpControllerType )
+    {
+    case wxUseChmHelp:
+        if( ::wxFileExists( tmp + ".chm" ) )
+            return tmp + ".chm";
+
+        return filename;
+        break;
+    case wxUseHtmlHelp:
+        if( ::wxFileExists( tmp + ".htb" ) )
+            return tmp + ".htb";
+        if( ::wxFileExists( tmp + ".zip" ) )
+            return tmp + ".zip";
+        if( ::wxFileExists( tmp + ".hhp" ) )
+            return tmp + ".hhp";
+
+        return filename;
+        break;
+    default:
+        // we CAN'T get here
+        wxFAIL_MSG( "wxBestHelpController: Must call Initialize, first!" );
+        return wxEmptyString;
+        break;
+    }
+}
+
+#endif
+    // wxUSE_HELP && wxUSE_MS_HTML_HELP && defined(__WIN95__) && wxUSE_HTML
diff -x docs -x CVS -x *.o -x lib -x *Dll -N -r -b -u -2 ../wxWindows.cvs/src/msw/helpchm.cpp ./src/msw/helpchm.cpp
--- ../wxWindows.cvs/src/msw/helpchm.cpp	Fri Apr 27 22:31:40 2001
+++ ./src/msw/helpchm.cpp	Fri Apr 27 15:05:02 2001
@@ -29,4 +29,9 @@
 #if wxUSE_HELP && wxUSE_MS_HTML_HELP && defined(__WIN95__)
 #include "wx/msw/helpchm.h"
+#include "wx/dynlib.h"
+
+#ifndef WX_PRECOMP
+#include <windows.h>
+#endif
 
 // This is found in the HTML Help Workshop installation,
@@ -42,4 +47,63 @@
 #include <string.h>
 
+// utility functions to manage the loading/unloading
+// of hhctrl.ocx
+#ifndef UNICODE
+typedef HWND ( WINAPI * HTMLHELP )( HWND, LPCSTR, UINT, DWORD );
+#define HTMLHELP_NAME "HtmlHelpA"
+#else
+typedef HWND ( WINAPI * HTMLHELP )( HWND, LPCWSTR, UINT, DWORD );
+#define HTMLHELP_NAME "HtmlHelpW"
+#endif
+// dll handle/reference count
+static HTMLHELP gs_htmlHelp = 0;
+static wxDllType gs_dllHandle = 0;
+static int gs_dllCount = 0;
+
+static bool LoadHtmlHelpLibrary()
+{
+    if( !gs_dllCount )
+    {
+        gs_dllHandle = wxDllLoader::LoadLibrary( "hhctrl.ocx" );
+        if( !gs_dllHandle )
+        {
+            wxLogError(_("MS HTML Help functions are unavailable because the MS HTML Help library is not installed on this machine. Please install it."));
+            return FALSE;
+        }
+        else
+        {
+            gs_dllCount = 1;
+            gs_htmlHelp = (HTMLHELP)wxDllLoader::GetSymbol( gs_dllHandle, HTMLHELP_NAME );
+
+            if( !gs_htmlHelp )
+            {
+                wxLogError(_("Failed to initialize MS HTML Help."));
+
+                wxDllLoader::UnloadLibrary(gs_dllHandle);
+                gs_dllHandle = 0;
+                gs_dllCount = 0;
+
+                return FALSE ;
+            }
+        }
+    }
+    else
+    {
+        ++gs_dllCount;
+    }
+
+    return TRUE;
+}
+
+static void UnloadHtmlHelpLibrary()
+{
+    if( gs_dllCount != 0 && !--gs_dllCount )
+    {
+        wxDllLoader::UnloadLibrary( gs_dllHandle );
+        gs_dllHandle = 0;
+        gs_htmlHelp = 0;
+    }
+}
+
 static HWND GetSuitableHWND()
 {
@@ -54,4 +118,7 @@
 bool wxCHMHelpController::Initialize(const wxString& filename)
 {
+    if( !LoadHtmlHelpLibrary() )
+        return FALSE;
+
     m_helpFile = filename;
     return TRUE;
@@ -60,4 +127,7 @@
 bool wxCHMHelpController::LoadFile(const wxString& file)
 {
+    if( !LoadHtmlHelpLibrary() )
+        return FALSE;
+
     if (!file.IsEmpty())
         m_helpFile = file;
@@ -71,5 +141,5 @@
     wxString str = GetValidFilename(m_helpFile);
 
-    HtmlHelp(GetSuitableHWND(), (const wxChar*) str, HH_HELP_FINDER, 0L);
+    gs_htmlHelp(GetSuitableHWND(), (const wxChar*) str, HH_HELP_FINDER, 0L);
     return TRUE;
 }
@@ -86,5 +156,5 @@
 
     if (isFilename)
-        HtmlHelp(GetSuitableHWND(), (const wxChar*) str, HH_DISPLAY_TOPIC, (DWORD) (const wxChar*) section);
+        gs_htmlHelp(GetSuitableHWND(), (const wxChar*) str, HH_DISPLAY_TOPIC, (DWORD) (const wxChar*) section);
     else
         KeywordSearch(section);
@@ -99,5 +169,5 @@
     wxString str = GetValidFilename(m_helpFile);
 
-    HtmlHelp(GetSuitableHWND(), (const wxChar*) str, HH_HELP_CONTEXT, (DWORD)section);
+    gs_htmlHelp(GetSuitableHWND(), (const wxChar*) str, HH_HELP_CONTEXT, (DWORD)section);
     return TRUE;
 }
@@ -124,5 +194,5 @@
     popup.pszText = NULL;
 
-    HtmlHelp(GetSuitableHWND(), (const wxChar*) str, HH_DISPLAY_TEXT_POPUP, (DWORD) & popup);
+    gs_htmlHelp(GetSuitableHWND(), (const wxChar*) str, HH_DISPLAY_TEXT_POPUP, (DWORD) & popup);
     return TRUE;
 }
@@ -141,5 +211,5 @@
     popup.pszText = (const wxChar*) text;
 
-    HtmlHelp(GetSuitableHWND(), NULL, HH_DISPLAY_TEXT_POPUP, (DWORD) & popup);
+    gs_htmlHelp(GetSuitableHWND(), NULL, HH_DISPLAY_TEXT_POPUP, (DWORD) & popup);
     return TRUE;
 }
@@ -166,5 +236,5 @@
     link.fIndexOnFail = TRUE ;
 
-    HtmlHelp(GetSuitableHWND(), (const wxChar*) str, HH_KEYWORD_LOOKUP, (DWORD)& link);
+    gs_htmlHelp(GetSuitableHWND(), (const wxChar*) str, HH_KEYWORD_LOOKUP, (DWORD)& link);
     return TRUE;
 }
@@ -172,5 +242,7 @@
 bool wxCHMHelpController::Quit()
 {
-    HtmlHelp(GetSuitableHWND(), 0, HH_CLOSE_ALL, 0L);
+    gs_htmlHelp(GetSuitableHWND(), 0, HH_CLOSE_ALL, 0L);
+    UnloadHtmlHelpLibrary();
+
     return TRUE;
 }

 	  	 
