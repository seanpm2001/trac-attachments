diff --git a/configure b/configure
index 48cf932..5adab9e 100755
--- a/configure
+++ b/configure
@@ -22916,6 +22916,47 @@ if test "x$ac_cv_lib_lzma_lzma_code" = xyes; then :
 fi
 
 
+                { $as_echo "$as_me:${as_lineno-$LINENO}: checking for jbg_dec_init in -ljbig" >&5
+$as_echo_n "checking for jbg_dec_init in -ljbig... " >&6; }
+if ${ac_cv_lib_jbig_jbg_dec_init+:} false; then :
+  $as_echo_n "(cached) " >&6
+else
+  ac_check_lib_save_LIBS=$LIBS
+LIBS="-ljbig  $LIBS"
+cat confdefs.h - <<_ACEOF >conftest.$ac_ext
+/* end confdefs.h.  */
+
+/* Override any GCC internal prototype to avoid an error.
+   Use char because int might match the return type of a GCC
+   builtin and then its argument prototype would still apply.  */
+#ifdef __cplusplus
+extern "C"
+#endif
+char jbg_dec_init ();
+int
+main ()
+{
+return jbg_dec_init ();
+  ;
+  return 0;
+}
+_ACEOF
+if ac_fn_c_try_link "$LINENO"; then :
+  ac_cv_lib_jbig_jbg_dec_init=yes
+else
+  ac_cv_lib_jbig_jbg_dec_init=no
+fi
+rm -f core conftest.err conftest.$ac_objext \
+    conftest$ac_exeext conftest.$ac_ext
+LIBS=$ac_check_lib_save_LIBS
+fi
+{ $as_echo "$as_me:${as_lineno-$LINENO}: result: $ac_cv_lib_jbig_jbg_dec_init" >&5
+$as_echo "$ac_cv_lib_jbig_jbg_dec_init" >&6; }
+if test "x$ac_cv_lib_jbig_jbg_dec_init" = xyes; then :
+  LIBS="$LIBS -ljbig"
+fi
+
+
 
 
 subdirs="$subdirs src/tiff"
diff --git a/configure.in b/configure.in
index e59926b..700c4ed 100644
--- a/configure.in
+++ b/configure.in
@@ -2705,6 +2705,9 @@ if test "$wxUSE_LIBTIFF" != "no" ; then
         dnl LZMA compression and using it requires linking with liblzma.
         AC_CHECK_LIB(lzma, lzma_code, [LIBS="$LIBS -llzma"])
 
+        dnl Similarly for jbig
+        AC_CHECK_LIB(jbig, jbg_dec_init, [LIBS="$LIBS -ljbig"])
+
         AC_CONFIG_SUBDIRS([src/tiff])
     fi
 fi
