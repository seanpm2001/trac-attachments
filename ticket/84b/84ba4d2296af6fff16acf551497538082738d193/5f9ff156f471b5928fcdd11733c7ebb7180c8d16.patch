Index: include/wx/stc/private.h
===================================================================
diff --git a/trunk/include/wx/stc/private.h b/trunk/include/wx/stc/private.h
--- a/trunk/include/wx/stc/private.h	(revision 127085)
+++ b/trunk/include/wx/stc/private.h	(working copy)
@@ -16,7 +16,7 @@
 //----------------------------------------------------------------------
 // Utility functions used within wxSTC
 
-#if wxUSE_UNICODE
+#if SIZEOF_WCHAR_T == 2
 
 extern wxString stc2wx(const char* str);
 extern wxString stc2wx(const char* str, size_t len);
@@ -31,7 +31,7 @@
     return buf.length() - 1;
 }
 
-#else // not UNICODE
+#else // ANSI or UNOCODE_UTF8
 
 inline wxString stc2wx(const char* str) {
     return wxString(str);
@@ -49,6 +49,6 @@
     return str.length();
 }
 
-#endif // UNICODE
+#endif // ANSI or UNOCODE_UTF8
 
 #endif // _WX_STC_PRIVATE_H_
Index: src/stc/PlatWX.cpp
===================================================================
diff --git a/trunk/src/stc/PlatWX.cpp b/trunk/src/stc/PlatWX.cpp
--- a/trunk/src/stc/PlatWX.cpp	(revision 127085)
+++ b/trunk/src/stc/PlatWX.cpp	(working copy)
@@ -557,7 +557,7 @@
 
     hdc->GetPartialTextExtents(str, tpos);
 
-#if wxUSE_UNICODE
+#if (wxUSE_UNICODE != 0) || (wxUSE_UNOCODE_UTF8 == 0)
     // Map the widths back to the UTF-8 input string
     size_t utf8i = 0;
     for (size_t wxi = 0; wxi < str.size(); ++wxi) {
@@ -584,7 +584,7 @@
         if (c >= 0x10000)
             positions[utf8i++] = tpos[wxi];
     }
-#else // !wxUSE_UNICODE
+#else // ANSI or UNOCODE_UTF8
     // If not unicode then just use the widths we have
     for (int i = 0; i < len; i++) {
         positions[i] = tpos[i];
@@ -1610,8 +1610,10 @@
 
 //----------------------------------------------------------------------
 
-#if wxUSE_UNICODE
+#if (wxUSE_UNICODE != 0) || (wxUSE_UNOCODE_UTF8 == 0)
 
+#if SIZEOF_WCHAR_T == 2
+
 #include "UniConversion.h"
 
 // Convert using Scintilla's functions instead of wx's, Scintilla's are more
@@ -1629,14 +1631,11 @@
     return wxString(buffer.data(), actualLen);
 }
 
-
-
 wxString stc2wx(const char* str)
 {
     return stc2wx(str, strlen(str));
 }
 
-
 wxWX2MBbuf wx2stc(const wxString& str)
 {
     const wchar_t* wcstr = str.c_str();
@@ -1651,6 +1650,12 @@
     return buffer;
 }
 
+#else // SIZEOF_WCHAR_T == 4 
+
+#error UTF32 is not supported by STC till now.
+
+#endif // SIZEOF_WCHAR_T == 2
+
 #endif
 
 #endif // wxUSE_STC
