Index: include/wx/artprov.h
===================================================================
--- include/wx/artprov.h	(revision 66880)
+++ include/wx/artprov.h	(working copy)
@@ -136,7 +136,7 @@
 
 #if WXWIN_COMPATIBILITY_2_8
     // use PushBack(), it's the same thing
-    wxDEPRECATED( static void Insert(wxArtProvider *provider) );
+    static wxDEPRECATED(void Insert(wxArtProvider *provider) );
 #endif
 
     // Remove latest added provider and delete it.
@@ -189,14 +189,14 @@
 
 #if WXWIN_COMPATIBILITY_2_6
     // use the corresponding methods without redundant "Provider" suffix
-    wxDEPRECATED( static void PushProvider(wxArtProvider *provider) );
-    wxDEPRECATED( static void InsertProvider(wxArtProvider *provider) );
-    wxDEPRECATED( static bool PopProvider() );
+    static wxDEPRECATED(void PushProvider(wxArtProvider *provider) );
+    static wxDEPRECATED(void InsertProvider(wxArtProvider *provider) );
+    static wxDEPRECATED(bool PopProvider() );
 
     // use Delete() if this is what you really need, or just delete the
     // provider pointer, do not use Remove() as it does not delete the pointer
     // unlike RemoveProvider() which does
-    wxDEPRECATED( static bool RemoveProvider(wxArtProvider *provider) );
+    static wxDEPRECATED(bool RemoveProvider(wxArtProvider *provider) );
 #endif // WXWIN_COMPATIBILITY_2_6
 
 protected:
Index: include/wx/colour.h
===================================================================
--- include/wx/colour.h	(revision 66880)
+++ include/wx/colour.h	(working copy)
@@ -172,7 +172,7 @@
     // ---------------
 
 #if WXWIN_COMPATIBILITY_2_6
-    wxDEPRECATED( static wxColour CreateByName(const wxString& name) );
+    static wxDEPRECATED(wxColour CreateByName(const wxString& name) );
     wxDEPRECATED( void InitFromName(const wxString& col) );
 #endif
 
Index: include/wx/log.h
===================================================================
--- include/wx/log.h	(revision 66880)
+++ include/wx/log.h	(working copy)
@@ -529,7 +529,7 @@
 
     // don't use integer masks any more, use string trace masks instead
 #if WXWIN_COMPATIBILITY_2_8
-    wxDEPRECATED_INLINE( static void SetTraceMask(wxTraceMask ulMask),
+    static wxDEPRECATED_INLINE(void SetTraceMask(wxTraceMask ulMask),
         ms_ulTraceMask = ulMask; )
 
     // this one can't be marked deprecated as it's used in our own wxLogger
Index: include/wx/menuitem.h
===================================================================
--- include/wx/menuitem.h	(revision 66880)
+++ include/wx/menuitem.h	(working copy)
@@ -127,7 +127,7 @@
     wxDEPRECATED( const wxString& GetText() const );
 
     // Now use GetLabelText to strip the accelerators
-    wxDEPRECATED( static wxString GetLabelFromText(const wxString& text) );
+    static wxDEPRECATED(wxString GetLabelFromText(const wxString& text) );
 
     // Now use SetItemLabel
     wxDEPRECATED( virtual void SetText(const wxString& str) );
Index: include/wx/msgdlg.h
===================================================================
--- include/wx/msgdlg.h	(revision 66880)
+++ include/wx/msgdlg.h	(working copy)
@@ -19,7 +19,7 @@
 #include "wx/dialog.h"
 #include "wx/stockitem.h"
 
-WXDLLIMPEXP_DATA_CORE(extern const char) wxMessageBoxCaptionStr[];
+extern WXDLLIMPEXP_DATA_CORE(const char) wxMessageBoxCaptionStr[];
 
 // ----------------------------------------------------------------------------
 // wxMessageDialogBase: base class defining wxMessageDialog interface
Index: include/wx/string.h
===================================================================
--- include/wx/string.h	(revision 66880)
+++ include/wx/string.h	(working copy)
@@ -369,7 +369,7 @@
     // if !wxNEEDS_WXSTRING_PRINTF_MIXIN:
 
     // static wxString Format(const wString& format, ...) WX_ATTRIBUTE_PRINTF_1;
-    WX_DEFINE_VARARG_FUNC_SANS_N0(static typename StringReturnType<T1>::type,
+    static WX_DEFINE_VARARG_FUNC_SANS_N0(typename StringReturnType<T1>::type,
                                   Format, 1, (const wxFormatString&),
                                   DoFormatWchar, DoFormatUtf8)
     // We have to implement the version without template arguments manually
@@ -2358,17 +2358,17 @@
 #ifndef wxNEEDS_WXSTRING_PRINTF_MIXIN
     // returns the string containing the result of Printf() to it
   // static wxString Format(const wxString& format, ...) WX_ATTRIBUTE_PRINTF_1;
-  WX_DEFINE_VARARG_FUNC(static wxString, Format, 1, (const wxFormatString&),
+  static WX_DEFINE_VARARG_FUNC(wxString, Format, 1, (const wxFormatString&),
                         DoFormatWchar, DoFormatUtf8)
 #ifdef __WATCOMC__
   // workaround for http://bugzilla.openwatcom.org/show_bug.cgi?id=351
-  WX_VARARG_WATCOM_WORKAROUND(static wxString, Format, 1, (const wxString&),
+  static WX_VARARG_WATCOM_WORKAROUND(wxString, Format, 1, (const wxString&),
                               (wxFormatString(f1)));
-  WX_VARARG_WATCOM_WORKAROUND(static wxString, Format, 1, (const wxCStrData&),
+  static WX_VARARG_WATCOM_WORKAROUND(wxString, Format, 1, (const wxCStrData&),
                               (wxFormatString(f1)));
-  WX_VARARG_WATCOM_WORKAROUND(static wxString, Format, 1, (const char*),
+  static WX_VARARG_WATCOM_WORKAROUND(wxString, Format, 1, (const char*),
                               (wxFormatString(f1)));
-  WX_VARARG_WATCOM_WORKAROUND(static wxString, Format, 1, (const wchar_t*),
+  static WX_VARARG_WATCOM_WORKAROUND(wxString, Format, 1, (const wchar_t*),
                               (wxFormatString(f1)));
 #endif
 #endif
