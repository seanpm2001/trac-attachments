Index: utils.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/utils.h,v
retrieving revision 1.75
diff -b -u -2 -r1.75 utils.h
--- utils.h	8 May 2002 13:30:25 -0000	1.75
+++ utils.h	17 May 2002 17:04:32 -0000
@@ -341,4 +341,7 @@
 WXDLLEXPORT wxWindow* wxFindWindowByName(const wxString& name, wxWindow *parent = (wxWindow *) NULL);
 
+// Find window by Id
+WXDLLEXPORT wxWindow* wxFindWindowById(int Id, wxWindow *parent = (wxWindow *) NULL);
+
 // Returns menu item id or -1 if none.
 WXDLLEXPORT int wxFindMenuItemId(wxFrame *frame, const wxString& menuString, const wxString& itemString);
Index: utilscmn.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/common/utilscmn.cpp,v
retrieving revision 1.90
diff -b -u -2 -r1.90 utilscmn.cpp
--- utilscmn.cpp	1 Apr 2002 21:33:50 -0000	1.90
+++ utilscmn.cpp	17 May 2002 17:04:51 -0000
@@ -106,4 +106,5 @@
     static wxWindow *wxFindWindowByLabel1(const wxString& title, wxWindow *parent);
     static wxWindow *wxFindWindowByName1 (const wxString& title, wxWindow *parent);
+    static wxWindow *wxFindWindowById1 (int Id, wxWindow *parent);
 #endif // wxUSE_GUI
 
@@ -586,4 +587,61 @@
           wxWindow *win = (wxWindow *) node->Data ();
           wxWindow *retwin = wxFindWindowByName1 (title, win);
+          if (retwin)
+            return retwin;
+        }                        // for()
+
+    }
+
+  return (wxWindow *) NULL;                        // Not found
+
+}
+
+/*
+ * If parent is non-NULL, look through children for an ID
+ * If NULL, look through all top-level windows.
+ *
+ */
+
+wxWindow *
+wxFindWindowById (int Id, wxWindow * parent)
+{
+    if (parent)
+    {
+        return wxFindWindowById1 (Id, parent);
+    }
+    else
+    {
+        for ( wxWindowList::Node * node = wxTopLevelWindows.GetFirst();
+              node;
+              node = node->GetNext() )
+        {
+            wxWindow *win = node->GetData();
+            wxWindow *retwin = wxFindWindowById1 (Id, win);
+            if (retwin)
+                return retwin;
+        }
+
+    }
+
+    // Failed? Try by label instead.
+    return false;
+}
+
+// Recursive
+static wxWindow *
+wxFindWindowById1 (int Id, wxWindow * parent)
+{
+  if (parent)
+    {
+            if ( parent->GetId() == Id )
+                        return parent;
+    }
+
+  if (parent)
+    {
+      for (wxNode * node = parent->GetChildren().First (); node; node = node->Next ())
+        {
+          wxWindow *win = (wxWindow *) node->Data ();
+          wxWindow *retwin = wxFindWindowById1 (Id, win);
           if (retwin)
             return retwin;

 	  	 
