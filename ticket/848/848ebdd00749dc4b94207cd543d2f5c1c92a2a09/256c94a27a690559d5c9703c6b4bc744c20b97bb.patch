Index: include/wx/image.h
===================================================================
--- include/wx/image.h	(revision 54359)
+++ include/wx/image.h	(working copy)
@@ -227,7 +227,7 @@
     wxImage( wxInputStream& stream, const wxString& mimetype, int index = -1 );
 #endif // wxUSE_STREAMS
 
-    bool Create( int width, int height, bool clear = true );
+    bool Create( int width, int height, bool clear = true, wxBitmapType type = wxBITMAP_TYPE_ANY);
     bool Create( int width, int height, unsigned char* data, bool static_data = false );
     bool Create( int width, int height, unsigned char* data, unsigned char* alpha, bool static_data = false );
     bool Create( const char* const* xpmData );
Index: interface/image.h
===================================================================
--- interface/image.h	(revision 54359)
+++ interface/image.h	(working copy)
@@ -414,10 +414,14 @@
             The width of the image in pixels.
         @param height
             The height of the image in pixels.
+        @param clear
+            Clear the bits in the image.
+        @param type
+            Type of file the image is created from, if any.
 
         @return @true if the call succeeded, @false otherwise.
     */
-    bool Create(int width, int height, bool clear = true);
+    bool Create(int width, int height, bool clear = true, wxBitmapType type = wxBITMAP_TYPE_ANY);
 
     /**
         Destroys the image data.
Index: src/common/gifdecod.cpp
===================================================================
--- src/common/gifdecod.cpp	(revision 54359)
+++ src/common/gifdecod.cpp	(working copy)
@@ -121,7 +121,7 @@
 
     // create the image
     wxSize sz = GetFrameSize(frame);
-    image->Create(sz.GetWidth(), sz.GetHeight());
+    image->Create(sz.GetWidth(), sz.GetHeight(), true, wxBITMAP_TYPE_GIF);
 
     if (!image->Ok())
         return false;
Index: src/common/imagbmp.cpp
===================================================================
--- src/common/imagbmp.cpp	(revision 54359)
+++ src/common/imagbmp.cpp	(working copy)
@@ -505,7 +505,7 @@
 
     // destroy existing here instead of:
     image->Destroy();
-    image->Create(width, height);
+    image->Create(width, height, true, GetType());
 
     unsigned char *ptr = image->GetData();
 
Index: src/common/image.cpp
===================================================================
--- src/common/image.cpp	(revision 54359)
+++ src/common/image.cpp	(working copy)
@@ -182,7 +182,7 @@
 #endif
 }
 
-bool wxImage::Create( int width, int height, bool clear )
+bool wxImage::Create( int width, int height, bool clear, wxBitmapType type)
 {
     UnRef();
 
@@ -201,6 +201,7 @@
     M_IMGDATA->m_width = width;
     M_IMGDATA->m_height = height;
     M_IMGDATA->m_ok = true;
+    M_IMGDATA->m_type = type;
 
     return true;
 }
@@ -2207,11 +2208,7 @@
 
 bool wxImage::DoLoad(wxImageHandler& handler, wxInputStream& stream, int index)
 {
-    if ( !handler.LoadFile(this, stream, true/*verbose*/, index) )
-        return false;
-
-    M_IMGDATA->m_type = handler.GetType();
-    return true;
+    return handler.LoadFile(this, stream, true/*verbose*/, index);
 }
 
 bool wxImage::LoadFile( wxInputStream& stream, wxBitmapType type, int index )
Index: src/common/imagiff.cpp
===================================================================
--- src/common/imagiff.cpp	(revision 54359)
+++ src/common/imagiff.cpp	(working copy)
@@ -138,7 +138,7 @@
     image->Destroy();
 
     // create the image
-    image->Create(GetWidth(), GetHeight());
+    image->Create(GetWidth(), GetHeight(), true, m_type);
 
     if (!image->Ok())
         return false;
Index: src/common/imagjpeg.cpp
===================================================================
--- src/common/imagjpeg.cpp	(revision 54359)
+++ src/common/imagjpeg.cpp	(working copy)
@@ -273,7 +273,7 @@
 
     jpeg_start_decompress( &cinfo );
 
-    image->Create( cinfo.image_width, cinfo.image_height );
+    image->Create( cinfo.image_width, cinfo.image_height, true, m_type);
     if (!image->Ok()) {
         jpeg_finish_decompress( &cinfo );
         jpeg_destroy_decompress( &cinfo );
Index: src/common/imagpcx.cpp
===================================================================
--- src/common/imagpcx.cpp	(revision 54359)
+++ src/common/imagpcx.cpp	(working copy)
@@ -212,7 +212,7 @@
 
     // Resize the image and allocate memory for a scanline.
 
-    image->Create(width, height);
+    image->Create(width, height, true, wxBITMAP_TYPE_PCX);
 
     if (!image->Ok())
         return wxPCX_MEMERR;
Index: src/common/imagpng.cpp
===================================================================
--- src/common/imagpng.cpp	(revision 54359)
+++ src/common/imagpng.cpp	(working copy)
@@ -553,7 +553,7 @@
         png_set_expand( png_ptr );
     png_set_filler( png_ptr, 0xff, PNG_FILLER_AFTER );
 
-    image->Create((int)width, (int)height, (bool) false /* no need to init pixels */);
+    image->Create((int)width, (int)height, (bool) false /* no need to init pixels */, m_type);
 
     if (!image->Ok())
         goto error;
Index: src/common/imagpnm.cpp
===================================================================
--- src/common/imagpnm.cpp	(revision 54359)
+++ src/common/imagpnm.cpp	(working copy)
@@ -80,7 +80,7 @@
     text_stream >> maxval;
 
     //cout << line << " " << width << " " << height << " " << maxval << endl;
-    image->Create( width, height );
+    image->Create( width, height, true, m_type);
     unsigned char *ptr = image->GetData();
     if (!ptr)
     {
Index: src/common/imagtga.cpp
===================================================================
--- src/common/imagtga.cpp	(revision 54359)
+++ src/common/imagtga.cpp	(working copy)
@@ -180,7 +180,7 @@
     short bpp = hdr[HDR_BPP];
     short orientation = hdr[HDR_ORIENTATION] & 0x20;
 
-    image->Create(width, height);
+    image->Create(width, height, true, wxBITMAP_TYPE_TGA);
 
     if (!image->Ok())
     {
Index: src/common/imagtiff.cpp
===================================================================
--- src/common/imagtiff.cpp	(revision 54359)
+++ src/common/imagtiff.cpp	(working copy)
@@ -313,7 +313,7 @@
         return false;
     }
 
-    image->Create( (int)w, (int)h );
+    image->Create( (int)w, (int)h, true, m_type);
     if (!image->Ok())
     {
         if (verbose)
Index: src/common/xpmdecod.cpp
===================================================================
--- src/common/xpmdecod.cpp	(revision 54359)
+++ src/common/xpmdecod.cpp	(working copy)
@@ -688,7 +688,7 @@
     //     8bit RGB...
     wxCHECK_MSG(chars_per_pixel < 64, wxNullImage, wxT("XPM colormaps this large not supported."));
 
-    if (!img.Create(width, height, false))
+    if (!img.Create(width, height, false, wxBITMAP_TYPE_XPM))
         return wxNullImage;
 
     key[chars_per_pixel] = '\0';
