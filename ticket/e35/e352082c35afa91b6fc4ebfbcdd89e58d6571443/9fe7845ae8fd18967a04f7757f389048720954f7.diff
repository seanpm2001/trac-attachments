Index: src/regex/regex.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/regex/regex.h,v
retrieving revision 1.9
diff -u -2 -r1.9 regex.h
--- src/regex/regex.h	2005/01/07 12:36:03	1.9
+++ src/regex/regex.h	2005/01/20 20:11:36
@@ -110,16 +110,10 @@
 #if wxUSE_UNICODE
 #   define  __REG_WIDE_T        wxChar
-#   define  __REG_WIDE_COMPILE  re_comp
-#   define  __REG_WIDE_EXEC     re_exec
+#   define  __REG_WIDE_COMPILE  wx_re_comp
+#   define  __REG_WIDE_EXEC     wx_re_exec
 #   define  __REG_NOCHAR        /* don't want the char versions */
 #endif
 #define __REG_NOFRONT           /* don't want regcomp() and regexec() */
 #define _ANSI_ARGS_(x)          x
-
-/* under FreeBSD re_comp and re_exec are declared (differently) in unistd.h */
-#ifdef __FreeBSD__
-#define re_comp wx_re_comp
-#define re_exec wx_re_exec
-#endif
 /* --- end --- */
 
@@ -308,5 +302,5 @@
 /* === regproto.h === */
 #ifndef __REG_NOCHAR
-int re_comp _ANSI_ARGS_((regex_t *, __REG_CONST char *, size_t, int));
+int wx_re_comp _ANSI_ARGS_((regex_t *, __REG_CONST char *, size_t, int));
 #endif
 #ifndef __REG_NOFRONT
@@ -317,5 +311,5 @@
 #endif
 #ifndef __REG_NOCHAR
-int re_exec _ANSI_ARGS_((regex_t *, __REG_CONST char *, size_t, rm_detail_t *, size_t, regmatch_t [], int));
+int wx_re_exec _ANSI_ARGS_((regex_t *, __REG_CONST char *, size_t, rm_detail_t *, size_t, regmatch_t [], int));
 #endif
 #ifndef __REG_NOFRONT
Index: src/regex/regcustom.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/regex/regcustom.h,v
retrieving revision 1.23
diff -u -2 -r1.23 regcustom.h
--- src/regex/regcustom.h	2005/01/07 12:36:03	1.23
+++ src/regex/regcustom.h	2005/01/20 20:11:37
@@ -71,16 +71,10 @@
 #if wxUSE_UNICODE
 #   define  __REG_WIDE_T        wxChar
-#   define  __REG_WIDE_COMPILE  re_comp
-#   define  __REG_WIDE_EXEC     re_exec
+#   define  __REG_WIDE_COMPILE  wx_re_comp
+#   define  __REG_WIDE_EXEC     wx_re_exec
 #   define  __REG_NOCHAR        /* don't want the char versions */
 #endif
 #define __REG_NOFRONT           /* don't want regcomp() and regexec() */
 #define _ANSI_ARGS_(x)          x
-
-/* under FreeBSD re_comp and re_exec are declared (differently) in unistd.h */
-#ifdef __FreeBSD__
-#define re_comp wx_re_comp
-#define re_exec wx_re_exec
-#endif
 /* --- end --- */
 
@@ -120,6 +114,6 @@
 
 /* name the external functions */
-#define compile         re_comp
-#define exec            re_exec
+#define compile         wx_re_comp
+#define exec            wx_re_exec
 
 /* enable/disable debugging code (by whether REG_DEBUG is defined or not) */
Index: src/common/regex.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/regex.cpp,v
retrieving revision 1.32
diff -u -2 -r1.32 regex.cpp
--- src/common/regex.cpp	2004/09/21 18:15:59	1.32
+++ src/common/regex.cpp	2005/01/20 20:11:40
@@ -200,5 +200,5 @@
 #ifdef __REG_NOFRONT
     bool conv = true;
-    int errorcode = re_comp(&m_RegEx, expr, expr.length(), flagsRE);
+    int errorcode = wx_re_comp(&m_RegEx, expr, expr.length(), flagsRE);
 #else
     const wxWX2MBbuf conv = expr.mbc_str();
@@ -284,5 +284,5 @@
 #ifdef __REG_NOFRONT
     bool conv = true;
-    int rc = re_exec(&self->m_RegEx, str, wxStrlen(str), NULL, m_nMatches, m_Matches, flagsRE);
+    int rc = wx_re_exec(&self->m_RegEx, str, wxStrlen(str), NULL, m_nMatches, m_Matches, flagsRE);
 #else
     const wxWX2MBbuf conv = wxConvertWX2MB(str);

 	  	 
