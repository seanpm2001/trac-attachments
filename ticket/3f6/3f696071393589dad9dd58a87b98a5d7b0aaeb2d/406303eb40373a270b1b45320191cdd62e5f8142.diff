Index: src/gtk/gnome/gprint.cpp
===================================================================
--- src/gtk/gnome/gprint.cpp	(revision 55571)
+++ src/gtk/gnome/gprint.cpp	(working copy)
@@ -1054,7 +1054,7 @@
 wxGnomePrinterDCImpl::DoFloodFill(wxCoord WXUNUSED(x1),
                             wxCoord WXUNUSED(y1),
                             const wxColour& WXUNUSED(col),
-                            int WXUNUSED(style))
+                            wxFloodFillStyle WXUNUSED(style))
 {
     return false;
 }
@@ -1212,7 +1212,7 @@
 
 void wxGnomePrinterDCImpl::DoDrawPolygon(int n, wxPoint points[],
                                    wxCoord xoffset, wxCoord yoffset,
-                                   int WXUNUSED(fillStyle))
+                                   wxPolygonFillMode WXUNUSED(fillStyle))
 {
     if (n==0) return;
 
@@ -1258,7 +1258,7 @@
     }
 }
 
-void wxGnomePrinterDCImpl::DoDrawPolyPolygon(int n, int count[], wxPoint points[], wxCoord xoffset, wxCoord yoffset, int fillStyle)
+void wxGnomePrinterDCImpl::DoDrawPolyPolygon(int n, int count[], wxPoint points[], wxCoord xoffset, wxCoord yoffset, wxPolygonFillMode fillStyle)
 {
 #if wxUSE_NEW_DC
     wxDCImpl::DoDrawPolyPolygon( n, count, points, xoffset, yoffset, fillStyle );
@@ -1512,7 +1512,7 @@
                       wxCoord width, wxCoord height,
                       wxDC *source,
                       wxCoord xsrc, wxCoord ysrc,
-                      int rop,
+                      wxRasterOperationMode rop,
                       bool WXUNUSED(useMask),
                       wxCoord WXUNUSED(xsrcMask), wxCoord WXUNUSED(ysrcMask))
 {
@@ -1800,7 +1800,7 @@
     }
 }
 
-void wxGnomePrinterDCImpl::SetLogicalFunction(int WXUNUSED(function))
+void wxGnomePrinterDCImpl::SetLogicalFunction(wxRasterOperationMode WXUNUSED(function))
 {
 }
 
Index: src/gtk/dcclient.cpp
===================================================================
--- src/gtk/dcclient.cpp	(revision 55571)
+++ src/gtk/dcclient.cpp	(working copy)
@@ -460,11 +460,11 @@
 }
 
 bool wxWindowDCImpl::DoFloodFill(wxCoord x, wxCoord y,
-                             const wxColour& col, int style)
+                                 const wxColour& col, wxFloodFillStyle style)
 {
 #if wxUSE_IMAGE
     extern bool wxDoFloodFill(wxDC *dc, wxCoord x, wxCoord y,
-                              const wxColour & col, int style);
+                              const wxColour & col, wxFloodFillStyle style);
 
     return wxDoFloodFill( GetOwner(), x, y, col, style);
 #else
@@ -726,7 +726,9 @@
         delete[] gpts;
 }
 
-void wxWindowDCImpl::DoDrawPolygon( int n, wxPoint points[], wxCoord xoffset, wxCoord yoffset, int WXUNUSED(fillStyle) )
+void wxWindowDCImpl::DoDrawPolygon( int n, wxPoint points[], 
+                                    wxCoord xoffset, wxCoord yoffset, 
+                                    wxPolygonFillMode WXUNUSED(fillStyle) )
 {
     wxCHECK_RET( IsOk(), wxT("invalid window dc") );
 
@@ -1138,7 +1148,7 @@
                          wxCoord width, wxCoord height,
                          wxDC *source,
                          wxCoord xsrc, wxCoord ysrc,
-                         int logical_func,
+                         wxRasterOperationMode logical_func,
                          bool useMask,
                          wxCoord xsrcMask, wxCoord ysrcMask )
 {
@@ -1220,7 +1230,7 @@
     if (IsOutsideOfClippingRegion( xx,yy,ww,hh ))
         return true;
 
-    int old_logical_func = m_logicalFunction;
+    wxRasterOperationMode old_logical_func = m_logicalFunction;
     SetLogicalFunction( logical_func );
 
     if (use_bitmap_method)
@@ -2061,7 +2071,7 @@
     }
 }
 
-void wxWindowDCImpl::SetLogicalFunction( int function )
+void wxWindowDCImpl::SetLogicalFunction( wxRasterOperationMode function )
 {
     wxCHECK_RET( IsOk(), wxT("invalid window dc") );
 
@@ -2091,9 +2101,6 @@
         case wxNO_OP:        mode = GDK_NOOP;          break;
         case wxSRC_INVERT:   mode = GDK_COPY_INVERT;   break;
         case wxNOR:          mode = GDK_NOR;           break;
-        default:
-           wxFAIL_MSG( wxT("unsupported logical function") );
-           mode = GDK_COPY;
     }
 
     m_logicalFunction = function;
Index: src/gtk/print.cpp
===================================================================
--- src/gtk/print.cpp	(revision 55571)
+++ src/gtk/print.cpp	(working copy)
@@ -1186,7 +1186,7 @@
 bool wxGtkPrinterDCImpl::DoFloodFill(wxCoord WXUNUSED(x1),
                                wxCoord WXUNUSED(y1),
                                const wxColour& WXUNUSED(col),
-                               int WXUNUSED(style))
+                               wxFloodFillStyle WXUNUSED(style))
 {
     // We can't access the given coord as a Cairo context is scalable, ie a
     // coord doesn't mean anything in this context.
@@ -1439,7 +1439,9 @@
     gs_cairo->cairo_stroke ( m_cairo);
 }
 
-void wxGtkPrinterDCImpl::DoDrawPolygon(int n, wxPoint points[], wxCoord xoffset, wxCoord yoffset, int fillStyle)
+void wxGtkPrinterDCImpl::DoDrawPolygon(int n, wxPoint points[], 
+                                       wxCoord xoffset, wxCoord yoffset, 
+                                       wxPolygonFillMode fillStyle)
 {
     if (n==0) return;
 
@@ -1473,7 +1475,9 @@
     gs_cairo->cairo_restore(m_cairo);
 }
 
-void wxGtkPrinterDCImpl::DoDrawPolyPolygon(int n, int count[], wxPoint points[], wxCoord xoffset, wxCoord yoffset, int fillStyle)
+void wxGtkPrinterDCImpl::DoDrawPolyPolygon(int n, int count[], wxPoint points[],
+                                           wxCoord xoffset, wxCoord yoffset, 
+                                           wxPolygonFillMode fillStyle)
 {
     wxDCImpl::DoDrawPolyPolygon( n, count, points, xoffset, yoffset, fillStyle );
 }
@@ -1632,7 +1636,7 @@
 bool wxGtkPrinterDCImpl::DoBlit(wxCoord xdest, wxCoord ydest,
                           wxCoord width, wxCoord height,
                           wxDC *source, wxCoord xsrc, wxCoord ysrc,
-                          int rop, bool useMask,
+                          wxRasterOperationMode rop, bool useMask,
                           wxCoord WXUNUSED_UNLESS_DEBUG(xsrcMask),
                           wxCoord WXUNUSED_UNLESS_DEBUG(ysrcMask))
 {
@@ -2089,7 +2093,7 @@
     }
 }
 
-void wxGtkPrinterDCImpl::SetLogicalFunction( int function )
+void wxGtkPrinterDCImpl::SetLogicalFunction( wxRasterOperationMode function )
 {
     if (function == wxCLEAR)
         gs_cairo->cairo_set_operator (m_cairo, CAIRO_OPERATOR_CLEAR);
Index: src/gtk/region.cpp
===================================================================
--- src/gtk/region.cpp	(revision 55571)
+++ src/gtk/region.cpp	(working copy)
@@ -90,7 +90,8 @@
     M_REGIONDATA->m_region = gdk_region_copy( region );
 }
 
-wxRegion::wxRegion( size_t n, const wxPoint *points, int fillStyle )
+wxRegion::wxRegion( size_t n, const wxPoint *points, 
+                    wxPolygonFillMode fillStyle )
 {
     GdkPoint *gdkpoints = new GdkPoint[n];
     for ( size_t i = 0 ; i < n ; i++ )
Index: src/common/dcgraph.cpp
===================================================================
--- src/common/dcgraph.cpp	(revision 55571)
+++ src/common/dcgraph.cpp	(working copy)
@@ -336,7 +336,7 @@
     m_textBackgroundColour = col;
 }
 
-void wxGCDCImpl::SetMapMode( int mode )
+void wxGCDCImpl::SetMapMode( wxMappingMode mode )
 {
     switch (mode)
     {
@@ -450,7 +450,7 @@
         return;
 }
 
-void wxGCDCImpl::SetLogicalFunction( int function )
+void wxGCDCImpl::SetLogicalFunction( wxRasterOperationMode function )
 {
     if (m_logicalFunction == function)
         return;
@@ -463,7 +463,8 @@
 }
 
 bool wxGCDCImpl::DoFloodFill(wxCoord WXUNUSED(x), wxCoord WXUNUSED(y),
-                         const wxColour& WXUNUSED(col), int WXUNUSED(style))
+                             const wxColour& WXUNUSED(col), 
+                             wxFloodFillStyle WXUNUSED(style))
 {
     return false;
 }
@@ -674,8 +675,8 @@
 #endif // wxUSE_SPLINES
 
 void wxGCDCImpl::DoDrawPolygon( int n, wxPoint points[],
-                            wxCoord xoffset, wxCoord yoffset,
-                            int fillStyle )
+                                wxCoord xoffset, wxCoord yoffset,
+                                wxPolygonFillMode fillStyle )
 {
     wxCHECK_RET( IsOk(), wxT("wxGCDC(cg)::DoDrawPolygon - invalid DC") );
 
@@ -706,7 +707,7 @@
                                wxPoint points[],
                                wxCoord xoffset,
                                wxCoord yoffset,
-                               int fillStyle)
+                               wxPolygonFillMode fillStyle)
 {
     wxASSERT(n > 1);
     wxGraphicsPath path = m_graphicContext->CreatePath();
@@ -801,7 +802,8 @@
 
 bool wxGCDCImpl::DoBlit(
     wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height,
-    wxDC *source, wxCoord xsrc, wxCoord ysrc, int logical_func , bool useMask,
+    wxDC *source, wxCoord xsrc, wxCoord ysrc, 
+    wxRasterOperationMode logical_func , bool useMask,
     wxCoord xsrcMask, wxCoord ysrcMask )
 {
     return DoStretchBlit( xdest, ydest, width, height,
@@ -812,7 +814,7 @@
 bool wxGCDCImpl::DoStretchBlit(
     wxCoord xdest, wxCoord ydest, wxCoord dstWidth, wxCoord dstHeight,
     wxDC *source, wxCoord xsrc, wxCoord ysrc, wxCoord srcWidth, wxCoord srcHeight,
-    int logical_func , bool useMask,
+    wxRasterOperationMode logical_func , bool useMask,
     wxCoord xsrcMask, wxCoord ysrcMask )
 {
     wxCHECK_MSG( IsOk(), false, wxT("wxGCDC(cg)::DoStretchBlit - invalid DC") );
Index: src/common/dcbase.cpp
===================================================================
--- src/common/dcbase.cpp	(revision 55571)
+++ src/common/dcbase.cpp	(working copy)
@@ -403,7 +403,7 @@
     m_scaleY = m_logicalScaleY * m_userScaleY;
 }
 
-void wxDCImpl::SetMapMode( int mode )
+void wxDCImpl::SetMapMode( wxMappingMode mode )
 {
     switch (mode)
     {
@@ -640,7 +640,7 @@
                         wxDC *source,
                         wxCoord xsrc, wxCoord ysrc,
                         wxCoord srcWidth, wxCoord srcHeight,
-                        int rop,
+                        wxRasterOperationMode rop,
                         bool useMask,
                         wxCoord xsrcMask,
                         wxCoord ysrcMask)
@@ -686,7 +686,7 @@
 
 void wxDCImpl::DrawPolygon(const wxPointList *list,
                            wxCoord xoffset, wxCoord yoffset,
-                           int fillStyle)
+                           wxPolygonFillMode fillStyle)
 {
     int n = list->GetCount();
     wxPoint *points = new wxPoint[n];
@@ -709,7 +709,7 @@
                             int count[],
                             wxPoint points[],
                             wxCoord xoffset, wxCoord yoffset,
-                            int fillStyle)
+                            wxPolygonFillMode fillStyle)
 {
     if ( n == 1 )
     {
Index: src/common/dcsvg.cpp
===================================================================
--- src/common/dcsvg.cpp	(revision 55571)
+++ src/common/dcsvg.cpp	(working copy)
@@ -293,7 +293,9 @@
 }
 
 
-void wxSVGFileDCImpl::DoDrawPolygon(int n, wxPoint points[], wxCoord xoffset, wxCoord yoffset,int fillStyle)
+void wxSVGFileDCImpl::DoDrawPolygon(int n, wxPoint points[],
+                                    wxCoord xoffset, wxCoord yoffset,
+                                    wxPolygonFillMode fillStyle)
 {
     if (m_graphics_changed) NewGraphics ();
     wxString s, sTmp ;
@@ -597,7 +599,8 @@
 // export a bitmap as a raster image in png
 bool wxSVGFileDCImpl::DoBlit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height,
                          wxDC* source, wxCoord xsrc, wxCoord ysrc,
-                         int logicalFunc /*= wxCOPY*/, bool useMask /*= FALSE*/,
+                         wxRasterOperationMode logicalFunc /*= wxCOPY*/, 
+                         bool useMask /*= FALSE*/,
                          wxCoord /*xsrcMask = -1*/, wxCoord /*ysrcMask = -1*/)
 {
     if (logicalFunc != wxCOPY)
Index: src/common/imagfill.cpp
===================================================================
--- src/common/imagfill.cpp	(revision 55571)
+++ src/common/imagfill.cpp	(working copy)
@@ -274,7 +274,7 @@
 
 
 bool wxDoFloodFill(wxDC *dc, wxCoord x, wxCoord y,
-                   const wxColour& col, int style)
+                   const wxColour& col, wxFloodFillStyle style)
 {
     if (dc->GetBrush().GetStyle() == wxBRUSHSTYLE_TRANSPARENT)
         return true;
Index: src/msw/dc.cpp
===================================================================
--- src/msw/dc.cpp	(revision 55571)
+++ src/msw/dc.cpp	(working copy)
@@ -695,7 +695,7 @@
 bool wxMSWDCImpl::DoFloodFill(wxCoord WXUNUSED_IN_WINCE(x),
                        wxCoord WXUNUSED_IN_WINCE(y),
                        const wxColour& WXUNUSED_IN_WINCE(col),
-                       int WXUNUSED_IN_WINCE(style))
+                       wxFloodFillStyle WXUNUSED_IN_WINCE(style))
 {
 #ifdef __WXWINCE__
     return false;
@@ -878,7 +878,7 @@
                          wxPoint points[],
                          wxCoord xoffset,
                          wxCoord yoffset,
-                         int WXUNUSED_IN_WINCE(fillStyle))
+                         wxPolygonFillMode WXUNUSED_IN_WINCE(fillStyle))
 {
     WXMICROWIN_CHECK_HDC
 
@@ -927,7 +927,7 @@
                         wxPoint points[],
                         wxCoord xoffset,
                         wxCoord yoffset,
-                        int fillStyle)
+                        wxPolygonFillMode fillStyle)
 {
 #ifdef __WXWINCE__
     wxDCImpl::DoDrawPolyPolygon(n, count, points, xoffset, yoffset, fillStyle);
@@ -1698,7 +1698,7 @@
     // and m_backgroundMode is used there
 }
 
-void wxMSWDCImpl::SetLogicalFunction(int function)
+void wxMSWDCImpl::SetLogicalFunction(wxRasterOperationMode function)
 {
     WXMICROWIN_CHECK_HDC
 
@@ -1732,10 +1732,6 @@
         case wxNAND:         rop = R2_NOTMASKPEN;    break;
         case wxOR:           rop = R2_MERGEPEN;      break;
         case wxSET:          rop = R2_WHITE;         break;
-
-        default:
-           wxFAIL_MSG( wxT("unsupported logical function") );
-           return;
     }
 
     SetROP2(GetHdc(), rop);
@@ -1926,7 +1922,7 @@
 #endif
 }
 
-void wxMSWDCImpl::SetMapMode(int mode)
+void wxMSWDCImpl::SetMapMode(wxMappingMode mode)
 {
     WXMICROWIN_CHECK_HDC
 
@@ -2053,7 +2049,7 @@
                   wxCoord dstWidth, wxCoord dstHeight,
                   wxDC *source,
                   wxCoord srcX, wxCoord srcY,
-                  int rop, bool useMask,
+                  wxRasterOperationMode rop, bool useMask,
                   wxCoord srcMaskX, wxCoord srcMaskY)
 {
     return DoStretchBlit(dstX, dstY, dstWidth, dstHeight, source, srcX, srcY, dstWidth, dstHeight, rop, useMask, srcMaskX, srcMaskY);
@@ -2064,7 +2060,7 @@
                          wxDC *source,
                          wxCoord xsrc, wxCoord ysrc,
                          wxCoord srcWidth, wxCoord srcHeight,
-                         int rop, bool useMask,
+                         wxRasterOperationMode rop, bool useMask,
                          wxCoord xsrcMask, wxCoord ysrcMask)
 {
     wxCHECK_MSG( source, false, _T("wxMSWDCImpl::Blit(): NULL wxDC pointer") );
Index: src/x11/dcclient.cpp
===================================================================
--- src/x11/dcclient.cpp	(revision 55571)
+++ src/x11/dcclient.cpp	(working copy)
@@ -351,10 +351,10 @@
 }
 
 extern bool wxDoFloodFill(wxDC *dc, wxCoord x, wxCoord y,
-                          const wxColour & col, int style);
+                          const wxColour & col, wxFloodFillStyle style);
 
 bool wxWindowDCImpl::DoFloodFill(wxCoord x, wxCoord y,
-                             const wxColour& col, int style)
+                                 const wxColour& col, wxFloodFillStyle style)
 {
     return wxDoFloodFill(GetOwner(), x, y, col, style);
 }
@@ -643,7 +643,7 @@
 
 void wxWindowDCImpl::DoDrawPolygon( int n, wxPoint points[],
                                 wxCoord xoffset, wxCoord yoffset,
-                                int WXUNUSED(fillStyle) )
+                                wxPolygonFillMode WXUNUSED(fillStyle) )
 {
     wxCHECK_RET( IsOk(), wxT("invalid window dc") );
 
@@ -1291,7 +1291,8 @@
   // wxUSE_NANOX/!wxUSE_NANOX
 
 bool wxWindowDCImpl::DoBlit( wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height,
-                         wxDC *source, wxCoord xsrc, wxCoord ysrc, int logical_func, bool useMask,
+                         wxDC *source, wxCoord xsrc, wxCoord ysrc, 
+                         wxRasterOperationMode logical_func, bool useMask,
                          wxCoord xsrcMask, wxCoord ysrcMask )
 {
    /* this is the nth try to get this utterly useless function to
@@ -1385,7 +1386,7 @@
             return true;
     }
 
-    int old_logical_func = m_logicalFunction;
+    wxRasterOperationMode old_logical_func = m_logicalFunction;
     SetLogicalFunction( logical_func );
 
     if (use_bitmap_method)
@@ -2044,7 +2045,7 @@
     }
 }
 
-void wxWindowDCImpl::SetLogicalFunction( int function )
+void wxWindowDCImpl::SetLogicalFunction( wxRasterOperationMode function )
 {
     wxCHECK_RET( IsOk(), wxT("invalid dc") );
 
Index: src/generic/dcpsg.cpp
===================================================================
--- src/generic/dcpsg.cpp	(revision 55571)
+++ src/generic/dcpsg.cpp	(working copy)
@@ -406,7 +406,7 @@
     //    wxFAIL_MSG( wxT("wxPostScriptDCImpl::Clear not implemented.") );
 }
 
-bool wxPostScriptDCImpl::DoFloodFill (wxCoord WXUNUSED(x), wxCoord WXUNUSED(y), const wxColour &WXUNUSED(col), int WXUNUSED(style))
+bool wxPostScriptDCImpl::DoFloodFill (wxCoord WXUNUSED(x), wxCoord WXUNUSED(y), const wxColour &WXUNUSED(col), wxFloodFillStyle WXUNUSED(style))
 {
     wxFAIL_MSG( wxT("wxPostScriptDCImpl::FloodFill not implemented.") );
     return false;
@@ -598,7 +598,7 @@
     CalcBoundingBox( x, y );
 }
 
-void wxPostScriptDCImpl::DoDrawPolygon (int n, wxPoint points[], wxCoord xoffset, wxCoord yoffset, int fillStyle)
+void wxPostScriptDCImpl::DoDrawPolygon (int n, wxPoint points[], wxCoord xoffset, wxCoord yoffset, wxPolygonFillMode fillStyle)
 {
     wxCHECK_RET( m_ok, wxT("invalid postscript dc") );
 
@@ -668,7 +668,7 @@
     }
 }
 
-void wxPostScriptDCImpl::DoDrawPolyPolygon (int n, int count[], wxPoint points[], wxCoord xoffset, wxCoord yoffset, int fillStyle)
+void wxPostScriptDCImpl::DoDrawPolyPolygon (int n, int count[], wxPoint points[], wxCoord xoffset, wxCoord yoffset, wxPolygonFillMode fillStyle)
 {
     wxCHECK_RET( m_ok, wxT("invalid postscript dc") );
 
@@ -1507,7 +1507,7 @@
     m_backgroundBrush = brush;
 }
 
-void wxPostScriptDCImpl::SetLogicalFunction (int WXUNUSED(function))
+void wxPostScriptDCImpl::SetLogicalFunction(wxRasterOperationMode WXUNUSED(function))
 {
     wxFAIL_MSG( wxT("wxPostScriptDCImpl::SetLogicalFunction not implemented.") );
 }
@@ -1938,7 +1938,8 @@
                            wxCoord fwidth, wxCoord fheight,
                            wxDC *source,
                            wxCoord xsrc, wxCoord ysrc,
-                           int rop, bool WXUNUSED(useMask), wxCoord WXUNUSED(xsrcMask), wxCoord WXUNUSED(ysrcMask) )
+                           wxRasterOperationMode rop, 
+                           bool WXUNUSED(useMask), wxCoord WXUNUSED(xsrcMask), wxCoord WXUNUSED(ysrcMask) )
 {
     wxCHECK_MSG( m_ok, false, wxT("invalid postscript dc") );
 
Index: include/wx/dcsvg.h
===================================================================
--- include/wx/dcsvg.h	(revision 55571)
+++ include/wx/dcsvg.h	(working copy)
@@ -79,15 +79,15 @@
         wxFAIL_MSG(wxT("wxSVGFILEDC::GetClippingBox not implemented"));
     }
 
-    virtual void SetLogicalFunction(int WXUNUSED(function))
+    virtual void SetLogicalFunction(wxRasterOperationMode WXUNUSED(function))
     {
         wxFAIL_MSG(wxT("wxSVGFILEDC::SetLogicalFunction Call not implemented"));
     }
 
-    virtual int GetLogicalFunction() const
+    virtual wxRasterOperationMode GetLogicalFunction() const
     {
         wxFAIL_MSG(wxT("wxSVGFILEDC::GetLogicalFunction() not implemented"));
-        return -1;
+        return wxCOPY;
     }
 
     virtual void SetBackground( const wxBrush &brush );
@@ -104,7 +104,7 @@
    }
 
    virtual bool DoBlit(wxCoord, wxCoord, wxCoord, wxCoord, wxDC *,
-                       wxCoord, wxCoord, int = wxCOPY,
+                       wxCoord, wxCoord, wxRasterOperationMode = wxCOPY,
                        bool = 0, int = -1, int = -1);
 
    virtual void DoCrossHair(wxCoord, wxCoord)
@@ -132,7 +132,9 @@
 
    virtual void DoDrawPoint(wxCoord, wxCoord);
 
-   virtual void DoDrawPolygon(int n, wxPoint points[], wxCoord xoffset, wxCoord yoffset,int fillStyle);
+   virtual void DoDrawPolygon(int n, wxPoint points[], 
+                              wxCoord xoffset, wxCoord yoffset,
+                              wxPolygonFillMode fillStyle);
 
    virtual void DoDrawRectangle(wxCoord x, wxCoord y, wxCoord w, wxCoord h);
 
@@ -147,7 +149,7 @@
 
    virtual bool DoFloodFill(wxCoord WXUNUSED(x), wxCoord WXUNUSED(y),
                             const wxColour& WXUNUSED(col),
-                            int WXUNUSED(style) = wxFLOOD_SURFACE)
+                            wxFloodFillStyle WXUNUSED(style) = wxFLOOD_SURFACE)
    {
        wxFAIL_MSG(wxT("wxSVGFILEDC::DoFloodFill Call not implemented"));
        return false;
Index: include/wx/dcgraph.h
===================================================================
--- include/wx/dcgraph.h	(revision 55571)
+++ include/wx/dcgraph.h	(working copy)
@@ -86,9 +86,9 @@
     virtual int GetDepth() const;
     virtual wxSize GetPPI() const;
 
-    virtual void SetMapMode(int mode);
+    virtual void SetMapMode(wxMappingMode mode);
 
-    virtual void SetLogicalFunction(int function);
+    virtual void SetLogicalFunction(wxRasterOperationMode function);
 
     virtual void SetTextForeground(const wxColour& colour);
     virtual void SetTextBackground(const wxColour& colour);
@@ -100,7 +100,7 @@
     
     // the true implementations
     virtual bool DoFloodFill(wxCoord x, wxCoord y, const wxColour& col,
-        int style = wxFLOOD_SURFACE);
+                             wxFloodFillStyle style = wxFLOOD_SURFACE);
 
     virtual void DoGradientFillLinear(const wxRect& rect,
         const wxColour& initialColour,
@@ -149,15 +149,16 @@
         double angle);
 
     virtual bool DoBlit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height,
-        wxDC *source, wxCoord xsrc, wxCoord ysrc,
-        int rop = wxCOPY, bool useMask = false, wxCoord xsrcMask = -1, wxCoord ysrcMask = -1);
+                        wxDC *source, wxCoord xsrc, wxCoord ysrc,
+                        wxRasterOperationMode rop = wxCOPY, bool useMask = false, 
+                        wxCoord xsrcMask = -1, wxCoord ysrcMask = -1);
 
     virtual bool DoStretchBlit(wxCoord xdest, wxCoord ydest,
                                wxCoord dstWidth, wxCoord dstHeight,
                                wxDC *source,
                                wxCoord xsrc, wxCoord ysrc,
                                wxCoord srcWidth, wxCoord srcHeight,
-                               int rop = wxCOPY, bool useMask = false,
+                               wxRasterOperationMode = wxCOPY, bool useMask = false,
                                wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord);
 
     virtual void DoGetSize(int *,int *) const;
@@ -166,11 +167,11 @@
     virtual void DoDrawLines(int n, wxPoint points[],
         wxCoord xoffset, wxCoord yoffset);
     virtual void DoDrawPolygon(int n, wxPoint points[],
-        wxCoord xoffset, wxCoord yoffset,
-        int fillStyle = wxODDEVEN_RULE);
+                               wxCoord xoffset, wxCoord yoffset,
+                               wxPolygonFillMode fillStyle = wxODDEVEN_RULE);
     virtual void DoDrawPolyPolygon(int n, int count[], wxPoint points[],
-        wxCoord xoffset, wxCoord yoffset,
-        int fillStyle);
+                                   wxCoord xoffset, wxCoord yoffset,
+                                   wxPolygonFillMode fillStyle);
 
     virtual void DoSetDeviceClippingRegion(const wxRegion& region);
     virtual void DoSetClippingRegion(wxCoord x, wxCoord y,
Index: include/wx/msw/dc.h
===================================================================
--- include/wx/msw/dc.h	(revision 55571)
+++ include/wx/msw/dc.h	(working copy)
@@ -80,14 +80,14 @@
     virtual wxSize GetPPI() const;
 
 
-    virtual void SetMapMode(int mode);
+    virtual void SetMapMode(wxMappingMode mode);
     virtual void SetUserScale(double x, double y);
     virtual void SetLogicalScale(double x, double y);
     virtual void SetLogicalOrigin(wxCoord x, wxCoord y);
     virtual void SetDeviceOrigin(wxCoord x, wxCoord y);
     virtual void SetAxisOrientation(bool xLeftRight, bool yBottomUp);
 
-    virtual void SetLogicalFunction(int function);
+    virtual void SetLogicalFunction(wxRasterOperationMode function);
 
     // implementation from now on
     // --------------------------
@@ -173,7 +173,7 @@
     virtual bool DoGetPartialTextExtents(const wxString& text, wxArrayInt& widths) const;
 
     virtual bool DoFloodFill(wxCoord x, wxCoord y, const wxColour& col,
-                             int style = wxFLOOD_SURFACE);
+                             wxFloodFillStyle style = wxFLOOD_SURFACE);
 
     virtual void DoGradientFillLinear(const wxRect& rect,
                                       const wxColour& initialColour,
@@ -215,14 +215,15 @@
 
     virtual bool DoBlit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height,
                         wxDC *source, wxCoord xsrc, wxCoord ysrc,
-                        int rop = wxCOPY, bool useMask = false, wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord);
+                        wxRasterOperationMode rop = wxCOPY, bool useMask = false, 
+                        wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord);
 
     virtual bool DoStretchBlit(wxCoord xdest, wxCoord ydest,
                                wxCoord dstWidth, wxCoord dstHeight,
                                wxDC *source,
                                wxCoord xsrc, wxCoord ysrc,
                                wxCoord srcWidth, wxCoord srcHeight,
-                               int rop = wxCOPY, bool useMask = false,
+                               wxRasterOperationMode rop = wxCOPY, bool useMask = false,
                                wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord);
 
     virtual void DoSetClippingRegion(wxCoord x, wxCoord y,
@@ -237,10 +238,10 @@
                              wxCoord xoffset, wxCoord yoffset);
     virtual void DoDrawPolygon(int n, wxPoint points[],
                                wxCoord xoffset, wxCoord yoffset,
-                               int fillStyle = wxODDEVEN_RULE);
+                               wxPolygonFillMode fillStyle = wxODDEVEN_RULE);
     virtual void DoDrawPolyPolygon(int n, int count[], wxPoint points[],
                                    wxCoord xoffset, wxCoord yoffset,
-                                   int fillStyle = wxODDEVEN_RULE);
+                                   wxPolygonFillMode fillStyle = wxODDEVEN_RULE);
     virtual wxBitmap DoGetAsBitmap(const wxRect *subrect) const
     {
         return subrect == NULL ? GetSelectedBitmap()
Index: include/wx/x11/dcclient.h
===================================================================
--- include/wx/x11/dcclient.h	(revision 55571)
+++ include/wx/x11/dcclient.h	(working copy)
@@ -40,7 +40,8 @@
 
 protected:
     virtual void DoGetSize(int *width, int *height) const;
-    virtual bool DoFloodFill( wxCoord x, wxCoord y, const wxColour& col, int style = wxFLOOD_SURFACE );
+    virtual bool DoFloodFill( wxCoord x, wxCoord y, const wxColour& col, 
+                              wxFloodFillStyle style = wxFLOOD_SURFACE );
     virtual bool DoGetPixel( wxCoord x, wxCoord y, wxColour *col ) const;
 
     virtual void DoDrawPoint(wxCoord x, wxCoord y);
@@ -69,7 +70,8 @@
 
     virtual bool DoBlit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height,
         wxDC *source, wxCoord xsrc, wxCoord ysrc,
-        int rop = wxCOPY, bool useMask = false, wxCoord xsrcMask = -1, wxCoord ysrcMask = -1);
+        wxRasterOperationMode rop = wxCOPY, bool useMask = false, 
+        wxCoord xsrcMask = -1, wxCoord ysrcMask = -1);
 
     virtual void DoSetClippingRegion(wxCoord x, wxCoord y,
         wxCoord width, wxCoord height);
@@ -79,7 +81,7 @@
         wxCoord xoffset, wxCoord yoffset);
     virtual void DoDrawPolygon(int n, wxPoint points[],
         wxCoord xoffset, wxCoord yoffset,
-        int fillStyle = wxODDEVEN_RULE);
+        wxPolygonFillMode fillStyle = wxODDEVEN_RULE);
 
 
 public:
@@ -91,7 +93,7 @@
     virtual void SetBackground(const wxBrush& brush);
     virtual void SetBackgroundMode(int mode);
     virtual void SetPalette(const wxPalette& palette);
-    virtual void SetLogicalFunction( int function );
+    virtual void SetLogicalFunction( wxRasterOperationMode function );
 
     virtual void SetTextForeground(const wxColour& colour);
     virtual void SetTextBackground(const wxColour& colour);
Index: include/wx/dc.h
===================================================================
--- include/wx/dc.h	(revision 55571)
+++ include/wx/dc.h	(working copy)
@@ -42,6 +42,83 @@
 class WXDLLIMPEXP_FWD_CORE wxPrinterDC;
 class WXDLLIMPEXP_FWD_CORE wxPrintData;
 
+//  Logical ops
+enum wxRasterOperationMode
+{
+    wxCLEAR,       // 0
+    wxXOR,         // src XOR dst
+    wxINVERT,      // NOT dst
+    wxOR_REVERSE,  // src OR (NOT dst)
+    wxAND_REVERSE, // src AND (NOT dst)
+    wxCOPY,        // src
+    wxAND,         // src AND dst
+    wxAND_INVERT,  // (NOT src) AND dst
+    wxNO_OP,       // dst
+    wxNOR,         // (NOT src) AND (NOT dst)
+    wxEQUIV,       // (NOT src) XOR dst
+    wxSRC_INVERT,  // (NOT src)
+    wxOR_INVERT,   // (NOT src) OR dst
+    wxNAND,        // (NOT src) OR (NOT dst)
+    wxOR,          // src OR dst
+    wxSET          // 1
+#ifdef WXWIN_COMPATIBILITY_2_8
+    ,wxROP_BLACK = wxCLEAR,
+    wxBLIT_BLACKNESS = wxCLEAR,
+    wxROP_XORPEN = wxXOR,
+    wxBLIT_SRCINVERT = wxXOR,
+    wxROP_NOT = wxINVERT,
+    wxBLIT_DSTINVERT = wxINVERT,
+    wxROP_MERGEPENNOT = wxOR_REVERSE,
+    wxBLIT_00DD0228 = wxOR_REVERSE,
+    wxROP_MASKPENNOT = wxAND_REVERSE,
+    wxBLIT_SRCERASE = wxAND_REVERSE,
+    wxROP_COPYPEN = wxCOPY,
+    wxBLIT_SRCCOPY = wxCOPY,
+    wxROP_MASKPEN = wxAND,
+    wxBLIT_SRCAND = wxAND,
+    wxROP_MASKNOTPEN = wxAND_INVERT,
+    wxBLIT_00220326 = wxAND_INVERT,
+    wxROP_NOP = wxNO_OP,
+    wxBLIT_00AA0029 = wxNO_OP,
+    wxROP_NOTMERGEPEN = wxNOR,
+    wxBLIT_NOTSRCERASE = wxNOR,
+    wxROP_NOTXORPEN = wxEQUIV,
+    wxBLIT_00990066 = wxEQUIV,
+    wxROP_NOTCOPYPEN = wxSRC_INVERT,
+    wxBLIT_NOTSCRCOPY = wxSRC_INVERT,
+    wxROP_MERGENOTPEN = wxOR_INVERT,
+    wxBLIT_MERGEPAINT = wxOR_INVERT,
+    wxROP_NOTMASKPEN = wxNAND,
+    wxBLIT_007700E6 = wxNAND,
+    wxROP_MERGEPEN = wxOR,
+    wxBLIT_SRCPAINT = wxOR,
+    wxROP_WHITE = wxSET,
+    wxBLIT_WHITENESS = wxSET
+#endif //WXWIN_COMPATIBILITY_2_8
+};
+
+//  Flood styles
+enum wxFloodFillStyle
+{
+    wxFLOOD_SURFACE = 1,
+    wxFLOOD_BORDER
+};
+
+//  Mapping modes (same values as used by Windows, don't change)
+enum wxMappingMode
+{
+    wxMM_TEXT = 1,
+    wxMM_LOMETRIC,
+    wxMM_HIMETRIC,
+    wxMM_LOENGLISH,
+    wxMM_HIENGLISH,
+    wxMM_TWIPS,
+    wxMM_ISOTROPIC,
+    wxMM_ANISOTROPIC,
+    wxMM_POINTS,
+    wxMM_METRIC
+};
+
 //-----------------------------------------------------------------------------
 // wxDrawObject helper class
 //-----------------------------------------------------------------------------
@@ -292,8 +369,9 @@
 
     // logical functions
 
-    virtual void SetLogicalFunction(int function) = 0;
-    virtual int GetLogicalFunction() const { return m_logicalFunction; }
+    virtual void SetLogicalFunction(wxRasterOperationMode function) = 0;
+    virtual wxRasterOperationMode GetLogicalFunction() const 
+                                      { return m_logicalFunction; }
 
     // text measurement
 
@@ -350,8 +428,8 @@
     virtual wxCoord LogicalToDeviceXRel(wxCoord x) const;
     virtual wxCoord LogicalToDeviceYRel(wxCoord y) const;
 
-    virtual void SetMapMode(int mode);
-    virtual int GetMapMode() const { return m_mappingMode; }
+    virtual void SetMapMode(wxMappingMode mode);
+    virtual wxMappingMode GetMapMode() const { return m_mappingMode; }
 
     virtual void SetUserScale(double x, double y);
     virtual void GetUserScale(double *x, double *y) const
@@ -392,7 +470,7 @@
     // the actual drawing API
 
     virtual bool DoFloodFill(wxCoord x, wxCoord y, const wxColour& col,
-                             int style = wxFLOOD_SURFACE) = 0;
+                             wxFloodFillStyle style = wxFLOOD_SURFACE) = 0;
 
     virtual void DoGradientFillLinear(const wxRect& rect,
                                       const wxColour& initialColour,
@@ -438,7 +516,7 @@
                         wxCoord width, wxCoord height,
                         wxDC *source,
                         wxCoord xsrc, wxCoord ysrc,
-                        int rop = wxCOPY,
+                        wxRasterOperationMode rop = wxCOPY,
                         bool useMask = false,
                         wxCoord xsrcMask = wxDefaultCoord,
                         wxCoord ysrcMask = wxDefaultCoord) = 0;
@@ -448,7 +526,7 @@
                                wxDC *source,
                                wxCoord xsrc, wxCoord ysrc,
                                wxCoord srcWidth, wxCoord srcHeight,
-                               int rop = wxCOPY,
+                               wxRasterOperationMode rop = wxCOPY,
                                bool useMask = false,
                                wxCoord xsrcMask = wxDefaultCoord,
                                wxCoord ysrcMask = wxDefaultCoord);
@@ -463,14 +541,14 @@
                            wxCoord xoffset, wxCoord yoffset );
 
     virtual void DoDrawPolygon(int n, wxPoint points[],
-                               wxCoord xoffset, wxCoord yoffset,
-                               int fillStyle = wxODDEVEN_RULE) = 0;
+                           wxCoord xoffset, wxCoord yoffset,
+                           wxPolygonFillMode fillStyle = wxODDEVEN_RULE) = 0;
     virtual void DoDrawPolyPolygon(int n, int count[], wxPoint points[],
                                wxCoord xoffset, wxCoord yoffset,
-                               int fillStyle);
+                               wxPolygonFillMode fillStyle);
     void DrawPolygon(const wxPointList *list,
                      wxCoord xoffset, wxCoord yoffset,
-                     int fillStyle );
+                     wxPolygonFillMode fillStyle );
 
 
 #if wxUSE_SPLINES
@@ -598,9 +676,9 @@
     wxCoord m_minX, m_minY, m_maxX, m_maxY;
     wxCoord m_clipX1, m_clipY1, m_clipX2, m_clipY2;
 
-    int m_logicalFunction;
+    wxRasterOperationMode m_logicalFunction;
     int m_backgroundMode;
-    int m_mappingMode;
+    wxMappingMode m_mappingMode;
 
     wxPen             m_pen;
     wxBrush           m_brush;
@@ -745,9 +823,9 @@
 
     // logical functions
 
-    void SetLogicalFunction(int function)
+    void SetLogicalFunction(wxRasterOperationMode function)
         { m_pimpl->SetLogicalFunction(function); }
-    int GetLogicalFunction() const
+    wxRasterOperationMode GetLogicalFunction() const
         { return m_pimpl->GetLogicalFunction(); }
 
     // text measurement
@@ -844,9 +922,9 @@
     wxCoord LogicalToDeviceYRel(wxCoord y) const
         { return m_pimpl->LogicalToDeviceYRel(y); }
 
-    void SetMapMode(int mode)
+    void SetMapMode(wxMappingMode mode)
         { m_pimpl->SetMapMode(mode); }
-    int GetMapMode() const
+    wxMappingMode GetMapMode() const
         { return m_pimpl->GetMapMode(); }
 
     void SetUserScale(double x, double y)
@@ -894,10 +972,10 @@
     // the actual drawing API
 
     bool FloodFill(wxCoord x, wxCoord y, const wxColour& col,
-                   int style = wxFLOOD_SURFACE)
+                   wxFloodFillStyle style = wxFLOOD_SURFACE)
         { return m_pimpl->DoFloodFill(x, y, col, style); }
     bool FloodFill(const wxPoint& pt, const wxColour& col,
-                   int style = wxFLOOD_SURFACE)
+                   wxFloodFillStyle style = wxFLOOD_SURFACE)
         { return m_pimpl->DoFloodFill(pt.x, pt.y, col, style); }
 
     // fill the area specified by rect with a radial gradient, starting from
@@ -974,20 +1052,20 @@
 
     void DrawPolygon(int n, wxPoint points[],
                      wxCoord xoffset = 0, wxCoord yoffset = 0,
-                     int fillStyle = wxODDEVEN_RULE)
+                     wxPolygonFillMode fillStyle = wxODDEVEN_RULE)
         { m_pimpl->DoDrawPolygon(n, points, xoffset, yoffset, fillStyle); }
     void DrawPolygon(const wxPointList *list,
                      wxCoord xoffset = 0, wxCoord yoffset = 0,
-                     int fillStyle = wxODDEVEN_RULE)
+                     wxPolygonFillMode fillStyle = wxODDEVEN_RULE)
         { m_pimpl->DrawPolygon( list, xoffset, yoffset, fillStyle ); }
     void DrawPolyPolygon(int n, int count[], wxPoint points[],
                          wxCoord xoffset = 0, wxCoord yoffset = 0,
-                         int fillStyle = wxODDEVEN_RULE)
+                         wxPolygonFillMode fillStyle = wxODDEVEN_RULE)
         { m_pimpl->DoDrawPolyPolygon(n, count, points, xoffset, yoffset, fillStyle); }
 #if WXWIN_COMPATIBILITY_2_8
     wxDEPRECATED( void DrawPolygon(const wxList *list,
                      wxCoord xoffset = 0, wxCoord yoffset = 0,
-                     int fillStyle = wxODDEVEN_RULE) );
+                     wxPolygonFillMode fillStyle = wxODDEVEN_RULE) );
 #endif  // WXWIN_COMPATIBILITY_2_8
 
     void DrawRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height)
@@ -1058,14 +1136,16 @@
 
     bool Blit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height,
               wxDC *source, wxCoord xsrc, wxCoord ysrc,
-              int rop = wxCOPY, bool useMask = false, wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord)
+              wxRasterOperationMode rop = wxCOPY, bool useMask = false, 
+              wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord)
     {
         return m_pimpl->DoBlit(xdest, ydest, width, height,
                       source, xsrc, ysrc, rop, useMask, xsrcMask, ysrcMask);
     }
     bool Blit(const wxPoint& destPt, const wxSize& sz,
               wxDC *source, const wxPoint& srcPt,
-              int rop = wxCOPY, bool useMask = false, const wxPoint& srcPtMask = wxDefaultPosition)
+              wxRasterOperationMode rop = wxCOPY, bool useMask = false, 
+              const wxPoint& srcPtMask = wxDefaultPosition)
     {
         return m_pimpl->DoBlit(destPt.x, destPt.y, sz.x, sz.y,
                       source, srcPt.x, srcPt.y, rop, useMask, srcPtMask.x, srcPtMask.y);
@@ -1076,7 +1156,7 @@
                      wxDC *source,
                      wxCoord srcX, wxCoord srcY,
                      wxCoord srcWidth, wxCoord srcHeight,
-                     int rop = wxCOPY, bool useMask = false,
+                     wxRasterOperationMode rop = wxCOPY, bool useMask = false,
                      wxCoord srcMaskX = wxDefaultCoord, wxCoord srcMaskY = wxDefaultCoord)
     {
         return m_pimpl->DoStretchBlit(dstX, dstY, dstWidth, dstHeight,
@@ -1084,7 +1164,8 @@
     }
     bool StretchBlit(const wxPoint& dstPt, const wxSize& dstSize,
                      wxDC *source, const wxPoint& srcPt, const wxSize& srcSize,
-                     int rop = wxCOPY, bool useMask = false, const wxPoint& srcMaskPt = wxDefaultPosition)
+                     wxRasterOperationMode rop = wxCOPY, bool useMask = false, 
+                     const wxPoint& srcMaskPt = wxDefaultPosition)
     {
         return m_pimpl->DoStretchBlit(dstPt.x, dstPt.y, dstSize.x, dstSize.y,
                       source, srcPt.x, srcPt.y, srcSize.x, srcSize.y, rop, useMask, srcMaskPt.x, srcMaskPt.y);
Index: include/wx/gdicmn.h
===================================================================
--- include/wx/gdicmn.h	(revision 55571)
+++ include/wx/gdicmn.h	(working copy)
@@ -85,6 +85,13 @@
     wxBITMAP_TYPE_ANY = 50
 };
 
+//  Polygon filling mode
+enum wxPolygonFillMode
+{
+    wxODDEVEN_RULE = 1,
+    wxWINDING_RULE
+};
+
 // Standard cursors
 enum wxStockCursor
 {
Index: include/wx/gtk/print.h
===================================================================
--- include/wx/gtk/print.h	(revision 55571)
+++ include/wx/gtk/print.h	(working copy)
@@ -234,7 +234,7 @@
     void SetFont( const wxFont& font );
     void SetPen( const wxPen& pen );
     void SetBrush( const wxBrush& brush );
-    void SetLogicalFunction( int function );
+    void SetLogicalFunction( wxRasterOperationMode function );
     void SetBackground( const wxBrush& brush );
     void DestroyClippingRegion();
     bool StartDoc(const wxString& message);
@@ -255,7 +255,8 @@
     virtual wxRect GetPaperRect();
 
 protected:
-    bool DoFloodFill(wxCoord x1, wxCoord y1, const wxColour &col, int style=wxFLOOD_SURFACE );
+    bool DoFloodFill(wxCoord x1, wxCoord y1, const wxColour &col, 
+                     wxFloodFillStyle style=wxFLOOD_SURFACE );
     void DoGradientFillConcentric(const wxRect& rect, const wxColour& initialColour, const wxColour& destColour, const wxPoint& circleCenter);
     void DoGradientFillLinear(const wxRect& rect, const wxColour& initialColour, const wxColour& destColour, wxDirection nDirection = wxEAST);
     bool DoGetPixel(wxCoord x1, wxCoord y1, wxColour *col) const;
@@ -265,8 +266,8 @@
     void DoDrawEllipticArc(wxCoord x,wxCoord y,wxCoord w,wxCoord h,double sa,double ea);
     void DoDrawPoint(wxCoord x, wxCoord y);
     void DoDrawLines(int n, wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0);
-    void DoDrawPolygon(int n, wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, int fillStyle=wxODDEVEN_RULE);
-    void DoDrawPolyPolygon(int n, int count[], wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, int fillStyle=wxODDEVEN_RULE);
+    void DoDrawPolygon(int n, wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, wxPolygonFillMode fillStyle=wxODDEVEN_RULE);
+    void DoDrawPolyPolygon(int n, int count[], wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, wxPolygonFillMode fillStyle=wxODDEVEN_RULE);
     void DoDrawRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height);
     void DoDrawRoundedRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height, double radius = 20.0);
     void DoDrawEllipse(wxCoord x, wxCoord y, wxCoord width, wxCoord height);
@@ -274,7 +275,8 @@
     void DoDrawSpline(const wxPointList *points);
 #endif
     bool DoBlit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height,
-            wxDC *source, wxCoord xsrc, wxCoord ysrc, int rop = wxCOPY, bool useMask = false,
+            wxDC *source, wxCoord xsrc, wxCoord ysrc, 
+            wxRasterOperationMode rop = wxCOPY, bool useMask = false,
             wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord);
     void DoDrawIcon( const wxIcon& icon, wxCoord x, wxCoord y );
     void DoDrawBitmap( const wxBitmap& bitmap, wxCoord x, wxCoord y, bool useMask = false  );
Index: include/wx/gtk/dcclient.h
===================================================================
--- include/wx/gtk/dcclient.h	(revision 55571)
+++ include/wx/gtk/dcclient.h	(working copy)
@@ -32,7 +32,8 @@
     virtual bool CanGetTextExtent() const { return true; }
 
     virtual void DoGetSize(int *width, int *height) const;
-    virtual bool DoFloodFill( wxCoord x, wxCoord y, const wxColour& col, int style=wxFLOOD_SURFACE );
+    virtual bool DoFloodFill( wxCoord x, wxCoord y, const wxColour& col, 
+                              wxFloodFillStyle style=wxFLOOD_SURFACE );
     virtual bool DoGetPixel( wxCoord x1, wxCoord y1, wxColour *col ) const;
 
     virtual void DoDrawLine( wxCoord x1, wxCoord y1, wxCoord x2, wxCoord y2 );
@@ -47,7 +48,7 @@
                              wxCoord xoffset, wxCoord yoffset);
     virtual void DoDrawPolygon(int n, wxPoint points[],
                                wxCoord xoffset, wxCoord yoffset,
-                               int fillStyle = wxODDEVEN_RULE);
+                               wxPolygonFillMode fillStyle = wxODDEVEN_RULE);
 
     virtual void DoDrawRectangle( wxCoord x, wxCoord y, wxCoord width, wxCoord height );
     virtual void DoDrawRoundedRectangle( wxCoord x, wxCoord y, wxCoord width, wxCoord height, double radius = 20.0 );
@@ -57,9 +58,12 @@
     virtual void DoDrawBitmap( const wxBitmap &bitmap, wxCoord x, wxCoord y,
                                bool useMask = false );
 
-    virtual bool DoBlit( wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height,
+    virtual bool DoBlit( wxCoord xdest, wxCoord ydest, 
+                         wxCoord width, wxCoord height,
                          wxDC *source, wxCoord xsrc, wxCoord ysrc,
-                         int logical_func = wxCOPY, bool useMask = false, wxCoord xsrcMask = -1, wxCoord ysrcMask = -1 );
+                         wxRasterOperationMode logical_func = wxCOPY, 
+                         bool useMask = false, 
+                         wxCoord xsrcMask = -1, wxCoord ysrcMask = -1 );
 
     virtual void DoDrawText( const wxString &text, wxCoord x, wxCoord y );
     virtual void DoDrawRotatedText(const wxString& text, wxCoord x, wxCoord y,
@@ -82,7 +86,7 @@
     virtual void SetPen( const wxPen &pen );
     virtual void SetBrush( const wxBrush &brush );
     virtual void SetBackground( const wxBrush &brush );
-    virtual void SetLogicalFunction( int function );
+    virtual void SetLogicalFunction( wxRasterOperationMode function );
     virtual void SetTextForeground( const wxColour &col );
     virtual void SetTextBackground( const wxColour &col );
     virtual void SetBackgroundMode( int mode );
Index: include/wx/gtk/gnome/gprint.h
===================================================================
--- include/wx/gtk/gnome/gprint.h	(revision 55571)
+++ include/wx/gtk/gnome/gprint.h	(working copy)
@@ -234,7 +234,7 @@
     void SetFont( const wxFont& font );
     void SetPen( const wxPen& pen );
     void SetBrush( const wxBrush& brush );
-    void SetLogicalFunction( int function );
+    void SetLogicalFunction( wxRasterOperationMode function );
     void SetBackground( const wxBrush& brush );
     void DestroyClippingRegion();
     bool StartDoc(const wxString& message);
@@ -250,7 +250,8 @@
     void SetPalette(const wxPalette& WXUNUSED(palette)) { }
 
 protected:
-    bool DoFloodFill(wxCoord x1, wxCoord y1, const wxColour &col, int style=wxFLOOD_SURFACE );
+    bool DoFloodFill(wxCoord x1, wxCoord y1, const wxColour &col, 
+                    wxFloodFillStyle style=wxFLOOD_SURFACE );
     bool DoGetPixel(wxCoord x1, wxCoord y1, wxColour *col) const;
     void DoDrawLine(wxCoord x1, wxCoord y1, wxCoord x2, wxCoord y2);
     void DoCrossHair(wxCoord x, wxCoord y);
@@ -258,8 +259,8 @@
     void DoDrawEllipticArc(wxCoord x,wxCoord y,wxCoord w,wxCoord h,double sa,double ea);
     void DoDrawPoint(wxCoord x, wxCoord y);
     void DoDrawLines(int n, wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0);
-    void DoDrawPolygon(int n, wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, int fillStyle=wxODDEVEN_RULE);
-    void DoDrawPolyPolygon(int n, int count[], wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, int fillStyle=wxODDEVEN_RULE);
+    void DoDrawPolygon(int n, wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, wxPolygonFillMode fillStyle=wxODDEVEN_RULE);
+    void DoDrawPolyPolygon(int n, int count[], wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, wxPolygonFillMode fillStyle=wxODDEVEN_RULE);
     void DoDrawRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height);
     void DoDrawRoundedRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height, double radius = 20.0);
     void DoDrawEllipse(wxCoord x, wxCoord y, wxCoord width, wxCoord height);
@@ -267,7 +268,8 @@
     void DoDrawSpline(const wxPointList *points);
 #endif 
     bool DoBlit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height,
-            wxDC *source, wxCoord xsrc, wxCoord ysrc, int rop = wxCOPY, bool useMask = false,
+            wxDC *source, wxCoord xsrc, wxCoord ysrc, 
+            wxRasterOperationMode = wxCOPY, bool useMask = false,
             wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord);
     void DoDrawIcon( const wxIcon& icon, wxCoord x, wxCoord y );
     void DoDrawBitmap( const wxBitmap& bitmap, wxCoord x, wxCoord y, bool useMask = false  );
Index: include/wx/gtk/region.h
===================================================================
--- include/wx/gtk/region.h	(revision 55571)
+++ include/wx/gtk/region.h	(working copy)
@@ -35,7 +35,8 @@
         InitRect(rect.x, rect.y, rect.width, rect.height);
     }
 
-    wxRegion( size_t n, const wxPoint *points, int fillStyle = wxODDEVEN_RULE );
+    wxRegion( size_t n, const wxPoint *points, 
+              wxPolygonFillMode fillStyle = wxODDEVEN_RULE );
 
 #if wxUSE_IMAGE
     wxRegion( const wxBitmap& bmp)
Index: include/wx/dcmirror.h
===================================================================
--- include/wx/dcmirror.h	(revision 55571)
+++ include/wx/dcmirror.h	(working copy)
@@ -53,7 +53,7 @@
     virtual int GetDepth() const { return m_dc.GetDepth(); }
     virtual wxSize GetPPI() const { return m_dc.GetPPI(); }
     virtual bool IsOk() const { return m_dc.IsOk(); }
-    virtual void SetMapMode(int mode) { m_dc.SetMapMode(mode); }
+    virtual void SetMapMode(wxMappingMode mode) { m_dc.SetMapMode(mode); }
     virtual void SetUserScale(double x, double y)
         { m_dc.SetUserScale(GetX(x, y), GetY(x, y)); }
     virtual void SetLogicalOrigin(wxCoord x, wxCoord y)
@@ -63,7 +63,7 @@
     virtual void SetAxisOrientation(bool xLeftRight, bool yBottomUp)
         { m_dc.SetAxisOrientation(GetX(xLeftRight, yBottomUp),
                                   GetY(xLeftRight, yBottomUp)); }
-    virtual void SetLogicalFunction(int function)
+    virtual void SetLogicalFunction(wxRasterOperationMode function)
         { m_dc.SetLogicalFunction(function); }
 
 protected:
@@ -102,7 +102,7 @@
 
     // wxDCBase functions
     virtual bool DoFloodFill(wxCoord x, wxCoord y, const wxColour& col,
-                             int style = wxFLOOD_SURFACE)
+                             wxFloodFillStyle style = wxFLOOD_SURFACE)
     {
         return m_dc.DoFloodFill(GetX(x, y), GetY(x, y), col, style);
     }
@@ -202,7 +202,8 @@
     virtual bool DoBlit(wxCoord xdest, wxCoord ydest,
                         wxCoord w, wxCoord h,
                         wxDC *source, wxCoord xsrc, wxCoord ysrc,
-                        int rop = wxCOPY, bool useMask = false,
+                        wxRasterOperationMode rop = wxCOPY, 
+                        bool useMask = false,
                         wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord)
     {
         return m_dc.DoBlit(GetX(xdest, ydest), GetY(xdest, ydest),
@@ -235,7 +236,7 @@
 
     virtual void DoDrawPolygon(int n, wxPoint points[],
                                wxCoord xoffset, wxCoord yoffset,
-                               int fillStyle = wxODDEVEN_RULE)
+                               wxPolygonFillMode fillStyle = wxODDEVEN_RULE)
     {
         Mirror(n, points);
 
Index: include/wx/generic/dcpsg.h
===================================================================
--- include/wx/generic/dcpsg.h	(revision 55571)
+++ include/wx/generic/dcpsg.h	(working copy)
@@ -60,7 +60,7 @@
     void SetFont( const wxFont& font );
     void SetPen( const wxPen& pen );
     void SetBrush( const wxBrush& brush );
-    void SetLogicalFunction( int function );
+    void SetLogicalFunction( wxRasterOperationMode function );
     void SetBackground( const wxBrush& brush );
 
     void DestroyClippingRegion();
@@ -95,7 +95,8 @@
     virtual wxRect GetPaperRect();
 
 protected:
-    bool DoFloodFill(wxCoord x1, wxCoord y1, const wxColour &col, int style = wxFLOOD_SURFACE);
+    bool DoFloodFill(wxCoord x1, wxCoord y1, const wxColour &col, 
+                     wxFloodFillStyle style = wxFLOOD_SURFACE);
     bool DoGetPixel(wxCoord x1, wxCoord y1, wxColour *col) const;
     void DoDrawLine(wxCoord x1, wxCoord y1, wxCoord x2, wxCoord y2);
     void DoCrossHair(wxCoord x, wxCoord y) ;
@@ -103,8 +104,12 @@
     void DoDrawEllipticArc(wxCoord x,wxCoord y,wxCoord w,wxCoord h,double sa,double ea);
     void DoDrawPoint(wxCoord x, wxCoord y);
     void DoDrawLines(int n, wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0);
-    void DoDrawPolygon(int n, wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, int fillStyle = wxODDEVEN_RULE);
-    void DoDrawPolyPolygon(int n, int count[], wxPoint points[], wxCoord xoffset = 0, wxCoord yoffset = 0, int fillStyle = wxODDEVEN_RULE);
+    void DoDrawPolygon(int n, wxPoint points[], 
+                       wxCoord xoffset = 0, wxCoord yoffset = 0, 
+                       wxPolygonFillMode fillStyle = wxODDEVEN_RULE);
+    void DoDrawPolyPolygon(int n, int count[], wxPoint points[], 
+                           wxCoord xoffset = 0, wxCoord yoffset = 0, 
+                           wxPolygonFillMode fillStyle = wxODDEVEN_RULE);
     void DoDrawRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height);
     void DoDrawRoundedRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height, double radius = 20);
     void DoDrawEllipse(wxCoord x, wxCoord y, wxCoord width, wxCoord height);
@@ -112,7 +117,8 @@
     void DoDrawSpline(const wxPointList *points);
 #endif
     bool DoBlit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height,
-                wxDC *source, wxCoord xsrc, wxCoord ysrc, int rop = wxCOPY, bool useMask = false,
+                wxDC *source, wxCoord xsrc, wxCoord ysrc, 
+                wxRasterOperationMode rop = wxCOPY, bool useMask = false,
                 wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord);
     void DoDrawIcon(const wxIcon& icon, wxCoord x, wxCoord y);
     void DoDrawBitmap(const wxBitmap& bitmap, wxCoord x, wxCoord y, bool useMask = false);
Index: include/wx/defs.h
===================================================================
--- include/wx/defs.h	(revision 55571)
+++ include/wx/defs.h	(working copy)
@@ -2223,41 +2223,6 @@
 #endif
 };
 
-/*  Logical ops */
-typedef enum
-{
-    wxCLEAR,        wxROP_BLACK = wxCLEAR,             wxBLIT_BLACKNESS = wxCLEAR,        /*  0 */
-    wxXOR,          wxROP_XORPEN = wxXOR,              wxBLIT_SRCINVERT = wxXOR,          /*  src XOR dst */
-    wxINVERT,       wxROP_NOT = wxINVERT,              wxBLIT_DSTINVERT = wxINVERT,       /*  NOT dst */
-    wxOR_REVERSE,   wxROP_MERGEPENNOT = wxOR_REVERSE,  wxBLIT_00DD0228 = wxOR_REVERSE,    /*  src OR (NOT dst) */
-    wxAND_REVERSE,  wxROP_MASKPENNOT = wxAND_REVERSE,  wxBLIT_SRCERASE = wxAND_REVERSE,   /*  src AND (NOT dst) */
-    wxCOPY,         wxROP_COPYPEN = wxCOPY,            wxBLIT_SRCCOPY = wxCOPY,           /*  src */
-    wxAND,          wxROP_MASKPEN = wxAND,             wxBLIT_SRCAND = wxAND,             /*  src AND dst */
-    wxAND_INVERT,   wxROP_MASKNOTPEN = wxAND_INVERT,   wxBLIT_00220326 = wxAND_INVERT,    /*  (NOT src) AND dst */
-    wxNO_OP,        wxROP_NOP = wxNO_OP,               wxBLIT_00AA0029 = wxNO_OP,         /*  dst */
-    wxNOR,          wxROP_NOTMERGEPEN = wxNOR,         wxBLIT_NOTSRCERASE = wxNOR,        /*  (NOT src) AND (NOT dst) */
-    wxEQUIV,        wxROP_NOTXORPEN = wxEQUIV,         wxBLIT_00990066 = wxEQUIV,         /*  (NOT src) XOR dst */
-    wxSRC_INVERT,   wxROP_NOTCOPYPEN = wxSRC_INVERT,   wxBLIT_NOTSCRCOPY = wxSRC_INVERT,  /*  (NOT src) */
-    wxOR_INVERT,    wxROP_MERGENOTPEN = wxOR_INVERT,   wxBLIT_MERGEPAINT = wxOR_INVERT,   /*  (NOT src) OR dst */
-    wxNAND,         wxROP_NOTMASKPEN = wxNAND,         wxBLIT_007700E6 = wxNAND,          /*  (NOT src) OR (NOT dst) */
-    wxOR,           wxROP_MERGEPEN = wxOR,             wxBLIT_SRCPAINT = wxOR,            /*  src OR dst */
-    wxSET,          wxROP_WHITE = wxSET,               wxBLIT_WHITENESS = wxSET           /*  1 */
-} form_ops_t;
-
-/*  Flood styles */
-enum
-{
-    wxFLOOD_SURFACE = 1,
-    wxFLOOD_BORDER
-};
-
-/*  Polygon filling mode */
-enum
-{
-    wxODDEVEN_RULE = 1,
-    wxWINDING_RULE
-};
-
 /*  ToolPanel in wxFrame (VZ: unused?) */
 enum
 {
@@ -2455,21 +2420,6 @@
     wxMOD_ALL       = 0xffff
 };
 
-/*  Mapping modes (same values as used by Windows, don't change) */
-enum
-{
-    wxMM_TEXT = 1,
-    wxMM_LOMETRIC,
-    wxMM_HIMETRIC,
-    wxMM_LOENGLISH,
-    wxMM_HIENGLISH,
-    wxMM_TWIPS,
-    wxMM_ISOTROPIC,
-    wxMM_ANISOTROPIC,
-    wxMM_POINTS,
-    wxMM_METRIC
-};
-
 /* Shortcut for easier dialog-unit-to-pixel conversion */
 #define wxDLG_UNIT(parent, pt) parent->ConvertDialogToPixels(pt)
 
Index: samples/drawing/drawing.cpp
===================================================================
--- samples/drawing/drawing.cpp	(revision 55571)
+++ samples/drawing/drawing.cpp	(working copy)
@@ -111,7 +111,7 @@
 
     int         m_backgroundMode;
     int         m_textureBackground;
-    int         m_mapMode;
+    wxMappingMode m_mapMode;
     double      m_xUserScale;
     double      m_yUserScale;
     int         m_xLogicalOrigin;
@@ -802,7 +846,7 @@
 static const struct
 {
     const wxChar *name;
-    int           rop;
+    wxRasterOperationMode rop;
 } rasterOperations[] =
 {
     { wxT("wxAND"),          wxAND           },
Index: interface/wx/dc.h
===================================================================
--- interface/wx/dc.h	(revision 55571)
+++ interface/wx/dc.h	(working copy)
@@ -120,7 +120,7 @@
     */
     bool Blit(wxCoord xdest, wxCoord ydest, wxCoord width,
               wxCoord height, wxDC* source, wxCoord xsrc, wxCoord ysrc,
-              int logicalFunc = wxCOPY, bool useMask = false,
+              wxRasterOperationMode logicalFunc = wxCOPY, bool useMask = false,
               wxCoord xsrcMask = -1, wxCoord ysrcMask = -1);
 
     /**
@@ -332,7 +332,8 @@
         for filling the shape. Using a transparent brush suppresses filling.
     */
     void DrawPolygon(int n, wxPoint points[], wxCoord xoffset = 0,
-                     wxCoord yoffset = 0, int fill_style = wxODDEVEN_RULE);
+                     wxCoord yoffset = 0, 
+                     wxPolygonFillMode fill_style = wxODDEVEN_RULE);
     /**
         This method draws a filled polygon using a list of wxPoints, adding the
         optional offset coordinate. The first and last points are automatically
@@ -353,7 +354,7 @@
     */
     void DrawPolygon(const wxPointList* points,
                      wxCoord xoffset = 0, wxCoord yoffset = 0,
-                     int fill_style = wxODDEVEN_RULE);
+                     wxPolygonFillMode fill_style = wxODDEVEN_RULE);
 
     /**
         Draws two or more filled polygons using an array of @a points, adding
@@ -384,7 +385,7 @@
     */
     void DrawPolyPolygon(int n, int count[], wxPoint points[],
                          wxCoord xoffset = 0, wxCoord yoffset = 0,
-                         int fill_style = wxODDEVEN_RULE);
+                         wxPolygonFillMode fill_style = wxODDEVEN_RULE);
 
     /**
         Draws a rectangle with the given top left corner, and with the given
@@ -476,7 +477,7 @@
               exactly. However the function will still return @true.
     */
     bool FloodFill(wxCoord x, wxCoord y, const wxColour& colour,
-                   int style = wxFLOOD_SURFACE);
+                   wxFloodFillStyle style = wxFLOOD_SURFACE);
 
     /**
         Gets the brush used for painting the background.
@@ -549,14 +550,14 @@
 
         @see SetLogicalFunction()
     */
-    int GetLogicalFunction();
+    wxRasterOperationMode GetLogicalFunction();
 
     /**
         Gets the mapping mode for the device context.
 
         @see SetMapMode()
     */
-    int GetMapMode();
+    wxMappingMode GetMapMode();
 
     /**
         Gets the dimensions of the string using the currently selected font.
@@ -938,7 +939,7 @@
         operation. wxINVERT is commonly used for drawing rubber bands or moving
         outlines, since drawing twice reverts to the original colour.
     */
-    void SetLogicalFunction(int function);
+    void SetLogicalFunction(wxRasterOperationMode function);
 
     /**
         The mapping mode of the device context defines the unit of measurement
@@ -962,7 +963,7 @@
         - wxMM_LOMETRIC: Each logical unit is 1/10 of a mm.
         - wxMM_TEXT: Each logical unit is 1 device pixel.
     */
-    void SetMapMode(int mode);
+    void SetMapMode(wxMappingMode mode);
 
     /**
         If this is a window DC or memory DC, assigns the given palette to the
@@ -1090,7 +1091,7 @@
                      wxCoord dstWidth, wxCoord dstHeight,
                      wxDC* source, wxCoord xsrc, wxCoord ysrc,
                      wxCoord srcWidth, wxCoord srcHeight,
-                     int logicalFunc = wxCOPY,
+                     wxRasterOperationMode logicalFunc = wxCOPY,
                      bool useMask = false,
                      wxCoord xsrcMask = -1, wxCoord ysrcMask = -1);
 };
Index: interface/wx/dcsvg.h
===================================================================
--- interface/wx/dcsvg.h	(revision 55571)
+++ interface/wx/dcsvg.h	(working copy)
@@ -67,7 +67,7 @@
     */
     bool Blit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height,
               wxSVGFileDC* source, wxCoord xsrc, wxCoord ysrc,
-              int logicalFunc = wxCOPY, bool useMask = FALSE,
+              wxRasterOperationMode logicalFunc = wxCOPY, bool useMask = FALSE,
               wxCoord xsrcMask = -1, wxCoord ysrcMask = -1);
 
     /**
@@ -240,9 +240,11 @@
         The programmer is responsible for deleting the list of points.
     */
     void DrawPolygon(int n, wxPoint points[], wxCoord xoffset = 0,
-                     wxCoord yoffset = 0, int fill_style = wxODDEVEN_RULE);
+                     wxCoord yoffset = 0, 
+                     wxPolygonFillMode fill_style = wxODDEVEN_RULE);
     void DrawPolygon(wxList* points, wxCoord xoffset = 0,
-                     wxCoord yoffset = 0, int fill_style = wxODDEVEN_RULE);
+                     wxCoord yoffset = 0, 
+                     wxPolygonFillMode fill_style = wxODDEVEN_RULE);
     //@}
 
     /**
@@ -321,7 +323,7 @@
         Not implemented.
     */
     void FloodFill(wxCoord x, wxCoord y, const wxColour& colour,
-                   int style = wxFLOOD_SURFACE);
+                   wxFloodFillStyle style = wxFLOOD_SURFACE);
 
     //@{
     /**
@@ -380,7 +382,7 @@
 
         @see SetLogicalFunction()
     */
-    int GetLogicalFunction();
+    wxRasterOperationMode GetLogicalFunction();
 
     /**
         Gets the mapping mode for the device context.
@@ -587,9 +589,9 @@
 
     /**
         Does the same as wxDC::SetLogicalFunction(), except that only wxCOPY is
-        avalaible. Trying to set one of the othe values will fail.
+        available. Trying to set one of the other values will fail.
     */
-    void SetLogicalFunction(int function);
+    void SetLogicalFunction(wxRasterOperationMode function);
 
     /**
         The mapping mode of the device context defines the unit of measurement
