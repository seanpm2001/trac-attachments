diff -ur include/wx/aui/floatpane.h include/wx/aui/floatpane.h
--- include/wx/aui/floatpane.h	2006-08-23 07:02:53.000000000 -0700
+++ include/wx/aui/floatpane.h	2006-10-13 16:59:25.774398900 -0700
@@ -35,19 +35,26 @@
     wxFloatingPane(wxWindow* parent,
                    wxFrameManager* owner_mgr,
                    const wxPaneInfo& pane,
-                   wxWindowID id = wxID_ANY
+                   wxWindowID id = wxID_ANY,
+                   long style = wxRESIZE_BORDER | wxSYSTEM_MENU | wxCAPTION |
+                                wxFRAME_NO_TASKBAR | wxFRAME_FLOAT_ON_PARENT | 
+                                wxCLIP_CHILDREN
                    );
-    ~wxFloatingPane();
+    virtual ~wxFloatingPane();
     void SetPaneWindow(const wxPaneInfo& pane);
+
+protected:
+    virtual void OnMoveStart();
+    virtual void OnMoving(const wxRect& window_rect, wxDirection dir);
+    virtual void OnMoveFinished();
+
 private:
     void OnSize(wxSizeEvent& event);
     void OnClose(wxCloseEvent& event);
     void OnMoveEvent(wxMoveEvent& event);
     void OnIdle(wxIdleEvent& event);
-    void OnMoveStart();
-    void OnMoving(const wxRect& window_rect, wxDirection dir);
-    void OnMoveFinished();
     void OnActivate(wxActivateEvent& event);
+
     static bool isMouseDown();
 private:
     wxWindow* m_pane_window;    // pane window being managed
diff -ur include/wx/aui/framemanager.h include/wx/aui/framemanager.h
--- include/wx/aui/framemanager.h	2006-08-27 08:19:39.000000000 -0700
+++ include/wx/aui/framemanager.h	2006-10-16 11:35:26.058744300 -0700
@@ -440,6 +443,7 @@
 
 
 public:
+    virtual wxFloatingPane * CreateFloatingFrame(wxWindow* parent, const wxPaneInfo& p);
 
     void DrawHintRect(wxWindow* pane_window,
                        const wxPoint& pt,
diff -ur src/aui/floatpane.cpp src/aui/floatpane.cpp
--- src/aui/floatpane.cpp	2006-08-23 04:17:04.000000000 -0700
+++ src/aui/floatpane.cpp	2006-10-13 17:09:26.034542900 -0700
@@ -37,13 +37,15 @@
 wxFloatingPane::wxFloatingPane(wxWindow* parent,
                 wxFrameManager* owner_mgr,
                 const wxPaneInfo& pane,
-                wxWindowID id /*= wxID_ANY*/)
+                wxWindowID id /*= wxID_ANY*/,
+                long style /*=wxRESIZE_BORDER | wxSYSTEM_MENU | wxCAPTION |
+                              wxFRAME_NO_TASKBAR | wxFRAME_FLOAT_ON_PARENT | 
+                              wxCLIP_CHILDREN
+                           */)
                 : wxFloatingPaneBaseClass(parent, id, wxEmptyString,
                         pane.floating_pos, pane.floating_size,
-                        wxRESIZE_BORDER | wxSYSTEM_MENU | wxCAPTION |
+                        style | 
                         (pane.HasCloseButton()?wxCLOSE_BOX:0) |
-                        wxFRAME_NO_TASKBAR |
-                        wxFRAME_FLOAT_ON_PARENT | wxCLIP_CHILDREN |
                         (pane.IsFixed()?0:wxRESIZE_BORDER)
                         )
 {
diff -ur src/aui/framemanager.cpp src/aui/framemanager.cpp
--- src/aui/framemanager.cpp	2006-10-16 12:40:43.574369300 -0700
+++ src/aui/framemanager.cpp	2006-10-16 11:54:42.214994300 -0700
@@ -493,6 +493,12 @@
     delete m_art;
 }
 
+// Creates a floating frame for the windows
+wxFloatingPane * wxFrameManager::CreateFloatingFrame(wxWindow* parent, const wxPaneInfo& p)
+{
+    return new wxFloatingPane(parent, this, p);
+}
+
 // GetPane() looks up a wxPaneInfo structure based
 // on the supplied window pointer.  Upon failure, GetPane()
 // returns an empty wxPaneInfo, a condition which can be checked
@@ -2009,9 +2049,7 @@
             {
                 // we need to create a frame for this
                 // pane, which has recently been floated
-                wxFloatingPane* frame = new wxFloatingPane(m_frame,
-                                                  this,
-                                                  p);
+                wxFloatingPane* frame = CreateFloatingFrame(m_frame, p);
 
 #if wxCHECK_VERSION(2,7,0)
                 // on MSW and Mac, if the owner desires transparent dragging, and

 	  	 
