448d447
<     EVT_TIMER( wxID_ANY, FormMain::OnTimer )
570,597d568
< //-----------------------------------------------------------------------------
< void FormMain::OnTimer( wxTimerEvent& e )
< //-----------------------------------------------------------------------------
< {
<     switch( e.GetId() )
<     {
<     case teListUpdate:
<         if( !m_pPropGridManager )
<         {
<             // this check is here so the frame layout can be tested
<             // without creating property grid
<             e.Skip();
<         }
<         else
<         {
<             wxPGProperty* p = m_pPropGridManager->GetPropertyByName( wxT( "LostFocusTestParent" ) );
<             if( p )
<             {
<                 const wxColour c(m_pPropGridManager->GetPropertyBackgroundColour(p));
<                 m_pPropGridManager->SetPropertyBackgroundColour(p, wxColour((c.Red() + 25) % 255, c.Green(), c.Blue()), wxPG_DONT_RECURSE);
<             }
<         }
<         break;
<     default:
<         break;
<     }
< }
< 
1131,1133d1101
<     wxPGProperty* pp = pg->Append( new wxIntProperty(wxT("LostFocusTestParent"),wxPG_LABEL,10) );
<     pg->AppendIn( pp, new wxIntProperty(wxT("LostFocusTestSpin"),wxPG_LABEL,10) );
< 
2017,2018c1985
<                 wxTAB_TRAVERSAL|wxCLOSE_BOX|wxNO_FULL_REPAINT_ON_RESIZE) ),
<                 propertyGridUpdateTimer_( this, teListUpdate)
---
>                 wxTAB_TRAVERSAL|wxCLOSE_BOX|wxNO_FULL_REPAINT_ON_RESIZE) )
2199d2165
<     propertyGridUpdateTimer_.Start( 1000 );
267,273d266
<     enum TTimerEvent
<     {
<         teListUpdate
<     };
<     wxTimer propertyGridUpdateTimer_;
<     void OnTimer( wxTimerEvent& e );
< 
