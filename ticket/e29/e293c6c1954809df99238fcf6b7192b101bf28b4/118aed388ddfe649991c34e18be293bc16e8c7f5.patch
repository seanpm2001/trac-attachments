diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ c:\wxWindows\src\msw\ownerdrw.cpp c:\supp\wxWindows\src\msw\ownerdrw.cpp
--- c:\wxWindows\src\msw\ownerdrw.cpp	Sat May 03 06:56:38 2003
+++ c:\supp\wxWindows\src\msw\ownerdrw.cpp	Sat May 03 14:17:22 2003
@@ -221,4 +221,16 @@
   #define   UnRGB(col)  GetRValue(col), GetGValue(col), GetBValue(col)
 
+
+  // this flag determines whether or not an edge will
+  // be drawn around the bitmap. In most "windows classic"
+  // applications, a 1-pixel highlight edge is drawn around
+  // the bitmap of an item when it is selected.  However,
+  // with the new "luna" theme, no edge is drawn around
+  // the bitmap because the background is white (this applies
+  // only to "non-XP style" menus w/ bitmaps --
+  // see IE 6 menus for an example)
+
+  bool draw_bitmap_edge = true;
+
   // set the colors
   // --------------
@@ -241,4 +253,15 @@
   }
 
+
+  // if background is white, don't draw an edge around the bitmap
+  DWORD menu_bg_color = GetSysColor(COLOR_MENU);
+  if (GetRValue(menu_bg_color) >= 0xf0 &&
+      GetGValue(menu_bg_color) >= 0xf0 &&
+      GetBValue(menu_bg_color) >= 0xf0)
+  {
+      draw_bitmap_edge = false;
+  }
+
+
   #ifdef  O_DRAW_NATIVE_API
     #define  hdc           (HDC)dc.GetHDC()
@@ -267,5 +290,5 @@
     RECT rectFill = { rc.GetLeft(), rc.GetTop(), rc.GetRight()+1, rc.GetBottom() };
 
-    if ( st & wxODSelected && m_bmpChecked.Ok()) {
+    if ( st & wxODSelected && m_bmpChecked.Ok() && draw_bitmap_edge) {
         // only draw the highlight under the text, not under
         // the bitmap or checkmark; leave a 1-pixel gap.
@@ -374,5 +397,5 @@
               &dcMem, 0, 0, wxCOPY, TRUE /* use mask */);
 
-      if ( st & wxODSelected ) {
+      if ( st & wxODSelected && draw_bitmap_edge ) {
         #ifdef  O_DRAW_NATIVE_API
           RECT rectBmp = { rc.GetLeft(), rc.GetTop(),
@@ -380,5 +403,5 @@
                            rc.GetTop() + m_nHeight-1 };
           SetBkColor(hdc, colBack);
-          DrawEdge(hdc, &rectBmp, EDGE_RAISED, BF_SOFT | BF_RECT);
+          DrawEdge(hdc, &rectBmp, BDR_RAISEDOUTER, BF_SOFT | BF_RECT);
         #else
           int x1, y1, x2, y2;

 	  	 
