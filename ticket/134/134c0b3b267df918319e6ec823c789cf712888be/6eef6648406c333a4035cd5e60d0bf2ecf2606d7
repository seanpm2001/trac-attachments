--- src/msw/utils.cpp.orig	Sun Feb  4 13:24:10 2001
+++ src/msw/utils.cpp	Sun Feb  4 14:04:16 2001
@@ -477,9 +477,52 @@
 // ----------------------------------------------------------------------------
 
-int wxKill(long pid, int sig)
+int wxKill(long pid, wxSignal sig)
 {
-    // TODO use SendMessage(WM_QUIT) and TerminateProcess() if needed
+    HWND hHwnd;
+    HANDLE hProcess;
+    unsigned long testpid;
+    unsigned long code;
 
+    hProcess = OpenProcess(PROCESS_TERMINATE | PROCESS_QUERY_INFORMATION, 
+                           FALSE, (unsigned long)pid);
+    if (sig == wxSIGKILL)
+        TerminateProcess(hProcess, 0);
+    else if (sig != wxSIGNONE)
+    {
+        hHwnd = ::FindWindow(NULL, NULL);
+        while ((hHwnd != 0) && ((unsigned long)pid != testpid))
+        {
+            if (::GetParent(hHwnd) == 0)
+            {
+                GetWindowThreadProcessId(hHwnd, &testpid);
+                if ((unsigned long)pid == testpid)
+                {
+                    SendMessage(hHwnd, WM_CLOSE, 0, 0);
+                    // How to make this better?
+                    // If we don't wait, the return value is wrong.
+                    wxSleep(1);
+                }
+            }
+            hHwnd = GetWindow(hHwnd, GW_HWNDNEXT);
+        }
+    }
+
+    GetExitCodeProcess(hProcess, &code);
+    CloseHandle(hProcess);
+
+    if (sig == wxSIGNONE)
+    {
+        if (code == STILL_ACTIVE) 
+            return 0;
+        else
+            return -1;
+    }
+    else
+    {
+        if (code == STILL_ACTIVE) 
+            return -1;
+        else
     return 0;
+    }
 }
 

 	  	 
