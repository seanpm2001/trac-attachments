diff --git a/samples/dataview/dataview.cpp b/samples/dataview/dataview.cpp
index 434274f..0b7e610 100644
--- a/samples/dataview/dataview.cpp
+++ b/samples/dataview/dataview.cpp
@@ -609,6 +609,7 @@ void MyFrame::BuildDataViewCtrl(wxPanel* parent, unsigned int nPanel, unsigned l
                                       wxDATAVIEW_COL_RESIZABLE );
             m_ctrl[0]->AppendColumn( column5 );
 
+            m_ctrl[0]->AppendDateColumn( "date", 6 );
 
             // select initially the ninth symphony:
             m_ctrl[0]->Select(m_music_model->GetNinthItem());
diff --git a/samples/dataview/mymodels.cpp b/samples/dataview/mymodels.cpp
index e1df2f0..c0cb88c 100644
--- a/samples/dataview/mymodels.cpp
+++ b/samples/dataview/mymodels.cpp
@@ -42,18 +42,18 @@
     // setup pop music
     m_pop = new MyMusicTreeModelNode( m_root, "Pop music" );
     m_pop->Append(
-        new MyMusicTreeModelNode( m_pop, "You are not alone", "Michael Jackson", 1995 ) );
+        new MyMusicTreeModelNode( m_pop, "You are not alone", "Michael Jackson", 1995, wxDateTime::Now() ) );
     m_pop->Append(
-        new MyMusicTreeModelNode( m_pop, "Take a bow", "Madonna", 1994 ) );
+        new MyMusicTreeModelNode( m_pop, "Take a bow", "Madonna", 1994, wxDateTime::Now() ) );
     m_root->Append( m_pop );
 
     // setup classical music
     m_classical = new MyMusicTreeModelNode( m_root, "Classical music" );
     m_ninth = new MyMusicTreeModelNode( m_classical, "Ninth symphony",
-                                        "Ludwig van Beethoven", 1824 );
+                                        "Ludwig van Beethoven", 1824, wxDateTime::Now() );
     m_classical->Append( m_ninth );
     m_classical->Append( new MyMusicTreeModelNode( m_classical, "German Requiem",
-                                                   "Johannes Brahms", 1868 ) );
+                                                   "Johannes Brahms", 1868, wxDateTime::Now() ) );
     m_root->Append( m_classical );
 
     m_classicalMusicIsKnownToControl = false;
@@ -105,7 +105,7 @@ void MyMusicTreeModel::AddToClassical( const wxString &title, const wxString &ar
 
     // add to the classical music node a new node:
     MyMusicTreeModelNode *child_node =
-        new MyMusicTreeModelNode( m_classical, title, artist, year );
+        new MyMusicTreeModelNode( m_classical, title, artist, year, wxDateTime::Now() );
     m_classical->Append( child_node );
 
     // FIXME: what's m_classicalMusicIsKnownToControl for?
@@ -210,6 +210,9 @@ void MyMusicTreeModel::GetValue( wxVariant &variant,
         else
             variant = "new";
         break;
+    case 6:
+        variant = node->m_date;
+        break;
 
     default:
         wxLogError( "MyMusicTreeModel::GetValue: wrong column %d", col );
@@ -236,7 +239,9 @@ bool MyMusicTreeModel::SetValue( const wxVariant &variant,
         case 3:
             node->m_quality = variant.GetString();
             return true;
-
+        case 6:
+            node->m_date = variant.GetDateTime();
+            return true;
         default:
             wxLogError( "MyMusicTreeModel::SetValue: wrong column" );
     }
diff --git a/samples/dataview/mymodels.h b/samples/dataview/mymodels.h
index 8706bbc..9ab598b 100644
--- a/samples/dataview/mymodels.h
+++ b/samples/dataview/mymodels.h
@@ -21,7 +21,7 @@ class MyMusicTreeModelNode
 public:
     MyMusicTreeModelNode( MyMusicTreeModelNode* parent,
                           const wxString &title, const wxString &artist,
-                          unsigned int year )
+                          unsigned int year, wxDateTime date )
     {
         m_parent = parent;
 
@@ -31,6 +31,7 @@ class MyMusicTreeModelNode
         m_quality = "good";
 
         m_container = false;
+        m_date = date;
     }
 
     MyMusicTreeModelNode( MyMusicTreeModelNode* parent,
@@ -87,6 +88,7 @@ class MyMusicTreeModelNode
     // AND the classical node was removed (a new node temporary without children
     // would be added to the control)
     bool m_container;
+    wxDateTime m_date;
 
 private:
     MyMusicTreeModelNode          *m_parent;
