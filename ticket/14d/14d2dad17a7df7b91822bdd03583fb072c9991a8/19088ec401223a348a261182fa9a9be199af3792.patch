Index: include/wx/defs.h
===================================================================
--- include/wx/defs.h	(revision 70880)
+++ include/wx/defs.h	(working copy)
@@ -2147,6 +2147,8 @@
     wxID_MDI_WINDOW_TILE_HORZ,
     wxID_MDI_WINDOW_TILE_VERT,
     wxID_MDI_WINDOW_ARRANGE_ICONS,
+    wxID_MDI_WINDOW_CLOSE,
+    wxID_MDI_WINDOW_CLOSE_ALL,
     wxID_MDI_WINDOW_PREV,
     wxID_MDI_WINDOW_NEXT,
     wxID_MDI_WINDOW_LAST = wxID_MDI_WINDOW_NEXT,
Index: interface/wx/defs.h
===================================================================
--- interface/wx/defs.h	(revision 70880)
+++ interface/wx/defs.h	(working copy)
@@ -732,6 +732,8 @@
     wxID_MDI_WINDOW_TILE_HORZ,
     wxID_MDI_WINDOW_TILE_VERT,
     wxID_MDI_WINDOW_ARRANGE_ICONS,
+    wxID_MDI_WINDOW_CLOSE,
+    wxID_MDI_WINDOW_CLOSE_ALL,
     wxID_MDI_WINDOW_PREV,
     wxID_MDI_WINDOW_NEXT,
     wxID_MDI_WINDOW_LAST = wxID_MDI_WINDOW_NEXT,
Index: interface/wx/mdi.h
===================================================================
--- interface/wx/mdi.h	(revision 70880)
+++ interface/wx/mdi.h	(working copy)
@@ -316,6 +316,8 @@
             - @c wxID_MDI_WINDOW_TILE_HORZ
             - @c wxID_MDI_WINDOW_TILE_VERT
             - @c wxID_MDI_WINDOW_ARRANGE_ICONS
+            - @c wxID_MDI_WINDOW_CLOSE,
+            - @c wxID_MDI_WINDOW_CLOSE_ALL,
             - @c wxID_MDI_WINDOW_PREV
             - @c wxID_MDI_WINDOW_NEXT
         All of which are handled by wxMDIParentFrame itself. If any other
Index: samples/mdi/mdi.cpp
===================================================================
--- samples/mdi/mdi.cpp	(revision 70880)
+++ samples/mdi/mdi.cpp	(working copy)
@@ -159,7 +159,7 @@
                                   "Arrange windows in cascade");
 
         // we can remove some items
-        windowMenu->Delete(wxID_MDI_WINDOW_ARRANGE_ICONS);
+        windowMenu->Delete(wxID_MDI_WINDOW_CLOSE_ALL);
 
         // and we can add completely custom commands -- but then we must handle
         // them ourselves, see OnCloseAll()
Index: src/generic/mdig.cpp
===================================================================
--- src/generic/mdig.cpp	(revision 70880)
+++ src/generic/mdig.cpp	(working copy)
@@ -96,7 +96,7 @@
         m_windowMenu = new wxMenu;
 
         m_windowMenu->Append(wxWINDOWCLOSE,    _("Cl&ose"));
-        m_windowMenu->Append(wxWINDOWCLOSEALL, _("Close All"));
+        m_windowMenu->Append(wxWINDOWCLOSEALL, _("Close A&ll"));
         m_windowMenu->AppendSeparator();
         m_windowMenu->Append(wxWINDOWNEXT,     _("&Next"));
         m_windowMenu->Append(wxWINDOWPREV,     _("&Previous"));
Index: src/msw/mdi.cpp
===================================================================
--- src/msw/mdi.cpp	(revision 70880)
+++ src/msw/mdi.cpp	(working copy)
@@ -165,6 +165,9 @@
       m_windowMenu->Append(wxID_MDI_WINDOW_TILE_HORZ, _("Tile &Horizontally"));
       m_windowMenu->Append(wxID_MDI_WINDOW_TILE_VERT, _("Tile &Vertically"));
       m_windowMenu->AppendSeparator();
+      m_windowMenu->Append(wxID_MDI_WINDOW_CLOSE,     _("Cl&ose"));
+      m_windowMenu->Append(wxID_MDI_WINDOW_CLOSE_ALL, _("Close A&ll"));
+      m_windowMenu->AppendSeparator();
       m_windowMenu->Append(wxID_MDI_WINDOW_ARRANGE_ICONS, _("&Arrange Icons"));
       m_windowMenu->Append(wxID_MDI_WINDOW_NEXT, _("&Next"));
       m_windowMenu->Append(wxID_MDI_WINDOW_PREV, _("&Previous"));
@@ -658,6 +661,30 @@
             msg = WM_MDIICONARRANGE;
             break;
 
+        case wxID_MDI_WINDOW_CLOSE:
+            GetActiveChild()->Close();
+            return;
+
+        case wxID_MDI_WINDOW_CLOSE_ALL:
+        {
+            const wxWindowList list = GetChildren(); // make a copy of the window list
+            
+            for (wxWindowList::const_iterator i = list.begin();
+                 i != list.end();
+                 i++)
+            {
+                if (wxDynamicCast(*i, wxMDIChildFrame))
+                {
+                    if (!(*i)->Close())
+                    {
+                        // Close was vetoed
+                        break;
+                    }
+                }
+            }
+            return;
+        }
+
         case wxID_MDI_WINDOW_NEXT:
             msg = WM_MDINEXT;
             lParam = 0;         // next child
