--- wxWindows/include/wx/msw/joystick.h.orig	Tue Aug 20 15:07:35 2002
+++ wxWindows/include/wx/msw/joystick.h	Tue Aug 20 14:41:29 2002
@@ -27,5 +27,5 @@
    */
 
-  wxJoystick(int joystick = wxJOYSTICK1) { m_joystick = joystick; };
+  wxJoystick(int joystick = wxJOYSTICK1);
 
   // Attributes
@@ -46,6 +46,7 @@
   ////////////////////////////////////////////////////////////////////////////
 
+  static int GetNumberJoysticks(void);
+
   bool IsOk(void) const; // Checks that the joystick is functioning
-  int GetNumberJoysticks(void) const ;
   int GetManufacturerId(void) const ;
   int GetProductId(void) const ;
--- wxWindows/src/msw/joystick.cpp.orig	Tue Aug 20 14:59:53 2002
+++ wxWindows/src/msw/joystick.cpp	Tue Aug 20 14:51:23 2002
@@ -52,4 +52,35 @@
 ////////////////////////////////////////////////////////////////////////////
 
+/**
+	johan@linkdata.se 2002-08-20:
+	Now returns only valid, functioning
+	joysticks, counting from the first
+	available and upwards.
+*/
+wxJoystick::wxJoystick(int joystick = wxJOYSTICK1)
+{
+    JOYINFO joyInfo;
+	int i, maxsticks;
+
+	maxsticks = joyGetNumDevs();
+	for( i=0; i<maxsticks; i++ )
+	{
+	    if( joyGetPos(i, & joyInfo) == JOYERR_NOERROR )
+	    {
+	    	if( !joystick )
+	    	{
+	    		/* Found the one we want, store actual OS id and return */
+	    		m_joystick = i;
+	    		return;
+	    	}
+	    	joystick --;
+	    }
+	}
+
+	/* No such joystick, return ID 0 */
+	m_joystick = 0;
+	return;
+};
+
 wxPoint wxJoystick::GetPosition() const
 {
@@ -72,4 +103,9 @@
 }
 
+/**
+	johan@linkdata.se 2002-08-20:
+	Return a bitmap with all button states in it,
+	like the GTK version does and Win32 does.
+*/
 int wxJoystick::GetButtonState() const
 {
@@ -78,4 +114,6 @@
     if (res == JOYERR_NOERROR )
     {
+    	return joyInfo.wButtons;
+#if 0
         int buttons = 0;
 
@@ -88,5 +126,7 @@
         if (joyInfo.wButtons & JOY_BUTTON4)
             buttons |= wxJOY_BUTTON4;
+
         return buttons;
+#endif
     }
     else
@@ -94,4 +134,8 @@
 }
 
+/**
+	JLI 2002-08-20:
+	Returns -1 to signify error.
+*/
 int wxJoystick::GetPOVPosition() const
 {
@@ -106,10 +150,14 @@
     }
     else
-        return 0;
+        return -1;
 #else
-    return 0;
+    return -1;
 #endif
 }
 
+/**
+	johan@linkdata.se 2002-08-20:
+	Returns -1 to signify error.
+*/
 int wxJoystick::GetPOVCTSPosition() const
 {
@@ -124,7 +172,7 @@
     }
     else
-        return 0;
+        return -1;
 #else
-    return 0;
+    return -1;
 #endif
 }
@@ -205,14 +253,34 @@
 ////////////////////////////////////////////////////////////////////////////
 
-bool wxJoystick::IsOk() const
+/**
+	johan@linkdata.se 2002-08-20:
+	Now returns the number of connected, functioning
+	joysticks, as intended.
+*/
+int wxJoystick::GetNumberJoysticks()
 {
     JOYINFO joyInfo;
-    MMRESULT res = joyGetPos(m_joystick, & joyInfo);
-    return ((joyGetNumDevs() > 0) || (res == JOYERR_NOERROR));
-}
-
-int wxJoystick::GetNumberJoysticks() const
+	int i, maxsticks, actualsticks;
+	maxsticks = joyGetNumDevs();
+	actualsticks = 0;
+	for( i=0; i<maxsticks; i++ )
+	{
+		if( joyGetPos( i, & joyInfo ) == JOYERR_NOERROR )
+		{
+			actualsticks ++;
+		}
+	}
+    return actualsticks;
+}
+
+/**
+	johan@linkdata.se 2002-08-20:
+	The old code returned true if there were any
+	joystick capable drivers loaded (=always).
+*/
+bool wxJoystick::IsOk() const
 {
-    return joyGetNumDevs();
+    JOYINFO joyInfo;
+    return (joyGetPos(m_joystick, & joyInfo) == JOYERR_NOERROR);
 }
 

 	  	 
