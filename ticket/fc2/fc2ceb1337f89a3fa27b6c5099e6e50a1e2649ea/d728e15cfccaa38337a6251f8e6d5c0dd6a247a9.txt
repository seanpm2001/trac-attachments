50CFAB8E  int         3  
50CFAB8F  int         3  
50CFAB90  int         3  
50CFAB91  int         3  
50CFAB92  int         3  
50CFAB93  int         3  
50CFAB94  int         3  
50CFAB95  int         3  
50CFAB96  int         3  
50CFAB97  int         3  
50CFAB98  int         3  
50CFAB99  int         3  
50CFAB9A  int         3  
50CFAB9B  int         3  
50CFAB9C  int         3  
50CFAB9D  int         3  
50CFAB9E  int         3  
50CFAB9F  int         3  
50CFABA0  int         3  
50CFABA1  int         3  
50CFABA2  int         3  
50CFABA3  int         3  
50CFABA4  int         3  
50CFABA5  int         3  
50CFABA6  int         3  
50CFABA7  int         3  
50CFABA8  int         3  
50CFABA9  int         3  
50CFABAA  int         3  
50CFABAB  int         3  
50CFABAC  int         3  
50CFABAD  int         3  
50CFABAE  int         3  
50CFABAF  int         3  
--- d:\work\projects\wxwidgets-2.9.4\include\wx\msw\ole\dataobj.h --------------
///////////////////////////////////////////////////////////////////////////////
// Name:        wx/msw/ole/dataobj.h
// Purpose:     declaration of the wxDataObject class
// Author:      Vadim Zeitlin
// Modified by:
// Created:     10.05.98
// RCS-ID:      $Id$
// Copyright:   (c) 1998 Vadim Zeitlin <zeitlin@dptmaths.ens-cachan.fr>
// Licence:     wxWindows licence
///////////////////////////////////////////////////////////////////////////////

#ifndef   _WX_MSW_OLE_DATAOBJ_H
#define   _WX_MSW_OLE_DATAOBJ_H

// ----------------------------------------------------------------------------
// forward declarations
// ----------------------------------------------------------------------------

struct IDataObject;

// ----------------------------------------------------------------------------
// wxDataObject is a "smart" and polymorphic piece of data.
// ----------------------------------------------------------------------------

class WXDLLIMPEXP_CORE wxDataObject : public wxDataObjectBase
{
public:
    // ctor & dtor
    wxDataObject();
    virtual ~wxDataObject();

    // retrieve IDataObject interface (for other OLE related classes)
    IDataObject *GetInterface() const { return m_pIDataObject; }
50CFABB0  push        ebp  
50CFABB1  mov         ebp,esp  
50CFABB3  push        ecx  
50CFABB4  mov         dword ptr [ebp-4],0CCCCCCCCh  
50CFABBB  mov         dword ptr [ebp-4],ecx  
50CFABBE  mov         eax,dword ptr [this]  
50CFABC1  mov         eax,dword ptr [eax+4]  
50CFABC4  mov         esp,ebp  
50CFABC6  pop         ebp  
50CFABC7  ret  
--- No source file -------------------------------------------------------------
50CFABC8  int         3  
50CFABC9  int         3  
50CFABCA  int         3  
50CFABCB  int         3  
50CFABCC  int         3  
50CFABCD  int         3  
50CFABCE  int         3  
50CFABCF  int         3  
--- d:\work\projects\wxwidgets-2.9.4\include\wx\msw\ole\dataobj.h --------------

    // tell the object that it should be now owned by IDataObject - i.e. when
    // it is deleted, it should delete us as well
    void SetAutoDelete();

    // return true if we support this format in "Get" direction
    bool IsSupportedFormat(const wxDataFormat& format) const
        { return wxDataObjectBase::IsSupported(format, Get); }
50CFABD0  push        ebp  
50CFABD1  mov         ebp,esp  
50CFABD3  push        ecx  
50CFABD4  mov         dword ptr [ebp-4],0CCCCCCCCh  
50CFABDB  mov         dword ptr [ebp-4],ecx  
50CFABDE  push        1  
50CFABE0  mov         eax,dword ptr [format]  
50CFABE3  push        eax  
50CFABE4  mov         ecx,dword ptr [this]  
50CFABE7  call        wxDataObjectBase::IsSupported (50C93945h)  
50CFABEC  add         esp,4             <--------------------------------------- problem place!
50CFABEF  cmp         ebp,esp  
50CFABF1  call        _RTC_CheckEsp (51130FE0h)  
50CFABF6  mov         esp,ebp  
50CFABF8  pop         ebp  
50CFABF9  ret         4  
--- No source file -------------------------------------------------------------
50CFABFC  int         3  
50CFABFD  int         3  
50CFABFE  int         3  
50CFABFF  int         3  
50CFAC00  int         3  
50CFAC01  int         3  
50CFAC02  int         3  
50CFAC03  int         3  
50CFAC04  int         3  
50CFAC05  int         3  
50CFAC06  int         3  
50CFAC07  int         3  
50CFAC08  int         3  
50CFAC09  int         3  
50CFAC0A  int         3  
50CFAC0B  int         3  
50CFAC0C  int         3  
50CFAC0D  int         3  
50CFAC0E  int         3  
50CFAC0F  int         3  
--- d:\work\projects\wxwidgets-2.9.4\include\wx\msw\ole\dataobj.h --------------

    // if this method returns false, this wxDataObject will be copied to
    // the clipboard with its size prepended to it, which is compatible with
    // older wx versions
    //
    // if returns true, then this wxDataObject will be copied to the clipboard
    // without any additional information and ::HeapSize() function will be used
    // to get the size of that data
    virtual bool NeedsVerbatimData(const wxDataFormat& WXUNUSED(format)) const
    {
50CFAC10  push        ebp  
50CFAC11  mov         ebp,esp  
50CFAC13  push        ecx  
50CFAC14  mov         dword ptr [ebp-4],0CCCCCCCCh  
50CFAC1B  mov         dword ptr [ebp-4],ecx  
        // return false from here only for compatibility with earlier wx versions
        return true;
50CFAC1E  mov         al,1  
    }
50CFAC20  mov         esp,ebp  
50CFAC22  pop         ebp  
50CFAC23  ret         4  
--- No source file -------------------------------------------------------------
50CFAC26  int         3  
50CFAC27  int         3  
50CFAC28  int         3  
50CFAC29  int         3  
50CFAC2A  int         3  
50CFAC2B  int         3  
50CFAC2C  int         3  
50CFAC2D  int         3  
50CFAC2E  int         3  
50CFAC2F  int         3  
--- d:\work\projects\wxwidgets-2.9.4\include\wx\dataobj.h ----------------------

    // returns true if this format is supported
    bool IsSupported(const wxDataFormat& format, Direction dir = Get) const;
};

// ----------------------------------------------------------------------------
// include the platform-specific declarations of wxDataObject
// ----------------------------------------------------------------------------

#if defined(__WXMSW__)
    #include "wx/msw/ole/dataobj.h"
#elif defined(__WXMOTIF__)
    #include "wx/motif/dataobj.h"
#elif defined(__WXX11__)
    #include "wx/x11/dataobj.h"
#elif defined(__WXGTK20__)
    #include "wx/gtk/dataobj.h"
#elif defined(__WXGTK__)
    #include "wx/gtk1/dataobj.h"
#elif defined(__WXMAC__)
    #include "wx/osx/dataobj.h"
#elif defined(__WXCOCOA__)
    #include "wx/cocoa/dataobj.h"
#elif defined(__WXPM__)
    #include "wx/os2/dataobj.h"
#endif

// ----------------------------------------------------------------------------
// wxDataObjectSimple is a wxDataObject which only supports one format (in
// both Get and Set directions, but you may return false from GetDataHere() or
// SetData() if one of them is not supported). This is the simplest possible
// wxDataObject implementation.
//
// This is still an "abstract base class" (although it doesn't have any pure
// virtual functions), to use it you should derive from it and implement
// GetDataSize(), GetDataHere() and SetData() functions because the base class
// versions don't do anything - they just return "not implemented".
//
// This class should be used when you provide data in only one format (no
// conversion to/from other formats), either a standard or a custom one.
// Otherwise, you should use wxDataObjectComposite or wxDataObject directly.
// ----------------------------------------------------------------------------

class WXDLLIMPEXP_CORE wxDataObjectSimple : public wxDataObject
{
public:
    // ctor takes the format we support, but it can also be set later with
    // SetFormat()
    wxDataObjectSimple(const wxDataFormat& format = wxFormatInvalid)
        : m_format(format)
        {
50CFAC30  push        ebp  
50CFAC31  mov         ebp,esp  
50CFAC33  push        ecx  
50CFAC34  mov         dword ptr [ebp-4],0CCCCCCCCh  
50CFAC3B  mov         dword ptr [ebp-4],ecx  
50CFAC3E  mov         ecx,dword ptr [this]  
50CFAC41  call        wxDataObject::wxDataObject (50C98A44h)  
50CFAC46  mov         eax,dword ptr [this]  
50CFAC49  mov         dword ptr [eax],offset wxDataObjectSimple::`vftable' (511DA904h)  
50CFAC4F  mov         ecx,dword ptr [format]  
50CFAC52  mov         dx,word ptr [ecx]  
50CFAC55  mov         eax,dword ptr [this]  
50CFAC58  mov         word ptr [eax+8],dx  
        }
50CFAC5C  mov         eax,dword ptr [this]  
50CFAC5F  add         esp,4  
50CFAC62  cmp         ebp,esp  
50CFAC64  call        _RTC_CheckEsp (51130FE0h)  
50CFAC69  mov         esp,ebp  
50CFAC6B  pop         ebp  
50CFAC6C  ret         4  
--- No source file -------------------------------------------------------------
50CFAC6F  int         3  
50CFAC70  int         3  
50CFAC71  int         3  
50CFAC72  int         3  
50CFAC73  int         3  
50CFAC74  int         3  
50CFAC75  int         3  
50CFAC76  int         3  
50CFAC77  int         3  
50CFAC78  int         3  
50CFAC79  int         3  
50CFAC7A  int         3  
50CFAC7B  int         3  
50CFAC7C  int         3  
50CFAC7D  int         3  
50CFAC7E  int         3  
50CFAC7F  int         3  
--- d:\work\projects\wxwidgets-2.9.4\include\wx\dataobj.h ----------------------

    // get/set the format we support
    const wxDataFormat& GetFormat() const { return m_format; }
50CFAC80  push        ebp  
50CFAC81  mov         ebp,esp  
50CFAC83  push        ecx  
50CFAC84  mov         dword ptr [ebp-4],0CCCCCCCCh  
50CFAC8B  mov         dword ptr [ebp-4],ecx  
50CFAC8E  mov         eax,dword ptr [this]  
50CFAC91  add         eax,8  
50CFAC94  mov         esp,ebp  
50CFAC96  pop         ebp  
50CFAC97  ret  
--- No source file -------------------------------------------------------------
50CFAC98  int         3  
50CFAC99  int         3  