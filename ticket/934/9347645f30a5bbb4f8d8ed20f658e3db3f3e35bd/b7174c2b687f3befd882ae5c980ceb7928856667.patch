Index: include/wx/docview.h
===================================================================
--- include/wx/docview.h	(revision 64662)
+++ include/wx/docview.h	(working copy)
@@ -413,6 +413,7 @@
 
     void AssociateTemplate(wxDocTemplate *temp);
     void DisassociateTemplate(wxDocTemplate *temp);
+    wxDocTemplate* FindTemplate(const wxClassInfo* classinfo);
 
     wxDocument *GetCurrentDocument() const;
 
Index: interface/wx/docview.h
===================================================================
--- interface/wx/docview.h	(revision 64662)
+++ interface/wx/docview.h	(working copy)
@@ -364,6 +364,26 @@
     void AssociateTemplate(wxDocTemplate* temp);
 
     /**
+        Search for a particular document templace.
+
+        Example:
+        @code
+           // creating a document instance of the specified document type:
+           m_doc = (MyDoc*)docManager->FindTemplate(CLASSINFO(MyDoc))->CreateDocument(wxEmptyString, wxDOC_SILENT);
+        @endcode
+
+        @param classinfo
+            Class info of a document or view or document template class
+            (CLASSINFO(MyDoc) or CLASSINFO(MyView) or CLASSINFO(MyDocTemplate) )
+
+        @return
+            Pointer to a wxDocTemplate, or NULL if none found.
+
+        @since 2.9.1
+     */
+    wxDocTemplate* FindTemplate(const wxClassInfo* classinfo);
+
+    /**
         Closes the specified document.
 
         If @a force is @true, the document is closed even if it has unsaved
Index: src/common/docview.cpp
===================================================================
--- src/common/docview.cpp	(revision 64662)
+++ src/common/docview.cpp	(working copy)
@@ -1899,6 +1899,24 @@
     m_templates.DeleteObject(temp);
 }
 
+wxDocTemplate* wxDocManager::FindTemplate(const wxClassInfo* classinfo)
+{
+   for (wxList::compatibility_iterator node = m_templates.GetFirst();
+        node;
+        node = node->GetNext())
+   {
+      wxDocTemplate* t = wxStaticCast(node->GetData(), wxDocTemplate);
+      if (   (classinfo == t->GetClassInfo())
+          || (classinfo == t->GetDocClassInfo())
+          || (classinfo == t->GetViewClassInfo())
+         )
+      {
+         return t;
+      }
+   }
+   return NULL;
+}
+
 // Add and remove a document from the manager's list
 void wxDocManager::AddDocument(wxDocument *doc)
 {
