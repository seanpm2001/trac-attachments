From fc634f1e18d6f5fa7247da0bbc204a2fcf80836a Mon Sep 17 00:00:00 2001
From: Tim Kosse <tim.kosse@filezilla-project.org>
Date: Mon, 21 Nov 2016 17:35:53 +0100
Subject: [PATCH] Weight pixels by their respective alpha value in
 wxImage::ResampleBox.

Without this weighting, even the color value of invisible pixels with a zero alpha would influence the result.
---
 src/common/image.cpp | 39 ++++++++++++++++++++++++++++++---------
 1 file changed, 30 insertions(+), 9 deletions(-)

diff --git a/src/common/image.cpp b/src/common/image.cpp
index b0ca1d8..4e60dda 100644
--- a/src/common/image.cpp
+++ b/src/common/image.cpp
@@ -659,23 +659,44 @@ wxImage wxImage::ResampleBox(int width, int height) const
                     // Calculate the actual index in our source pixels
                     src_pixel_index = j * M_IMGDATA->m_width + i;
 
-                    sum_r += src_data[src_pixel_index * 3 + 0];
-                    sum_g += src_data[src_pixel_index * 3 + 1];
-                    sum_b += src_data[src_pixel_index * 3 + 2];
-                    if ( src_alpha )
+                    if (src_alpha)
+                    {
+                        sum_r += src_data[src_pixel_index * 3 + 0] * src_alpha[src_pixel_index];
+                        sum_g += src_data[src_pixel_index * 3 + 1] * src_alpha[src_pixel_index];
+                        sum_b += src_data[src_pixel_index * 3 + 2] * src_alpha[src_pixel_index];
                         sum_a += src_alpha[src_pixel_index];
+                    }
+                    else {
+                        sum_r += src_data[src_pixel_index * 3 + 0];
+                        sum_g += src_data[src_pixel_index * 3 + 1];
+                        sum_b += src_data[src_pixel_index * 3 + 2];
+                    }
 
                     averaged_pixels++;
                 }
             }
 
             // Calculate the average from the sum and number of averaged pixels
-            dst_data[0] = (unsigned char)(sum_r / averaged_pixels);
-            dst_data[1] = (unsigned char)(sum_g / averaged_pixels);
-            dst_data[2] = (unsigned char)(sum_b / averaged_pixels);
-            dst_data += 3;
-            if ( src_alpha )
+            if (src_alpha)
+            {
+                if (sum_a) {
+                    dst_data[0] = (unsigned char)(sum_r / sum_a);
+                    dst_data[1] = (unsigned char)(sum_g / sum_a);
+                    dst_data[2] = (unsigned char)(sum_b / sum_a);
+                }
+                else {
+                    dst_data[0] = 0;
+                    dst_data[1] = 0;
+                    dst_data[2] = 0;
+                }
                 *dst_alpha++ = (unsigned char)(sum_a / averaged_pixels);
+            }
+            else {
+                dst_data[0] = (unsigned char)(sum_r / averaged_pixels);
+                dst_data[1] = (unsigned char)(sum_g / averaged_pixels);
+                dst_data[2] = (unsigned char)(sum_b / averaged_pixels);
+            }
+            dst_data += 3;
         }
     }
 
-- 
2.7.1.windows.2

