diff -bru wxWidgets/src/common/filename.cpp wxWidgets.patched/src/common/filename.cpp
--- wxWidgets/src/common/filename.cpp	2012-02-15 13:16:18.000000000 -0800
+++ wxWidgets.patched/src/common/filename.cpp	2012-02-24 19:33:16.000000000 -0800
@@ -1793,9 +1793,19 @@
 
     if ( fn1.GetFullPath() == fn2.GetFullPath() )
         return true;
-
-    // TODO: compare inodes for Unix, this works even when filenames are
-    //       different but files are the same (symlinks) (VZ)
+#if defined(__UNIX__)
+    else
+    {
+        wxStructStat st1, st2;
+        wxString path1 = fn1.GetFullPath();
+        wxString path2 = fn2.GetFullPath();
+        if( wxStat( path1, &st1 ) )
+            wxLogDebug( "File %s does not exist.", path1 );
+        else if( wxStat( path2, &st2 ) )
+            wxLogDebug( "File %s does not exist", path2 );
+        else return st1.st_ino == st2.st_ino && st1.st_dev == st2.st_dev;
+    }
+#endif // defined __UNIX__
 
     return false;
 }
diff -bru wxWidgets/tests/filename/filenametest.cpp wxWidgets.patched/tests/filename/filenametest.cpp
--- wxWidgets/tests/filename/filenametest.cpp	2012-02-15 13:17:07.000000000 -0800
+++ wxWidgets.patched/tests/filename/filenametest.cpp	2012-02-25 00:13:47.000000000 -0800
@@ -24,6 +24,7 @@
 #include "wx/filename.h"
 #include "wx/filefn.h"
 #include "wx/stdpaths.h"
+#include "wx/scopeguard.h"
 
 #ifdef __WXMSW__
     #include "wx/msw/registry.h"
@@ -135,6 +136,7 @@
         CPPUNIT_TEST( TestCreateTempFileName );
         CPPUNIT_TEST( TestGetTimes );
         CPPUNIT_TEST( TestExists );
+        CPPUNIT_TEST( TestIsSame );
     CPPUNIT_TEST_SUITE_END();
 
     void TestConstruction();
@@ -153,6 +155,7 @@
     void TestCreateTempFileName();
     void TestGetTimes();
     void TestExists();
+    void TestIsSame();
 
     DECLARE_NO_COPY_CLASS(FileNameTestCase)
 };
@@ -670,3 +673,29 @@
     CPPUNIT_ASSERT( wxFileName::Exists("/dev/null") );
 #endif // __UNIX__
 }
+
+void FileNameTestCase::TestIsSame()
+{
+    wxFileName fn1( wxFileName::CreateTempFileName( "filenametest1" ) );
+    CPPUNIT_ASSERT( fn1.IsOk() );
+    wxFileName fn2( wxFileName::CreateTempFileName( "filenametest2" ) );
+    CPPUNIT_ASSERT( fn2.IsOk() );
+    CPPUNIT_ASSERT( !fn1.SameAs( fn2 ) );
+#if defined(__UNIX__)
+    wxString tempDir = wxFileName::GetTempDir();
+    wxString name = tempDir + "/filenametest1";
+    wxFileName fn3( wxFileName::CreateTempFileName( name ) );
+    CPPUNIT_ASSERT( fn3.IsOk() );
+    symlink( tempDir.c_str(), "newtemp" );
+    wxON_BLOCK_EXIT1( wxRemoveFile, "newtemp" );
+    wxString testname = tempDir + "/filenametest1";
+    wxFileName fn4( wxFileName::CreateTempFileName( testname ) );
+    CPPUNIT_ASSERT( fn4.IsOk() );
+    CPPUNIT_ASSERT( !fn3.SameAs( fn4 ) );
+    CPPUNIT_ASSERT( link( "filenametest1", "filename1" ) );
+    wxFileName fn5;
+    fn5.SetPath( "." );
+    fn5.SetName( "filename1" );
+    CPPUNIT_ASSERT( !fn1.SameAs( fn5 ) );
+#endif
+}
