Index: docs/latex/wx/font.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/font.tex,v
retrieving revision 1.30
diff -bu2 -r1.30 docs/latex/wx/font.tex
--- docs/latex/wx/font.tex
+++ docs/latex/wx/font.tex
@@ -305,6 +305,6 @@
 \constfunc{wxString}{GetNativeFontInfoDesc}{\void}
 
-Returns the platform-dependent string completely describing this font or an
-empty string if the font wasn't constructed using the native font description.
+Returns the platform-dependent string completely describing this font.
+Returned string is always non-empty.
 Note that the returned string is not meant to be shown or edited by the user: a typical
 use of this function is for serializing in string-form a wxFont object.
@@ -319,5 +319,6 @@
 \func{wxString}{GetNativeFontInfoUserDesc}{\void}
 
-Returns a user-friendly string for this font object. Some examples of the formats of returned strings (which are platform-dependent) are in \helpref{SetNativeFontInfoUserDesc}{wxfontsetnativefontinfouserdesc}.
+Returns a user-friendly string for this font object. Returned string is always non-empty.
+Some examples of the formats of returned strings (which are platform-dependent) are in \helpref{SetNativeFontInfoUserDesc}{wxfontsetnativefontinfouserdesc}.
 
 \wxheading{See also}
@@ -418,7 +419,8 @@
 \membersection{wxFont::SetFaceName}\label{wxfontsetfacename}
 
-\func{void}{SetFaceName}{\param{const wxString\& }{faceName}}
+\func{bool}{SetFaceName}{\param{const wxString\& }{faceName}}
 
 Sets the facename for the font.
+Returns \true if the given face name exists; \false otherwise.
 
 \wxheading{Parameters}
@@ -466,7 +468,8 @@
 \membersection{wxFont::SetNativeFontInfo}\label{wxfontsetnativefontinfo}
 
-\func{void}{SetNativeFontInfo}{\param{const wxString\& }{info}}
+\func{bool}{SetNativeFontInfo}{\param{const wxString\& }{info}}
 
-Creates the font corresponding to the given native font description string
+Creates the font corresponding to the given native font description string and returns \true if
+the creation was successful.
 which must have been previously returned by
 \helpref{GetNativeFontInfoDesc}{wxfontgetnativefontinfodesc}. If the string is
@@ -481,7 +484,8 @@
 \membersection{wxFont::SetNativeFontInfoUserDesc}\label{wxfontsetnativefontinfouserdesc}
 
-\func{void}{SetNativeFontInfoUserDesc}{\param{const wxString\& }{info}}
+\func{bool}{SetNativeFontInfoUserDesc}{\param{const wxString\& }{info}}
 
-Creates the font corresponding to the given native font description string.
+Creates the font corresponding to the given native font description string and returns \true if
+the creation was successful.
 Unlike \helpref{SetNativeFontInfo}{wxfontsetnativefontinfo}, this function accepts
 strings which are user-friendly.
Index: docs/latex/wx/fontenum.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/fontenum.tex,v
retrieving revision 1.11
diff -bu2 -r1.11 docs/latex/wx/fontenum.tex
--- docs/latex/wx/fontenum.tex
+++ docs/latex/wx/fontenum.tex
@@ -92,4 +92,12 @@
 
 
+\membersection{wxFontEnumerator::IsValidFacename}\label{wxfontenumeratorisvalidfacename}
+
+\func{static bool}{IsValidFacename}{\param{const wxString \&}{ facename}}
+
+Returns \true if the given string is valid face name, i.e. it's the face name of an installed
+font and it can safely be used with \helpref{wxFont::SetFaceName}{wxfontsetfacename}.
+
+
 \membersection{wxFontEnumerator::OnFacename}\label{wxfontenumeratoronfacename}
 
Index: include/wx/font.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/font.h,v
retrieving revision 1.52
diff -bu2 -r1.52 include/wx/font.h
--- include/wx/font.h
+++ include/wx/font.h
@@ -107,5 +107,5 @@
 
 class WXDLLEXPORT wxFontRefData;
-struct WXDLLEXPORT wxNativeFontInfo;
+class WXDLLEXPORT wxNativeFontInfo;
 
 class WXDLLEXPORT wxFontBase : public wxGDIObject
@@ -187,12 +187,12 @@
     virtual void SetStyle( int style ) = 0;
     virtual void SetWeight( int weight ) = 0;
-    virtual void SetFaceName( const wxString& faceName ) = 0;
     virtual void SetUnderlined( bool underlined ) = 0;
     virtual void SetEncoding(wxFontEncoding encoding) = 0;
+    virtual bool SetFaceName( const wxString& faceName );
     void SetNativeFontInfo(const wxNativeFontInfo& info)
         { DoSetNativeFontInfo(info); }
 
-    void SetNativeFontInfo(const wxString& info);
-    void SetNativeFontInfoUserDesc(const wxString& info);
+    bool SetNativeFontInfo(const wxString& info);
+    bool SetNativeFontInfoUserDesc(const wxString& info);
 
     // translate the fonts into human-readable string (i.e. GetStyleString()
Index: include/wx/fontenum.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/fontenum.h,v
retrieving revision 1.20
diff -bu2 -r1.20 include/wx/fontenum.h
--- include/wx/fontenum.h
+++ include/wx/fontenum.h
@@ -68,4 +68,8 @@
     static wxArrayString GetEncodings(const wxString& facename = wxEmptyString);
 
+    // convenience function that returns true if the given face name exist
+    // in the user's system
+    static bool IsValidFacename(const wxString &str);
+
 private:
     DECLARE_NO_COPY_CLASS(wxFontEnumerator)
Index: include/wx/fontutil.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/fontutil.h,v
retrieving revision 1.39
diff -bu2 -r1.39 include/wx/fontutil.h
--- include/wx/fontutil.h
+++ include/wx/fontutil.h
@@ -65,9 +65,7 @@
 // somewhere and pass it somewhere else (possibly save them somewhere using
 // ToString() and restore them using FromString())
-//
-// NB: it is a POD currently for max efficiency but if it continues to grow
-//     further it might make sense to make it a real class with virtual methods
-struct WXDLLEXPORT wxNativeFontInfo
+class WXDLLEXPORT wxNativeFontInfo
 {
+public:
 #if wxUSE_PANGO
     PangoFontDescription *description;
@@ -196,8 +194,15 @@
     void SetWeight(wxFontWeight weight);
     void SetUnderlined(bool underlined);
-    void SetFaceName(const wxString& facename);
+    bool SetFaceName(const wxString& facename);
     void SetFamily(wxFontFamily family);
     void SetEncoding(wxFontEncoding encoding);
 
+    // sets the first facename in the given array which is found
+    // to be valid. If no valid facename is given, sets the
+    // first valid facename returned by wxFontEnumerator::GetFacenames().
+    // Does not return a bool since it cannot fail.
+    void SetFaceName(const wxArrayString &facenames);
+
+
     // it is important to be able to serialize wxNativeFontInfo objects to be
     // able to store them (in config file, for example)
Index: include/wx/cocoa/font.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/cocoa/font.h,v
retrieving revision 1.8
diff -bu2 -r1.8 include/wx/cocoa/font.h
--- include/wx/cocoa/font.h
+++ include/wx/cocoa/font.h
@@ -142,5 +142,5 @@
     virtual void SetStyle(int style);
     virtual void SetWeight(int weight);
-    virtual void SetFaceName(const wxString& faceName);
+    virtual bool SetFaceName(const wxString& faceName);
     virtual void SetUnderlined(bool underlined);
     virtual void SetEncoding(wxFontEncoding encoding);
Index: include/wx/gtk/font.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/font.h,v
retrieving revision 1.36
diff -bu2 -r1.36 include/wx/gtk/font.h
--- include/wx/gtk/font.h
+++ include/wx/gtk/font.h
@@ -79,5 +79,5 @@
     virtual void SetStyle( int style );
     virtual void SetWeight( int weight );
-    virtual void SetFaceName( const wxString& faceName );
+    virtual bool SetFaceName( const wxString& faceName );
     virtual void SetUnderlined( bool underlined );
     virtual void SetEncoding(wxFontEncoding encoding);
Index: include/wx/gtk1/font.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk1/font.h,v
retrieving revision 1.36
diff -bu2 -r1.36 include/wx/gtk1/font.h
--- include/wx/gtk1/font.h
+++ include/wx/gtk1/font.h
@@ -80,5 +80,5 @@
     virtual void SetStyle( int style );
     virtual void SetWeight( int weight );
-    virtual void SetFaceName( const wxString& faceName );
+    virtual bool SetFaceName( const wxString& faceName );
     virtual void SetUnderlined( bool underlined );
     virtual void SetEncoding(wxFontEncoding encoding);
Index: include/wx/mac/carbon/font.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/font.h,v
retrieving revision 1.8
diff -bu2 -r1.8 include/wx/mac/carbon/font.h
--- include/wx/mac/carbon/font.h
+++ include/wx/mac/carbon/font.h
@@ -69,5 +69,5 @@
     virtual void SetStyle(int style);
     virtual void SetWeight(int weight);
-    virtual void SetFaceName(const wxString& faceName);
+    virtual bool SetFaceName(const wxString& faceName);
     virtual void SetUnderlined(bool underlined);
     virtual void SetEncoding(wxFontEncoding encoding);
Index: include/wx/mac/classic/font.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/classic/font.h,v
retrieving revision 1.6
diff -bu2 -r1.6 include/wx/mac/classic/font.h
--- include/wx/mac/classic/font.h
+++ include/wx/mac/classic/font.h
@@ -67,5 +67,5 @@
     virtual void SetStyle(int style);
     virtual void SetWeight(int weight);
-    virtual void SetFaceName(const wxString& faceName);
+    virtual bool SetFaceName(const wxString& faceName);
     virtual void SetUnderlined(bool underlined);
     virtual void SetEncoding(wxFontEncoding encoding);
Index: include/wx/mgl/font.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mgl/font.h,v
retrieving revision 1.13
diff -bu2 -r1.13 include/wx/mgl/font.h
--- include/wx/mgl/font.h
+++ include/wx/mgl/font.h
@@ -76,5 +76,5 @@
     virtual void SetStyle(int style);
     virtual void SetWeight(int weight);
-    virtual void SetFaceName(const wxString& faceName);
+    virtual bool SetFaceName(const wxString& faceName);
     virtual void SetUnderlined(bool underlined);
     virtual void SetEncoding(wxFontEncoding encoding);
Index: include/wx/motif/font.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/motif/font.h,v
retrieving revision 1.28
diff -bu2 -r1.28 include/wx/motif/font.h
--- include/wx/motif/font.h
+++ include/wx/motif/font.h
@@ -72,5 +72,5 @@
     virtual void SetStyle(int style);
     virtual void SetWeight(int weight);
-    virtual void SetFaceName(const wxString& faceName);
+    virtual bool SetFaceName(const wxString& faceName);
     virtual void SetUnderlined(bool underlined);
     virtual void SetEncoding(wxFontEncoding encoding);
Index: include/wx/msw/font.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/font.h,v
retrieving revision 1.33
diff -bu2 -r1.33 include/wx/msw/font.h
--- include/wx/msw/font.h
+++ include/wx/msw/font.h
@@ -83,4 +83,8 @@
     virtual ~wxFont();
 
+    // wxFontBase overridden functions
+    virtual wxString GetNativeFontInfoDesc() const;
+    virtual wxString GetNativeFontInfoUserDesc() const;
+
     // implement base class pure virtuals
     virtual int GetPointSize() const;
@@ -100,5 +104,5 @@
     virtual void SetStyle(int style);
     virtual void SetWeight(int weight);
-    virtual void SetFaceName(const wxString& faceName);
+    virtual bool SetFaceName(const wxString& faceName);
     virtual void SetUnderlined(bool underlined);
     virtual void SetEncoding(wxFontEncoding encoding);
Index: include/wx/os2/font.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/font.h,v
retrieving revision 1.17
diff -bu2 -r1.17 include/wx/os2/font.h
--- include/wx/os2/font.h
+++ include/wx/os2/font.h
@@ -89,5 +89,5 @@
     virtual void SetStyle(int nStyle);
     virtual void SetWeight(int nWeight);
-    virtual void SetFaceName(const wxString& rsFaceName);
+    virtual bool SetFaceName(const wxString& rsFaceName);
     virtual void SetUnderlined(bool bUnderlined);
     virtual void SetEncoding(wxFontEncoding vEncoding);
Index: include/wx/palmos/font.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/font.h,v
retrieving revision 1.6
diff -bu2 -r1.6 include/wx/palmos/font.h
--- include/wx/palmos/font.h
+++ include/wx/palmos/font.h
@@ -100,5 +100,5 @@
     virtual void SetStyle(int style);
     virtual void SetWeight(int weight);
-    virtual void SetFaceName(const wxString& faceName);
+    virtual bool SetFaceName(const wxString& faceName);
     virtual void SetUnderlined(bool underlined);
     virtual void SetEncoding(wxFontEncoding encoding);
Index: include/wx/x11/font.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/x11/font.h,v
retrieving revision 1.13
diff -bu2 -r1.13 include/wx/x11/font.h
--- include/wx/x11/font.h
+++ include/wx/x11/font.h
@@ -70,5 +70,5 @@
     virtual void SetStyle(int style);
     virtual void SetWeight(int weight);
-    virtual void SetFaceName(const wxString& faceName);
+    virtual bool SetFaceName(const wxString& faceName);
     virtual void SetUnderlined(bool underlined);
     virtual void SetEncoding(wxFontEncoding encoding);
Index: samples/font/font.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/font/font.cpp,v
retrieving revision 1.50
diff -bu2 -r1.50 samples/font/font.cpp
--- samples/font/font.cpp
+++ samples/font/font.cpp
@@ -113,4 +113,6 @@
 
     void OnCheckNativeToFromString(wxCommandEvent& event);
+    void OnCheckNativeToFromUserString(wxCommandEvent& event);
+    void OnCheckFaceName(wxCommandEvent& event);
 
 protected:
@@ -160,4 +162,6 @@
     Font_EnumEncodings,
     Font_CheckNativeToFromString,
+    Font_CheckNativeToFromUserString,
+    Font_CheckFaceName,
     Font_Max
 };
@@ -186,5 +190,8 @@
     EVT_MENU(Font_wxSWISS_FONT, MyFrame::OnwxPointerFont)
 
+
     EVT_MENU(Font_CheckNativeToFromString, MyFrame::OnCheckNativeToFromString)
+    EVT_MENU(Font_CheckNativeToFromUserString, MyFrame::OnCheckNativeToFromUserString)
+    EVT_MENU(Font_CheckFaceName, MyFrame::OnCheckFaceName)
 
     EVT_MENU(Font_Choose, MyFrame::OnSelectFont)
@@ -261,4 +268,8 @@
     menuFont->Append(Font_CheckNativeToFromString,
                      wxT("Check Native Font Info To/From String"));
+    menuFont->Append(Font_CheckNativeToFromUserString,
+                     wxT("Check Native Font Info User String"));
+    menuFont->Append(Font_CheckFaceName,
+                     wxT("Check font face name"));                     
 
     wxMenu *menuSelect = new wxMenu;
@@ -489,4 +500,51 @@
 }
 
+void MyFrame::OnCheckFaceName(wxCommandEvent& WXUNUSED(event))
+{
+    wxString facename = GetCanvas()->GetTextFont().GetFaceName();
+    wxString newFaceName = wxGetTextFromUser(
+            wxT("Here you can edit current font face name."),
+            wxT("Input font facename"), facename,
+            this);
+    if (newFaceName.IsEmpty())
+        return;     // user clicked "Cancel" - do nothing
+
+    wxFont font(GetCanvas()->GetTextFont());
+    if (font.SetFaceName(newFaceName))      // change facename only
+    {
+        wxASSERT_MSG(font.Ok(), wxT("The font should now be valid"));
+        DoChangeFont(font);
+    }
+    else
+    {
+        wxASSERT_MSG(!font.Ok(), wxT("The font should now be invalid"));
+        wxMessageBox(wxT("There is no font with such face name..."),
+                     wxT("Invalid face name"), wxOK|wxICON_ERROR, this);
+    }    
+}
+
+void MyFrame::OnCheckNativeToFromUserString(wxCommandEvent& WXUNUSED(event))
+{
+    wxString fontdesc = GetCanvas()->GetTextFont().GetNativeFontInfoUserDesc();
+    wxString fontUserInfo = wxGetTextFromUser(
+            wxT("Here you can edit current font description"),
+            wxT("Input font description"), fontdesc,
+            this);
+    if (fontUserInfo.IsEmpty())
+        return;     // user clicked "Cancel" - do nothing
+
+    wxFont font;
+    if (font.SetNativeFontInfoUserDesc(fontUserInfo))
+    {
+        wxASSERT_MSG(font.Ok(), wxT("The font should now be valid"));
+        DoChangeFont(font);
+    }
+    else
+    {
+        wxASSERT_MSG(!font.Ok(), wxT("The font should now be invalid"));
+        wxMessageBox(wxT("Error trying to create a font with such description..."));
+    }    
+}
+
 void MyFrame::DoResizeFont(int diff)
 {
@@ -534,8 +592,4 @@
     }
 
-    GetMenuBar()->Check(Font_Bold, false);
-    GetMenuBar()->Check(Font_Italic, false);
-    GetMenuBar()->Check(Font_Underlined, false);
-
     DoChangeFont(font);
 }
@@ -551,4 +605,13 @@
     if ( col.Ok() )
         m_textctrl->SetForegroundColour(col);
+
+    // update the state of the bold/italic/underlined menu items
+    wxMenuBar *mbar = GetMenuBar();
+    if ( mbar )
+    {
+        mbar->Check(Font_Bold, font.GetWeight() == wxFONTWEIGHT_BOLD);
+        mbar->Check(Font_Italic, font.GetStyle() == wxFONTSTYLE_ITALIC);
+        mbar->Check(Font_Underlined, font.GetUnderlined());
+    }
 }
 
@@ -567,13 +630,4 @@
 
         DoChangeFont(font, colour);
-
-        // update the state of the bold/italic/underlined menu items
-        wxMenuBar *mbar = GetMenuBar();
-        if ( mbar )
-        {
-            mbar->Check(Font_Bold, font.GetWeight() == wxFONTWEIGHT_BOLD);
-            mbar->Check(Font_Italic, font.GetStyle() == wxFONTSTYLE_ITALIC);
-            mbar->Check(Font_Underlined, font.GetUnderlined());
-        }
     }
 }
Index: src/cocoa/font.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/cocoa/font.cpp,v
retrieving revision 1.11
diff -bu2 -r1.11 src/cocoa/font.cpp
--- src/cocoa/font.cpp
+++ src/cocoa/font.cpp
@@ -161,5 +161,5 @@
 }
 
-void wxFont::SetFaceName(const wxString& faceName)
+bool wxFont::SetFaceName(const wxString& faceName)
 {
     Unshare();
@@ -168,4 +168,6 @@
 
     RealizeResource();
+
+    return wxFontBase::SetFaceName(faceName);
 }
 
Index: src/common/fontcmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/fontcmn.cpp,v
retrieving revision 1.56
diff -bu2 -r1.56 src/common/fontcmn.cpp
--- src/common/fontcmn.cpp
+++ src/common/fontcmn.cpp
@@ -42,4 +42,5 @@
 #include "wx/fontutil.h" // for wxNativeFontInfo
 #include "wx/fontmap.h"
+#include "wx/fontenum.h"
 
 #include "wx/tokenzr.h"
@@ -267,4 +268,9 @@
     {
         fontDesc = fontInfo->ToString();
+        wxASSERT_MSG(!fontDesc.IsEmpty(), wxT("This should be a non-empty string!"));
+    }
+    else
+    {
+        wxASSERT_MSG(0, wxT("Derived class should have created the wxNativeFontInfo!"));
     }
 
@@ -279,4 +285,9 @@
     {
         fontDesc = fontInfo->ToUserString();
+        wxASSERT_MSG(!fontDesc.IsEmpty(), wxT("This should be a non-empty string!"));
+    }
+    else
+    {
+        wxASSERT_MSG(0, wxT("Derived class should have created the wxNativeFontInfo!"));
     }
 
@@ -284,5 +295,5 @@
 }
 
-void wxFontBase::SetNativeFontInfo(const wxString& info)
+bool wxFontBase::SetNativeFontInfo(const wxString& info)
 {
     wxNativeFontInfo fontInfo;
@@ -290,8 +301,12 @@
     {
         SetNativeFontInfo(fontInfo);
+        return true;
     }
+
+    UnRef();
+    return false;
 }
 
-void wxFontBase::SetNativeFontInfoUserDesc(const wxString& info)
+bool wxFontBase::SetNativeFontInfoUserDesc(const wxString& info)
 {
     wxNativeFontInfo fontInfo;
@@ -299,5 +314,9 @@
     {
         SetNativeFontInfo(fontInfo);
+        return true;
     }
+
+    UnRef();
+    return false;
 }
 
@@ -314,5 +333,5 @@
             GetWeight() == font.GetWeight() &&
             GetUnderlined() == font.GetUnderlined() &&
-            GetFaceName() == font.GetFaceName() &&
+            GetFaceName().IsSameAs(font.GetFaceName(), false) &&
             GetEncoding() == font.GetEncoding()
            );
@@ -366,8 +385,39 @@
 }
 
+bool wxFontBase::SetFaceName(const wxString &facename_)
+{
+    if (!wxFontEnumerator::IsValidFacename(facename_))
+    {
+        UnRef();        // make Ok() return false
+        return false;
+    }
+
+    return true;
+}
+
+
 // ----------------------------------------------------------------------------
 // wxNativeFontInfo
 // ----------------------------------------------------------------------------
 
+// Up to now, there are no native implementations of this function:
+void wxNativeFontInfo::SetFaceName(const wxArrayString &facenames)
+{
+    for (size_t i=0; i < facenames.GetCount(); i++)
+    {
+        if (wxFontEnumerator::IsValidFacename(facenames[i]))
+        {
+            SetFaceName(facenames[i]);
+            return;
+        }
+    }
+
+    // set the first valid facename we can find on this system
+    wxString validfacename = wxFontEnumerator::GetFacenames().Item(0);
+    wxLogTrace(wxT("font"), wxT("Falling back to '%s'"), validfacename.c_str());
+    SetFaceName(validfacename);
+}
+
+
 #ifdef wxNO_NATIVE_FONTINFO
 
@@ -511,7 +561,8 @@
 }
 
-void wxNativeFontInfo::SetFaceName(const wxString& facename_)
+bool wxNativeFontInfo::SetFaceName(const wxString& facename_)
 {
     faceName = facename_;
+    return true;
 }
 
@@ -543,5 +594,5 @@
     if ( GetUnderlined() )
     {
-        desc << _("underlined ");
+        desc << _("underlined");
     }
 
@@ -556,9 +607,9 @@
 
         case wxFONTWEIGHT_LIGHT:
-            desc << _("light ");
+            desc << _(" light");
             break;
 
         case wxFONTWEIGHT_BOLD:
-            desc << _("bold ");
+            desc << _(" bold");
             break;
     }
@@ -576,5 +627,5 @@
         case wxFONTSTYLE_ITALIC:
         case wxFONTSTYLE_SLANT:
-            desc << _("italic");
+            desc << _(" italic");
             break;
     }
@@ -600,5 +651,5 @@
 #endif // wxUSE_FONTMAP
 
-    return desc;
+    return desc.Strip(wxString::both).MakeLower();
 }
 
@@ -615,8 +666,5 @@
     wxString face;
     unsigned long size;
-
-#if wxUSE_FONTMAP
-    wxFontEncoding encoding;
-#endif // wxUSE_FONTMAP
+    bool weightfound = false, pointsizefound = false, encodingfound = false;
 
     while ( tokenizer.HasMoreTokens() )
@@ -635,8 +683,10 @@
         {
             SetWeight(wxFONTWEIGHT_LIGHT);
+            weightfound = true;
         }
         else if ( token == _T("bold") || token == _("bold") )
         {
             SetWeight(wxFONTWEIGHT_BOLD);
+            weightfound = true;
         }
         else if ( token == _T("italic") || token == _("italic") )
@@ -647,14 +697,22 @@
         {
             SetPointSize(size);
+            pointsizefound = true;
         }
+        else
+        {
 #if wxUSE_FONTMAP
-        else if ( (encoding = wxFontMapper::Get()->CharsetToEncoding(token, false))
-                    != wxFONTENCODING_DEFAULT )
+            // try to interpret this as an encoding
+            wxFontEncoding encoding = wxFontMapper::Get()->CharsetToEncoding(token, false);
+            if ( encoding != wxFONTENCODING_DEFAULT &&
+                 encoding != wxFONTENCODING_SYSTEM )    // returned when the recognition failed
         {
             SetEncoding(encoding);
+                encodingfound = true;
         }
-#endif // wxUSE_FONTMAP
-        else // assume it is the face name
+            else
         {
+#endif // wxUSE_FONTMAP
+
+                // assume it is the face name
             if ( !face.empty() )
             {
@@ -666,4 +724,8 @@
             // skip the code which resets face below
             continue;
+
+#if wxUSE_FONTMAP
+        }
+#endif // wxUSE_FONTMAP
         }
 
@@ -673,5 +735,10 @@
         if ( !face.empty() )
         {
-            SetFaceName(face);
+            // NB: the check on the facename is implemented in wxFontBase::SetFaceName
+            //     and not in wxNativeFontInfo::SetFaceName thus we need to explicitely
+            //     call here wxFontEnumerator::IsValidFacename
+            if (!wxFontEnumerator::IsValidFacename(face) ||
+                !SetFaceName(face))
+                SetFaceName(wxNORMAL_FONT->GetFaceName());
             face.clear();
         }
@@ -681,7 +748,26 @@
     if ( !face.empty() )
     {
-        SetFaceName(face);
+        // NB: the check on the facename is implemented in wxFontBase::SetFaceName
+        //     and not in wxNativeFontInfo::SetFaceName thus we need to explicitely
+        //     call here wxFontEnumerator::IsValidFacename
+        if (!wxFontEnumerator::IsValidFacename(face) ||
+            !SetFaceName(face))
+            SetFaceName(wxNORMAL_FONT->GetFaceName());
     }
 
+    // set point size to default value if size was not given
+    if ( !pointsizefound )
+        SetPointSize(wxNORMAL_FONT->GetPointSize());
+
+    // set font weight to default value if weight was not given
+    if ( !weightfound )
+        SetWeight(wxFONTWEIGHT_NORMAL);
+
+#if wxUSE_FONTMAP
+    // set font encoding to default value if encoding was not given
+    if ( !encodingfound )
+        SetEncoding(wxFONTENCODING_SYSTEM);
+#endif // wxUSE_FONTMAP
+
     return true;
 }
Index: src/common/fontenumcmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/fontenumcmn.cpp,v
retrieving revision 1.1
diff -bu2 -r1.1 src/common/fontenumcmn.cpp
--- src/common/fontenumcmn.cpp
+++ src/common/fontenumcmn.cpp
@@ -73,2 +73,29 @@
     return temp.m_arrEncodings;
 }
+
+/* static */
+bool wxFontEnumerator::IsValidFacename(const wxString &facename_)
+{
+    // we cache the result of wxFontEnumerator::GetFacenames supposing that
+    // the array of face names won't change in the session of this program
+    static wxArrayString s_arr = wxFontEnumerator::GetFacenames();
+
+#ifdef __WXMSW__
+    // Quoting the MSDN:
+    //     "MS Shell Dlg is a mapping mechanism that enables 
+    //     U.S. English Microsoft Windows NT, and Microsoft Windows 2000 to 
+    //     support locales that have characters that are not contained in code 
+    //     page 1252. It is not a font but a face name for a nonexistent font."
+    // Thus we need to consider "Ms Shell Dlg" and "Ms Shell Dlg 2" as valid
+    // font face names even if they are enumerated by wxFontEnumerator
+    if (facename_.IsSameAs(wxT("Ms Shell Dlg"), false) ||
+        facename_.IsSameAs(wxT("Ms Shell Dlg 2"), false))
+        return true;
+#endif
+
+    // is given font face name a valid one ?
+    if (s_arr.Index(facename_, false) == wxNOT_FOUND)
+        return false;
+
+    return true;
+}
\ No newline at end of file
Index: src/gtk/filedlg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/filedlg.cpp,v
retrieving revision 1.75
diff -bu2 -r1.75 src/gtk/filedlg.cpp
Index: src/gtk/font.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/font.cpp,v
retrieving revision 1.101
diff -bu2 -r1.101 src/gtk/font.cpp
--- src/gtk/font.cpp
+++ src/gtk/font.cpp
@@ -89,5 +89,5 @@
     void SetWeight(int weight);
     void SetUnderlined(bool underlined);
-    void SetFaceName(const wxString& facename);
+    bool SetFaceName(const wxString& facename);
     void SetEncoding(wxFontEncoding encoding);
 
@@ -322,9 +322,9 @@
 }
 
-void wxFontRefData::SetFaceName(const wxString& facename)
+bool wxFontRefData::SetFaceName(const wxString& facename)
 {
     m_faceName = facename;
 
-    m_nativeFontInfo.SetFaceName(facename);
+    return m_nativeFontInfo.SetFaceName(facename);
 }
 
@@ -549,9 +549,10 @@
 }
 
-void wxFont::SetFaceName(const wxString& faceName)
+bool wxFont::SetFaceName(const wxString& faceName)
 {
     Unshare();
 
-    M_FONTDATA->SetFaceName(faceName);
+    return M_FONTDATA->SetFaceName(faceName) &&
+           wxFontBase::SetFaceName(faceName);
 }
 
Index: src/gtk1/font.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk1/font.cpp,v
retrieving revision 1.100
diff -bu2 -r1.100 src/gtk1/font.cpp
--- src/gtk1/font.cpp
+++ src/gtk1/font.cpp
@@ -89,5 +89,5 @@
     void SetWeight(int weight);
     void SetUnderlined(bool underlined);
-    void SetFaceName(const wxString& facename);
+    bool SetFaceName(const wxString& facename);
     void SetEncoding(wxFontEncoding encoding);
 
@@ -437,5 +437,5 @@
 }
 
-void wxFontRefData::SetFaceName(const wxString& facename)
+bool wxFontRefData::SetFaceName(const wxString& facename)
 {
     m_faceName = facename;
@@ -445,4 +445,6 @@
         m_nativeFontInfo.SetXFontComponent(wxXLFD_FAMILY, facename);
     }
+
+    return true;
 }
 
@@ -689,9 +691,10 @@
 }
 
-void wxFont::SetFaceName(const wxString& faceName)
+bool wxFont::SetFaceName(const wxString& faceName)
 {
     Unshare();
 
-    M_FONTDATA->SetFaceName(faceName);
+    return M_FONTDATA->SetFaceName(faceName) &&
+           wxFontBase::SetFaceName(faceName);
 }
 
Index: src/mac/carbon/font.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/font.cpp,v
retrieving revision 1.45
diff -bu2 -r1.45 src/mac/carbon/font.cpp
--- src/mac/carbon/font.cpp
+++ src/mac/carbon/font.cpp
@@ -474,5 +474,5 @@
 }
 
-void wxFont::SetFaceName(const wxString& faceName)
+bool wxFont::SetFaceName(const wxString& faceName)
 {
     Unshare();
@@ -481,4 +481,6 @@
 
     RealizeResource();
+
+    return wxFontBase::SetFaceName(faceName);
 }
 
Index: src/mac/classic/font.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/classic/font.cpp,v
retrieving revision 1.10
diff -bu2 -r1.10 src/mac/classic/font.cpp
--- src/mac/classic/font.cpp
+++ src/mac/classic/font.cpp
@@ -340,5 +340,5 @@
 }
 
-void wxFont::SetFaceName(const wxString& faceName)
+bool wxFont::SetFaceName(const wxString& faceName)
 {
     Unshare();
@@ -347,4 +347,6 @@
 
     RealizeResource();
+
+    return wxFontBase::SetFaceName(faceName);
 }
 
Index: src/mgl/font.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mgl/font.cpp,v
retrieving revision 1.21
diff -bu2 -r1.21 src/mgl/font.cpp
--- src/mgl/font.cpp
+++ src/mgl/font.cpp
@@ -312,5 +312,5 @@
 }
 
-void wxFont::SetFaceName(const wxString& faceName)
+bool wxFont::SetFaceName(const wxString& faceName)
 {
     AllocExclusive();
@@ -318,4 +318,6 @@
     M_FONTDATA->m_faceName = faceName;
     M_FONTDATA->m_valid = false;
+
+    return wxFontBase::SetFaceName(faceName);
 }
 
Index: src/motif/font.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/font.cpp,v
retrieving revision 1.42
diff -bu2 -r1.42 src/motif/font.cpp
--- src/motif/font.cpp
+++ src/motif/font.cpp
@@ -394,5 +394,5 @@
 }
 
-void wxFont::SetFaceName(const wxString& faceName)
+bool wxFont::SetFaceName(const wxString& faceName)
 {
     Unshare();
@@ -400,4 +400,6 @@
     M_FONTDATA->m_faceName = faceName;
     M_FONTDATA->m_nativeFontInfo.GetXFontName().Clear(); // invalid now
+
+    return wxFontBase::SetFaceName(faceName);
 }
 
Index: src/msw/font.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/font.cpp,v
retrieving revision 1.77
diff -bu2 -r1.77 src/msw/font.cpp
--- src/msw/font.cpp
+++ src/msw/font.cpp
@@ -257,10 +257,11 @@
     }
 
-    void SetFaceName(const wxString& faceName)
+    bool SetFaceName(const wxString& faceName)
     {
         if ( m_nativeFontInfoOk )
-            m_nativeFontInfo.SetFaceName(faceName);
-        else
+            return m_nativeFontInfo.SetFaceName(faceName);
+
             m_faceName = faceName;
+        return true;
     }
 
@@ -386,10 +387,8 @@
     {
         wxLogLastError(wxT("CreateFont"));
-
         return false;
     }
 
     m_hFont = (WXHFONT)hfont;
-
     return true;
 }
@@ -562,7 +561,10 @@
 }
 
-void wxNativeFontInfo::SetFaceName(const wxString& facename)
+bool wxNativeFontInfo::SetFaceName(const wxString& facename)
 {
-    wxStrncpy(lf.lfFaceName, facename, WXSIZEOF(lf.lfFaceName));
+    size_t len = WXSIZEOF(lf.lfFaceName);
+    wxStrncpy(lf.lfFaceName, facename, len);
+    lf.lfFaceName[len - 1] = '\0';    // truncate the face name
+    return true;
 }
 
@@ -570,5 +572,8 @@
 {
     BYTE ff_family;
-    wxString facename;
+    wxArrayString facename;
+
+    // the list of fonts associated with a family was partially 
+    // taken from http://www.codestyle.org/css/font-family
 
     switch ( family )
@@ -576,15 +581,24 @@
         case wxSCRIPT:
             ff_family = FF_SCRIPT;
-            facename = _T("Script");
+            facename.Add(_T("Script"));
+            facename.Add(_T("Brush Script MT"));
+            facename.Add(_T("Comic Sans MS"));
+            facename.Add(_T("Lucida Handwriting"));
             break;
 
         case wxDECORATIVE:
             ff_family = FF_DECORATIVE;
-            facename = _T("Old English Text MT");
+            facename.Add(_T("Old English Text MT"));
+            facename.Add(_T("Comic Sans MS"));
+            facename.Add(_T("Lucida Handwriting"));
             break;
 
         case wxROMAN:
             ff_family = FF_ROMAN;
-            facename = _T("Times New Roman");
+            facename.Add(_T("Times New Roman"));
+            facename.Add(_T("Georgia"));
+            facename.Add(_T("Garamond"));
+            facename.Add(_T("Bookman Old Style"));
+            facename.Add(_T("Book Antiqua"));
             break;
 
@@ -592,10 +606,19 @@
         case wxMODERN:
             ff_family = FF_MODERN;
-            facename = _T("Courier New");
+            facename.Add(_T("Courier New"));
+            facename.Add(_T("Lucida Console"));
+            facename.Add(_T("Andale Mono"));
+            facename.Add(_T("OCR A Extended"));
+            facename.Add(_T("Terminal"));
             break;
 
         case wxSWISS:
             ff_family = FF_SWISS;
-            facename = _T("Arial");
+            facename.Add(_T("Arial"));
+            facename.Add(_T("Century Gothic"));
+            facename.Add(_T("Lucida Sans Unicode"));
+            facename.Add(_T("Tahoma"));
+            facename.Add(_T("Trebuchet MS"));
+            facename.Add(_T("Verdana"));
             break;
 
@@ -608,7 +631,13 @@
             ff_family = FF_SWISS;
             if(wxGetOsVersion(&verMaj) == wxWINDOWS_NT && verMaj >= 5)
-                facename = _T("MS Shell Dlg 2");
+                facename.Add(_T("MS Shell Dlg 2"));
             else
-                facename = _T("MS Shell Dlg");
+                facename.Add(_T("MS Shell Dlg"));
+
+            // Quoting the MSDN:
+            //     "MS Shell Dlg is a mapping mechanism that enables 
+            //     U.S. English Microsoft Windows NT, and Microsoft Windows 2000 to 
+            //     support locales that have characters that are not contained in code 
+            //     page 1252. It is not a font but a face name for a nonexistent font."
         }
     }
@@ -921,11 +950,20 @@
 }
 
-void wxFont::SetFaceName(const wxString& faceName)
+bool wxFont::SetFaceName(const wxString& faceName)
 {
     Unshare();
 
-    M_FONTDATA->SetFaceName(faceName);
+    bool refdataok = M_FONTDATA->SetFaceName(faceName);
 
     RealizeResource();
+
+    // NB: using win32's GetObject() API on M_FONTDATA->GetHFONT()
+    //     to retrieve a LOGFONT and then compare lf.lfFaceName
+    //     with given facename is not reliable at all:
+    //     Windows copies the facename given to ::CreateFontIndirect()
+    //     without any validity check.
+    //     Thus we use wxFontBase::SetFaceName to check if facename
+    //     is valid...
+    return refdataok && wxFontBase::SetFaceName(faceName);
 }
 
@@ -1030,4 +1068,18 @@
 }
 
+wxString wxFont::GetNativeFontInfoDesc() const
+{
+    // be sure we have an HFONT associated...
+    wxConstCast(this, wxFont)->RealizeResource();
+    return wxFontBase::GetNativeFontInfoDesc();
+}
+
+wxString wxFont::GetNativeFontInfoUserDesc() const
+{
+    // be sure we have an HFONT associated...
+    wxConstCast(this, wxFont)->RealizeResource();
+    return wxFontBase::GetNativeFontInfoUserDesc();
+}
+
 bool wxFont::IsFixedWidth() const
 {
@@ -1044,2 +1096,3 @@
     return wxFontBase::IsFixedWidth();
 }
+
Index: src/os2/font.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/font.cpp,v
retrieving revision 1.40
diff -bu2 -r1.40 src/os2/font.cpp
--- src/os2/font.cpp
+++ src/os2/font.cpp
@@ -196,10 +196,11 @@
     }
 
-    inline void SetFaceName(const wxString& sFaceName)
+    inline bool SetFaceName(const wxString& sFaceName)
     {
         if (m_bNativeFontInfoOk)
-            m_vNativeFontInfo.SetFaceName(sFaceName);
+            return m_vNativeFontInfo.SetFaceName(sFaceName);
         else
             m_sFaceName = sFaceName;
+        return true;
     }
 
@@ -690,9 +691,10 @@
 } // end of wxNativeFontInfo::SetUnderlined
 
-void wxNativeFontInfo::SetFaceName(
+bool wxNativeFontInfo::SetFaceName(
   const wxString&                   sFacename
 )
 {
     wxStrncpy((wxChar*)fa.szFacename, sFacename, WXSIZEOF(fa.szFacename));
+    return true;
 } // end of wxNativeFontInfo::SetFaceName
 
@@ -1024,5 +1026,5 @@
 } // end of wxFont::SetWeight
 
-void wxFont::SetFaceName(
+bool wxFont::SetFaceName(
   const wxString&                   rsFaceName
 )
@@ -1030,7 +1032,9 @@
     Unshare();
 
-    M_FONTDATA->SetFaceName(rsFaceName);
+    bool refdataok = M_FONTDATA->SetFaceName(rsFaceName);
 
     RealizeResource();
+
+    return refdataok && wxFontBase::SetFaceName(rsFaceName);
 } // end of wxFont::SetFaceName
 
Index: src/palmos/font.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/palmos/font.cpp,v
retrieving revision 1.6
diff -bu2 -r1.6 src/palmos/font.cpp
--- src/palmos/font.cpp
+++ src/palmos/font.cpp
@@ -252,5 +252,5 @@
     }
 
-    void SetFaceName(const wxString& faceName)
+    bool SetFaceName(const wxString& faceName)
     {
         if ( m_nativeFontInfoOk )
@@ -445,6 +445,7 @@
 }
 
-void wxFont::SetFaceName(const wxString& faceName)
+bool wxFont::SetFaceName(const wxString& faceName)
 {
+    return true;
 }
 
Index: src/unix/fontutil.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/fontutil.cpp,v
retrieving revision 1.76
diff -bu2 -r1.76 src/unix/fontutil.cpp
--- src/unix/fontutil.cpp
+++ src/unix/fontutil.cpp
@@ -38,4 +38,5 @@
 #include "wx/tokenzr.h"
 #include "wx/module.h"
+#include "wx/fontenum.h"
 
 #if wxUSE_PANGO
@@ -261,7 +262,8 @@
 }
 
-void wxNativeFontInfo::SetFaceName(const wxString& facename)
+bool wxNativeFontInfo::SetFaceName(const wxString& facename)
 {
     pango_font_description_set_family(description, wxGTK_CONV_SYS(facename));
+    return true;
 }
 
@@ -310,4 +312,8 @@
     description = pango_font_description_from_string( wxGTK_CONV_SYS( str ) );
 
+    // ensure a valid facename is selected
+    if (!wxFontEnumerator::IsValidFacename(GetFaceName()))
+        SetFaceName(wxNORMAL_FONT->GetFaceName());
+
     return true;
 }
@@ -777,7 +783,8 @@
 }
 
-void wxNativeFontInfo::SetFaceName(const wxString& facename)
+bool wxNativeFontInfo::SetFaceName(const wxString& facename)
 {
     SetXFontComponent(wxXLFD_FAMILY, facename);
+    return true;
 }
 
Index: src/x11/font.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/x11/font.cpp,v
retrieving revision 1.24
diff -bu2 -r1.24 src/x11/font.cpp
--- src/x11/font.cpp
+++ src/x11/font.cpp
@@ -122,5 +122,5 @@
     void SetWeight(int weight);
     void SetUnderlined(bool underlined);
-    void SetFaceName(const wxString& facename);
+    bool SetFaceName(const wxString& facename);
     void SetEncoding(wxFontEncoding encoding);
 
@@ -504,7 +504,8 @@
 }
 
-void wxFontRefData::SetFaceName(const wxString& facename)
+bool wxFontRefData::SetFaceName(const wxString& facename)
 {
     m_faceName = facename;
+    return true;
 }
 
@@ -817,9 +818,10 @@
 }
 
-void wxFont::SetFaceName(const wxString& faceName)
+bool wxFont::SetFaceName(const wxString& faceName)
 {
     Unshare();
 
-    M_FONTDATA->SetFaceName(faceName);
+    return M_FONTDATA->SetFaceName(faceName) &&
+        wxFontBase::SetFaceName(faceName);
 }
 

 	  	 
