diff -uNr wxWidgets-3.1.4-orig/src/osx/cocoa/listbox.mm wxWidgets-3.1.4-mine/src/osx/cocoa/listbox.mm
--- wxWidgets-3.1.4-orig/src/osx/cocoa/listbox.mm	2020-07-22 19:20:06.000000000 +0200
+++ wxWidgets-3.1.4-mine/src/osx/cocoa/listbox.mm	2020-11-14 21:33:40.566105200 +0100
@@ -149,9 +149,15 @@
 
 
 protected :
-    wxNSTableView*          m_tableView ;
+    void                    AdaptColumnWidth ( int w );
+        
+    wxNSTableView*          m_tableView;
 
     wxNSTableDataSource*    m_dataSource;
+        
+    NSMutableArray*         m_widths;
+    int                     m_maxWidth;
+    bool                    m_autoSize;
 } ;
 
 //
@@ -330,13 +336,15 @@
 //
 
 wxListWidgetCocoaImpl::wxListWidgetCocoaImpl( wxWindowMac* peer, NSScrollView* view, wxNSTableView* tableview, wxNSTableDataSource* data ) :
-    wxWidgetCocoaImpl( peer, view ), m_tableView(tableview), m_dataSource(data)
+    wxWidgetCocoaImpl( peer, view ), m_tableView(tableview), m_dataSource(data), m_autoSize(false), m_maxWidth(0)
 {
     InstallEventHandler( tableview );
+    m_widths = [[NSMutableArray alloc] init];
 }
 
 wxListWidgetCocoaImpl::~wxListWidgetCocoaImpl()
 {
+    [m_widths release];
     [m_dataSource release];
 }
 
@@ -371,11 +379,7 @@
     }
     else
     {
-        [col1 setMaxWidth:1000];
-        [col1 setMinWidth:10];
-        // temporary hack, because I cannot get the automatic column resizing
-        // to work properly
-        [col1 setWidth:1000];
+        m_autoSize = true;
     }
     [col1 setResizingMask: NSTableColumnAutoresizingMask];
 
@@ -465,24 +469,66 @@
     return wxcol;
 }
 
+void wxListWidgetCocoaImpl::AdaptColumnWidth ( int w )
+{
+    NSTableColumn *col = [[m_tableView tableColumns] objectAtIndex:0];
+    [col setWidth:w];
+    m_maxWidth = w;
+}
 
 //
 // inserting / removing lines
 //
 
-void wxListWidgetCocoaImpl::ListInsert( unsigned int WXUNUSED(n) )
+void wxListWidgetCocoaImpl::ListInsert( unsigned int n )
 {
     [m_tableView reloadData];
+        
+    if ( m_autoSize )
+    {
+        NSCell *cell = [m_tableView preparedCellAtColumn:0 row:n];
+        NSSize size = [cell cellSize];
+        int width = (int) ceil(size.width);
+            
+        [m_widths insertObject:[NSNumber numberWithInteger:width] atIndex:n];
+           
+        if ( width > m_maxWidth )
+            AdaptColumnWidth( width );
+    }
 }
 
-void wxListWidgetCocoaImpl::ListDelete( unsigned int WXUNUSED(n) )
+void wxListWidgetCocoaImpl::ListDelete( unsigned int n )
 {
     [m_tableView reloadData];
+
+    if ( m_autoSize )
+    {
+        [m_widths removeObjectAtIndex:n];
+    
+        int maxWidth = 0;
+            
+        for ( NSNumber *number in m_widths )
+        {
+            int n = [number intValue];
+
+            if ( n > maxWidth )
+                maxWidth = n;
+        }
+   
+        if ( maxWidth < m_maxWidth )
+            AdaptColumnWidth( maxWidth );
+    }
 }
 
 void wxListWidgetCocoaImpl::ListClear()
 {
     [m_tableView reloadData];
+    
+    if ( m_autoSize )
+    {
+        [m_widths removeAllObjects];
+        AdaptColumnWidth( 100 );
+    }
 }
 
 // selecting
