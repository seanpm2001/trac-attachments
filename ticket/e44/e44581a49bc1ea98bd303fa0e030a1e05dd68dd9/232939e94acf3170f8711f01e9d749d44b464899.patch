diff --git a/include/wx/textbuf.h b/include/wx/textbuf.h
index a2511b4..0fb98c1 100644
--- a/include/wx/textbuf.h
+++ b/include/wx/textbuf.h
@@ -120,12 +120,11 @@ public:
     wxString& GetFirstLine() /* const */
         { return m_aLines.empty() ? ms_eof : m_aLines[m_nCurLine = 0]; }
     wxString& GetNextLine()  /* const */
-        { return ++m_nCurLine == m_aLines.size() ? ms_eof
-                                                 : m_aLines[m_nCurLine]; }
+        { return m_nCurLine < m_aLines.size() ? ( ++m_nCurLine == m_aLines.size() ? ms_eof : m_aLines[m_nCurLine]) : ms_eof; }
     wxString& GetPrevLine()  /* const */
         { wxASSERT(m_nCurLine > 0); return m_aLines[--m_nCurLine]; }
     wxString& GetLastLine() /* const */
-        { m_nCurLine = m_aLines.size() - 1; return m_aLines.Last(); }
+        { return m_aLines.empty() ? ms_eof : m_aLines[m_nCurLine = m_aLines.size() - 1]; }
 
     // get the type of the line (see also GetEOL)
     wxTextFileType GetLineType(size_t n) const { return m_aTypes[n]; }
@@ -156,6 +155,8 @@ public:
     {
         m_aLines.erase(m_aLines.begin() + n);
         m_aTypes.erase(m_aTypes.begin() + n);
+        if( m_nCurLine > m_aLines.size() )
+            m_nCurLine = m_aLines.size();
     }
 
     // remove all lines
diff --git a/tests/textfile/textfiletest.cpp b/tests/textfile/textfiletest.cpp
index 7fa475c..314346f 100644
--- a/tests/textfile/textfiletest.cpp
+++ b/tests/textfile/textfiletest.cpp
@@ -76,6 +76,7 @@ private:
     void ReadUTF16();
 #endif // wxUSE_UNICODE
     void ReadBig();
+    void GetNextLine();
 
     // return the name of the test file we use
     static const char *GetTestFileName() { return "textfiletest.txt"; }
@@ -201,6 +202,25 @@ void TextFileTestCase::ReadMacLast()
     CPPUNIT_ASSERT_EQUAL( "foo", f.GetFirstLine() );
 }
 
+void TextFileTestCase::GetNextLine()
+{
+    CreateTestFile( "foo\r\rbar\r\rbaz\r\r" );
+    wxTextFile f;
+    wxString str;
+    CPPUNIT_ASSERT( f.Open( wxString::FromAscii( GetTestFileName() ) ) );
+    CPPUNIT_ASSERT_EQUAL( wxString( wxT( "foo" ) ), str = f.GetFirstLine() );
+    while( !f.Eof() )
+    {
+        if( str.IsEmpty() )
+        {
+            size_t size = f.GetCurrentLine();
+            CPPUNIT_ASSERT( size == 0 );
+            f.RemoveLine( size );
+        }
+        str = f.GetNextLine();
+    }
+}
+
 void TextFileTestCase::ReadMixed()
 {
     CreateTestFile("foo\rbar\r\nbaz\n");
