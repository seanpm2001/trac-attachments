diff --git a/include/wx/msw/dc.h b/include/wx/msw/dc.h
index b4f6030..7e52aff 100644
--- a/include/wx/msw/dc.h
+++ b/include/wx/msw/dc.h
@@ -281,7 +281,7 @@ protected:
     // common part of DoSetClippingRegion() and DoSetDeviceClippingRegion()
     void SetClippingHrgn(WXHRGN hrgn);
 
-    // implementation of DoGetSize() for wxScreen/PrinterDC: this simply
+    // implementation of DoGetSize() for wxPrinterDC: this simply
     // returns the size of the entire device this DC is associated with
     //
     // notice that we intentionally put it in a separate function instead of
diff --git a/include/wx/msw/dcscreen.h b/include/wx/msw/dcscreen.h
index 839b585..082660c 100644
--- a/include/wx/msw/dcscreen.h
+++ b/include/wx/msw/dcscreen.h
@@ -17,13 +17,11 @@
 class WXDLLIMPEXP_CORE wxScreenDCImpl : public wxMSWDCImpl
 {
 public:
-    // Create a DC representing the whole screen
+    // Create a DC representing the whole virtual screen (all monitors)
     wxScreenDCImpl( wxScreenDC *owner );
 
-    virtual void DoGetSize(int *w, int *h) const
-    {
-        GetDeviceSize(w, h);
-    }
+    // Return the size of the whole virtual screen (all monitors)
+    virtual void DoGetSize(int *w, int *h) const;
 
     wxDECLARE_CLASS(wxScreenDCImpl);
     wxDECLARE_NO_COPY_CLASS(wxScreenDCImpl);
diff --git a/src/msw/dcscreen.cpp b/src/msw/dcscreen.cpp
index 397a227..5f0ffd2 100644
--- a/src/msw/dcscreen.cpp
+++ b/src/msw/dcscreen.cpp
@@ -26,7 +26,7 @@
 
 wxIMPLEMENT_ABSTRACT_CLASS(wxScreenDCImpl, wxMSWDCImpl);
 
-// Create a DC representing the whole screen
+// Create a DC representing the whole virtual screen (all monitors)
 wxScreenDCImpl::wxScreenDCImpl( wxScreenDC *owner ) :
     wxMSWDCImpl( owner )
 {
@@ -37,3 +37,11 @@ wxScreenDCImpl::wxScreenDCImpl( wxScreenDC *owner ) :
     ::SetBkMode( GetHdc(), TRANSPARENT );
 }
 
+// Return the size of the whole virtual screen (all monitors)
+void wxScreenDCImpl::DoGetSize(int *width, int *height) const
+{
+    if (width)
+        *width = ::GetSystemMetrics(SM_CXVIRTUALSCREEN);
+    if (height)
+        *height = ::GetSystemMetrics(SM_CYVIRTUALSCREEN);
+}
