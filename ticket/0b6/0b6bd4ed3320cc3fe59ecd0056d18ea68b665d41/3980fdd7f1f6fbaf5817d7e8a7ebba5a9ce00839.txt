diff -ru2 wxWidgets-2.6.3-original/include/wx/tokenzr.h wxWidgets-2.6.3/include/wx/tokenzr.h
--- wxWidgets-2.6.3-original/include/wx/tokenzr.h	2004-05-23 18:50:26.000000000 -0700
+++ wxWidgets-2.6.3/include/wx/tokenzr.h	2006-10-19 03:21:43.968750000 -0700
@@ -73,5 +73,5 @@
         // returns the part of the string which remains to tokenize (*not* the
         // initial string)
-    wxString GetString() const { return m_string; }
+    wxString GetString() const { return m_string.Mid(m_pos); }
 
         // returns the current position (i.e. one index after the last
diff -ru2 wxWidgets-2.6.3-original/src/common/tokenzr.cpp wxWidgets-2.6.3/src/common/tokenzr.cpp
--- wxWidgets-2.6.3-original/src/common/tokenzr.cpp	2004-09-23 16:20:56.000000000 -0700
+++ wxWidgets-2.6.3/src/common/tokenzr.cpp	2006-10-19 03:40:49.500000000 -0700
@@ -105,5 +105,5 @@
     wxCHECK_MSG( IsOk(), false, _T("you should call SetString() first") );
 
-    if ( m_string.find_first_not_of(m_delims) == wxString::npos )
+    if ( m_string.find_first_not_of(m_delims, m_pos) == wxString::npos )
     {
         // no non empty tokens left, but in 2 cases we still may return true if
@@ -168,5 +168,5 @@
         }
         // find the end of this token
-        size_t pos = m_string.find_first_of(m_delims);
+        size_t pos = m_string.find_first_of(m_delims, m_pos);
 
         // and the start of the next one
@@ -175,8 +175,7 @@
             // no more delimiters, the token is everything till the end of
             // string
-            token = m_string;
+            token = m_string.Mid(m_pos);
 
-            m_pos += m_string.length();
-            m_string.clear();
+            m_pos = m_string.length();
 
             // no more tokens in this string, even in wxTOKEN_RET_EMPTY_ALL
@@ -190,12 +189,8 @@
             // in wxTOKEN_RET_DELIMS mode we return the delimiter character
             // with token
-            token = wxString(m_string, m_mode == wxTOKEN_RET_DELIMS ? pos2
-                                                                    : pos);
+            token = m_string.Mid(m_pos, (m_mode == wxTOKEN_RET_DELIMS ? pos2 : pos) - m_pos);
 
-            // remove token with the following it delimiter from string
-            m_string.erase(0, pos2);
-
-            // keep track of the position in the original string too
-            m_pos += pos2;
+            // keep track of the position
+            m_pos = pos2;
         }
     }

 	  	 
