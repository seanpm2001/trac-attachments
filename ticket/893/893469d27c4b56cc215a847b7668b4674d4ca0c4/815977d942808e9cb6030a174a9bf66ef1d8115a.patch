Index: mymodels.cpp
===================================================================
--- mymodels.cpp	(revision 69786)
+++ mymodels.cpp	(working copy)
@@ -38,8 +38,15 @@
 
 MyMusicTreeModel::MyMusicTreeModel()
 {
-    m_root = new MyMusicTreeModelNode( NULL, "My Music" );
+    //To show this problem we will start with an empty control
+    //that is we don't have any items. To test this problem press
+    //"Add Mozart" button which should activete the AddToClassical function.
+    //I have made changes to that function so it only adds a container. Since thats what you do
+    //when you have an empty control and want to add items in a tree fashion control.
+    //Note: we don't want to have any root.
 
+    /*m_root = new MyMusicTreeModelNode( NULL, "My Music" );
+
     // setup pop music
     m_pop = new MyMusicTreeModelNode( m_root, "Pop music" );
     m_pop->Append(
@@ -57,7 +64,7 @@
                                                    "Johannes Brahms", 1868 ) );
     m_root->Append( m_classical );
 
-    m_classicalMusicIsKnownToControl = false;
+    m_classicalMusicIsKnownToControl = false;*/
 }
 
 wxString MyMusicTreeModel::GetTitle( const wxDataViewItem &item ) const
@@ -90,7 +97,7 @@
 void MyMusicTreeModel::AddToClassical( const wxString &title, const wxString &artist,
                                        unsigned int year )
 {
-    if (!m_classical)
+    /*if (!m_classical)
     {
         wxASSERT(m_root);
 
@@ -102,19 +109,25 @@
         wxDataViewItem child( (void*) m_classical );
         wxDataViewItem parent( (void*) m_root );
         ItemAdded( parent, child );
-    }
+    }*/
 
-    // add to the classical music node a new node:
+
+    //We will only be adding containers to show this problem. This is only for testing
+    //as you can see the pointer is not saved and will cause a memory leak so in irl app one would
+    //create an array and save the pointers.
     MyMusicTreeModelNode *child_node =
         new MyMusicTreeModelNode( m_classical, title, artist, year );
-    m_classical->Append( child_node );
+    //m_classical->Append( child_node );
 
     // FIXME: what's m_classicalMusicIsKnownToControl for?
     if (m_classicalMusicIsKnownToControl)
     {
         // notify control
         wxDataViewItem child( (void*) child_node );
-        wxDataViewItem parent( (void*) m_classical );
+        //see here since we want this to be a container and we dont want
+        //to have any root item, we will give it a null parent.
+        wxDataViewItem parent( NULL );
+        //this will return false as explained in the ticket.
         ItemAdded( parent, child );
     }
 }
@@ -274,7 +287,8 @@
 {
     // the invisble root node can have children
     // (in our model always "MyMusic")
-    if (!item.IsOk())
+    //if (!item.IsOk())
+    //We will only be adding containers to show this problem.
         return true;
 
     MyMusicTreeModelNode *node = (MyMusicTreeModelNode*) item.GetID();
@@ -287,8 +301,9 @@
     MyMusicTreeModelNode *node = (MyMusicTreeModelNode*) parent.GetID();
     if (!node)
     {
-        array.Add( wxDataViewItem( (void*) m_root ) );
-        return 1;
+        //again we only have containers.
+        //array.Add( wxDataViewItem( (void*) m_root ) );
+        return 0;
     }
 
     if (node == m_classical)
Index: mymodels.h
===================================================================
--- mymodels.h	(revision 69786)
+++ mymodels.h	(working copy)
@@ -118,7 +118,7 @@
     MyMusicTreeModel();
     ~MyMusicTreeModel()
     {
-        delete m_root;
+        //delete m_root;
     }
 
     // helper method for wxLog
