Index: samples/minimal/minimal.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/minimal/minimal.cpp,v
retrieving revision 1.67
diff -u -B -r1.67 minimal.cpp
--- samples/minimal/minimal.cpp	2005/02/20 16:14:03	1.67
+++ samples/minimal/minimal.cpp	2005/03/06 14:21:18
@@ -67,6 +67,7 @@
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    wxButton *button;
 
 private:
     // any class wishing to process wxWidgets events must use this macro
@@ -157,6 +158,8 @@
     wxMenuBar *menuBar = new wxMenuBar();
     menuBar->Append(fileMenu, _T("&File"));
     menuBar->Append(helpMenu, _T("&Help"));
+    
+    button = new wxButton(this, wxID_ANY, _T("Dummy button"));
 
     // ... and attach this menu bar to the frame
     SetMenuBar(menuBar);
@@ -178,11 +181,54 @@
     Close(true);
 }
 
+#define WXMETRIC_TLW this
+#define WXMETRIC_WIN this->button
+
+#define PRINT_TABLE_ROW(metric_name)                                 \
+    printf("%25s %5d %5d %5d\n",                                     \
+           #metric_name,                                             \
+           wxSystemSettings::GetMetric(metric_name),                 \
+           wxSystemSettings::GetMetric(metric_name, WXMETRIC_TLW),   \
+           wxSystemSettings::GetMetric(metric_name, WXMETRIC_WIN) );
+
 void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
 {
-    wxString msg;
-    msg.Printf( _T("This is the About dialog of the minimal sample.\n")
-                _T("Welcome to %s"), wxVERSION_STRING);
-
-    wxMessageBox(msg, _T("About Minimal"), wxOK | wxICON_INFORMATION, this);
+    printf("%25s %5s %5s %5s\n", "Metric", "NULL", "TLW", "WID");
+    PRINT_TABLE_ROW(wxSYS_MOUSE_BUTTONS);
+    PRINT_TABLE_ROW(wxSYS_BORDER_X);
+    PRINT_TABLE_ROW(wxSYS_BORDER_Y);
+    PRINT_TABLE_ROW(wxSYS_CURSOR_X);
+    PRINT_TABLE_ROW(wxSYS_CURSOR_Y);
+    PRINT_TABLE_ROW(wxSYS_DCLICK_X);
+    PRINT_TABLE_ROW(wxSYS_DCLICK_Y);
+    PRINT_TABLE_ROW(wxSYS_DRAG_X);
+    PRINT_TABLE_ROW(wxSYS_DRAG_Y);
+    PRINT_TABLE_ROW(wxSYS_EDGE_X);
+    PRINT_TABLE_ROW(wxSYS_EDGE_Y);
+    PRINT_TABLE_ROW(wxSYS_HSCROLL_ARROW_X);
+    PRINT_TABLE_ROW(wxSYS_HSCROLL_ARROW_Y);
+    PRINT_TABLE_ROW(wxSYS_HTHUMB_X);
+    PRINT_TABLE_ROW(wxSYS_ICON_X);
+    PRINT_TABLE_ROW(wxSYS_ICON_Y);
+    PRINT_TABLE_ROW(wxSYS_ICONSPACING_X);
+    PRINT_TABLE_ROW(wxSYS_ICONSPACING_Y);
+    PRINT_TABLE_ROW(wxSYS_WINDOWMIN_X);
+    PRINT_TABLE_ROW(wxSYS_WINDOWMIN_Y);
+    PRINT_TABLE_ROW(wxSYS_SCREEN_X);
+    PRINT_TABLE_ROW(wxSYS_SCREEN_Y);
+    PRINT_TABLE_ROW(wxSYS_FRAMESIZE_X);
+    PRINT_TABLE_ROW(wxSYS_FRAMESIZE_Y);
+    PRINT_TABLE_ROW(wxSYS_SMALLICON_X);
+    PRINT_TABLE_ROW(wxSYS_SMALLICON_Y);
+    PRINT_TABLE_ROW(wxSYS_HSCROLL_Y);
+    PRINT_TABLE_ROW(wxSYS_VSCROLL_X);
+    PRINT_TABLE_ROW(wxSYS_VSCROLL_ARROW_X);
+    PRINT_TABLE_ROW(wxSYS_VSCROLL_ARROW_Y);
+    PRINT_TABLE_ROW(wxSYS_VTHUMB_Y);
+    PRINT_TABLE_ROW(wxSYS_CAPTION_Y);
+    PRINT_TABLE_ROW(wxSYS_MENU_Y);
+    PRINT_TABLE_ROW(wxSYS_NETWORK_PRESENT);
+    PRINT_TABLE_ROW(wxSYS_PENWINDOWS_PRESENT);
+    PRINT_TABLE_ROW(wxSYS_SHOW_SOUNDS);
+    PRINT_TABLE_ROW(wxSYS_SWAP_BUTTONS);
 }

 	  	 
