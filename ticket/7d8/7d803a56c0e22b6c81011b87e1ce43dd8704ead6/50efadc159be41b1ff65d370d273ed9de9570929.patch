diff -rbu2 ./cvs/wx2/wxwindows/include/wx/app.h ./wx2/include/wx/app.h
--- ./cvs/wx2/wxwindows/include/wx/app.h	Tue Apr 17 19:54:44 2001
+++ ./wx2/include/wx/app.h	Fri Apr 20 19:01:24 2001
@@ -327,5 +327,5 @@
 // Post a message to the given eventhandler which will be processed during the
 // next event loop iteration
-inline void WXDLLEXPORT wxPostEvent(wxEvtHandler *dest, wxEvent& event)
+inline void wxPostEvent(wxEvtHandler *dest, wxEvent& event)
 {
     wxCHECK_RET( dest, wxT("need an object to post event to in wxPostEvent") );
diff -rbu2 ./cvs/wx2/wxwindows/include/wx/longlong.h ./wx2/include/wx/longlong.h
--- ./cvs/wx2/wxwindows/include/wx/longlong.h	Fri Mar 23 18:50:42 2001
+++ ./wx2/include/wx/longlong.h	Fri Apr 20 19:02:44 2001
@@ -513,13 +513,13 @@
 // ----------------------------------------------------------------------------
 
-inline bool WXDLLEXPORT operator<(long l, const wxLongLong& ll) { return ll > l; }
-inline bool WXDLLEXPORT operator>(long l, const wxLongLong& ll) { return ll > l; }
-inline bool WXDLLEXPORT operator<=(long l, const wxLongLong& ll) { return ll > l; }
-inline bool WXDLLEXPORT operator>=(long l, const wxLongLong& ll) { return ll > l; }
-inline bool WXDLLEXPORT operator==(long l, const wxLongLong& ll) { return ll > l; }
-inline bool WXDLLEXPORT operator!=(long l, const wxLongLong& ll) { return ll > l; }
+inline bool operator<(long l, const wxLongLong& ll) { return ll > l; }
+inline bool operator>(long l, const wxLongLong& ll) { return ll > l; }
+inline bool operator<=(long l, const wxLongLong& ll) { return ll > l; }
+inline bool operator>=(long l, const wxLongLong& ll) { return ll > l; }
+inline bool operator==(long l, const wxLongLong& ll) { return ll > l; }
+inline bool operator!=(long l, const wxLongLong& ll) { return ll > l; }
 
-inline wxLongLong WXDLLEXPORT operator+(long l, const wxLongLong& ll) { return ll + l; }
-inline wxLongLong WXDLLEXPORT operator-(long l, const wxLongLong& ll) { return ll - l; }
+inline wxLongLong operator+(long l, const wxLongLong& ll) { return ll + l; }
+inline wxLongLong operator-(long l, const wxLongLong& ll) { return ll - l; }
 
 #endif // _WX_LONGLONG_H
diff -rbu2 ./cvs/wx2/wxwindows/include/wx/msw/dib.h ./wx2/include/wx/msw/dib.h
--- ./cvs/wx2/wxwindows/include/wx/msw/dib.h	Fri Nov 26 16:29:52 1999
+++ ./wx2/include/wx/msw/dib.h	Fri Apr 20 17:38:28 2001
@@ -30,6 +30,6 @@
 
 // defined in ole/dataobj.cpp
-extern size_t wxConvertBitmapToDIB(LPBITMAPINFO pbi, const wxBitmap& bitmap);
-extern wxBitmap wxConvertDIBToBitmap(const LPBITMAPINFO pbi);
+WXDLLEXPORT extern size_t wxConvertBitmapToDIB(LPBITMAPINFO pbi, const wxBitmap& bitmap);
+WXDLLEXPORT extern wxBitmap wxConvertDIBToBitmap(const LPBITMAPINFO pbi);
 
 // the rest is defined in dib.cpp
diff -rbu2 ./cvs/wx2/wxwindows/include/wx/string.h ./wx2/include/wx/string.h
--- ./cvs/wx2/wxwindows/include/wx/string.h	Sat Feb  3 14:53:12 2001
+++ ./wx2/include/wx/string.h	Fri Apr 20 19:00:36 2001
@@ -121,12 +121,12 @@
 
 // checks whether the passed in pointer is NULL and if the string is empty
-inline bool WXDLLEXPORT IsEmpty(const char *p) { return (!p || !*p); }
+inline bool IsEmpty(const char *p) { return (!p || !*p); }
 
 // safe version of strlen() (returns 0 if passed NULL pointer)
-inline size_t WXDLLEXPORT Strlen(const char *psz)
+inline size_t Strlen(const char *psz)
   { return psz ? strlen(psz) : 0; }
 
 // portable strcasecmp/_stricmp
-inline int WXDLLEXPORT Stricmp(const char *psz1, const char *psz2)
+inline int Stricmp(const char *psz1, const char *psz2)
 {
 #if defined(__VISUALC__) || ( defined(__MWERKS__) && defined(__INTEL__) )
@@ -1127,12 +1127,12 @@
 wxString WXDLLEXPORT operator+(const wxChar *psz, const wxString& string);
 #if wxUSE_UNICODE
-inline wxString WXDLLEXPORT operator+(const wxString& string, const wxWCharBuffer& buf)
+inline wxString operator+(const wxString& string, const wxWCharBuffer& buf)
     { return string + (const wchar_t *)buf; }
-inline wxString WXDLLEXPORT operator+(const wxWCharBuffer& buf, const wxString& string)
+inline wxString operator+(const wxWCharBuffer& buf, const wxString& string)
     { return (const wchar_t *)buf + string; }
 #else // !wxUSE_UNICODE
-inline wxString WXDLLEXPORT operator+(const wxString& string, const wxCharBuffer& buf)
+inline wxString operator+(const wxString& string, const wxCharBuffer& buf)
     { return string + (const char *)buf; }
-inline wxString WXDLLEXPORT operator+(const wxCharBuffer& buf, const wxString& string)
+inline wxString operator+(const wxCharBuffer& buf, const wxString& string)
     { return (const char *)buf + string; }
 #endif // wxUSE_UNICODE/!wxUSE_UNICODE
diff -rbu2 ./cvs/wx2/wxwindows/include/wx/window.h ./wx2/include/wx/window.h
--- ./cvs/wx2/wxwindows/include/wx/window.h	Fri Sep 15 15:15:38 2000
+++ ./wx2/include/wx/window.h	Fri Apr 20 19:01:08 2001
@@ -922,5 +922,5 @@
 
 // deprecated (doesn't start with 'wx' prefix), use wxWindow::NewControlId()
-inline WXDLLEXPORT int NewControlId() { return wxWindowBase::NewControlId(); }
+inline int NewControlId() { return wxWindowBase::NewControlId(); }
 
 #endif
diff -rbu2 ./cvs/wx2/wxwindows/include/wx/wxchar.h ./wx2/include/wx/wxchar.h
--- ./cvs/wx2/wxwindows/include/wx/wxchar.h	Thu Feb 15 21:51:12 2001
+++ ./wx2/include/wx/wxchar.h	Fri Apr 20 19:00:50 2001
@@ -512,9 +512,9 @@
 
 // checks whether the passed in pointer is NULL and if the string is empty
-WXDLLEXPORT inline bool wxIsEmpty(const wxChar *p) { return !p || !*p; }
+inline bool wxIsEmpty(const wxChar *p) { return !p || !*p; }
 
 #ifndef wxNEED_WX_STRING_H
 // safe version of strlen() (returns 0 if passed NULL pointer)
-WXDLLEXPORT inline size_t wxStrlen(const wxChar *psz)
+inline size_t wxStrlen(const wxChar *psz)
    { return psz ? wxStrlen_(psz) : 0; }
 #endif

 	  	 
