Index: e:/dev/wxWindows/contrib/include/wx/fl/dyntbar.h
===================================================================
RCS file: /home/wxcvs/wxWindows/contrib/include/wx/fl/dyntbar.h,v
retrieving revision 1.2
diff -r1.2 dyntbar.h
96c96
< 	virtual void SizeToolWindows();
---
> 	virtual void SizeToolWindows(bool bHorz = TRUE, int maxWidth = 0, int maxHeight = 0);
Index: e:/dev/wxWindows/contrib/src/fl/dyntbar.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/contrib/src/fl/dyntbar.cpp,v
retrieving revision 1.2
diff -r1.2 dyntbar.cpp
249c249,250
< 		pInfo->mRealSize.x = mSepartorSize;
---
> 		// Init all sizes to default.
> 		pInfo->mRealSize.x = 0;
253c254
< 		pInfo->mRect.height = 0;
---
> 		pInfo->mRect.height = mSepartorSize;
303d303
< 
315d314
< 
323c322
< void wxDynamicToolBar::SizeToolWindows()
---
> void wxDynamicToolBar::SizeToolWindows(bool bHorz, int maxWidth, int maxHeight)
332d330
< 
346a345
> 			{
349a349
> 			}
350a351,363
> 		else
> 		{
> 			// Check if we should draw Horz or Vert...
> 			if ( bHorz )
> 			{
> 				info.mRect.width = mSepartorSize;
> 				info.mRect.height = maxHeight;
> 			}
> 			else
> 			{
> 				info.mRect.width = maxWidth;
> 				info.mRect.height = mSepartorSize;
> 			}
352c365,373
< 		// TBD:: size separator window if present
---
> 			// Do we need to set a new size to a seperator object?
> 			if ( info.mpToolWnd )
> 			{
> 				info.mpToolWnd->SetSize( info.mRect.x,
> 										 info.mRect.y, 
> 										 info.mRect.width, 
> 										 info.mRect.height);			
> 			}
> 		}
358,360d378
< 	if ( !mpLayoutMan )
<         mpLayoutMan = CreateDefaulLayout();
< 
364a383,384
> 	size_t i;
> 	wxDynToolInfo *pInfo;
366c386,396
< 	wxLayoutItemArrayT items;
---
> 	// Reset the size of separators...
> 	for( i = 0; i != mTools.Count(); ++i )
> 	{
> 		pInfo = mTools[i];
> 		
> 		if ( pInfo->mIsSeparator ) 
> 		{
> 			pInfo->mRect.width  = mSepartorSize;
> 			pInfo->mRect.height = mSepartorSize;
> 		}
> 	}
368,369c398,409
< 	// safe conversion
<     size_t i;
---
> 	// Calc and set the best layout
> 	GetPreferredDim( wndDim, result );
> 
> 	// Conclude if separators are draw Horizontal or Vertical
> 	// And also the size the will have.
> 	bool bHorz;
> 	int  maxWidth = 0;
> 	int  maxHeight = 0;
> 	int  nHorz = 0;
> 	int  nVert = 0;
> 	
> 	wxDynToolInfo *pPrev_Info = NULL;
371c411,429
<         items.Add( mTools[i] );
---
> 	{
> 		pInfo = mTools[i];
> 		
> 		if ( !pInfo->mIsSeparator ) 
> 		{
> 			maxWidth = wxMax(maxWidth, pInfo->mRealSize.x);
> 			maxHeight = wxMax(maxHeight, pInfo->mRealSize.y);
> 
> 			if ( pPrev_Info )
> 			{
> 				if (pInfo->mRect.x > pPrev_Info->mRect.x)
> 					nHorz++;
> 				if (pInfo->mRect.y > pPrev_Info->mRect.y)
> 					nVert++;
> 			}
> 
> 			pPrev_Info = pInfo;
> 		}
> 	}
373c431,433
< 	mpLayoutMan->Layout( wndDim, result, items, mVertGap, mHorizGap );;
---
> 	// Ok now we will re-order all windows and separators.
> 	bHorz = (nHorz >= nVert);
> 	SizeToolWindows( bHorz, maxWidth, maxHeight);
375d434
< 	SizeToolWindows();
391c450
< 	mpLayoutMan->Layout( givenDim, prefDim, items, mVertGap, mHorizGap );;
---
> 	mpLayoutMan->Layout( givenDim, prefDim, items, mVertGap, mHorizGap );

 	  	 
