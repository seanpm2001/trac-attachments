 include/wx/msw/toplevel.h      |  2 ++
 include/wx/osx/cocoa/private.h |  4 ++++
 include/wx/osx/core/private.h  |  4 ++++
 include/wx/osx/toplevel.h      |  6 +++++
 include/wx/toplevel.h          |  2 ++
 interface/wx/toplevel.h        | 40 ++++++++++++++++++++++++++++----
 src/msw/toplevel.cpp           | 52 ++++++++++++++++++++++++++++++++++++++++++
 src/osx/cocoa/nonownedwnd.mm   | 21 +++++++++++++++++
 src/osx/toplevel_osx.cpp       | 27 ++++++++++++++++++++++
 9 files changed, 153 insertions(+), 5 deletions(-)

diff --git a/include/wx/msw/toplevel.h b/include/wx/msw/toplevel.h
index e70031c..c3e86ae 100644
--- a/include/wx/msw/toplevel.h
+++ b/include/wx/msw/toplevel.h
@@ -68,6 +68,8 @@ public:
     // wxMSW only: EnableCloseButton(false) may be used to remove the "Close"
     // button from the title bar
     virtual bool EnableCloseButton(bool enable = true);
+    virtual bool EnableMaximizeButton( bool enable = true );
+    virtual bool EnableMinimizeButton( bool enable = true );
 
     // Set window transparency if the platform supports it
     virtual bool SetTransparent(wxByte alpha);
diff --git a/include/wx/osx/cocoa/private.h b/include/wx/osx/cocoa/private.h
index 83cd34d..86f5178 100644
--- a/include/wx/osx/cocoa/private.h
+++ b/include/wx/osx/cocoa/private.h
@@ -231,6 +231,10 @@ public :
 
     virtual void SetTitle( const wxString& title, wxFontEncoding encoding ) ;
 
+    virtual bool EnableCloseButton( bool enable );
+    virtual bool EnableMaximizeButton( bool enable );
+    virtual bool EnableMinimizeButton( bool enable );
+
     virtual bool IsMaximized() const;
 
     virtual bool IsIconized() const;
diff --git a/include/wx/osx/core/private.h b/include/wx/osx/core/private.h
index eb2758a..ac2123f 100644
--- a/include/wx/osx/core/private.h
+++ b/include/wx/osx/core/private.h
@@ -860,6 +860,10 @@ public :
 
     virtual void SetTitle( const wxString& title, wxFontEncoding encoding ) = 0;
 
+    virtual bool EnableCloseButton( bool enable ) = 0;
+    virtual bool EnableMaximizeButton( bool enable ) = 0;
+    virtual bool EnableMinimizeButton( bool enable ) = 0;
+
     virtual bool IsMaximized() const = 0;
 
     virtual bool IsIconized() const= 0;
diff --git a/include/wx/osx/toplevel.h b/include/wx/osx/toplevel.h
index 33bdffa..cbd3cca 100644
--- a/include/wx/osx/toplevel.h
+++ b/include/wx/osx/toplevel.h
@@ -74,6 +74,12 @@ public:
     virtual void SetTitle( const wxString& title);
     virtual wxString GetTitle() const;
 
+    // EnableCloseButton(false) used to disable the "Close"
+    // button on the title bar
+    virtual bool EnableCloseButton( bool enable = true );
+    virtual bool EnableMaximizeButton( bool enable = true );
+    virtual bool EnableMinimizeButton( bool enable = true );
+
     virtual void SetLabel(const wxString& label) { SetTitle( label ); }
     virtual wxString GetLabel() const            { return GetTitle(); }
     
diff --git a/include/wx/toplevel.h b/include/wx/toplevel.h
index b6a2a49..3a65041 100644
--- a/include/wx/toplevel.h
+++ b/include/wx/toplevel.h
@@ -206,6 +206,8 @@ public:
 
     // enable/disable close button [x]
     virtual bool EnableCloseButton(bool WXUNUSED(enable) = true) { return false; }
+    virtual bool EnableMaximizeButton( bool WXUNUSED( enable ) = true ) { return false; }
+    virtual bool EnableMinimizeButton( bool WXUNUSED( enable ) = true ) { return false; }
 
     // Attracts the users attention to this window if the application is
     // inactive (should be called when a background event occurs)
diff --git a/interface/wx/toplevel.h b/interface/wx/toplevel.h
index f40e315..42d80ba 100644
--- a/interface/wx/toplevel.h
+++ b/interface/wx/toplevel.h
@@ -138,11 +138,9 @@ public:
     void CentreOnScreen(int direction = wxBOTH);
 
     /**
-        Enables or disables the Close button (most often in the right upper
-        corner of a dialog) and the Close entry of the system menu (most often
-        in the left upper corner of the dialog).
-
-        Currently only implemented for wxMSW and wxGTK.
+        EEnables or disables the Close button (most often in the right upper
+        corner of a frame or dialog) and the Close entry of the system menu 
+        (most often in the left upper corner of the frame or dialog).
 
         Returns @true if operation was successful. This may be wrong on X11
         (including GTK+) where the window manager may not support this operation
@@ -151,6 +149,38 @@ public:
     virtual bool EnableCloseButton(bool enable = true);
 
     /**
+    Enables or disables the Maximize button (in the right or left upper
+    corner of a frame or dialog).
+
+    Currently only implemented for wxMSW and wxOSX.
+
+    The window style must contain wxMAXIMIZE_BOX.
+
+    Returns @true if operation was successful. Note that a successful
+    operation does not change the window style flags.
+
+    @since 3.1.0
+    */
+    virtual bool EnableMaximizeButton(bool enable = true);
+
+    /**
+    Enables or disables the Minimize button (in the right or left upper
+    corner of a frame or dialog).
+
+    Currently only implemented for wxMSW and wxOSX.
+
+    The window style must contain wxMINIMIZE_BOX.
+
+    Note that in wxMSW a successful operation will change the window
+    style flags.
+
+    Returns @true if operation was successful. Note that a successful
+    operation does not change the window style flags.
+
+    @since 3.1.0
+    */
+    virtual bool EnableMinimizeButton( bool enable = true );
+    /**
         Returns a pointer to the button which is the default for this window, or
         @c @NULL. The default button is the one activated by pressing the Enter
         key.
diff --git a/src/msw/toplevel.cpp b/src/msw/toplevel.cpp
index f275bb5..0e9b626 100644
--- a/src/msw/toplevel.cpp
+++ b/src/msw/toplevel.cpp
@@ -1212,6 +1212,58 @@ bool wxTopLevelWindowMSW::EnableCloseButton(bool enable)
     return true;
 }
 
+// Window must have wxCAPTION and either wxCLOSE_BOX or wxSYSTEM_MENU for the
+// button to be visible. Also check for wxMAXIMIZE_BOX because we don't want
+// to enable a button that is excluded from the current style.
+
+bool wxTopLevelWindowMSW::EnableMaximizeButton( bool enable )
+{
+    if( ( HasFlag( wxCAPTION ) &&
+        ( HasFlag( wxCLOSE_BOX ) || HasFlag( wxSYSTEM_MENU ) ) ) &&
+        HasFlag( wxMAXIMIZE_BOX ) )
+    {
+        if( enable )
+        {
+            SetWindowStyleFlag( GetWindowStyleFlag() | wxMAXIMIZE_BOX );
+        }
+        else
+        {
+            SetWindowStyleFlag( GetWindowStyleFlag() ^ wxMAXIMIZE_BOX );
+            // Restore the style to our internal store
+            wxWindowBase::SetWindowStyleFlag( GetWindowStyle() |
+                                              wxMAXIMIZE_BOX );
+        }
+
+        return true;
+    }
+
+    return false;
+}
+
+bool wxTopLevelWindowMSW::EnableMinimizeButton( bool enable )
+{
+    if( ( HasFlag( wxCAPTION ) &&
+        ( HasFlag( wxCLOSE_BOX ) || HasFlag( wxSYSTEM_MENU ) ) ) &&
+        HasFlag( wxMINIMIZE_BOX ) )
+    {
+        if( enable )
+        {
+            SetWindowStyleFlag( GetWindowStyleFlag() | wxMINIMIZE_BOX );
+        }
+        else
+        {
+            SetWindowStyleFlag( GetWindowStyleFlag() ^ wxMINIMIZE_BOX );
+            // Restore the style to our internal store
+            wxWindowBase::SetWindowStyleFlag( GetWindowStyle() |
+                                              wxMINIMIZE_BOX );
+        }
+
+        return true;
+    }
+
+    return false;
+}
+
 void wxTopLevelWindowMSW::RequestUserAttention(int flags)
 {
 #if defined(FLASHW_STOP) && wxUSE_DYNLIB_CLASS
diff --git a/src/osx/cocoa/nonownedwnd.mm b/src/osx/cocoa/nonownedwnd.mm
index a13efda..0542d13 100644
--- a/src/osx/cocoa/nonownedwnd.mm
+++ b/src/osx/cocoa/nonownedwnd.mm
@@ -953,6 +953,27 @@ void wxNonOwnedWindowCocoaImpl::SetTitle( const wxString& title, wxFontEncoding
     [m_macWindow setTitle:wxCFStringRef( title , encoding ).AsNSString()];
 }
 
+bool wxNonOwnedWindowCocoaImpl::EnableCloseButton( bool enable )
+{
+    [[m_macWindow standardWindowButton:NSWindowCloseButton] setEnabled:enable];
+    
+    return true;
+}
+
+bool wxNonOwnedWindowCocoaImpl::EnableMaximizeButton( bool enable )
+{
+    [[m_macWindow standardWindowButton:NSWindowZoomButton] setEnabled:enable];
+    
+    return true;
+}
+
+bool wxNonOwnedWindowCocoaImpl::EnableMinimizeButton( bool enable )
+{
+    [[m_macWindow standardWindowButton:NSWindowMiniaturizeButton] setEnabled:enable];
+    
+    return true;
+}
+
 bool wxNonOwnedWindowCocoaImpl::IsMaximized() const
 {
     if (([m_macWindow styleMask] & NSResizableWindowMask) != 0)
diff --git a/src/osx/toplevel_osx.cpp b/src/osx/toplevel_osx.cpp
index cd54839..bace343 100644
--- a/src/osx/toplevel_osx.cpp
+++ b/src/osx/toplevel_osx.cpp
@@ -205,6 +205,33 @@ bool wxTopLevelWindowMac::IsFullScreen() const
     return m_nowpeer->IsFullScreen();
 }
 
+bool wxTopLevelWindowMac::EnableCloseButton( bool enable )
+{
+    // Unlike MSW, wxSYSTEM_MENU is not sufficient to show
+    // a close button unless combined with one of the resize buttons
+    if ( HasFlag( wxCLOSE_BOX ) )
+        return m_nowpeer->EnableCloseButton( enable );
+
+    return false;
+}
+
+bool wxTopLevelWindowMac::EnableMaximizeButton( bool enable )
+{
+    // Both wxRESIZE_BORDER and wxMAXIMIZE_BOX create a resize border and
+    // add a maximize button.
+    if ( HasFlag( wxMAXIMIZE_BOX ) || HasFlag( wxRESIZE_BORDER ) )
+        return m_nowpeer->EnableMaximizeButton( enable );
+    return false;
+}
+
+bool wxTopLevelWindowMac::EnableMinimizeButton( bool enable )
+{
+    if ( HasFlag( wxMINIMIZE_BOX ) )
+        return m_nowpeer->EnableMinimizeButton( enable );
+
+    return false;
+}
+
 void wxTopLevelWindowMac::RequestUserAttention(int flags)
 {
     return m_nowpeer->RequestUserAttention(flags);
