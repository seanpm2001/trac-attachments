Index: src/gtk/dataview.cpp
===================================================================
--- src/gtk/dataview.cpp	(revision 70630)
+++ src/gtk/dataview.cpp	(working copy)
@@ -249,6 +249,7 @@
         GtkSelectionData *selection_data );
 
     // notifactions from wxDataViewModel
+    bool NodeAdded( const wxDataViewItem &parent, wxGtkTreeModelNode* node );
     bool ItemAdded( const wxDataViewItem &parent, const wxDataViewItem &item );
     bool ItemDeleted( const wxDataViewItem &parent, const wxDataViewItem &item );
     bool ItemChanged( const wxDataViewItem &item );
@@ -280,12 +281,12 @@
     int GetIndexOf( const wxDataViewItem &parent, const wxDataViewItem &item );
 
     void OnInternalIdle();
+    wxGtkTreeModelNode *FindNode( const wxDataViewItem &item );
 
 protected:
     void InitTree();
     void ScheduleRefresh();
 
-    wxGtkTreeModelNode *FindNode( const wxDataViewItem &item );
     wxGtkTreeModelNode *FindNode( GtkTreeIter *iter );
     wxGtkTreeModelNode *FindParentNode( const wxDataViewItem &item );
     wxGtkTreeModelNode *FindParentNode( GtkTreeIter *iter );
@@ -359,12 +360,6 @@
             void *id = child->GetItem().GetID();
 
             m_children.Add( id );
-
-            if (m_internal->IsSorted() || m_internal->GetDataViewModel()->HasDefaultCompare())
-            {
-                gs_internal = m_internal;
-                m_children.Sort( &wxGtkTreeModelChildCmp );
-            }
         }
 
     void InsertNode( wxGtkTreeModelNode* child, unsigned pos )
@@ -406,12 +401,6 @@
     void InsertLeaf( void* id, unsigned pos )
         {
             m_children.Insert( id, pos );
-
-            if (m_internal->IsSorted() || m_internal->GetDataViewModel()->HasDefaultCompare())
-            {
-                gs_internal = m_internal;
-                m_children.Sort( &wxGtkTreeModelChildCmp );
-            }
         }
 
     void DeleteChild( void* id )
@@ -1551,6 +1540,14 @@
     gtk_tree_model_row_inserted(
         GTK_TREE_MODEL(wxgtk_model), path, &iter);
 
+	wxGtkTreeModelNode* node = m_internal->FindNode(parent);
+    if (m_internal->IsSorted() || m_internal->GetDataViewModel()->HasDefaultCompare())
+    {
+       gs_internal = m_internal;
+    	node->GetChildren().Sort( &wxGtkTreeModelChildCmp );
+    }
+    node = m_internal->FindNode(item);
+    if(m_wx_model->IsContainer(item)) m_internal->NodeAdded(item, node);
     return true;
 }
 
@@ -3450,6 +3447,11 @@
 
             // Don't send any events here
         }
+        if (IsSorted() || GetDataViewModel()->HasDefaultCompare())
+        {
+            gs_internal = this;
+            node->GetChildren().Sort( &wxGtkTreeModelChildCmp );
+        }
     }
 }
 
@@ -3628,6 +3630,43 @@
     ScheduleRefresh();
 }
 
+bool wxDataViewCtrlInternal::NodeAdded( const wxDataViewItem &parent, wxGtkTreeModelNode *parent_node )
+{
+    wxGtkTreeModelNode *node;
+    wxDataViewItemArray array;
+    m_wx_model->GetChildren(parent, array);
+    int nchildren = (int)array.size();
+
+    for(int i=0; i<nchildren; i++){
+        if (m_wx_model->IsContainer( array[i] )){
+            node = new wxGtkTreeModelNode( parent_node, array[i], this );
+            parent_node->InsertNode( node, i );
+        }
+        else{
+            node = NULL;
+            parent_node->InsertLeaf( array[i].GetID(), i );
+        }
+
+        GtkTreeIter iterc;
+        iterc.stamp = m_gtk_model->stamp;
+        iterc.user_data = array[i].GetID();
+
+        wxGtkTreePath pathc(wxgtk_tree_model_get_path(
+            GTK_TREE_MODEL(m_gtk_model), &iterc ));
+        gtk_tree_model_row_inserted(
+            GTK_TREE_MODEL(m_gtk_model), pathc, &iterc);
+
+        if (node)
+            NodeAdded(array[i], node);
+    }
+    if (IsSorted() || GetDataViewModel()->HasDefaultCompare())
+    {
+        gs_internal = this;
+        parent_node->GetChildren().Sort( &wxGtkTreeModelChildCmp );
+    }
+    return true;
+}
+
 bool wxDataViewCtrlInternal::ItemAdded( const wxDataViewItem &parent, const wxDataViewItem &item )
 {
     if (!m_wx_model->IsVirtualListModel())
