Index: include/wx/msw/tooltip.h
===================================================================
--- include/wx/msw/tooltip.h	(revision 76589)
+++ include/wx/msw/tooltip.h	(working copy)
@@ -69,6 +69,8 @@
     // makes sense to use it for tooltips associated with a single window only.
     void SetRect(const wxRect& rc);
 
+    // Called when TLW shown state is changed
+    static void UpdateToolTipCtrl();
 private:
     // Adds a window other than our main m_window to this tooltip.
     void DoAddHWND(WXHWND hWnd);
Index: src/msw/tooltip.cpp
===================================================================
--- src/msw/tooltip.cpp	(revision 76589)
+++ src/msw/tooltip.cpp	(working copy)
@@ -299,6 +299,27 @@
 }
 
 /* static */
+void wxToolTip::UpdateToolTipCtrl()
+{
+    wxToolInfo ti(NULL, 0, wxRect());
+    ti.uFlags = 0;
+    if (SendTooltipMessage(ms_hwndTT, TTM_GETCURRENTTOOL, &ti))
+    {
+        wxWindow* associatedWindow = wxFindWinFromHandle(ti.hwnd);
+        if (associatedWindow)
+        {
+            wxTopLevelWindowBase* frame = wxDynamicCast(wxGetTopLevelParent(associatedWindow), wxTopLevelWindowBase);
+            
+            if (   (!associatedWindow->IsShownOnScreen()) // is associated window or its parent hidden?
+                || (frame && frame->IsIconized()) ) // is frame iconized?
+            {
+                ::ShowWindow(ms_hwndTT, SW_HIDE); // Hide tooltip
+            }
+        }
+    }
+}
+
+/* static */
 void wxToolTip::RelayEvent(WXMSG *msg)
 {
     (void)SendTooltipMessage(GetToolTipCtrl(), TTM_RELAYEVENT, msg);
Index: src/msw/toplevel.cpp
===================================================================
--- src/msw/toplevel.cpp	(revision 76589)
+++ src/msw/toplevel.cpp	(working copy)
@@ -717,6 +717,9 @@
         // makes it not iconized and only minimizing it does make it iconized.
         m_iconized = nShowCmd == SW_MINIMIZE;
     }
+
+    // Don't leave a tooltip hanging around if TLW is hidden now
+    wxToolTip::UpdateToolTipCtrl();
 }
 
 void wxTopLevelWindowMSW::ShowWithoutActivating()
