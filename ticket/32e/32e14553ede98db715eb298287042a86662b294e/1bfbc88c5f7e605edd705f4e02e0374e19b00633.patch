Index: src/msw/ole/automtn.cpp
===================================================================
--- src/msw/ole/automtn.cpp	(revision 61835)
+++ src/msw/ole/automtn.cpp	(working copy)
@@ -611,6 +611,25 @@
         short dosTime = short(dosDateTime & 0xFFFF);
 
         DosDateTimeToVariantTime(dosDate, dosTime, & oleVariant.date);
+
+   /*
+        Commented out - I have no testbed for this
+
+        const wxDateTime::Tm tm(date.GetTm());
+
+        SYSTEMTIME st;
+        st.wYear = (WXWORD)tm.year;
+        st.wMonth = (WXWORD)(tm.mon - wxDateTime::Jan + 1);
+        st.wDay = tm.mday;
+
+        st.wDayOfWeek = 0;
+        st.wHour = tm.hour;
+        st.wMinute = tm.min;
+        st.wSecond = tm.sec;
+        st.wMilliseconds = tm.msec;
+
+        SystemTimeToVariantTime(&st, &oleVariant.date);
+   */
     }
 #endif
     else if (type == wxT("void*"))
@@ -689,13 +708,16 @@
     case VT_DATE:
         {
 #if wxUSE_DATETIME
-            unsigned short dosDate = 0;
-            unsigned short dosTime = 0;
-            VariantTimeToDosDateTime(oleVariant.date, & dosDate, & dosTime);
+            SYSTEMTIME st;
+            VariantTimeToSystemTime(oleVariant.date, &st);
 
-            long dosDateTime = (dosDate << 16) | dosTime;
             wxDateTime date;
-            date.SetFromDOS(dosDateTime);
+            date.Set(st.wDay,
+                     static_cast<wxDateTime::Month>(wxDateTime::Jan + st.wMonth - 1),
+                     st.wYear,
+                     st.wHour, 
+                     st.wMinute,
+                     st.wSecond);
             variant = date;
 #endif
             break;
