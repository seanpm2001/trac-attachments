Index: wxWindows/src/gtk/combobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/gtk/combobox.cpp,v
retrieving revision 1.91
diff -b -u -2 -r1.91 combobox.cpp
--- wxWindows/src/gtk/combobox.cpp	2003/02/18 09:48:55	1.91
+++ wxWindows/src/gtk/combobox.cpp	2003/02/25 16:28:02
@@ -37,9 +37,9 @@
 
 //-----------------------------------------------------------------------------
-// "select"
+// "select-child" - click/cursor get select-child, changed, select-child
 //-----------------------------------------------------------------------------
 
 static void
-gtk_combo_clicked_callback( GtkWidget *WXUNUSED(widget), wxComboBox *combo )
+gtk_combo_select_child_callback( GtkList *WXUNUSED(list), GtkWidget *WXUNUSED(widget), wxComboBox *combo )
 {
     if (g_isIdle) wxapp_install_idle_handler();
@@ -49,4 +49,7 @@
     if (g_blockEventsOnDrag) return;
 
+    if (combo->m_typedSelection)
+        return;
+
     if (combo->m_alreadySent)
     {
@@ -64,6 +67,4 @@
         gtk_list_unselect_item( GTK_LIST(list), combo->m_prevSelection );
     }
-    else if ((curSelection >= 0) && (combo->GetString(curSelection) == combo->GetValue()))
-        return;
 
     combo->m_prevSelection = curSelection;
@@ -78,5 +79,6 @@
 
 //-----------------------------------------------------------------------------
-//  "changed"
+//  "changed" - typing and list item matches get changed, select-child, changed
+//              if it doesn't match an item then just get a single changed
 //-----------------------------------------------------------------------------
 
@@ -88,8 +90,11 @@
     if (!combo->m_hasVMT) return;
 
-    // avoids double events when the GetValue = one of the selections
-    if (combo->m_alreadySent)
+    if (combo->m_typedSelection)
     {
-        combo->m_alreadySent = FALSE;
+        combo->m_typedSelection = FALSE;
+    }
+    else if ((combo->FindString(combo->GetValue()) != wxNOT_FOUND) && !combo->m_alreadySent)
+    {
+        combo->m_typedSelection = TRUE;
         return;
     }
@@ -119,4 +124,5 @@
 {
     m_alreadySent = FALSE;
+    m_typedSelection = FALSE;
     m_needParent = TRUE;
     m_acceptsFocus = TRUE;
@@ -146,8 +152,4 @@
     for (int i = 0; i < n; i++)
     {
-        /* don't send first event, which GTK sends aways when
-           inserting the first item */
-        m_alreadySent = TRUE;
-
         GtkWidget *list_item = gtk_list_item_new_with_label( wxGTK_CONV( choices[i] ) );
 
@@ -157,7 +159,4 @@
         gtk_container_add( GTK_CONTAINER(list), list_item );
 
-        gtk_signal_connect( GTK_OBJECT(list_item), "select",
-           GTK_SIGNAL_FUNC(gtk_combo_clicked_callback), (gpointer)this );
-
         gtk_widget_show( list_item );
     }
@@ -179,4 +178,7 @@
       GTK_SIGNAL_FUNC(gtk_text_changed_callback), (gpointer)this);
 
+    gtk_signal_connect( GTK_OBJECT(GTK_COMBO(m_widget)->list), "select-child",
+      GTK_SIGNAL_FUNC(gtk_combo_select_child_callback), (gpointer)this);
+
     wxSize size_best( DoGetBestSize() );
     wxSize new_size( size );
@@ -233,4 +235,6 @@
     wxCHECK_RET( m_widget != NULL, wxT("invalid combobox") );
 
+    DisableEvents();
+
     GtkWidget *list = GTK_COMBO(m_widget)->list;
 
@@ -239,7 +243,4 @@
     gtk_container_add( GTK_CONTAINER(list), list_item );
 
-    gtk_signal_connect( GTK_OBJECT(list_item), "select",
-      GTK_SIGNAL_FUNC(gtk_combo_clicked_callback), (gpointer)this );
-
     if (GTK_WIDGET_REALIZED(m_widget))
     {
@@ -251,4 +252,6 @@
 
     gtk_widget_show( list_item );
+
+    EnableEvents();
 }
 
@@ -324,4 +327,6 @@
     wxCHECK_RET( m_widget != NULL, wxT("invalid combobox") );
 
+    DisableEvents();
+
     GtkWidget *list = GTK_COMBO(m_widget)->list;
     gtk_list_clear_items( GTK_LIST(list), 0, Number() );
@@ -337,4 +342,6 @@
 
     m_clientDataList.Clear();
+
+    EnableEvents();
 }
 
@@ -343,4 +350,6 @@
     wxCHECK_RET( m_widget != NULL, wxT("invalid combobox") );
 
+    DisableEvents();
+
     GtkList *listbox = GTK_LIST( GTK_COMBO(m_widget)->list );
 
@@ -350,4 +359,5 @@
     {
         wxFAIL_MSG(wxT("wrong index"));
+        EnableEvents();
         return;
     }
@@ -370,4 +380,6 @@
         m_clientDataList.DeleteNode( node );
     }
+
+    EnableEvents();
 }
 
@@ -506,4 +518,23 @@
 }
 
+void wxComboBox::SetString(int n, const wxString &text)
+{
+    wxCHECK_RET( m_widget != NULL, wxT("invalid combobox") );
+
+    GtkWidget *list = GTK_COMBO(m_widget)->list;
+
+    GList *child = g_list_nth( GTK_LIST(list)->children, n );
+    if (child)
+    {
+        GtkBin *bin = GTK_BIN( child->data );
+        GtkLabel *label = GTK_LABEL( bin->child );
+        gtk_label_set_text(label, wxGTK_CONV(text));
+    }
+    else
+    {
+        wxFAIL_MSG( wxT("wxComboBox: wrong index") );
+    }
+}
+
 wxString wxComboBox::GetValue() const
 {
@@ -624,27 +655,12 @@
 {
     if ( event.GetKeyCode() == WXK_RETURN )
-    {
-        wxString value = GetValue();
-        int selection = GetSelection();
-
-        // note that gtk automatically selects an item if its in the list
-        // so you don't have to call FindString
-        if ((selection >= 0) && (GetString(selection) == value))
-        {
-            // make Enter generate "selected" event if it equals an item
-            wxCommandEvent event( wxEVT_COMMAND_COMBOBOX_SELECTED, GetId() );
-            event.SetInt( selection );
-            event.SetString( value );
-            event.SetEventObject( this );
-            GetEventHandler()->ProcessEvent( event );
-        }
-        else
         {
+        // note: gtk automatically selects an item if its in the list
             wxCommandEvent event(wxEVT_COMMAND_TEXT_ENTER, GetId());
-            event.SetString(value);
-            event.SetInt(selection);
+        event.SetString(GetValue());
+        event.SetInt(GetSelection());
             event.SetEventObject( this );
             GetEventHandler()->ProcessEvent( event );
-        }
+
         return;
     }
@@ -655,26 +671,16 @@
 void wxComboBox::DisableEvents()
 {
-    GtkList *list = GTK_LIST( GTK_COMBO(m_widget)->list );
-    GList *child = list->children;
-    while (child)
-    {
-        gtk_signal_disconnect_by_func( GTK_OBJECT(child->data),
-          GTK_SIGNAL_FUNC(gtk_combo_clicked_callback), (gpointer)this );
-
-        child = child->next;
-    }
+    gtk_signal_disconnect_by_func( GTK_OBJECT(GTK_COMBO(m_widget)->list),
+      GTK_SIGNAL_FUNC(gtk_combo_select_child_callback), (gpointer)this );
+    gtk_signal_disconnect_by_func( GTK_OBJECT(GTK_COMBO(m_widget)->entry),
+      GTK_SIGNAL_FUNC(gtk_text_changed_callback), (gpointer)this);
 }
 
 void wxComboBox::EnableEvents()
 {
-    GtkList *list = GTK_LIST( GTK_COMBO(m_widget)->list );
-    GList *child = list->children;
-    while (child)
-    {
-        gtk_signal_connect( GTK_OBJECT(child->data), "select",
-          GTK_SIGNAL_FUNC(gtk_combo_clicked_callback), (gpointer)this );
-
-        child = child->next;
-    }
+    gtk_signal_connect( GTK_OBJECT(GTK_COMBO(m_widget)->list), "select-child",
+      GTK_SIGNAL_FUNC(gtk_combo_select_child_callback), (gpointer)this);
+    gtk_signal_connect( GTK_OBJECT(GTK_COMBO(m_widget)->entry), "changed",
+      GTK_SIGNAL_FUNC(gtk_text_changed_callback), (gpointer)this);
 }
 
Index: wxWindows/include/wx/gtk/combobox.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/gtk/combobox.h,v
retrieving revision 1.31
diff -b -u -2 -r1.31 combobox.h
--- wxWindows/include/wx/gtk/combobox.h	2002/12/04 13:58:39	1.31
+++ wxWindows/include/wx/gtk/combobox.h	2003/02/25 16:28:02
@@ -91,4 +91,5 @@
     void SetSelection( int n );
     void SetStringSelection( const wxString &string );
+    void SetString(int n, const wxString &text);
 
     wxString GetValue() const;
@@ -115,4 +116,5 @@
   
     bool     m_alreadySent;
+    bool     m_typedSelection;
     wxList   m_clientDataList;
     wxList   m_clientObjectList;
Index: wxWindows/docs/latex/wx/combobox.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/docs/latex/wx/combobox.tex,v
retrieving revision 1.19
diff -b -u -2 -r1.19 combobox.tex
--- wxWindows/docs/latex/wx/combobox.tex	2003/01/01 22:08:11	1.19
+++ wxWindows/docs/latex/wx/combobox.tex	2003/02/25 16:28:02
@@ -39,4 +39,6 @@
 \twocolitem{{\bf EVT\_COMBOBOX(id, func)}}{Process a wxEVT\_COMMAND\_COMBOBOX\_SELECTED event,
 when an item on the list is selected.}
+\twocolitem{{\bf EVT\_TEXT\_ENTER(id, func)}}{Process a wxEVT\_COMMAND\_TEXT\_ENTER event,
+when return is pressed in the combobox.}
 \twocolitem{{\bf EVT\_TEXT(id, func)}}{Process a wxEVT\_COMMAND\_TEXT\_UPDATED event,
 when the combobox text changes.}
Index: wxWindows/samples/widgets/combobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/samples/widgets/combobox.cpp,v
retrieving revision 1.10
diff -b -u -2 -r1.10 combobox.cpp
--- wxWindows/samples/widgets/combobox.cpp	2003/01/07 10:21:52	1.10
+++ wxWindows/samples/widgets/combobox.cpp	2003/02/25 16:28:03
@@ -167,4 +167,5 @@
 
     EVT_COMBOBOX(ComboPage_Combo, ComboboxWidgetsPage::OnComboBox)
+    EVT_TEXT_ENTER(ComboPage_Combo, ComboboxWidgetsPage::OnComboText)
     EVT_TEXT(ComboPage_Combo, ComboboxWidgetsPage::OnComboText)
 
@@ -273,7 +274,8 @@
     // right pane
     wxSizer *sizerRight = new wxBoxSizer(wxVERTICAL);
-    m_combobox = new wxComboBox(this, ComboPage_Combo, _T(""),
+    wxString items[5] = {"these","are","some","initial","items"};
+    m_combobox = new wxComboBox(this, ComboPage_Combo, _T("Initial text"),
                                 wxDefaultPosition, wxDefaultSize,
-                                0, NULL,
+                                5, items,
                                 0);
     sizerRight->Add(m_combobox, 1, wxGROW | wxALL, 5);
@@ -376,9 +378,5 @@
     if ( sel != -1 )
     {
-#ifndef __WXGTK__
         m_combobox->SetString(sel, m_textChange->GetValue());
-#else
-        wxLogMessage(_T("Not implemented in wxGTK"));
-#endif
     }
 }
@@ -490,4 +488,7 @@
                   _T("event and combobox values should be the same") );
 
+    if (event.GetEventType() == wxEVT_COMMAND_TEXT_ENTER)
+        wxLogMessage(_T("Combobox enter pressed (now '%s')"), s.c_str());
+    else
     wxLogMessage(_T("Combobox text changed (now '%s')"), s.c_str());
 }

 	  	 
