diff -bu1 -r wxWindows/contrib/src/deprecated/doslex.c wxWin/contrib/src/deprecated/doslex.c
--- wxWindows/contrib/src/deprecated/doslex.c	2003-03-30 22:47:55.000000000 +0200
+++ wxWin/contrib/src/deprecated/doslex.c	2004-01-02 19:11:01.000000000 +0100
@@ -14,5 +14,5 @@
 #ifdef c_plusplus
-#ifndef __cplusplus
-#define __cplusplus
-#endif
+  #ifndef __cplusplus
+    #define __cplusplus
+  #endif
 #endif
@@ -22,26 +22,26 @@
 
-#include <stdlib.h>
+  #include <stdlib.h>
 
-#ifdef __SALFORDC__
-#include <io.h>
-#include <clib.h>
-#else
-#include <osfcn.h>
-#endif
+  #ifdef __SALFORDC__
+    #include <io.h>
+    #include <clib.h>
+  #else
+    #include <osfcn.h>
+  #endif
+
+  #ifdef __VISAGECPP__
+    #include <io.h>
+  #endif
+
+  #ifdef __cplusplus
+    static int yyinput()
+  #else
+    static int input()
+  #endif
 
-#ifdef __VISAGECPP__
-#include <io.h>
-#endif
+  /* use prototypes in function declarations */
+  #define YY_USE_PROTOS
 
-#ifdef __cplusplus
-static int yyinput()
-#else
-static int input()
-#endif
-
-/* use prototypes in function declarations */
-#define YY_USE_PROTOS
-
-/* the "const" storage-class-modifier is valid */
-#define YY_USE_CONST
+  /* the "const" storage-class-modifier is valid */
+  #define YY_USE_CONST
 
@@ -49,14 +49,25 @@
 
-#ifdef __STDC__
-
-#ifdef __GNUC__
-#include <stddef.h>
-#else
-#include <stdlib.h>
-#endif	/* __GNUC__ */
+  #ifdef __STDC__
 
-#define YY_USE_PROTOS
-#define YY_USE_CONST
+    #ifdef __GNUC__
+      #include <stddef.h>
+    #else
+      #include <stdlib.h>
+    #endif  /* __GNUC__ */
+
+    #define YY_USE_PROTOS
+    #define YY_USE_CONST
+
+  #endif  /* __STDC__ */
+
+  #ifdef __BORLANDC__
+    #include <io.h>
+    #define YY_USE_PROTOS
+    #define YY_USE_CONST
+  #endif
+
+  #ifdef __MINGW32__
+    #include <io.h>
+  #endif
 
-#endif	/* __STDC__ */
 #endif	/* ! __cplusplus */
@@ -65,3 +76,3 @@
 #ifdef __TURBOC__
-#define YY_USE_CONST
+  #define YY_USE_CONST
 #endif
@@ -70,3 +81,3 @@
 #ifndef YY_USE_CONST
-#define const
+  #define const
 #endif
@@ -75,6 +86,6 @@
 #ifdef YY_USE_PROTOS
-#define YY_PROTO(proto) proto
+  #define YY_PROTO(proto) proto
 #else
-#define YY_PROTO(proto) ()
-/* we can't get here if it's an ANSI C compiler, or a C++ compiler,
+  #define YY_PROTO(proto) ()
+  /* we can't get here if it's an ANSI C compiler, or a C++ compiler,
  * so it's got to be a K&R compiler, and therefore there's no standard
@@ -82,7 +93,6 @@
  */
-/*
-char *malloc();
-int free();
-*/
-
+  /*
+   char *malloc();
+   int free();
+  */
 #endif
@@ -92,5 +102,6 @@
 #ifndef YY_READ_BUF_SIZE
-#define YY_READ_BUF_SIZE 8192
+  #define YY_READ_BUF_SIZE 8192
 #endif
 
+
 /* returned upon end-of-file */
@@ -98,2 +109,3 @@
 
+
 /* copy whatever the last rule matched to the standard output */
@@ -106,2 +118,3 @@
 
+
 /* gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
@@ -114,2 +127,3 @@
 
+
 /* no semi-colon after return; correct usage is to write "yyterminate();" -
@@ -120,2 +134,3 @@
 
+
 /* report a fatal error */
@@ -137,3 +152,3 @@
 #if !defined(__VISAGECPP__)
-#define YY_FATAL_ERROR(msg) \
+  #define YY_FATAL_ERROR(msg) \
 	do \
@@ -146,5 +161,5 @@
 #else
-/* suppress expression always false warning */
-int os2var = 0;
-#define YY_FATAL_ERROR(msg) \
+  /* suppress expression always false warning */
+  int os2var = 0;
+  #define YY_FATAL_ERROR(msg) \
 	do \
@@ -158,2 +173,3 @@
 
+
 /* default yywrap function - always treat EOF as an EOF */
@@ -173,3 +189,3 @@
 #if !defined(__VISAGECPP__)
-#define YY_NEW_FILE \
+  #define YY_NEW_FILE \
 	do \
@@ -181,3 +197,3 @@
 #else
-#define YY_NEW_FILE \
+  #define YY_NEW_FILE \
 	do \
@@ -190,2 +206,3 @@
 
+
 /* default declaration of generated scanner - a define so the user can
@@ -195,4 +212,2 @@
 
-/* code executed at the end of each rule */
-#define YY_BREAK break;
 
@@ -201,3 +216,3 @@
 #ifndef YY_BUF_SIZE
-#define YY_BUF_SIZE (YY_READ_BUF_SIZE * 2) /* size of default input buffer */
+  #define YY_BUF_SIZE (YY_READ_BUF_SIZE * 2) /* size of default input buffer */
 #endif
@@ -207,5 +222,5 @@
 #define YY_CHAR unsigned char
-# line 1 "lexer.l"
+// # line 1 "lexer.l"
 #define INITIAL 0
-# line 9 "lexer.l"
+// # line 9 "lexer.l"
 /*
@@ -222,3 +237,3 @@
 #if defined(FLEX_SCANNER) && defined(_LINUX)
-#define PROIO_input my_input
+  #define PROIO_input my_input
 #endif
@@ -228,8 +243,7 @@
 #ifdef wx_x
-extern char *malloc();
+  extern char *malloc();
 #endif
-#define Return(x) return x;
 
 #if defined(VMS) && ( __VMS_VER < 70000000 )
-#define strdup(s) (strcpy((char *)malloc(strlen(s)+1), s));
+  #define strdup(s) (strcpy((char *)malloc(strlen(s)+1), s));
 #endif
@@ -242,9 +256,14 @@
 static int my_input(void);
-static int my_unput(char);
+#ifndef FLEX_SCANNER
+  static int my_unput(char);
+#endif
 
 #ifdef FLEX_SCANNER
-#undef YY_INPUT
-# define YY_INPUT(buf,result,max_size) \
+    #undef YY_INPUT
+    #define YY_INPUT(buf,result,max_size) \
    if (lex_read_from_string) \
-   {  int c = my_input(); result = (c == 0) ? YY_NULL : ((buf)[0]=(c), 1); } \
+        { \
+            int c = my_input(); \
+            result = (c == 0) ? YY_NULL : ((buf)[0]=(c), 1); \
+        } \
    else \
@@ -253,9 +272,9 @@
 #else
-# ifndef unput
-#  undef unput
-# endif
-# define unput(_c) my_unput(_c)
+    #ifndef unput
+        #undef unput
+    #endif
+    #define unput(_c) my_unput(_c)
 #endif
 
-# line 58 "lexer.l"
+// # line 58 "lexer.l"
 
@@ -264,2 +283,3 @@
  */
+
 #define YY_DO_BEFORE_ACTION \
@@ -277,3 +297,3 @@
 #if !defined(__VISAGECPP__)
-#define yyless(n) \
+    #define yyless(n) \
 	do \
@@ -287,3 +307,3 @@
 #else
-#define yyless(n) \
+    #define yyless(n) \
 	do \
@@ -301,5 +321,4 @@
 
-
 struct yy_buffer_state
-    {
+{
     FILE *yy_input_file;
@@ -316,3 +335,5 @@
     int yy_eof_status;		/* whether we've seen an EOF on this buffer */
+
 #define EOF_NOT_SEEN 0
+
     /* "pending" happens when the EOF has been seen but there's still
@@ -320,5 +341,6 @@
      */
+
 #define EOF_PENDING 1
 #define EOF_DONE 2
-    };
+};
 
@@ -341,3 +363,3 @@
 #ifndef YY_USER_ACTION
-#define YY_USER_ACTION
+    #define YY_USER_ACTION
 #endif
@@ -345,3 +367,3 @@
 #ifndef YY_USER_INIT
-#define YY_USER_INIT
+    #define YY_USER_INIT
 #endif
@@ -482,5 +504,5 @@
 #ifdef __cplusplus
-static int yyinput YY_PROTO(( void ));
+  static int yyinput YY_PROTO(( void ));
 #else
-static int input YY_PROTO(( void ));
+  static int input YY_PROTO(( void ));
 #endif
@@ -572,2 +594,3 @@
 	    case 0: /* must backtrack */
+        {
 	    /* undo the effects of YY_DO_BEFORE_ACTION */
@@ -577,89 +600,116 @@
 	    goto yy_find_action;
+        }
+
+        case 1:
+        {
+            yylval.s = strdup((const char*) yytext);
+            return INTEGER;
+        }
+
+        case 2:
+        {
+            return EXP;
+        }
+
+        case 3:
+        {
+            yylval.s = strdup((const char*) yytext);
+            return WORD;
+        }
 
-case 1:
-# line 60 "lexer.l"
-{yylval.s = strdup((const char*) yytext); Return(INTEGER);}
-	YY_BREAK
-case 2:
-# line 62 "lexer.l"
-Return(EXP);
-	YY_BREAK
-case 3:
-# line 64 "lexer.l"
-{yylval.s = strdup((const char*) yytext); Return(WORD);}
-	YY_BREAK
-case 4:
-# line 66 "lexer.l"
-{int len = strlen((const char*) yytext);
+        case 4:
+        {
+            int len = strlen((const char*) yytext);
                                    yytext[len-1] = 0;
                                    yylval.s = strdup((const char*) (yytext+1));
-                                   Return(WORD);}
-	YY_BREAK
-case 5:
-# line 71 "lexer.l"
-{yylval.s = strdup((const char*) yytext); Return(STRING);}
-	YY_BREAK
-case 6:
-# line 73 "lexer.l"
-Return(OPEN);
-	YY_BREAK
-case 7:
-# line 75 "lexer.l"
-Return(CLOSE);
-	YY_BREAK
-case 8:
-# line 77 "lexer.l"
-Return(COMMA);
-	YY_BREAK
-case 9:
-# line 79 "lexer.l"
-Return(OPEN_SQUARE);
-	YY_BREAK
-case 10:
-# line 81 "lexer.l"
-Return(CLOSE_SQUARE);
-	YY_BREAK
-case 11:
-# line 83 "lexer.l"
-Return(EQUALS);
-	YY_BREAK
-case 12:
-# line 85 "lexer.l"
-Return(PERIOD);
-	YY_BREAK
-case 13:
-# line 87 "lexer.l"
-;
-	YY_BREAK
-case 14:
-# line 89 "lexer.l"
-;
-	YY_BREAK
-case 15:
-# line 91 "lexer.l"
-{       loop:
-#ifdef __cplusplus
+            return WORD;
+        }
+
+        case 5:
+        {
+            yylval.s = strdup((const char*) yytext);
+            return STRING;
+        }
+
+        case 6:
+        {
+            return OPEN;
+        }
+
+        case 7:
+        {
+            return CLOSE;
+        }
+
+        case 8:
+        {
+            return COMMA;
+        }
+
+        case 9:
+        {
+            return OPEN_SQUARE;
+        }
+
+        case 10:
+        {
+            return CLOSE_SQUARE;
+        }
+
+        case 11:
+        {
+            return EQUALS;
+        }
+
+        case 12:
+        {
+            return PERIOD;
+        }
+
+        case 13:
+        {
+            break;
+        }
+
+        case 14:
+        {
+            break;
+        }
+
+        case 15:
+        {
+          loop:
+            #ifdef __cplusplus
                           while (yyinput() != '*');
                           switch (yyinput())
-#else
+            #else
                           while (input() != '*');
                           switch (input())
-#endif
+            #endif
+              {
+                  case '/':
+                      break;
+                  case '*':
+                      unput('*');
+                  default:
+                      goto loop;
+              }
+            break;
+        }
+
+        case 16:
                                   {
-                                  case '/': break;
-                                  case '*': unput('*');
-                                  default: goto loop;
+            return ERROR;
                                   }
+
+        case 17:
+        {
+            ECHO;
+            break;
                           }
-	YY_BREAK
-case 16:
-# line 106 "lexer.l"
-Return(ERROR);
-	YY_BREAK
-case 17:
-# line 108 "lexer.l"
-ECHO;
-	YY_BREAK
-case YY_STATE_EOF(INITIAL):
+
+        case YY_STATE_EOF(INITIAL):
+        {
     yyterminate();
+        }
 
@@ -708,3 +758,2 @@
 			}
-
 		    else
@@ -716,3 +765,2 @@
 		    }
-
 		else switch ( yy_get_next_buffer() )
@@ -738,3 +786,2 @@
 			    }
-
 			else
@@ -757,4 +804,3 @@
 		    case EOB_ACT_LAST_MATCH:
-			yy_c_buf_p =
-			    &yy_current_buffer->yy_ch_buf[yy_n_chars];
+                    yy_c_buf_p = &yy_current_buffer->yy_ch_buf[yy_n_chars];
 
@@ -773,6 +819,6 @@
 #endif
-		YY_FATAL_ERROR(
-			"fatal flex scanner internal error--no action found" );
+            YY_FATAL_ERROR("fatal flex scanner internal error--no action found" );
 	    }
 	}
+
 #if defined(__VISAGECPP__)
@@ -796,4 +842,3 @@
 static int yy_get_next_buffer()
-
-    {
+{
     register YY_CHAR *dest = yy_current_buffer->yy_ch_buf;
@@ -867,3 +912,3 @@
     return ( ret_val );
-    }
+}
 
@@ -877,4 +922,3 @@
 static yy_state_type yy_get_previous_state()
-
-    {
+{
     register yy_state_type yy_current_state;
@@ -902,3 +946,3 @@
     return ( yy_current_state );
-    }
+}
 
@@ -917,4 +961,3 @@
 #endif
-
-    {
+{
     register int yy_is_jam;
@@ -938,3 +981,3 @@
     return ( yy_is_jam ? 0 : yy_current_state );
-    }
+}
 
@@ -948,4 +991,3 @@
 #endif
-
-    {
+{
     register YY_CHAR *yy_cp = yy_c_buf_p;
@@ -983,3 +1025,3 @@
     YY_DO_BEFORE_ACTION; /* set up yytext again */
-    }
+}
 
@@ -991,4 +1033,3 @@
 #endif
-
-    {
+{
     int c;
@@ -1005,5 +1046,5 @@
 	if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
-	    /* this was really a NUL */
+        { /* this was really a NUL */
 	    *yy_c_buf_p = '\0';
-
+        }
 	else
@@ -1022,12 +1063,10 @@
 			}
-
 		    YY_NEW_FILE;
 
-#ifdef __cplusplus
+                    #ifdef __cplusplus
 		    return ( yyinput() );
-#else
+                    #else
 		    return ( input() );
-#endif
+                    #endif
 		    }
-		    break;
 
@@ -1038,7 +1077,7 @@
 		case EOB_ACT_LAST_MATCH:
-#ifdef __cplusplus
+                    #ifdef __cplusplus
 		    YY_FATAL_ERROR( "unexpected last match in yyinput()" );
-#else
+                    #else
 		    YY_FATAL_ERROR( "unexpected last match in input()" );
-#endif
+                    #endif
 		}
@@ -1051,3 +1090,3 @@
     return ( c );
-    }
+}
 
@@ -1060,7 +1099,6 @@
 #endif
-
-    {
+{
     yy_init_buffer( yy_current_buffer, input_file );
     yy_load_buffer_state();
-    }
+}
 
@@ -1073,4 +1111,3 @@
 #endif
-
-    {
+{
     if ( yy_current_buffer == new_buffer )
@@ -1095,3 +1132,3 @@
     yy_did_buffer_switch_on_eof = 1;
-    }
+}
 
@@ -1103,4 +1140,3 @@
 #endif
-
-    {
+{
     yy_n_chars = yy_current_buffer->yy_n_chars;
@@ -1109,3 +1145,3 @@
     yy_hold_char = *yy_c_buf_p;
-    }
+}
 
@@ -1119,4 +1155,3 @@
 #endif
-
-    {
+{
     YY_BUFFER_STATE b;
@@ -1141,3 +1176,3 @@
     return ( b );
-    }
+}
 
@@ -1150,4 +1185,3 @@
 #endif
-
-    {
+{
     if ( b == yy_current_buffer )
@@ -1157,3 +1191,3 @@
     free( (char *) b );
-    }
+}
 
@@ -1167,4 +1201,3 @@
 #endif
-
-    {
+{
     b->yy_input_file = file;
@@ -1188,4 +1221,4 @@
     b->yy_eof_status = EOF_NOT_SEEN;
-    }
-# line 108 "lexer.l"
+}
+// # line 108 "lexer.l"
 
@@ -1194,23 +1227,28 @@
 #ifdef FLEX_SCANNER
-static int lex_input() {
+    static int lex_input()
+    {
   return input();
-}
+    }
 #else	/* BSD/AT&T lex */
-#ifndef input
-# error "Sorry, but need either flex or AT&T lex"
-#endif
-static int lex_input() {
+    #ifndef input
+        #error "Sorry, but need either flex or AT&T lex"
+    #endif
+    static int lex_input() {
   return input();
-}
-/* # undef unput
-# define unput(_c) my_unput(_c)
-*/
-
-# undef input
-# define input() my_input()
-static int my_unput(char c)
-{
-  if (lex_read_from_string) {
+    }
+
+    /*
+    # undef unput
+    # define unput(_c) my_unput(_c)
+    */
+
+    # undef input
+    # define input() my_input()
+    static int my_unput(char c)
+    {
+        if (lex_read_from_string)
+        {
     /* Make sure we have something */
-    if (lex_string_ptr) {
+            if (lex_string_ptr)
+            {
       if (c == '\n') yylineno--;
@@ -1218,9 +1256,10 @@
     }
-  } else {
+        }
+        else
+        {
     yytchar= (c);if(yytchar=='\n')yylineno--;*yysptr++=yytchar;
-/*    unput(c); Causes infinite recursion! */
+            /* unput(c); Causes infinite recursion! */
   }
   return c;
-}
-
+    }
 #endif
@@ -1256,6 +1295,10 @@
 {
-  if (lex_read_from_string) {
+    if (lex_read_from_string)
+    {
     if (lex_string_ptr == lex_buffer_length)
+        {
       return 0;
-    else {
+        }
+        else
+        {
       char c = lex_buffer[lex_string_ptr++];
@@ -1266,3 +1309,5 @@
     }
-  } else {
+    }
+    else
+    {
     return lex_input();
@@ -1276 +1321,2 @@
 }
+
diff -bu1 -r wxWindows/contrib/src/deprecated/dosyacc.c wxWin/contrib/src/deprecated/dosyacc.c
--- wxWindows/contrib/src/deprecated/dosyacc.c	2003-08-03 20:11:45.000000000 +0200
+++ wxWin/contrib/src/deprecated/dosyacc.c	2004-01-02 18:42:47.000000000 +0100
@@ -7,3 +7,3 @@
 
-#ifndef lint
+#if !defined(lint) && 0
 static char yysccsid[] = "@(#)yaccpar     1.7 (Berkeley) 09/09/90";
@@ -11,3 +11,3 @@
 #define YYBYACC 1
-#line 2 "parser.y"
+// #line 2 "parser.y"
 #include "string.h"
@@ -47,3 +47,3 @@
 #endif
-#line 36 "parser.y"
+// #line 36 "parser.y"
 typedef union {
@@ -52,3 +52,3 @@
 } YYSTYPE;
-#line 44 "y_tab.c"
+// #line 44 "y_tab.c"
 #define INTEGER 1
@@ -215,3 +215,3 @@
 #define yystacksize YYSTACKSIZE
-#line 118 "parser.y"
+// #line 118 "parser.y"
 
@@ -261,3 +261,3 @@
    
-#line 247 "y_tab.c"
+// #line 247 "y_tab.c"
 #define YYABORT goto yyabort
@@ -307,3 +307,4 @@
     }
-    if ((yyn = yysindex[yystate]) && (yyn += yychar) >= 0 &&
+    yyn = yysindex[yystate];
+    if ((yyn) && (yyn += yychar) >= 0 &&
             yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
@@ -325,3 +326,4 @@
     }
-    if ((yyn = yyrindex[yystate]) && (yyn += yychar) >= 0 &&
+    yyn = yyrindex[yystate];
+    if ((yyn) && (yyn += yychar) >= 0 &&
             yyn <= YYTABLESIZE && yycheck[yyn] == yychar)
@@ -334,4 +336,4 @@
     goto yynewerror;
-#endif
 yynewerror:
+#endif
     yyerror("syntax error");
@@ -339,4 +341,4 @@
     goto yyerrlab;
-#endif
 yyerrlab:
+#endif
     ++yynerrs;
@@ -348,3 +350,4 @@
         {
-            if ((yyn = yysindex[*yyssp]) && (yyn += YYERRCODE) >= 0 &&
+            yyn = yysindex[*yyssp];
+            if ((yyn) && (yyn += YYERRCODE) >= 0 &&
                     yyn <= YYTABLESIZE && yycheck[yyn] == YYERRCODE)
@@ -404,3 +407,3 @@
 case 3:
-#line 68 "parser.y"
+// #line 68 "parser.y"
 {process_command(proio_cons(wxmake_word(yyvsp[-1].s), NULL)); free(yyvsp[-1].s);}
@@ -408,3 +411,3 @@
 case 4:
-#line 70 "parser.y"
+// #line 70 "parser.y"
 {process_command(yyvsp[-1].s);}
@@ -412,3 +415,3 @@
 case 5:
-#line 72 "parser.y"
+// #line 72 "parser.y"
 {syntax_error("Unrecognized command.");}
@@ -416,3 +419,3 @@
 case 6:
-#line 76 "parser.y"
+// #line 76 "parser.y"
 {yyval.s = proio_cons(wxmake_word(yyvsp[-3].s), yyvsp[-1].s); free(yyvsp[-3].s);}
@@ -420,3 +423,3 @@
 case 7:
-#line 78 "parser.y"
+// #line 78 "parser.y"
 {yyval.s = proio_cons(NULL, NULL);}
@@ -424,3 +427,3 @@
 case 8:
-#line 80 "parser.y"
+// #line 80 "parser.y"
 {yyval.s = yyvsp[-1].s; }
@@ -428,3 +431,3 @@
 case 9:
-#line 84 "parser.y"
+// #line 84 "parser.y"
 {yyval.s = NULL;}
@@ -432,3 +435,3 @@
 case 10:
-#line 86 "parser.y"
+// #line 86 "parser.y"
 {yyval.s = proio_cons(yyvsp[0].s, NULL);}
@@ -436,3 +439,3 @@
 case 11:
-#line 89 "parser.y"
+// #line 89 "parser.y"
 {yyval.s = proio_cons(yyvsp[-2].s, yyvsp[0].s);}
@@ -440,3 +443,3 @@
 case 12:
-#line 93 "parser.y"
+// #line 93 "parser.y"
 {yyval.s = proio_cons(wxmake_word("="), proio_cons(wxmake_word(yyvsp[-2].s), proio_cons(yyvsp[0].s, NULL)));
@@ -445,3 +448,3 @@
 case 13:
-#line 96 "parser.y"
+// #line 96 "parser.y"
 {yyval.s = yyvsp[0].s; }
@@ -449,3 +452,3 @@
 case 14:
-#line 99 "parser.y"
+// #line 99 "parser.y"
 {yyval.s = wxmake_word(yyvsp[0].s); free(yyvsp[0].s);}
@@ -453,3 +456,3 @@
 case 15:
-#line 101 "parser.y"
+// #line 101 "parser.y"
 {yyval.s = wxmake_string(yyvsp[0].s); free(yyvsp[0].s);}
@@ -457,3 +460,3 @@
 case 16:
-#line 103 "parser.y"
+// #line 103 "parser.y"
 {yyval.s = wxmake_integer(yyvsp[0].s); free(yyvsp[0].s);}
@@ -461,3 +464,3 @@
 case 17:
-#line 105 "parser.y"
+// #line 105 "parser.y"
 {yyval.s = wxmake_real(yyvsp[-2].s, yyvsp[0].s); free(yyvsp[-2].s); free(yyvsp[0].s); }
@@ -465,3 +468,3 @@
 case 18:
-#line 107 "parser.y"
+// #line 107 "parser.y"
 {yyval.s = wxmake_exp(yyvsp[-2].s, yyvsp[0].s); free(yyvsp[-2].s); free(yyvsp[0].s); }
@@ -469,3 +472,3 @@
 case 19:
-#line 110 "parser.y"
+// #line 110 "parser.y"
 {yyval.s = wxmake_exp2(yyvsp[-4].s, yyvsp[-2].s, yyvsp[0].s); free(yyvsp[-4].s); free(yyvsp[-2].s);
@@ -474,6 +477,6 @@
 case 20:
-#line 114 "parser.y"
+// #line 114 "parser.y"
 {yyval.s = yyvsp[0].s;}
 break;
-#line 461 "y_tab.c"
+// #line 461 "y_tab.c"
     }
@@ -510,3 +513,4 @@
     }
-    if ((yyn = yygindex[yym]) && (yyn += yystate) >= 0 &&
+    yyn = yygindex[yym];
+    if ((yyn) && (yyn += yystate) >= 0 &&
             yyn <= YYTABLESIZE && yycheck[yyn] == yystate)

 	  	 
