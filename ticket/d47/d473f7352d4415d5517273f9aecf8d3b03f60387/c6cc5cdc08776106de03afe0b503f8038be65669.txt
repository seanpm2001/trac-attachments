Index: include/wx/univ/renderer.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/univ/renderer.h,v
retrieving revision 1.16
diff -r1.16 renderer.h
206c206,207
<                                    int flags = 0) = 0;
---
>                                    int flags = 0,
>                                    long style = 0) = 0;
617,618c618,620
<                                    int flags = 0)
<         { m_renderer->DrawToolBarButton(dc, label, bitmap, rect, flags); }
---
>                                    int flags = 0,
>                                    long style = 0)
>         { m_renderer->DrawToolBarButton(dc, label, bitmap, rect, flags, style); }

Index: samples/toolbar/toolbar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/samples/toolbar/toolbar.cpp,v
retrieving revision 1.27
diff -r1.27 toolbar.cpp
302c302
< #if (wxUSE_TOOLBAR_NATIVE && !USE_GENERIC_TBAR) && !defined(__WXMOTIF__) && !defined(__WXX11__) && !defined(__WXMAC__)
---
> #if (wxUSE_TOOLBAR_NATIVE && !USE_GENERIC_TBAR) && !defined(__WXMOTIF__) && !defined(__WXX11__) && !defined(__WXMAC__) || defined(__WXUNIVERSAL__)

Index: src/univ/toolbar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/univ/toolbar.cpp,v
retrieving revision 1.19.2.3
diff -r1.19.2.3 toolbar.cpp
74a75,92
>         m_width =
>         m_height = 0;
> 
>         // not pressed yet
>         m_isInverted = FALSE;
>         
>         // mouse not here yet
>         m_underMouse = FALSE;
>     }
> 
>     wxToolBarTool(wxToolBar *tbar, wxControl *control)
>         : wxToolBarToolBase(tbar, control)
>     {
>         // no position yet
>         m_x =
>         m_y = -1;
>         m_width =
>         m_height = 0;
99,101c117,121
<     // the tool position (the size is known by the toolbar itself)
<     int m_x,
<         m_y;
---
>     // the tool position (for controls)
>     wxCoord m_x;
>     wxCoord m_y;
>     wxCoord m_width;
>     wxCoord m_height;
333,335c353
<     wxFAIL_MSG( wxT("Toolbar doesn't support controls yet (TODO)") );
< 
<     return NULL;
---
>     return new wxToolBarTool(this, control);
361,362c379,393
<         rect.width = m_defaultWidth;
<         rect.height = tool->IsSeparator() ? m_widthSeparator : m_defaultHeight;
---
> 		if (tool->IsButton())
>         {
>             rect.width = m_defaultWidth;
>             rect.height = m_defaultHeight;
>         }
>         else if (tool->IsSeparator())
>         {
>             rect.width = m_defaultWidth;
>             rect.height = m_widthSeparator;
>         }
>         else // control
>         {
>             rect.width = tool->m_width;
>             rect.height = tool->m_height;
>         }
366,367c397,411
<         rect.width = tool->IsSeparator() ? m_widthSeparator : m_defaultWidth;
<         rect.height = m_defaultHeight;
---
>         if (tool->IsButton())
>         {
>             rect.width = m_defaultWidth;
>             rect.height = m_defaultHeight;
>         }
>         else if (tool->IsSeparator())
>         {
>             rect.width = m_widthSeparator;
>             rect.height = m_defaultHeight;
>         }
>         else // control
>         {
>             rect.width = tool->m_width;
>             rect.height = tool->m_height;
>         }
413c457,475
<         *pCur += ( tool->IsSeparator() ? m_widthSeparator : (widthTool+2) ) + margin;
---
>         if (tool->IsButton())
>         {
>             *pCur += widthTool;
>         }
>         else if (tool->IsSeparator())
>         {
>             *pCur += m_widthSeparator;
>         }
>         else if (!IsVertical()) // horizontal control
>         {
>             wxControl *control = tool->GetControl();
>             wxSize size = control->GetSize();
>             tool->m_y += (m_defaultHeight - size.y)/2;
>             tool->m_width = size.x;
>             tool->m_height = size.y;
> 
>             *pCur += tool->m_width;
>         }
>         *pCur += margin;
565c627,635
<         rend->DrawToolBarButton(dc, label, bitmap, rectTool, flags);
---
>         if ( !tool->IsControl() )
>         {
>             rend->DrawToolBarButton(dc, label, bitmap, rectTool, flags, tool->GetStyle());
>         }
>         else // control
>         {
>             wxControl *control = tool->GetControl();
>             control->Move(tool->m_x, tool->m_y);
>         }

Index: src/univ/themes/gtk.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/univ/themes/gtk.cpp,v
retrieving revision 1.29.2.1
diff -r1.29.2.1 gtk.cpp
168c168,169
<                                    int flags);
---
>                                    int flags = 0,
>                                    long style = 0);
1624c1625,1626
<                                       int flags)
---
>                                       int flags,
>                                       long style)

Index: src/univ/themes/win32.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/univ/themes/win32.cpp,v
retrieving revision 1.53
diff -r1.53 win32.cpp
238c238,239
<                                    int flags);
---
>                                    int flags = 0,
>                                    long style = 0);
2400c2401,2402
<                                         int flags)
---
>                                         int flags,
>                                         long style)
2402c2404
<     if ( !label.empty() || bitmap.Ok() )
---
>     if (style == wxTOOL_STYLE_BUTTON)
2418c2420
<     else // a separator
---
>     else if (style == wxTOOL_STYLE_SEPARATOR)
2429a2432
>     // don't draw wxTOOL_STYLE_CONTROL

 	  	 
