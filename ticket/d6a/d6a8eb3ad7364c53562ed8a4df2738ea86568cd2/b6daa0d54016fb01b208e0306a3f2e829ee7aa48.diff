--- ./button.cpp	2003-06-07 10:58:14.000000000 -0400
+++ /cygdrive/c/wxWindows-2.4.2/src/msw/button.cpp	2005-04-15 18:34:43.750456700 -0400
@@ -410,13 +410,31 @@
 static void DrawButtonText(HDC hdc,
                            RECT *pRect,
                            const wxString& text,
-                           COLORREF col)
+                           COLORREF col,
+                           bool bMultiline
+                           )
 {
     COLORREF colOld = SetTextColor(hdc, col);
     int modeOld = SetBkMode(hdc, TRANSPARENT);
 
-    // Note: we must have DT_SINGLELINE for DT_VCENTER to work.
-    ::DrawText(hdc, text, text.length(), pRect, DT_SINGLELINE | DT_CENTER | DT_VCENTER);
+    if(bMultiline)
+        {
+        RECT FinalRect;
+        ::CopyRect(&FinalRect,pRect);
+        ::DrawText(hdc, text, text.length(), &FinalRect,DT_CENTER|DT_CALCRECT);
+        const LONG w=FinalRect.right-FinalRect.left;
+        const LONG h=FinalRect.bottom-FinalRect.top;
+        FinalRect.left=((pRect->right-pRect->left)/2)-((w)/2);
+        FinalRect.right=FinalRect.left+w;
+        FinalRect.top=((pRect->bottom-pRect->top)/2)-(h/2);
+        FinalRect.bottom=FinalRect.top+h;
+        ::DrawText(hdc,text,text.length(),&FinalRect,DT_CENTER);
+        }
+    else
+        {
+        // Note: we must have DT_SINGLELINE for DT_VCENTER to work.
+        ::DrawText(hdc, text, text.length(), pRect, DT_SINGLELINE | DT_CENTER | DT_VCENTER);
+        }
 
     SetBkMode(hdc, modeOld);
     SetTextColor(hdc, colOld);
@@ -620,10 +638,15 @@
         OffsetRect(&rectBtn, 1, 1);
     }
 
-    DrawButtonText(hdc, &rectBtn, GetLabel(),
-                   state & ODS_DISABLED ? GetSysColor(COLOR_GRAYTEXT)
-                                        : colFg);
-
+    const long style=GetWindowLong(GetHwnd(), GWL_STYLE);
+    DrawButtonText
+        (
+        hdc,
+        &rectBtn,
+        GetLabel(),
+        state & ODS_DISABLED ? GetSysColor(COLOR_GRAYTEXT):colFg,
+        (style&BS_MULTILINE)==BS_MULTILINE?true:false
+        );
     ::DeleteObject(hbrushBackground);
 
     return TRUE;

 	  	 
