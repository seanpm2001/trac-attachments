--- tnoneng_old.tex	Tue May 04 10:25:50 2004
+++ tnoneng.tex	Fri May 07 14:30:12 2004
@@ -89,4 +89,38 @@
 {\tt wxLOCALE\_CONV\_ENCODING} to \helpref{wxLocale::Init}{wxlocaleinit}.
 
+\wxheading{Non-English strings or 8-bit characters in the source code}
+
+As by convention, you should use characters without diacritics (i.e. 7-bit
+characters) in the source code, limiting the languages that may be used to
+English.
+
+If you port software to wxWindows, you may be confronted with legacy source
+code containing German or French strings. Instead of translating the strings
+in the source code, you may work with this strings directly with some simple
+steps.
+
+1. if you use the program {\it xgettext} to extract the strings from the source
+code, specify the option {\it --from-code=<source code codepage>}. The source
+code codepage is the codepage on the system where the application has been
+compiled (i.e. {\it iso-8859-1} or {\it windows-1252} for German or French
+systems).
+
+If you use poEdit to create your catalogs, set the source code charset in the
+catalog options (available with poEdit 1.2.5).
+
+2. always use UTF-8 as the catalog charset ({\it Content-Type:} in the catalog
+header) to be able to convert the strings to any target codepage.
+
+3. on loading the catalog, specify the source code language and codepage.
+
+{\bf Example:}
+
+\begin{verbatim}
+	locale.AddCatalog("mycatalog", "de", "iso-8859-1");
+\end{verbatim}
+
+Now wxWindows will translate the message ids on catalog loading to match the
+strings in the binary.
+
 \wxheading{Font mapping}
 

 	  	 
