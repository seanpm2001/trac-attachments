Index: include/wx/osx/combobox.h
===================================================================
--- include/wx/osx/combobox.h	(revision 75293)
+++ include/wx/osx/combobox.h	(working copy)
@@ -33,6 +33,7 @@
 #endif
                 wxComboBoxBase>
 {
+    DECLARE_EVENT_TABLE()
     DECLARE_DYNAMIC_CLASS(wxComboBox)
 
  public:
@@ -47,6 +48,8 @@
     // callback functions
     virtual void DelegateTextChanged( const wxString& value );
     virtual void DelegateChoice( const wxString& value );
+    
+    void OnChar(wxKeyEvent& event); // Process 'enter' if required
 
     wxComboBox() { }
 
Index: src/osx/combobox_osx.cpp
===================================================================
--- src/osx/combobox_osx.cpp	(revision 75293)
+++ src/osx/combobox_osx.cpp	(working copy)
@@ -20,6 +20,56 @@
 
 // work in progress
 
+BEGIN_EVENT_TABLE(wxComboBox, wxControl)
+    EVT_CHAR(wxComboBox::OnChar)
+END_EVENT_TABLE()
+
+void wxComboBox::OnChar(wxKeyEvent& event)
+{
+    switch ( event.GetKeyCode() )
+    {
+        case WXK_RETURN:
+            {
+                wxTopLevelWindow *tlw = wxDynamicCast(wxGetTopLevelParent(this), wxTopLevelWindow);
+                if ( tlw && tlw->GetDefaultItem() )
+                {
+                    wxButton *def = wxDynamicCast(tlw->GetDefaultItem(), wxButton);
+                    if ( def && def->IsEnabled() )
+                    {
+                        wxCommandEvent event(wxEVT_BUTTON, def->GetId() );
+                        event.SetEventObject(def);
+                        def->Command(event);
+
+                        return;
+                    }
+                }
+                event.Skip();
+            }
+            break;
+
+        case WXK_TAB:
+            {
+                int flags = 0;
+                
+                if ( event.ShiftDown() )
+                    flags |= wxNavigationKeyEvent::IsBackward;
+                else
+                    flags |= wxNavigationKeyEvent::IsForward;
+
+                if (event.ControlDown())
+                    flags |= wxNavigationKeyEvent::WinChange;
+
+                Navigate(flags);
+            }
+            break;
+
+        default:
+            // allow other keystroke handling
+            event.Skip();
+            break;
+    }
+}
+
 wxComboBox::~wxComboBox()
 {
 }
