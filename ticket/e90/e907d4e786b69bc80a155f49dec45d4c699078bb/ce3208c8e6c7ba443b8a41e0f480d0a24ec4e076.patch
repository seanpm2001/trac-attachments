Index: src/xml/xml.cpp
===================================================================
--- src/xml/xml.cpp	(revision 67421)
+++ src/xml/xml.cpp	(working copy)
@@ -505,6 +505,10 @@
 
 void wxXmlDocument::SetRoot(wxXmlNode *root)
 {
+    if (root)
+        wxASSERT_MSG( root->GetType() == wxXML_ELEMENT_NODE,
+            "Can only set an element type node as root" );
+
     wxXmlNode *node = m_docNode;
     if (node)
     {
@@ -515,7 +519,7 @@
             prev = node;
             node = node->GetNext();
         }
-        if (node)
+        if (node && root)
         {
             root->SetNext( node->GetNext() );
             wxDELETE(node);
@@ -528,8 +532,10 @@
     else
     {
         m_docNode = new wxXmlNode(wxXML_DOCUMENT_NODE, wxEmptyString);
+        m_docNode->SetChildren(root);
     }
-    root->SetParent(m_docNode);
+    if (root) 
+        root->SetParent(m_docNode);
 }
 
 void wxXmlDocument::AppendToProlog(wxXmlNode *node)
Index: tests/xml/xmltest.cpp
===================================================================
--- tests/xml/xmltest.cpp	(revision 67421)
+++ tests/xml/xmltest.cpp	(working copy)
@@ -81,6 +81,7 @@
         CPPUNIT_TEST( Escaping );
         CPPUNIT_TEST( DetachRoot );
         CPPUNIT_TEST( AppendToProlog );
+        CPPUNIT_TEST( SetRoot );
     CPPUNIT_TEST_SUITE_END();
 
     void InsertChild();
@@ -91,6 +92,7 @@
     void Escaping();
     void DetachRoot();
     void AppendToProlog();
+    void SetRoot();
 
     DECLARE_NO_COPY_CLASS(XmlTestCase)
 };
@@ -424,3 +426,47 @@
     ;
     CPPUNIT_ASSERT_EQUAL( xmlTextResult, sos.GetString() );
 }
+
+void XmlTestCase::SetRoot()
+{
+    wxXmlDocument doc;
+    CPPUNIT_ASSERT( doc.IsOk() == false );
+    wxXmlNode *root = new wxXmlNode(wxXML_ELEMENT_NODE, "root");
+
+    // Test for http://trac.wxwidgets.org/ticket/13135 fault.
+    doc.SetRoot( root );
+    wxXmlNode *docNode = doc.GetDocumentNode();
+    CPPUNIT_ASSERT( docNode && root == docNode->GetChildren() );
+    CPPUNIT_ASSERT( doc.IsOk() == true );
+
+    // Other tests.
+    CPPUNIT_ASSERT( docNode == root->GetParent() );
+    doc.SetRoot(NULL); // Removes from doc but dosn't free mem, doc node left.
+    CPPUNIT_ASSERT( doc.IsOk() == false );
+
+    wxXmlNode *comment = new wxXmlNode(wxXML_COMMENT_NODE, "comment", "Prolog Comment");
+    wxXmlNode *pi = new wxXmlNode(wxXML_PI_NODE, "target", "PI instructions");
+    doc.AppendToProlog(comment);
+    doc.SetRoot( root );
+    doc.AppendToProlog(pi);
+    CPPUNIT_ASSERT( doc.IsOk() == true );
+    wxXmlNode *node = docNode->GetChildren();
+    CPPUNIT_ASSERT( node );
+    CPPUNIT_ASSERT( node->GetType() == wxXML_COMMENT_NODE );
+    CPPUNIT_ASSERT( node->GetParent() == docNode );
+    node = node->GetNext();
+    CPPUNIT_ASSERT( node );
+    CPPUNIT_ASSERT( node->GetType() == wxXML_PI_NODE );
+    CPPUNIT_ASSERT( node->GetParent() == docNode );
+    node = node->GetNext();
+    CPPUNIT_ASSERT( node );
+    CPPUNIT_ASSERT( node->GetType() == wxXML_ELEMENT_NODE );
+    CPPUNIT_ASSERT( node->GetParent() == docNode );
+    node = node->GetNext();
+    CPPUNIT_ASSERT( node == NULL );
+    doc.SetRoot(NULL); 
+    CPPUNIT_ASSERT( doc.IsOk() == false );
+    doc.SetRoot(root); 
+    CPPUNIT_ASSERT( doc.IsOk() == true );
+}
+
