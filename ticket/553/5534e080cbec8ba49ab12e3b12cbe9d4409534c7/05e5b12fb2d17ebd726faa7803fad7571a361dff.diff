diff --git samples/minimal/minimal.cpp samples/minimal/minimal.cpp
index fb8f721..d789a52 100644
--- samples/minimal/minimal.cpp
+++ samples/minimal/minimal.cpp
@@ -29,7 +29,7 @@
 #ifndef WX_PRECOMP
     #include "wx/wx.h"
 #endif
-
+#include <wx/splitter.h>
 // ----------------------------------------------------------------------------
 // resources
 // ----------------------------------------------------------------------------
@@ -69,6 +69,12 @@ public:
     void OnAbout(wxCommandEvent& event);
 
 private:
+	void OnIdle(wxIdleEvent& WXUNUSED(event));
+    
+    wxSplitterWindow* m_splitter;
+    wxPanel* m_panel;
+    wxTextCtrl* m_text;
+
     // any class wishing to process wxWidgets events must use this macro
     DECLARE_EVENT_TABLE()
 };
@@ -143,7 +149,7 @@ bool MyApp::OnInit()
 
 // frame constructor
 MyFrame::MyFrame(const wxString& title)
-       : wxFrame(NULL, wxID_ANY, title)
+       : wxFrame(NULL, wxID_ANY, title, wxDefaultPosition, wxSize(1000, 600))
 {
     // set the frame icon
     SetIcon(wxICON(sample));
@@ -172,8 +178,32 @@ MyFrame::MyFrame(const wxString& title)
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+
+m_splitter = new wxSplitterWindow(this);
+m_panel = new wxPanel(m_splitter);
+m_text = new wxTextCtrl(m_splitter, wxID_ANY, wxT("foo"));
+
+m_splitter->SetSashGravity(0.3);
+
+if (wxGetApp().argc == 1)
+    {   m_splitter->SplitVertically(m_panel, m_text, 700);
+        // The overkill of setting the sash position twice doesn't help either
+        m_splitter->SetSashPosition(700);
 }
+ else
+    {
+        Bind(wxEVT_IDLE, &MyFrame::OnIdle, this);
+    }
+}
+
 
+void MyFrame::OnIdle(wxIdleEvent& WXUNUSED(event))
+{
+if (GetClientSize().GetWidth() > 20)
+    {   m_splitter->SplitVertically(m_panel, m_text, 700);
+        Unbind(wxEVT_IDLE, &MyFrame::OnIdle, this);
+    }
+}
 
 // event handlers
 
