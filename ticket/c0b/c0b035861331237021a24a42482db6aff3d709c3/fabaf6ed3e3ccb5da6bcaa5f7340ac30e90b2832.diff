Index: wx-config.in
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/wx-config.in,v
retrieving revision 1.122
diff -u -2 -r1.122 wx-config.in
--- wx-config.in	2005/09/03 06:28:23	1.122
+++ wx-config.in	2005/11/17 21:27:42
@@ -21,22 +21,5 @@
 [ -z "$WXDEBUG_X" ] || set -x
 
-# We expect a posix shell, so if this is a Bourne shell,
-# and apparently a few still exist, try for bash or ksh.
 
-if [ ~ = '~' ]
-then
-    if (bash -c echo) >/dev/null 2>&1
-    then
-        exec bash "$0" "$@"
-    fi
-    if (ksh -c echo) >/dev/null 2>&1
-    then
-        exec ksh "$0" "$@"
-    fi
-    echo "$0: this script requires bash or ksh"
-    exit 1
-fi
- 
-
 # On with some basic stuff, like the ability to die gracefully,
 # and to tell people what we are about.
@@ -157,6 +140,5 @@
 option_name()
 {
-    _option_name_temp=${1%%=*}
-    echo ${_option_name_temp#--} | tr '-' '_'
+    echo "$1" | sed 's/^--//;s/=.*//' | tr '-' '_'
 }
 
@@ -165,5 +147,5 @@
 option_value()
 {
-    echo "${1#*=}"
+    echo "$1" | sed 's/^[^=]*=//'
 }
 
@@ -174,5 +156,5 @@
     _match_field_match="$1"
     shift
-    for _match_field_i; do
+    for _match_field_i do
         [ "x$_match_field_i" != "x$_match_field_match" ] || return 0
     done
@@ -188,5 +170,5 @@
     shift
     if [ -n "$_remf_value" ]; then
-        for _remf_item; do
+        for _remf_item do
             [ "x$_remf_item" = "x$_remf_value" ] ||
                 _remf_list="${_remf_list:+$_remf_list }$_remf_item"
@@ -215,5 +197,5 @@
 validate_arg()
 {
-    if match_field "$3" $(eval echo \"\$$1_$2_options\"); then
+    if match_field "$3" `eval echo \"\\\$$1_$2_options\"`; then
         eval "$2_options=\"\${$2_options:+\$$2_options }$3\""
         eval "$2_option_$3=\"$4\""
@@ -260,5 +242,5 @@
 # a moment.
 
-for arg; do
+for arg do
   case "$arg" in
     --help|-h)
@@ -267,6 +249,6 @@
 
     --*=*)
-        _name=$(option_name $arg)
-        _value=$(option_value $arg)
+        _name=`option_name $arg`
+        _value=`option_value $arg`
         if validate_arg wxconfig input "$_name" "$_value" ||
            validate_arg wxconfig yesno "$_name" "$_value"
@@ -277,5 +259,5 @@
 
     --*)
-        _name=$(option_name $arg)
+        _name=`option_name $arg`
         if validate_arg wxconfig flag   "$_name" yes ||
            validate_arg wxconfig output "$_name" yes
@@ -312,17 +294,17 @@
     decho "  input options     = $input_options"
     for i in $input_options; do
-        decho "    $i = $(eval echo \"\$input_option_$i\")"
+        decho "    $i = `eval echo \"\\\$input_option_$i\"`"
     done
     decho "  yes/no options    = $yesno_options"
     for y in $yesno_options; do
-        decho "    $y = $(eval echo \"\$yesno_option_$y\")"
+        decho "    $y = `eval echo \"\\\$yesno_option_$y\"`"
     done
     decho "  flag options      = $flag_options"
     for f in $flag_options; do
-        decho "    $f = $(eval echo \"\$flag_option_$f\")"
+        decho "    $f = `eval echo \"\\\$flag_option_$f\"`"
     done
     decho "  output options    = $output_options"
     for o in $output_options; do
-        decho "    $o = $(eval echo \"\$output_option_$o\")"
+        decho "    $o = `eval echo \"\\\$output_option_$o\"`"
     done
 
@@ -355,5 +337,5 @@
 wxconfdir="@libdir@/wx/config"
 
-installed_configs=$( cd "$wxconfdir" 2> /dev/null && ls | grep -v "^inplace-" )
+installed_configs=`cd "$wxconfdir" 2> /dev/null && ls | grep -v "^inplace-"`
 
 is_cross && target="@host_alias@"
@@ -368,21 +350,21 @@
 this_flavour="@WX_FLAVOUR@"
 this_version="@WX_RELEASE@"
-this_linkage=$( [ "x@SHARED@" = "x1" ] || echo '-static' )
+this_linkage=`[ "x@SHARED@" = "x1" ] || echo '-static'`
 
-this_config=$(get_mask this)
+this_config=`get_mask this`
 
 # Extract the user specification from the options parsed.
-m_host=${input_option_host:+${input_option_host}-?}
+m_host=${input_option_host:+"${input_option_host}-?"}
 m_host=${m_host:-${input_option_host-$this_host}}
-m_toolkit=${input_option_toolkit:-[^-]+}
-m_widgetset=${input_option_widgetset-(univ)?}
-m_chartype=${input_option_chartype:-(unicode|ansi)}
-m_debugtype=${input_option_debugtype:-(debug|release)}
+m_toolkit=${input_option_toolkit:-'[^-]+'}
+m_widgetset=${input_option_widgetset-'(univ)?'}
+m_chartype=${input_option_chartype:-'(unicode|ansi)'}
+m_debugtype=${input_option_debugtype:-'(debug|release)'}
 m_flavour=${input_option_flavour:+-$input_option_flavour}
-m_flavour=${m_flavour:-${input_option_flavour-(-[^-]+)?}}
-m_version=${input_option_version:-[0-9]+\.[0-9]+}
-m_linkage=${input_option_linkage-(-static)?}
+m_flavour=${m_flavour:-${input_option_flavour-'(-[^-]+)?'}}
+m_version=${input_option_version:-'[0-9]+\.[0-9]+'}
+m_linkage=${input_option_linkage-'(-static)?'}
 
-configmask="^$(get_mask)$"
+configmask="^`get_mask`$"
 
 
@@ -469,9 +451,13 @@
 # count_delegates _mask
 # Return the number of eligible config files that match _mask
-count_delegates()   { count_fields $(find_eligible_delegates $1); }
+count_delegates()   { count_fields `find_eligible_delegates $1`; }
 
 # is_set _variablename
 # Returns true if $_variablename is initialised.
-is_set()            { [ "x$(eval echo \"\${$1-unset}\")" != "xunset" ]; }
+is_set()            { [ "x`eval echo \"\\\${$1-unset}\"`" != "xunset" ]; }
+
+# not _cmd _args...
+# true iff _cmd is false
+not()               { if "$@"; then false; else true; fi }
 
 # do_find_best_delegate _unbound-options
@@ -506,8 +492,8 @@
     fi
 
-    for i; do
+    for i do
 
         if [ "x$WXDEBUG" = "xverbose" ]; then
-            decho "  ${_fbd_indent}binding '$i' with '$(remove_field $i $*)' still free"
+            decho "  ${_fbd_indent}binding '$i' with '`remove_field $i $*`' still free"
             [ -z "$_pruned" ] || decho "  ${_fbd_indent}  --- pruned: $_pruned ---"
         fi
@@ -515,5 +501,5 @@
         if (
             eval m_$i=\$this_$i
-            _mask="^$(get_mask)$"
+            _mask="^`get_mask`$"
 
             if [ "x$WXDEBUG" = "xverbose" ]; then
@@ -521,5 +507,5 @@
                 count_delegates "$_mask"
                 decho "  $_fbd_indent  $? eligible delegates"
-                for d in $(find_eligible_delegates "$_mask"); do
+                for d in `find_eligible_delegates "$_mask"`; do
                     decho "  ${_fbd_indent}    $d"
                 done
@@ -530,5 +516,5 @@
 
             if [ $_still_eligible -eq 1 ]; then
-                echo $(find_eligible_delegates "$_mask")
+                echo `find_eligible_delegates "$_mask"`
                 return
             fi
@@ -537,5 +523,5 @@
 
             [ $_still_eligible -gt 1 ] && [ $# -gt 1 ] &&
-                do_find_best_delegate $(remove_field $i $*)
+                do_find_best_delegate `remove_field $i $*`
            )
         then
@@ -549,5 +535,5 @@
                 _pruned="${_pruned:+$_pruned }$i"
             fi
-            set $(remove_field $i $*)
+            set `remove_field $i $*`
 
         fi
@@ -603,7 +589,7 @@
 find_best_legacy_config()
 {
-    _legacy_configs=$(find_legacy_configs)
+    _legacy_configs=`find_legacy_configs`
     if [ -n "$_legacy_configs" ]; then
-        _legacy_mask=$(get_legacy_mask)
+        _legacy_mask=`get_legacy_mask`
         for d in $_legacy_configs; do
             if echo $d | $EGREP $_legacy_mask > /dev/null 2>&1 ; then
@@ -632,6 +618,6 @@
 
     _remains_in_prefix=$installed_configs
-    _delegates=$(find_eligible_delegates $configmask)
-    _best_delegate=$(find_best_delegate)
+    _delegates=`find_eligible_delegates $configmask`
+    _best_delegate=`find_best_delegate`
 
     if [ "x$WXDEBUG" = "xverbose" ]; then
@@ -644,5 +630,5 @@
 
     for d in $_delegates; do
-        _remains_in_prefix=$(remove_field $d $_remains_in_prefix)
+        _remains_in_prefix=`remove_field $d $_remains_in_prefix`
     done
 
@@ -656,5 +642,5 @@
 
         if match_field "$this_config" $_delegates ; then
-            _delegates=$(remove_field $this_config $_delegates)
+            _delegates=`remove_field $this_config $_delegates`
         else
             echo "  though it is not installed in: $prefix"
@@ -672,5 +658,5 @@
     elif [ -z "$_delegates" ]; then
 
-        _last_chance=$(find_best_legacy_config)
+        _last_chance=`find_best_legacy_config`
         if [ -n "$_last_chance" ]; then
 
@@ -696,5 +682,5 @@
     fi
 
-    _delegates=$(remove_field "$_best_delegate" $_delegates)
+    _delegates=`remove_field "$_best_delegate" $_delegates`
 
     if [ -n "$_delegates" ]; then
@@ -713,10 +699,10 @@
     fi
 
-    _legacy_configs=$(find_legacy_configs)
+    _legacy_configs=`find_legacy_configs`
     if [ -n "$_legacy_configs" ]; then
         echo
         echo "  Legacy configs available in $prefix:"
         for d in $_legacy_configs; do
-            echo "    ${d%-config}"
+            echo "    $d" | sed 's/-config$//'
         done
     fi
@@ -732,5 +718,5 @@
 # --------------------------------------------------------------
 
-if ! user_mask_fits "$this_config" ; then
+if not user_mask_fits "$this_config" ; then
 
     # No?  Then lets see if it knows anybody who can.
@@ -757,5 +743,5 @@
         decho "  must delegate to an alternate config"
         decho "  potential delegates ($_numdelegates):"
-        for i in $(find_eligible_delegates "$configmask"); do
+        for i in `find_eligible_delegates "$configmask"`; do
             decho "    $i"
         done
@@ -764,8 +750,8 @@
     if [ $_numdelegates -eq 0 ]; then
 
-        _last_chance=$(find_best_legacy_config)
+        _last_chance=`find_best_legacy_config`
         if [ -n "$_last_chance" ]; then
 
-            for arg; do
+            for arg do
                 case "$arg" in
                     --prefix*|--exec-prefix*|               \
@@ -819,5 +805,5 @@
         [ -z "$WXDEBUG" ] || decho "  must prune the list of eligible delegates"
 
-        best_delegate=$(find_best_delegate)
+        best_delegate=`find_best_delegate`
 
         if [ -n "$best_delegate" ]; then
@@ -837,5 +823,5 @@
         decho "            as $config_spec"
         decho " Use additional feature options to choose between:"
-        for i in $(find_eligible_delegates "$configmask"); do
+        for i in `find_eligible_delegates "$configmask"`; do
             decho "  $i"
         done
@@ -847,9 +833,9 @@
     if [ -n "$WXDEBUG" ]; then
         decho "  using the only suitable delegate"
-        decho "--> $wxconfdir/$(find_eligible_delegates $configmask) $*"
+        decho "--> $wxconfdir/`find_eligible_delegates $configmask` $*"
     fi
 
     export WXCONFIG_DELEGATED=yes
-    $wxconfdir/$(find_eligible_delegates $configmask) $*
+    $wxconfdir/`find_eligible_delegates $configmask` $*
     exit
 fi
@@ -881,5 +867,5 @@
 [ -z "$output_option_version_full"  ] || echo "@WX_SUBVERSION@"
 [ -z "$output_option_basename"      ] || echo "@WX_LIBRARY_BASENAME_GUI@"
-[ -z "$output_option_rezflags"      ] || echo $(eval echo "@MACRESWXCONFIG@")
+[ -z "$output_option_rezflags"      ] || echo `eval echo "@MACRESWXCONFIG@"`
 [ -z "$output_option_cc"            ] || echo "@CC@"
 [ -z "$output_option_cxx"           ] || echo "@CXX@"
@@ -912,5 +898,5 @@
     is_cross || _util="$exec_prefix/utils/$input_option_utility/$input_option_utility"
 
-    if ! is_installed && [ -x "$_util" ]; then
+    if not is_installed && [ -x "$_util" ]; then
         is_static || _preload="eval LD_LIBRARY_PATH=$exec_prefix/lib"
         echo $_preload $_util
@@ -971,5 +957,5 @@
     is_cross && _target="-${target}"
 
-    for lib; do
+    for lib do
 
         # We evidently can't trust people not to duplicate things in
@@ -989,5 +975,5 @@
         # be fixed.
 
-        for f in $(eval echo \"\$ldflags_$lib\"); do
+        for f in `eval echo \"\\\$ldflags_$lib\"`; do
             match_field "$f" $_all_ldflags || _all_ldflags="$_all_ldflags $f"
         done
@@ -1003,5 +989,5 @@
         if is_static; then
             _wxlibs="$_wxlibs ${libdir}/lib${_libname}.a"
-            for f in $(eval echo \"\$ldlibs_$lib\"); do
+            for f in `eval echo \"\\\$ldlibs_$lib\"`; do
 
                 # Only propagate duplicate -libraries to their latest
@@ -1015,5 +1001,5 @@
                 # we have to.
                 case "$f" in
-                  -l*)  _all_libs="$(remove_field $f $_all_libs) $f"    ;;
+                  -l*)  _all_libs="`remove_field $f $_all_libs` $f"     ;;
                     *)  _all_libs="$_all_libs $f"                       ;;
                 esac
@@ -1051,5 +1037,5 @@
     is_cross && _target="-${target}"
 
-    for lib; do
+    for lib do
         if match_field "$lib" @CORE_BASE_LIBS@ ; then
             _libname="@WX_LIBRARY_BASENAME_NOGUI@"
@@ -1069,5 +1055,5 @@
 # --------------------------------------------------------------
 
-wx_libs=$(echo "$input_parameters" | tr ',' ' ')
+wx_libs=`echo "$input_parameters" | tr ',' ' '`
 
 [ -z "$WXDEBUG" ] || decho "  user supplied libs: '$wx_libs'"
@@ -1077,8 +1063,8 @@
     # Core libs are already built into the blob.
     for i in std @CORE_GUI_LIBS@ @CORE_BASE_LIBS@; do
-        wx_libs=$(remove_field $i $wx_libs)
+        wx_libs=`remove_field $i $wx_libs`
     done
 
-    wx_libs="@WXCONFIG_LDFLAGS_GUI@ $(lib_flags_for $wx_libs)"
+    wx_libs="@WXCONFIG_LDFLAGS_GUI@ `lib_flags_for $wx_libs`"
 
     # We still need the core lib deps for a static build though
@@ -1100,9 +1086,9 @@
         # Bubble any libs that were already specified to the end
         # of the list and ensure static linking order is retained.
-        wx_libs=$(remove_field std $wx_libs)
+        wx_libs=`remove_field std $wx_libs`
         for i in @CORE_GUI_LIBS@ @CORE_BASE_LIBS@; do
-            wx_libs="$(remove_field $i $wx_libs) $i"
+            wx_libs="`remove_field $i $wx_libs` $i"
         done
-    elif ! match_field base $wx_libs ; then
+    elif not match_field base $wx_libs ; then
         wx_libs="$wx_libs base"
     fi
@@ -1119,7 +1105,7 @@
 
     if is_static; then
-        link_deps=$(link_deps_for $wx_libs)
+        link_deps=`link_deps_for $wx_libs`
     fi
-    wx_libs="$_guildflags $(lib_flags_for $wx_libs)"
+    wx_libs="$_guildflags `lib_flags_for $wx_libs`"
 fi
 
@@ -1144,5 +1130,5 @@
 fi
 
-_cppflags=$(echo "-I${libdir}/wx/include/@TOOLCHAIN_FULLNAME@" $_include_cppflags "@WXDEBUG_DEFINE@" "@TOOLCHAIN_DEFS@" "@TOOLCHAIN_DLL_DEFS@" $_gui_cppflags "@WXCONFIG_INCLUDE@" "@WX_LARGEFILE_FLAGS@" "@GCC_PRAGMA_FLAGS@")  
+_cppflags=`echo "-I${libdir}/wx/include/@TOOLCHAIN_FULLNAME@" $_include_cppflags "@WXDEBUG_DEFINE@" "@TOOLCHAIN_DEFS@" "@TOOLCHAIN_DLL_DEFS@" $_gui_cppflags "@WXCONFIG_INCLUDE@" "@WX_LARGEFILE_FLAGS@" "@GCC_PRAGMA_FLAGS@"`
 
 # now without further ado, we can answer these too.
@@ -1150,5 +1136,5 @@
 [ -z "$output_option_cflags"   ] || echo $_cppflags "@CODE_GEN_FLAGS@"
 [ -z "$output_option_cxxflags" ] || echo $_cppflags "@CODE_GEN_FLAGS@" "@CODE_GEN_FLAGS_CXX@"
-[ -z "$output_option_gl_libs"  ] || echo $(lib_flags_for gl)
+[ -z "$output_option_gl_libs"  ] || echo `lib_flags_for gl`
 [ -z "$output_option_linkdeps" ] || echo $link_deps
 

 	  	 
