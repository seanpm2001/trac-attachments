--- a/include/wx/msw/slider.h
+++ b/include/wx/msw/slider.h
@@ -118,6 +118,9 @@ protected:
     virtual void DoMoveWindow(int x, int y, int width, int height);
     virtual wxSize DoGetBestSize() const;
 
+    // Handle colors for all subcontrols
+    WXHBRUSH DoMSWControlColor(WXHDC pDC, wxColour colBg, WXHWND hWnd) wxOVERRIDE;
+
     // the labels windows, if any
     wxSubwindows  *m_labels;
 
@@ -131,6 +134,13 @@ protected:
     // of dragging the thumb or scrolling the mouse wheel
     bool m_isDragging;
 
+#if !WXWIN_COMPATIBILITY_3_0
+    // handle to the current active background brush. It's used to check
+    // if background colour is to be changed.
+    // Remark: In the compatibility mode internal hash map is used instead.
+    WXHBRUSH m_hBgBrush;
+#endif // !WXWIN_COMPATIBILITY_3_0
+
     // Platform-specific implementation of SetTickFreq
     virtual void DoSetTickFreq(int freq);
 
--- a/src/msw/slider.cpp
+++ b/src/msw/slider.cpp
@@ -60,6 +60,16 @@ const int BORDERPAD = 8;
 const int THUMB = 24;
 const int TICK = 8;
 
+#if WXWIN_COMPATIBILITY_3_0
+// Hash to find current active background brush
+// in order to determine whether it was changed or not.
+WX_DECLARE_HASH_MAP(wxSlider*, WXHBRUSH,
+                    wxPointerHash, wxPointerEqual,
+                    BrushForSlider);
+
+BrushForSlider gs_brushForSlider;
+#endif // WXWIN_COMPATIBILITY_3_0
+
 } // anonymous namespace
 
 // ============================================================================
@@ -81,6 +91,12 @@ void wxSlider::Init()
     m_tickFreq = 0;
 
     m_isDragging = false;
+
+#if WXWIN_COMPATIBILITY_3_0
+    gs_brushForSlider[this] = NULL;
+#else
+    m_hBgBrush = NULL;
+#endif // WXWIN_COMPATIBILITY_3_0
 }
 
 bool wxSlider::Create(wxWindow *parent,
@@ -225,6 +241,9 @@ WXDWORD wxSlider::MSWGetStyle(long style, WXDWORD *exstyle) const
 wxSlider::~wxSlider()
 {
     delete m_labels;
+#if WXWIN_COMPATIBILITY_3_0
+    gs_brushForSlider.erase(this);
+#endif // WXWIN_COMPATIBILITY_3_0
 }
 
 // ----------------------------------------------------------------------------
@@ -567,6 +586,30 @@ wxSize wxSlider::DoGetBestSize() const
     return size;
 }
 
+WXHBRUSH wxSlider::DoMSWControlColor(WXHDC pDC, wxColour colBg, WXHWND hWnd)
+{
+    wxASSERT_MSG( hWnd == GetHwnd() || ContainsHWND(hWnd),
+                  wxT("Item doesn't belong to wxSlider") );
+
+    const WXHBRUSH brush = wxSliderBase::DoMSWControlColor(pDC, colBg, hWnd);
+    // Apparently there is a bug in the native trackbar control
+    // and hence it must be explicity repainted
+    // when its background colour is changed
+    // (e.g. by sending dummy WM_ENABLE message).
+#if WXWIN_COMPATIBILITY_3_0
+    if( brush != gs_brushForSlider[this] && hWnd == GetHwnd() )
+    {
+        gs_brushForSlider[this] = brush;
+#else
+    if ( brush != m_hBgBrush && hWnd == GetHwnd() )
+    {
+        m_hBgBrush = brush;
+#endif // WXWIN_COMPATIBILITY_3_0
+        ::PostMessage(GetHwnd(), WM_ENABLE, (BOOL)IsEnabled(), 0);
+    }
+    return brush;
+}
+
 // ----------------------------------------------------------------------------
 // slider-specific methods
 // ----------------------------------------------------------------------------
