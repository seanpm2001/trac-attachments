--- a/include/wx/msw/slider.h
+++ b/include/wx/msw/slider.h
@@ -134,6 +134,10 @@ protected:
     // of dragging the thumb or scrolling the mouse wheel
     bool m_isDragging;
 
+    // handle of current active brush for background. It's used to check
+    // if backgrund colour is to be changed.
+    WXHBRUSH m_hBgBrush;
+
     // Platform-specific implementation of SetTickFreq
     virtual void DoSetTickFreq(int freq);
 
--- a/src/msw/slider.cpp
+++ b/src/msw/slider.cpp
@@ -81,6 +81,8 @@ void wxSlider::Init()
     m_tickFreq = 0;
 
     m_isDragging = false;
+
+    m_hBgBrush = NULL;
 }
 
 bool wxSlider::Create(wxWindow *parent,
@@ -573,7 +575,16 @@ WXHBRUSH wxSlider::DoMSWControlColor(WXHDC pDC, wxColour colBg, WXHWND hWnd)
     // handle colors just as for the main control (trackbar).
     wxASSERT_MSG( hWnd == GetHwnd() || ContainsHWND(hWnd),
                   wxT("Item doesn't belong to wxSlider") );
-    return wxSliderBase::DoMSWControlColor(pDC, colBg, GetHwnd());
+    const WXHBRUSH brush = wxSliderBase::DoMSWControlColor(pDC, colBg, GetHwnd());
+    // Apparently trackbar control is buggy and hence must be explicity
+    // repainted when its background colour is changed
+    // (e.g. by sending dummy WM_ENABLE message).
+    if ( brush != m_hBgBrush && hWnd == GetHwnd() )
+    {
+        m_hBgBrush = brush;
+        ::PostMessage(GetHwnd(), WM_ENABLE, (BOOL)IsEnabled(), 0);
+    }
+    return brush;
 }
 
 // ----------------------------------------------------------------------------
