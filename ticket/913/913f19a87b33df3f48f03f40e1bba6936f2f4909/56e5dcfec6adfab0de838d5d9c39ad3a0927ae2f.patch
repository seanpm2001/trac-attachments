Allow the caller to set an umask according to local requirements:
Remove the hard-coded umask(077) which e.g. prevented a user client process
from communicating with a daemon running as another user.
This is consistent with wxSocketServer which does not force any umask.

Signed-Off-By: Anders Larsen <al@alarsen.net>
---
 src/common/sckipc.cpp |   18 ------------------
 1 files changed, 18 deletions(-)

Index: b/src/common/sckipc.cpp
===================================================================
--- a/src/common/sckipc.cpp
+++ b/src/common/sckipc.cpp
@@ -71,12 +71,6 @@ enum
 // All sockets will be created with the following flags
 #define SCKIPC_FLAGS (wxSOCKET_WAITALL|wxSOCKET_REUSEADDR)
 
-// headers needed for umask()
-#ifdef __UNIX_LIKE__
-    #include <sys/types.h>
-    #include <sys/stat.h>
-#endif // __UNIX_LIKE__
-
 // ----------------------------------------------------------------------------
 // private functions
 // ----------------------------------------------------------------------------
@@ -253,7 +247,6 @@ bool wxTCPServer::Create(const wxString&
       return false;
 
 #ifdef __UNIX_LIKE__
-  mode_t umaskOld;
   if ( addr->Type() == wxSockAddress::UNIX )
   {
       // ensure that the file doesn't exist as otherwise calling socket() would
@@ -265,14 +258,6 @@ bool wxTCPServer::Create(const wxString&
 
           return false;
       }
-
-      // also set the umask to prevent the others from reading our file
-      umaskOld = umask(077);
-  }
-  else
-  {
-      // unused anyhow but shut down the compiler warnings
-      umaskOld = 0;
   }
 #endif // __UNIX_LIKE__
 
@@ -282,9 +267,6 @@ bool wxTCPServer::Create(const wxString&
 #ifdef __UNIX_LIKE__
   if ( addr->Type() == wxSockAddress::UNIX )
   {
-      // restore the umask
-      umask(umaskOld);
-
       // save the file name to remove it later
       m_filename = serverName;
   }

 	  	 
