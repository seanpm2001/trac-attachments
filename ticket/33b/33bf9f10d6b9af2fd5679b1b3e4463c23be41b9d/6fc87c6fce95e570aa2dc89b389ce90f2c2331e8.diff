diff -rNbu2 wxW/build/bakefiles/files.bkl wxWidgets/build/bakefiles/files.bkl
--- wxW/build/bakefiles/files.bkl	Sat Oct  2 19:34:27 2004
+++ wxWidgets/build/bakefiles/files.bkl	Sun Oct  3 03:40:07 2004
@@ -1896,4 +1896,5 @@
     src/cocoa/dialog.mm
     src/cocoa/evtloop.mm
+    src/cocoa/filedlg.mm
     src/cocoa/font.cpp
     src/cocoa/fontenum.mm
@@ -1934,5 +1935,4 @@
     src/generic/dirdlgg.cpp
     src/generic/fdrepdlg.cpp
-    src/generic/filedlgg.cpp
     src/generic/fontdlgg.cpp
     src/generic/imaglist.cpp
@@ -1984,4 +1984,5 @@
     wx/cocoa/dcscreen.h
     wx/cocoa/dialog.h
+    wx/cocoa/filedlg.h
     wx/cocoa/font.h
     wx/cocoa/frame.h
diff -rNbu2 wxW/include/wx/cocoa/filedlg.h wxWidgets/include/wx/cocoa/filedlg.h
--- wxW/include/wx/cocoa/filedlg.h	Wed Dec 31 16:00:00 1969
+++ wxWidgets/include/wx/cocoa/filedlg.h	Sat Oct  2 17:26:49 2004
@@ -0,0 +1,51 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        wx/cocoa/filedlg.h
+// Purpose:     wxFileDialog class
+// Author:      Ryan Norton
+// Modified by:
+// Created:     2004-10-02
+// RCS-ID:      $Id: filedlg.h,v 1.20 2004/08/03 06:58:37 ABX Exp $
+// Copyright:   (c) Ryan Norton
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_COCOA_FILEDLG_H_
+#define _WX_COCOA_FILEDLG_H_
+
+#define wxFileDialog wxCocoaFileDialog
+//-------------------------------------------------------------------------
+// wxFileDialog
+//-------------------------------------------------------------------------
+
+class WXDLLEXPORT wxFileDialog: public wxFileDialogBase
+{
+public:
+    wxFileDialog(wxWindow *parent,
+                 const wxString& message = wxFileSelectorPromptStr,
+                 const wxString& defaultDir = wxEmptyString,
+                 const wxString& defaultFile = wxEmptyString,
+                 const wxString& wildCard = wxFileSelectorDefaultWildcardStr,
+                 long style = 0,
+                 const wxPoint& pos = wxDefaultPosition);
+    ~wxFileDialog();
+
+    virtual void SetPath(const wxString& path);
+    virtual void GetPaths(wxArrayString& paths) const;
+    virtual void GetFilenames(wxArrayString& files) const;
+
+    virtual int ShowModal();
+    
+    inline WX_NSPanel GetNSPanel()
+    {	return m_panel;	}
+
+private:
+    WX_NSPanel m_panel;
+    WX_NSMutableArray m_wildcards;
+    wxArrayString m_fileNames;
+
+    DECLARE_DYNAMIC_CLASS(wxFileDialog)
+    DECLARE_NO_COPY_CLASS(wxFileDialog)
+};
+
+#endif // _WX_FILEDLG_H_
+
diff -rNbu2 wxW/include/wx/filedlg.h wxWidgets/include/wx/filedlg.h
--- wxW/include/wx/filedlg.h	Sun Oct  3 03:21:18 2004
+++ wxWidgets/include/wx/filedlg.h	Sat Oct  2 12:52:15 2004
@@ -168,5 +168,5 @@
 #include "wx/mac/filedlg.h"
 #elif defined(__WXCOCOA__)
-#include "wx/generic/filedlgg.h"
+#include "wx/cocoa/filedlg.h"
 #elif defined(__WXPM__)
 #include "wx/os2/filedlg.h"
diff -rNbu2 wxW/src/cocoa/filedlg.mm wxWidgets/src/cocoa/filedlg.mm
--- wxW/src/cocoa/filedlg.mm	Wed Dec 31 16:00:00 1969
+++ wxWidgets/src/cocoa/filedlg.mm	Sat Oct  2 17:47:40 2004
@@ -0,0 +1,248 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        src/cocoa/filedlg.mm
+// Purpose:     wxFileDialog for wxCocoa
+// Author:      Ryan Norton
+// Modified by:
+// Created:     2004-10-02
+// RCS-ID:      $Id: filedlg.cpp,v 1.72 2004/08/25 12:17:55 ABX Exp $
+// Copyright:   (c) Ryan Norton
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+// ============================================================================
+// declarations
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#if wxUSE_FILEDLG
+
+#ifndef WX_PRECOMP
+    #include "wx/msgdlg.h"
+    #include "wx/filedlg.h"
+    #include "wx/filename.h"
+    #include "wx/app.h"
+#endif
+
+#include "wx/cocoa/autorelease.h"
+#include "wx/cocoa/string.h"
+
+#import <AppKit/AppKit.h>
+
+// ============================================================================
+// implementation
+// ============================================================================
+
+IMPLEMENT_CLASS(wxCocoaFileDialog, wxFileDialogBase)
+
+// ----------------------------------------------------------------------------
+// wxFileDialog
+// ----------------------------------------------------------------------------
+
+wxFileDialog::wxFileDialog(wxWindow *parent,
+                           const wxString& message,
+                           const wxString& defaultDir,
+                           const wxString& defaultFileName,
+                           const wxString& wildCard,
+                           long style,
+                           const wxPoint& pos)
+            : wxFileDialogBase(parent, message, defaultDir, defaultFileName,
+                               wildCard, style, pos)
+
+{
+    //Get around wxcocoa bug
+    wxDialog::Create( parent, wxID_ANY, message, pos, wxDefaultSize,
+                      wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER );
+                          
+    //Init the wildcard array
+    m_wildcards = [NSMutableArray arrayWithCapacity:0];
+    
+    //If the user requests to save - use a NSSavePanel
+    //else use a NSOpenPanel
+    if (m_dialogStyle & wxSAVE)
+    {
+        m_panel = [NSSavePanel savePanel];
+        NSSavePanel* thePanel = m_panel;
+        
+        [thePanel setTitle:wxNSStringWithWxString(message)];
+
+        [thePanel setPrompt:@"Save"];
+        [thePanel setTreatsFilePackagesAsDirectories:YES];
+        [thePanel setCanSelectHiddenExtension:YES];
+
+//		Cached as per-app in obj-c
+//        [thePanel setExtensionHidden:YES];
+
+        //
+        // NB:  Note that only Panthar supports wildcards
+        // with save dialogs - not that wildcards in save
+        // dialogs are all that useful, anyway :)
+        //
+    }
+    else //m_dialogStyle & wxOPEN
+    {
+        m_panel = [NSOpenPanel openPanel];
+        [m_panel setTitle:wxNSStringWithWxString(message)];
+        NSOpenPanel* thePanel = m_panel;
+
+        [thePanel setAllowsMultipleSelection:(m_dialogStyle & wxMULTIPLE)];
+        [thePanel setResolvesAliases:YES];
+        [thePanel setCanChooseFiles:YES];
+        [thePanel setCanChooseDirectories:NO];
+        [thePanel setPrompt:@"Open"];
+        
+        //convert wildcards - open panel only takes file extensions -
+        //no actual wildcards here :)
+        size_t lastwcpos = 0;
+        bool bDescription = YES;
+        size_t i;
+        for(i = wildCard.find('|'); 
+                i != wxString::npos; 
+                i = wildCard.find('|', lastwcpos+1))
+        {
+            size_t oldi = i;
+                                    
+            if(bDescription == NO)
+            {            
+                bDescription = !bDescription;
+
+                //work backwards looking for a period
+                while(i != lastwcpos && wildCard[--i] != '.') {}
+
+                if(i == lastwcpos)
+                {
+                    //no extension - can't use this wildcard
+                    lastwcpos = oldi;
+                    continue;
+                }                    
+
+
+                NSString* theString = wxNSStringWithWxString(wildCard.substr(i+1, oldi-i-1));
+                [m_wildcards addObject:theString];
+         //       [theString release];
+
+            }
+            else    
+                bDescription = !bDescription;
+            lastwcpos = oldi;
+        }        
+        
+            if (bDescription == NO)
+            {
+                //get last wildcard
+                size_t oldi = wildCard.length();
+                i = oldi;
+                        
+                //work backwards looking for a period
+                while(i != lastwcpos && wildCard[--i] != '.') {}
+            
+                if(i != lastwcpos)
+                {
+
+                    NSString* theString = wxNSStringWithWxString(wildCard.substr(i+1, oldi-i-1));
+                    [m_wildcards addObject:theString];
+         //           [theString release];
+
+                }
+            }
+                                
+
+        if ([m_wildcards count] == 0)
+        {
+            [m_wildcards release];
+            m_wildcards = nil;
+        }
+
+    }    
+}
+
+wxFileDialog::~wxFileDialog()
+{
+//    [m_panel release];
+    
+    
+//    if(m_wildcards != nil)
+//        [m_wildcards release];
+}
+
+void wxFileDialog::GetPaths(wxArrayString& paths) const
+{
+    paths.Empty();
+
+    wxString dir(m_dir);
+    if ( m_dir.Last() != _T('\\') )
+        dir += _T('\\');
+
+    size_t count = m_fileNames.GetCount();
+    for ( size_t n = 0; n < count; n++ )
+    {
+        if (wxFileName(m_fileNames[n]).IsAbsolute())
+            paths.Add(m_fileNames[n]);
+        else
+            paths.Add(dir + m_fileNames[n]);
+    }
+}
+
+void wxFileDialog::GetFilenames(wxArrayString& files) const
+{
+    files = m_fileNames;
+}
+
+void wxFileDialog::SetPath(const wxString& path)
+{
+    wxString ext;
+    wxSplitPath(path, &m_dir, &m_fileName, &ext);
+    if ( !ext.empty() )
+        m_fileName << _T('.') << ext;
+}
+
+int wxFileDialog::ShowModal()
+{
+    wxAutoNSAutoreleasePool thePool;
+
+    m_fileNames.Empty();
+
+    int nResult;
+    
+    if (m_dialogStyle & wxSAVE)
+    {
+        NSSavePanel* thePanel = m_panel;
+    
+        nResult = [thePanel runModalForDirectory:wxNSStringWithWxString(m_dir)
+                                                file:wxNSStringWithWxString(m_fileName)];
+    
+        if (nResult == NSOKButton)
+        {
+            m_fileNames.Add(wxStringWithNSString([thePanel filename]));
+            m_path = m_fileNames[0];
+        }
+    }
+    else //m_dialogStyle & wxOPEN
+    {
+        NSOpenPanel* thePanel = m_panel;
+    
+        nResult = [thePanel runModalForDirectory:wxNSStringWithWxString(m_dir)
+                                                file:wxNSStringWithWxString(m_fileName) 
+                                                types:m_wildcards];
+    
+        if (nResult == NSOKButton)
+        {            
+            for(unsigned i = 0; i < [[thePanel filenames] count]; ++i)
+            {
+                m_fileNames.Add(wxStringWithNSString([[thePanel filenames] objectAtIndex:(i)]));
+            }
+            
+            m_path = m_fileNames[0];
+        }
+    }        
+	
+    return nResult == NSOKButton ? wxID_OK : wxID_CANCEL;
+}
+
+#endif // wxUSE_FILEDLG
+

 	  	 
