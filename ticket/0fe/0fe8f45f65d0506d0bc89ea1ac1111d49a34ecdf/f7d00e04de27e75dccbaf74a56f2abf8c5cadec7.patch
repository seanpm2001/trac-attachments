Index: include/wx/aui/auibar.h
===================================================================
--- include/wx/aui/auibar.h	(revision 68607)
+++ include/wx/aui/auibar.h	(working copy)
@@ -590,6 +590,8 @@
     void SetHoverItem(wxAuiToolBarItem* item);
     void SetPressedItem(wxAuiToolBarItem* item);
     void RefreshOverflowState();
+	void SetToolStatusHelp(const wxString& helptext);
+	void ResetToolStatusHelp();
 
     int GetOverflowState() const;
     wxRect GetOverflowRect() const;
@@ -618,6 +620,7 @@
     void OnLeaveWindow(wxMouseEvent& evt);
     void OnCaptureLost(wxMouseCaptureLostEvent& evt);
     void OnSetCursor(wxSetCursorEvent& evt);
+	wxFrame* GetParentFrame(); 
 
 protected:
 
@@ -626,6 +629,7 @@
     wxBoxSizer* m_sizer;                // main sizer for toolbar
     wxAuiToolBarItem* m_action_item;    // item that's being acted upon (pressed)
     wxAuiToolBarItem* m_tip_item;       // item that has its tooltip shown
+    wxAuiToolBarItem* m_help_item;       // item that has its tooltip shown
     wxBitmap m_bitmap;                  // double-buffer bitmap
     wxSizerItem* m_gripper_sizer_item;
     wxSizerItem* m_overflow_sizer_item;
@@ -649,6 +653,7 @@
     bool m_gripper_visible;
     bool m_overflow_visible;
     long m_style;
+	bool m_hasPushedStatusText;    //A guard to prevent multiple pushes and pops from the status bar text
 
     bool RealizeHelper(wxClientDC& dc, bool horizontal);
     static bool IsPaneValid(long style, const wxAuiPaneInfo& pane);
Index: samples/aui/auidemo.cpp
===================================================================
--- samples/aui/auidemo.cpp	(revision 68607)
+++ samples/aui/auidemo.cpp	(working copy)
@@ -819,8 +819,8 @@
                                          wxAUI_TB_DEFAULT_STYLE | wxAUI_TB_OVERFLOW);
     tb3->SetToolBitmapSize(wxSize(16,16));
     wxBitmap tb3_bmp1 = wxArtProvider::GetBitmap(wxART_FOLDER, wxART_OTHER, wxSize(16,16));
-    tb3->AddTool(ID_SampleItem+16, wxT("Check 1"), tb3_bmp1, wxT("Check 1"), wxITEM_CHECK);
-    tb3->AddTool(ID_SampleItem+17, wxT("Check 2"), tb3_bmp1, wxT("Check 2"), wxITEM_CHECK);
+    tb3->AddTool(ID_SampleItem+16, wxT("Check 1"), tb3_bmp1, wxNullBitmap, wxITEM_CHECK, wxT("Check 1"), wxT("Check 1status text"), NULL);
+    tb3->AddTool(ID_SampleItem+17, wxT("Check 2"), tb3_bmp1, wxNullBitmap, wxITEM_CHECK, wxT("Check 2"), wxT("Check 2status text"), NULL);
     tb3->AddTool(ID_SampleItem+18, wxT("Check 3"), tb3_bmp1, wxT("Check 3"), wxITEM_CHECK);
     tb3->AddTool(ID_SampleItem+19, wxT("Check 4"), tb3_bmp1, wxT("Check 4"), wxITEM_CHECK);
     tb3->AddSeparator();
Index: src/aui/auibar.cpp
===================================================================
--- src/aui/auibar.cpp	(revision 68607)
+++ src/aui/auibar.cpp	(working copy)
@@ -35,6 +35,7 @@
 
 #include "wx/aui/auibar.h"
 #include "wx/aui/framemanager.h"
+#include "wx/aui/floatpane.h"
 
 #ifdef __WXMAC__
 #include "wx/osx/private.h"
@@ -818,6 +819,7 @@
     m_action_pos = wxPoint(-1,-1);
     m_action_item = NULL;
     m_tip_item = NULL;
+    m_help_item = NULL;
     m_art = new wxAuiDefaultToolBarArt;
     m_tool_packing = 2;
     m_tool_border_padding = 3;
@@ -841,6 +843,7 @@
     if (style & wxAUI_TB_HORZ_LAYOUT)
         SetToolTextOrientation(wxAUI_TBTOOL_TEXT_RIGHT);
     SetBackgroundStyle(wxBG_STYLE_CUSTOM);
+    m_hasPushedStatusText = false;
 }
 
 
@@ -2541,6 +2544,12 @@
             m_action_item = NULL;
             return;
         }
+            // Remove the Statusbar Help
+            if ( m_hasPushedStatusText )
+            {
+                m_hasPushedStatusText = false;
+                 ResetToolStatusHelp();
+            }        
 
         UnsetToolTip();
 
@@ -2813,7 +2822,7 @@
         else
             SetHoverItem(hit_item);
 
-        // tooltips handling
+        // tooltips  and statusbar text handling
         wxAuiToolBarItem* packing_hit_item;
         packing_hit_item = FindToolByPositionWithPacking(evt.GetX(), evt.GetY());
         if (packing_hit_item)
@@ -2827,9 +2836,34 @@
                 else
                     UnsetToolTip();
             }
+
+            if (packing_hit_item != m_help_item)
+            {
+                m_help_item = packing_hit_item;
+
+                // Remove the previous Statusbar Help
+                if ( m_hasPushedStatusText )
+                {
+                    m_hasPushedStatusText = false;
+                    ResetToolStatusHelp();
+                }        
+                // Show the status bar Help 
+                if ( !packing_hit_item->long_help.empty() )
+                {
+                     SetToolStatusHelp(packing_hit_item->long_help);
+                }
+            }
         }
         else
         {
+            // Remove the Statusbar Help
+            if ( m_hasPushedStatusText )
+            {
+                m_hasPushedStatusText = false;
+                 ResetToolStatusHelp();
+            }        
+            m_help_item = NULL;
+
             UnsetToolTip();
             m_tip_item = NULL;
         }
@@ -2846,6 +2880,7 @@
     SetPressedItem(NULL);
 
     m_tip_item = NULL;
+    m_help_item = NULL;
 
     // we have to reset those here, because the mouse-up handlers which do
     // it usually won't be called if we let go of a mouse button while we
@@ -2888,6 +2923,58 @@
     evt.SetCursor(cursor);
 }
 
+wxFrame* wxAuiToolBar::GetParentFrame() 
+{ 
+    wxAuiFloatingFrame* parentFloatingFrame = wxDynamicCast(GetParent(), wxAuiFloatingFrame);
+    if ( parentFloatingFrame )
+    {
+        wxFrame* parentFrame = wxDynamicCast(parentFloatingFrame->GetParent(), wxFrame);
 
+        return (parentFrame);
+    }
+    else // we're not a floating pane
+    {
+        wxFrame* parentFrame = wxDynamicCast(GetParent(), wxFrame);
+
+        return (parentFrame);
+    }
+}
+
+void wxAuiToolBar::SetToolStatusHelp(const wxString& helptext)
+{
+
+    wxFrame * frame = GetParentFrame();
+    if ( frame )
+    {
+        wxStatusBar *sb = frame->GetStatusBar();
+
+        if ( sb )
+        {
+            // Set the Status Text
+            if ( !m_hasPushedStatusText )
+            {
+                m_hasPushedStatusText = true;
+                sb->PushStatusText(helptext);
+            }
+        }
+    }
+}
+
+void wxAuiToolBar::ResetToolStatusHelp()
+{
+
+    wxFrame * frame = GetParentFrame();
+    if ( frame )
+    {
+        wxStatusBar *sb = frame->GetStatusBar();
+
+        if ( sb )
+        {
+            // Remove the Statusbar Help
+            sb->PopStatusText();
+		}
+    }
+}
+
+
 #endif // wxUSE_AUI
-
