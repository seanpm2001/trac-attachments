Index: include/wx/msw/checklst.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/msw/checklst.h,v
retrieving revision 1.14
diff -u -r1.14 checklst.h
--- include/wx/msw/checklst.h	5 May 2002 23:09:36 -0000	1.14
+++ include/wx/msw/checklst.h	13 Aug 2002 09:30:36 -0000
@@ -48,6 +48,7 @@
 
   // accessors
   size_t GetItemHeight() const { return m_nItemHeight; }
+  int GetItemAtPosition(long x, long y) const;
 
 protected:
   // we create our items ourselves and they have non-standard size,
Index: src/msw/checklst.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/msw/checklst.cpp,v
retrieving revision 1.31
diff -u -r1.31 checklst.cpp
--- src/msw/checklst.cpp	5 May 2002 23:09:37 -0000	1.31
+++ src/msw/checklst.cpp	13 Aug 2002 09:30:43 -0000
@@ -443,20 +443,9 @@
 {
   // clicking on the item selects it, clicking on the checkmark toggles
   if ( event.GetX() <= wxOwnerDrawn::GetDefaultMarginWidth() ) {
-    #ifdef __WIN32__
-      size_t nItem = (size_t)::SendMessage
-                               (
-                                (HWND)GetHWND(),
-                                LB_ITEMFROMPOINT,
-                                0,
-                                MAKELPARAM(event.GetX(), event.GetY())
-                               );
-    #else // Win16
-        // FIXME this doesn't work when the listbox is scrolled!
-        size_t nItem = ((size_t)event.GetY()) / m_nItemHeight;
-    #endif // Win32/16
+    int nItem = GetItemAtPosition(event.GetX(), event.GetY());
 
-    if ( nItem < (size_t)m_noItems )
+    if ( nItem >= 0 )
       GetItem(nItem)->Toggle();
     //else: it's not an error, just click outside of client zone
   }
@@ -464,6 +453,27 @@
     // implement default behaviour: clicking on the item selects it
     event.Skip();
   }
+}
+
+int wxCheckListBox::GetItemAtPosition(long x, long y) const
+{
+  #ifdef __WIN32__
+    size_t nItem = (size_t)::SendMessage
+                             (
+                              (HWND)GetHWND(),
+                              LB_ITEMFROMPOINT,
+                              0,
+                              MAKELPARAM(x, y)
+                             );
+  #else // Win16
+    // FIXME this doesn't work when the listbox is scrolled!
+    size_t nItem = ((size_t)y) / m_nItemHeight;
+  #endif // Win32/16
+
+  if (nItem >= m_noItems)
+    return -1;
+  else
+    return nItem;
 }
 
 #endif

 	  	 
