Index: wxWidgets/src/common/artprov.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/src/common/artprov.cpp,v
retrieving revision 1.18
diff -b -u -2 -r1.18 artprov.cpp
--- wxWidgets/src/common/artprov.cpp	2005/03/04 18:33:47	1.18
+++ wxWidgets/src/common/artprov.cpp	2005/03/10 04:06:22
@@ -152,5 +152,5 @@
 /*static*/ wxBitmap wxArtProvider::GetBitmap(const wxArtID& id,
                                              const wxArtClient& client,
-                                             const wxSize& reqSize)
+                                             const wxSize& size)
 {
     // safety-check against writing client,id,size instead of id,client,size:
@@ -158,8 +158,6 @@
 
     wxCHECK_MSG( sm_providers, wxNullBitmap, _T("no wxArtProvider exists") );
-
-    wxSize bestSize = (reqSize != wxDefaultSize) ? reqSize : GetSize(client);
 
-    wxString hashId = wxArtProviderCache::ConstructHashID(id, client, bestSize);
+    wxString hashId = wxArtProviderCache::ConstructHashID(id, client, size);
 
     wxBitmap bmp;
@@ -169,23 +167,13 @@
              node; node = node->GetNext())
         {
-            bmp = node->GetData()->CreateBitmap(id, client, bestSize);
+            bmp = node->GetData()->CreateBitmap(id, client, size);
             if ( bmp.Ok() )
             {
 #if wxUSE_IMAGE
-                int bmp_w = bmp.GetWidth();
-                int bmp_h = bmp.GetHeight();
-                // want default size but it's smaller, paste into transparent image
-                if ((reqSize == wxDefaultSize) && 
-                    (bmp_h < bestSize.x) && (bmp_w < bestSize.y))
-                {
-                     wxPoint offset((bestSize.x - bmp_w)/2, (bestSize.y - bmp_h)/2);
-                     wxImage img = bmp.ConvertToImage();
-                     img.Resize(bestSize, offset);
-                     bmp = wxBitmap(img);
-                }
-                else if ( (bmp_w != bestSize.x) || (bmp_h != bestSize.y) )
+                if ( size != wxDefaultSize &&
+                     (bmp.GetWidth() != size.x || bmp.GetHeight() != size.y) )
                 {
                     wxImage img = bmp.ConvertToImage();
-                    img.Rescale(bestSize.x, bestSize.y);
+                    img.Rescale(size.x, size.y);
                     bmp = wxBitmap(img);
                 }
@@ -229,9 +217,10 @@
         if (node)
             return node->GetData()->DoGetSize(client);
+    }    
             
         // else return platform dependent size
-    }    
     
 #ifdef __WXGTK__
+    // Gtk has specific sizes for each client, see artgtk.cpp
     GtkIconSize gtk_size = wxArtClientToIconSize(client);
     gint width, height;
@@ -239,6 +228,7 @@
     return wxSize(width, height);
 #else 
+    // return a suitable size hint depending on the platform
     if (client == wxART_TOOLBAR)
-        return wxSize(32, 32);
+        return wxSize(16, 15);
     else if (client == wxART_MENU)
         return wxSize(16, 15);
@@ -247,6 +237,6 @@
     else if (client == wxART_BUTTON)
         return wxSize(16, 15);
-    else
-        return wxSize(16, 15); // this is arbitrary    
+    else // wxART_OTHER or perhaps a user's client, no specified size
+        return wxDefaultSize; 
 #endif 
 }
Index: wxWidgets/src/common/artstd.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/src/common/artstd.cpp,v
retrieving revision 1.17
diff -b -u -2 -r1.17 artstd.cpp
--- wxWidgets/src/common/artstd.cpp	2004/11/27 23:23:41	1.17
+++ wxWidgets/src/common/artstd.cpp	2005/03/10 04:06:23
@@ -144,11 +144,5 @@
 #undef static
 
-// ----------------------------------------------------------------------------
-// CreateBitmap routine
-// ----------------------------------------------------------------------------
-
-wxBitmap wxDefaultArtProvider::CreateBitmap(const wxArtID& id,
-                                            const wxArtClient& WXUNUSED(client),
-                                            const wxSize& WXUNUSED(size))
+wxBitmap wxDefaultArtProvider_CreateBitmap(const wxArtID& id)
 {
     // wxMessageBox icons:
@@ -195,3 +189,38 @@
 
     return wxNullBitmap;
+}
+
+// ----------------------------------------------------------------------------
+// CreateBitmap routine
+// ----------------------------------------------------------------------------
+
+wxBitmap wxDefaultArtProvider::CreateBitmap(const wxArtID& id,
+                                            const wxArtClient& client,
+                                            const wxSize& reqSize)
+{
+    wxBitmap bmp = wxDefaultArtProvider_CreateBitmap(id);
+
+    if (bmp.Ok())
+    {
+        // fit into transparent image with desired size hint from the client
+        if (reqSize == wxDefaultSize)
+        {
+            // find out if there is a desired size for this client
+            wxSize bestSize = GetSize(client);
+            if (bestSize != wxDefaultSize)
+            {
+                int bmp_w = bmp.GetWidth();
+                int bmp_h = bmp.GetHeight();
+                // want default size but it's smaller, paste into transparent image
+                if ((bmp_h < bestSize.x) && (bmp_w < bestSize.y))
+                {
+                    wxPoint offset((bestSize.x - bmp_w)/2, (bestSize.y - bmp_h)/2);
+                    wxImage img = bmp.ConvertToImage();
+                    img.Resize(bestSize, offset);
+                    bmp = wxBitmap(img);
+                }        
+            }
+        }      
+    }
+    return bmp;
 }
Index: wxWidgets/samples/artprov/artbrows.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/samples/artprov/artbrows.h,v
retrieving revision 1.2
diff -b -u -2 -r1.2 artbrows.h
--- wxWidgets/samples/artprov/artbrows.h	2002/08/31 22:30:48	1.2
+++ wxWidgets/samples/artprov/artbrows.h	2005/03/10 04:06:23
@@ -30,4 +30,5 @@
 
     void SetArtClient(const wxArtClient& client);
+    void SetArtBitmap(const wxArtID& id, const wxArtClient& client, const wxSize& size = wxDefaultSize);
 
 private:
@@ -37,4 +38,5 @@
     wxListCtrl *m_list;
     wxStaticBitmap *m_canvas;
+    wxStaticText *m_text;
     wxString m_client;
 
Index: wxWidgets/samples/artprov/artbrows.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/samples/artprov/artbrows.cpp,v
retrieving revision 1.9
diff -b -u -2 -r1.9 artbrows.cpp
--- wxWidgets/samples/artprov/artbrows.cpp	2005/02/27 15:58:34	1.9
+++ wxWidgets/samples/artprov/artbrows.cpp	2005/03/10 04:06:23
@@ -147,4 +147,7 @@
 
     wxSizer *subsub = new wxBoxSizer(wxVERTICAL);
+    m_text = new wxStaticText(this, wxID_ANY, wxT("Size: 333x333"));
+    subsub->Add(m_text);
+
     m_canvas = new wxStaticBitmap(this, wxID_ANY, wxBitmap(null_xpm));
     subsub->Add(m_canvas);
@@ -174,4 +177,7 @@
     int index = 0;
 
+    long sel = m_list->GetNextItem(-1, wxLIST_NEXT_ALL, wxLIST_STATE_FOCUSED);
+    if (sel < 0) sel = 0;
+
     m_list->DeleteAllItems();
     FillBitmaps(img, m_list, index, client, wxSize(16, 16));
@@ -179,15 +185,14 @@
     m_list->SetColumnWidth(0, wxLIST_AUTOSIZE);
 
+    m_list->SetItemState(sel, wxLIST_STATE_FOCUSED, wxLIST_STATE_FOCUSED);
+
     m_client = client;
+    SetArtBitmap((const wxChar*)m_list->GetItemData(sel), m_client);
 }
 
 void wxArtBrowserDialog::OnSelectItem(wxListEvent &event)
 {
-
     const wxChar *data = (const wxChar*)event.GetData();
-    wxBitmap bmp = wxArtProvider::GetBitmap(data, m_client);
-    m_canvas->SetSize(bmp.GetWidth(), bmp.GetHeight());
-    m_canvas->SetBitmap(bmp);
-    Refresh();
+    SetArtBitmap(data, m_client, wxDefaultSize);
 }
 
@@ -196,3 +201,12 @@
     const wxChar *data = (const wxChar*)event.GetClientData();
     SetArtClient(data);
+}
+
+void wxArtBrowserDialog::SetArtBitmap(const wxArtID& id, const wxArtClient& client, const wxSize& size)
+{
+    wxBitmap bmp = wxArtProvider::GetBitmap(id, client, size);
+    m_canvas->SetSize(bmp.GetWidth(), bmp.GetHeight());
+    m_canvas->SetBitmap(bmp);
+    m_text->SetLabel(wxString::Format(wxT("Size: %d x %d"), bmp.GetWidth(), bmp.GetHeight()));
+    Refresh();
 }
Index: wxWidgets/docs/latex/wx/artprov.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/docs/latex/wx/artprov.tex,v
retrieving revision 1.13
diff -b -u -2 -r1.13 artprov.tex
--- wxWidgets/docs/latex/wx/artprov.tex	2005/03/04 18:33:56	1.13
+++ wxWidgets/docs/latex/wx/artprov.tex	2005/03/10 04:06:24
@@ -179,7 +179,8 @@
 \func{static wxSize}{GetSize}{\param{const wxArtClient\& }{client}, \param{bool }{platform_default = false}}
 
-Returns the default size for the given art {\it client} by either using the topmost 
-wxArtProvider or if {\it platform_default} is \true then return a suitable default size for 
-{\it client} depending on the current platform.
+Returns a suitable size hint for the given {\it wxArtClient}. If 
+{\it platform_default} is \true, return a size based on the current platform, 
+otherwise return the size from the topmost wxArtProvider. {\it wxDefaultSize} may be 
+returned if the client doesn't have a specified size, like wxART_OTHER for example.
 
 \membersection{wxArtProvider::PopProvider}\label{wxartproviderctor}

 	  	 
