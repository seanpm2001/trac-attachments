Index: include/wx/protocol/ftp.h
===================================================================
--- include/wx/protocol/ftp.h	(revision 59259)
+++ include/wx/protocol/ftp.h	(working copy)
@@ -21,6 +21,22 @@
 #include "wx/protocol/protocol.h"
 #include "wx/url.h"
 
+class WXDLLIMPEXP_NET wxFTPLog : public wxObject
+{
+public:
+    wxFTPLog();
+
+    void EnableDetailedLogging() { m_bVerbose = true; }
+    bool IsDetailedLogging() const { return m_bVerbose; }
+    void LogString(const wxString&);
+
+protected:
+    virtual void DoLogString(const wxString&);
+
+private:
+    bool m_bVerbose;
+};
+
 class WXDLLIMPEXP_NET wxFTP : public wxProtocol
 {
 public:
@@ -115,6 +131,21 @@
                  const wxString& wildcard = wxEmptyString,
                  bool details = false);
 
+    void SetLog(wxFTPLog* log)
+    {
+        wxDELETE(m_log);
+        m_log = log;
+    }
+    wxFTPLog* GetLog() const
+    {
+        return m_log;
+    }
+    wxFTPLog* DetachLog()
+    {
+        wxFTPLog* log = GetLog();
+        SetLog(NULL);
+        return log;
+    }
 protected:
     // this executes a simple ftp command with the given argument and returns
     // true if it its return code starts with '2'
@@ -155,6 +186,8 @@
 
     bool            m_bPassive;
 
+    wxFTPLog*       m_log;
+
     // following is true when  a read or write times out, we then assume
     // the connection is dead and abort. we avoid additional delays this way
     bool            m_bEncounteredError;
Index: src/common/ftp.cpp
===================================================================
--- src/common/ftp.cpp	(revision 59259)
+++ src/common/ftp.cpp	(working copy)
@@ -36,7 +36,6 @@
     #include <stdlib.h>
     #include "wx/string.h"
     #include "wx/utils.h"
-    #include "wx/log.h"
     #include "wx/intl.h"
     #include "wx/wxcrtvararg.h"
 #endif // WX_PRECOMP
@@ -70,12 +69,28 @@
 // implementation
 // ============================================================================
 
+wxFTPLog::wxFTPLog() : wxObject(), m_bVerbose(false)
+{
+}
+
+void wxFTPLog::LogString(const wxString& str)
+{
+    DoLogString(str);
+}
+
+void wxFTPLog::DoLogString(const wxString& WXUNUSED_UNLESS_DEBUG(str))
+{
+    wxLogTrace(FTP_TRACE_MASK, str);
+}
+
 // ----------------------------------------------------------------------------
 // wxFTP constructor and destructor
 // ----------------------------------------------------------------------------
 
 wxFTP::wxFTP()
 {
+    m_log = NULL;
+
     m_streaming = false;
     m_currentTransfermode = NONE;
 
@@ -99,6 +114,7 @@
 
     // now this issues a "QUIT" command to tell the server we are
     Close();
+    wxDELETE(m_log);
 }
 
 // ----------------------------------------------------------------------------
@@ -246,7 +262,7 @@
     }
 
 #ifdef __WXDEBUG__
-    // don't show the passwords in the logs (even in debug ones)
+    // don't display the passwords in the logs (even in debug ones)
     wxString cmd, password;
     if ( command.Upper().StartsWith(_T("PASS "), &password) )
     {
@@ -257,7 +273,12 @@
         cmd = command;
     }
 
-    wxLogTrace(FTP_TRACE_MASK, _T("==> %s"), cmd.c_str());
+    if (m_log)
+    {
+        m_log->LogString(m_log->IsDetailedLogging()
+           ? wxString::Format(wxT("==> %s"), cmd)
+           : cmd);
+    }
 #endif // __WXDEBUG__
 
     m_lastError = wxPROTO_NOERR;
@@ -317,10 +338,10 @@
             {
                 badReply = true;
             }
-            else
+            else if (m_log && m_log->IsDetailedLogging() )
             {
-                wxLogTrace(FTP_TRACE_MASK, _T("<== %s %s"),
-                           code.c_str(), line.c_str());
+                m_log->LogString(wxString::Format(wxT("<== %s %s"),
+                       code, line));
             }
         }
         else // line has at least 4 chars
@@ -331,8 +352,13 @@
             if ( firstLine )
             {
                 code = wxString(line, LEN_CODE);
-                wxLogTrace(FTP_TRACE_MASK, _T("<== %s %s"),
-                           code.c_str(), line.c_str() + LEN_CODE + 1);
+                
+                if (m_log)
+                {
+                    m_log->LogString(m_log->IsDetailedLogging() 
+                       ? wxString::Format(wxT("<== %s %s"), code, line.c_str() + LEN_CODE + 1)
+                       : (line.c_str() + LEN_CODE + 1));
+                }
 
                 switch ( chMarker )
                 {
@@ -358,14 +384,19 @@
                         endOfReply = true;
                     }
 
-                    wxLogTrace(FTP_TRACE_MASK, _T("<== %s %s"),
-                               code.c_str(), line.c_str() + LEN_CODE + 1);
+                    if (m_log)
+                    {
+                        m_log->LogString(m_log->IsDetailedLogging()
+                            ? wxString::Format(wxT("<== %s %s"), code.c_str(), line.c_str() + LEN_CODE + 1)
+                            : (line.c_str() + LEN_CODE + 1));
+                    }
                 }
-                else
+                else if (m_log)
                 {
                     // just part of reply
-                    wxLogTrace(FTP_TRACE_MASK, _T("<== %s %s"),
-                               code.c_str(), line.c_str());
+                    m_log->LogString(m_log->IsDetailedLogging()
+                        ? wxString::Format(wxT("<== %s %s"), code, line)
+                        : line);
                 }
             }
         }
@@ -1008,8 +1039,10 @@
                                           &filesize) != 9 )
                             {
                                 // Hmm... Invalid response
-                                wxLogTrace(FTP_TRACE_MASK,
-                                           _T("Invalid LIST response"));
+                                if (m_log && m_log->IsDetailedLogging())
+                                {
+                                    m_log->LogString(wxT("Invalid LIST response"));
+                                }
                             }
                         }
                         else // Windows-style response (?)
@@ -1019,8 +1052,10 @@
                                           &filesize) != 4 )
                             {
                                 // something bad happened..?
-                                wxLogTrace(FTP_TRACE_MASK,
-                                           _T("Invalid or unknown LIST response"));
+                                if (m_log && m_log->IsDetailedLogging())
+                                {
+                                    m_log->LogString(wxT("Invalid or unknown LIST response"));
+                                }
                             }
                         }
                     }
