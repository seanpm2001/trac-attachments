Index: include/wx/generic/grid.h
===================================================================
--- include/wx/generic/grid.h	(revision 50678)
+++ include/wx/generic/grid.h	(working copy)
@@ -1120,8 +1120,10 @@
     // ------ display update functions
     //
     wxArrayInt CalcRowLabelsExposed( const wxRegion& reg );
+    int CalcRowLabelsBottom();
 
     wxArrayInt CalcColLabelsExposed( const wxRegion& reg );
+    int CalcColLabelsRight();
     wxGridCellCoordsArray CalcCellsExposed( const wxRegion& reg );
 
 
Index: src/generic/grid.cpp
===================================================================
--- src/generic/grid.cpp	(revision 50678)
+++ src/generic/grid.cpp	(working copy)
@@ -3762,6 +3762,7 @@
   : wxWindow( parent, id, pos, size, wxWANTS_CHARS | wxBORDER_NONE | wxFULL_REPAINT_ON_RESIZE )
 {
     m_owner = parent;
+    SetBackgroundStyle(wxBG_STYLE_CUSTOM);
 }
 
 void wxGridRowLabelWindow::OnPaint( wxPaintEvent& WXUNUSED(event) )
@@ -3779,8 +3780,22 @@
     wxPoint pt = dc.GetDeviceOrigin();
     dc.SetDeviceOrigin( pt.x, pt.y-y );
 
-    wxArrayInt rows = m_owner->CalcRowLabelsExposed( GetUpdateRegion() );
+    const wxRegion region( GetUpdateRegion() );
+    wxArrayInt rows = m_owner->CalcRowLabelsExposed( region );
     m_owner->DrawRowLabels( dc, rows );
+
+    wxRect rect( region.GetBox() );
+    int lb = m_owner->CalcRowLabelsBottom();
+    int h = rect.GetBottom() + y - lb + 1;
+    if (h > 0)
+    {
+        rect.SetTop( lb );
+        rect.SetHeight( h );
+        dc.SetPen( *wxTRANSPARENT_PEN );
+        dc.SetBrush( wxBrush(GetBackgroundColour()) );
+        dc.SetBackgroundMode( wxSOLID );
+        dc.DrawRectangle( rect );
+    }
 }
 
 void wxGridRowLabelWindow::OnMouseEvent( wxMouseEvent& event )
@@ -3833,6 +3848,7 @@
   : wxWindow( parent, id, pos, size, wxWANTS_CHARS | wxBORDER_NONE | wxFULL_REPAINT_ON_RESIZE )
 {
     m_owner = parent;
+    SetBackgroundStyle(wxBG_STYLE_CUSTOM);
 }
 
 void wxGridColLabelWindow::OnPaint( wxPaintEvent& WXUNUSED(event) )
@@ -3853,8 +3869,22 @@
     else
         dc.SetDeviceOrigin( pt.x-x, pt.y );
 
-    wxArrayInt cols = m_owner->CalcColLabelsExposed( GetUpdateRegion() );
+    const wxRegion region( GetUpdateRegion() );
+    wxArrayInt cols = m_owner->CalcColLabelsExposed( region );
     m_owner->DrawColLabels( dc, cols );
+
+    wxRect rect( region.GetBox() );
+    int lr = m_owner->CalcColLabelsRight();
+    int w = rect.GetRight() + x - lr + 1;
+    if (w > 0)
+    {
+        rect.SetLeft( lr );
+        rect.SetWidth( w );
+        dc.SetPen( *wxTRANSPARENT_PEN );
+        dc.SetBrush( wxBrush(GetBackgroundColour()) );
+        dc.SetBackgroundMode( wxSOLID );
+        dc.DrawRectangle( rect );
+    }
 }
 
 void wxGridColLabelWindow::OnMouseEvent( wxMouseEvent& event )
@@ -5132,6 +5162,11 @@
     return rowlabels;
 }
 
+int wxGrid::CalcRowLabelsBottom()
+{
+    return m_numRows ? GetRowBottom(m_numRows - 1) : 0;
+}
+
 wxArrayInt wxGrid::CalcColLabelsExposed( const wxRegion& reg )
 {
     wxRegionIterator iter( reg );
@@ -5186,6 +5221,11 @@
     return colLabels;
 }
 
+int wxGrid::CalcColLabelsRight()
+{
+    return m_numCols ? GetColRight(m_numCols - 1) : 0;
+}
+
 wxGridCellCoordsArray wxGrid::CalcCellsExposed( const wxRegion& reg )
 {
     wxRegionIterator iter( reg );
@@ -7927,6 +7967,16 @@
     dc.DrawLine( 1, rowTop, m_rowLabelWidth - 1, rowTop );
 #endif
 
+    rect.SetX( 2 );
+    rect.SetY( GetRowTop(row) + 1 );
+    rect.SetWidth( m_rowLabelWidth - 3 );
+    rect.SetHeight( GetRowHeight(row) - 2 );
+
+    dc.SetBrush( wxBrush(m_rowLabelWin->GetBackgroundColour()) );
+    dc.SetBackgroundMode( wxSOLID );
+    dc.SetPen( *wxTRANSPARENT_PEN );
+    dc.DrawRectangle( rect );
+
     dc.SetBackgroundMode( wxTRANSPARENT );
     dc.SetTextForeground( GetLabelTextColour() );
     dc.SetFont( GetLabelFont() );
@@ -7934,10 +7984,7 @@
     int hAlign, vAlign;
     GetRowLabelAlignment( &hAlign, &vAlign );
 
-    rect.SetX( 2 );
-    rect.SetY( GetRowTop(row) + 2 );
-    rect.SetWidth( m_rowLabelWidth - 4 );
-    rect.SetHeight( GetRowHeight(row) - 4 );
+    rect.Inflate( -1, -1 );
     DrawTextRectangle( dc, GetRowLabelValue( row ), rect, hAlign, vAlign );
 }
 
@@ -7988,6 +8035,16 @@
     dc.DrawLine( colLeft, 1, colRight, 1 );
 #endif
 
+    rect.SetX( colLeft + 1 );
+    rect.SetY( 2 );
+    rect.SetWidth( GetColWidth(col) - 2 );
+    rect.SetHeight( m_colLabelHeight - 3 );
+
+    dc.SetBrush( wxBrush(m_rowLabelWin->GetBackgroundColour()) );
+    dc.SetBackgroundMode( wxSOLID );
+    dc.SetPen( *wxTRANSPARENT_PEN );
+    dc.DrawRectangle( rect );
+
     dc.SetBackgroundMode( wxTRANSPARENT );
     dc.SetTextForeground( GetLabelTextColour() );
     dc.SetFont( GetLabelFont() );
@@ -7996,10 +8053,7 @@
     GetColLabelAlignment( &hAlign, &vAlign );
     orient = GetColLabelTextOrientation();
 
-    rect.SetX( colLeft + 2 );
-    rect.SetY( 2 );
-    rect.SetWidth( GetColWidth(col) - 4 );
-    rect.SetHeight( m_colLabelHeight - 4 );
+    rect.Inflate( -1, -1 );
     DrawTextRectangle( dc, GetColLabelValue( col ), rect, hAlign, vAlign, orient );
 }
 

 	  	 
