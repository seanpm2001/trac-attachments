diff -rU2 wxWidgets.orig/include/wx/msw/radiobox.h wxWidgets/include/wx/msw/radiobox.h
--- wxWidgets.orig/include/wx/msw/radiobox.h	2005-04-13 07:01:04.000000000 +1000
+++ wxWidgets/include/wx/msw/radiobox.h	2005-04-23 09:25:06.000000000 +1000
@@ -147,7 +147,4 @@
 #ifndef __WXWINCE__
     virtual WXHRGN MSWGetRegionWithoutChildren();
-    virtual WXLRESULT MSWWindowProc(WXUINT nMsg,
-                                    WXWPARAM wParam,
-                                    WXLPARAM lParam);
 #endif // __WXWINCE__
 
diff -rU2 wxWidgets.orig/src/msw/radiobox.cpp wxWidgets/src/msw/radiobox.cpp
--- wxWidgets.orig/src/msw/radiobox.cpp	2005-04-14 06:56:14.000000000 +1000
+++ wxWidgets/src/msw/radiobox.cpp	2005-04-23 09:17:57.000000000 +1000
@@ -668,28 +668,4 @@
 }
 
-WXLRESULT
-wxRadioBox::MSWWindowProc(WXUINT nMsg, WXWPARAM wParam, WXLPARAM lParam)
-{
-    if ( nMsg == WM_PRINTCLIENT )
-    {
-        // we have to process WM_PRINTCLIENT ourselves as otherwise the radio
-        // buttons background would never be drawn unless we have a parent with
-        // non default background
-
-        // so check first if we have one
-        if ( !HandlePrintClient((WXHDC)wParam) )
-        {
-            // no, we don't, erase the background ourselves (don't use our own
-            // colour as with static box, see comments there)
-            wxBrush brush(GetParent()->GetBackgroundColour());
-            wxFillRect(GetHwnd(), (HDC)wParam, GetHbrushOf(brush));
-        }
-
-        return 0;
-    }
-
-    return wxStaticBox::MSWWindowProc(nMsg, wParam, lParam);
-}
-
 #endif // __WXWINCE__
 
diff -rU2 wxWidgets.orig/src/msw/statbox.cpp wxWidgets/src/msw/statbox.cpp
--- wxWidgets.orig/src/msw/statbox.cpp	2005-04-22 05:37:16.000000000 +1000
+++ wxWidgets/src/msw/statbox.cpp	2005-04-23 09:24:33.000000000 +1000
@@ -198,4 +198,22 @@
     }
 
+    if ( nMsg == WM_PRINTCLIENT )
+    {
+        // we have to process WM_PRINTCLIENT ourselves as otherwise child
+        // windows' background (eg buttons in radio box) would never be drawn
+        // unless we have a parent with non default background
+
+        // so check first if we have one
+        if ( !HandlePrintClient((WXHDC)wParam) )
+        {
+            // no, we don't, erase the background ourselves
+            // (don't use our own) - see PaintBackground for explanation
+            wxBrush brush(GetParent()->GetBackgroundColour());
+            wxFillRect(GetHwnd(), (HDC)wParam, GetHbrushOf(brush));
+        }
+
+        return 0;
+    }
+
     return wxControl::MSWWindowProc(nMsg, wParam, lParam);
 }
@@ -264,5 +282,5 @@
             continue;
         }
-        
+
         LONG style = ::GetWindowLong(child, GWL_STYLE);
         wxString str(wxGetWindowClass(child));
@@ -276,5 +294,5 @@
             continue;
         }
-        
+
         ::GetWindowRect(child, &rc);
         if ( ::RectInRegion(hrgn, &rc) )
@@ -286,5 +304,5 @@
                 style &= ~WS_CLIPSIBLINGS;
                 ::SetWindowLong(child, GWL_STYLE, style);
-                
+
                 // MSDN: "If you have changed certain window data using
                 // SetWindowLong, you must call SetWindowPos to have the

 	  	 
