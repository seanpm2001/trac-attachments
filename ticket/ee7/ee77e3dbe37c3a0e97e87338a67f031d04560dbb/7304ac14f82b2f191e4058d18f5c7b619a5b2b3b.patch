Index: src/aui/auibook.cpp
===================================================================
--- src/aui/auibook.cpp	(revision 67248)
+++ src/aui/auibook.cpp	(working copy)
@@ -4184,8 +4184,7 @@
 
     wxAuiPaneInfoArray& all_panes = m_mgr.GetAllPanes();
     size_t i, pane_count = all_panes.GetCount();
-    for (i = 0; i < pane_count; ++i)
-    {
+    for (i = 0; i < pane_count; ++i) {
         wxAuiPaneInfo& pane = all_panes.Item(i);
         if (pane.name == wxT("dummy"))
             continue;
@@ -4441,6 +4440,59 @@
     return m_tab_ctrl_height;
 }
 
+wxAuiTabCtrl* GetNextTabCtrl( wxAuiTabCtrl* current, wxAuiManager& mgr )
+{
+    wxAuiPaneInfoArray& allPanes = mgr.GetAllPanes();
+    for ( size_t i = 0; i != allPanes.GetCount(); i++ ){
+        wxTabFrame* tabFrame = (wxTabFrame*)allPanes.Item(i).window;
+        if ( tabFrame->m_tabs != current ){
+            continue;
+        }
+        for ( size_t j = i + 1; j < allPanes.GetCount(); j++ ){
+            if ( allPanes.Item(j).name == wxT("dummy") ){
+                continue;
+            }
+            return ((wxTabFrame*)(allPanes.Item(j).window))->m_tabs;
+        }
+    }
+    for ( size_t j = 0; j != allPanes.GetCount(); j++ ){
+        if ( allPanes.Item(j).name == wxT("dummy") ){
+            continue;
+        }
+        return ((wxTabFrame*)(allPanes.Item(j).window))->m_tabs;
+    }
+    return 0;
+}
+
+wxAuiTabCtrl* GetPrevTabCtrl( wxAuiTabCtrl* current, wxAuiManager& mgr )
+{
+    wxAuiPaneInfoArray& allPanes = mgr.GetAllPanes();
+    for ( int i = 0; i != allPanes.GetCount(); i++ ){
+        wxTabFrame* tabFrame = (wxTabFrame*)allPanes.Item(i).window;
+        if ( tabFrame->m_tabs != current ){
+            continue;
+        }
+
+        // Search for the previous pane
+        for ( int j = i - 1; j >= 0; j-- ){
+            if ( allPanes.Item(j).name == wxT("dummy") ){
+                continue;
+            }
+            return ((wxTabFrame*)(allPanes.Item(j).window))->m_tabs;
+        }
+        break;
+    }
+
+    // Search for the last valid pane
+    for ( size_t j = allPanes.GetCount(); j != 0; j-- ){
+        if ( allPanes.Item(j - 1).name == wxT("dummy") ){
+            continue;
+        }
+        return ( (wxTabFrame*)(allPanes.Item(j-1).window) )->m_tabs;
+    }
+    return 0;
+}
+
 // Gets the height of the notebook for a given page height
 int wxAuiNotebook::GetHeightForPageHeight(int pageHeight)
 {
@@ -4454,29 +4506,43 @@
 // Advances the selection, generation page selection events
 void wxAuiNotebook::AdvanceSelection(bool forward)
 {
-    if (GetPageCount() <= 1)
+    if (GetPageCount() <= 1){
         return;
+    }
 
-    int currentSelection = GetSelection();
+    wxAuiTabCtrl* tabCtrl = 0;
+    int idx = -1;
+    if( !FindTab(GetPage(GetSelection()), &tabCtrl, &idx) ){
+        // Could not find the tab control containing the currently
+        // active tab
+        return;
+    }
+    if( tabCtrl == 0 || idx < 0 ){
+        return;
+    }
 
-    if (forward)
-    {
-        if (currentSelection == (int) (GetPageCount() - 1))
-            return;
-        else if (currentSelection == -1)
-            currentSelection = 0;
-        else
-            currentSelection ++;
+    wxWindow* page = 0;
+    const size_t maxPages = tabCtrl->GetPageCount();
+    forward ? idx++: idx--;
+    if( idx < 0 ){
+        // Wraparound to the last tab control
+        wxAuiTabCtrl* prevCtrl = GetPrevTabCtrl( tabCtrl, m_mgr );
+        page = prevCtrl->GetPage(prevCtrl->GetActivePage()).window;
     }
-    else
-    {
-        if (currentSelection <= 0)
-            return;
-        else
-            currentSelection --;
+    else if ((size_t)idx < maxPages){
+        // Select the neighbouring page in the active
+        // tab control
+        page = tabCtrl->GetPage(idx).window;
     }
+    else if ( maxPages > 0 ){
+        // Wrap around to the first tab control
+        wxAuiTabCtrl* nextCtrl = GetNextTabCtrl( tabCtrl, m_mgr );
+        page = nextCtrl->GetPage(nextCtrl->GetActivePage()).window;
+    }
 
-    SetSelection(currentSelection);
+    if( page != 0 ){
+        SetSelection( GetPageIndex(page) );
+    }
 }
 
 // Shows the window menu
