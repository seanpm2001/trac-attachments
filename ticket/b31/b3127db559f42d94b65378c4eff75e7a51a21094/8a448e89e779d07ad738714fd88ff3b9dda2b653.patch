diff -ru6 -xCVS -x.#* -x*.orig -x*.rej -x*.lib -x*.obj -x*.pch -x*.pdb -x*~ wxWindows.orig/include/wx/msw/listctrl.h wxWindows/include/wx/msw/listctrl.h
--- wxWindows.orig/include/wx/msw/listctrl.h	Sun Jul 21 09:29:10 2002
+++ wxWindows/include/wx/msw/listctrl.h	Sat Nov 16 11:05:42 2002
@@ -137,12 +137,13 @@
     // or the total number of items in the list control (icon
     // or small icon view)
     int GetCountPerPage() const;
 
     // Gets the edit control for editing labels.
     wxTextCtrl* GetEditControl() const;
+    wxTextCtrl* GetSubclassedEditControl(wxClassInfo* textControlClass) ;
 
     // Gets information about the item
     bool GetItem(wxListItem& info) const ;
 
     // Sets information about the item
     bool SetItem(wxListItem& info) ;
diff -ru6 -xCVS -x.#* -x*.orig -x*.rej -x*.lib -x*.obj -x*.pch -x*.pdb -x*~ wxWindows.orig/src/msw/listctrl.cpp wxWindows/src/msw/listctrl.cpp
--- wxWindows.orig/src/msw/listctrl.cpp	Sat Nov 16 10:45:04 2002
+++ wxWindows/src/msw/listctrl.cpp	Sat Nov 16 11:20:38 2002
@@ -682,15 +682,50 @@
     return ListView_GetCountPerPage(GetHwnd());
 }
 
 // Gets the edit control for editing labels.
 wxTextCtrl* wxListCtrl::GetEditControl() const
 {
+    wxListCtrl* pListCtrl = wxConstCast(this, wxListCtrl) ;
+    WXHWND hWnd = (WXHWND)ListView_GetEditControl((HWND)GetHwnd()) ;
+    if (hWnd != ((WXHWND)m_textCtrl->GetHandle()))
+    {
+        pListCtrl->m_textCtrl->SetHWND((WXHWND)NULL) ;
+        pListCtrl->m_textCtrl->UnsubclassWin() ;
+        delete pListCtrl->m_textCtrl ;
+        pListCtrl->m_textCtrl = ((wxTextCtrl*)NULL) ;
+    }
+    if ((pListCtrl->m_textCtrl == ((wxTextCtrl*)NULL)) && (hWnd != ((WXHWND)NULL)))
+    {
+        pListCtrl->m_textCtrl = (wxTextCtrl*) new wxTextCtrl ;
+        pListCtrl->m_textCtrl->SetHWND(hWnd);
+        pListCtrl->m_textCtrl->SubclassWin(hWnd);
+        pListCtrl->m_textCtrl->SetParent(pListCtrl);
+    }
     return m_textCtrl;
 }
 
+wxTextCtrl* wxListCtrl::GetSubclassedEditControl(wxClassInfo* textControlClass)
+{
+    wxASSERT( (textControlClass->IsKindOf(CLASSINFO(wxTextCtrl))) );
+    wxTextCtrl* pTextCtrl = GetEditControl() ;
+    if(pTextCtrl->IsKindOf(textControlClass))
+    {
+        return pTextCtrl ;
+    }
+    WXHWND hwndEditControl = ((WXHWND)pTextCtrl->GetHandle()) ;
+    m_textCtrl->SetHWND((WXHWND)NULL) ;
+    m_textCtrl->UnsubclassWin() ;
+    delete m_textCtrl ;
+    m_textCtrl = (wxTextCtrl*) textControlClass->CreateObject() ;
+    m_textCtrl->SetHWND(hwndEditControl) ;
+    m_textCtrl->SubclassWin(hwndEditControl) ;
+    m_textCtrl->SetParent(this) ;
+    return m_textCtrl ;
+}
+
 // Gets information about the item
 bool wxListCtrl::GetItem(wxListItem& info) const
 {
     LV_ITEM lvItem;
     wxZeroMemory(lvItem);
 
@@ -2047,12 +2082,19 @@
             return TRUE;
 
         case LVN_ENDLABELEDITA:
         case LVN_ENDLABELEDITW:
             // logic here is inversed compared to all the other messages
             *result = event.IsAllowed();
+            if (m_textCtrl)
+            {
+                m_textCtrl->SetHWND((WXHWND)NULL) ;
+                m_textCtrl->UnsubclassWin() ;
+                delete m_textCtrl ;
+                m_textCtrl = ((wxTextCtrl*)NULL) ;
+            }
 
             return TRUE;
     }
 
     *result = !event.IsAllowed();
 

 	  	 
