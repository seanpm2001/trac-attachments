Index: src/common/statbar.cpp
===================================================================
--- src/common/statbar.cpp	(revision 58435)
+++ src/common/statbar.cpp	(working copy)
@@ -90,7 +90,7 @@
     SetStatusWidths(number, widths);
 }
 
-void wxStatusBarBase::SetStatusWidths(int WXUNUSED_UNLESS_DEBUG(n),
+void wxStatusBarBase::SetStatusWidths(int WXUNUSED_UNLESS_ASSERTIONS(n),
                                     const int widths[])
 {
     wxASSERT_MSG( (size_t)n == m_panes.GetCount(), _T("field number mismatch") );
@@ -113,7 +113,7 @@
     Refresh();
 }
 
-void wxStatusBarBase::SetStatusStyles(int WXUNUSED_UNLESS_DEBUG(n),
+void wxStatusBarBase::SetStatusStyles(int WXUNUSED_UNLESS_ASSERTIONS(n),
                                     const int styles[])
 {
     wxCHECK_RET( styles, _T("NULL pointer in SetStatusStyles") );
Index: src/common/appbase.cpp
===================================================================
--- src/common/appbase.cpp	(revision 58435)
+++ src/common/appbase.cpp	(working copy)
@@ -63,7 +63,7 @@
     #include "wx/fontmap.h"
 #endif // wxUSE_FONTMAP
 
-#ifdef __WXDEBUG__
+#ifdef __WXASSERTIONS__
     #if wxUSE_STACKWALKER
         #include "wx/stackwalk.h"
         #ifdef __WXMSW__
@@ -72,7 +72,7 @@
     #endif // wxUSE_STACKWALKER
 
     #include "wx/recguard.h"
-#endif // __WXDEBUG__
+#endif // __WXASSERTIONS__
 
 // wxABI_VERSION can be defined when compiling applications but it should be
 // left undefined when compiling the library itself, it is then set to its
@@ -85,7 +85,7 @@
 // private functions prototypes
 // ----------------------------------------------------------------------------
 
-#ifdef __WXDEBUG__
+#ifdef __WXASSERTIONS__
     // really just show the assert dialog
     static bool DoShowAssertDialog(const wxString& msg);
 
@@ -101,7 +101,7 @@
 
     // turn on the trace masks specified in the env variable WXTRACE
     static void LINKAGEMODE SetTraceMasks();
-#endif // __WXDEBUG__
+#endif // __WXASSERTIONS__
 
 // ----------------------------------------------------------------------------
 // global vars
@@ -577,7 +577,7 @@
     return true;
 }
 
-#ifdef __WXDEBUG__
+#ifdef __WXASSERTIONS__
 
 void wxAppConsoleBase::OnAssertFailure(const wxChar *file,
                                        int line,
@@ -596,7 +596,7 @@
     OnAssertFailure(file, line, NULL, cond, msg);
 }
 
-#endif // __WXDEBUG__
+#endif // __WXASSERTIONS__
 
 // ============================================================================
 // other classes implementations
@@ -635,7 +635,7 @@
     return NULL;
 }
 
-#ifdef __WXDEBUG__
+#ifdef __WXASSERTIONS__
 bool wxConsoleAppTraitsBase::ShowAssertDialog(const wxString& msg)
 {
     return wxAppTraitsBase::ShowAssertDialog(msg);
@@ -699,7 +699,7 @@
 }
 #endif // wxUSE_THREADS
 
-#ifdef __WXDEBUG__
+#ifdef __WXASSERTIONS__
 
 bool wxAppTraitsBase::ShowAssertDialog(const wxString& msgOriginal)
 {
@@ -813,7 +813,7 @@
     //else: do nothing, what can we do?
 }
 
-#ifdef  __WXDEBUG__
+#ifdef  __WXASSERTIONS__
 
 // wxASSERT() helper
 bool wxAssertIsEqual(int x, int y)
@@ -941,13 +941,13 @@
 }
 #endif // wxUSE_UNICODE
 
-#endif // __WXDEBUG__
+#endif // __WXASSERTIONS__
 
 // ============================================================================
 // private functions implementation
 // ============================================================================
 
-#ifdef __WXDEBUG__
+#ifdef __WXASSERTIONS__
 
 static void LINKAGEMODE SetTraceMasks()
 {
@@ -1073,4 +1073,4 @@
     }
 }
 
-#endif // __WXDEBUG__
+#endif // __WXASSERTIONS__
Index: src/common/appcmn.cpp
===================================================================
--- src/common/appcmn.cpp	(revision 58435)
+++ src/common/appcmn.cpp	(working copy)
@@ -465,7 +465,7 @@
     return NULL;
 }
 
-#ifdef __WXDEBUG__
+#ifdef __WXASSERTIONS__
 
 bool wxGUIAppTraitsBase::ShowAssertDialog(const wxString& msg)
 {
@@ -517,7 +517,7 @@
 #endif // !wxUSE_MSGDLG/wxUSE_MSGDLG
 }
 
-#endif // __WXDEBUG__
+#endif // __WXASSERTIONS__
 
 bool wxGUIAppTraitsBase::HasStderr()
 {
Index: src/common/datetime.cpp
===================================================================
--- src/common/datetime.cpp	(revision 58435)
+++ src/common/datetime.cpp	(working copy)
@@ -335,13 +335,13 @@
 static const long EPOCH_JDN = 2440587l;
 
 // used only in asserts
-#ifdef __WXDEBUG__
+#ifdef __WXASSERTIONS__
 // the date of JDN -0.5 (as we don't work with fractional parts, this is the
 // reference date for us) is Nov 24, 4714BC
 static const int JDN_0_YEAR = -4713;
 static const int JDN_0_MONTH = wxDateTime::Nov;
 static const int JDN_0_DAY = 24;
-#endif // __WXDEBUG__
+#endif // __WXASSERTIONS__
 
 // the constants used for JDN calculations
 static const long JDN_OFFSET         = 32046l;
Index: src/msw/bitmap.cpp
===================================================================
--- src/msw/bitmap.cpp	(revision 58435)
+++ src/msw/bitmap.cpp	(working copy)
@@ -223,8 +223,10 @@
 
 void wxBitmapRefData::Free()
 {
+#ifdef __WXDEBUG__
     wxASSERT_MSG( !m_selectedInto,
                   wxT("deleting bitmap still selected into wxMemoryDC") );
+#endif
 
 #if wxUSE_WXDIB
     wxASSERT_MSG( !m_dib, _T("forgot to call wxBitmap::UngetRawData()!") );
@@ -1519,8 +1521,10 @@
     bool ok = true;
 
     // SelectObject() will fail
+#ifdef __WXDEBUG__
     wxASSERT_MSG( !bitmap.GetSelectedInto(),
                   _T("bitmap can't be selected in another DC") );
+#endif
 
     HGDIOBJ hbmpSrcOld = ::SelectObject(srcDC, GetHbitmapOf(bitmap));
     if ( !hbmpSrcOld )
Index: src/msw/dcmemory.cpp
===================================================================
--- src/msw/dcmemory.cpp	(revision 58435)
+++ src/msw/dcmemory.cpp	(working copy)
@@ -113,10 +113,12 @@
         }
     }
 
+#ifdef __WXDEBUG__
     // check for whether the bitmap is already selected into a device context
     wxASSERT_MSG( !bitmap.GetSelectedInto() ||
                   (bitmap.GetSelectedInto() == GetOwner()),
                   wxT("Bitmap is selected in another wxMemoryDC, delete the first wxMemoryDC or use SelectObject(NULL)") );
+#endif
 
     m_selectedBitmap = bitmap;
     WXHBITMAP hBmp = m_selectedBitmap.GetHBITMAP();
Index: src/msw/listctrl.cpp
===================================================================
--- src/msw/listctrl.cpp	(revision 58435)
+++ src/msw/listctrl.cpp	(working copy)
@@ -417,8 +417,10 @@
     MAP_MODE_STYLE(wxLC_LIST, LVS_LIST)
     MAP_MODE_STYLE(wxLC_REPORT, LVS_REPORT)
 
+#ifdef __WXDEBUG__
     wxASSERT_MSG( nModes == 1,
                   _T("wxListCtrl style should have exactly one mode bit set") );
+#endif
 
 #undef MAP_MODE_STYLE
 
@@ -2989,7 +2991,7 @@
     return -1;
 }
 
-wxListItemAttr *wxListCtrl::OnGetItemAttr(long WXUNUSED_UNLESS_DEBUG(item)) const
+wxListItemAttr *wxListCtrl::OnGetItemAttr(long WXUNUSED_UNLESS_ASSERTIONS(item)) const
 {
     wxASSERT_MSG( item >= 0 && item < GetItemCount(),
                   _T("invalid item index in OnGetItemAttr()") );
Index: include/wx/app.h
===================================================================
--- include/wx/app.h	(revision 58435)
+++ include/wx/app.h	(working copy)
@@ -303,7 +303,7 @@
     // debugging support
     // -----------------
 
-#ifdef __WXDEBUG__
+#ifdef __WXASSERTIONS__
     // this function is called when an assert failure occurs, the base class
     // version does the normal processing (i.e. shows the usual assert failure
     // dialog box)
@@ -323,7 +323,7 @@
                           int line,
                           const wxChar *cond,
                           const wxChar *msg);
-#endif // __WXDEBUG__
+#endif // __WXASSERTIONS__
 
     // check that the wxBuildOptions object (constructed in the application
     // itself, usually the one from IMPLEMENT_APP() macro) matches the build
Index: include/wx/unix/apptrait.h
===================================================================
--- include/wx/unix/apptrait.h	(revision 58435)
+++ include/wx/unix/apptrait.h	(working copy)
@@ -76,7 +76,7 @@
                                                wxArrayString& desc) const;
 #endif // __WXGTK20____
 
-#if defined(__WXDEBUG__) && defined(__WXGTK20__)
+#if defined(__WXASSERTIONS__) && defined(__WXGTK20__)
     virtual bool ShowAssertDialog(const wxString& msg);
 #endif
 
Index: include/wx/debug.h
===================================================================
--- include/wx/debug.h	(revision 58435)
+++ include/wx/debug.h	(working copy)
@@ -90,7 +90,7 @@
 /*  Macros which are completely disabled in 'release' mode */
 /*  */
 /*  NB: these functions are implemented in src/common/appcmn.cpp */
-#if defined(__cplusplus) && defined(__WXDEBUG__)
+#if defined(__cplusplus) && defined(__WXASSERTIONS__)
   /*
     This function is called whenever one of debugging macros fails (i.e.
     condition is false in an assertion). To customize its behaviour, override
Index: include/wx/defs.h
===================================================================
--- include/wx/defs.h	(revision 58435)
+++ include/wx/defs.h	(working copy)
@@ -19,6 +19,9 @@
 #define FUTURE_WXWIN_COMPATIBILITY_3_0      1
 #define wxDEPRECATED_FUTURE( x )            x
 
+
+#define __WXASSERTIONS__ 1
+
 /*  ---------------------------------------------------------------------------- */
 /*  compiler and OS identification */
 /*  ---------------------------------------------------------------------------- */
@@ -656,6 +659,13 @@
     #define WXUNUSED_UNLESS_DEBUG(param)  WXUNUSED(param)
 #endif
 
+/* some arguments are only used in wxASSERT statements */
+#ifdef __WXASSERTIONS__
+    #define WXUNUSED_UNLESS_ASSERTIONS(param) param
+#else
+    #define WXUNUSED_UNLESS_ASSERTIONS(param)  WXUNUSED(param)
+#endif
+
 /*  some arguments are not used in unicode mode */
 #if wxUSE_UNICODE
     #define WXUNUSED_IN_UNICODE(param)  WXUNUSED(param)
Index: include/wx/apptrait.h
===================================================================
--- include/wx/apptrait.h	(revision 58435)
+++ include/wx/apptrait.h	(working copy)
@@ -87,7 +87,7 @@
     // functions abstracting differences between GUI and console modes
     // ------------------------------------------------------------------------
 
-#ifdef __WXDEBUG__
+#ifdef __WXASSERTIONS__
     // show the assert dialog with the specified message in GUI or just print
     // the string to stderr in console mode
     //
@@ -96,7 +96,7 @@
     //
     // return true to suppress subsequent asserts, false to continue as before
     virtual bool ShowAssertDialog(const wxString& msg) = 0;
-#endif // __WXDEBUG__
+#endif // __WXASSERTIONS__
 
     // return true if fprintf(stderr) goes somewhere, false otherwise
     virtual bool HasStderr() = 0;
@@ -177,7 +177,7 @@
 
 
 protected:
-#if wxUSE_STACKWALKER && defined( __WXDEBUG__ )
+#if wxUSE_STACKWALKER && defined( __WXASSERTIONS__ )
     // utility function: returns the stack frame as a plain wxString
     virtual wxString GetAssertStackTrace();
 #endif
@@ -232,9 +232,9 @@
 #endif // wxUSE_FONTMAP
     virtual wxRendererNative *CreateRenderer();
 
-#ifdef __WXDEBUG__
+#ifdef __WXASSERTIONS__
     virtual bool ShowAssertDialog(const wxString& msg);
-#endif // __WXDEBUG__
+#endif // __WXASSERTIONS__
     virtual bool HasStderr();
 
     virtual void ScheduleForDestroy(wxObject *object);
@@ -273,9 +273,9 @@
 #endif // wxUSE_FONTMAP
     virtual wxRendererNative *CreateRenderer();
 
-#ifdef __WXDEBUG__
+#ifdef __WXASSERTIONS__
     virtual bool ShowAssertDialog(const wxString& msg);
-#endif // __WXDEBUG__
+#endif // __WXASSERTIONS__
     virtual bool HasStderr();
 
     virtual void ScheduleForDestroy(wxObject *object);
