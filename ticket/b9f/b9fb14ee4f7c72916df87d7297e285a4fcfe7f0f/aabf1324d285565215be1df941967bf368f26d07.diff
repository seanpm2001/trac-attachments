Index: src/motif/radiobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/motif/radiobox.cpp,v
retrieving revision 1.26.2.1
diff -u -2 -r1.26.2.1 radiobox.cpp
--- src/motif/radiobox.cpp	2002/09/22 08:46:08	1.26.2.1
+++ src/motif/radiobox.cpp	2003/10/30 12:56:45
@@ -133,5 +133,5 @@
     XtSetArg (args[0], XmNorientation, ((style & wxHORIZONTAL) == wxHORIZONTAL ?
                                           XmHORIZONTAL : XmVERTICAL));
-    XtSetArg (args[1], XmNnumColumns, m_majorDim);
+    XtSetArg (args[1], XmNnumColumns, m_majorDim + 1);
 
     Widget radioBoxWidget = XmCreateRadioBox ((Widget)m_mainWidget, "radioBoxWidget", args, 2);
@@ -139,5 +139,5 @@
     //    if (style & wxFLAT)
     //        XtVaSetValues (radioBoxWidget, XmNborderWidth, 1, NULL);
-
+  
     m_radioButtons = new WXWidget[n];
     m_radioButtonLabels = new wxString[n];
@@ -159,4 +159,19 @@
     }
 
+    // This is needed to get the same resize effect as GTK and windows.
+    // Without it, the last button changes its size to fill the remaining space.
+    // Here a hidden final button is created which acts as a spacing control.
+    Widget spacer_rb = XtVaCreateManagedWidget("",
+#if wxUSE_GADGETS
+                            xmToggleButtonGadgetClass, radioBoxWidget,
+#else
+                            xmToggleButtonWidgetClass, radioBoxWidget,
+#endif
+                            XmNfontList, fontList,
+                            NULL);
+                            
+    XtVaSetValues (spacer_rb, XmNindicatorOn, 0, NULL);
+    XtSetSensitive(spacer_rb, 0);
+          
     m_font = parent->GetFont();
     ChangeFont(FALSE);

 	  	 
