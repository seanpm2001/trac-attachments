--- wx-2.8.12.0/wx/_core.py	(revision 11489)
+++ wx-2.8.12.0/wx/_core.py	(working copy)
@@ -14677,13 +14677,12 @@
 
     If you don't need to get the return value or restart the timer
     then there is no need to hold a reference to this object.  It will
-    hold a reference to itself while the timer is running (the timer
-    has a reference to self.Notify) but the cycle will be broken when
-    the timer completes, automatically cleaning up the wx.CallLater
-    object.
+    hold a reference to itself while the timer is running.
 
     :see: `wx.CallAfter`
     """
+    __RUNNING = set()
+
     def __init__(self, millis, callable, *args, **kwargs):
         self.millis = millis
         self.callable = callable
@@ -14695,10 +14694,6 @@
         self.timer = None
         self.Start()
 
-    def __del__(self):
-        self.Stop()
-
-
     def Start(self, millis=None, *args, **kwargs):
         """
         (Re)start the timer
@@ -14712,6 +14707,7 @@
         self.timer = wx.PyTimer(self.Notify)
         self.timer.Start(self.millis, wx.TIMER_ONE_SHOT)
         self.running = True
+        self.__RUNNING.add(self)
     Restart = Start
 
 
@@ -14722,6 +14718,7 @@
         if self.timer is not None:
             self.timer.Stop()
             self.timer = None
+        self.__RUNNING.discard(self)
 
 
     def GetInterval(self):
