Index: samples/html/test/test.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/html/test/test.cpp,v
retrieving revision 1.36
diff -u -r1.36 test.cpp
--- samples/html/test/test.cpp	2005/12/26 23:29:17	1.36
+++ samples/html/test/test.cpp	2006/10/06 20:23:04
@@ -71,6 +71,10 @@
     void OnForward(wxCommandEvent& event);
     void OnProcessor(wxCommandEvent& event);

+    void OnHtmlLinkClicked(wxHtmlLinkEvent& event);
+    void OnHtmlCellHover(wxHtmlCellEvent &event);
+    void OnHtmlCellClicked(wxHtmlCellEvent &event);
+
 private:
     MyHtmlWindow *m_Html;
     wxHtmlProcessor *m_Processor;
@@ -121,6 +125,10 @@
     EVT_MENU(ID_Back, MyFrame::OnBack)
     EVT_MENU(ID_Forward, MyFrame::OnForward)
     EVT_MENU(ID_Processor, MyFrame::OnProcessor)
+
+    EVT_HTMLWINDOW_LINK_CLICKED(wxID_ANY, MyFrame::OnHtmlLinkClicked)
+    EVT_HTMLWINDOW_CELL_HOVER(wxID_ANY, MyFrame::OnHtmlCellHover)
+    EVT_HTMLWINDOW_CELL_CLICKED(wxID_ANY, MyFrame::OnHtmlCellClicked)
 END_EVENT_TABLE()

 IMPLEMENT_APP(MyApp)
@@ -216,6 +224,17 @@
     m_Html->ReadCustomization(wxConfig::Get());
     m_Html->LoadFile(wxFileName(wxT("test.htm")));
     m_Html->AddProcessor(m_Processor);
+
+    wxTextCtrl *text = new wxTextCtrl(this, wxID_ANY, _T(""),
+                                      wxDefaultPosition, wxDefaultSize,
+                                      wxTE_MULTILINE);
+
+    delete wxLog::SetActiveTarget(new wxLogTextCtrl(text));
+
+    wxSizer *sz = new wxBoxSizer(wxVERTICAL);
+    sz->Add(m_Html, 3, wxGROW);
+    sz->Add(text, 1, wxGROW);
+    SetSizer(sz);
 }


@@ -270,6 +289,30 @@
 {
     m_Processor->Enable(!m_Processor->IsEnabled());
     m_Html->LoadPage(m_Html->GetOpenedPage());
+}
+
+void MyFrame::OnHtmlLinkClicked(wxHtmlLinkEvent &event)
+{
+    wxLogMessage(wxT("The url '%s' has been clicked!"), event.GetLinkInfo().GetHref().c_str());
+
+    // skipping this event the default behaviour (load the clicked URL)
+    // will happen...
+    event.Skip();
+}
+
+void MyFrame::OnHtmlCellHover(wxHtmlCellEvent &event)
+{
+    wxLogMessage(wxT("Mouse moved over cell %d at %d;%d"),
+                 event.GetCell(), event.GetPoint().x, event.GetPoint().y);
+}
+
+void MyFrame::OnHtmlCellClicked(wxHtmlCellEvent &event)
+{
+    wxLogMessage(wxT("Click over cell %d at %d;%d"),
+                 event.GetCell(), event.GetPoint().x, event.GetPoint().y);
+
+    // if we don't skip the event, OnHtmlLinkClicked won't be called!
+    event.Skip();
 }

 wxHtmlOpeningStatus MyHtmlWindow::OnOpeningURL(wxHtmlURLType WXUNUSED(type),
Index: samples/htlbox/htlbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/htlbox/htlbox.cpp,v
retrieving revision 1.21
diff -bu2 -r1.21 samples/htlbox/htlbox.cpp
--- samples/htlbox/htlbox.cpp
+++ samples/htlbox/htlbox.cpp
@@ -79,7 +79,4 @@
     virtual wxColour GetSelectedTextColour(const wxColour& colFg) const;

-    // override this method to handle mouse clicks
-    virtual void OnLinkClicked(size_t n, const wxHtmlLinkInfo& link);
-
     // flag telling us whether we should use fg colour even for the selected
     // item
@@ -89,9 +86,10 @@
     bool m_firstItemUpdated;

+public:
+
     // flag which we toggle when the user clicks on the link in 2nd item
     // to change 2nd item's text
     bool m_linkClicked;

-
 #ifdef USE_HTML_FILE
     wxTextFile m_file;
@@ -133,4 +131,8 @@
     }

+    void OnHtmlLinkClicked(wxHtmlLinkEvent& event);
+    void OnHtmlCellHover(wxHtmlCellEvent &event);
+    void OnHtmlCellClicked(wxHtmlCellEvent &event);
+
     wxSimpleHtmlListBox *GetSimpleBox()
         { return wxDynamicCast(m_hlbox, wxSimpleHtmlListBox); }
@@ -207,4 +209,11 @@
     EVT_LISTBOX(wxID_ANY, MyFrame::OnLboxSelect)
     EVT_LISTBOX_DCLICK(wxID_ANY, MyFrame::OnLboxDClick)
+
+
+    // the HTML listbox's events
+    EVT_HTMLWINDOW_LINK_CLICKED(wxID_ANY, MyFrame::OnHtmlLinkClicked)
+    EVT_HTMLWINDOW_CELL_HOVER(wxID_ANY, MyFrame::OnHtmlCellHover)
+    EVT_HTMLWINDOW_CELL_CLICKED(wxID_ANY, MyFrame::OnHtmlCellClicked)
+
 END_EVENT_TABLE()

@@ -455,4 +464,30 @@
 }

+void MyFrame::OnHtmlLinkClicked(wxHtmlLinkEvent &event)
+{
+    wxLogMessage(wxT("The url '%s' has been clicked!"), event.GetLinkInfo().GetHref().c_str());
+
+    if (GetMyBox())
+    {
+        GetMyBox()->m_linkClicked = true;
+        GetMyBox()->RefreshLine(1);
+    }
+}
+
+void MyFrame::OnHtmlCellHover(wxHtmlCellEvent &event)
+{
+    wxLogMessage(wxT("Mouse moved over cell %p at %d;%d"),
+                 event.GetCell(), event.GetPoint().x, event.GetPoint().y);
+}
+
+void MyFrame::OnHtmlCellClicked(wxHtmlCellEvent &event)
+{
+    wxLogMessage(wxT("Click over cell %p at %d;%d"),
+                 event.GetCell(), event.GetPoint().x, event.GetPoint().y);
+
+    // if we don't skip the event, OnHtmlLinkClicked won't be called!
+    event.Skip();
+}
+
 // ----------------------------------------------------------------------------
 // listbox event handlers
@@ -586,11 +621,2 @@
     RefreshLine(0);
 }
-
-void MyHtmlListBox::OnLinkClicked(size_t WXUNUSED(n),
-                                  const wxHtmlLinkInfo& WXUNUSED(link))
-{
-    m_linkClicked = true;
-
-    RefreshLine(1);
-}
-

 	  	 
