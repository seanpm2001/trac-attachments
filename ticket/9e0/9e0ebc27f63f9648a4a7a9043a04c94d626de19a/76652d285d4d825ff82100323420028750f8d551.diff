 samples/minimal/minimal.cpp | 42 +++++++++++++++++++++++++++++++++++++++++-
 1 file changed, 41 insertions(+), 1 deletion(-)

diff --git a/samples/minimal/minimal.cpp b/samples/minimal/minimal.cpp
index a78e462..4d51320 100644
--- a/samples/minimal/minimal.cpp
+++ b/samples/minimal/minimal.cpp
@@ -64,11 +64,17 @@ public:
     // ctor(s)
     MyFrame(const wxString& title);
 
+    void OnIconize(wxIconizeEvent &event);
+    void OnMinButtonPress(wxCommandEvent &event);
+    void OnTimer(wxTimerEvent &event);
+
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
 
 private:
+    wxTimer RestoreTimer;
+
     // any class wishing to process wxWidgets events must use this macro
     DECLARE_EVENT_TABLE()
 };
@@ -143,7 +149,7 @@ bool MyApp::OnInit()
 
 // frame constructor
 MyFrame::MyFrame(const wxString& title)
-       : wxFrame(NULL, wxID_ANY, title)
+       : wxFrame(NULL, wxID_ANY, title), RestoreTimer(this, -1)
 {
     // set the frame icon
     SetIcon(wxICON(sample));
@@ -172,8 +178,42 @@ MyFrame::MyFrame(const wxString& title)
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+
+    wxButton* MinButton = new wxButton(this, -1, _T("Minimise && Hide for 2sec"));
+    wxTextCtrl* Display = new wxTextCtrl(this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE | wxTE_READONLY);
+
+    wxLog::SetActiveTarget(new wxLogTextCtrl(Display));
+
+    wxBoxSizer *MainSizer = new wxBoxSizer(wxVERTICAL);
+    MainSizer->Add(MinButton, 0, wxEXPAND | wxALIGN_CENTER | wxALL, 5);
+    MainSizer->Add(Display, 1, wxEXPAND | wxALIGN_CENTER | wxALL, 5);
+    SetSizer(MainSizer);
+
+    Connect(wxEVT_ICONIZE, wxIconizeEventHandler(MyFrame::OnIconize));
+    Connect(wxEVT_TIMER, wxTimerEventHandler(MyFrame::OnTimer));
+    Connect(MinButton->GetId(), wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEventHandler(MyFrame::OnMinButtonPress));
 }
 
+void MyFrame::OnIconize(wxIconizeEvent &event)
+{
+    wxLogMessage("EVT_ICONIZE (%s) received", (event.IsIconized() ? "iconize" : "restore"));
+}
+
+void MyFrame::OnMinButtonPress(wxCommandEvent &WXUNUSED(event))
+{
+    Iconize(true);
+    Hide();
+
+    // Create a timer to auto-restore the window after 2 seconds
+    RestoreTimer.Start(2000, wxTIMER_ONE_SHOT);
+}
+
+void MyFrame::OnTimer(wxTimerEvent &WXUNUSED(event))
+{
+    Show();
+    // The following Iconize() will not generate an EVT_ICONIZE event on Windows
+    Iconize(false);
+}
 
 // event handlers
 
