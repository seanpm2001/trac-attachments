Index: src/osx/carbon/graphics.cpp
===================================================================
--- src/osx/carbon/graphics.cpp	(revision 58717)
+++ src/osx/carbon/graphics.cpp	(working copy)
@@ -785,6 +785,8 @@
     wxMacCoreGraphicsFontData( wxGraphicsRenderer* renderer, const wxFont &font, const wxColour& col );
     ~wxMacCoreGraphicsFontData();
 
+    bool GetNoAntiAliasing() const { return m_noAA; }
+
 #if wxOSX_USE_ATSU_TEXT
     virtual ATSUStyle GetATSUStyle() { return m_macATSUIStyle; }
 #endif
@@ -800,6 +802,7 @@
 private :
     wxColour m_colour;
     bool m_underlined;
+    bool m_noAA;
 #if wxOSX_USE_ATSU_TEXT
     ATSUStyle m_macATSUIStyle;
 #endif
@@ -815,6 +818,7 @@
 {
     m_colour = col;
     m_underlined = font.GetUnderlined();
+    m_noAA = font.GetNoAntiAliasing();
 
 #if wxOSX_USE_CORE_TEXT
     m_ctFont.reset( wxMacCreateCTFont( font ) );
@@ -1957,7 +1961,7 @@
         CGColorRef col = wxMacCreateCGColor( fref->GetColour() );
         CTUnderlineStyle ustyle = fref->GetUnderlined() ? kCTUnderlineStyleSingle : kCTUnderlineStyleNone ;
         wxCFRef<CFNumberRef> underlined( CFNumberCreate(NULL, kCFNumberSInt32Type, &ustyle) );
-         CFStringRef keys[] = { kCTFontAttributeName , kCTForegroundColorAttributeName, kCTUnderlineStyleAttributeName };
+        CFStringRef keys[] = { kCTFontAttributeName , kCTForegroundColorAttributeName, kCTUnderlineStyleAttributeName };
         CFTypeRef values[] = { font, col, underlined };
         wxCFRef<CFDictionaryRef> attributes( CFDictionaryCreate(kCFAllocatorDefault, (const void**) &keys, (const void**) &values,
                                                         WXSIZEOF( keys ), &kCFTypeDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks) );
@@ -1966,6 +1970,9 @@
 
         y += CTFontGetAscent(font);
 
+        wxMacCoreGraphicsFontData *fontData = dynamic_cast<wxMacCoreGraphicsFontData*>(m_font.GetRefData());
+        CGContextSetShouldAntialias(m_cgContext, !fontData->GetNoAntiAliasing());
+
         CGContextSaveGState(m_cgContext);
         CGContextTranslateCTM(m_cgContext, x, y);
         CGContextScaleCTM(m_cgContext, 1, -1);
Index: samples/font/font.cpp
===================================================================
--- samples/font/font.cpp	(revision 58717)
+++ samples/font/font.cpp	(working copy)
@@ -119,6 +119,7 @@
     void OnSetNativeUserDesc(wxCommandEvent& event);
     void OnSetFaceName(wxCommandEvent& event);
     void OnSetEncoding(wxCommandEvent& event);
+    void OnSetAntiAliasing(wxCommandEvent& event);
 
 protected:
     bool DoEnumerateFamilies(bool fixedWidthOnly,
@@ -176,6 +177,7 @@
     Font_SetNativeUserDesc,
     Font_SetFaceName,
     Font_SetEncoding,
+    Font_SetAntiAliasing,
     Font_Max
 };
 
@@ -208,6 +210,7 @@
     EVT_MENU(Font_SetNativeUserDesc, MyFrame::OnSetNativeUserDesc)
     EVT_MENU(Font_SetFaceName, MyFrame::OnSetFaceName)
     EVT_MENU(Font_SetEncoding, MyFrame::OnSetEncoding)
+    EVT_MENU(Font_SetAntiAliasing, MyFrame::OnSetAntiAliasing)
 
     EVT_MENU(Font_Choose, MyFrame::OnSelectFont)
     EVT_MENU(Font_EnumFamiliesForEncoding, MyFrame::OnEnumerateFamiliesForEncoding)
@@ -291,6 +294,9 @@
                      wxT("Set &user font description\tShift-Ctrl-U"));
     menuFont->Append(Font_SetFaceName, wxT("Check font face name"));                     
     menuFont->Append(Font_SetEncoding, wxT("Set font &encoding\tShift-Ctrl-E"));
+    wxMenuItem *menuItem = menuFont->Append(Font_SetAntiAliasing, wxT("AntiAliasing"),
+                                            wxT("Toggle AntiAliasing"), wxITEM_CHECK);
+    menuItem->Check(true);
 
     wxMenu *menuSelect = new wxMenu;
     menuSelect->Append(Font_Choose, wxT("&Select font...\tCtrl-S"),
@@ -556,6 +562,13 @@
     DoChangeFont(font);
 }
 
+void MyFrame::OnSetAntiAliasing(wxCommandEvent& event)
+{
+    wxFont font = m_canvas->GetTextFont();
+    font.SetNoAntiAliasing(!event.IsChecked());
+    DoChangeFont(font);
+}
+
 wxFontEncoding MyFrame::GetEncodingFromUser()
 {
     wxArrayString names;
