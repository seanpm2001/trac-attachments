diff --git a/include/wx/msw/apptrait.h b/include/wx/msw/apptrait.h
index 75972e3..81a203f 100644
--- a/include/wx/msw/apptrait.h
+++ b/include/wx/msw/apptrait.h
@@ -37,6 +37,8 @@ public:
 
 #if wxUSE_GUI
 
+#if defined(__WXMSW__)
+
 class WXDLLIMPEXP_CORE wxGUIAppTraits : public wxGUIAppTraitsBase
 {
 public:
@@ -58,6 +60,38 @@ public:
 #endif // !__WXWINCE__
 };
 
+#elif defined(__WXGTK__)
+
+class WXDLLIMPEXP_CORE wxGUIAppTraits : public wxGUIAppTraitsBase
+{
+public:
+    virtual wxEventLoopBase *CreateEventLoop();
+    virtual void *BeforeChildWaitLoop() { return NULL; }
+    virtual void AfterChildWaitLoop(void *WXUNUSED(data)) { }
+#if wxUSE_TIMER
+    virtual wxTimerImpl *CreateTimerImpl(wxTimer *timer);
+#endif
+
+#if wxUSE_THREADS && defined(__WXGTK20__)
+    virtual void MutexGuiEnter();
+    virtual void MutexGuiLeave();
+#endif
+
+#if wxUSE_THREADS
+    virtual bool DoMessageFromThreadWait() { return true; }
+    virtual WXDWORD WaitForThread(WXHANDLE hThread, int WXUNUSED(flags))
+        { return DoSimpleWaitForThread(hThread); }
+#endif // wxUSE_THREADS
+    virtual wxPortId GetToolkitVersion(int *majVer = NULL, int *minVer = NULL) const;
+
+#ifndef __WXWINCE__
+    virtual bool CanUseStderr() { return false; }
+    virtual bool WriteToStderr(const wxString& WXUNUSED(text)) { return false; }
+#endif // !__WXWINCE__
+};
+
+#endif
+
 #endif // wxUSE_GUI
 
 #endif // _WX_MSW_APPTRAIT_H_
