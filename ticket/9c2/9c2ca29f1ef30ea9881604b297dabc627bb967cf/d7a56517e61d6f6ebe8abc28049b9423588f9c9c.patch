diff -rbu2 wxWidgets_o/include/wx/string.h wxWidgets-2.5.2/include/wx/string.h
--- wxWidgets_o/include/wx/string.h	2004-07-25 14:37:20.000000000 -0700
+++ wxWidgets-2.5.2/include/wx/string.h	2004-08-29 21:08:20.000000000 -0700
@@ -1070,11 +1070,7 @@
     // (take 'this' into account in attribute parameter count)
   int Printf(const wxChar *pszFormat, ...) ATTRIBUTE_PRINTF_2;
-    // as vprintf(), returns the number of characters written or < 0 on error
-  int PrintfV(const wxChar* pszFormat, va_list argptr);
 
     // returns the string containing the result of Printf() to it
   static wxString Format(const wxChar *pszFormat, ...) ATTRIBUTE_PRINTF_1;
-    // the same as above, but takes a va_list
-  static wxString FormatV(const wxChar *pszFormat, va_list argptr);
 
   // raw access to string memory
@@ -1540,3 +1536,49 @@
 #endif  // wxSTD_STRING_COMPATIBILITY
 
+#define wxPrintfV(ret, s, pszFormat, argptr) \
+{ \
+    int size = 1024; \
+    int len; \
+ \
+    for ( ;; ) \
+    { \
+        { \
+            wxStringBuffer tmp(s, size + 1); \
+            wxChar* buf = tmp; \
+            \
+            if ( !buf ) \
+            { \
+                /* out of memory */ \
+                ret = -1; \
+            } \
+            \
+            va_start(argptr, pszFormat); \
+            len = wxVsnprintf(buf, size, pszFormat, argptr);    \
+            va_end(argptr); \
+            \
+            /* some implementations of vsnprintf() don't NUL terminate */ \
+            /* the string if there is not enough space for it so */ \
+            /* always do it manually */ \
+            buf[size] = _T('\0');   \
+        }   \
+        \
+        /* vsnprintf() may return either -1 (traditional Unix behaviour) or the */ \
+        /* total number of characters which would have been written if the */ \
+        /* buffer were large enough */ \
+        if ( len >= 0 && len <= size )  \
+        {   \
+            /* ok, there was enough space */  \
+            break;  \
+        }   \
+        \
+        /* still not enough, double it again    */ \
+        size *= 2;  \
+    }   \
+    \
+    /* we could have overshot */ \
+    s.Shrink(); \
+    \
+    ret = s.Length(); \
+}
+
 #endif  // _WX_WXSTRINGH__
diff -rbu2 wxWidgets_o/src/common/msgout.cpp wxWidgets-2.5.2/src/common/msgout.cpp
--- wxWidgets_o/src/common/msgout.cpp	2004-05-23 21:52:04.000000000 -0700
+++ wxWidgets-2.5.2/src/common/msgout.cpp	2004-08-29 21:07:48.000000000 -0700
@@ -96,9 +96,8 @@
 {
     va_list args;
-    va_start(args, format);
-    wxString out;
 
-    out.PrintfV(format, args);
-    va_end(args);
+    wxString out;
+    int nRet;
+    wxPrintfV(nRet, out, format, args);
 
     fprintf(stderr, "%s", (const char*) out.mb_str());
@@ -111,11 +110,9 @@
 void wxMessageOutputDebug::Printf(const wxChar* format, ...)
 {
-    wxString out;
-
     va_list args;
-    va_start(args, format);
 
-    out.PrintfV(format, args);
-    va_end(args);
+    wxString out;
+    int nRet;
+    wxPrintfV(nRet, out, format, args);
 
 #if defined(__WXMSW__) && !defined(__WXMICROWIN__)
@@ -152,8 +149,6 @@
 
     va_list args;
-    va_start(args, format);
-
-    out.PrintfV(format, args);
-    va_end(args);
+    int nRet;
+    wxPrintfV(nRet, out, format, args);
 
     out.Replace(wxT("\t"), wxT("        "));
@@ -173,9 +168,8 @@
 {
     va_list args;
-    va_start(args, format);
-    wxString out;
 
-    out.PrintfV(format, args);
-    va_end(args);
+    wxString out; 
+    int nRet;
+    wxPrintfV(nRet, out, format, args);
 
     // the native MSW msg box understands the TABs, others don't
diff -rbu2 wxWidgets_o/src/common/string.cpp wxWidgets-2.5.2/src/common/string.cpp
--- wxWidgets_o/src/common/string.cpp	2004-07-25 14:38:54.000000000 -0700
+++ wxWidgets-2.5.2/src/common/string.cpp	2004-08-29 21:09:10.000000000 -0700
@@ -1728,10 +1728,7 @@
 {
     va_list argptr;
-    va_start(argptr, pszFormat);
-
-    wxString s;
-    s.PrintfV(pszFormat, argptr);
 
-    va_end(argptr);
+    wxString s; int nRet;
+    wxPrintfV(nRet, s, pszFormat, argptr);
 
     return s;
@@ -1739,65 +1736,13 @@
 
 /* static */
-wxString wxString::FormatV(const wxChar *pszFormat, va_list argptr)
-{
-    wxString s;
-    s.PrintfV(pszFormat, argptr);
-    return s;
-}
 
 int wxString::Printf(const wxChar *pszFormat, ...)
 {
   va_list argptr;
-  va_start(argptr, pszFormat);
 
-  int iLen = PrintfV(pszFormat, argptr);
+  int nRet;
+  wxPrintfV(nRet, (*this), pszFormat, argptr);
 
-  va_end(argptr);
-
-  return iLen;
-}
-
-int wxString::PrintfV(const wxChar* pszFormat, va_list argptr)
-{
-    int size = 1024;
-    int len;
-
-    for ( ;; )
-    {
-        {
-            wxStringBuffer tmp(*this, size + 1);
-            wxChar* buf = tmp;
-
-            if ( !buf )
-            {
-                // out of memory
-                return -1;
-            }
-
-            len = wxVsnprintf(buf, size, pszFormat, argptr);
-
-            // some implementations of vsnprintf() don't NUL terminate
-            // the string if there is not enough space for it so
-            // always do it manually
-            buf[size] = _T('\0');
-        }
-
-        // vsnprintf() may return either -1 (traditional Unix behaviour) or the
-        // total number of characters which would have been written if the
-        // buffer were large enough
-        if ( len >= 0 && len <= size )
-        {
-            // ok, there was enough space
-            break;
-        }
-
-        // still not enough, double it again
-        size *= 2;
-    }
-
-    // we could have overshot
-    Shrink();
-
-    return Len();
+  return nRet;
 }
 
@@ -1965,11 +1910,10 @@
 
 int wxString::sprintf(const wxChar *pszFormat, ...)
-  {
+{
     va_list argptr;
-    va_start(argptr, pszFormat);
-    int iLen = PrintfV(pszFormat, argptr);
-    va_end(argptr);
-    return iLen;
-  }
+    int nRet;
+    wxPrintfV(nRet, (*this), pszFormat, argptr);
+    return nRet;
+}
 
 // ============================================================================
diff -rbu2 wxWidgets_o/src/common/wxchar.cpp wxWidgets-2.5.2/src/common/wxchar.cpp
--- wxWidgets_o/src/common/wxchar.cpp	2004-05-23 21:52:06.000000000 -0700
+++ wxWidgets-2.5.2/src/common/wxchar.cpp	2004-08-29 21:07:48.000000000 -0700
@@ -655,5 +655,6 @@
 {
     wxString s;
-    int rc = s.PrintfV(format, argptr);
+    int rc;
+    wxPrintfV(rc, s, format, argptr);
 
     if ( rc != -1 )
@@ -961,12 +962,11 @@
 {
     va_list argptr;
-    va_start(argptr, format);
+    wxString s;
+    int nRet;
+
+    wxPrintfV(nRet, s, format, argptr);
 
-    // note that wxString::FormatV() uses wxVsnprintf(), not wxSprintf(), so
-    // it's safe to implement this one in terms of it
-    wxString s(wxString::FormatV(format, argptr));
     wxStrcpy(str, s);
 
-    va_end(argptr);
 
     return s.length();
diff -rbu2 wxWidgets_o/tests/strings/strings.cpp wxWidgets-2.5.2/tests/strings/strings.cpp
--- wxWidgets_o/tests/strings/strings.cpp	2004-05-23 14:10:18.000000000 -0700
+++ wxWidgets-2.5.2/tests/strings/strings.cpp	2004-08-28 06:20:08.000000000 -0700
@@ -113,8 +113,26 @@
 {
     wxString s1,s2;
+    
+    
     s1.Printf(_T("%03d"), 18);
     CPPUNIT_ASSERT( s1 == wxString::Format(_T("%03d"), 18) );
+    
+    
     s2.Printf(_T("Number 18: %s\n"), s1.c_str());
     CPPUNIT_ASSERT( s2 == wxString::Format(_T("Number 18: %s\n"), s1.c_str()) );
+    
+    
+    wxChar ps[50000];
+    memset(ps, 'a', sizeof(wxChar) * 49999);
+    ps[49999] = 0;
+    s1.Printf(wxT("Here is a biiig string:%s\n Some junk:%i"),
+               ps,
+               6666);
+    CPPUNIT_ASSERT( s1 == wxString() +
+                        wxT("Here is a biiig string:") +
+                        ps +
+                        wxT("\n Some junk:") + 
+                        wxT("6666")
+                  );
 }

 	  	 
