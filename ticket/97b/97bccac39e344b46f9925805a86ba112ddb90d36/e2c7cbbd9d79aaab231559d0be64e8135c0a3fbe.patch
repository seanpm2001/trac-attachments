Index: common/dcbase.cpp
===================================================================
--- common/dcbase.cpp	(revision 47126)
+++ common/dcbase.cpp	(working copy)
@@ -2302,7 +2302,7 @@
     wxString curLine;
     for ( wxString::const_iterator pc = text.begin(); ; ++pc )
     {
-        if ( *pc == _T('\n') || pc == text.end() )
+        if ( pc == text.end() || *pc == _T('\n') )
         {
             int xRealStart = x; // init it here to avoid compielr warnings
 
Index: html/winpars.cpp
===================================================================
--- html/winpars.cpp	(revision 47126)
+++ html/winpars.cpp	(working copy)
@@ -379,7 +379,7 @@
             ++i, ++x;
             while ( (i < end) &&
                     (*i == wxT('\n') || *i == wxT('\r') ||
-                     *i == wxT(' ')) || *i == wxT('\t') )
+                     *i == wxT(' ') || *i == wxT('\t')) )
             {
                 ++i;
                 ++x;
Index: msw/debughlp.cpp
===================================================================
--- msw/debughlp.cpp	(revision 47126)
+++ msw/debughlp.cpp	(working copy)
@@ -145,7 +145,7 @@
 void wxDbgHelpDLL::LogError(const wxChar *func)
 {
     ::OutputDebugString(wxString::Format(_T("dbghelp: %s() failed: %s\r\n"),
-                        func, wxSysErrorMsg(::GetLastError())));
+                        func, wxSysErrorMsg(::GetLastError())).wx_str());
 }
 
 // ----------------------------------------------------------------------------
Index: msw/volume.cpp
===================================================================
--- msw/volume.cpp	(revision 47126)
+++ msw/volume.cpp	(working copy)
@@ -272,7 +272,7 @@
                         // The filter function will not know mounted from unmounted, and neither do we unless
                         // we are iterating using RESOURCE_CONNECTED, in which case they all are mounted.
                         // Volumes on disconnected servers, however, will correctly show as unmounted.
-                        FilteredAdd(list, filename, flagsSet, flagsUnset&~wxFS_VOL_MOUNTED);
+                        FilteredAdd(list, filename.wx_str(), flagsSet, flagsUnset&~wxFS_VOL_MOUNTED);
                         if (scope == RESOURCE_GLOBALNET)
                             s_fileInfo[filename].m_flags &= ~wxFS_VOL_MOUNTED;
                     }
@@ -486,7 +486,7 @@
 
     // Display name.
     SHFILEINFO fi;
-    long rc = SHGetFileInfo(m_volName, 0, &fi, sizeof(fi), SHGFI_DISPLAYNAME);
+    long rc = SHGetFileInfo(m_volName.wx_str(), 0, &fi, sizeof(fi), SHGFI_DISPLAYNAME);
     if (!rc)
     {
         wxLogError(_("Cannot read typename from '%s'!"), m_volName.c_str());
@@ -596,7 +596,7 @@
         }
 
         SHFILEINFO fi;
-        long rc = SHGetFileInfo(m_volName, 0, &fi, sizeof(fi), flags);
+        long rc = SHGetFileInfo(m_volName.wx_str(), 0, &fi, sizeof(fi), flags);
         m_icons[type].SetHICON((WXHICON)fi.hIcon);
         if (!rc || !fi.hIcon)
             wxLogError(_("Cannot load icon from '%s'."), m_volName.c_str());

 	  	 
