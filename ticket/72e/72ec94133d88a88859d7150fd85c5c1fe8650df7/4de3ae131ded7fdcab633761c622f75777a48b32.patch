Index: docs/changes.txt
===================================================================
--- docs/changes.txt	(revision 66255)
+++ docs/changes.txt	(working copy)
@@ -416,6 +416,7 @@
 - Added wxThread::OnKill() and OnDelete() callbacks.
 - Added wxFile::GetLastError() and ClearLastError() (ryazanov).
 - Added negatable command line switches (Armel Asselin).
+- Added wxVersionInfo (troelsk).
 
 Unix:
 
Index: include/wx/imagjpeg.h
===================================================================
--- include/wx/imagjpeg.h	(revision 66255)
+++ include/wx/imagjpeg.h	(working copy)
@@ -20,6 +20,8 @@
 
 #include "wx/image.h"
 
+class WXDLLIMPEXP_FWD_BASE wxVersionInfo;
+
 class WXDLLIMPEXP_CORE wxJPEGHandler: public wxImageHandler
 {
 public:
@@ -33,6 +35,8 @@
         m_mime = wxT("image/jpeg");
     }
 
+    static void GetLibraryVersionInfo(wxVersionInfo* versioninfo);
+
 #if wxUSE_STREAMS
     virtual bool LoadFile( wxImage *image, wxInputStream& stream, bool verbose=true, int index=-1 );
     virtual bool SaveFile( wxImage *image, wxOutputStream& stream, bool verbose=true );
Index: include/wx/imagpng.h
===================================================================
--- include/wx/imagpng.h	(revision 66255)
+++ include/wx/imagpng.h	(working copy)
@@ -35,6 +35,8 @@
     wxPNG_TYPE_GREY_RED = 3
 };
 
+class WXDLLIMPEXP_FWD_BASE wxVersionInfo;
+
 class WXDLLIMPEXP_CORE wxPNGHandler: public wxImageHandler
 {
 public:
@@ -46,6 +48,8 @@
         m_mime = wxT("image/png");
     }
 
+    static void GetLibraryVersionInfo(wxVersionInfo* versioninfo);
+
 #if wxUSE_STREAMS
     virtual bool LoadFile( wxImage *image, wxInputStream& stream, bool verbose=true, int index=-1 );
     virtual bool SaveFile( wxImage *image, wxOutputStream& stream, bool verbose=true );
Index: include/wx/imagtiff.h
===================================================================
--- include/wx/imagtiff.h	(revision 66255)
+++ include/wx/imagtiff.h	(working copy)
@@ -26,11 +26,15 @@
 #define wxIMAGE_OPTION_COMPRESSION                 wxString(wxT("Compression"))
 #define wxIMAGE_OPTION_IMAGEDESCRIPTOR             wxString(wxT("ImageDescriptor"))
 
+class WXDLLIMPEXP_FWD_BASE wxVersionInfo;
+
 class WXDLLIMPEXP_CORE wxTIFFHandler: public wxImageHandler
 {
 public:
     wxTIFFHandler();
 
+    static void GetLibraryVersionInfo(wxVersionInfo* versioninfo);
+
 #if wxUSE_STREAMS
     virtual bool LoadFile( wxImage *image, wxInputStream& stream, bool verbose=true, int index=-1 );
     virtual bool SaveFile( wxImage *image, wxOutputStream& stream, bool verbose=true );
Index: include/wx/stc/stc.h
===================================================================
--- include/wx/stc/stc.h	(revision 66255)
+++ include/wx/stc/stc.h	(working copy)
@@ -45,6 +45,7 @@
 #endif // wxUSE_TEXTCTRL
 
 class WXDLLIMPEXP_FWD_CORE wxScrollBar;
+class WXDLLIMPEXP_FWD_BASE wxVersionInfo;
 
 // SWIG can't handle "#if" type of conditionals, only "#ifdef"
 #ifdef SWIG
@@ -4240,6 +4241,8 @@
         return wxTextAreaBase::HitTest(pt, col, row);
     }
 
+    static void GetLibraryVersionInfo(wxVersionInfo* versioninfo);
+
 protected:
     virtual wxString DoGetValue() const { return GetText(); }
     virtual wxWindow *GetEditableWindow() { return this; }
Index: include/wx/utils.h
===================================================================
--- include/wx/utils.h	(revision 66255)
+++ include/wx/utils.h	(working copy)
@@ -29,6 +29,7 @@
 
 class WXDLLIMPEXP_FWD_BASE wxArrayString;
 class WXDLLIMPEXP_FWD_BASE wxArrayInt;
+class WXDLLIMPEXP_FWD_BASE wxVersionInfo;
 
 // need this for wxGetDiskSpace() as we can't, unfortunately, forward declare
 // wxLongLong
@@ -140,6 +141,8 @@
 WXDLLIMPEXP_CORE void wxInfoMessageBox(wxWindow* parent);
 #endif // wxUSE_MSGDLG
 
+WXDLLIMPEXP_BASE void wxGetLibraryVersionInfo(wxVersionInfo* versioninfo);
+
 // Get OS description as a user-readable string
 WXDLLIMPEXP_BASE wxString wxGetOsDescription();
 
Index: include/wx/versioninfo.h
===================================================================
--- include/wx/versioninfo.h	(revision 0)
+++ include/wx/versioninfo.h	(revision 0)
@@ -0,0 +1,82 @@
+///////////////////////////////////////////////////////////////////////////////
+// Name:        wx/versioninfo.h
+// Purpose:     declaration of wxVersionInfo class
+// Author:      Troels K
+// Created:     2010-11-22
+// RCS-ID:      $Id: 
+// Copyright:   (c) 2010
+// Licence:     wxWindows licence
+///////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_VERSIONINFO_H_
+#define _WX_VERSIONINFO_H_
+
+// ----------------------------------------------------------------------------
+// wxVersionInfo: version information
+// ----------------------------------------------------------------------------
+
+class WXDLLIMPEXP_BASE wxVersionInfo : public wxObject
+{
+public:
+    wxVersionInfo() : m_major(0), m_minor(0), m_micro(0) { }
+
+    const wxString& GetName() const
+        { return m_name; }
+
+    int GetMajor() const
+        { return m_major; }
+    int GetMinor() const
+        { return m_minor; }
+    int GetMicro() const
+        { return m_micro; }
+
+    wxString ToString() const
+    {
+        return HasDescription() ? GetDescription() : GetVersionString();
+    }
+
+    wxString GetVersionString() const
+    {
+        wxString str;
+        str << m_name;
+        str << ' ';
+        str << GetMajor();
+        str << '.';
+        str << GetMinor();
+        if (GetMicro())
+        {
+            str << '.';
+            str << GetMicro();
+        }
+        return str;
+    }
+
+    bool HasDescription() const { return !m_description.empty(); }
+    const wxString& GetDescription() const { return m_description; }
+
+    bool HasCopyright() const { return !m_copyright.empty(); }
+    const wxString& GetCopyright() const { return m_copyright; }
+
+    void Init(const wxString& name, int major, int minor, int micro, 
+              const wxString& description, const wxString& copyright)
+    {
+        m_name = name;
+        m_major = major;
+        m_minor = minor;
+        m_micro = micro;
+        m_description = description;
+        m_copyright = copyright;
+    }
+
+private:
+    wxString m_name,
+             m_description,
+             m_copyright;
+
+    int m_major,
+        m_minor,
+        m_micro;
+};
+
+#endif // _WX_VERSIONINFO_H_
+
Index: include/wx/xml/xml.h
===================================================================
--- include/wx/xml/xml.h	(revision 66255)
+++ include/wx/xml/xml.h	(working copy)
@@ -34,8 +34,8 @@
 class WXDLLIMPEXP_FWD_XML wxXmlIOHandler;
 class WXDLLIMPEXP_FWD_BASE wxInputStream;
 class WXDLLIMPEXP_FWD_BASE wxOutputStream;
+class WXDLLIMPEXP_FWD_BASE wxVersionInfo;
 
-
 // Represents XML node type.
 enum wxXmlNodeType
 {
@@ -299,6 +299,8 @@
     void SetEncoding(const wxString& enc) { m_encoding = enc; }
 #endif
 
+    static void GetLibraryVersionInfo(wxVersionInfo* versioninfo);
+
 private:
     wxString   m_version;
     wxString   m_fileEncoding;
Index: include/wx/zstream.h
===================================================================
--- include/wx/zstream.h	(revision 66255)
+++ include/wx/zstream.h	(working copy)
@@ -15,6 +15,8 @@
 
 #if wxUSE_ZLIB && wxUSE_STREAMS
 
+class WXDLLIMPEXP_FWD_BASE wxVersionInfo;
+
 #include "wx/stream.h"
 
 // Compression level
@@ -101,6 +103,8 @@
 public:
     wxZlibClassFactory();
 
+    static void GetLibraryVersionInfo(wxVersionInfo* versioninfo);
+
     wxFilterInputStream *NewStream(wxInputStream& stream) const
         { return new wxZlibInputStream(stream); }
     wxFilterOutputStream *NewStream(wxOutputStream& stream) const
Index: interface/wx/stc/stc.h
===================================================================
--- interface/wx/stc/stc.h	(revision 66255)
+++ interface/wx/stc/stc.h	(working copy)
@@ -3153,5 +3153,12 @@
     */
     void SwapMainAnchorCaret();
     
+    /**
+       Get Scintilla library version information.
+
+       @since 2.9.2
+       @see wxVersionInfo
+    */
+    static void GetLibraryVersionInfo(wxVersionInfo* info);
 };
 
Index: interface/wx/utils.h
===================================================================
--- interface/wx/utils.h	(revision 66255)
+++ interface/wx/utils.h	(working copy)
@@ -145,10 +145,19 @@
     doesn't otherwise handle this event.
 
     @since 2.9.0
+    @see wxGetLibraryVersionInfo()
+    @header{wx/utils.h}
+*/
+void wxInfoMessageBox(wxWindow* parent);
 
+/**
+    Get wxWidgets version information.
+
+    @since 2.9.2
+    @see wxVersionInfo
     @header{wx/utils.h}
 */
-void wxInfoMessageBox(wxWindow parent = NULL);
+void wxGetLibraryVersionInfo(wxVersionInfo* versioninfo);
 
 //@}
 
Index: interface/wx/versioninfo.h
===================================================================
--- interface/wx/versioninfo.h	(revision 0)
+++ interface/wx/versioninfo.h	(revision 0)
@@ -0,0 +1,106 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        versioninfo.h
+// Purpose:     interface of wxVersionInfo
+// Author:      Troels K
+// RCS-ID:      $Id: versioninfo.h
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+/**
+    @class wxVersionInfo
+
+    wxVersionInfo contains version information, and is used by wxWidgets
+    to provide version information about the libraries it uses, but you can
+    also apply it in user space, to provide version information about your own
+    libraries, or other libraries that you use.
+
+    @library{wxbase}
+    @category{data}
+    @header{wx/versioninfo.h}
+    @since 2.9.2
+*/
+class wxVersionInfo
+{
+public:
+    /**
+        Default constructor leaves all data members empty.
+    */
+    wxVersionInfo();
+
+    /**
+        Initialises the data members.
+    */
+    void Init(const wxString& name, int major, int minor, int micro, 
+              const wxString& description, const wxString& copyright);
+
+    /**
+        Get the name of the object (library).
+
+        @return Name string.
+    */
+    const wxString& GetName() const;
+
+    /**
+        Get the major version number.
+
+        @return Major version number.
+    */
+    int GetMajor() const;
+
+    /**
+        Get the minor version number.
+
+        @return Minor version number.
+    */
+    int GetMinor() const;
+
+    /**
+        Get the micro version, or release number.
+
+        @return Micro version, or release number.
+    */
+    int GetMicro() const;
+
+    /**
+        Get the string representation:
+        
+        @return The same as GetDescription() if it is non-empty, otherwise it returns the same as GetVersionString().
+        @see GetDescription(), GetVersionString()
+    */
+    wxString ToString() const;
+
+    /**
+        Get the string representation.
+
+        @return The version string in the form "name major.minor[.micro]".
+    */
+    wxString GetVersionString() const
+
+    /**
+        @return @true if a description string has been specified.
+        @see GetDescription()
+    */
+    bool HasDescription() const;
+
+    /**
+        Get the description string.
+
+        @return The description string, free-form.
+    */
+    const wxString& GetDescription();
+
+    /**
+        @return @true if a copyright string has been specified.
+        @see GetCopyright()
+    */
+    bool HasCopyright() const;
+
+    /**
+        Get the copyright string.
+
+        @return The copyright string..
+    */
+    const wxString& GetCopyright() const;
+};
+
+//@}
Index: interface/wx/xml/xml.h
===================================================================
--- interface/wx/xml/xml.h	(revision 66255)
+++ interface/wx/xml/xml.h	(working copy)
@@ -645,5 +645,13 @@
         Deep copies the given document.
     */
     wxXmlDocument& operator=(const wxXmlDocument& doc);
+
+    /**
+       Get expat library version information.
+
+       @since 2.9.2
+       @see wxVersionInfo
+    */
+    static void GetLibraryVersionInfo(wxVersionInfo* info);
 };
 
Index: samples/image/image.cpp
===================================================================
--- samples/image/image.cpp	(revision 66255)
+++ samples/image/image.cpp	(working copy)
@@ -28,6 +28,7 @@
 #include "wx/wfstream.h"
 #include "wx/quantize.h"
 #include "wx/stopwatch.h"
+#include "wx/versioninfo.h"
 
 #if wxUSE_CLIPBOARD
     #include "wx/dataobj.h"
@@ -654,7 +655,7 @@
     menuImage->Append( ID_SHOWTHUMBNAIL, wxT("Test &thumbnail...\tCtrl-T"),
                         "Test scaling the image during load (try with JPEG)");
     menuImage->AppendSeparator();
-    menuImage->Append( ID_ABOUT, wxT("&About..."));
+    menuImage->Append( ID_ABOUT, wxT("&About...\tF1"));
     menuImage->AppendSeparator();
     menuImage->Append( ID_QUIT, wxT("E&xit\tCtrl-Q"));
     menu_bar->Append(menuImage, wxT("&Image"));
@@ -686,11 +687,39 @@
     Close( true );
 }
 
+#if wxUSE_ZLIB && wxUSE_STREAMS
+#include "wx/zstream.h"
+#endif
+
 void MyFrame::OnAbout( wxCommandEvent &WXUNUSED(event) )
 {
-    (void)wxMessageBox( "wxImage demo\n"
-                        "(c) Robert Roebling 1998-2005"
-                        "(c) Vadim Zeitlin 2005-2009",
+    wxArrayString array;
+    wxVersionInfo info;
+
+    array.Add("wxImage demo");
+    array.Add("(c) Robert Roebling 1998-2005");
+    array.Add("(c) Vadim Zeitlin 2005-2009");
+
+    array.Add(wxEmptyString);
+
+#if wxUSE_LIBPNG
+    wxPNGHandler::GetLibraryVersionInfo(&info);
+    array.Add(info.ToString());
+#endif
+#if wxUSE_LIBJPEG
+    wxJPEGHandler::GetLibraryVersionInfo(&info);
+    array.Add(info.ToString());
+#endif
+#if wxUSE_LIBTIFF
+    wxTIFFHandler::GetLibraryVersionInfo(&info);
+    array.Add(info.ToString());
+#endif
+#if wxUSE_ZLIB && wxUSE_STREAMS
+    // zlib is used by libpng
+    wxZlibClassFactory::GetLibraryVersionInfo(&info);
+    array.Add(info.ToString());
+#endif
+    (void)wxMessageBox( wxJoin(array, '\n'),
                         "About wxImage Demo",
                         wxICON_INFORMATION | wxOK );
 }
Index: src/common/imagjpeg.cpp
===================================================================
--- src/common/imagjpeg.cpp	(revision 66255)
+++ src/common/imagjpeg.cpp	(working copy)
@@ -17,6 +17,7 @@
 #if wxUSE_IMAGE && wxUSE_LIBJPEG
 
 #include "wx/imagjpeg.h"
+#include "wx/versioninfo.h"
 
 #ifndef WX_PRECOMP
     #include "wx/log.h"
@@ -43,6 +44,7 @@
         #define XMD_H
     #endif
     #include "jpeglib.h"
+    #include "jversion.h"
 }
 
 #ifndef HAVE_WXJPEG_BOOLEAN
@@ -491,4 +493,10 @@
 
 #endif   // wxUSE_STREAMS
 
+/*static*/ void wxJPEGHandler::GetLibraryVersionInfo(wxVersionInfo* info)
+{
+    wxString name = "libjpeg";
+    info->Init(name, JVERSION[0] - '0', 0, 0, name + " " + JVERSION, JCOPYRIGHT); // Version "6b"
+}
+
 #endif   // wxUSE_LIBJPEG
Index: src/common/imagpng.cpp
===================================================================
--- src/common/imagpng.cpp	(revision 66255)
+++ src/common/imagpng.cpp	(working copy)
@@ -25,6 +25,7 @@
 #if wxUSE_IMAGE && wxUSE_LIBPNG
 
 #include "wx/imagpng.h"
+#include "wx/versioninfo.h"
 
 #ifndef WX_PRECOMP
     #include "wx/log.h"
@@ -902,4 +903,12 @@
 
 #endif  // wxUSE_STREAMS
 
+/*static*/ void wxPNGHandler::GetLibraryVersionInfo(wxVersionInfo* info)
+{
+    wxString str = ::png_get_header_version(NULL);
+    str = str.Mid(1);
+    str.Replace("\n", "");
+    info->Init("libpng", PNG_LIBPNG_VER_MAJOR, PNG_LIBPNG_VER_MINOR, PNG_LIBPNG_VER_RELEASE, str, wxEmptyString);
+}
+
 #endif  // wxUSE_LIBPNG
Index: src/common/imagtiff.cpp
===================================================================
--- src/common/imagtiff.cpp	(revision 66255)
+++ src/common/imagtiff.cpp	(working copy)
@@ -25,6 +25,7 @@
 #if wxUSE_IMAGE && wxUSE_LIBTIFF
 
 #include "wx/imagtiff.h"
+#include "wx/versioninfo.h"
 
 #ifndef WX_PRECOMP
     #include "wx/log.h"
@@ -627,4 +628,25 @@
 
 #endif  // wxUSE_STREAMS
 
+/*static*/ void wxTIFFHandler::GetLibraryVersionInfo(wxVersionInfo* info)
+{
+    int major = 0, minor = 0, micro = 0;
+    const char* ver = ::TIFFGetVersion();
+    wxString str = ver;
+    int pos;
+    
+    pos = str.Find('\n');
+    if (pos != wxNOT_FOUND)
+    {
+        str = str.Left(pos);
+    }
+    pos = str.Find("Version ");
+    if (pos != wxNOT_FOUND)
+    {
+        major = str[pos+ 8] - '0';
+        minor = str[pos+10] - '0';
+    }
+    info->Init("libtiff", major, minor, micro, str, wxEmptyString);
+}
+
 #endif  // wxUSE_LIBTIFF
Index: src/common/utilscmn.cpp
===================================================================
--- src/common/utilscmn.cpp	(revision 66255)
+++ src/common/utilscmn.cpp	(working copy)
@@ -52,6 +52,7 @@
 #include "wx/uri.h"
 #include "wx/mimetype.h"
 #include "wx/config.h"
+#include "wx/versioninfo.h"
 
 #if defined(__WXWINCE__) && wxUSE_DATETIME
     #include "wx/datetime.h"
@@ -1356,7 +1357,7 @@
     return wxCANCEL;
 }
 
-void wxInfoMessageBox(wxWindow* parent)
+void wxGetLibraryVersionInfo(wxVersionInfo* info)
 {
     // don't translate these strings, they're for diagnostics purposes only
     wxString msg;
@@ -1389,8 +1390,20 @@
                             GTK_MICRO_VERSION);
 #endif // __WXGTK__
 
-    msg += wxS("\nCopyright (c) 1995-2010 wxWidgets team");
+    wxString copyright = wxS("Copyright (c) 1995-2010 wxWidgets team");
 
+    info->Init("wxWidgets", wxMAJOR_VERSION, wxMINOR_VERSION, wxRELEASE_NUMBER, msg, copyright);
+}
+
+void wxInfoMessageBox(wxWindow* parent)
+{
+    wxVersionInfo info;
+    wxGetLibraryVersionInfo(&info);
+    wxString msg = info.ToString();
+
+    msg += wxS("\n");
+    msg += info.GetCopyright();
+
     wxMessageBox(msg, wxT("wxWidgets information"),
                  wxICON_INFORMATION | wxOK,
                  parent);
Index: src/common/zstream.cpp
===================================================================
--- src/common/zstream.cpp	(revision 66255)
+++ src/common/zstream.cpp	(working copy)
@@ -19,6 +19,7 @@
 #if wxUSE_ZLIB && wxUSE_STREAMS
 
 #include "wx/zstream.h"
+#include "wx/versioninfo.h"
 
 #ifndef WX_PRECOMP
     #include "wx/intl.h"
@@ -57,6 +58,11 @@
         PushFront();
 }
 
+/*static*/ void wxZlibClassFactory::GetLibraryVersionInfo(wxVersionInfo* info)
+{
+    info->Init("zlib", ZLIB_VERNUM >> 12, (ZLIB_VERNUM >> 8) & 0x0F, (ZLIB_VERNUM & 0xFF) / 0x10, wxEmptyString, wxEmptyString);
+}
+
 const wxChar * const *
 wxZlibClassFactory::GetProtocols(wxStreamProtocolType type) const
 {
Index: src/stc/stc.cpp
===================================================================
--- src/stc/stc.cpp	(revision 66255)
+++ src/stc/stc.cpp	(working copy)
@@ -48,6 +48,7 @@
 #include "wx/mstream.h"
 #include "wx/image.h"
 #include "wx/ffile.h"
+#include "wx/versioninfo.h"
 
 #include "ScintillaWX.h"
 
@@ -4618,4 +4619,9 @@
 //----------------------------------------------------------------------
 //----------------------------------------------------------------------
 
+/*static*/ void wxStyledTextCtrl::GetLibraryVersionInfo(wxVersionInfo* info)
+{
+    info->Init("Scintilla", 2, 3, 0, wxEmptyString, wxEmptyString);
+}
+
 #endif // wxUSE_STC
Index: src/xml/xml.cpp
===================================================================
--- src/xml/xml.cpp	(revision 66255)
+++ src/xml/xml.cpp	(working copy)
@@ -30,6 +30,7 @@
 #include "wx/zstream.h"
 #include "wx/strconv.h"
 #include "wx/scopedptr.h"
+#include "wx/versioninfo.h"
 
 #include "expat.h" // from Expat
 
@@ -1035,4 +1036,9 @@
            OutputString(stream, wxS("\n"), convMem.get(), convFile.get());
 }
 
+/*static*/ void wxXmlDocument::GetLibraryVersionInfo(wxVersionInfo* info)
+{
+    info->Init("expat", XML_MAJOR_VERSION, XML_MINOR_VERSION, XML_MICRO_VERSION, wxEmptyString, wxEmptyString);
+}
+
 #endif // wxUSE_XML
