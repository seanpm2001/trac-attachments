Index: include/wx/listbase.h
===================================================================
--- include/wx/listbase.h	(revision 50462)
+++ include/wx/listbase.h	(working copy)
@@ -364,6 +364,7 @@
         , m_code(0)
         , m_oldItemIndex(0)
         , m_itemIndex(0)
+        , m_lastItemIndex(0)
         , m_col(0)
         , m_pointDrag()
         , m_item()
@@ -375,6 +376,7 @@
         , m_code(event.m_code)
         , m_oldItemIndex(event.m_oldItemIndex)
         , m_itemIndex(event.m_itemIndex)
+        , m_lastItemIndex(event.m_lastItemIndex)
         , m_col(event.m_col)
         , m_pointDrag(event.m_pointDrag)
         , m_item(event.m_item)
@@ -383,6 +385,7 @@
 
     int GetKeyCode() const { return m_code; }
     long GetIndex() const { return m_itemIndex; }
+    long GetLastIndex() const { return m_lastItemIndex; }
     int GetColumn() const { return m_col; }
     wxPoint GetPoint() const { return m_pointDrag; }
     const wxString& GetLabel() const { return m_item.m_text; }
@@ -406,6 +409,7 @@
     int           m_code;
     long          m_oldItemIndex; // only for wxEVT_COMMAND_LIST_CACHE_HINT
     long          m_itemIndex;
+    long          m_lastItemIndex; // only for wxEVT_COMMAND_LIST_RANGE_SELECTED
     int           m_col;
     wxPoint       m_pointDrag;
 
@@ -444,6 +448,7 @@
     DECLARE_EVENT_TYPE(wxEVT_COMMAND_LIST_COL_DRAGGING, 719)
     DECLARE_EVENT_TYPE(wxEVT_COMMAND_LIST_COL_END_DRAG, 720)
     DECLARE_EVENT_TYPE(wxEVT_COMMAND_LIST_ITEM_FOCUSED, 721)
+    DECLARE_EVENT_TYPE(wxEVT_COMMAND_LIST_ITEM_RANGE_SELECTED, 722)
 END_DECLARE_EVENT_TYPES()
 
 typedef void (wxEvtHandler::*wxListEventFunction)(wxListEvent&);
@@ -475,6 +480,7 @@
 #define EVT_LIST_ITEM_MIDDLE_CLICK(id, fn) wx__DECLARE_LISTEVT(ITEM_MIDDLE_CLICK, id, fn)
 #define EVT_LIST_ITEM_ACTIVATED(id, fn) wx__DECLARE_LISTEVT(ITEM_ACTIVATED, id, fn)
 #define EVT_LIST_ITEM_FOCUSED(id, fn) wx__DECLARE_LISTEVT(ITEM_FOCUSED, id, fn)
+#define EVT_LIST_ITEM_RANGE_SELECTED(id, fn) wx__DECLARE_LISTEVT(ITEM_RANGE_SELECTED, id, fn)
 
 #define EVT_LIST_CACHE_HINT(id, fn) wx__DECLARE_LISTEVT(CACHE_HINT, id, fn)
 
Index: src/common/listctrlcmn.cpp
===================================================================
--- src/common/listctrlcmn.cpp	(revision 50462)
+++ src/common/listctrlcmn.cpp	(working copy)
@@ -45,6 +45,7 @@
 DEFINE_EVENT_TYPE(wxEVT_COMMAND_LIST_ITEM_MIDDLE_CLICK)
 DEFINE_EVENT_TYPE(wxEVT_COMMAND_LIST_ITEM_ACTIVATED)
 DEFINE_EVENT_TYPE(wxEVT_COMMAND_LIST_ITEM_FOCUSED)
+DEFINE_EVENT_TYPE(wxEVT_COMMAND_LIST_ITEM_RANGE_SELECTED)
 DEFINE_EVENT_TYPE(wxEVT_COMMAND_LIST_CACHE_HINT)
 
 #endif // wxUSE_LISTCTRL
Index: src/msw/listctrl.cpp
===================================================================
--- src/msw/listctrl.cpp	(revision 50462)
+++ src/msw/listctrl.cpp	(working copy)
@@ -2116,20 +2116,20 @@
                 // we translate this catch all message into more interesting
                 // (and more easy to process) wxWidgets events
 
-                // first of all, we deal with the state change events only and
-                // only for valid items (item == -1 for the virtual list
-                // control)
-                if ( nmLV->uChanged & LVIF_STATE && iItem != -1 )
+                if ( nmLV->uChanged & LVIF_STATE )
                 {
                     // temp vars for readability
                     const UINT stOld = nmLV->uOldState;
                     const UINT stNew = nmLV->uNewState;
 
-                    event.m_item.SetId(iItem);
-                    event.m_item.SetMask(wxLIST_MASK_TEXT |
-                                         wxLIST_MASK_IMAGE |
-                                         wxLIST_MASK_DATA);
-                    GetItem(event.m_item);
+                    if (iItem != -1)
+                    {
+                        event.m_item.SetId(iItem);
+                        event.m_item.SetMask(wxLIST_MASK_TEXT |
+                                             wxLIST_MASK_IMAGE |
+                                             wxLIST_MASK_DATA);
+                        GetItem(event.m_item);
+                    }
 
                     // has the focus changed?
                     if ( !(stOld & LVIS_FOCUSED) && (stNew & LVIS_FOCUSED) )
@@ -2169,6 +2169,15 @@
 
                 break;
 
+            case LVN_ODSTATECHANGED:
+                {
+                    NMLVODSTATECHANGE* lpStateChange = (LPNMLVODSTATECHANGE) lParam;
+                    event.m_itemIndex = lpStateChange->iFrom;
+                    event.m_lastItemIndex = lpStateChange->iTo;
+                    eventType = wxEVT_COMMAND_LIST_ITEM_RANGE_SELECTED;
+                }
+                break;
+
             case LVN_KEYDOWN:
                 {
                     LV_KEYDOWN *info = (LV_KEYDOWN *)lParam;

 	  	 
