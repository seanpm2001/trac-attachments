Index: samples/minimal/minimal.cpp
===================================================================
--- samples/minimal/minimal.cpp	(revision 70045)
+++ samples/minimal/minimal.cpp	(working copy)
@@ -40,6 +40,13 @@
     #include "../sample.xpm"
 #endif
 
+#include <wx/apptrait.h>
+#include <wx/stdpaths.h>
+#include <wx/stdstream.h>
+#include <wx/wfstream.h>
+#include <vector>
+#include <fstream>
+
 // ----------------------------------------------------------------------------
 // private classes
 // ----------------------------------------------------------------------------
@@ -124,6 +131,12 @@
     if ( !wxApp::OnInit() )
         return false;
 
+    std::string s = GetTraits()->GetStandardPaths().GetExecutablePath();
+    wxFFileInputStream fstream(s);
+    wxStdInputStream stdstream(fstream);
+    std::vector<char> v(16);
+    stdstream.read(&v.front(), v.size());
+
     // create the main application window
     MyFrame *frame = new MyFrame("Minimal wxWidgets App");
 
Index: src/common/stdstream.cpp
===================================================================
--- src/common/stdstream.cpp	(revision 70045)
+++ src/common/stdstream.cpp	(working copy)
@@ -70,6 +70,8 @@
 wxStdInputStreamBuffer::wxStdInputStreamBuffer(wxInputStream& stream) :
     m_stream(stream), m_lastChar(EOF)
 {
+    wxLog::SetLogLevel(wxLOG_Trace);
+    wxLog::AddTraceMask("wxStdInputStreamBuffer");
 }
 
 std::streambuf *
@@ -126,6 +128,7 @@
 std::streamsize
 wxStdInputStreamBuffer::xsgetn(char *s, std::streamsize n)
 {
+    wxLogTrace("wxStdInputStreamBuffer", "%s(%p, %u)", __FUNCTION__, s, n);
     m_stream.Read((void *) s, (size_t) n);
 
     std::streamsize read = m_stream.LastRead();
@@ -155,6 +158,7 @@
 int
 wxStdInputStreamBuffer::uflow()
 {
+    wxLogTrace("wxStdInputStreamBuffer", "%s()", __FUNCTION__);
     int ch = m_stream.GetC();
 
     if ( m_stream.LastRead() == 1 )
