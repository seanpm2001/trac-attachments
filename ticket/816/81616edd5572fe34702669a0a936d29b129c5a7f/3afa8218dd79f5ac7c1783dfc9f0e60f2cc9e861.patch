Index: wxWidgets/src/ribbon/art_msw.cpp
===================================================================
--- wxWidgets/src/ribbon/art_msw.cpp	(revision 72212)
+++ wxWidgets/src/ribbon/art_msw.cpp	(working copy)
@@ -1009,7 +1009,7 @@
     if(tab.rect.height <= 2)
         return;
 
-    if(tab.active || tab.hovered)
+    if(tab.active || tab.hovered || tab.highlight)
     {
         if(tab.active)
         {
@@ -1044,7 +1044,42 @@
             dc.GradientFillLinear(background, m_tab_hover_background_colour,
                 m_tab_hover_background_gradient_colour, wxSOUTH);
         }
+        else if(tab.highlight)
+        {
+            wxRect background(tab.rect);
 
+            background.x += 2;
+            background.y += 2;
+            background.width -= 4;
+            background.height -= 3;
+            int h = background.height;
+            background.height /= 2;
+
+            //For highlight pages we show a colour between the active page and for a hovered page:
+            wxColour top_colour1((m_tab_active_background_colour.Red()   + m_tab_hover_background_top_colour.Red())/2,
+                                 (m_tab_active_background_colour.Green() + m_tab_hover_background_top_colour.Green())/2,
+                                 (m_tab_active_background_colour.Blue()  + m_tab_hover_background_top_colour.Blue())/2);
+
+            wxColour bottom_colour1((m_tab_active_background_gradient_colour.Red()   + m_tab_hover_background_top_gradient_colour.Red())/2,
+                                    (m_tab_active_background_gradient_colour.Green() + m_tab_hover_background_top_gradient_colour.Green())/2,
+                                    (m_tab_active_background_gradient_colour.Blue()  + m_tab_hover_background_top_gradient_colour.Blue())/2);
+
+            dc.GradientFillLinear(background, top_colour1, bottom_colour1, wxSOUTH);
+
+            background.y += background.height;
+            background.height = h - background.height;
+
+            wxColour top_colour2((m_tab_active_background_colour.Red()   + m_tab_hover_background_colour.Red())/2,
+                                 (m_tab_active_background_colour.Green() + m_tab_hover_background_colour.Green())/2,
+                                 (m_tab_active_background_colour.Blue()  + m_tab_hover_background_colour.Blue())/2);
+
+            wxColour bottom_colour2((m_tab_active_background_gradient_colour.Red()   + m_tab_hover_background_gradient_colour.Red())/2,
+                                    (m_tab_active_background_gradient_colour.Green() + m_tab_hover_background_gradient_colour.Green())/2,
+                                    (m_tab_active_background_gradient_colour.Blue()  + m_tab_hover_background_gradient_colour.Blue())/2);
+
+            dc.GradientFillLinear(background, top_colour2, bottom_colour2, wxSOUTH);
+        }
+
         wxPoint border_points[6];
         border_points[0] = wxPoint(1, tab.rect.height - 2);
         border_points[1] = wxPoint(1, 3);
Index: wxWidgets/src/ribbon/art_aui.cpp
===================================================================
--- wxWidgets/src/ribbon/art_aui.cpp	(revision 72212)
+++ wxWidgets/src/ribbon/art_aui.cpp	(working copy)
@@ -326,7 +326,7 @@
 
     dc.SetFont(m_tab_label_font);
     dc.SetPen(*wxTRANSPARENT_PEN);
-    if(tab.active || tab.hovered)
+    if(tab.active || tab.hovered || tab.highlight)
     {
         if(tab.active)
         {
@@ -343,8 +343,24 @@
         dc.SetBrush(m_tab_active_top_background_brush);
         dc.DrawRectangle(tab.rect.x, tab.rect.y + 3, tab.rect.width - 1,
             grad_rect.y - tab.rect.y - 3);
-        dc.GradientFillLinear(grad_rect, m_tab_active_background_colour,
-            m_tab_active_background_gradient_colour, wxSOUTH);
+        if(tab.highlight)
+        {
+            wxColour top_colour((m_tab_active_background_colour.Red()   + m_tab_hover_background_top_colour.Red())/2,
+                                (m_tab_active_background_colour.Green() + m_tab_hover_background_top_colour.Green())/2,
+                                (m_tab_active_background_colour.Blue()  + m_tab_hover_background_top_colour.Blue())/2);
+
+            wxColour bottom_colour((m_tab_active_background_gradient_colour.Red()   + m_tab_hover_background_top_gradient_colour.Red())/2,
+                                   (m_tab_active_background_gradient_colour.Green() + m_tab_hover_background_top_gradient_colour.Green())/2,
+                                   (m_tab_active_background_gradient_colour.Blue()  + m_tab_hover_background_top_gradient_colour.Blue())/2);
+
+            dc.GradientFillLinear(grad_rect, top_colour,
+                bottom_colour, wxSOUTH);
+        }
+        else
+        {
+            dc.GradientFillLinear(grad_rect, m_tab_active_background_colour,
+                m_tab_active_background_gradient_colour, wxSOUTH);
+        }
     }
     else
     {
Index: wxWidgets/src/ribbon/bar.cpp
===================================================================
--- wxWidgets/src/ribbon/bar.cpp	(revision 72212)
+++ wxWidgets/src/ribbon/bar.cpp	(working copy)
@@ -66,6 +66,7 @@
     info.page = page;
     info.active = false;
     info.hovered = false;
+    info.highlight = false;
     info.shown = true;
     // info.rect not set (intentional)
 
@@ -298,6 +299,20 @@
     m_pages.Item(page).shown = show;
 }
 
+bool wxRibbonBar::IsPageHighlight(size_t page) const
+{
+    if (page >= m_pages.GetCount())
+        return false;
+    return m_pages.Item(page).highlight;
+}
+
+void wxRibbonBar::HighlightPage(size_t page, bool highlight)
+{
+    if(page >= m_pages.GetCount())
+        return;
+    m_pages.Item(page).highlight = highlight;
+}
+
 void wxRibbonBar::DeletePage(size_t n)
 {
     if(n < m_pages.GetCount())
Index: wxWidgets/interface/wx/ribbon/bar.h
===================================================================
--- wxWidgets/interface/wx/ribbon/bar.h	(revision 72212)
+++ wxWidgets/interface/wx/ribbon/bar.h	(working copy)
@@ -278,6 +278,25 @@
     void HidePage(size_t page);
 
     /**
+        Indicates whether a tab has the highlight setting or not.
+    */
+    bool IsPageHighlight(size_t page) const;
+    
+    /**
+        Changes a tab to be highlight.
+        
+        Highlight tabs have a colour between that of the active tab
+        and a tab over which the mouse is hovering. This can be used
+        to make a tab more noticeable or obvious to the user.
+    */
+    void HighlightPage(size_t page, bool highlight = true);
+    
+    /**
+        Changes a tab to not be highlight.
+    */
+    void UnHighlightPage(size_t page);
+    
+    /**
         Shows or hides the panel area of the ribbon bar.
 
         If the panel area is hidden, then only the tab of the ribbon bar will
Index: wxWidgets/samples/ribbon/ribbondemo.cpp
===================================================================
--- wxWidgets/samples/ribbon/ribbondemo.cpp	(revision 72212)
+++ wxWidgets/samples/ribbon/ribbondemo.cpp	(working copy)
@@ -402,6 +402,8 @@
         bar->AddButton(ID_HIDE_PAGES, wxT("Hide Pages"), ribbon_xpm);
         bar->AddButton(ID_SHOW_PAGES, wxT("Show Pages"), ribbon_xpm);
     }
+    new wxRibbonPage(m_ribbon, wxID_ANY, wxT("Highlight Page"), empty_xpm);
+    m_ribbon->HighlightPage(m_ribbon->GetPageCount()-1);
 
     m_ribbon->Realize();
 
