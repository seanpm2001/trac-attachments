Index: include/wx/richtext/richtexthtml.h
===================================================================
--- include/wx/richtext/richtexthtml.h	(revision 78522)
+++ include/wx/richtext/richtexthtml.h	(working copy)
@@ -88,6 +88,9 @@
 
     /// Output font tag
     void OutputFont(const wxRichTextAttr& style, wxTextOutputStream& stream);
+    
+    /// Output escaped text
+    void OutputText(const wxString& text, wxTextOutputStream& stream);
 
     /// Closes lists to level (-1 means close all)
     void CloseLists(int level, wxTextOutputStream& str);
Index: src/richtext/richtexthtml.cpp
===================================================================
--- src/richtext/richtexthtml.cpp	(revision 78522)
+++ src/richtext/richtexthtml.cpp	(working copy)
@@ -142,11 +150,8 @@
                         if (charStyle.HasTextEffects() && (charStyle.GetTextEffects() & wxTEXT_ATTR_EFFECT_CAPITALS))
                             text.MakeUpper();
 
-                        wxString toReplace = wxRichTextLineBreakChar;
-                        text.Replace(toReplace, wxT("<br>"));
+                        OutputText(text, str);
 
-                        str << text;
-
                         EndCharacterFormatting(currentCharStyle, charStyle, paraStyle, str);
                     }
 
@@ -453,6 +458,41 @@
     }
 }
 
+void wxRichTextHTMLHandler::OutputText(const wxString& text, wxTextOutputStream& stream)
+{
+    size_t spcnt = 0;
+    for(size_t i=0; i<text.size(); ++i)
+    {
+        // count sequential spaces and suppress their output 
+        if(text[i]==' ' && i<text.size()-1)
+        {
+            ++spcnt;
+            continue;
+        }
+        
+        // output non-breaking spaces when multiple spaces in a row, except the last one
+        if(spcnt > 0) 
+        {
+            for(size_t j=0; j<spcnt-1; ++j)
+                stream << wxT("&nbsp;");
+            stream << wxT(" ");
+            spcnt = 0;
+        }
+        
+        // escape line breaks and html characters with special meaning
+        if(text[i]==wxRichTextLineBreakChar)
+            stream << wxT("<br>");
+        else if(text[i]=='&')
+            stream << wxT("&amp;");
+        else if(text[i]=='<')
+            stream << wxT("&lt;");
+        else if(text[i]=='>')
+            stream << wxT("&gt;");
+        else
+            stream << text.Mid(i, 1);
+    }
+}
+
 int wxRichTextHTMLHandler::TypeOfList( const wxRichTextAttr& thisStyle, wxString& tag )
 {
     // We can use number attribute of li tag but not all the browsers support it.
