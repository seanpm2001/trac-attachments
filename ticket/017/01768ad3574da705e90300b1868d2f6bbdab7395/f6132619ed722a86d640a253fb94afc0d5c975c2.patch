diff -r -u -p a/samples/propgrid/propgrid.cpp b/samples/propgrid/propgrid.cpp
--- a/samples/propgrid/propgrid.cpp	2016-02-28 22:33:38.000000000 +0100
+++ b/samples/propgrid/propgrid.cpp	2019-10-30 12:42:41.897403100 +0100
@@ -677,6 +677,18 @@ void FormMain::OnPropertyGridChange( wxP
 
     const wxString& name = property->GetName();
 
+    MyEnumProperty* myProp = dynamic_cast< MyEnumProperty* >( property );
+    if ( myProp )
+    {
+        bool hasFocus = myProp->HasFocus();
+        if ( !hasFocus )
+        {
+            // should never occur when searching in drop-down list
+            wxFAIL_MSG("Focus state of MyEnumProperty must be true");
+        }
+    }
+
     // Properties store values internally as wxVariants, but it is preferred
     // to use the more modern wxAny at the interface level
     wxAny value = property->GetValue();
@@ -1032,6 +1044,8 @@ void FormMain::PopulateWithStandardItems
     wxPropertyGridManager* pgman = m_pPropGridManager;
     wxPropertyGridPage* pg = pgman->GetPage(wxT("Standard Items"));
 
+    pg->Append( new MyEnumProperty( "AA MyEnumProperty", "MyEnum" ) );
+
     // Append is ideal way to add items to wxPropertyGrid.
     pg->Append( new wxPropertyCategory(wxT("Appearance"),wxPG_LABEL) );
 
diff -r -u -p a/samples/propgrid/sampleprops.cpp b/samples/propgrid/sampleprops.cpp
--- a/samples/propgrid/sampleprops.cpp	2016-02-28 22:33:38.000000000 +0100
+++ b/samples/propgrid/sampleprops.cpp	2019-10-30 12:14:55.434512500 +0100
@@ -192,6 +192,36 @@ wxVariant wxFontDataProperty::ChildChang
 }
 
 // -----------------------------------------------------------------------
+// MyEnumProperty
+// -----------------------------------------------------------------------
+
+MyEnumProperty::MyEnumProperty(const wxString& label, const wxString& name)
+    : wxEnumProperty(label, name)
+{
+    static const wxString choices[] = { "aaaa ","bbbb", "cccc" };
+    SetChoices( wxPGChoices( wxArrayString( 3, choices ) ) );
+    SetChoiceSelection( 0 );
+
+    m_bHasFocus = false;
+}
+
+bool MyEnumProperty::OnEvent(wxPropertyGrid* propgrid, wxWindow* wnd_primary, wxEvent& event)
+{
+    wxEventType eventType = event.GetEventType();
+
+    if( eventType == wxEVT_SET_FOCUS )
+    {
+        m_bHasFocus = true;
+    }
+    else if( eventType == wxEVT_KILL_FOCUS )
+    {
+        m_bHasFocus = false;
+    }
+
+    return false;
+}
+
+// -----------------------------------------------------------------------
 // wxSizeProperty
 // -----------------------------------------------------------------------
 
diff -r -u -p a/samples/propgrid/sampleprops.h b/samples/propgrid/sampleprops.h
--- a/samples/propgrid/sampleprops.h	2016-02-28 22:33:38.000000000 +0100
+++ b/samples/propgrid/sampleprops.h	2019-10-30 11:55:50.378848400 +0100
@@ -48,6 +48,21 @@ protected:
 
 // -----------------------------------------------------------------------
 
+class MyEnumProperty : public wxEnumProperty
+{
+public:
+    MyEnumProperty(const wxString& label, const wxString& name = wxPG_LABEL);
+
+    bool HasFocus() const { return m_bHasFocus; }
+
+    virtual bool OnEvent(wxPropertyGrid* propgrid, wxWindow* wnd_primary, wxEvent& event);
+
+protected:
+    bool m_bHasFocus;
+};
+
+// -----------------------------------------------------------------------
+
 class wxSizeProperty : public wxPGProperty
 {
     WX_PG_DECLARE_PROPERTY_CLASS(wxSizeProperty)
