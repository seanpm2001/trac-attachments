--- src/generic/grid.cpp.orig	Tue Oct  2 12:12:10 2001
+++ src/generic/grid.cpp	Tue Oct  2 22:19:51 2001
@@ -5449,11 +5449,14 @@
 // Generate a grid event based on a mouse event and
 // return the result of ProcessEvent()
 //
-bool wxGrid::SendEvent( const wxEventType type,
+int wxGrid::SendEvent( const wxEventType type,
                         int row, int col,
                         wxMouseEvent& mouseEv )
 {
-    if ( type == wxEVT_GRID_ROW_SIZE || type == wxEVT_GRID_COL_SIZE )
+   bool claimed;
+   bool vetoed= false;
+	
+   if ( type == wxEVT_GRID_ROW_SIZE || type == wxEVT_GRID_COL_SIZE )
     {
         int rowOrCol = (row == -1 ? col : row);
 
@@ -5467,9 +5470,12 @@
                                  mouseEv.ShiftDown(),
                                  mouseEv.AltDown(),
                                  mouseEv.MetaDown() );
-        return GetEventHandler()->ProcessEvent(gridEvt);
+    
+        claimed = GetEventHandler()->ProcessEvent(gridEvt);
+	vetoed = !gridEvt.IsAllowed();
+
     }
-    else if ( type == wxEVT_GRID_RANGE_SELECT )
+   else if ( type == wxEVT_GRID_RANGE_SELECT )
     {
         // Right now, it should _never_ end up here!
         wxGridRangeSelectEvent gridEvt( GetId(),
@@ -5483,9 +5489,11 @@
                                         mouseEv.AltDown(),
                                         mouseEv.MetaDown() );
 
-        return GetEventHandler()->ProcessEvent(gridEvt);
+        claimed = GetEventHandler()->ProcessEvent(gridEvt);
+  	vetoed = !gridEvt.IsAllowed();
+	
     }
-    else
+   else
     {
         wxGridEvent gridEvt( GetId(),
                              type,
@@ -5498,17 +5506,27 @@
                              mouseEv.ShiftDown(),
                              mouseEv.AltDown(),
                              mouseEv.MetaDown() );
-        return GetEventHandler()->ProcessEvent(gridEvt);
+         claimed = GetEventHandler()->ProcessEvent(gridEvt);
+     	 vetoed = !gridEvt.IsAllowed();
     }
+ 
+  // A Veto'd event may not be `claimed' so test this first 
+  if (vetoed) return -1;
+  return claimed ? 1 : 0;
+
+    
 }
 
 
 // Generate a grid event of specified type and return the result
 // of ProcessEvent().
 //
-bool wxGrid::SendEvent( const wxEventType type,
+int wxGrid::SendEvent( const wxEventType type,
                         int row, int col )
 {
+   bool claimed;
+   bool vetoed= false;
+
     if ( type == wxEVT_GRID_ROW_SIZE || type == wxEVT_GRID_COL_SIZE )
     {
         int rowOrCol = (row == -1 ? col : row);
@@ -5518,7 +5536,8 @@
                                  this,
                                  rowOrCol );
 
-        return GetEventHandler()->ProcessEvent(gridEvt);
+        claimed = GetEventHandler()->ProcessEvent(gridEvt);
+        vetoed  = !gridEvt.IsAllowed();
     }
     else
     {
@@ -5527,8 +5546,14 @@
                              this,
                              row, col );
 
-        return GetEventHandler()->ProcessEvent(gridEvt);
-    }
+        claimed = GetEventHandler()->ProcessEvent(gridEvt);
+        vetoed  = !gridEvt.IsAllowed();
+     }
+
+	// A Veto'd event may not be `claimed' so test this first 
+	if (vetoed) return -1;
+	return claimed ? 1 : 0;
+
 }
 
 
@@ -6578,12 +6603,12 @@
 
     if ( enable != m_cellEditCtrlEnabled )
     {
-        // TODO allow the app to Veto() this event?
-        SendEvent(enable ? wxEVT_GRID_EDITOR_SHOWN : wxEVT_GRID_EDITOR_HIDDEN);
-
         if ( enable )
         {
-            // this should be checked by the caller!
+ 	    if (SendEvent( wxEVT_GRID_EDITOR_SHOWN) <0) 
+		return; 
+
+	    // this should be checked by the caller!
             wxASSERT_MSG( CanEnableCellControl(),
                           _T("can't enable editing for this cell!") );
 
@@ -6594,7 +6619,10 @@
         }
         else
         {
-            HideCellEditControl();
+	    //FIXME:add veto support
+	    SendEvent( wxEVT_GRID_EDITOR_HIDDEN);
+
+	    HideCellEditControl();
             SaveEditControlValue();
 
             // do it after HideCellEditControl()
@@ -6740,6 +6768,8 @@
         int row = m_currentCellCoords.GetRow();
         int col = m_currentCellCoords.GetCol();
 
+        wxString oldval = GetCellValue(row,col);
+
         wxGridCellAttr* attr = GetCellAttr(row, col);
         wxGridCellEditor* editor = attr->GetEditor(this, row, col);
         bool changed = editor->EndEdit(row, col, this);
@@ -6749,9 +6779,13 @@
 
         if (changed)
         {
-            SendEvent( wxEVT_GRID_CELL_CHANGE,
+            if ( SendEvent( wxEVT_GRID_CELL_CHANGE,
                        m_currentCellCoords.GetRow(),
-                       m_currentCellCoords.GetCol() );
+                       m_currentCellCoords.GetCol() ) < 0 ) {
+
+			      //Event has been veto set the data back.
+                              SetCellValue(row,col,oldval);
+	       }
         }
     }
 }
--- include/wx/generic/grid.h.orig	Tue Oct  2 11:27:43 2001
+++ include/wx/generic/grid.h	Tue Oct  2 20:51:18 2001
@@ -1775,9 +1775,9 @@
     bool Redimension( wxGridTableMessage& );
 
 
-    bool SendEvent( const wxEventType, int row, int col, wxMouseEvent& );
-    bool SendEvent( const wxEventType, int row, int col );
-    bool SendEvent( const wxEventType type)
+    int SendEvent( const wxEventType, int row, int col, wxMouseEvent& );
+    int SendEvent( const wxEventType, int row, int col );
+    int SendEvent( const wxEventType type)
     {
         return SendEvent(type,
                          m_currentCellCoords.GetRow(),
--- samples/newgrid/griddemo.cpp.orig	Tue Oct  2 21:06:19 2001
+++ samples/newgrid/griddemo.cpp	Tue Oct  2 21:11:10 2001
@@ -249,6 +249,8 @@
     grid->SetCellValue( 0, 2, "Blah" );
     grid->SetCellValue( 0, 3, "Read only" );
     grid->SetReadOnly( 0, 3 );
+    
+    grid->SetCellValue( 0, 4, "Can veto edit this cell" );
 
     grid->SetCellValue( 0, 5, "Press\nCtrl+arrow\nto skip over\ncells" );
 
@@ -808,6 +810,17 @@
 
 void GridFrame::OnEditorShown( wxGridEvent& ev )
 {
+
+    if ( (ev.GetCol() == 4) &&
+         (ev.GetRow() == 0) &&
+	 (wxMessageBox(_T("Are you sure you wish to edit this cell"),
+	               _T("Checking"),wxYES_NO) == wxNO ) ) {
+
+	 ev.Veto();
+	 return;
+    }
+		      
+	
     wxLogMessage( wxT("Cell editor shown.") );
 
     ev.Skip();
@@ -815,6 +828,16 @@
 
 void GridFrame::OnEditorHidden( wxGridEvent& ev )
 {
+   
+    if ( (ev.GetCol() == 4) &&
+         (ev.GetRow() == 0) &&
+	 (wxMessageBox(_T("Are you sure you wish to finish editing this cell"),
+	               _T("Checking"),wxYES_NO) == wxNO ) ) {
+
+	 ev.Veto();
+	 return;
+    }
+
     wxLogMessage( wxT("Cell editor hidden.") );
 
     ev.Skip();

 	  	 
