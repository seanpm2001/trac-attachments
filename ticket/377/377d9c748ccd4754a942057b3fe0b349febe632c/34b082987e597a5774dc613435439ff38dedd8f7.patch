Index: src/mac/carbon/button.cpp
===================================================================
--- src/mac/carbon/button.cpp	(revision 59375)
+++ src/mac/carbon/button.cpp	(working copy)
@@ -226,3 +226,29 @@
 
     return noErr;
 }
+
+bool wxButton::IsOn() const
+{
+    return IsControlHilited( this->GetPeer()->GetControlRef() );
+}
+
+void wxButton::Highlight()
+{
+    if( IsOn() )
+        HiliteControl( this->GetPeer()->GetControlRef(), kControlNoPart );
+    else
+        HiliteControl( this->GetPeer()->GetControlRef(), kControlButtonPart );
+}
+
+void wxButton::Flash( unsigned int delay )
+{
+    unsigned long timer;
+	
+    HiliteControl( this->GetPeer()->GetControlRef(), kControlButtonPart );
+	
+    this->Refresh();
+    this->Update();
+    Delay( delay, &timer );
+	
+    HiliteControl( this->GetPeer()->GetControlRef(), kControlNoPart );
+}
Index: src/mac/carbon/app.cpp
===================================================================
--- src/mac/carbon/app.cpp	(revision 59375)
+++ src/mac/carbon/app.cpp	(working copy)
@@ -1603,11 +1603,19 @@
             }
             else if (keyval == WXK_ESCAPE || (keyval == '.' && modifiers & cmdKey ) )
             {
-                // generate wxID_CANCEL if command-. or <esc> has been pressed (typically in dialogs)
-                wxCommandEvent new_event(wxEVT_COMMAND_BUTTON_CLICKED,wxID_CANCEL);
-                new_event.SetEventObject( focus );
-                handled = focus->GetEventHandler()->ProcessEvent( new_event );
-            }
+                // send the Highlight() command to wxButton with wxID_CANCEL if it exists
+                wxButton *cancelButton = wxDynamicCast( wxWindow::FindWindowById( wxID_CANCEL, focus ), wxButton );
+                if( cancelButton != NULL ) 
+                {
+                    cancelButton->Highlight();
+                    cancelButton->Refresh();
+                    cancelButton->Update();
+                }
+                // generate wxID_CANCEL if command-. or <esc> has been pressed (typically in dialogs)
+                wxCommandEvent new_event(wxEVT_COMMAND_BUTTON_CLICKED,wxID_CANCEL);
+                new_event.SetEventObject( focus );
+                handled = focus->GetEventHandler()->ProcessEvent( new_event );
+            }
         }
     }
     return handled ;
Index: src/common/dlgcmn.cpp
===================================================================
--- src/common/dlgcmn.cpp	(revision 59375)
+++ src/common/dlgcmn.cpp	(working copy)
@@ -448,6 +448,10 @@
 
     if ( !btn || !btn->IsEnabled() || !btn->IsShown() )
         return false;
+	
+    btn->Highlight();
+    btn->Refresh();
+    btn->Update();
 
     wxCommandEvent event(wxEVT_COMMAND_BUTTON_CLICKED, id);
     event.SetEventObject(btn);
Index: src/msw/button.cpp
===================================================================
--- src/msw/button.cpp	(revision 59375)
+++ src/msw/button.cpp	(working copy)
@@ -43,6 +43,9 @@
 #include "wx/tokenzr.h"
 #include "wx/msw/private.h"
 
+// for Button_SetState and Button_GetState
+#include <Windowsx.h>
+
 #if wxUSE_UXTHEME
     #include "wx/msw/uxtheme.h"
 
@@ -482,6 +485,39 @@
 }
 
 // ----------------------------------------------------------------------------
+// Flash Handling
+// ----------------------------------------------------------------------------
+bool wxButton::IsOn() const
+{
+    if( Button_GetState( (HWND)GetHwnd() ) == BST_PUSHED )
+        return true;
+    else
+        return false;
+}
+
+void wxButton::Highlight()
+{
+    if( IsOn() )
+        Button_SetState( (HWND)GetHwnd(), FALSE );
+    else
+        Button_SetState( (HWND)GetHwnd(), TRUE );
+}
+
+void wxButton::Flash( unsigned int delay )
+{
+    Button_SetState( (HWND)GetHwnd(), TRUE );
+
+    this->Refresh();
+    this->Update();
+
+    Sleep( delay * 10 );
+	
+    Button_SetState( (HWND)GetHwnd(), FALSE );
+    this->Refresh();
+    this->Update();
+}
+
+// ----------------------------------------------------------------------------
 // event/message handlers
 // ----------------------------------------------------------------------------
 
Index: include/wx/mac/carbon/button.h
===================================================================
--- include/wx/mac/carbon/button.h	(revision 59375)
+++ include/wx/mac/carbon/button.h	(working copy)
@@ -45,8 +45,12 @@
 
   virtual void SetDefault();
   virtual void Command(wxCommandEvent& event);
+	
+    virtual void Flash( unsigned int delay = 8 );
+    virtual void Highlight();
+    virtual bool IsOn() const;
 protected:
-    virtual wxSize DoGetBestSize() const ;
+    virtual wxSize DoGetBestSize() const;
 };
 
 #endif
Index: include/wx/msw/button.h
===================================================================
--- include/wx/msw/button.h	(revision 59375)
+++ include/wx/msw/button.h	(working copy)
@@ -57,6 +57,10 @@
     virtual bool MSWOnDraw(WXDRAWITEMSTRUCT *item);
     virtual WXDWORD MSWGetStyle(long style, WXDWORD *exstyle) const;
 
+    virtual bool IsOn() const;
+    virtual void Flash( unsigned int delay = 8 );
+    virtual void Highlight();  
+
 private:
     void MakeOwnerDrawn();
 
