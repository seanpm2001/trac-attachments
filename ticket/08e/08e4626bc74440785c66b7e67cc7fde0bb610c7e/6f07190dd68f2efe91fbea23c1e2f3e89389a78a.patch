Index: include/wx/generic/private/richtooltip.h
===================================================================
--- include/wx/generic/private/richtooltip.h	(revision 73045)
+++ include/wx/generic/private/richtooltip.h	(working copy)
@@ -42,7 +42,7 @@
     virtual void SetTipKind(wxTipKind tipKind);
     virtual void SetTitleFont(const wxFont& font);
 
-    virtual void ShowFor(wxWindow* win);
+    virtual void ShowFor(wxWindow* win, wxRect* rect = NULL);
 
 protected:
     wxString m_title,
Index: include/wx/private/richtooltip.h
===================================================================
--- include/wx/private/richtooltip.h	(revision 73045)
+++ include/wx/private/richtooltip.h	(working copy)
@@ -34,7 +34,7 @@
     virtual void SetTipKind(wxTipKind tipKind) = 0;
     virtual void SetTitleFont(const wxFont& font) = 0;
 
-    virtual void ShowFor(wxWindow* win) = 0;
+    virtual void ShowFor(wxWindow* win, wxRect* rect = NULL) = 0;
 
     virtual ~wxRichToolTipImpl() { }
 
Index: include/wx/richtooltip.h
===================================================================
--- include/wx/richtooltip.h	(revision 73045)
+++ include/wx/richtooltip.h	(working copy)
@@ -87,8 +87,8 @@
     // or colour appropriate for the current platform.
     void SetTitleFont(const wxFont& font);
 
-    // Show the tooltip for the given window.
-    void ShowFor(wxWindow* win);
+    // Show the tooltip for the given window and optionally a specified area.
+    void ShowFor(wxWindow* win, wxRect* rect = NULL);
 
     // Non-virtual dtor as this class is not supposed to be derived from.
     ~wxRichToolTip();
Index: interface/wx/richtooltip.h
===================================================================
--- interface/wx/richtooltip.h	(revision 73045)
+++ interface/wx/richtooltip.h	(working copy)
@@ -175,15 +175,20 @@
     void SetTitleFont(const wxFont& font);
 
     /**
-        Show the tooltip for the given window.
+        Show the tooltip for the given window and optionally specify where to 
+        show the tooltip.
 
-        The tooltip tip points to the (middle of the) specified window which
-        must be non-@NULL.
+        By default the tooltip tip points to the (middle of the) specified 
+        window which must be non-@NULL or, if @a rect is non-@NULL, the middle
+        of the specified wxRect.
 
         Currently the native MSW implementation is used only if @a win is a
-        wxTextCtrl. This limitation may be removed in the future.
+        wxTextCtrl and @a rect is @NULL. This limitation may be removed in the 
+        future.
+
+        Parameter @a rect is new since wxWidgets 2.9.5.
      */
-    void ShowFor(wxWindow* win);
+    void ShowFor(wxWindow* win, wxRect* rect = NULL);
 
     /**
         Destructor.
Index: src/common/richtooltipcmn.cpp
===================================================================
--- src/common/richtooltipcmn.cpp	(revision 73045)
+++ src/common/richtooltipcmn.cpp	(working copy)
@@ -73,11 +73,11 @@
     m_impl->SetTitleFont(font);
 }
 
-void wxRichToolTip::ShowFor(wxWindow* win)
+void wxRichToolTip::ShowFor(wxWindow* win, wxRect* rect = NULL);
 {
     wxCHECK_RET( win, wxS("Must have a valid window") );
 
-    m_impl->ShowFor(win);
+    m_impl->ShowFor(win, rect);
 }
 
 wxRichToolTip::~wxRichToolTip()
Index: src/generic/richtooltipg.cpp
===================================================================
--- src/generic/richtooltipg.cpp	(revision 73045)
+++ src/generic/richtooltipg.cpp	(working copy)
@@ -232,9 +232,14 @@
         }
     }
 
-    void SetPosition()
+    void SetPosition(wxRect* rect)
     {
-        wxPoint pos = GetTipPoint();
+        wxPoint pos;
+        
+        if ( !rect || rect->IsEmpty() )
+            pos = GetTipPoint();
+        else
+            pos = wxPoint( rect->x + rect->width / 2, rect->y + rect->height / 2 );
 
         // We want our anchor point to coincide with this position so offset
         // the position of the top left corner passed to Move() accordingly.
@@ -668,7 +673,7 @@
     m_titleFont = font;
 }
 
-void wxRichToolTipGenericImpl::ShowFor(wxWindow* win)
+void wxRichToolTipGenericImpl::ShowFor(wxWindow* win, wxRect* rect = NULL);
 {
     // Set the focus to the window the tooltip refers to to make it look active.
     win->SetFocus();
@@ -685,7 +690,7 @@
 
     popup->SetBackgroundColours(m_colStart, m_colEnd);
 
-    popup->SetPosition();
+    popup->SetPosition(rect);
     // show or start the timer to delay showing the popup
     popup->SetTimeoutAndShow( m_timeout, m_delay );
 }
Index: src/msw/richtooltip.cpp
===================================================================
--- src/msw/richtooltip.cpp	(revision 73045)
+++ src/msw/richtooltip.cpp	(working copy)
@@ -151,8 +151,11 @@
         wxRichToolTipGenericImpl::SetTitleFont(font);
     }
 
-    virtual void ShowFor(wxWindow* win)
+    virtual void ShowFor(wxWindow* win, wxRect* rect = NULL);
     {
+        if ( m_canUseNative )
+            m_canUseNative = rect == NULL;
+
         // TODO: We could use native tooltip control to show native balloon
         //       tooltips for any window but right now we use the simple
         //       EM_SHOWBALLOONTIP API which can only be used with text
@@ -175,7 +178,7 @@
         // Don't set m_canUseNative to false here, we could be able to use the
         // native tooltips if we're called for a different window the next
         // time.
-        wxRichToolTipGenericImpl::ShowFor(win);
+        wxRichToolTipGenericImpl::ShowFor(win, rect);
     }
 
 private:
