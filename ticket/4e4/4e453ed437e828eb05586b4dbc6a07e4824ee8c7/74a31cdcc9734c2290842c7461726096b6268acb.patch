Only in wxWidgets: DebugDll
Only in wxWidgets/build/msw: vc_mswddll
Only in wxWidgets/build/msw: vc_mswdll
Only in wxWidgets/build/msw: wx_adv.vcproj
Only in wxWidgets/build/msw: wx_base.vcproj
Only in wxWidgets/build/msw: wx_core.vcproj
Only in wxWidgets/build/msw: wx_dbgrid.vcproj
Only in wxWidgets/build/msw: wx_dll.ncb
Only in wxWidgets/build/msw: wx_dll.sln
Only in wxWidgets/build/msw: wx_dll.suo
Only in wxWidgets/build/msw: wx_gl.vcproj
Only in wxWidgets/build/msw: wx_html.vcproj
Only in wxWidgets/build/msw: wx_net.vcproj
Only in wxWidgets/build/msw: wx_odbc.vcproj
Only in wxWidgets/build/msw: wx_qa.vcproj
Only in wxWidgets/build/msw: wx_wxexpat.vcproj
Only in wxWidgets/build/msw: wx_wxjpeg.vcproj
Only in wxWidgets/build/msw: wx_wxpng.vcproj
Only in wxWidgets/build/msw: wx_wxregex.vcproj
Only in wxWidgets/build/msw: wx_wxtiff.vcproj
Only in wxWidgets/build/msw: wx_wxzlib.vcproj
Only in wxWidgets/build/msw: wx_xml.vcproj
Only in wxWidgets/build/msw: wx_xrc.vcproj
Only in wxWidgets/docs: pdf
diff -ru2 -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxWidgets.orig/include/wx/bmpbuttn.h wxWidgets/include/wx/bmpbuttn.h
--- wxWidgets.orig/include/wx/bmpbuttn.h	2005-04-10 17:15:16.000000000 -0400
+++ wxWidgets/include/wx/bmpbuttn.h	2005-10-27 05:43:06.015625000 -0400
@@ -19,4 +19,5 @@
 #include "wx/bitmap.h"
 #include "wx/button.h"
+#include "wx/recguard.h"
 
 extern WXDLLEXPORT_DATA(const wxChar*) wxButtonNameStr;
@@ -31,6 +32,7 @@
 public:
     wxBitmapButtonBase()
-        : m_bmpNormal(), m_bmpSelected(), m_bmpFocus(), m_bmpDisabled()
+        : m_bmpNormal(), m_bmpSelected(), m_bmpFocus(), m_bmpDisabled(),m_bmpBase()
         , m_marginX(0), m_marginY(0)
+		, m_guard(0)
         { }
 
@@ -44,6 +46,4 @@
     void SetBitmapDisabled(const wxBitmap& disabled)
         { m_bmpDisabled = disabled; OnSetBitmap(); };
-    void SetLabel(const wxBitmap& bitmap)
-        { SetBitmapLabel(bitmap); }
 
     // retrieve the bitmaps
@@ -64,5 +64,10 @@
 protected:
     // function called when any of the bitmaps changes
-    virtual void OnSetBitmap() { InvalidateBestSize(); Refresh(); }
+    virtual void OnSetBitmap() =0;
+
+    void DrawTextLabel(wxDC& dc, const wxPoint& pos, bool enabled) const;
+
+    wxPoint GetBitmapLabelPosition() const;
+    wxPoint GetTextLabelPosition() const;
 
     // the bitmaps for various states
@@ -70,5 +75,6 @@
              m_bmpSelected,
              m_bmpFocus,
-             m_bmpDisabled;
+             m_bmpDisabled,
+             m_bmpBase;
 
     // the margins around the bitmap
@@ -76,9 +82,8 @@
         m_marginY;
 
-private:
-    // Prevent Virtual function hiding warnings
-    void SetLabel(const wxString& rsLabel)
-        { wxWindowBase::SetLabel(rsLabel); }
+    // to protect against multiple entries into OnSetBitmap
+    wxRecursionGuardFlag m_guard;
 
+private:
     DECLARE_NO_COPY_CLASS(wxBitmapButtonBase)
 };
diff -ru2 -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxWidgets.orig/include/wx/image.h wxWidgets/include/wx/image.h
--- wxWidgets.orig/include/wx/image.h	2005-07-30 12:28:34.000000000 -0400
+++ wxWidgets/include/wx/image.h	2005-10-23 14:31:15.937500000 -0400
@@ -3,4 +3,5 @@
 // Purpose:     wxImage class
 // Author:      Robert Roebling
+// Modified By: David Fileccia
 // RCS-ID:      $Id: image.h,v 1.108 2005/07/28 22:50:19 VZ Exp $
 // Copyright:   (c) Robert Roebling
@@ -252,4 +253,8 @@
     wxImage ConvertToMono( unsigned char r, unsigned char g, unsigned char b ) const;
 
+    // convert to a gray scale image.  This replaces all RGB values with a lumen value.
+    // The lumen value is computed as R*0.299 + G*0.587 + B*0.114
+    bool ConvertToGrayScale ();
+
     // these routines are slow but safe
     void SetRGB( int x, int y, unsigned char r, unsigned char g, unsigned char b );
Only in wxWidgets/include/wx/msw: .setup.h.swp
diff -ru2 -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxWidgets.orig/include/wx/msw/bmpbuttn.h wxWidgets/include/wx/msw/bmpbuttn.h
--- wxWidgets.orig/include/wx/msw/bmpbuttn.h	2004-10-05 12:30:28.000000000 -0400
+++ wxWidgets/include/wx/msw/bmpbuttn.h	2005-10-24 13:43:22.968750000 -0400
@@ -31,4 +31,5 @@
                    wxWindowID id,
                    const wxBitmap& bitmap,
+                   const wxString& label = wxT(""),
                    const wxPoint& pos = wxDefaultPosition,
                    const wxSize& size = wxDefaultSize,
@@ -37,5 +38,7 @@
                    const wxString& name = wxButtonNameStr)
     {
-        Create(parent, id, bitmap, pos, size, style, validator, name);
+		m_guard = 0;
+
+        Create(parent, id, bitmap, label, pos, size, style, validator, name);
     }
 
@@ -43,4 +46,5 @@
                 wxWindowID id,
                 const wxBitmap& bitmap,
+                const wxString& label = wxT(""),
                 const wxPoint& pos = wxDefaultPosition,
                 const wxSize& size = wxDefaultSize,
@@ -50,4 +54,6 @@
 
     // Implementation
+    virtual wxSize DoGetBestSize() const;
+    virtual void OnSetBitmap();
     virtual bool SetBackgroundColour(const wxColour& colour);
     virtual void SetDefault();
@@ -58,5 +64,5 @@
 
 protected:
-    virtual wxSize DoGetBestSize() const;
+    void OldDrawFace( WXHDC dc, int left, int top, int right, int bottom, bool sel );
 
     // invalidate m_brushDisabled when system colours change
Only in wxWidgets/lib: vc_dll
Only in wxWidgets/samples/image: image.ncb
Only in wxWidgets/samples/image: image.sln
Only in wxWidgets/samples/image: image.suo
Only in wxWidgets/samples/image: image.vcproj
diff -ru2 -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxWidgets.orig/src/common/cshelp.cpp wxWidgets/src/common/cshelp.cpp
--- wxWidgets.orig/src/common/cshelp.cpp	2005-07-25 10:07:34.000000000 -0400
+++ wxWidgets/src/common/cshelp.cpp	2005-10-24 11:11:53.718750000 -0400
@@ -290,8 +290,8 @@
                                                          ,wxBITMAP_TYPE_RESOURCE
                                                         ),
-                                    pos, size, style)
+                                    wxT(""), pos, size, style)
 #else
                    : wxBitmapButton(parent, id, wxBitmap(csquery_xpm),
-                                    pos, size, style)
+                                    wxT(""), pos, size, style)
 #endif
 {
diff -ru2 -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxWidgets.orig/src/common/image.cpp wxWidgets/src/common/image.cpp
--- wxWidgets.orig/src/common/image.cpp	2005-07-30 12:55:42.000000000 -0400
+++ wxWidgets/src/common/image.cpp	2005-10-27 06:21:17.359375000 -0400
@@ -3,4 +3,5 @@
 // Purpose:     wxImage
 // Author:      Robert Roebling
+// Modified By: David Fileccia
 // RCS-ID:      $Id: image.cpp,v 1.202 2005/07/30 11:55:41 JS Exp $
 // Copyright:   (c) Robert Roebling
@@ -811,4 +812,33 @@
 }
 
+bool wxImage::ConvertToGrayScale()
+{
+    wxCHECK_MSG( Ok(), 0, wxT("invalid image") );
+
+    // Get the image parameters for modifying
+    RGBValue* rgb = reinterpret_cast <RGBValue*> (M_IMGDATA->m_data);
+
+    for (long i=0; i < M_IMGDATA->m_width*M_IMGDATA->m_height; i++)
+    {
+        // If this image has a mask then skip those RGB values
+        if (M_IMGDATA->m_hasMask)
+        {
+            if (rgb[i].red == M_IMGDATA->m_maskRed &&
+                rgb[i].green == M_IMGDATA->m_maskGreen &&
+                rgb[i].blue == M_IMGDATA->m_maskBlue)
+                continue;
+        }
+
+        // Compute the lumen from the RGB value and reassign them
+        double luma = rgb[i].red * 0.299 + rgb[i].green * 0.587 + rgb[i].blue * 0.114;
+
+        rgb[i].red   = static_cast <unsigned char> (luma + 0.5);
+        rgb[i].green = static_cast <unsigned char> (luma + 0.5);
+        rgb[i].blue  = static_cast <unsigned char> (luma + 0.5);
+    }
+
+    return true;
+}
+
 int wxImage::GetWidth() const
 {
Only in wxWidgets/src/expat: debug
Only in wxWidgets/src/expat: expat.vcproj
Only in wxWidgets/src: gtk
Only in wxWidgets/src/jpeg: debug
Only in wxWidgets/src/jpeg: jpeg.vcproj
Only in wxWidgets/src: motif
diff -ru2 -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxWidgets.orig/src/msw/bmpbuttn.cpp wxWidgets/src/msw/bmpbuttn.cpp
--- wxWidgets.orig/src/msw/bmpbuttn.cpp	2005-06-08 23:05:52.000000000 -0400
+++ wxWidgets/src/msw/bmpbuttn.cpp	2005-10-27 06:48:53.312500000 -0400
@@ -3,5 +3,5 @@
 // Purpose:     wxBitmapButton
 // Author:      Julian Smart
-// Modified by:
+// Modified by: David Fileccia
 // Created:     04/01/98
 // RCS-ID:      $Id: bmpbuttn.cpp,v 1.57 2005/06/07 19:16:15 ABX Exp $
@@ -104,6 +104,121 @@
 */
 
+
+wxPoint wxBitmapButtonBase::GetTextLabelPosition() const
+{
+    wxSize size = GetSize ();
+
+    // Get the text extents and set the offset
+    int tw = 0;
+    int th = 0;
+    GetTextExtent(GetLabel(), &tw, &th);
+
+    // Figure the offsets due to the bitmap
+    wxPoint pos(0, 0);
+
+    switch(m_windowStyle & wxBU_ALIGN_MASK)
+    {
+    case wxBU_LEFT:
+        pos.x = m_bmpBase.GetWidth() + m_marginX * 2;
+        pos.y = (size.y - th) / 2;
+        break;
+
+    case wxBU_RIGHT:
+        pos.x = size.x - m_bmpBase.GetWidth() - m_marginX * 2 - tw;
+        pos.y = (size.y - th) / 2;
+        break;
+
+    case wxBU_TOP:
+        pos.x = (size.x - tw) / 2;
+        pos.y = m_bmpBase.GetHeight() + m_marginY * 2 - 2;
+        break;
+
+    case wxBU_BOTTOM:
+        pos.x = (size.x - tw) / 2;
+        pos.y = m_marginY * 2;
+        break;
+
+    default:
+        break;
+    }
+
+    return pos;
+}
+
+wxPoint wxBitmapButtonBase::GetBitmapLabelPosition() const
+{
+    wxSize size = GetSize();
+
+    // Figure the offsets due to the bitmap
+    wxPoint pos(0, 0);
+
+    switch(m_windowStyle & wxBU_ALIGN_MASK)
+    {
+    case wxBU_LEFT:
+        pos.x = GetMarginX() * 2;
+        pos.y = (size.y - m_bmpBase.GetHeight()) / 2;
+        break;
+
+    case wxBU_RIGHT:
+        pos.x = size.x - m_bmpBase.GetWidth() - m_marginX * 2;
+        pos.y = (size.y - m_bmpBase.GetHeight()) / 2;
+        break;
+
+    case wxBU_TOP:
+        pos.x = (size.x - m_bmpBase.GetWidth()) / 2;
+        pos.y = m_marginY * 2;
+        break;
+
+    case wxBU_BOTTOM:
+        pos.x = (size.x - m_bmpBase.GetWidth()) / 2;
+        pos.y = size.y - m_bmpBase.GetHeight() - m_marginY * 2;
+        break;
+
+    default:
+        break;
+    }
+
+    return pos;
+}
+
+void wxBitmapButtonBase::DrawTextLabel(wxDC& dc, const wxPoint& pos, bool enable) const
+{
+    dc.SetFont (GetFont());
+
+    // Set the label and accelerator index
+    wxString label = GetLabel();
+    int      index = label.Find(wxT('&'));
+
+    if (index != -1)
+        label.Remove(index, 1);
+
+    // Compute the bounding rectangle
+    wxSize size;
+    dc.GetTextExtent(label, &size.x, &size.y);
+
+    // Draw the text into the bitmap
+    wxColour nt = wxSystemSettings::GetColour(wxSYS_COLOUR_BTNTEXT);
+
+    if (!enable)
+    {
+        wxColour lt = wxSystemSettings::GetColour(wxSYS_COLOUR_3DHIGHLIGHT);
+        wxPoint  pt = wxPoint(pos.x+1, pos.y+1);
+
+        dc.SetTextForeground(lt);
+        dc.DrawLabel(label, wxRect(pt, size), wxALIGN_LEFT|wxALIGN_TOP, index);
+
+        nt = wxSystemSettings::GetColour(wxSYS_COLOUR_GRAYTEXT);
+    }
+
+    dc.SetTextForeground(nt);
+    dc.DrawLabel(label, wxRect(pos, size), wxALIGN_LEFT|wxALIGN_TOP, index);
+
+    dc.SetFont(wxNullFont);
+}
+
+
 bool wxBitmapButton::Create(wxWindow *parent, wxWindowID id,
     const wxBitmap& bitmap,
+    const wxString& label,
     const wxPoint& pos,
     const wxSize& size, long style,
@@ -111,7 +226,10 @@
     const wxString& name)
 {
-    m_bmpNormal = bitmap;
+	m_bmpBase = bitmap;
     SetName(name);
 
+    if (!label.IsEmpty() && (style & wxALIGN_MASK) == 0)
+        style |= wxBU_LEFT;
+
 #if wxUSE_VALIDATORS
     SetValidator(validator);
@@ -154,5 +272,5 @@
                     0,
                     wxT("BUTTON"),
-                    wxEmptyString,
+                    label,
                     msStyle,
                     0, 0, 0, 0,
@@ -168,8 +286,29 @@
     SetPosition(pos);
     SetBestSize(size);
+	OnSetBitmap();
 
     return true;
 }
 
+void wxBitmapButton::OnSetBitmap()
+{
+    // Protect against multiple entries
+    wxRecursionGuard guard(m_guard);
+    if (guard.IsInside())
+        return;
+
+    // Create a gray scale bitmap for disabling
+    wxImage image = m_bmpBase.ConvertToImage();
+    image.ConvertToGrayScale();
+ 
+    // Set the bitmaps that are pertinent
+    m_bmpDisabled = wxBitmap(image);
+    m_bmpNormal   = m_bmpBase;
+
+    // Force the cachig of the new size with bitmap
+    Update();
+    DoGetBestSize();
+}
+
 bool wxBitmapButton::SetBackgroundColour(const wxColour& colour)
 {
@@ -305,5 +444,5 @@
 #if defined(__WIN95__)
 
-void wxBitmapButton::DrawFace( WXHDC dc, int left, int top,
+void wxBitmapButton::OldDrawFace( WXHDC dc, int left, int top,
     int right, int bottom, bool sel )
 {
@@ -362,5 +501,5 @@
 #else
 
-void wxBitmapButton::DrawFace( WXHDC dc, int left, int top,
+void wxBitmapButton::OldDrawFace( WXHDC dc, int left, int top,
     int right, int bottom, bool sel )
 {
@@ -426,4 +565,34 @@
 #endif // defined(__WIN95__)
 
+void wxBitmapButton::DrawFace( WXHDC dc, int left, int top,
+    int right, int bottom, bool sel )
+{
+    OldDrawFace(dc, left, top, right, bottom, sel);
+
+    // We now need to draw any text labels, etc.
+    if (GetLabel().IsEmpty())
+        return;
+
+    // Update the text position and offset for selected
+    wxPoint tpos = GetTextLabelPosition();
+
+    if (sel)
+    {
+        tpos.x++;
+        tpos.y++;
+    }
+
+    // Create the DC and draw the text
+    wxClientDC cdc(this);
+
+    // Make sure the text is clipped
+    wxRect rect(wxPoint(0, 0), GetClientSize());
+    rect.Deflate(4, 4);
+
+    cdc.SetClippingRegion(rect);
+
+    DrawTextLabel(cdc, tpos, m_isEnabled);
+}
+
 
 void wxBitmapButton::DrawButtonFocus( WXHDC dc, int left, int top, int right,
@@ -451,4 +620,8 @@
                                    bool with_marg )
 {
+    // Reject this method when we have a label
+    if (!GetLabel().IsEmpty())
+        return;
+
     if ( !m_brushDisabled.Ok() )
     {
@@ -491,14 +664,39 @@
 wxSize wxBitmapButton::DoGetBestSize() const
 {
-    if ( m_bmpNormal.Ok() )
-    {
-        wxSize best(m_bmpNormal.GetWidth() + 2*m_marginX,
-                      m_bmpNormal.GetHeight() + 2*m_marginY);
-        CacheBestSize(best);
-        return best;
+    // no idea what our best size should be, defer to the base class
+    if ( !m_bmpBase.Ok() )
+        return wxBitmapButtonBase::DoGetBestSize();
+
+    wxSize best(m_bmpBase.GetWidth() + 2*m_marginX,
+                      m_bmpBase.GetHeight() + 2*m_marginY);
+
+    // Get the text extents
+    int tw = 0;
+    int th = 0;
+    GetTextExtent(GetLabel(), &tw, &th);
+
+    // Adjust the best size for the text label
+    switch (m_windowStyle & wxBU_ALIGN_MASK)
+    {
+    case wxBU_LEFT:
+    case wxBU_RIGHT:
+        best.x += tw + m_marginX;
+        if (th > best.y)
+            best.y = th;
+        break;
+
+    case wxBU_TOP:
+    case wxBU_BOTTOM:
+        best.y += th + m_marginY;
+        if (tw > best.x)
+            best.x = tw;
+        break;
+
+    default:
+        break;
     }
 
-    // no idea what our best size should be, defer to the base class
-    return wxBitmapButtonBase::DoGetBestSize();
+    CacheBestSize(best);
+    return best;
 }
 
diff -ru2 -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxWidgets.orig/src/msw/tbar95.cpp wxWidgets/src/msw/tbar95.cpp
--- wxWidgets.orig/src/msw/tbar95.cpp	2005-08-06 10:31:46.000000000 -0400
+++ wxWidgets/src/msw/tbar95.cpp	2005-10-24 12:08:11.671875000 -0400
@@ -3,5 +3,5 @@
 // Purpose:     wxToolBar
 // Author:      Julian Smart
-// Modified by:
+// Modified by: David Fileccia on 10/24/2005 to add grayed toolbar bitmaps
 // Created:     04/01/98
 // RCS-ID:      $Id: tbar95.cpp,v 1.157 2005/08/06 01:24:27 VZ Exp $
@@ -680,7 +680,8 @@
                         // fill the space in the image list with something, so
                         // we grey out the normal bitmap
-                        wxImage imgGreyed;
-                        wxCreateGreyedImage(bmp.ConvertToImage(), imgGreyed);
+                        wxImage imgGreyed = bmp.ConvertToImage();
+                        imgGreyed.ConvertToGrayScale();
 
+                        // TODO: this may not be necessary
                         // we need to have light grey background colour for
                         // MapBitmap() to work correctly
Only in wxWidgets/src/png: debug
Only in wxWidgets/src/png: png.vcproj
Only in wxWidgets/src/regex: debug
Only in wxWidgets/src/regex: regex.vcproj
Only in wxWidgets/src/tiff: debug
Only in wxWidgets/src/tiff: tiff.vcproj
diff -ru2 -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxWidgets.orig/src/univ/toolbar.cpp wxWidgets/src/univ/toolbar.cpp
--- wxWidgets.orig/src/univ/toolbar.cpp	2005-05-31 10:28:46.000000000 -0400
+++ wxWidgets/src/univ/toolbar.cpp	2005-10-24 12:07:31.984375000 -0400
@@ -3,5 +3,5 @@
 // Purpose:     implementation of wxToolBar for wxUniversal
 // Author:      Robert Roebling, Vadim Zeitlin (universalization)
-// Modified by:
+// Modified by: David Fileccia to use the image grayscale
 // Created:     20.02.02
 // Id:          $Id: toolbar.cpp,v 1.34 2005/05/31 09:28:45 JS Exp $
@@ -271,5 +271,7 @@
     {
         wxImage image( tool->GetNormalBitmap().ConvertToImage() );
-
+#if wxUSE_IMAGE
+        image.ConvertToGrayScale();
+#else
         // TODO: don't hardcode 180
         unsigned char bg_red = 180;
@@ -317,4 +319,5 @@
             }
         }
+#endif
 
         tool->SetDisabledBitmap(image);
Only in wxWidgets/src: wxWindows.suo
diff -ru2 -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxWidgets.orig/src/xrc/xh_bmpbt.cpp wxWidgets/src/xrc/xh_bmpbt.cpp
--- wxWidgets.orig/src/xrc/xh_bmpbt.cpp	2005-01-12 13:08:44.000000000 -0500
+++ wxWidgets/src/xrc/xh_bmpbt.cpp	2005-10-24 14:09:42.812500000 -0400
@@ -3,4 +3,5 @@
 // Purpose:     XRC resource for bitmap buttons
 // Author:      Brian Gavin
+// Modified By: David Fileccia 10/24/2005 for adding "label"
 // Created:     2000/09/09
 // RCS-ID:      $Id: xh_bmpbt.cpp,v 1.12 2005/01/07 21:33:12 VS Exp $
@@ -46,4 +47,5 @@
                    GetID(),
                    GetBitmap(wxT("bitmap"), wxART_BUTTON),
+                   GetText(wxT("label")),
                    GetPosition(), GetSize(),
                    GetStyle(wxT("style"), wxBU_AUTODRAW),
Only in wxWidgets/src/zlib: debug
Only in wxWidgets/src/zlib: zlib.vcproj

 	  	 
