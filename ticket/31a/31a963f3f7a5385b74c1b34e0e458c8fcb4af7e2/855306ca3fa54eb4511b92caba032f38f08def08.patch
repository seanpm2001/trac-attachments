 include/wx/msw/window.h |  8 ++++++++
 src/msw/control.cpp     | 31 +++++------------------------
 src/msw/window.cpp      | 53 +++++++++++++++++++++++++++++++++----------------
 3 files changed, 49 insertions(+), 43 deletions(-)

diff --git a/include/wx/msw/window.h b/include/wx/msw/window.h
index 294f12a..114c494 100644
--- a/include/wx/msw/window.h
+++ b/include/wx/msw/window.h
@@ -673,6 +673,14 @@ protected:
                                           int& x, int& y,
                                           int& w, int& h) const;
 
+    WXHWND MSWCreate_CommonCode(const wxString& classname,
+                                const wxString& title,
+                                const wxPoint& pos,
+                                const wxSize& size,
+                                WXDWORD style,
+                                WXDWORD extendedStyle,
+                                int controlId);
+
     bool MSWEnableHWND(WXHWND hWnd, bool enable);
 
     // Return the pointer to this window or one of its sub-controls if this ID
diff --git a/src/msw/control.cpp b/src/msw/control.cpp
index 9120f88..a339f28 100644
--- a/src/msw/control.cpp
+++ b/src/msw/control.cpp
@@ -93,7 +93,7 @@ bool wxControl::MSWCreateControl(const wxChar *classname,
                                  const wxPoint& pos,
                                  const wxSize& size)
 {
-    WXDWORD exstyle;
+    WXDWORD exstyle = (WXDWORD)-1;
     WXDWORD msStyle = MSWGetStyle(GetWindowStyle(), &exstyle);
 
     return MSWCreateControl(classname, msStyle, pos, size, label, exstyle);
@@ -122,31 +122,10 @@ bool wxControl::MSWCreateControl(const wxChar *classname,
         style |= WS_VISIBLE;
     }
 
-    // choose the position for the control: we have a problem with default size
-    // here as we can't calculate the best size before the control exists
-    // (DoGetBestSize() may need to use m_hWnd), so just choose the minimal
-    // possible but non 0 size because 0 window width/height result in problems
-    // elsewhere
-    int x = pos.x == wxDefaultCoord ? 0 : pos.x,
-        y = pos.y == wxDefaultCoord ? 0 : pos.y,
-        w = size.x == wxDefaultCoord ? 1 : size.x,
-        h = size.y == wxDefaultCoord ? 1 : size.y;
-
-    // ... and adjust it to account for a possible parent frames toolbar
-    AdjustForParentClientOrigin(x, y);
-
-    m_hWnd = (WXHWND)::CreateWindowEx
-                       (
-                        exstyle,            // extended style
-                        classname,          // the kind of control to create
-                        label.t_str(),      // the window name
-                        style,              // the window style
-                        x, y, w, h,         // the window position and size
-                        GetHwndOf(GetParent()),         // parent
-                        (HMENU)wxUIntToPtr(GetId()),    // child id
-                        wxGetInstance(),    // app instance
-                        NULL                // creation parameters
-                       );
+    m_hWnd = MSWCreate_CommonCode(classname, label,
+                                  pos, size,
+                                  style, exstyle,
+                                  GetId());
 
     if ( !m_hWnd )
     {
diff --git a/src/msw/window.cpp b/src/msw/window.cpp
index 12655d3..1a8f083 100644
--- a/src/msw/window.cpp
+++ b/src/msw/window.cpp
@@ -526,7 +526,7 @@ bool wxWindowMSW::Create(wxWindow *parent,
 
     parent->AddChild(this);
 
-    WXDWORD exstyle;
+    WXDWORD exstyle = (WXDWORD)-1;
     DWORD msflags = MSWGetCreateWindowFlags(&exstyle);
 
 #ifdef __WXUNIVERSAL__
@@ -3825,6 +3825,37 @@ WXHWND wxWindowMSW::MSWGetParent() const
     return m_parent ? m_parent->GetHWND() : WXHWND(NULL);
 }
 
+WXHWND wxWindowMSW::MSWCreate_CommonCode(const wxString& classname,
+                                         const wxString& title,
+                                         const wxPoint& pos,
+                                         const wxSize& size,
+                                         WXDWORD style,
+                                         WXDWORD extendedStyle,
+                                         int controlId)
+{
+    if ( !IsEnabled() )
+    {
+        style |= WS_DISABLED;
+    }
+
+    // choose the position/size for the new window
+    int x, y, w, h;
+    (void)MSWGetCreateWindowCoords(pos, size, x, y, w, h);
+
+    return (WXHWND)::CreateWindowEx
+                       (
+                        extendedStyle,
+                        classname.t_str(),
+                        title.t_str(),
+                        style,
+                        x, y, w, h,
+                        (HWND)MSWGetParent(),
+                        (HMENU)wxUIntToPtr(controlId),
+                        wxGetInstance(),
+                        NULL                        // no extra data
+                       );
+}
+
 bool wxWindowMSW::MSWCreate(const wxChar *wclass,
                             const wxChar *title,
                             const wxPoint& pos,
@@ -3843,10 +3874,6 @@ bool wxWindowMSW::MSWCreate(const wxChar *wclass,
     wxCHECK_MSG( wclass, false, "failed to register window class?" );
 
 
-    // choose the position/size for the new window
-    int x, y, w, h;
-    (void)MSWGetCreateWindowCoords(pos, size, x, y, w, h);
-
     // controlId is menu handle for the top level windows, so set it to 0
     // unless we're creating a child window
     int controlId = style & WS_CHILD ? GetId() : 0;
@@ -3863,18 +3890,10 @@ bool wxWindowMSW::MSWCreate(const wxChar *wclass,
     // do create the window
     wxWindowCreationHook hook(this);
 
-    m_hWnd = (WXHWND)::CreateWindowEx
-                       (
-                        extendedStyle,
-                        className.t_str(),
-                        title ? title : m_windowName.t_str(),
-                        style,
-                        x, y, w, h,
-                        (HWND)MSWGetParent(),
-                        (HMENU)wxUIntToPtr(controlId),
-                        wxGetInstance(),
-                        NULL                        // no extra data
-                       );
+    m_hWnd = MSWCreate_CommonCode(className, (title ? title : m_windowName),
+                                  pos, size,
+                                  style, extendedStyle,
+                                  controlId);
 
     if ( !m_hWnd )
     {
