Index: src/mac/thread.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/mac/thread.cpp,v
retrieving revision 1.25
diff -u -r1.25 thread.cpp
--- src/mac/thread.cpp	2003/09/13 00:03:09	1.25
+++ src/mac/thread.cpp	2003/09/20 21:08:20
@@ -64,6 +64,7 @@
 
 static ThreadID gs_idMainThread = kNoThreadID ;
 static bool gs_waitingForThread = FALSE ;
+size_t g_numberOfThreads = 0;
 
 // ============================================================================
 // MacOS implementation of thread classes
@@ -531,7 +532,7 @@
     do
     {
         YieldToAnyThread();
-    } while( clock() - start < milliseconds /  1000.0 * CLOCKS_PER_SEC ) ;
+    } while( clock() - start < milliseconds * CLOCKS_PER_SEC /  1000.0 ) ;
 }
 
 int wxThread::GetCPUCount()
@@ -571,6 +572,7 @@
 
 wxThread::wxThread(wxThreadKind kind)
 {
+    g_numberOfThreads++;
     m_internal = new wxThreadInternal();
 
     m_isDetached = kind == wxTHREAD_DETACHED;
@@ -579,6 +581,17 @@
 
 wxThread::~wxThread()
 {
+    if (g_numberOfThreads>0)
+    {
+        g_numberOfThreads--;
+    }
+#ifdef __WXDEBUG__
+    else
+    {
+        wxFAIL_MSG(wxT("More threads deleted than created."));
+    }
+#endif
+
     s_threads.Remove( (void*) this ) ;
     if (m_internal != NULL) {
         delete m_internal;
Index: src/mac/app.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/mac/app.cpp,v
retrieving revision 1.122
diff -u -r1.122 app.cpp
--- src/mac/app.cpp	2003/09/18 12:19:19	1.122
+++ src/mac/app.cpp	2003/09/20 21:08:40
@@ -69,6 +69,7 @@
 extern wxList wxPendingDelete;
 extern wxList *wxWinMacWindowList;
 extern wxList *wxWinMacControlList;
+extern size_t g_numberOfThreads;
 
 // statics for implementation
 
@@ -1249,7 +1250,16 @@
         if ( wxTheApp->ProcessIdle() )
             sleepTime = kEventDurationNoWait ;
         else
-            sleepTime = kEventDurationForever ;
+        {
+            if (g_numberOfThreads)
+            {
+                sleepTime = kEventDurationNoWait;
+            }
+            else
+            {
+                sleepTime = kEventDurationSecond;
+            }
+        }
     }
     else if ( status == eventLoopQuitErr )
     {
@@ -1283,7 +1293,16 @@
         if ( wxTheApp->ProcessIdle() )
             sleepTime = 0 ;
         else
-            sleepTime = GetCaretTime() / 2 ;
+        {
+            if (g_numberOfThreads)
+            {
+                sleepTime = kEventDurationNoWait;
+            }
+            else
+            {
+                sleepTime = kEventDurationSecond;
+            }
+        }
     }
     if ( event.what != kHighLevelEvent )
         SetRectRgn( (RgnHandle) s_macCursorRgn , event.where.h , event.where.v ,  event.where.h + 1 , event.where.v + 1 ) ;

 	  	 
