Index: docs/latex/wx/config.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/docs/latex/wx/config.tex,v
retrieving revision 1.33
diff -u -r1.33 config.tex
--- docs/latex/wx/config.tex	2003/04/28 10:37:08	1.33
+++ docs/latex/wx/config.tex	2004/03/01 17:31:57
@@ -446,7 +446,8 @@
 \func{bool}{Flush}{\param{bool }{bCurrentOnly = false}}
 
 permanently writes all changes (otherwise, they're only written from object's
-destructor)
+destructor).  wxFileConfig also has FlushToStream(wxOutputStream &outputStream), which allows 
+flushing a wxFileConfig created using the wxFileConfig(wxInputStream) constructor.
 
 \membersection{wxConfigBase::Get}\label{wxconfigbaseget}
 
Index: include/wx/fileconf.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/fileconf.h,v
retrieving revision 1.47
diff -u -r1.47 fileconf.h
--- include/wx/fileconf.h	2003/12/18 14:54:25	1.47
+++ include/wx/fileconf.h	2004/03/01 17:31:58
@@ -158,6 +158,10 @@
 
   virtual bool Flush(bool bCurrentOnly = FALSE);
 
+#ifdef wxUSE_STREAMS
+  bool FlushToStream(wxOutputStream &outputstream);
+#endif
+
   virtual bool RenameEntry(const wxString& oldName, const wxString& newName);
   virtual bool RenameGroup(const wxString& oldName, const wxString& newName);
 
Index: src/common/fileconf.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/fileconf.cpp,v
retrieving revision 1.110
diff -u -r1.110 fileconf.cpp
--- src/common/fileconf.cpp	2004/02/15 12:55:35	1.110
+++ src/common/fileconf.cpp	2004/03/01 17:32:07
@@ -1023,6 +1023,29 @@
   return ret;
 }
 
+#ifdef wxUSE_STREAMS
+bool wxFileConfig::FlushToStream(wxOutputStream &outputStream)
+{
+    if ( LineListIsEmpty() || !m_pRootGroup->IsDirty())
+        return TRUE;
+        
+    // write all strings to the output stream
+    for ( wxFileConfigLineList *p = m_linesHead; p != NULL; p = p->Next() )
+    {
+        wxString line = p->Text();
+        line += wxTextFile::GetEOL();
+
+        if(!outputStream.Write(line.mb_str(m_conv), line.Len()))
+        {
+            wxLogError(_("Can't write to output stream"));
+            return FALSE:
+        }
+    }
+
+    return TRUE;
+}
+#endif
+
 // ----------------------------------------------------------------------------
 // renaming groups/entries
 // ----------------------------------------------------------------------------

 	  	 
