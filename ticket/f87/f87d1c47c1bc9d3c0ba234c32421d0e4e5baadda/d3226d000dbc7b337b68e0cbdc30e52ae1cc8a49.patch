Index: samples/scroll/scroll.cpp
===================================================================
--- samples/scroll/scroll.cpp	(revision 75244)
+++ samples/scroll/scroll.cpp	(working copy)
@@ -103,6 +103,7 @@
     void OnScrollWin(wxCommandEvent& event);
     void OnMouseRightDown(wxMouseEvent& event);
     void OnMouseWheel(wxMouseEvent& event);
+    void MyOnScrollWinEvent( wxScrollWinEvent& event );
 
     wxButton *m_button;
 
@@ -668,6 +669,7 @@
     EVT_BUTTON( ID_DELBUTTON,   MyCanvas::OnDeleteButton)
     EVT_BUTTON( ID_MOVEBUTTON,  MyCanvas::OnMoveButton)
     EVT_BUTTON( ID_SCROLLWIN,   MyCanvas::OnScrollWin)
+    EVT_SCROLLWIN(              MyCanvas::MyOnScrollWinEvent )
 END_EVENT_TABLE()
 
 MyCanvas::MyCanvas(wxWindow *parent)
@@ -704,8 +706,31 @@
                  pt.x, pt.y, x, y);
 }
 
+/*
+ * The canvas is scrolled horizontally, when keyboard shift key
+ * is pressed when the mouse wheel is rotated
+ * and vertically if not
+ */
+int scroll_modifier;
+
+void MyCanvas::MyOnScrollWinEvent( wxScrollWinEvent& event )
+{
+    if( scroll_modifier )
+    {
+        Scroll( GetViewStart().x+scroll_modifier, wxDefaultCoord );
+        event.Skip( false );
+    }
+    else
+        event.Skip( true );
+}
+
 void MyCanvas::OnMouseWheel( wxMouseEvent &event )
 {
+    if( event.ShiftDown() )
+        scroll_modifier = event.GetWheelRotation() > 0 ? 1 : -1;
+    else
+        scroll_modifier = 0;
+/*
     wxPoint pt( event.GetPosition() );
     int x,y;
     CalcUnscrolledPosition( pt.x, pt.y, &x, &y );
@@ -713,7 +738,7 @@
                   "Rotation: %d, delta = %d",
                   pt.x, pt.y, x, y,
                   event.GetWheelRotation(), event.GetWheelDelta() );
-
+*/
     event.Skip();
 }
 
