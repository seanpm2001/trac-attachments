Index: include/wx/msw/listbox.h
===================================================================
--- include/wx/msw/listbox.h	(revision 76806)
+++ include/wx/msw/listbox.h	(working copy)
@@ -93,6 +93,8 @@
     int HitTest(const wxPoint& pt) const { return DoHitTestList(pt); }
     int HitTest(wxCoord x, wxCoord y) const { return DoHitTestList(wxPoint(x, y)); }
 
+    virtual void EnsureVisible(int n);
+	
     // ownerdrawn wxListBox and wxCheckListBox support
 #if wxUSE_OWNER_DRAWN
     // override base class virtuals
Index: src/msw/listbox.cpp
===================================================================
--- src/msw/listbox.cpp	(revision 76806)
+++ src/msw/listbox.cpp	(working copy)
@@ -221,6 +221,38 @@
 // implementation of wxListBoxBase methods
 // ----------------------------------------------------------------------------
 
+void wxListBox::EnsureVisible(int N)
+{
+    wxCHECK_RET( IsValid(N),
+                 wxT("invalid index in wxListBox::EnsureVisible") );
+
+	// when item is before the first visible item, make the item the first visible item
+	int firstItem = SendMessage(GetHwnd(), LB_GETTOPINDEX, (WPARAM)0, (LPARAM)0);
+	if ( N <= firstItem )
+	{
+		DoSetFirstItem(N);
+		return;
+	}
+
+	// retrieve item height in order to compute last visible item and scroll amount
+	int itemHeight = SendMessage(GetHwnd(), LB_GETITEMHEIGHT, (WPARAM)0, (LPARAM)0);
+	if ( itemHeight == LB_ERR || itemHeight == 0)
+		return;
+
+	// compute the amount of fully visible items
+	int countVisible = GetClientSize().y / itemHeight;
+	if (countVisible <= 0)
+		countVisible = 1;
+
+	// when item is before the last fully visible item, it is already visible	
+	int lastItem = firstItem + countVisible - 1;
+	if ( N <= lastItem )
+		return;
+
+	// make the item the last visible item by setting the first visible item accordingly
+	DoSetFirstItem(N - countVisible + 1);
+}
+
 void wxListBox::DoSetFirstItem(int N)
 {
     wxCHECK_RET( IsValid(N),
