--- smapi.cpp	Mon Jul 28 05:22:22 2003
+++ ./contrib/src/net/smapi.cpp	Mon Jul 28 04:56:32 2003
@@ -142,5 +142,4 @@
     //Setup the ascii versions of the profile name and password
     int nProfileLength = sProfileName.Length();
-    int nPasswordLength = sPassword.Length();
     
     LPSTR pszProfileName = NULL;
@@ -149,6 +148,4 @@
     if (nProfileLength)
     {
-//        pszProfileName = T2A((LPTSTR) (LPCTSTR) sProfileName);
-//        pszPassword = T2A((LPTSTR) (LPCTSTR) sPassword);
 #ifndef UNICODE
         pszProfileName = (LPSTR) sProfileName.c_str();
@@ -198,5 +195,5 @@
         else
         {
-            wxLogDebug(_T("Failed to logon to MAPI using a shared session, Error:%d\n"), nError);
+            wxLogDebug(_T("Failed to logon to MAPI using a shared session, Error:%ld\n"), nError);
             m_data->m_nLastError = nError;
         }
@@ -235,5 +232,5 @@
         if (nError != SUCCESS_SUCCESS)
         {
-            wxLogDebug(_T("Failed in call to MapiLogoff, Error:%d"), nError);
+            wxLogDebug(_T("Failed in call to MapiLogoff, Error:%ld"), nError);
             m_data->m_nLastError = nError;
             bSuccess = TRUE;
@@ -260,5 +257,4 @@
     
     //Call the MAPIResolveName function
-//    LPSTR lpszAsciiName = T2A((LPTSTR) (LPCTSTR) sName);
 #ifndef UNICODE
     LPSTR lpszAsciiName = (LPSTR) sName.c_str();
@@ -271,5 +267,6 @@
     if (nError != SUCCESS_SUCCESS)
     {
-        wxLogDebug(_T("Failed to resolve the name: %s, Error:%d\n"), sName, nError);
+        wxLogDebug(_T("Failed to resolve the name: %s, Error:%ld\n"),
+                   sName.c_str(), nError);
         m_data->m_nLastError = nError;
     }
@@ -302,6 +299,4 @@
     mapiMessage.lpszNoteText = cbBody.data();
 #endif
-//    mapiMessage.lpszSubject = T2A((LPTSTR) (LPCTSTR) message.m_subject);
-//    mapiMessage.lpszNoteText = T2A((LPTSTR) (LPCTSTR) message.m_body);
     mapiMessage.nRecipCount = message.m_to.GetCount() + message.m_cc.GetCount() + message.m_bcc.GetCount();
     wxASSERT(mapiMessage.nRecipCount); //Must have at least 1 recipient!
@@ -342,10 +337,9 @@
         {
             //Resolve worked, put the resolved name back into the sName
-            sName = wxString(lpTempRecip->lpszName,wxConvCurrent);
+            sName = wxString(lpTempRecip->lpszName,*wxConvCurrent);
             
             //Don't forget to free up the memory MAPI allocated for us
             m_data->m_lpfnMAPIFreeBuffer(lpTempRecip);
         }
-        //recip.lpszName = T2A((LPTSTR) (LPCTSTR) sName);
 #ifndef UNICODE
         recip.lpszName = (LPSTR) sName.c_str();
@@ -371,10 +365,9 @@
         {
             //Resolve worked, put the resolved name back into the sName
-            sName = wxString(lpTempRecip->lpszName,wxConvCurrent);
+            sName = wxString(lpTempRecip->lpszName,*wxConvCurrent);
             
             //Don't forget to free up the memory MAPI allocated for us
             m_data->m_lpfnMAPIFreeBuffer(lpTempRecip);
         }
-        //recip.lpszName = T2A((LPTSTR) (LPCTSTR) sName);
 #ifndef UNICODE
         recip.lpszName = (LPSTR) sName.c_str();
@@ -405,5 +398,4 @@
             m_data->m_lpfnMAPIFreeBuffer(lpTempRecip);
         }
-        //recip.lpszName = T2A((LPTSTR) (LPCTSTR) sName);
 #ifndef UNICODE
         recip.lpszName = (LPSTR) sName.c_str();
@@ -433,5 +425,4 @@
             file.nPosition = 0xFFFFFFFF;
             wxString& sFilename = message.m_attachments[i];
-            //file.lpszPathName = T2A((LPTSTR) (LPCTSTR) sFilename);
 
 #ifndef UNICODE
@@ -446,5 +437,4 @@
             {
                 wxString& sTitle = message.m_attachmentTitles[i];
-                //file.lpszFileName = T2A((LPTSTR) (LPCTSTR) sTitle);
 #ifndef UNICODE
                 file.lpszFileName = (LPSTR) sTitle.c_str();
@@ -465,5 +455,5 @@
     else
     {
-        wxLogDebug(_T("Failed to send mail message, Error:%d\n"), nError);
+        wxLogDebug(_T("Failed to send mail message, Error:%ld\n"), nError);
         m_data->m_nLastError = nError;
     }

 	  	 
