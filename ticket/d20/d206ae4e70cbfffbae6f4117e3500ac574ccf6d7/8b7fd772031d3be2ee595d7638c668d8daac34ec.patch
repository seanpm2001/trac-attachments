Index: include/wx/gtk/spinctrl.h
===================================================================
--- include/wx/gtk/spinctrl.h	(revisión: 72955)
+++ include/wx/gtk/spinctrl.h	(copia de trabajo)
@@ -73,6 +73,7 @@
     void GtkEnableEvents() const;
 
     virtual wxSize DoGetBestSize() const;
+    virtual wxSize DoGetSizeFromTextSize(int xlen, int ylen = -1) const;
     virtual GdkWindow *GTKGetWindow(wxArrayGdkWindows& windows) const;
 
     // Widgets that use the style->base colour for the BG colour should
Index: include/wx/msw/spinctrl.h
===================================================================
--- include/wx/msw/spinctrl.h	(revisión: 72955)
+++ include/wx/msw/spinctrl.h	(copia de trabajo)
@@ -116,6 +116,7 @@
     virtual void DoGetPosition(int *x, int *y) const;
     virtual void DoMoveWindow(int x, int y, int width, int height);
     virtual wxSize DoGetBestSize() const;
+    virtual wxSize DoGetSizeFromTextSize(int xlen, int ylen = -1) const;
     virtual void DoGetSize(int *width, int *height) const;
     virtual void DoGetClientSize(int *x, int *y) const;
 #if wxUSE_TOOLTIPS
Index: include/wx/generic/spinctlg.h
===================================================================
--- include/wx/generic/spinctlg.h	(revisión: 72955)
+++ include/wx/generic/spinctlg.h	(copia de trabajo)
@@ -105,6 +105,7 @@
 protected:
     // override the base class virtuals involved into geometry calculations
     virtual wxSize DoGetBestSize() const;
+    virtual wxSize DoGetSizeFromTextSize(int xlen, int ylen = -1) const;
     virtual void DoMoveWindow(int x, int y, int width, int height);
 
 #ifdef __WXMSW__
Index: samples/widgets/widgets.cpp
===================================================================
--- samples/widgets/widgets.cpp	(revisión: 72955)
+++ samples/widgets/widgets.cpp	(copia de trabajo)
@@ -875,6 +875,8 @@
         (*it)->SetFont(m_font);
         (*it)->Refresh();
     }
+    Layout();
+    Refresh();
 #else
     wxLogMessage(wxT("Font selection dialog not available in current build."));
 #endif
Index: samples/widgets/spinbtn.cpp
===================================================================
--- samples/widgets/spinbtn.cpp	(revisión: 72955)
+++ samples/widgets/spinbtn.cpp	(copia de trabajo)
@@ -460,6 +460,12 @@
 
     m_min = minNew;
     m_max = maxNew;
+    wxString smax('9', m_textMax->GetValue().Len());
+    m_spinctrl->SetSize(m_spinctrl->GetSizeFromTextSize(
+                                m_spinctrl->GetTextExtent(smax)));
+    smax += ".0";
+    m_spinctrldbl->SetSize(m_spinctrldbl->GetSizeFromTextSize(
+                                m_spinctrldbl->GetTextExtent(smax)));
 
     m_spinbtn->SetRange(minNew, maxNew);
     m_spinctrl->SetRange(minNew, maxNew);
Index: src/msw/spinctrl.cpp
===================================================================
--- src/msw/spinctrl.cpp	(revisión: 72955)
+++ src/msw/spinctrl.cpp	(copia de trabajo)
@@ -718,25 +718,28 @@
 
 wxSize wxSpinCtrl::DoGetBestSize() const
 {
+    return DoGetSizeFromTextSize(DEFAULT_ITEM_WIDTH);
+}
+
+wxSize wxSpinCtrl::DoGetSizeFromTextSize(int xlen, int ylen) const
+{
     wxSize sizeBtn = wxSpinButton::DoGetBestSize();
-    sizeBtn.x += DEFAULT_ITEM_WIDTH + MARGIN_BETWEEN;
 
     int y;
     wxGetCharSize(GetHWND(), NULL, &y, GetFont());
-    y = EDIT_HEIGHT_FROM_CHAR_HEIGHT(y);
-
     // JACS: we should always use the height calculated
     // from above, because otherwise we'll get a spin control
     // that's too big. So never use the height calculated
     // from wxSpinButton::DoGetBestSize().
 
-    // if ( sizeBtn.y < y )
-    {
-        // make the text tall enough
-        sizeBtn.y = y;
-    }
+    wxSize tsize(xlen + sizeBtn.x + MARGIN_BETWEEN + 0.3 * y + 10,
+                 EDIT_HEIGHT_FROM_CHAR_HEIGHT(y));
 
-    return sizeBtn;
+    // Perhaps the user wants something different from CharHeight
+    if ( ylen > 0 )
+        tsize.IncBy(0, ylen - y);
+
+    return tsize;
 }
 
 void wxSpinCtrl::DoMoveWindow(int x, int y, int width, int height)
Index: src/generic/spinctlg.cpp
===================================================================
--- src/generic/spinctlg.cpp	(revisión: 72955)
+++ src/generic/spinctlg.cpp	(copia de trabajo)
@@ -275,10 +275,26 @@
 
 wxSize wxSpinCtrlGenericBase::DoGetBestSize() const
 {
-    wxSize sizeBtn  = m_spinButton->GetBestSize(),
-           sizeText = m_textCtrl->GetBestSize();
+    return DoGetSizeFromTextSize(m_textCtrl->GetBestSize().x, -1);
+}
 
-    return wxSize(sizeBtn.x + sizeText.x + MARGIN, sizeText.y);
+wxSize wxSpinCtrlGenericBase::DoGetSizeFromTextSize(int xlen, int ylen) const
+{
+    wxSize sizeBtn  = m_spinButton->GetBestSize();
+    wxSize totalS( m_textCtrl->GetBestSize() );
+
+    wxSize tsize(xlen + sizeBtn.x + MARGIN, totalS.y);
+#if defined(__WXMSW__)
+    tsize.IncBy(0.4 * totalS.y + 4, 0);
+#elif defined(__WXGTK__)
+    tsize.IncBy(totalS.y + 10, 0);
+#endif // MSW GTK
+
+    // Perhaps the user wants something different from CharHeight
+    if ( ylen > 0 )
+        tsize.IncBy(0, ylen - GetCharHeight());
+
+    return tsize;
 }
 
 void wxSpinCtrlGenericBase::DoMoveWindow(int x, int y, int width, int height)
Index: src/gtk/spinctrl.cpp
===================================================================
--- src/gtk/spinctrl.cpp	(revisión: 72955)
+++ src/gtk/spinctrl.cpp	(copia de trabajo)
@@ -337,12 +337,41 @@
 
 wxSize wxSpinCtrlGTKBase::DoGetBestSize() const
 {
-    wxSize ret( wxControl::DoGetBestSize() );
-    wxSize best(95, ret.y); // FIXME: 95?
-    CacheBestSize(best);
-    return best;
+    return DoGetSizeFromTextSize(95);
 }
 
+wxSize wxSpinCtrlGTKBase::DoGetSizeFromTextSize(int xlen, int ylen) const
+{
+    wxASSERT_MSG( m_widget, wxS("GetSizeFromTextSize called before creation") );
+
+    // Set a as small as possible size for the control, so preferred sizes
+    // return "natural" sizes, not taking into account the previous ones (which
+    // seems to be GTK+3 behaviour)
+    gtk_widget_set_size_request(m_widget, 0, 0);
+
+    // Both Gtk+2 and Gtk+3 use current value/range to measure control's width.
+    // So, we can't ask Gtk+ for its width. Instead, we used hardcoded values.
+
+    // Returned height is OK
+    wxSize totalS = GTKGetPreferredSize(m_widget);
+
+#if GTK_CHECK_VERSION(3,4,0)
+    // two buttons in horizontal
+    totalS.x = 46 + 15; // margins included
+#else
+    // two small buttons in vertical
+    totalS.x = GetFont().GetPixelSize().y + 13; // margins included
+#endif
+
+    wxSize tsize(xlen + totalS.x, totalS.y);
+
+    // Perhaps the user wants something different from CharHeight
+    if ( ylen > 0 )
+        tsize.IncBy(0, ylen - GetCharHeight());
+
+    return tsize;
+}
+
 // static
 wxVisualAttributes
 wxSpinCtrlGTKBase::GetClassDefaultAttributes(wxWindowVariant WXUNUSED(variant))
