--- src/mac/carbon/app.cpp.260	Tue Mar 29 14:10:57 2005
+++ src/mac/carbon/app.cpp	Sat May 21 11:09:55 2005
@@ -1252,7 +1252,6 @@
         UInt32 state = 0;
         UInt32 keyInfo = KeyTranslate((Ptr)GetScriptManagerVariable(smKCHRCache), ( modifiers & (~(controlKey|shiftKey|optionKey))) | keycode, &state);
         keychar = short(keyInfo & charCodeMask);
-        keycode = short(keyInfo & keyCodeMask) >> 8 ;
     }
     long keyval = wxMacTranslateKey(keychar, keycode) ;
     long realkeyval = keyval ;
@@ -1263,6 +1262,39 @@
         keyval = wxToupper( keyval ) ;
     }
 
+    // Check for NUMPAD keys
+    if (keyval >= '0' && keyval <= '9' && keycode >= 82 && keycode <= 92)
+    {
+        keyval = keyval - '0' + WXK_NUMPAD0;
+    }
+    else if (keycode >= 67 && keycode <= 81)
+    {
+        switch (keycode)
+        {
+        case 76 :
+            keyval = WXK_NUMPAD_ENTER;
+            break;
+        case 81:
+            keyval = WXK_NUMPAD_EQUAL;
+            break;
+        case 67:
+            keyval = WXK_NUMPAD_MULTIPLY;
+            break;
+        case 75:
+            keyval = WXK_NUMPAD_DIVIDE;
+            break;
+        case 78:
+            keyval = WXK_NUMPAD_SUBTRACT;
+            break;
+        case 69:
+            keyval = WXK_NUMPAD_ADD;
+            break;
+        case 65:
+            keyval = WXK_NUMPAD_DECIMAL;
+            break;
+        } // end switch
+    }
+
     wxKeyEvent event(wxEVT_KEY_DOWN);
     bool handled = false ;
     event.m_shiftDown = modifiers & shiftKey;
@@ -1273,7 +1305,8 @@
 #if wxUSE_UNICODE
     event.m_uniChar = uniChar ;
 #endif
-
+    event.m_rawCode = keymessage;
+    event.m_rawFlags = modifiers;
     event.m_x = wherex;
     event.m_y = wherey;
     event.SetTimestamp(when);
@@ -1399,7 +1432,6 @@
         UInt32 state = 0;
         UInt32 keyInfo = KeyTranslate((Ptr)GetScriptManagerVariable(smKCHRCache), ( modifiers & (~(controlKey|shiftKey|optionKey))) | keycode, &state);
         keychar = short(keyInfo & charCodeMask);
-        keycode = short(keyInfo & keyCodeMask) >> 8 ;
     }
     long keyval = wxMacTranslateKey(keychar, keycode) ;
 
@@ -1407,6 +1439,40 @@
     {
         keyval = wxToupper( keyval ) ;
     }
+
+    // Check for NUMPAD keys
+    if (keyval >= '0' && keyval <= '9' && keycode >= 82 && keycode <= 92)
+    {
+        keyval = keyval - '0' + WXK_NUMPAD0;
+    }
+    else if (keycode >= 67 && keycode <= 81)
+    {
+        switch (keycode)
+        {
+        case 76 :
+            keyval = WXK_NUMPAD_ENTER;
+            break;
+        case 81:
+            keyval = WXK_NUMPAD_EQUAL;
+            break;
+        case 67:
+            keyval = WXK_NUMPAD_MULTIPLY;
+            break;
+        case 75:
+            keyval = WXK_NUMPAD_DIVIDE;
+            break;
+        case 78:
+            keyval = WXK_NUMPAD_SUBTRACT;
+            break;
+        case 69:
+            keyval = WXK_NUMPAD_ADD;
+            break;
+        case 65:
+            keyval = WXK_NUMPAD_DECIMAL;
+            break;
+        } // end switch
+    }
+
     bool handled = false ;
 
     wxKeyEvent event(wxEVT_KEY_UP);
@@ -1419,6 +1485,8 @@
     event.m_uniChar = uniChar ;
 #endif
 
+    event.m_rawCode = keymessage;
+    event.m_rawFlags = modifiers;
     event.m_x = wherex;
     event.m_y = wherey;
     event.SetTimestamp(when);
--- include/wx/features.h.260	Mon Apr 11 16:18:25 2005
+++ include/wx/features.h	Sat May 21 09:47:54 2005
@@ -23,7 +23,7 @@
 #endif
 
 /*  the raw keyboard codes are generated under wxGTK and wxMSW only */
-#if defined(__WXGTK__) || defined(__WXMSW__)
+#if defined(__WXGTK__) || defined(__WXMSW__) || defined(__WXMAC__)
     #define wxHAS_RAW_KEY_CODES
 #else
     #undef wxHAS_RAW_KEY_CODES

 	  	 
