Index: src/common/datavcmn.cpp
===================================================================
--- src/common/datavcmn.cpp	(revision 61873)
+++ src/common/datavcmn.cpp	(working copy)
@@ -233,9 +233,9 @@
     bool item2_is_container = IsContainer(item2);
 
     if (item1_is_container && !item2_is_container)
+        return -1;
+    if (item2_is_container && !item1_is_container)
         return 1;
-    if (item2_is_container && !item1_is_container)
-        return -1;
 
     wxVariant value1,value2;
     GetValue( value1, item1, column );
@@ -282,6 +282,14 @@
         if (dt2.IsEarlierThan(dt1))
             return -11;
     }
+    else if (value1.GetType() == wxT("bool"))
+    {
+        long l1 = value1.GetBool();
+        long l2 = value2.GetBool();
+        long res = l1-l2;
+        if (res)
+            return res;
+    }
 
     // items must be different
     wxUIntPtr id1 = wxPtrToUInt(item1.GetID()),
Index: src/generic/datavgen.cpp
===================================================================
--- src/generic/datavgen.cpp	(revision 61873)
+++ src/generic/datavgen.cpp	(working copy)
@@ -1433,12 +1433,6 @@
     m_owner->CalcUnscrolledPosition( xx, yy, &xx, &yy );
     unsigned int row = GetLineAt( yy );
 
-    if ((row >= GetRowCount()) || (yy > GetEndOfLastCol()))
-    {
-        RemoveDropHint();
-        return wxDragNone;
-    }
-
     wxDataViewItem item = GetItemByRow( row );
 
     wxDataViewModel *model = GetOwner()->GetModel();
@@ -1463,10 +1457,11 @@
 
     if (m_dropHint && (row != m_dropHintLine))
         RefreshRow( m_dropHintLine );
-    m_dropHint = true;
-    m_dropHintLine = row;
-    RefreshRow( row );
-
+    if (row < GetRowCount()){
+      m_dropHint = true;
+      m_dropHintLine = row;
+      RefreshRow( row );
+    }
     return def;
 }
 
@@ -1479,9 +1474,6 @@
     m_owner->CalcUnscrolledPosition( xx, yy, &xx, &yy );
     unsigned int row = GetLineAt( yy );
 
-    if ((row >= GetRowCount()) || (yy > GetEndOfLastCol()))
-        return false;
-
     wxDataViewItem item = GetItemByRow( row );
 
     wxDataViewModel *model = GetOwner()->GetModel();
@@ -1498,7 +1490,7 @@
         return false;
 
     return true;
-}
+} 
 
 wxDragResult wxDataViewMainWindow::OnData( wxDataFormat format, wxCoord x, wxCoord y,
                                            wxDragResult def )
@@ -1508,9 +1500,6 @@
     m_owner->CalcUnscrolledPosition( xx, yy, &xx, &yy );
     unsigned int row = GetLineAt( yy );
 
-    if ((row >= GetRowCount()) || (yy > GetEndOfLastCol()))
-        return wxDragNone;
-
     wxDataViewItem item = GetItemByRow( row );
 
     wxDataViewModel *model = GetOwner()->GetModel();
@@ -1820,9 +1809,13 @@
 
                 dataitem = node->GetItem();
 
-                if ((i > 0) && model->IsContainer(dataitem) &&
+                if ((i > 0)&&/* && model->IsContainer(dataitem) &&*/
                     !model->HasContainerColumns(dataitem))
-                    continue;
+                {
+                  if (!node->HasChildren())
+                      delete node;
+                  continue;
+                }
             }
             else
             {
@@ -3678,6 +3671,21 @@
         (model->IsContainer(item)) &&
         (!model->HasContainerColumns(item)));
 
+
+    if (event.LeftDown()||event.LeftDClick())
+    {
+      if ((!ignore_other_columns) && (cell->GetMode() == wxDATAVIEW_CELL_ACTIVATABLE))
+      {
+          wxVariant value;
+          model->GetValue( value, item, col->GetModelColumn() );
+          cell->SetValue( value );
+          wxRect cell_rect( xpos, GetLineStart( current ),
+                          col->GetWidth(), GetLineHeight( current ) );
+          cell->Activate( cell_rect, model, item, col->GetModelColumn() );
+          return;
+      }
+    }
+
     if (event.LeftDClick())
     {
         if(hoverOverExpander)
@@ -3714,8 +3722,10 @@
             // a double click, but as a simple click instead
             simulateClick = true;
         }
-    }
+		}
 
+
+
     if (event.LeftUp() && !hoverOverExpander)
     {
         if (m_lineSelectSingleOnUp != (unsigned int)-1)
@@ -3791,6 +3801,10 @@
             Collapse(current);
         else
             Expand(current);
+
+        if (!node->HasChildren())
+          delete node;
+      
     }
     else if ((event.LeftDown() || simulateClick) && !hoverOverExpander)
     {
