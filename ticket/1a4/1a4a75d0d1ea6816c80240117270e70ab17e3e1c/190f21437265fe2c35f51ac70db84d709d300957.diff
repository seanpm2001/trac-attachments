diff -uNr wxWidgets-2010-06-30/src/msw/dc.cpp wxWidgets-2.9.x/src/msw/dc.cpp
--- wxWidgets-2010-06-30/src/msw/dc.cpp	2010-06-30 08:51:22.000000000 -0400
+++ wxWidgets-2.9.x/src/msw/dc.cpp	2010-08-13 10:35:39.297589300 -0400
@@ -1119,6 +1119,7 @@
     rx2 += (int)(100.0 * abs(w) * cos(ea));
     ry2 -= (int)(100.0 * abs(h) * m_signY * sin(ea));
 
+#if 0
     // Swap start and end positions if the end angle is less than the start angle.
     if (ea < sa) {
         int temp;
@@ -1129,6 +1130,7 @@
         ry2 = ry1;
         ry1 = temp;
     }
+#endif
 
     // draw pie with NULL_PEN first and then outline otherwise a line is
     // drawn from the start and end points to the centre
diff -uNr wxWidgets-2010-06-30/src/msw/utils.cpp wxWidgets-2.9.x/src/msw/utils.cpp
--- wxWidgets-2010-06-30/src/msw/utils.cpp	2010-06-30 08:51:22.000000000 -0400
+++ wxWidgets-2.9.x/src/msw/utils.cpp	2010-09-09 14:19:54.164029000 -0400
@@ -745,10 +745,25 @@
             break;
 
         case wxSIGNONE:
-            // do nothing, we just want to test for process existence
+            // do nothing, we just want to test for process existence.  For whatever
+            // reason, OpenProcess returns a handle even when a process has terminated
+            // so WaitForSingleObject is needed to check for existance. WAIT_TIMEOUT
+            // is returned if the process is still running.
+            if ( ::WaitForSingleObject(hProcess, 0) != WAIT_TIMEOUT )
+               ok = false;
+
             if ( krc )
-                *krc = wxKILL_OK;
-            return 0;
+            {
+               if ( !ok )
+                  *krc = wxKILL_NO_PROCESS;
+               else
+                  *krc = wxKILL_OK;
+            }
+
+            if (!ok)
+               return -1;
+            else
+               return 0;
 
         default:
             // any other signal means "terminate"
