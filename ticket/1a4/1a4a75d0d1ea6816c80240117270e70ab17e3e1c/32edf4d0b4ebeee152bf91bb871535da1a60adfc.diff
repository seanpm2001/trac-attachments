diff --git a/src/msw/utils.cpp b/src/msw/utils.cpp
index 73b7f33..62c721c 100644
--- a/src/msw/utils.cpp
+++ b/src/msw/utils.cpp
@@ -713,8 +713,6 @@ int wxKill(long pid, wxSignal sig, wxKillError *krc, int flags)
         return -1;
     }
 
-    wxON_BLOCK_EXIT1(::CloseHandle, hProcess);
-
     bool ok = true;
     switch ( sig )
     {
@@ -737,9 +735,7 @@ int wxKill(long pid, wxSignal sig, wxKillError *krc, int flags)
 
         case wxSIGNONE:
             // do nothing, we just want to test for process existence
-            if ( krc )
-                *krc = wxKILL_OK;
-            return 0;
+            break;
 
         default:
             // any other signal means "terminate"
@@ -793,9 +789,9 @@ int wxKill(long pid, wxSignal sig, wxKillError *krc, int flags)
         {
             case WAIT_OBJECT_0:
                 // process terminated
-                if ( !::GetExitCodeProcess(hProcess, &rc) )
+                if ( krc )
                 {
-                    wxLogLastError(_T("GetExitCodeProcess"));
+                    *krc = wxKILL_NO_PROCESS;
                 }
                 break;
 
@@ -816,16 +812,21 @@ int wxKill(long pid, wxSignal sig, wxKillError *krc, int flags)
         }
     }
 
+    ::CloseHandle(hProcess);
 
+    // be careful to interpret rc correctly: for wxSIGNONE we return success if
+    // the process exists, for all the other sig values -- if it doesn't
     // the return code is the same as from Unix kill(): 0 if killed
     // successfully or -1 on error
-    if ( !ok || rc == STILL_ACTIVE )
-        return -1;
+    if ( ok && ((sig == wxSIGNONE) == (rc == STILL_ACTIVE)))
+    {
+        if ( krc )
+            *krc = wxKILL_OK;
 
-    if ( krc )
-        *krc = wxKILL_OK;
+        return 0;
+    }
 
-    return 0;
+    return -1;
 }
 
 typedef HANDLE (WINAPI *CreateToolhelp32Snapshot_t)(DWORD,DWORD);
