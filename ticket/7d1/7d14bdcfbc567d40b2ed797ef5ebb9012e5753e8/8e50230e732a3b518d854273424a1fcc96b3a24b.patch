Index: src/msw/app.cpp
===================================================================
--- src/msw/app.cpp	(revision 72498)
+++ src/msw/app.cpp	(working copy)
@@ -172,10 +172,10 @@
        focus/activation entirely when the child process terminates which would
        happen if we simply disabled everything using wxWindowDisabler. Indeed,
        remember that Windows will never activate a disabled window and when the
-       last childs window is closed and Windows looks for a window to activate
+       last child window is closed and Windows looks for a window to activate
        all our windows are still disabled. There is no way to enable them in
-       time because we don't know when the childs windows are going to be
-       closed, so the solution we use here is to keep one special tiny frame
+       time because we don't know when the child windows are going to be
+       closed, so the solution we use here is to keep one special tiny TLW
        enabled all the time. Then when the child terminates it will get
        activated and when we close it below -- after reenabling all the other
        windows! -- the previously active window becomes activated again and
@@ -186,16 +186,18 @@
     // first disable all existing windows
     wxWindowDisabler *wd = new wxWindowDisabler;
 
-    // then create an "invisible" frame: it has minimal size, is positioned
-    // (hopefully) outside the screen and doesn't appear on the taskbar
-    wxWindow *winActive = new wxFrame
+    // then create an "invisible" dialog: it has minimal size, is positioned
+    // (hopefully) outside the screen and doesn't appear on the taskbar;
+    // a dialog is better than a frame because it will not show in the Alt+Tab
+    // list, unlike the latter
+    wxWindow *winActive = new wxDialog
                     (
                         wxTheApp->GetTopWindow(),
                         wxID_ANY,
                         wxEmptyString,
                         wxPoint(32600, 32600),
                         wxSize(1, 1),
-                        wxDEFAULT_FRAME_STYLE | wxFRAME_NO_TASKBAR
+                        0
                     );
     winActive->Show();
 
@@ -210,7 +212,7 @@
 
     delete data->wd;
 
-    // finally delete the dummy frame and, as wd has been already destroyed and
+    // finally delete the dummy TLW and, as wd has been already destroyed and
     // the other windows reenabled, the activation is going to return to the
     // window which had had it before
     data->winActive->Destroy();
