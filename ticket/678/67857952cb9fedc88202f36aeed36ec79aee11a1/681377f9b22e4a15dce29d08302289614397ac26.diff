Index: include/wx/valtext.h
===================================================================
RCS file: /cvs/wxWindows-2.4.2/include/wx/valtext.h,v
retrieving revision 1.1.1.1
retrieving revision 1.2
diff -u -r1.1.1.1 -r1.2
--- include/wx/valtext.h	27 Jan 2004 16:34:28 -0000	1.1.1.1
+++ include/wx/valtext.h	18 Feb 2004 17:04:16 -0000	1.2
@@ -4,7 +4,7 @@
 // Author:      Julian Smart
 // Modified by:
 // Created:     29/01/98
-// RCS-ID:      $Id: valtext.h,v 1.1.1.1 2004/01/27 16:34:28 nick Exp $
+// RCS-ID:      $Id: valtext.h,v 1.2 2004/02/18 17:04:16 nick Exp $
 // Copyright:   (c) 1998 Julian Smart
 // Licence:   	wxWindows license
 /////////////////////////////////////////////////////////////////////////////
@@ -42,6 +42,8 @@
     wxTextValidator(const wxTextValidator& val);
 
     ~wxTextValidator();
+	
+	inline void SetMaxLength(const long maxLength) { m_maxLength = maxLength; }
 
     // Make a clone of this validator (or return NULL) - currently necessary
     // if you're passing a reference to a validator.
@@ -80,6 +82,7 @@
 
 protected:
     long            m_validatorStyle;
+	long			m_maxLength;
     wxString *      m_stringValue;
     wxStringList    m_includeList;
     wxStringList    m_excludeList;
Index: src/common/valtext.cpp
===================================================================
RCS file: /cvs/wxWindows-2.4.2/src/common/valtext.cpp,v
retrieving revision 1.1.1.1
retrieving revision 1.3
diff -u -r1.1.1.1 -r1.3
--- src/common/valtext.cpp	27 Jan 2004 16:34:46 -0000	1.1.1.1
+++ src/common/valtext.cpp	25 Mar 2004 12:20:31 -0000	1.3
@@ -4,7 +4,7 @@
 // Author:      Julian Smart
 // Modified by:
 // Created:     04/01/98
-// RCS-ID:      $Id: valtext.cpp,v 1.1.1.1 2004/01/27 16:34:46 nick Exp $
+// RCS-ID:      $Id: valtext.cpp,v 1.3 2004/03/25 12:20:31 nick Exp $
 // Copyright:   (c) Julian Smart and Markus Holzem
 // Licence:     wxWindows license
 /////////////////////////////////////////////////////////////////////////////
@@ -52,6 +52,7 @@
 {
     m_validatorStyle = style ;
     m_stringValue = val ;
+	m_maxLength = 0;
 /*
     m_refData = new wxVTextRefData;
 
@@ -72,6 +73,7 @@
 
     m_validatorStyle = val.m_validatorStyle ;
     m_stringValue = val.m_stringValue ;
+	m_maxLength = val.m_maxLength;
 
     wxNode *node = val.m_includeList.First() ;
     while ( node )
@@ -297,8 +299,26 @@
             // eat message
             return;
         }
-    }
+		// check length of string
+		if (m_maxLength>0)
+		{
+			long from, to, selected;
+			((wxTextCtrl*)m_validatorWindow)->GetSelection (&from, &to);
+			selected = to-from;
+			
+			if (!(keyCode < WXK_SPACE || keyCode == WXK_DELETE || keyCode > WXK_START) &&
+				( (long)((wxTextCtrl*)m_validatorWindow)->GetValue().Length() >= m_maxLength) &&
+				( selected==0 )
+				)
+			{
+				if ( !wxValidator::IsSilent() ) wxBell();
+				// eat message
+				return;
+			}
 
+		}
+    }
+	
     event.Skip();
 }
 

 	  	 
