Common subdirectories: /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/CVS and ./CVS
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/aga.h ./aga.h
113c113
< #endif
---
> #endif
\ No newline at end of file
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/bitmap.h ./bitmap.h
103,105d102
< #ifdef __WXMAC_X__
<   virtual ~wxBitmapHandler() {}  // Added min for Mac X
< #endif
144d140
<   wxBitmap(char **data);
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/checklst.h ./checklst.h
22c22
< #if !(defined(__MWERKS__) || defined(__WXMAC_X__))
---
> #ifndef __MWERKS__
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/choice.h ./choice.h
51,53d50
<    // Added min Append and GetClientData
<   virtual void Append(const wxString &item, void *client_data);
<   virtual void *GetClientData(int index);
71c68
< 	void   MacHandleControlClick( ControlHandle control , SInt16 controlpart ) ;
---
> 	void		MacHandleControlClick( ControlHandle control , SInt16 controlpart ) ;
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/colordlg.h ./colordlg.h
21d20
< #include "wx/generic/colrdlgg.h"
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/dataobj.h ./dataobj.h
29,31d28
< #ifdef __WXMAC_X__
<    ~wxDataObject() {}  // Added min for Mac X
< #endif
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/dc.h ./dc.h
9c9
< // Licence:    wxWindows licence
---
> // Licence:   	wxWindows licence
31,38c31,38
< #define MM_TEXT         0
< #define MM_ISOTROPIC 1
< #define MM_ANISOTROPIC  2
< #define MM_LOMETRIC     3
< #define MM_HIMETRIC     4
< #define MM_TWIPS     5
< #define MM_POINTS    6
< #define MM_METRIC    7
---
> #define MM_TEXT			0
> #define MM_ISOTROPIC	1
> #define MM_ANISOTROPIC	2
> #define MM_LOMETRIC		3
> #define MM_HIMETRIC		4
> #define MM_TWIPS		5
> #define MM_POINTS		6
> #define MM_METRIC		7
301,307c301,307
<    {
<      long new_x = x - m_deviceOriginX;
<      if (new_x > 0) 
<        return (long)((double)(new_x) / m_scaleX + 0.5) * m_signX + m_logicalOriginX;
<      else
<        return (long)((double)(new_x) / m_scaleX - 0.5) * m_signX + m_logicalOriginX;
<    }
---
> 	{
> 	  long new_x = x - m_deviceOriginX;
> 	  if (new_x > 0) 
> 	    return (long)((double)(new_x) / m_scaleX + 0.5) * m_signX + m_logicalOriginX;
> 	  else
> 	    return (long)((double)(new_x) / m_scaleX - 0.5) * m_signX + m_logicalOriginX;
> 	}
309,314c309,314
<    { 
<      if (x > 0) 
<        return (long)((double)(x) / m_scaleX + 0.5);
<      else
<        return (long)((double)(x) / m_scaleX - 0.5);
<    }
---
> 	{ 
> 	  if (x > 0) 
> 	    return (long)((double)(x) / m_scaleX + 0.5);
> 	  else
> 	    return (long)((double)(x) / m_scaleX - 0.5);
> 	}
316,322c316,322
<    {
<      long new_y = y - m_deviceOriginY;
<      if (new_y > 0)
<        return (long)((double)(new_y) / m_scaleY + 0.5) * m_signY + m_logicalOriginY;
<      else
<        return (long)((double)(new_y) / m_scaleY - 0.5) * m_signY + m_logicalOriginY;
<    }
---
> 	{
> 	  long new_y = y - m_deviceOriginY;
> 	  if (new_y > 0)
> 	    return (long)((double)(new_y) / m_scaleY + 0.5) * m_signY + m_logicalOriginY;
> 	  else
> 	    return (long)((double)(new_y) / m_scaleY - 0.5) * m_signY + m_logicalOriginY;
> 	}
324,329c324,329
<    { 
<      if (y > 0)
<        return (long)((double)(y) / m_scaleY + 0.5);
<      else
<        return (long)((double)(y) / m_scaleY - 0.5);
<    }
---
> 	{ 
> 	  if (y > 0)
> 	    return (long)((double)(y) / m_scaleY + 0.5);
> 	  else
> 	    return (long)((double)(y) / m_scaleY - 0.5);
> 	}
331,337c331,337
<    { 
<      long new_x = x - m_logicalOriginX;
<      if (new_x > 0)
<        return (long)((double)(new_x) * m_scaleX + 0.5) * m_signX + m_deviceOriginX;
<      else
<        return (long)((double)(new_x) * m_scaleX - 0.5) * m_signX + m_deviceOriginX;
<    }
---
> 	{ 
> 	  long new_x = x - m_logicalOriginX;
> 	  if (new_x > 0)
> 	    return (long)((double)(new_x) * m_scaleX + 0.5) * m_signX + m_deviceOriginX;
> 	  else
> 	    return (long)((double)(new_x) * m_scaleX - 0.5) * m_signX + m_deviceOriginX;
> 	}
339,344c339,344
<    { 
<      if (x > 0)
<        return (long)((double)(x) * m_scaleX + 0.5);
<      else
<        return (long)((double)(x) * m_scaleX - 0.5);
<    }
---
> 	{ 
> 	  if (x > 0)
> 	    return (long)((double)(x) * m_scaleX + 0.5);
> 	  else
> 	    return (long)((double)(x) * m_scaleX - 0.5);
> 	}
346,352c346,352
<    {
<      long new_y = y - m_logicalOriginY;
<      if (new_y > 0)
<        return (long)((double)(new_y) * m_scaleY + 0.5) * m_signY + m_deviceOriginY;
<      else
<        return (long)((double)(new_y) * m_scaleY - 0.5) * m_signY + m_deviceOriginY;
<    }
---
> 	{
> 	  long new_y = y - m_logicalOriginY;
> 	  if (new_y > 0)
> 	    return (long)((double)(new_y) * m_scaleY + 0.5) * m_signY + m_deviceOriginY;
> 	  else
> 	    return (long)((double)(new_y) * m_scaleY - 0.5) * m_signY + m_deviceOriginY;
> 	}
354,359c354,359
<    { 
<      if (y > 0)
<        return (long)((double)(y) * m_scaleY + 0.5);
<      else
<        return (long)((double)(y) * m_scaleY - 0.5);
<    }
---
> 	{ 
> 	  if (y > 0)
> 	    return (long)((double)(y) * m_scaleY + 0.5);
> 	  else
> 	    return (long)((double)(y) * m_scaleY - 0.5);
> 	}
456,458c456,458
<                             // d.o. changes with scrolling.
<                             // Set using SetInternalDeviceOrigin().
<                             
---
> 								    // d.o. changes with scrolling.
> 								    // Set using SetInternalDeviceOrigin().
> 								    
461,462c461,462
<                             // using SetDeviceOrigin()
<                             
---
> 								    // using SetDeviceOrigin()
> 								    
480,481c480,481
<    GrafPtr           m_macPort ;
<    GWorldPtr         m_macMask ;
---
> 	GrafPtr				m_macPort ;
> 	GWorldPtr			m_macMask ;
483,484c483,484
<    // in order to preserve the const inheritance of the virtual functions, we have to 
<    // use mutable variables starting from CWPro 5
---
> 	// in order to preserve the const inheritance of the virtual functions, we have to 
> 	// use mutable variables starting from CWPro 5
486,502c486,500
<    void              MacInstallFont() const ;
<    void              MacInstallPen() const ;
<    void              MacInstallBrush() const ;
<    
<    mutable bool   m_macFontInstalled ;
<    mutable bool   m_macPenInstalled ;
<    mutable bool   m_macBrushInstalled ;
<    
<    mutable long   m_macPortId ;
<    GrafPtr        m_macOrigPort ;
<    Rect           m_macClipRect ;
<    Point          m_macLocalOrigin ;
<    mutable AGAPortHelper m_macPortHelper ;
< 
<    void MacSetupPort() const ;
<    void MacVerifySetup() const
<    { if ( m_macPortId != m_macCurrentPortId ) MacSetupPort() ; } 
---
> 	void					MacInstallFont() const ;
> 	void					MacInstallPen() const ;
> 	void					MacInstallBrush() const ;
> 	
> 	mutable bool	m_macFontInstalled ;
> 	mutable bool	m_macPenInstalled ;
> 	mutable bool	m_macBrushInstalled ;
> 	
> 	mutable long	m_macPortId ;
> 	GrafPtr				m_macOrigPort ;
> 	Rect					m_macClipRect ;
> 	Point					m_macLocalOrigin ;
> 	AGAPortHelper			m_macPortHelper ;
> 	void					MacSetupPort() const ;
> 	void					MacVerifySetup() const { if ( m_macPortId != m_macCurrentPortId ) MacSetupPort() ; } 
504c502
<    static long m_macCurrentPortId ;
---
> 	static long m_macCurrentPortId ;
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/dcprint.h ./dcprint.h
26d25
< #if wxUSE_PRINTING_ARCHITECTURE
37d35
< #ifndef __WXMAC_X__
39d36
< #endif
41d37
< #endif  //wxUSE_PRINTING_ARCHITECTURE
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/font.h ./font.h
103,104d102
<    wxFont(const wxNativeFontInfo &info);
< 
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/imaglist.h ./imaglist.h
75d74
<    bool GetSize(int index, int&width, int &height) const;
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/listctrl.h ./listctrl.h
22d21
< #include "wx/textctrl.h"
66c65
< #if 0
---
> 
96,98d94
< #endif
< #if 0
< 
144,145c140
< #endif  // Remove the above
< #if 0
---
> 
168c163
< #endif
---
> 
422d416
< #if 0
455,456d448
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/menuitem.h ./menuitem.h
72c72
< 	static int MacBuildMenuString(StringPtr outMacItemText, SInt16 *outMacShortcutChar , UInt8 *outMacModifiers , const char *inItemName , bool useShortcuts);
---
> 	static MacBuildMenuString(StringPtr outMacItemText, SInt16 *outMacShortcutChar , UInt8 *outMacModifiers , const char *inItemName , bool useShortcuts ) ;
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/palette.h ./palette.h
20d19
< #include "wx/colour.h"
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/region.h ./region.h
83c83
< 	void GetBox(wxCoord &x, wxCoord &y, wxCoord &w, wxCoord &h) const;
---
> 	void GetBox(long& x, long& y, long&w, long &h) const;
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/setup.h ./setup.h
37c37
< #define wxUSE_IPC         1
---
> #define wxUSE_IPC         0
123c123
< #define wxUSE_PRINTING_ARCHITECTURE  0
---
> #define wxUSE_PRINTING_ARCHITECTURE  1
333,338d332
< 
< #ifdef __WXMAC_X__
< #define HAVE_USLEEP
< #define WXWIN_OS_DESCRIPTION "Darwin 1.2 Power Macintosh"
< #define wxUSE_LONGLONG 1
< #endif
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/slider.h ./slider.h
20d19
< #include "wx/stattext.h"
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/spinbutt.h ./spinbutt.h
36c36
<     wxSpinButton();
---
>     wxSpinButton() { }
59,60d58
<    virtual int GetMin() const;
<    virtual int GetMax() const;
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/statbmp.h ./statbmp.h
47d46
<    //   virtual void SetIcon(const wxIcon &icon);
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/statusbr.h ./statusbr.h
22d21
< 
41,42c40,41
<    virtual void DrawFieldText(wxDC& dc, int i);
<    virtual void DrawField(wxDC& dc, int i);
---
>   virtual void DrawFieldText(wxDC& dc, int i);
>   virtual void DrawField(wxDC& dc, int i);
54c53
<     // _WX_STATBAR_H_
---
>     // _WX_STATBAR_H_
\ No newline at end of file
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/uma.h ./uma.h
19c19
< #if defined(__POWERPC__) || defined(__WXMAC_X__)
---
> #if __POWERPC__
239c239
< #endif
---
> #endif
\ No newline at end of file
diff /Users/mark/cvs/wxWindows/wxWindows/include/wx/mac/window.h ./window.h
47,50c47,50
<       SInt16							m_macWindowBackgroundTheme ;
<       WindowRef						m_macWindow ;
<       ControlHandle					m_macRootControl ;
<       wxWindow*						m_macFocus ;
---
> 			SInt16								m_macWindowBackgroundTheme ;
> 			WindowRef							m_macWindow ;
> 			ControlHandle					m_macRootControl ;
> 			wxWindow*							m_macFocus ;
52,53c52,53
< 
< 
---
> 	
> 	
248c248
< 	virtual ControlHandle			MacGetContainerForEmbedding() ;
---
> 	virtual ControlHandle 				MacGetContainerForEmbedding() ;
266c266
< 	static WindowRef MacGetWindowInUpdate();
---
> 	static WindowRef					MacGetWindowInUpdate() { return s_macWindowInUpdate ; }

 	  	 
