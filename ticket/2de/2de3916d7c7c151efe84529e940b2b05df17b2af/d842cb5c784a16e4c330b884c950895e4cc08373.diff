Index: wxWindows/include/wx/defs.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/defs.h,v
retrieving revision 1.401
diff -b -u -2 -r1.401 defs.h
--- wxWindows/include/wx/defs.h	2003/09/30 12:41:46	1.401
+++ wxWindows/include/wx/defs.h	2003/10/19 20:01:59
@@ -711,6 +711,8 @@
 typedef unsigned char wxUint8;
 typedef wxUint8 wxByte;
+#define wxInt8_MAX  SCHAR_MIN
+#define wxInt8_MIN  SCHAR_MIN
+#define wxUint8_MAX UCHAR_MAX
 
-
 // 16bit
 #ifdef SIZEOF_SHORT
@@ -724,4 +726,7 @@
 typedef signed short wxInt16;
 typedef unsigned short wxUint16;
+#define wxInt16_MAX  SHRT_MAX
+#define wxInt16_MIN  SHRT_MIN
+#define wxUint16_MAX USHRT_MAX
 
 typedef wxUint16 wxWord;
@@ -765,4 +770,7 @@
         typedef int wxInt32;
         typedef unsigned int wxUint32;
+        #define wxInt32_MAX  INT_MAX
+        #define wxInt32_MIN  INT_MIN
+        #define wxUint32_MAX UINT_MAX
 
         // conside that if SIZEOF_INT is defined, all the other ones are too
@@ -794,4 +802,7 @@
             typedef int wxInt32;
             typedef unsigned int wxUint32;
+            #define wxInt32_MAX  INT_MAX
+            #define wxInt32_MIN  INT_MIN
+            #define wxUint32_MAX UINT_MAX
         #elif SIZEOF_INT == 2
             // must be LP32
@@ -802,4 +813,7 @@
             typedef long wxInt32;
             typedef unsigned long wxUint32;
+            #define wxInt32_MAX  LONG_MAX
+            #define wxInt32_MIN  LONG_MIN
+            #define wxUint32_MAX ULONG_MAX
         #elif
             // wxWindows is not ready for 128bit systems yet...
@@ -814,4 +828,7 @@
         typedef int wxInt32;
         typedef unsigned int wxUint32;
+        #define wxInt32_MAX  INT_MAX
+        #define wxInt32_MIN  INT_MIN
+        #define wxUint32_MAX UINT_MAX
 
         #if wxUSE_WCHAR_T && !defined(SIZEOF_WCHAR_T)
@@ -905,14 +922,57 @@
 
 typedef float wxFloat32;
+#define wxFloat32_MAX        FLT_MAX
+#define wxFloat32_MIN        FLT_MIN
+#define wxFloat32_DIG        FLT_DIG
+#define wxFloat32_EPSILON    FLT_EPSILON
+#define wxFloat32_MANT_DIG   FLT_MANT_DIG
+#define wxFloat32_MAX_EXP    FLT_MAX_EXP
+#define wxFloat32_MIN_EXP    FLT_MIN_EXP
+#define wxFloat32_MAX_10_EXP FLT_MAX_10_EXP
+#define wxFloat32_MIN_10_EXP FLT_MIN_10_EXP
+#define wxFloat32_RADIX      FLT_RADIX
+
 #if (defined( __WXMAC__ ) || defined(__WXCOCOA__))  && defined (__MWERKS__)
     typedef short double wxFloat64;
+//    #define wxFloat64_MAX  ??   FIXME what is a short double
+//    #define wxFloat64_MIN  ??
 #else
     typedef double wxFloat64;
+    #define wxFloat64_MAX        DBL_MAX
+    #define wxFloat64_MIN        DBL_MIN
+    #define wxFloat64_DIG        DBL_DIG
+    #define wxFloat64_EPSILON    DBL_EPSILON
+    #define wxFloat64_MANT_DIG   DBL_MANT_DIG
+    #define wxFloat64_MAX_EXP    DBL_MAX_EXP
+    #define wxFloat64_MIN_EXP    DBL_MIN_EXP
+    #define wxFloat64_MAX_10_EXP DBL_MAX_10_EXP
+    #define wxFloat64_MIN_10_EXP DBL_MIN_10_EXP
+    #define wxFloat64_RADIX      DBL_RADIX
 #endif
 
 #if defined( __WXMAC__ )  && !defined( __POWERPC__ )
     typedef long double wxDouble;
+    #define wxDouble_MAX        LDBL_MAX
+    #define wxDouble_MIN        LDBL_MIN
+    #define wxDouble_DIG        LDBL_DIG
+    #define wxDouble_EPSILON    LDBL_EPSILON
+    #define wxDouble_MANT_DIG   LDBL_MANT_DIG
+    #define wxDouble_MAX_EXP    LDBL_MAX_EXP
+    #define wxDouble_MIN_EXP    LDBL_MIN_EXP
+    #define wxDouble_MAX_10_EXP LDBL_MAX_10_EXP
+    #define wxDouble_MIN_10_EXP LDBL_MIN_10_EXP
+    #define wxDouble_RADIX      LDBL_RADIX
 #else
     typedef double wxDouble;
+    #define wxDouble_MAX        DBL_MAX
+    #define wxDouble_MIN        DBL_MIN
+    #define wxDouble_DIG        DBL_DIG
+    #define wxDouble_EPSILON    DBL_EPSILON
+    #define wxDouble_MANT_DIG   DBL_MANT_DIG
+    #define wxDouble_MAX_EXP    DBL_MAX_EXP
+    #define wxDouble_MIN_EXP    DBL_MIN_EXP
+    #define wxDouble_MAX_10_EXP DBL_MAX_10_EXP
+    #define wxDouble_MIN_10_EXP DBL_MIN_10_EXP
+    #define wxDouble_RADIX      DBL_RADIX
 #endif
 

 	  	 
