Index: interface/wx/image.h
===================================================================
--- interface/wx/image.h	(revision 59140)
+++ interface/wx/image.h	(working copy)
@@ -89,6 +89,12 @@
     const wxString& GetExtension() const;
 
     /**
+        Gets other possible file extensions associated with this handler.
+        These extensions are less preferred than returned by GetExtension().
+    */
+    const wxArrayString& GetAlternativeExtensions() const;
+
+    /**
         If the image file contains more than one image and the image handler is capable
         of retrieving these individually, this function will return the number of
         available images.
@@ -160,14 +166,22 @@
                           bool verbose = true);
 
     /**
-        Sets the handler extension.
+        Sets the file extension associated with this handler.
 
         @param extension
-            Handler extension.
+            File extension.
     */
     void SetExtension(const wxString& extension);
 
     /**
+        Sets other file extensions associated with this handler.
+
+        @param extensions
+            Array of file extensions.
+    */
+    void SetAlternativeExtensions(const wxArrayString& extensions);
+
+    /**
         Sets the handler MIME type.
 
         @param mimetype
Index: include/wx/imagxpm.h
===================================================================
--- include/wx/imagxpm.h	(revision 59140)
+++ include/wx/imagxpm.h	(working copy)
@@ -1,5 +1,5 @@
 /////////////////////////////////////////////////////////////////////////////
-// Name:        imaggif.h
+// Name:        imagxpm.h
 // Purpose:     wxImage XPM handler
 // Author:      Vaclav Slavik
 // RCS-ID:      $Id$
Index: include/wx/imagjpeg.h
===================================================================
--- include/wx/imagjpeg.h	(revision 59140)
+++ include/wx/imagjpeg.h	(working copy)
@@ -27,6 +27,8 @@
     {
         m_name = wxT("JPEG file");
         m_extension = wxT("jpg");
+        m_alternative_extensions.Add(wxT("jpeg"));
+        m_alternative_extensions.Add(wxT("jpe"));
         m_type = wxBITMAP_TYPE_JPEG;
         m_mime = wxT("image/jpeg");
     }
Index: include/wx/imagpnm.h
===================================================================
--- include/wx/imagpnm.h	(revision 59140)
+++ include/wx/imagpnm.h	(working copy)
@@ -24,6 +24,9 @@
     {
         m_name = wxT("PNM file");
         m_extension = wxT("pnm");
+        m_alternative_extensions.Add(wxT("ppm"));
+        m_alternative_extensions.Add(wxT("pgm"));
+        m_alternative_extensions.Add(wxT("pbm"));
         m_type = wxBITMAP_TYPE_PNM;
         m_mime = wxT("image/pnm");
     }
Index: include/wx/imagtga.h
===================================================================
--- include/wx/imagtga.h	(revision 59140)
+++ include/wx/imagtga.h	(working copy)
@@ -25,6 +25,7 @@
     {
         m_name = wxT("TGA file");
         m_extension = wxT("tga");
+        m_alternative_extensions.Add(wxT("tpic"));
         m_type = wxBITMAP_TYPE_TGA;
         m_mime = wxT("image/tga");
     }
Index: include/wx/image.h
===================================================================
--- include/wx/image.h	(revision 59140)
+++ include/wx/image.h	(working copy)
@@ -108,10 +108,12 @@
 
     void SetName(const wxString& name) { m_name = name; }
     void SetExtension(const wxString& ext) { m_extension = ext; }
+    void SetAlternativeExtensions(const wxArrayString& exts) { m_alternative_extensions = exts; }
     void SetType(wxBitmapType type) { m_type = type; }
     void SetMimeType(const wxString& type) { m_mime = type; }
     const wxString& GetName() const { return m_name; }
     const wxString& GetExtension() const { return m_extension; }
+    const wxArrayString& GetAlternativeExtensions() const { return m_alternative_extensions; }
     wxBitmapType GetType() const { return m_type; }
     const wxString& GetMimeType() const { return m_mime; }
 
@@ -138,6 +140,7 @@
 
     wxString  m_name;
     wxString  m_extension;
+    wxArrayString m_alternative_extensions;
     wxString  m_mime;
     wxBitmapType m_type;
 
Index: src/common/image.cpp
===================================================================
--- src/common/image.cpp	(revision 59140)
+++ src/common/image.cpp	(working copy)
@@ -2438,10 +2438,12 @@
     while (node)
     {
         wxImageHandler *handler = (wxImageHandler*)node->GetData();
-        if ( (handler->GetExtension().Cmp(extension) == 0) &&
-             ( (bitmapType == wxBITMAP_TYPE_ANY) || (handler->GetType() == bitmapType)) )
+        if ((bitmapType == wxBITMAP_TYPE_ANY) || (handler->GetType() == bitmapType))
         {
-            return handler;
+            if (handler->GetExtension() == extension)
+                return handler;
+            if (handler->GetAlternativeExtensions().Index(extension, false) != wxNOT_FOUND)
+                return handler;
         }
         node = node->GetNext();
     }
@@ -2503,6 +2505,8 @@
     {
         wxImageHandler* Handler = (wxImageHandler*)Node->GetData();
         fmts += wxT("*.") + Handler->GetExtension();
+        for (size_t i = 0; i < Handler->GetAlternativeExtensions().size(); i++)
+            fmts += wxT(";*.") + Handler->GetAlternativeExtensions()[i];
         Node = Node->GetNext();
         if ( Node ) fmts += wxT(";");
     }
Index: src/common/imagtiff.cpp
===================================================================
--- src/common/imagtiff.cpp	(revision 59140)
+++ src/common/imagtiff.cpp	(working copy)
@@ -108,6 +108,7 @@
 {
     m_name = wxT("TIFF file");
     m_extension = wxT("tif");
+    m_alternative_extensions.Add(wxT("tiff"));
     m_type = wxBITMAP_TYPE_TIF;
     m_mime = wxT("image/tiff");
     TIFFSetWarningHandler((TIFFErrorHandler) TIFFwxWarningHandler);
