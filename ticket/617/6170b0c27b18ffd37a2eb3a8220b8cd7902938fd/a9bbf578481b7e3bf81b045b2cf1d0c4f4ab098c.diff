diff --git a/include/wx/atomic.h b/include/wx/atomic.h
index 9b7efac..250ca27 100644
--- a/include/wx/atomic.h
+++ b/include/wx/atomic.h
@@ -43,7 +43,7 @@ inline wxUint32 wxAtomicDec (wxUint32 &value)
 }
 
 
-#elif defined(__WXMSW__)
+#elif defined(__WINDOWS__)
 
 // include standard Windows headers
 #include "wx/msw/wrapwin.h"
diff --git a/include/wx/config.h b/include/wx/config.h
index 282e396..54e821d 100644
--- a/include/wx/config.h
+++ b/include/wx/config.h
@@ -22,7 +22,7 @@
 
 // under Windows we prefer to use the native implementation but can be forced
 // to use the file-based one
-#if defined(__WXMSW__) && wxUSE_CONFIG_NATIVE
+#if defined(__WINDOWS__) && wxUSE_CONFIG_NATIVE
     #include "wx/msw/regconf.h"
     #define wxConfig  wxRegConfig
 #elif defined(__WXOS2__) && wxUSE_CONFIG_NATIVE
diff --git a/include/wx/dde.h b/include/wx/dde.h
index cf5af67..0f74768 100644
--- a/include/wx/dde.h
+++ b/include/wx/dde.h
@@ -22,10 +22,10 @@ WX_DECLARE_USER_EXPORTED_LIST(wxDDEClient, wxDDEClientList, WXDLLIMPEXP_BASE);
 WX_DECLARE_USER_EXPORTED_LIST(wxDDEServer, wxDDEServerList, WXDLLIMPEXP_BASE);
 WX_DECLARE_USER_EXPORTED_LIST(wxDDEConnection, wxDDEConnectionList, WXDLLIMPEXP_BASE);
 
-#if defined(__WXMSW__)
+#if defined(__WINDOWS__)
     #include "wx/msw/dde.h"
 #else
-    #error DDE is only supported on MSW
+    #error DDE is only supported under Windows
 #endif
 
 #endif
diff --git a/include/wx/iconloc.h b/include/wx/iconloc.h
index dcccca3..d81e327 100644
--- a/include/wx/iconloc.h
+++ b/include/wx/iconloc.h
@@ -39,9 +39,9 @@ private:
     wxString m_filename;
 };
 
-// under MSW the same file may contain several icons so we also store the
+// under Windows the same file may contain several icons so we also store the
 // index of the icon
-#if defined(__WXMSW__)
+#if defined(__WINDOWS__)
 
 class WXDLLIMPEXP_BASE wxIconLocation : public wxIconLocationBase
 {
@@ -65,7 +65,7 @@ wxIconLocation::wxIconLocation(const wxString& file, int num)
     SetIndex(num);
 }
 
-#else // !MSW
+#else // !__WINDOWS__
 
 // must be a class because we forward declare it as class
 class WXDLLIMPEXP_BASE wxIconLocation : public wxIconLocationBase
diff --git a/include/wx/joystick.h b/include/wx/joystick.h
index 8978710..569e3d8 100644
--- a/include/wx/joystick.h
+++ b/include/wx/joystick.h
@@ -16,7 +16,7 @@
 
 #if wxUSE_JOYSTICK
 
-#if defined(__WXMSW__)
+#if defined(__WINDOWS__)
 #include "wx/msw/joystick.h"
 #elif defined(__WXMOTIF__)
 #include "wx/unix/joystick.h"
diff --git a/include/wx/listctrl.h b/include/wx/listctrl.h
index ccf2a05..de43556 100644
--- a/include/wx/listctrl.h
+++ b/include/wx/listctrl.h
@@ -28,7 +28,7 @@ extern WXDLLIMPEXP_DATA_CORE(const char) wxListCtrlNameStr[];
 // include the wxListCtrl class declaration
 // ----------------------------------------------------------------------------
 
-#if defined(__WIN32__) && !defined(__WXUNIVERSAL__)
+#if defined(__WXMSW__) && !defined(__WXUNIVERSAL__)
     #include "wx/msw/listctrl.h"
 #elif defined(__WXMAC__) && !defined(__WXUNIVERSAL__) && wxOSX_USE_CARBON
     #include "wx/osx/listctrl.h"
diff --git a/include/wx/statusbr.h b/include/wx/statusbr.h
index fca6246..3567ba3 100644
--- a/include/wx/statusbr.h
+++ b/include/wx/statusbr.h
@@ -234,7 +234,7 @@ protected:
 #if defined(__WXUNIVERSAL__)
     #define wxStatusBarUniv wxStatusBar
     #include "wx/univ/statusbr.h"
-#elif defined(__WIN32__) && wxUSE_NATIVE_STATUSBAR
+#elif defined(__WXMSW__) && wxUSE_NATIVE_STATUSBAR
     #include "wx/msw/statusbar.h"
 #elif defined(__WXMAC__)
     #define wxStatusBarMac wxStatusBar
diff --git a/src/common/msgout.cpp b/src/common/msgout.cpp
index 975dabe..9647088 100644
--- a/src/common/msgout.cpp
+++ b/src/common/msgout.cpp
@@ -163,7 +163,7 @@ void wxMessageOutputStderr::Output(const wxString& str)
 
 void wxMessageOutputDebug::Output(const wxString& str)
 {
-#if defined(__WXMSW__) && !defined(__WXMICROWIN__)
+#if defined(__WINDOWS__) && !defined(__WXMICROWIN__)
     wxString out(AppendLineFeedIfNeeded(str));
     out.Replace(wxT("\t"), wxT("        "));
     out.Replace(wxT("\n"), wxT("\r\n"));
@@ -202,7 +202,7 @@ void wxMessageOutputMessageBox::Output(const wxString& str)
     wxString out(str);
 
     // the native MSW msg box understands the TABs, others don't
-#ifndef __WXMSW__
+#ifndef __WINDOWS__
     out.Replace(wxT("\t"), wxT("        "));
 #endif
 
diff --git a/src/common/socket.cpp b/src/common/socket.cpp
index 36a9dc1..33690a3 100644
--- a/src/common/socket.cpp
+++ b/src/common/socket.cpp
@@ -2111,7 +2111,7 @@ wxFORCE_LINK_MODULE( socketiohandler )
 #endif
 
 // same for ManagerSetter in the MSW file
-#ifdef __WXMSW__
+#ifdef __WINDOWS__
     wxFORCE_LINK_MODULE( mswsocket )
 #endif
 
diff --git a/src/common/wincmn.cpp b/src/common/wincmn.cpp
index 614ee45..97bbf4f 100644
--- a/src/common/wincmn.cpp
+++ b/src/common/wincmn.cpp
@@ -75,7 +75,7 @@
 #include "wx/platinfo.h"
 #include "wx/private/window.h"
 
-#ifdef __WXMSW__
+#ifdef __WINDOWS__
     #include "wx/msw/wrapwin.h"
 #endif
 
diff --git a/src/generic/dirctrlg.cpp b/src/generic/dirctrlg.cpp
index a12be2f..7ccf0d3 100644
--- a/src/generic/dirctrlg.cpp
+++ b/src/generic/dirctrlg.cpp
@@ -55,7 +55,7 @@
     #include  "wx/osx/private.h"  // includes mac headers
 #endif
 
-#ifdef __WXMSW__
+#ifdef __WINDOWS__
 #include <windows.h>
 #include "wx/msw/winundef.h"
 #include "wx/volume.h"
@@ -71,7 +71,7 @@
     #include <ctype.h>
 #endif
 
-#endif
+#endif // __WINDOWS__
 
 #if defined(__OS2__) || defined(__DOS__)
     #ifdef __OS2__
@@ -310,7 +310,7 @@ int setdrive(int WXUNUSED_IN_WINCE(drive))
 #else
     newdrive[2] = wxT('\0');
 #endif
-#if defined(__WXMSW__)
+#if defined(__WINDOWS__)
     if (::SetCurrentDirectory(newdrive))
 #else
     // VA doesn't know what LPSTR is and has its own set
@@ -1170,7 +1170,7 @@ void wxGenericDirCtrl::FindChildFiles(wxTreeItemId treeid, int dirFlags, wxArray
 
     wxString dirName(data->m_path);
 
-#if defined(__WXMSW__) || defined(__OS2__)
+#if defined(__WINDOWS__) || defined(__OS2__)
     if (dirName.Last() == ':')
         dirName += wxString(wxFILE_SEP_PATH);
 #endif
@@ -1572,7 +1572,7 @@ wxImageList *wxFileIconsTable::GetSmallImageList()
     return m_smallImageList;
 }
 
-#if wxUSE_MIMETYPE && wxUSE_IMAGE && (!defined(__WXMSW__) || wxUSE_WXDIB)
+#if wxUSE_MIMETYPE && wxUSE_IMAGE && (!defined(__WINDOWS__) || wxUSE_WXDIB)
 // VS: we don't need this function w/o wxMimeTypesManager because we'll only have
 //     one icon and we won't resize it
 
@@ -1732,7 +1732,7 @@ int wxFileIconsTable::GetIconID(const wxString& extension, const wxString& mime)
     {
         m_smallImageList->Add(bmp);
     }
-#if wxUSE_IMAGE && (!defined(__WXMSW__) || wxUSE_WXDIB)
+#if wxUSE_IMAGE && (!defined(__WINDOWS__) || wxUSE_WXDIB)
     else
     {
         wxImage img = bmp.ConvertToImage();
diff --git a/src/generic/filectrlg.cpp b/src/generic/filectrlg.cpp
index 0a69789..de9e114 100644
--- a/src/generic/filectrlg.cpp
+++ b/src/generic/filectrlg.cpp
@@ -35,7 +35,7 @@
 #include "wx/tokenzr.h"
 #include "wx/imaglist.h"
 
-#ifdef __WXMSW__
+#ifdef __WINDOWS__
     #include "wx/msw/wrapwin.h"
 #endif
 
diff --git a/src/msw/joystick.cpp b/src/msw/joystick.cpp
index 1b9f8b0..158c0b6 100644
--- a/src/msw/joystick.cpp
+++ b/src/msw/joystick.cpp
@@ -641,9 +641,15 @@ bool wxJoystick::HasPOVCTS() const
 
 bool wxJoystick::SetCapture(wxWindow* win, int pollingFreq)
 {
+#ifdef __WXMSW__
     BOOL changed = (pollingFreq == 0);
     MMRESULT res = joySetCapture((HWND) win->GetHWND(), m_joystick, pollingFreq, changed);
     return (res == JOYERR_NOERROR);
+#else
+    wxUnusedVar(win);
+    wxUnusedVar(pollingFreq);
+    return false;
+#endif
 }
 
 bool wxJoystick::ReleaseCapture()
