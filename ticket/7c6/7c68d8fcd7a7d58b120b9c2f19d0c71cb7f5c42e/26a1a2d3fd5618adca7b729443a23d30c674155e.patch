Index: src/unix/mediactrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/mediactrl.cpp,v
retrieving revision 1.14
diff -b -u -2 -r1.14 mediactrl.cpp
--- src/unix/mediactrl.cpp	2006/02/11 11:47:12	1.14
+++ src/unix/mediactrl.cpp	2006/02/14 02:19:07
@@ -199,4 +199,5 @@
 
     //------------implementation from now on-----------------------------------
+    bool DoLoad(const wxString& locstring);
     wxMediaCtrl* GetControl() { return m_ctrl; } // for C Callbacks
     void HandleStateChange(GstElementState oldstate, GstElementState newstate);
@@ -991,4 +992,6 @@
     //init gstreamer
     //
+
+    //Convert arguments to unicode if enabled
 #if wxUSE_UNICODE
     int i;
@@ -1002,8 +1005,20 @@
 
     int argcGST = wxTheApp->argc;
+#else
+#define argcGST wxTheApp->argc
+#define argvGST wxTheApp->argv
+#endif
 
-    gst_init(&argcGST, &argvGST);
+    //Really init gstreamer
+    gboolean bInited;
+    GError* error = NULL;
+#if GST_VERSION_MAJOR > 0 || GST_VERSION_MINOR >= 10
+    bInited = gst_init_check(&argcGST, &argvGST, &error);
+#else
+    bInited = gst_init_check(&argcGST, &argvGST);
+#endif
 
-    // free our copy
+    // Cleanup arguments for unicode case
+#if wxUSE_UNICODE
     for ( i = 0; i < argcGST; i++ )
     {
@@ -1012,8 +1027,22 @@
 
     delete [] argvGST;
-#else
-    gst_init(&wxTheApp->argc, &wxTheApp->argv);
 #endif
 
+    if(!bInited)    //gst_init_check fail?
+    {
+        if(error)
+        {
+            wxLogSysError(wxT("Could not initialize GStreamer\n")
+                          wxT("Error Message:%s"), 
+                          (const wxChar*) wxConvUTF8.cMB2WX(error->message)
+                         );
+            g_error_free(error);
+        }
+        else
+            wxLogSysError(wxT("Could not initialize GStreamer"));
+
+        return false;
+    }
+
     //
     // wxControl creation
@@ -1145,13 +1174,9 @@
 // wxGStreamerMediaBackend::Load (File version)
 //
-// Just calls the URI version
+// Just calls DoLoad() with a prepended file scheme
 //-----------------------------------------------------------------------------
 bool wxGStreamerMediaBackend::Load(const wxString& fileName)
 {
-    return Load(
-                    wxURI(
-                            wxString( wxT("file://") ) + fileName
-                         )
-               );
+    return DoLoad(wxString( wxT("file://") ) + fileName);
 }
 
@@ -1159,4 +1184,28 @@
 // wxGStreamerMediaBackend::Load (URI version)
 //
+// In the case of a file URI passes it unencoded -
+// also, as of 0.10.3 and earlier GstURI (the uri parser for gstreamer)
+// is sort of broken and only accepts uris with at least two slashes
+// after the scheme (i.e. file: == not ok, file:// == ok)
+//-----------------------------------------------------------------------------
+bool wxGStreamerMediaBackend::Load(const wxURI& location)
+{
+    if(location.GetScheme().CmpNoCase(wxT("file")) == 0)
+    {
+        wxString uristring = location.BuildUnescapedURI();
+
+        //Workaround GstURI leading "//" problem and make sure it leads
+        //with that
+        return DoLoad(wxString(wxT("file://")) + 
+                      uristring.Right(uristring.Length() - 5)
+                     );
+    }
+    else 
+        return DoLoad(location.BuildURI());
+}
+
+//-----------------------------------------------------------------------------
+// wxGStreamerMediaBackend::DoLoad
+//
 // Loads the media
 // 1) Reset member variables and set playbin back to ready state
@@ -1168,5 +1217,5 @@
 // around that, unfortunately.
 //-----------------------------------------------------------------------------
-bool wxGStreamerMediaBackend::Load(const wxURI& location)
+bool wxGStreamerMediaBackend::DoLoad(const wxString& locstring)
 {
     wxMutexLocker lock(m_asynclock); // lock state events and async callbacks
@@ -1189,10 +1238,4 @@
     // Make sure the passed URI is valid and tell playbin to load it
     // non-file uris are encoded
-    wxString locstring;
-    if(location.GetScheme().CmpNoCase(wxT("file")))
-        locstring = location.BuildUnescapedURI();
-    else
-        locstring = location.BuildURI();
-
     wxASSERT(gst_uri_protocol_is_valid("file"));
     wxASSERT(gst_uri_is_valid(locstring.mb_str()));

 	  	 
