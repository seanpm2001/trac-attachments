Index: include/wx/generic/spinctlg.h
===================================================================
--- include/wx/generic/spinctlg.h	(revision 59663)
+++ include/wx/generic/spinctlg.h	(working copy)
@@ -50,7 +50,7 @@
                 const wxString& value = wxEmptyString,
                 const wxPoint& pos = wxDefaultPosition,
                 const wxSize& size = wxDefaultSize,
-                long style = wxSP_ARROW_KEYS,
+                long style = wxSP_ARROW_KEYS | wxTE_RIGHT,
                 double min = 0, double max = 100, double initial = 0, double inc = 1,
                 const wxString& name = _T("wxSpinCtrl"));
 
@@ -157,7 +157,7 @@
                 const wxString& value = wxEmptyString,
                 const wxPoint& pos = wxDefaultPosition,
                 const wxSize& size = wxDefaultSize,
-                long style = wxSP_ARROW_KEYS,
+                long style = wxSP_ARROW_KEYS | wxTE_RIGHT,
                 double min = 0, double max = 100, double initial = 0, double inc = 1,
                 const wxString& name = _T("wxSpinCtrl"))
     {
@@ -232,7 +232,7 @@
                const wxString& value = wxEmptyString,
                const wxPoint& pos = wxDefaultPosition,
                const wxSize& size = wxDefaultSize,
-               long style = wxSP_ARROW_KEYS,
+               long style = wxSP_ARROW_KEYS | wxTE_RIGHT,
                int min = 0, int max = 100, int initial = 0,
                const wxString& name = _T("wxSpinCtrl"))
     {
@@ -244,7 +244,7 @@
                 const wxString& value = wxEmptyString,
                 const wxPoint& pos = wxDefaultPosition,
                 const wxSize& size = wxDefaultSize,
-                long style = wxSP_ARROW_KEYS,
+                long style = wxSP_ARROW_KEYS | wxTE_RIGHT,
                 int min = 0, int max = 100, int initial = 0,
                 const wxString& name = _T("wxSpinCtrl"))
     {
@@ -285,7 +285,7 @@
                      const wxString& value = wxEmptyString,
                      const wxPoint& pos = wxDefaultPosition,
                      const wxSize& size = wxDefaultSize,
-                     long style = wxSP_ARROW_KEYS,
+                     long style = wxSP_ARROW_KEYS | wxTE_RIGHT,
                      double min = 0, double max = 100, double initial = 0, double inc = 1,
                      const wxString& name = _T("wxSpinCtrlDouble"))
     {
@@ -298,7 +298,7 @@
                 const wxString& value = wxEmptyString,
                 const wxPoint& pos = wxDefaultPosition,
                 const wxSize& size = wxDefaultSize,
-                long style = wxSP_ARROW_KEYS,
+                long style = wxSP_ARROW_KEYS | wxTE_RIGHT,
                 double min = 0, double max = 100, double initial = 0, double inc = 1,
                 const wxString& name = _T("wxSpinCtrlDouble"))
     {
Index: include/wx/msw/spinctrl.h
===================================================================
--- include/wx/msw/spinctrl.h	(revision 59663)
+++ include/wx/msw/spinctrl.h	(working copy)
@@ -37,7 +37,7 @@
                const wxString& value = wxEmptyString,
                const wxPoint& pos = wxDefaultPosition,
                const wxSize& size = wxDefaultSize,
-               long style = wxSP_ARROW_KEYS,
+               long style = wxSP_ARROW_KEYS | wxTE_RIGHT,
                int min = 0, int max = 100, int initial = 0,
                const wxString& name = _T("wxSpinCtrl"))
     {
@@ -49,7 +49,7 @@
                 const wxString& value = wxEmptyString,
                 const wxPoint& pos = wxDefaultPosition,
                 const wxSize& size = wxDefaultSize,
-                long style = wxSP_ARROW_KEYS,
+                long style = wxSP_ARROW_KEYS | wxTE_RIGHT,
                 int min = 0, int max = 100, int initial = 0,
                 const wxString& name = _T("wxSpinCtrl"));
 
Index: samples/widgets/spinbtn.cpp
===================================================================
--- samples/widgets/spinbtn.cpp	(revision 59663)
+++ samples/widgets/spinbtn.cpp	(working copy)
@@ -67,6 +67,14 @@
     SpinBtnPage_SpinCtrlDouble
 };
 
+// alignment radiobox values
+enum
+{
+    Align_Left,
+    Align_Centre,
+    Align_Right
+};
+
 // ----------------------------------------------------------------------------
 // SpinBtnWidgetsPage
 // ----------------------------------------------------------------------------
@@ -130,6 +138,7 @@
                *m_chkArrowKeys,
                *m_chkWrap,
                *m_chkProcessEnter;
+   wxRadioBox *m_radioAlign;
 
     // the spinbtn and the spinctrl and the sizer containing them
     wxSpinButton *m_spinbtn;
@@ -199,6 +208,7 @@
     m_chkArrowKeys = NULL;
     m_chkWrap = NULL;
     m_chkProcessEnter = NULL;
+    m_radioAlign = NULL;
     m_spinbtn = NULL;
     m_spinctrl = NULL;
     m_spinctrldbl = NULL;
@@ -228,6 +238,21 @@
 
     sizerLeft->Add(5, 5, 0, wxGROW | wxALL, 5); // spacer
 
+    static const wxString halign[] =
+    {
+        _T("left"),
+        _T("centre"),
+        _T("right"),
+    };
+
+    m_radioAlign = new wxRadioBox(this, wxID_ANY, _T("&Text alignment"),
+                                   wxDefaultPosition, wxDefaultSize,
+                                   WXSIZEOF(halign), halign, 1);
+
+    sizerLeft->Add(m_radioAlign, 0, wxGROW | wxALL, 5);
+
+    sizerLeft->Add(5, 5, 0, wxGROW | wxALL, 5); // spacer
+
     wxButton *btn = new wxButton(this, SpinBtnPage_Reset, _T("&Reset"));
     sizerLeft->Add(btn, 0, wxALIGN_CENTRE_HORIZONTAL | wxALL, 15);
 
@@ -291,6 +316,7 @@
     m_chkArrowKeys->SetValue(true);
     m_chkWrap->SetValue(false);
     m_chkProcessEnter->SetValue(false);
+    m_radioAlign->SetSelection(Align_Right);
 }
 
 void SpinBtnWidgetsPage::CreateSpin()
@@ -312,6 +338,26 @@
     if ( m_chkProcessEnter->GetValue() )
         flags |= wxTE_PROCESS_ENTER;
 
+    int textFlags = 0;
+    switch ( m_radioAlign->GetSelection() )
+    {
+        default:
+            wxFAIL_MSG(_T("unexpected radiobox selection"));
+            // fall through
+
+        case Align_Left:
+            textFlags |= wxALIGN_LEFT;  // no-op
+            break;
+
+        case Align_Centre:
+            textFlags |= wxALIGN_CENTRE_HORIZONTAL;
+            break;
+
+        case Align_Right:
+            textFlags |= wxALIGN_RIGHT;
+            break;
+    }
+
     int val = m_min;
     if ( m_spinbtn )
     {
@@ -334,13 +380,13 @@
     m_spinctrl = new wxSpinCtrl(this, SpinBtnPage_SpinCtrl,
                                 wxString::Format(_T("%d"), val),
                                 wxDefaultPosition, wxDefaultSize,
-                                flags,
+                                flags | textFlags,
                                 m_min, m_max, val);
 
     m_spinctrldbl = new wxSpinCtrlDouble(this, SpinBtnPage_SpinCtrlDouble,
                                          wxString::Format(_T("%d"), val),
                                          wxDefaultPosition, wxDefaultSize,
-                                         flags,
+                                         flags | textFlags,
                                          m_min, m_max, val, 0.1);
 
     // Add spacers, labels and spin controls to the sizer.
Index: src/generic/spinctlg.cpp
===================================================================
--- src/generic/spinctlg.cpp	(revision 59663)
+++ src/generic/spinctlg.cpp	(working copy)
@@ -58,9 +58,9 @@
 class wxSpinCtrlTextGeneric : public wxTextCtrl
 {
 public:
-    wxSpinCtrlTextGeneric(wxSpinCtrlGenericBase *spin, const wxString& value)
-        : wxTextCtrl(spin->GetParent(), wxID_ANY, value, wxDefaultPosition,
-                     wxDefaultSize, wxTE_NOHIDESEL|wxTE_PROCESS_ENTER)
+    wxSpinCtrlTextGeneric(wxSpinCtrlGenericBase *spin, const wxString& value, long style=0)
+        : wxTextCtrl(spin->GetParent(), wxID_ANY, value, wxDefaultPosition, wxDefaultSize,
+                     ( style & wxALIGN_MASK ) | wxTE_NOHIDESEL | wxTE_PROCESS_ENTER)
     {
         m_spin = spin;
 
@@ -197,7 +197,7 @@
     m_max   = max;
     m_increment = increment;
 
-    m_textCtrl   = new wxSpinCtrlTextGeneric(this, value);
+    m_textCtrl   = new wxSpinCtrlTextGeneric(this, value, style);
     m_spinButton = new wxSpinCtrlButtonGeneric(this, style);
 
     m_spin_value = m_spinButton->GetValue();
Index: src/msw/spinctrl.cpp
===================================================================
--- src/msw/spinctrl.cpp	(revision 59663)
+++ src/msw/spinctrl.cpp	(working copy)
@@ -335,10 +335,16 @@
     WXDWORD exStyle = 0;
     WXDWORD msStyle = MSWGetStyle(GetWindowStyle(), & exStyle) ;
 
+	// propagate text alignment style to text ctrl
+    if ( style & wxTE_RIGHT )
+        msStyle |= ES_RIGHT;
+    else if ( style & wxTE_CENTER )
+        msStyle |= ES_CENTER;
+    
     // this control is used for numeric entry so normally using these flags by
     // default shouldn't be a problem, if it is we can always add a style such
     // as wxSP_NON_NUMERIC later
-    msStyle |= ES_RIGHT | ES_NUMBER;
+    msStyle |= ES_NUMBER;
 
     // calculate the sizes: the size given is the total size for both controls
     // and we need to fit them both in the given width (height is the same)
