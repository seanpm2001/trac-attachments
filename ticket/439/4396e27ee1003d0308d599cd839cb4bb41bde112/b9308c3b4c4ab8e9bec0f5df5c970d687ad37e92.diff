diff --git a/include/wx/gtk/window.h b/include/wx/gtk/window.h
index b555f9e..c634588 100644
--- a/include/wx/gtk/window.h
+++ b/include/wx/gtk/window.h
@@ -188,6 +188,10 @@ public:
 
     GdkWindow* GTKGetDrawingWindow() const;
 
+#ifdef __WINDOWS__
+    WXHWND MSWGetNativeTLWHwnd() const;
+#endif
+
     bool GTKHandleFocusIn();
     bool GTKHandleFocusOut();
     void GTKHandleFocusOutNoDeferring();
diff --git a/src/gtk/window.cpp b/src/gtk/window.cpp
index 0dbcab7..0a2b347 100644
--- a/src/gtk/window.cpp
+++ b/src/gtk/window.cpp
@@ -47,6 +47,10 @@ using namespace wxGTKImpl;
 typedef guint KeySym;
 #endif
 
+#ifdef GDK_WINDOWING_WIN32
+#include <gdk/gdkwin32.h>
+#endif
+
 #include <gdk/gdkkeysyms.h>
 #if GTK_CHECK_VERSION(3,0,0)
 #include <gdk/gdkkeysyms-compat.h>
@@ -4585,6 +4589,29 @@ GdkWindow* wxWindowGTK::GTKGetDrawingWindow() const
     return window;
 }
 
+#ifdef __WINDOWS__
+WXHWND wxWindowGTK::MSWGetNativeTLWHwnd() const
+{
+    const wxWindowBase *window = this;
+    for (;;)
+    {
+        GdkWindow *gdkwindow = gtk_widget_get_window(window->GetHandle());
+        if ( gdkwindow )
+        {
+            const HWND hwnd = gdk_win32_window_get_impl_hwnd(gdkwindow);
+            if ( hwnd )
+                return hwnd;
+        }
+
+        if ( window->IsTopLevel() )
+            break;
+
+        window = window->GetParent();
+    }
+    return NULL;
+}
+#endif
+
 // ----------------------------------------------------------------------------
 // freeze/thaw
 // ----------------------------------------------------------------------------
diff --git a/src/msw/display.cpp b/src/msw/display.cpp
index f9f6b15..2a5f1e3 100644
--- a/src/msw/display.cpp
+++ b/src/msw/display.cpp
@@ -608,7 +608,12 @@ int wxDisplayFactoryMSW::GetFromPoint(const wxPoint& pt)
 
 int wxDisplayFactoryMSW::GetFromWindow(const wxWindow *window)
 {
-    return FindDisplayFromHMONITOR(gs_MonitorFromWindow(GetHwndOf(window),
+    return FindDisplayFromHMONITOR(gs_MonitorFromWindow(
+#ifdef __WXGTK__
+                                                        window->MSWGetNativeTLWHwnd(),
+#else // __WXMSW__
+                                                        GetHwndOf(window),
+#endif
                                                         MONITOR_DEFAULTTONULL));
 }
 
