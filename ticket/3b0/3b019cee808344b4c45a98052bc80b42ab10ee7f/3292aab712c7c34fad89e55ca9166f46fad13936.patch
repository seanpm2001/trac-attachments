diff -bu1 -r wxWindows/./include/wx/dbgrid.h wxWin/./include/wx/dbgrid.h
--- wxWindows/./include/wx/dbgrid.h	2003-08-11 10:29:16.000000000 +0200
+++ wxWin/./include/wx/dbgrid.h	2003-09-17 13:33:20.000000000 +0200
@@ -125,3 +125,3 @@
     {
-        wxLogDebug(" GetNumberRows() = %i",m_rowtotal);
+        wxLogDebug(_T(" GetNumberRows() = %i"),m_rowtotal);
         return m_rowtotal;
@@ -130,3 +130,3 @@
     {
-        wxLogDebug(" GetNumberCols() = %i",m_nocols);
+        wxLogDebug(_T(" GetNumberCols() = %i"),m_nocols);
         return m_nocols;
diff -bu1 -r wxWindows/./include/wx/dbtable.h wxWin/./include/wx/dbtable.h
--- wxWindows/./include/wx/dbtable.h	2003-08-11 10:29:16.000000000 +0200
+++ wxWin/./include/wx/dbtable.h	2003-09-17 13:09:42.000000000 +0200
@@ -191,4 +191,4 @@
     wxDbTable(wxDb *pwxDb, const wxString &tblName, const UWORD numColumns,
-              const wxString &qryTblName="", bool qryOnly = !wxDB_QUERY_ONLY, 
-              const wxString &tblPath="");
+              const wxString &qryTblName=wxEmptyString, bool qryOnly = !wxDB_QUERY_ONLY, 
+              const wxString &tblPath=wxEmptyString);
 
@@ -196,4 +196,4 @@
     wxDbTable(wxDb *pwxDb, const wxString &tblName, const UWORD numColumns,
-              const wxChar *qryTblName="", bool qryOnly = !wxDB_QUERY_ONLY, 
-              const wxString &tblPath="");
+              const wxChar *qryTblName=wxEmptyString, bool qryOnly = !wxDB_QUERY_ONLY, 
+              const wxString &tblPath=wxEmptyString);
 
@@ -269,10 +269,10 @@
 
-    void            BuildDeleteStmt(wxString &pSqlStmt, int typeOfDel, const wxString &pWhereClause="");
-    void            BuildDeleteStmt(wxChar *pSqlStmt, int typeOfDel, const wxString &pWhereClause="");
+    void            BuildDeleteStmt(wxString &pSqlStmt, int typeOfDel, const wxString &pWhereClause=wxEmptyString);
+    void            BuildDeleteStmt(wxChar *pSqlStmt, int typeOfDel, const wxString &pWhereClause=wxEmptyString);
 
-    void            BuildUpdateStmt(wxString &pSqlStmt, int typeOfUpd, const wxString &pWhereClause="");
-    void            BuildUpdateStmt(wxChar *pSqlStmt, int typeOfUpd, const wxString &pWhereClause="");
+    void            BuildUpdateStmt(wxString &pSqlStmt, int typeOfUpd, const wxString &pWhereClause=wxEmptyString);
+    void            BuildUpdateStmt(wxChar *pSqlStmt, int typeOfUpd, const wxString &pWhereClause=wxEmptyString);
 
-    void            BuildWhereClause(wxString &pWhereClause, int typeOfWhere, const wxString &qualTableName="", bool useLikeComparison=FALSE);
-    void            BuildWhereClause(wxChar *pWhereClause, int typeOfWhere, const wxString &qualTableName="", bool useLikeComparison=FALSE);
+    void            BuildWhereClause(wxString &pWhereClause, int typeOfWhere, const wxString &qualTableName=wxEmptyString, bool useLikeComparison=FALSE);
+    void            BuildWhereClause(wxChar *pWhereClause, int typeOfWhere, const wxString &qualTableName=wxEmptyString, bool useLikeComparison=FALSE);
 
@@ -313,3 +313,3 @@
 
-    ULONG           Count(const wxString &args="*");
+    ULONG           Count(const wxString &args=_T("*"));
     int             DB_STATUS(void) { return(pDb->DB_STATUS); }
diff -bu1 -r wxWindows/./include/wx/generic/mdig.h wxWin/./include/wx/generic/mdig.h
--- wxWindows/./include/wx/generic/mdig.h	2003-08-11 10:29:24.000000000 +0200
+++ wxWin/./include/wx/generic/mdig.h	2003-09-17 11:52:37.000000000 +0200
@@ -239,3 +239,3 @@
 
-    virtual int SetSelection(int nPage);
+    virtual int SetSelection(size_t nPage);
 
diff -bu1 -r wxWindows/./include/wx/msw/glcanvas.h wxWin/./include/wx/msw/glcanvas.h
--- wxWindows/./include/wx/msw/glcanvas.h	2003-08-11 10:29:32.000000000 +0200
+++ wxWin/./include/wx/msw/glcanvas.h	2003-09-17 14:08:45.000000000 +0200
@@ -106,2 +106,6 @@
    void SetCurrent();
+   #ifdef __WXUNIVERSAL__
+   virtual bool SetCurrent(bool doit = TRUE){ return wxWindow::SetCurrent(doit); }; 
+   #endif
+
    void SetColour(const wxChar *colour);
diff -bu1 -r wxWindows/./include/wx/vlbox.h wxWin/./include/wx/vlbox.h
--- wxWindows/./include/wx/vlbox.h	2003-08-11 10:29:22.000000000 +0200
+++ wxWin/./include/wx/vlbox.h	2003-09-17 14:02:27.000000000 +0200
@@ -94,2 +94,5 @@
     bool IsCurrent(size_t item) const { return item == (size_t)m_current; }
+    #ifdef __WXUNIVERSAL__
+    bool IsCurrent() const { return wxVScrolledWindow::IsCurrent(); }
+    #endif
 
diff -bu1 -r wxWindows/./include/wx/wxchar.h wxWin/./include/wx/wxchar.h
--- wxWindows/./include/wx/wxchar.h	2003-09-14 21:13:53.000000000 +0200
+++ wxWin/./include/wx/wxchar.h	2003-09-17 16:03:28.000000000 +0200
@@ -133,2 +133,4 @@
     #include <ctype.h>
+#elif defined(__WATCOMC__)
+    #define wxHAVE_TCHAR_SUPPORT
 #elif defined(__MINGW32__) && wxCHECK_W32API_VERSION( 1, 0 )
diff -bu1 -r wxWindows/./src/common/db.cpp wxWin/./src/common/db.cpp
--- wxWindows/./src/common/db.cpp	2003-08-11 10:29:42.000000000 +0200
+++ wxWin/./src/common/db.cpp	2003-09-17 16:03:58.000000000 +0200
@@ -76,3 +76,2 @@
 
-
 wxChar const *SQL_LOG_FILENAME         = wxT("sqllog.txt");
@@ -603,5 +602,5 @@
     // Connect to the data source
-    retcode = SQLConnect(hdbc, (UCHAR FAR *) dsn.c_str(), SQL_NTS,
-                         (UCHAR FAR *) uid.c_str(), SQL_NTS,
-                         (UCHAR FAR *) authStr.c_str(), SQL_NTS);
+    retcode = SQLConnect(hdbc, (SQLTCHAR FAR *) dsn.c_str(), SQL_NTS,
+                         (SQLTCHAR FAR *) uid.c_str(), SQL_NTS,
+                         (SQLTCHAR FAR *) authStr.c_str(), SQL_NTS);
 
@@ -805,5 +804,5 @@
     // Connect to the data source
-    retcode = SQLConnect(hdbc, (UCHAR FAR *) dsn.c_str(), SQL_NTS,
-                         (UCHAR FAR *) uid.c_str(), SQL_NTS,
-                         (UCHAR FAR *) authStr.c_str(), SQL_NTS);
+    retcode = SQLConnect(hdbc, (SQLTCHAR FAR *) dsn.c_str(), SQL_NTS,
+                         (SQLTCHAR FAR *) uid.c_str(), SQL_NTS,
+                         (SQLTCHAR FAR *) authStr.c_str(), SQL_NTS);
 
@@ -1485,3 +1484,3 @@
 
-    while (SQLError(aHenv, aHdbc, aHstmt, (UCHAR FAR *) sqlState, &nativeError, (UCHAR FAR *) errorMsg, SQL_MAX_MESSAGE_LENGTH - 1, &cbErrorMsg) == SQL_SUCCESS)
+    while (SQLError(aHenv, aHdbc, aHstmt, (SQLTCHAR FAR *) sqlState, &nativeError, (SQLTCHAR FAR *) errorMsg, SQL_MAX_MESSAGE_LENGTH - 1, &cbErrorMsg) == SQL_SUCCESS)
     {
@@ -1512,3 +1511,3 @@
 {
-    if (SQLError(aHenv, aHdbc, aHstmt, (UCHAR FAR *) sqlState, &nativeError, (UCHAR FAR *) errorMsg, SQL_MAX_MESSAGE_LENGTH - 1, &cbErrorMsg) == SQL_SUCCESS)
+    if (SQLError(aHenv, aHdbc, aHstmt, (SQLTCHAR FAR *) sqlState, &nativeError, (SQLTCHAR FAR *) errorMsg, SQL_MAX_MESSAGE_LENGTH - 1, &cbErrorMsg) == SQL_SUCCESS)
         return(TRUE);
@@ -1868,3 +1867,3 @@
 
-    if (SQLExecDirect(hstmt, (UCHAR FAR *) sqlStmt.c_str(), SQL_NTS) != SQL_SUCCESS)
+    if (SQLExecDirect(hstmt, (SQLTCHAR FAR *) sqlStmt.c_str(), SQL_NTS) != SQL_SUCCESS)
     {
@@ -1901,3 +1900,3 @@
 
-    retcode = SQLExecDirect(hstmt, (UCHAR FAR *) pSqlStmt.c_str(), SQL_NTS);
+    retcode = SQLExecDirect(hstmt, (SQLTCHAR FAR *) pSqlStmt.c_str(), SQL_NTS);
     if (retcode == SQL_SUCCESS ||
@@ -1979,3 +1978,3 @@
                              NULL, 0,                               /* Schema name   */
-                             (UCHAR FAR *) tableName.c_str(), SQL_NTS); /* Table name    */
+                             (SQLTCHAR FAR *) tableName.c_str(), SQL_NTS); /* Table name    */
 
@@ -2006,3 +2005,3 @@
                              NULL, 0,                            /* Primary schema  */
-                             (UCHAR FAR *)tableName.c_str(), SQL_NTS,/* Primary table   */
+                             (SQLTCHAR FAR *)tableName.c_str(), SQL_NTS,/* Primary table   */
                              NULL, 0,                            /* Foreign catalog */
@@ -2052,3 +2051,3 @@
                              NULL, 0,                             /* Foreign schema    */
-                             (UCHAR *)tableName.c_str(), SQL_NTS);/* Foreign table     */
+                             (SQLTCHAR *)tableName.c_str(), SQL_NTS);/* Foreign table     */
 
@@ -2169,4 +2168,4 @@
                                      NULL, 0,                                // All qualifiers
-                                     (UCHAR *) UserID.c_str(), SQL_NTS,      // Owner
-                                     (UCHAR *) TableName.c_str(), SQL_NTS,
+                                     (SQLTCHAR *) UserID.c_str(), SQL_NTS,      // Owner
+                                     (SQLTCHAR *) TableName.c_str(), SQL_NTS,
                                      NULL, 0);                               // All columns
@@ -2178,3 +2177,3 @@
                                      NULL, 0,                                // Owner
-                                     (UCHAR *) TableName.c_str(), SQL_NTS,
+                                     (SQLTCHAR *) TableName.c_str(), SQL_NTS,
                                      NULL, 0);                               // All columns
@@ -2324,4 +2323,4 @@
                                  NULL, 0,                                // All qualifiers
-                                 (UCHAR *) UserID.c_str(), SQL_NTS,    // Owner
-                                 (UCHAR *) TableName.c_str(), SQL_NTS,
+                                 (SQLTCHAR *) UserID.c_str(), SQL_NTS,    // Owner
+                                 (SQLTCHAR *) TableName.c_str(), SQL_NTS,
                                  NULL, 0);                               // All columns
@@ -2333,3 +2332,3 @@
                                  NULL, 0,                                 // Owner
-                                 (UCHAR *) TableName.c_str(), SQL_NTS,
+                                 (SQLTCHAR *) TableName.c_str(), SQL_NTS,
                                  NULL, 0);                                // All columns
@@ -2817,4 +2816,4 @@
                              NULL, 0,                                // All qualifiers
-                             (UCHAR *) UserID.c_str(), SQL_NTS,      // Owner
-                             (UCHAR *) TableName.c_str(), SQL_NTS,
+                             (SQLTCHAR *) UserID.c_str(), SQL_NTS,      // Owner
+                             (SQLTCHAR *) TableName.c_str(), SQL_NTS,
                              NULL, 0);                               // All columns
@@ -2826,3 +2825,3 @@
                              NULL, 0,                                // Owner
-                             (UCHAR *) TableName.c_str(), SQL_NTS,
+                             (SQLTCHAR *) TableName.c_str(), SQL_NTS,
                              NULL, 0);                               // All columns
@@ -2908,3 +2907,3 @@
                                 NULL, 0,                             // All qualifiers
-                                (UCHAR *) UserID.c_str(), SQL_NTS,   // User specified
+                                (SQLTCHAR *) UserID.c_str(), SQL_NTS,   // User specified
                                 NULL, 0,                             // All tables
@@ -2997,3 +2996,3 @@
 
-    FILE *fp = fopen(fileName.c_str(),wxT("wt"));
+    FILE *fp = wxFopen(fileName.c_str(),wxT("wt"));
     if (fp == NULL)
@@ -3014,3 +3013,3 @@
                              NULL, 0,                                // All qualifiers
-                             (UCHAR *) UserID.c_str(), SQL_NTS,      // User specified
+                             (SQLTCHAR *) UserID.c_str(), SQL_NTS,      // User specified
                              NULL, 0,                                // All tables
@@ -3046,16 +3045,16 @@
             if (cnt)
-                fputs(wxT("\n"), fp);
-            fputs(wxT("================================ "), fp);
-            fputs(wxT("================================ "), fp);
-            fputs(wxT("===================== "), fp);
-            fputs(wxT("========= "), fp);
-            fputs(wxT("=========\n"), fp);
+                wxFputs(wxT("\n"), fp);
+            wxFputs(wxT("================================ "), fp);
+            wxFputs(wxT("================================ "), fp);
+            wxFputs(wxT("===================== "), fp);
+            wxFputs(wxT("========= "), fp);
+            wxFputs(wxT("=========\n"), fp);
             outStr.Printf(wxT("%-32s %-32s %-21s %9s %9s\n"),
                 wxT("TABLE NAME"), wxT("COLUMN NAME"), wxT("DATA TYPE"), wxT("PRECISION"), wxT("LENGTH"));
-            fputs(outStr.c_str(), fp);
-            fputs(wxT("================================ "), fp);
-            fputs(wxT("================================ "), fp);
-            fputs(wxT("===================== "), fp);
-            fputs(wxT("========= "), fp);
-            fputs(wxT("=========\n"), fp);
+            wxFputs(outStr.c_str(), fp);
+            wxFputs(wxT("================================ "), fp);
+            wxFputs(wxT("================================ "), fp);
+            wxFputs(wxT("===================== "), fp);
+            wxFputs(wxT("========= "), fp);
+            wxFputs(wxT("=========\n"), fp);
             tblNameSave = tblName;
@@ -3072,3 +3071,3 @@
             tblName, colName, sqlDataType, typeName, precision, length);
-        if (fputs(outStr.c_str(), fp) == EOF)
+        if (wxFputs(outStr.c_str(), fp) == EOF)
         {
@@ -3147,4 +3146,4 @@
                             NULL, 0,                                  // All qualifiers
-                            (UCHAR *) UserID.c_str(), SQL_NTS,        // Only tables owned by this user
-                            (UCHAR FAR *)TableName.c_str(), SQL_NTS,
+                            (SQLTCHAR *) UserID.c_str(), SQL_NTS,        // Only tables owned by this user
+                            (SQLTCHAR FAR *)TableName.c_str(), SQL_NTS,
                             NULL, 0);                                 // All table types
@@ -3156,3 +3155,3 @@
                             NULL, 0,                                  // All owners
-                            (UCHAR FAR *)TableName.c_str(), SQL_NTS,
+                            (SQLTCHAR FAR *)TableName.c_str(), SQL_NTS,
                             NULL, 0);                                 // All table types
@@ -3178,3 +3177,3 @@
 bool wxDb::TablePrivileges(const wxString &tableName, const wxString &priv, const wxChar *userID,
-                            const wxChar *schema, const wxString &tablePath)
+                            const wxChar *schema, const wxString &WXUNUSED(tablePath))
 {
@@ -3214,4 +3213,4 @@
                                      NULL, 0,                                    // Catalog
-                                     (UCHAR FAR *)Schema.c_str(), SQL_NTS,               // Schema
-                                     (UCHAR FAR *)TableName.c_str(), SQL_NTS);
+                                     (SQLTCHAR FAR *)Schema.c_str(), SQL_NTS,               // Schema
+                                     (SQLTCHAR FAR *)TableName.c_str(), SQL_NTS);
     }
@@ -3222,3 +3221,3 @@
                                      NULL, 0,                                    // Schema
-                                     (UCHAR FAR *)TableName.c_str(), SQL_NTS);
+                                     (SQLTCHAR FAR *)TableName.c_str(), SQL_NTS);
     }
@@ -3226,3 +3225,3 @@
 #ifdef DBDEBUG_CONSOLE
-    fprintf(stderr ,wxT("SQLTablePrivileges() returned %i \n"),retcode);
+    wxFprintf(stderr ,wxT("SQLTablePrivileges() returned %i \n"),retcode);
 #endif
@@ -3262,3 +3261,3 @@
 #ifdef DBDEBUG_CONSOLE
-        fprintf(stderr,wxT("Scanning %s privilege on table %s.%s granted by %s to %s\n"),
+        wxFprintf(stderr,wxT("Scanning %s privilege on table %s.%s granted by %s to %s\n"),
                 result.privilege,result.tableOwner,result.tableName,
@@ -3301,6 +3300,6 @@
     if (Dbms() == dbmsACCESS)
-        TableName = '"';
+        TableName = _T("\"");
     TableName += tableName;
     if (Dbms() == dbmsACCESS)
-        TableName += '"';
+        TableName += _T("\"");
 
@@ -3315,6 +3314,6 @@
     if (Dbms() == dbmsACCESS)
-        ColName = '"';
+        ColName = _T("\"");
     ColName += colName;
     if (Dbms() == dbmsACCESS)
-        ColName += '"';
+        ColName += _T("\"");
 
@@ -3334,3 +3333,3 @@
         {
-            fpSqlLog = fopen(filename, (append ? wxT("at") : wxT("wt")));
+            fpSqlLog = wxFopen(filename, (append ? wxT("at") : wxT("wt")));
             if (fpSqlLog == NULL)
@@ -3363,7 +3362,7 @@
 
-    if (fputs(wxT("\n"),   fpSqlLog) == EOF)
+    if (wxFputs(wxT("\n"),   fpSqlLog) == EOF)
         return(FALSE);
-    if (fputs(logMsg, fpSqlLog) == EOF)
+    if (wxFputs(logMsg, fpSqlLog) == EOF)
         return(FALSE);
-    if (fputs(wxT("\n"),   fpSqlLog) == EOF)
+    if (wxFputs(wxT("\n"),   fpSqlLog) == EOF)
         return(FALSE);
@@ -3559,6 +3558,6 @@
         case dbmsORACLE :
-            alterSlashModify = "MODIFY";
+            alterSlashModify = _T("MODIFY");
             break;
         case dbmsMS_SQL_SERVER :
-            alterSlashModify = "ALTER COLUMN";
+            alterSlashModify = _T("ALTER COLUMN");
             break;
@@ -3574,3 +3573,3 @@
         default :
-            alterSlashModify = "MODIFY";
+            alterSlashModify = _T("MODIFY");
             break;
@@ -3592,3 +3591,3 @@
     if (dataType == DB_DATA_TYPE_VARCHAR &&
-        (Dbms() != dbmsMY_SQL || dataTypeName != "text"))
+        (Dbms() != dbmsMY_SQL || dataTypeName != _T("text")))
     {
@@ -3920,4 +3919,4 @@
 
-    if (SQLDataSources(henv, direction, (UCHAR FAR *) Dsn, DsnMax, &cb1,
-                             (UCHAR FAR *) DsDesc, DsDescMax, &cb2) == SQL_SUCCESS)
+    if (SQLDataSources(henv, direction, (SQLTCHAR FAR *) Dsn, DsnMax, &cb1,
+                             (SQLTCHAR FAR *) DsDesc, DsDescMax, &cb2) == SQL_SUCCESS)
         return(TRUE);
diff -bu1 -r wxWindows/./src/common/dbgrid.cpp wxWin/./src/common/dbgrid.cpp
--- wxWindows/./src/common/dbgrid.cpp	2003-08-11 10:29:42.000000000 +0200
+++ wxWin/./src/common/dbgrid.cpp	2003-09-17 13:38:13.000000000 +0200
@@ -265,3 +265,3 @@
 
-wxString wxDbGridTableBase::GetTypeName(int row, int col)
+wxString wxDbGridTableBase::GetTypeName(int WXUNUSED(row), int col)
 {
@@ -372,3 +372,3 @@
 
-bool wxDbGridTableBase::CanSetValueAs(int row, int col, const wxString& typeName)
+bool wxDbGridTableBase::CanSetValueAs(int WXUNUSED(row), int col, const wxString& typeName)
 {
@@ -682,3 +682,3 @@
         {
-            wxDbLogExtendedErrorMsg("ODBC error during Query()\n\n", m_data->GetDb(),__FILE__,__LINE__);
+            wxDbLogExtendedErrorMsg(_T("ODBC error during Query()\n\n"), m_data->GetDb(),__TFILE__,__LINE__);
         }
diff -bu1 -r wxWindows/./src/common/dbtable.cpp wxWin/./src/common/dbtable.cpp
--- wxWindows/./src/common/dbtable.cpp	2003-08-11 10:29:42.000000000 +0200
+++ wxWin/./src/common/dbtable.cpp	2003-09-17 16:45:15.000000000 +0200
@@ -82,3 +82,3 @@
 
-void csstrncpyt(char *target, const char *source, int n)
+void csstrncpyt(wxChar *target, const wxChar *source, int n)
 {
@@ -616,3 +616,3 @@
     // Execute the DELETE statement
-    retcode = SQLExecDirect(hstmtDelete, (UCHAR FAR *) pSqlStmt.c_str(), SQL_NTS);
+    retcode = SQLExecDirect(hstmtDelete, (SQLTCHAR FAR *) pSqlStmt.c_str(), SQL_NTS);
 
@@ -638,3 +638,3 @@
     // Execute the UPDATE statement
-    retcode = SQLExecDirect(hstmtUpdate, (UCHAR FAR *) pSqlStmt.c_str(), SQL_NTS);
+    retcode = SQLExecDirect(hstmtUpdate, (SQLTCHAR FAR *) pSqlStmt.c_str(), SQL_NTS);
 
@@ -650,3 +650,4 @@
         PTR pParmID;
-        while ((retcode = SQLParamData(hstmtUpdate, &pParmID) == SQL_NEED_DATA))
+        retcode = SQLParamData(hstmtUpdate, &pParmID);
+        while (retcode == SQL_NEED_DATA)
         {
@@ -708,3 +709,3 @@
     int retcode;
-    retcode = SQLExecDirect(hstmt, (UCHAR FAR *) (queryType == DB_SELECT_STATEMENT ? pSqlStmt.c_str() : sqlStmt.c_str()), SQL_NTS);
+    retcode = SQLExecDirect(hstmt, (SQLTCHAR FAR *) (queryType == DB_SELECT_STATEMENT ? pSqlStmt.c_str() : sqlStmt.c_str()), SQL_NTS);
     if (retcode != SQL_SUCCESS && retcode != SQL_SUCCESS_WITH_INFO)
@@ -839,3 +840,3 @@
         {
-            if (SQLPrepare(hstmtInsert, (UCHAR FAR *) sqlStmt.c_str(), SQL_NTS) != SQL_SUCCESS)
+            if (SQLPrepare(hstmtInsert, (SQLTCHAR FAR *) sqlStmt.c_str(), SQL_NTS) != SQL_SUCCESS)
                 return(pDb->DispAllErrors(henv, hdbc, hstmtInsert));
@@ -1428,3 +1429,3 @@
         if (colDefs[i].DbDataType == DB_DATA_TYPE_VARCHAR &&
-            (pDb->Dbms() != dbmsMY_SQL || pDb->GetTypeInfVarchar().TypeName != "text"))// ||
+            (pDb->Dbms() != dbmsMY_SQL || pDb->GetTypeInfVarchar().TypeName != _T("text")))// ||
 //            colDefs[i].DbDataType == DB_DATA_TYPE_BLOB)
@@ -1534,3 +1535,3 @@
     // Execute the CREATE TABLE statement
-    RETCODE retcode = SQLExecDirect(hstmt, (UCHAR FAR *) sqlStmt.c_str(), SQL_NTS);
+    RETCODE retcode = SQLExecDirect(hstmt, (SQLTCHAR FAR *) sqlStmt.c_str(), SQL_NTS);
     if (retcode != SQL_SUCCESS && retcode != SQL_SUCCESS_WITH_INFO)
@@ -1574,3 +1575,3 @@
 
-    RETCODE retcode = SQLExecDirect(hstmt, (UCHAR FAR *) sqlStmt.c_str(), SQL_NTS);
+    RETCODE retcode = SQLExecDirect(hstmt, (SQLTCHAR FAR *) sqlStmt.c_str(), SQL_NTS);
     if (retcode != SQL_SUCCESS)
@@ -1654,2 +1655,4 @@
                 {
+                    #if 0
+                    // retcode is not used
                     wxODBC_ERRORS retcode;
@@ -1659,2 +1662,3 @@
                     retcode = (wxODBC_ERRORS)pDb->DB_STATUS;
+                    #endif
                 }
@@ -1714,3 +1718,3 @@
         // Postgres and SQL Server 7 do not support the ASC/DESC keywords for index columns
-        if (!((pDb->Dbms() == dbmsMS_SQL_SERVER) && (strncmp(pDb->dbInf.dbmsVer,"07",2)==0)) &&
+        if (!((pDb->Dbms() == dbmsMS_SQL_SERVER) && (wxStrncmp(pDb->dbInf.dbmsVer,_T("07"),2)==0)) &&
             !(pDb->Dbms() == dbmsPOSTGRES))
@@ -1723,3 +1727,3 @@
         else
-            wxASSERT_MSG(pIdxDefs[i].Ascending, "Datasource does not support DESCending index columns");
+            wxASSERT_MSG(pIdxDefs[i].Ascending, _T("Datasource does not support DESCending index columns"));
 
@@ -1739,3 +1743,3 @@
     // Execute the CREATE INDEX statement
-    if (SQLExecDirect(hstmt, (UCHAR FAR *) sqlStmt.c_str(), SQL_NTS) != SQL_SUCCESS)
+    if (SQLExecDirect(hstmt, (SQLTCHAR FAR *) sqlStmt.c_str(), SQL_NTS) != SQL_SUCCESS)
     {
@@ -1790,3 +1794,3 @@
 
-    if (SQLExecDirect(hstmt, (UCHAR FAR *) sqlStmt.c_str(), SQL_NTS) != SQL_SUCCESS)
+    if (SQLExecDirect(hstmt, (SQLTCHAR FAR *) sqlStmt.c_str(), SQL_NTS) != SQL_SUCCESS)
     {
@@ -1890,3 +1894,4 @@
         PTR pParmID;
-        while ((retcode = SQLParamData(hstmtInsert, &pParmID) == SQL_NEED_DATA))
+        retcode = SQLParamData(hstmtInsert, &pParmID);
+        while (retcode == SQL_NEED_DATA)
         {
@@ -2391,3 +2396,3 @@
     // Execute the SQL statement
-    if (SQLExecDirect(*hstmtCount, (UCHAR FAR *) sqlStmt.c_str(), SQL_NTS) != SQL_SUCCESS)
+    if (SQLExecDirect(*hstmtCount, (SQLTCHAR FAR *) sqlStmt.c_str(), SQL_NTS) != SQL_SUCCESS)
     {
@@ -2431,4 +2436,4 @@
     // Save the where and order by clauses
-    char *saveWhere = where;
-    char *saveOrderBy = orderBy;
+    wxChar *saveWhere = where;
+    wxChar *saveOrderBy = orderBy;
 #else
@@ -2649,6 +2654,6 @@
             case SQL_C_TINYINT:
-                val = (long)(*(char *)(colDefs[colNo].PtrDataObj));
+                val = (long)(*(wxChar *)(colDefs[colNo].PtrDataObj));
                 break;
             case SQL_C_UTINYINT:
-                val = (long)(*(unsigned char *)(colDefs[colNo].PtrDataObj));
+                val = (long)(*(wxChar *)(colDefs[colNo].PtrDataObj));
                 break;
@@ -2699,3 +2704,3 @@
             case SQL_VARCHAR:
-                csstrncpyt((char *)(colDefs[colNo].PtrDataObj),
+                csstrncpyt((wxChar *)(colDefs[colNo].PtrDataObj),
                            val.GetString().c_str(),
@@ -2715,6 +2720,6 @@
             case SQL_C_TINYINT:
-                *(char *)(colDefs[colNo].PtrDataObj) = val.GetChar();
+                *(wxChar *)(colDefs[colNo].PtrDataObj) = val.GetChar();
                 break;
             case SQL_C_UTINYINT:
-                *(unsigned char *)(colDefs[colNo].PtrDataObj) = val.GetChar();
+                *(wxChar *)(colDefs[colNo].PtrDataObj) = val.GetChar();
                 break;
diff -bu1 -r wxWindows/./src/generic/dcpsg.cpp wxWin/./src/generic/dcpsg.cpp
--- wxWindows/./src/generic/dcpsg.cpp	2003-08-11 10:29:52.000000000 +0200
+++ wxWin/./src/generic/dcpsg.cpp	2003-09-17 12:50:47.000000000 +0200
@@ -1563,3 +1563,7 @@
 
-    double a, b, c, d, x1, y1, x2, y2, x3, y3;
+    #if 0
+    // a and b are not used
+    double a, b;
+    #endif
+    double c, d, x1, y1, x2, y2, x3, y3;
     wxPoint *p, *q;
@@ -1575,4 +1579,12 @@
     d = p->y;
-    x3 = a = (double)(x1 + c) / 2;
-    y3 = b = (double)(y1 + d) / 2;
+    x3 = 
+         #if 0
+         a = 
+         #endif 
+         (double)(x1 + c) / 2;
+    y3 = 
+         #if 0
+         b = 
+         #endif 
+         (double)(y1 + d) / 2;
 
@@ -1588,3 +1600,4 @@
 
-    while ((node = node->GetNext()))
+    node = node->GetNext();
+    while (node)
     {
diff -bu1 -r wxWindows/./src/generic/listctrl.cpp wxWin/./src/generic/listctrl.cpp
--- wxWindows/./src/generic/listctrl.cpp	2003-09-15 13:24:28.000000000 +0200
+++ wxWin/./src/generic/listctrl.cpp	2003-09-17 12:27:10.000000000 +0200
@@ -2840,3 +2840,3 @@
 
-void wxListMainWindow::OnRenameCancelled(size_t itemEdit)
+void wxListMainWindow::OnRenameCancelled(size_t WXUNUSED(itemEdit))
 {
@@ -2846,2 +2846,5 @@
 
+  #if 0
+    // above unconditional return cause warning about not reachable code
+
     // let owner know that the edit was cancelled
@@ -2862,2 +2865,3 @@
     GetEventHandler()->ProcessEvent( le );
+  #endif
 }
@@ -3967,4 +3971,7 @@
 
-            int entireWidth = 0,
-                entireHeight = 0;
+            int entireWidth = 0;
+            #if 0
+            // entireHeight is not used so no need to define it
+            int entireHeight = 0;
+            #endif
 
@@ -3973,3 +3980,6 @@
                 entireWidth = 2*EXTRA_BORDER_X;
+                #if 0
+                // entireHeight is not used so no need to define it
                 entireHeight = 2*EXTRA_BORDER_Y;
+                #endif
 
@@ -4342,6 +4352,12 @@
 
+    #if 0
+    // this is unused variable
     int mode = 0;
+    #endif
     if ( HasFlag(wxLC_REPORT) )
     {
+        #if 0
+        // this is unused variable
         mode = wxLC_REPORT;
+        #endif
         ResetVisibleLinesRange();
@@ -4349,7 +4365,22 @@
     else if ( HasFlag(wxLC_LIST) )
+        #if 0
+        // this is unused variable
         mode = wxLC_LIST;
+        #else
+        {}
+        #endif
     else if ( HasFlag(wxLC_ICON) )
+        #if 0
+        // this is unused variable
         mode = wxLC_ICON;
+        #else
+        {}
+        #endif
     else if ( HasFlag(wxLC_SMALL_ICON) )
+        #if 0
+        // this is unused variable
         mode = wxLC_ICON;  // no typo
+        #else
+        {}
+        #endif
     else
diff -bu1 -r wxWindows/./src/generic/mdig.cpp wxWin/./src/generic/mdig.cpp
--- wxWindows/./src/generic/mdig.cpp	2003-08-22 08:10:24.000000000 +0200
+++ wxWin/./src/generic/mdig.cpp	2003-09-17 12:11:14.000000000 +0200
@@ -441,3 +441,3 @@
             {
-                if (pClientWindow->GetPageCount() - 1 >= 0)
+                if ((int)pClientWindow->GetPageCount() - 1 >= 0)
                     pClientWindow->SetSelection(pClientWindow->GetPageCount() - 1);
@@ -716,3 +716,3 @@
 
-int wxGenericMDIClientWindow::SetSelection(int nPage)
+int wxGenericMDIClientWindow::SetSelection(size_t nPage)
 {
diff -bu1 -r wxWindows/./src/univ/combobox.cpp wxWin/./src/univ/combobox.cpp
--- wxWindows/./src/univ/combobox.cpp	2003-08-11 10:30:18.000000000 +0200
+++ wxWin/./src/univ/combobox.cpp	2003-09-17 12:16:29.000000000 +0200
@@ -125,2 +125,4 @@
     virtual bool SetSelection(const wxString& value);
+    virtual void SetSelection(int n, bool select)
+        { wxListBox::SetSelection( n, select); };
     virtual wxControl *GetControl() { return this; }
diff -bu1 -r wxWindows/./src/univ/ctrlrend.cpp wxWin/./src/univ/ctrlrend.cpp
--- wxWindows/./src/univ/ctrlrend.cpp	2003-08-11 10:30:18.000000000 +0200
+++ wxWin/./src/univ/ctrlrend.cpp	2003-09-17 12:17:52.000000000 +0200
@@ -677,3 +677,7 @@
                                     size_t itemFirst, size_t itemLast,
+#if wxUSE_CHECKLISTBOX
                                     bool isCheckLbox)
+#else
+                                    bool WXUNUSED(isCheckLbox))
+#endif
 {
diff -bu1 -r wxWindows/./src/univ/menu.cpp wxWin/./src/univ/menu.cpp
--- wxWindows/./src/univ/menu.cpp	2003-08-11 10:30:20.000000000 +0200
+++ wxWin/./src/univ/menu.cpp	2003-09-17 12:46:53.000000000 +0200
@@ -186,2 +186,3 @@
     void SetCurrent(wxMenuItemList::compatibility_iterator node);
+    virtual bool SetCurrent(bool doit = TRUE){return wxPopupTransientWindow::SetCurrent(doit);};
 
@@ -333,3 +334,3 @@
 #else
-    SetCurrent(NULL);
+    SetCurrent((wxwxMenuItemListNode *)NULL);
 #endif
@@ -1113,3 +1114,6 @@
 {
+    #if 0
+    // not used at all
     bool check = FALSE;
+    #endif
 
@@ -1129,3 +1133,6 @@
             // ensure that we have a checked item in the radio group
+            #if 0
+            // not used at all
             check = TRUE;
+            #endif
         }
diff -bu1 -r wxWindows/./src/univ/notebook.cpp wxWin/./src/univ/notebook.cpp
--- wxWindows/./src/univ/notebook.cpp	2003-09-02 08:42:52.000000000 +0200
+++ wxWin/./src/univ/notebook.cpp	2003-09-17 12:35:46.000000000 +0200
@@ -46,3 +46,8 @@
 
+#if 0
+// due to unsigned type nPage is always >= 0
 #define IS_VALID_PAGE(nPage) (((nPage) >= 0) && ((size_t(nPage)) < GetPageCount()))
+#else
+#define IS_VALID_PAGE(nPage) ((size_t(nPage)) < GetPageCount())
+#endif
 
diff -bu1 -r wxWindows/./src/univ/scrarrow.cpp wxWin/./src/univ/scrarrow.cpp
--- wxWindows/./src/univ/scrarrow.cpp	2003-08-11 10:30:20.000000000 +0200
+++ wxWin/./src/univ/scrarrow.cpp	2003-09-17 12:36:14.000000000 +0200
@@ -189,3 +189,3 @@
         }
-        else if ( 1 ) //FIXME: m_control->ShouldPauseScrolling() )
+        else // if ( 1 ) FIXME: m_control->ShouldPauseScrolling() )
         {
diff -bu1 -r wxWindows/./src/univ/textctrl.cpp wxWin/./src/univ/textctrl.cpp
--- wxWindows/./src/univ/textctrl.cpp	2003-08-21 12:27:54.000000000 +0200
+++ wxWin/./src/univ/textctrl.cpp	2003-09-17 12:39:24.000000000 +0200
@@ -530,2 +530,4 @@
     virtual bool Do(wxTextCtrl *text);
+    virtual bool Do() { return wxTextCtrlCommand::Do(); }
+    virtual bool Undo() { return wxTextCtrlCommand::Undo(); }
     virtual bool Undo(wxTextCtrl *text);
@@ -553,2 +555,4 @@
     virtual bool Do(wxTextCtrl *text);
+    virtual bool Do() { return wxTextCtrlCommand::Do(); }
+    virtual bool Undo() { return wxTextCtrlCommand::Undo(); }
     virtual bool Undo(wxTextCtrl *text);
diff -bu1 -r wxWindows/./src/univ/topluniv.cpp wxWin/./src/univ/topluniv.cpp
--- wxWindows/./src/univ/topluniv.cpp	2003-08-11 10:30:20.000000000 +0200
+++ wxWin/./src/univ/topluniv.cpp	2003-09-17 12:48:08.000000000 +0200
@@ -356,3 +356,6 @@
                 return FALSE;
+                #if 0
+                // not rachable due to earlier return
                 break;
+                #endif
         }

 	  	 
