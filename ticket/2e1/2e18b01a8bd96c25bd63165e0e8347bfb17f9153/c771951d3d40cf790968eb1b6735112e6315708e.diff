diff --git a/samples/minimal/minimal.cpp b/samples/minimal/minimal.cpp
index 27aabd7..5d9b41e 100644
--- a/samples/minimal/minimal.cpp
+++ b/samples/minimal/minimal.cpp
@@ -68,6 +68,7 @@ public:
     void OnAbout(wxCommandEvent& event);
 
 private:
+    void OnPaint(wxPaintEvent&);
     // any class wishing to process wxWidgets events must use this macro
     wxDECLARE_EVENT_TABLE();
 };
@@ -98,6 +99,7 @@ enum
 wxBEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_PAINT(MyFrame::OnPaint)
 wxEND_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -140,9 +142,53 @@ bool MyApp::OnInit()
 // main frame
 // ----------------------------------------------------------------------------
 
+void MyFrame::OnPaint(wxPaintEvent&)
+{
+    wxPaintDC dc(this);
+    wxPen pen(*wxBLACK);
+    pen.SetCap(wxCAP_BUTT);
+    dc.SetPen(pen);
+
+    int x = 1;
+    int y = 1;
+    // vertical lines
+    dc.DrawLine(x, y, x+1, y+9);
+    x += 3;
+    dc.DrawLine(x, y, x, y+9);
+    x += 3;
+    dc.DrawLine(x+1, y, x, y+9);
+
+    x = 13;
+    y = 1;
+    // vertical lines, endpoints reversed
+    dc.DrawLine(x+1, y+9, x, y);
+    x += 3;
+    dc.DrawLine(x, y+9, x, y);
+    x += 3;
+    dc.DrawLine(x, y+9, x+1, y);
+
+    x = 1;
+    y = 15;
+    // horizontal lines
+    dc.DrawLine(x, y, x+9, y+1);
+    y += 3;
+    dc.DrawLine(x, y, x+9, y);
+    y += 3;
+    dc.DrawLine(x, y+1, x+9, y);
+
+    x = 1;
+    y += 6;
+    // horizontal lines, endpoints reversed
+    dc.DrawLine(x+9, y+1, x, y);
+    y += 3;
+    dc.DrawLine(x+9, y, x, y);
+    y += 3;
+    dc.DrawLine(x+9, y, x, y+1);
+}
+
 // frame constructor
 MyFrame::MyFrame(const wxString& title)
-       : wxFrame(NULL, wxID_ANY, title)
+       : wxFrame(NULL, wxID_ANY, title, wxDefaultPosition, wxSize(70, 120))
 {
     // set the frame icon
     SetIcon(wxICON(sample));
