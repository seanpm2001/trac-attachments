diff --git a/include/wx/gtk/hyperlink.h b/include/wx/gtk/hyperlink.h
index 486c5b8..a4c0487 100644
--- a/include/wx/gtk/hyperlink.h
+++ b/include/wx/gtk/hyperlink.h
@@ -13,6 +13,10 @@
 
 #include "wx/generic/hyperlink.h"
 
+#ifdef __WXGTK3__
+#include <gtk/gtk.h>
+#endif
+
 // ----------------------------------------------------------------------------
 // wxHyperlinkCtrl
 // ----------------------------------------------------------------------------
@@ -22,7 +26,11 @@ class WXDLLIMPEXP_ADV wxHyperlinkCtrl : public wxGenericHyperlinkCtrl
     typedef wxGenericHyperlinkCtrl base_type;
 public:
     // Default constructor (for two-step construction).
-    wxHyperlinkCtrl() { }
+    wxHyperlinkCtrl()
+#ifdef __WXGTK3__
+    : m_link_color_provider(NULL), m_visited_link_color_provider(NULL)
+#endif
+{}
 
     // Constructor.
     wxHyperlinkCtrl(wxWindow *parent,
@@ -32,6 +40,9 @@ public:
                     const wxSize& size = wxDefaultSize,
                     long style = wxHL_DEFAULT_STYLE,
                     const wxString& name = wxHyperlinkCtrlNameStr)
+#ifdef __WXGTK3__
+    : m_link_color_provider(NULL), m_visited_link_color_provider(NULL)
+#endif
     {
         (void)Create(parent, id, label, url, pos, size, style, name);
     }
@@ -72,6 +83,11 @@ protected:
 
     virtual GdkWindow *GTKGetWindow(wxArrayGdkWindows& windows) const wxOVERRIDE;
 
+#ifdef __WXGTK3__
+    GtkCssProvider *m_link_color_provider;
+    GtkCssProvider *m_visited_link_color_provider;
+#endif
+
     wxDECLARE_DYNAMIC_CLASS(wxHyperlinkCtrl);
 };
 
diff --git a/src/gtk/hyperlink.cpp b/src/gtk/hyperlink.cpp
index dd3ad8d..e09d1e4 100644
--- a/src/gtk/hyperlink.cpp
+++ b/src/gtk/hyperlink.cpp
@@ -93,6 +93,11 @@ wxHyperlinkCtrl::~wxHyperlinkCtrl()
 {
 #ifndef __WXGTK3__
     gs_hyperlinkctrl_list = g_slist_remove(gs_hyperlinkctrl_list, this);
+#else
+    if(m_link_color_provider)
+        g_object_unref(m_link_color_provider);
+    if(m_visited_link_color_provider)
+        g_object_unref(m_visited_link_color_provider);
 #endif
 }
 
@@ -201,6 +206,25 @@ void wxHyperlinkCtrl::SetNormalColour(const wxColour &colour)
 {
     if ( UseNative() )
     {
+#ifdef __WXGTK3__
+        const GdkRGBA *col = colour;
+
+        if(m_link_color_provider)
+        {
+            gtk_style_context_remove_provider(gtk_widget_get_style_context(m_widget),GTK_STYLE_PROVIDER(m_link_color_provider));
+            g_object_unref(m_link_color_provider);
+        }
+
+        m_link_color_provider = gtk_css_provider_new();
+
+        char *css = g_strdup_printf("* { link-color: %s; }", gdk_rgba_to_string(col));
+        gtk_css_provider_load_from_data(m_link_color_provider, css, -1, NULL);
+        g_free(css);
+
+        gtk_style_context_add_provider(gtk_widget_get_style_context(m_widget),
+                                       GTK_STYLE_PROVIDER(m_link_color_provider),
+                                       GTK_STYLE_PROVIDER_PRIORITY_APPLICATION);
+#endif
         // simply do nothing: GTK+ does not allow us to change it :(
     }
     else
@@ -212,6 +236,16 @@ wxColour wxHyperlinkCtrl::GetNormalColour() const
     wxColour ret;
     if ( UseNative() )
     {
+#ifdef __WXGTK3__
+        GdkRGBA *link_color = NULL;
+
+        gtk_widget_style_get(m_widget, "link-color", &link_color, NULL);
+
+        if (link_color) {
+            ret = wxColour(*link_color);
+            gdk_rgba_free (link_color);
+        }
+#else
         GdkColor* link_color;
         GdkColor color = { 0, 0, 0, 0xeeee };
 
@@ -226,6 +260,7 @@ wxColour wxHyperlinkCtrl::GetNormalColour() const
         }
         wxGCC_WARNING_RESTORE()
         ret = wxColour(color);
+#endif
     }
     else
         ret = wxGenericHyperlinkCtrl::GetNormalColour();
@@ -237,6 +272,25 @@ void wxHyperlinkCtrl::SetVisitedColour(const wxColour &colour)
 {
     if ( UseNative() )
     {
+#ifdef __WXGTK3__
+        const GdkRGBA *col = colour;
+
+        if(m_visited_link_color_provider)
+        {
+            gtk_style_context_remove_provider(gtk_widget_get_style_context(m_widget),GTK_STYLE_PROVIDER(m_visited_link_color_provider));
+            g_object_unref(m_visited_link_color_provider);
+        }
+
+        m_visited_link_color_provider = gtk_css_provider_new();
+
+        char *css = g_strdup_printf("* { visited-link-color: %s; }", gdk_rgba_to_string(col));
+        gtk_css_provider_load_from_data(m_visited_link_color_provider, css, -1, NULL);
+        g_free(css);
+
+        gtk_style_context_add_provider(gtk_widget_get_style_context(m_widget),
+                                       GTK_STYLE_PROVIDER(m_visited_link_color_provider),
+                                       GTK_STYLE_PROVIDER_PRIORITY_APPLICATION);
+#endif
         // simply do nothing: GTK+ does not allow us to change it :(
     }
     else
@@ -248,6 +302,17 @@ wxColour wxHyperlinkCtrl::GetVisitedColour() const
     wxColour ret;
     if ( UseNative() )
     {
+
+#ifdef __WXGTK3__
+        GdkRGBA *link_color = NULL;
+
+        gtk_widget_style_get(m_widget, "visited-link-color", &link_color, NULL);
+
+        if (link_color) {
+            ret = wxColour(*link_color);
+            gdk_rgba_free (link_color);
+        }
+#else
         GdkColor* link_color;
         GdkColor color = { 0, 0x5555, 0x1a1a, 0x8b8b };
 
@@ -262,6 +327,8 @@ wxColour wxHyperlinkCtrl::GetVisitedColour() const
         }
         wxGCC_WARNING_RESTORE()
         ret = wxColour(color);
+#endif
+
     }
     else
         ret = base_type::GetVisitedColour();
