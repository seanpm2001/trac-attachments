diff --git a/src/gtk/hyperlink.cpp b/src/gtk/hyperlink.cpp
index f90589d..b222e04 100644
--- a/src/gtk/hyperlink.cpp
+++ b/src/gtk/hyperlink.cpp
@@ -63,6 +63,19 @@ static void gtk_hyperlink_clicked_callback( GtkWidget *WXUNUSED(widget),
 }
 }
 
+#if GTK_CHECK_VERSION( 3, 0, 0 )
+extern "C" {
+static bool gtk3_hyperlink_clicked_callback( GtkWidget *WXUNUSED(widget), wxHyperlinkCtrl *linkCtrl )
+{
+    bool result = FALSE;
+    wxHyperlinkEvent event( linkCtrl, linkCtrl->GetId(), linkCtrl->GetURL() );
+    event.SetEventObject( linkCtrl );
+    if( !linkCtrl->GetEventHandler()->ProcessEvent( event ) )
+        result = TRUE;
+    return result;
+}
+}
+#endif
 // ----------------------------------------------------------------------------
 // wxHyperlinkCtrl
 // ----------------------------------------------------------------------------
@@ -92,17 +105,38 @@ bool wxHyperlinkCtrl::Create(wxWindow *parent, wxWindowID id,
             x_alignment = 0.0;
         else if (HasFlag(wxHL_ALIGN_RIGHT))
             x_alignment = 1.0;
-        gtk_button_set_alignment(GTK_BUTTON(m_widget), x_alignment, 0.5);
-
+#if GTK_CHECK_VERSION( 3, 14, 0 )
+	GtkWidget *widget = gtk_bin_get_child( GTK_BIN( m_widget ) );
+	GtkAlign align;
+	if( HasFlag( wxHL_ALIGN_RIGHT ) )
+	    align = GTK_ALIGN_START;
+	else if( HasFlag( wxHL_ALIGN_RIGHT ) )
+	    align = GTK_ALIGN_END;
+	else
+	    align = GTK_ALIGN_CENTER;
+	gtk_widget_set_halign( widget, align );
+#endif
+	if( !gtk_check_version( 3, 14, 0 ) )
+	{
+	    wxGCC_WARNING_SUPPRESS(deprecated-declarations)
+            gtk_button_set_alignment(GTK_BUTTON(m_widget), x_alignment, 0.5);
+	    wxGCC_WARNING_RESTORE()
+	}
         // set to non empty strings both the url and the label
         SetURL(url.empty() ? label : url);
         SetLabel(label.empty() ? url : label);
-
-        // our signal handlers:
-        g_signal_connect_after (m_widget, "clicked",
+#if GTK_CHECK_VERSION( 3, 0, 0 )
+	g_signal_connect( m_widget, "activate-link", G_CALLBACK( gtk3_hyperlink_clicked_callback ), this );
+#endif
+	if( !gtk_check_version( 3, 0, 0 ) )
+	{
+	    wxGCC_WARNING_SUPPRESS(deprecated-declarations)
+            // our signal handlers:
+            g_signal_connect (m_widget, "clicked",
                                 G_CALLBACK (gtk_hyperlink_clicked_callback),
                                 this);
-
+	    wxGCC_WARNING_RESTORE();
+	}
         m_parent->DoAddChild( this );
 
         PostCreation(size);
@@ -178,13 +212,25 @@ wxColour wxHyperlinkCtrl::GetNormalColour() const
     wxColour ret;
     if ( UseNative() )
     {
-        GdkColor *link_color = NULL;
-
-        // convert GdkColor in wxColour
-        gtk_widget_style_get(m_widget, "link-color", &link_color, NULL);
-        if (link_color)
-            ret = wxColour(*link_color);
-        gdk_color_free (link_color);
+#if GTK_CHECK_VERSION( 3, 14, 0 )
+        GdkRGBA *link_color = NULL;
+	gtk_widget_style_get( m_widget, "link_color", &link_color, NULL );
+	if( link_color )
+	    ret = wxColour( *link_color );
+	gdk_rgba_free( link_color );
+#endif
+        if( !gtk_check_version( 3, 14, 0 ) )
+	{
+	    wxGCC_WARNING_SUPPRESS(deprecated-declarations)
+            GdkColor *link_color = NULL;
+
+            // convert GdkColor in wxColour
+            gtk_widget_style_get(m_widget, "link-color", &link_color, NULL);
+            if (link_color)
+                ret = wxColour(*link_color);
+            gdk_color_free (link_color);
+	    wxGCC_WARNING_RESTORE()
+	}
     }
     else
         ret = wxGenericHyperlinkCtrl::GetNormalColour();
@@ -207,13 +253,25 @@ wxColour wxHyperlinkCtrl::GetVisitedColour() const
     wxColour ret;
     if ( UseNative() )
     {
-        GdkColor *link_color = NULL;
-
-        // convert GdkColor in wxColour
-        gtk_widget_style_get(m_widget, "visited-link-color", &link_color, NULL);
-        if (link_color)
-            ret = wxColour(*link_color);
-        gdk_color_free (link_color);
+#if GTK_CHECK_VERSION( 3, 14, 0 )
+        GdkRGBA *link_color = NULL;
+	gtk_widget_style_get( m_widget, "visited-link-color", &link_color, NULL );
+	if( link_color )
+	    ret = wxColour( *link_color );
+	gdk_rgba_free( link_color );
+#endif
+        if( !gtk_check_version( 3, 14, 0 ) )
+	{
+	    wxGCC_WARNING_SUPPRESS(deprecated-declarations)
+            GdkColor *link_color = NULL;
+
+            // convert GdkColor in wxColour
+            gtk_widget_style_get(m_widget, "visited-link-color", &link_color, NULL);
+            if (link_color)
+                ret = wxColour(*link_color);
+            gdk_color_free (link_color);
+	    wxGCC_WARNING_RESTORE()
+	}
     }
     else
         return wxGenericHyperlinkCtrl::GetVisitedColour();
