Index: src/gtk/combobox.cpp
===================================================================
--- src/gtk/combobox.cpp	(revision 65277)
+++ src/gtk/combobox.cpp	(working copy)
@@ -276,6 +276,14 @@
     return GetDefaultAttributesFromGTKWidget(gtk_combo_box_entry_new, true);
 }
 
+void wxComboBox::SetValue(const wxString& value)
+{
+    if ( HasFlag(wxCB_READONLY) )
+        SetStringSelection(value);
+    else
+        wxTextEntry::SetValue(value);
+}
+
 // ----------------------------------------------------------------------------
 // standard event handling
 // ----------------------------------------------------------------------------
@@ -352,11 +360,19 @@
 
 void wxComboBox::Popup()
 {
-     gtk_combo_box_popup( GTK_COMBO_BOX(m_widget) );
+    gtk_combo_box_popup( GTK_COMBO_BOX(m_widget) );
+
+    wxCommandEvent event( wxEVT_COMMAND_COMBOBOX_DROPDOWN, GetId() );
+    event.SetEventObject( this );
+    HandleWindowEvent( event );
 }
 
 void wxComboBox::Dismiss()
 {
     gtk_combo_box_popdown( GTK_COMBO_BOX(m_widget) );
+
+    wxCommandEvent event( wxEVT_COMMAND_COMBOBOX_CLOSEUP, GetId() );
+    event.SetEventObject( this );
+    HandleWindowEvent( event );
 }
 #endif // wxUSE_COMBOBOX
Index: include/wx/gtk/combobox.h
===================================================================
--- include/wx/gtk/combobox.h	(revision 65277)
+++ include/wx/gtk/combobox.h	(working copy)
@@ -101,6 +101,8 @@
 
     void OnChar( wxKeyEvent &event );
 
+    virtual void SetValue(const wxString& value);
+
     // Standard event handling
     void OnCut(wxCommandEvent& event);
     void OnCopy(wxCommandEvent& event);
