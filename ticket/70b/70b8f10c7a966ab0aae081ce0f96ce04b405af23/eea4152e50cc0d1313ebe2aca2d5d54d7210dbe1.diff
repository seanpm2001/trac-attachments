diff -rNbu2 wxW/build/bakefiles/files.bkl wxWidgets/build/bakefiles/files.bkl
--- wxW/build/bakefiles/files.bkl	Sun Oct  3 03:44:03 2004
+++ wxWidgets/build/bakefiles/files.bkl	Sun Oct  3 12:42:30 2004
@@ -1923,4 +1923,5 @@
     src/cocoa/statline2.mm
     src/cocoa/stattext.mm
+    src/cocoa/taskbar.mm
     src/cocoa/textctrl.mm
     src/cocoa/toolbar.mm
@@ -1929,4 +1930,5 @@
     src/cocoa/utilsexc.cpp
     src/cocoa/window.mm
+    src/common/taskbarcmn.cpp
     <!-- Generic implementations used by wxCocoa: -->
     src/generic/accel.cpp
@@ -2009,4 +2011,5 @@
     wx/cocoa/statline.h
     wx/cocoa/stattext.h
+    wx/cocoa/taskbarosx.h
     wx/cocoa/textctrl.h
     wx/cocoa/toolbar.h
diff -rNbu2 wxW/include/wx/cocoa/display.h wxWidgets/include/wx/cocoa/display.h
--- wxW/include/wx/cocoa/display.h	Wed Dec 31 16:00:00 1969
+++ wxWidgets/include/wx/cocoa/display.h	Sun Oct  3 10:42:30 2004
@@ -0,0 +1,45 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        include/wx/cocoa/display.h
+// Purpose:     wxDisplay class for wxCocoa
+// Author:      Ryan Norton
+// Modified by: 
+// Created:     2004-10-03
+// RCS-ID:      $Id: display.h,v 1.4 2004/05/23 20:51:02 JS Exp $
+// Copyright:   (c) Ryan Norton
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_COCOA_DISPLAY_H_
+#define _WX_COCOA_DISPLAY_H_
+
+#include "wx/object.h"
+#include "wx/display.h"
+
+class wxRect;
+class wxString;
+
+class WXDLLEXPORT wxDisplay : public wxDisplayBase
+{
+public:
+    wxDisplay ( size_t index = 0 );
+
+    ~wxDisplay();
+
+    virtual wxRect GetGeometry() const;
+    virtual int GetDepth() const;
+    virtual wxString GetName() const;
+
+    virtual wxArrayVideoModes
+        GetModes(const wxVideoMode& mode = wxDefaultVideoMode) const;
+
+    virtual wxVideoMode GetCurrentMode() const;
+
+    virtual bool ChangeMode(const wxVideoMode& mode = wxDefaultVideoMode);
+
+private:
+    struct _CGDirectDisplayID * m_id;
+
+    DECLARE_NO_COPY_CLASS(wxDisplay)
+};
+
+#endif // _WX_COCOA_DISPLAY_H_
diff -rNbu2 wxW/include/wx/display.h wxWidgets/include/wx/display.h
--- wxW/include/wx/display.h	Sun Oct  3 12:34:55 2004
+++ wxWidgets/include/wx/display.h	Sun Oct  3 09:55:34 2004
@@ -112,4 +112,6 @@
 #elif defined(__WXX11__)
     #include "wx/unix/displayx11.h"
+#elif defined(__WXCOCOA__)
+    #include "wx/cocoa/display.h"
 #elif defined(__WXMAC__)
     #include "wx/mac/display.h"
diff -rNbu2 wxW/src/cocoa/display.mm wxWidgets/src/cocoa/display.mm
--- wxW/src/cocoa/display.mm	Wed Dec 31 16:00:00 1969
+++ wxWidgets/src/cocoa/display.mm	Sun Oct  3 12:26:17 2004
@@ -0,0 +1,189 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        src/cocoa/display.cpp
+// Purpose:     Cocoa implementation of wxDisplay class
+// Author:      Ryan Norton
+// Modified by: 
+// Created:     2004-10-03
+// RCS-ID:      $Id: display.cpp,v 1.9 2004/09/25 00:02:13 RN Exp $
+// Copyright:   (c) wxWidgets team
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifdef __GNUG__
+    #pragma implementation "display.h"
+#endif
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+#if wxUSE_DISPLAY
+
+#ifndef WX_PRECOMP
+   #include "wx/dynarray.h"
+#endif
+
+#include "wx/display.h"
+#include "wx/gdicmn.h"
+#include "wx/string.h"
+
+#import <Foundation/Foundation.h>
+
+// ----------------------------------------------------------------------------
+// private classes
+// ----------------------------------------------------------------------------
+
+size_t wxDisplayBase::GetCount()
+{
+    CGDisplayCount count;
+#ifdef __WXDEBUG__
+    CGDisplayErr err = 
+#endif
+    CGGetActiveDisplayList(0, NULL, &count);
+
+    wxASSERT(err == CGDisplayNoErr);
+    return count;
+}
+
+int wxDisplayBase::GetFromPoint(const wxPoint &p)
+{   
+    CGPoint thePoint = {(float)p.x, (float)p.y};
+    CGDirectDisplayID theID;
+    CGDisplayCount theCount;
+    CGDisplayErr err = CGGetDisplaysWithPoint(thePoint, 1, &theID, &theCount);
+    wxASSERT(err == CGDisplayNoErr);
+    int nWhich = -1;
+    
+    if (theCount)
+    {
+        theCount = GetCount();
+        CGDirectDisplayID* theIDs = new CGDirectDisplayID[theCount];
+        err = CGGetActiveDisplayList(theCount, theIDs, &theCount);
+        wxASSERT(err == CGDisplayNoErr);
+
+        for(nWhich = 0; nWhich < (int) theCount; ++nWhich)
+        {
+            if(theIDs[nWhich] == theID)
+                break;
+        }
+        
+        delete[] theIDs;
+        
+        if(nWhich == (int) theCount)
+        {
+            wxFAIL_MSG(wxT("Failed to find display in display list"));
+            nWhich = -1;
+        }
+    }
+    
+    return nWhich;
+}//CFUserNotification[NSBundle bundleForClass:[self class]]
+
+wxDisplay::wxDisplay(size_t index) : wxDisplayBase ( index )
+{
+    CGDisplayCount theCount = GetCount();
+    CGDirectDisplayID* theIDs = new CGDirectDisplayID[theCount];
+#ifdef __WXDEBUG__
+    CGDisplayErr err = 
+#endif
+    CGGetActiveDisplayList(theCount, theIDs, &theCount);
+
+    wxASSERT(err == CGDisplayNoErr);
+    wxASSERT(index < theCount);
+    
+    m_id = theIDs[index];
+    
+    delete[] theIDs;
+}
+
+wxRect wxDisplay::GetGeometry() const
+{
+    CGRect theRect = CGDisplayBounds(m_id);
+    return wxRect(	(int)theRect.origin.x,
+                    (int)theRect.origin.y,
+                    (int)theRect.size.width,
+                    (int)theRect.size.height  ); //floats
+}
+
+int wxDisplay::GetDepth() const
+{
+    return (int) CGDisplayBitsPerPixel(m_id); //size_t
+}
+
+wxString wxDisplay::GetName() const
+{
+    // Macs don't name their displays...
+    return wxEmptyString;
+}
+
+static int wxCFDictKeyToInt( CFDictionaryRef desc, CFStringRef key )
+{
+    CFNumberRef value;
+    int num = 0;
+
+    if ( (value = (CFNumberRef) CFDictionaryGetValue(desc, key)) == NULL )
+        return 0;
+    CFNumberGetValue(value, kCFNumberIntType, &num);
+    return num;
+}
+
+wxArrayVideoModes
+    wxDisplay::GetModes(const wxVideoMode& mode) const
+{
+    wxArrayVideoModes Modes;
+    
+    CFArrayRef theArray = CGDisplayAvailableModes(m_id);
+
+    for(CFIndex i = 0; i < CFArrayGetCount(theArray); ++i)
+    {
+        CFDictionaryRef theValue = (CFDictionaryRef) CFArrayGetValueAtIndex(theArray, i);
+        
+        wxVideoMode theMode(wxCFDictKeyToInt(theValue, kCGDisplayWidth),
+                            wxCFDictKeyToInt(theValue, kCGDisplayHeight),
+                            wxCFDictKeyToInt(theValue, kCGDisplayBitsPerPixel),
+                            wxCFDictKeyToInt(theValue, kCGDisplayRefreshRate));
+        
+        if (theMode.Matches(mode))
+            Modes.Add(theMode);
+    }
+    
+    return Modes;
+}
+
+wxVideoMode wxDisplay::GetCurrentMode() const
+{
+    CFDictionaryRef theValue = CGDisplayCurrentMode (m_id);
+    
+    return wxVideoMode(wxCFDictKeyToInt(theValue, kCGDisplayWidth),
+                            wxCFDictKeyToInt(theValue, kCGDisplayHeight),
+                            wxCFDictKeyToInt(theValue, kCGDisplayBitsPerPixel),
+                            wxCFDictKeyToInt(theValue, kCGDisplayRefreshRate));
+}
+
+bool wxDisplay::ChangeMode(const wxVideoMode& mode)
+{
+    boolean_t bExactMatch;
+    CFDictionaryRef theCGMode = CGDisplayBestModeForParametersAndRefreshRate (
+                                        m_id,
+                                        (size_t)mode.bpp,
+                                        (size_t)mode.w,
+                                        (size_t)mode.h,
+                                        (double)mode.refresh,
+                                        &bExactMatch);
+    
+    bool bOK = bExactMatch;
+    
+    if(bOK)
+        bOK = CGDisplaySwitchToMode(m_id, theCGMode) == CGDisplayNoErr;
+
+    return bOK;
+}
+
+wxDisplay::~wxDisplay()
+{
+}
+
+#endif // wxUSE_DISPLAY
diff -rNbu2 wxW/src/cocoa/utils.cpp wxWidgets/src/cocoa/utils.cpp
--- wxW/src/cocoa/utils.cpp	Tue Aug  3 11:41:18 2004
+++ wxWidgets/src/cocoa/utils.cpp	Sun Oct  3 12:37:38 2004
@@ -23,10 +23,4 @@
 #include <stdarg.h>
 
-// Get size of display
-size_t wxDisplayBase::GetCount()
-{
-    return 1;
-}
-
 void wxDisplaySize(int *width, int *height)
 {

 	  	 
