diff --git a/build/bakefiles/files.bkl b/build/bakefiles/files.bkl
index bc29c0b..8bff47f 100644
--- a/build/bakefiles/files.bkl
+++ b/build/bakefiles/files.bkl
@@ -1812,6 +1839,7 @@ IMPORTANT: please read docs/tech/tn0016.txt before modifying this file!
     wx/msw/iniconf.h
     wx/msw/listbox.h
     wx/msw/listctrl.h
+    wx/msw/main.h
     wx/msw/mdi.h
     wx/msw/menu.h
     wx/msw/menuitem.h
diff --git a/include/wx/app.h b/include/wx/app.h
index 82b2868..7df56a7 100644
--- a/include/wx/app.h
+++ b/include/wx/app.h
@@ -701,6 +701,10 @@ protected:
     #include "wx/os2/app.h"
 #endif
 
+#ifdef __WINDOWS__
+    #include "wx/msw/main.h"
+#endif
+
 #else // !GUI
 
 // wxApp is defined in core and we cannot define another one in wxBase,
diff --git a/include/wx/msw/app.h b/include/wx/msw/app.h
index 5c54441..70df2ce 100644
--- a/include/wx/msw/app.h
+++ b/include/wx/msw/app.h
@@ -126,81 +126,5 @@ inline int wxApp::GetShell32Version()
 
 #endif // __WXWINCE__
 
-// ----------------------------------------------------------------------------
-// MSW-specific wxEntry() overload and wxIMPLEMENT_WXWIN_MAIN definition
-// ----------------------------------------------------------------------------
-
-// we need HINSTANCE declaration to define WinMain()
-#include "wx/msw/wrapwin.h"
-
-#ifndef SW_SHOWNORMAL
-    #define SW_SHOWNORMAL 1
-#endif
-
-// WinMain() is always ANSI, even in Unicode build, under normal Windows
-// but is always Unicode under CE
-#ifdef __WXWINCE__
-    typedef wchar_t *wxCmdLineArgType;
-#else
-    typedef char *wxCmdLineArgType;
-#endif
-
-// wxMSW-only overloads of wxEntry() and wxEntryStart() which take the
-// parameters passed to WinMain() instead of those passed to main()
-extern WXDLLIMPEXP_CORE bool
-    wxEntryStart(HINSTANCE hInstance,
-                HINSTANCE hPrevInstance = NULL,
-                wxCmdLineArgType pCmdLine = NULL,
-                int nCmdShow = SW_SHOWNORMAL);
-
-extern WXDLLIMPEXP_CORE int
-    wxEntry(HINSTANCE hInstance,
-            HINSTANCE hPrevInstance = NULL,
-            wxCmdLineArgType pCmdLine = NULL,
-            int nCmdShow = SW_SHOWNORMAL);
-
-#if defined(__BORLANDC__) && wxUSE_UNICODE
-    // Borland C++ has the following nonstandard behaviour: when the -WU
-    // command line flag is used, the linker expects to find wWinMain instead
-    // of WinMain. This flag causes the compiler to define _UNICODE and
-    // UNICODE symbols and there's no way to detect its use, so we have to
-    // define both WinMain and wWinMain so that wxIMPLEMENT_WXWIN_MAIN works
-    // for both code compiled with and without -WU.
-    // See http://sourceforge.net/tracker/?func=detail&atid=309863&aid=1935997&group_id=9863
-    // for more details.
-    #define wxIMPLEMENT_WXWIN_MAIN_BORLAND_NONSTANDARD                      \
-        extern "C" int WINAPI wWinMain(HINSTANCE hInstance,                 \
-                                      HINSTANCE hPrevInstance,              \
-                                      wchar_t * WXUNUSED(lpCmdLine),        \
-                                      int nCmdShow)                         \
-        {                                                                   \
-            wxDISABLE_DEBUG_SUPPORT();                                      \
-                                                                            \
-            /* NB: wxEntry expects lpCmdLine argument to be char*, not */   \
-            /*     wchar_t*, but fortunately it's not used anywhere    */   \
-            /*     and we can simply pass NULL in:                     */   \
-            return wxEntry(hInstance, hPrevInstance, NULL, nCmdShow);       \
-        }
-#else
-    #define wxIMPLEMENT_WXWIN_MAIN_BORLAND_NONSTANDARD
-#endif // defined(__BORLANDC__) && wxUSE_UNICODE
-
-#define wxIMPLEMENT_WXWIN_MAIN                                              \
-    extern "C" int WINAPI WinMain(HINSTANCE hInstance,                      \
-                                  HINSTANCE hPrevInstance,                  \
-                                  wxCmdLineArgType WXUNUSED(lpCmdLine),     \
-                                  int nCmdShow)                             \
-    {                                                                       \
-        wxDISABLE_DEBUG_SUPPORT();                                          \
-                                                                            \
-        /* NB: We pass NULL in place of lpCmdLine to behave the same as  */ \
-        /*     Borland-specific wWinMain() above. If it becomes needed   */ \
-        /*     to pass lpCmdLine to wxEntry() here, you'll have to fix   */ \
-        /*     wWinMain() above too.                                     */ \
-        return wxEntry(hInstance, hPrevInstance, NULL, nCmdShow);           \
-    }                                                                       \
-    wxIMPLEMENT_WXWIN_MAIN_BORLAND_NONSTANDARD
-
-
 #endif // _WX_APP_H_
 
diff --git a/include/wx/msw/main.h b/include/wx/msw/main.h
new file mode 100644
index 0000000..706020e
--- /dev/null
+++ b/include/wx/msw/main.h
@@ -0,0 +1,91 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        wx/msw/main.h
+// Purpose:     Windows-specific wxEntry() overload
+// Author:      Julian Smart
+// Modified by:
+// Created:     01/02/97
+// RCS-ID:      $Id$
+// Copyright:   (c) Julian Smart
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_MSW_MAIN_H_
+#define _WX_MSW_MAIN_H_
+
+// ----------------------------------------------------------------------------
+// Windows-specific wxEntry() overload and wxIMPLEMENT_WXWIN_MAIN definition
+// ----------------------------------------------------------------------------
+
+// we need HINSTANCE declaration to define WinMain()
+#include "wx/msw/wrapwin.h"
+
+#ifndef SW_SHOWNORMAL
+    #define SW_SHOWNORMAL 1
+#endif
+
+// WinMain() is always ANSI, even in Unicode build, under normal Windows
+// but is always Unicode under CE
+#ifdef __WXWINCE__
+    typedef wchar_t *wxCmdLineArgType;
+#else
+    typedef char *wxCmdLineArgType;
+#endif
+
+// Windows-only overloads of wxEntry() and wxEntryStart() which take the
+// parameters passed to WinMain() instead of those passed to main()
+extern WXDLLIMPEXP_CORE bool
+    wxEntryStart(HINSTANCE hInstance,
+                HINSTANCE hPrevInstance = NULL,
+                wxCmdLineArgType pCmdLine = NULL,
+                int nCmdShow = SW_SHOWNORMAL);
+
+extern WXDLLIMPEXP_CORE int
+    wxEntry(HINSTANCE hInstance,
+            HINSTANCE hPrevInstance = NULL,
+            wxCmdLineArgType pCmdLine = NULL,
+            int nCmdShow = SW_SHOWNORMAL);
+
+#if defined(__BORLANDC__) && wxUSE_UNICODE
+    // Borland C++ has the following nonstandard behaviour: when the -WU
+    // command line flag is used, the linker expects to find wWinMain instead
+    // of WinMain. This flag causes the compiler to define _UNICODE and
+    // UNICODE symbols and there's no way to detect its use, so we have to
+    // define both WinMain and wWinMain so that wxIMPLEMENT_WXWIN_MAIN works
+    // for both code compiled with and without -WU.
+    // See http://sourceforge.net/tracker/?func=detail&atid=309863&aid=1935997&group_id=9863
+    // for more details.
+    #define wxIMPLEMENT_WXWIN_MAIN_BORLAND_NONSTANDARD                      \
+        extern "C" int WINAPI wWinMain(HINSTANCE hInstance,                 \
+                                      HINSTANCE hPrevInstance,              \
+                                      wchar_t * WXUNUSED(lpCmdLine),        \
+                                      int nCmdShow)                         \
+        {                                                                   \
+            wxDISABLE_DEBUG_SUPPORT();                                      \
+                                                                            \
+            /* NB: wxEntry expects lpCmdLine argument to be char*, not */   \
+            /*     wchar_t*, but fortunately it's not used anywhere    */   \
+            /*     and we can simply pass NULL in:                     */   \
+            return wxEntry(hInstance, hPrevInstance, NULL, nCmdShow);       \
+        }
+#else
+    #define wxIMPLEMENT_WXWIN_MAIN_BORLAND_NONSTANDARD
+#endif // defined(__BORLANDC__) && wxUSE_UNICODE
+
+#define wxIMPLEMENT_WXWIN_MAIN                                              \
+    extern "C" int WINAPI WinMain(HINSTANCE hInstance,                      \
+                                  HINSTANCE hPrevInstance,                  \
+                                  wxCmdLineArgType WXUNUSED(lpCmdLine),     \
+                                  int nCmdShow)                             \
+    {                                                                       \
+        wxDISABLE_DEBUG_SUPPORT();                                          \
+                                                                            \
+        /* NB: We pass NULL in place of lpCmdLine to behave the same as  */ \
+        /*     Borland-specific wWinMain() above. If it becomes needed   */ \
+        /*     to pass lpCmdLine to wxEntry() here, you'll have to fix   */ \
+        /*     wWinMain() above too.                                     */ \
+        return wxEntry(hInstance, hPrevInstance, NULL, nCmdShow);           \
+    }                                                                       \
+    wxIMPLEMENT_WXWIN_MAIN_BORLAND_NONSTANDARD
+
+
+#endif // _WX_MSW_MAIN_H_
diff --git a/src/msw/main.cpp b/src/msw/main.cpp
index d55fef2..06cc6a4 100644
--- a/src/msw/main.cpp
+++ b/src/msw/main.cpp
@@ -202,7 +202,7 @@ int wxEntry(int& argc, wxChar **argv)
 
 #endif // wxUSE_BASE
 
-#if wxUSE_GUI && defined(__WXMSW__)
+#if wxUSE_GUI
 
 namespace
 {
@@ -358,7 +358,9 @@ wxMSWEntryCommon(HINSTANCE hInstance, int nCmdShow)
 
     // remember the parameters Windows gave us
     wxSetInstance(hInstance);
+#ifdef __WXMSW__
     wxApp::m_nCmdShow = nCmdShow;
+#endif
 
     // parse the command line: we can't use pCmdLine in Unicode build so it is
     // simpler to never use it at all (this also results in a more correct
@@ -414,7 +416,7 @@ WXDLLEXPORT int wxEntry(HINSTANCE hInstance,
     return wxEntry(wxArgs.argc, wxArgs.argv);
 }
 
-#endif // wxUSE_GUI && __WXMSW__
+#endif // wxUSE_GUI
 
 // ----------------------------------------------------------------------------
 // global HINSTANCE
