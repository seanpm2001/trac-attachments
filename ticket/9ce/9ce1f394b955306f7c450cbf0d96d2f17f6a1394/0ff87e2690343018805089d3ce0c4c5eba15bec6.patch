Index: include/wx/generic/private/grid.h
===================================================================
--- include/wx/generic/private/grid.h	(revision 64794)
+++ include/wx/generic/private/grid.h	(working copy)
@@ -214,9 +214,38 @@
     // event handlers forwarding wxHeaderCtrl events to wxGrid
     void OnClick(wxHeaderCtrlEvent& event)
     {
+        // we need to pass a dummy mouse event to be used for the grid event
+        wxMouseEvent e;
+        e.SetState(wxGetMouseState());
+        GetOwner()->SendEvent(wxEVT_GRID_LABEL_LEFT_CLICK, -1, 
+                              event.GetColumn(), e);
         GetOwner()->DoColHeaderClick(event.GetColumn());
     }
 
+    // event handlers forwarding wxHeaderCtrl events to wxGrid
+    void OnDoubleClick(wxHeaderCtrlEvent& event)
+    {
+        // we need to pass a dummy mouse event to be used for the grid event
+        wxMouseEvent e;
+        e.SetState(wxGetMouseState());
+        GetOwner()->SendEvent(wxEVT_GRID_LABEL_LEFT_DCLICK, -1, 
+                              event.GetColumn(), e);
+    }
+
+    void OnRightClick(wxHeaderCtrlEvent& event)
+    {
+        // we need to pass a dummy mouse event to be used for the grid event
+        wxMouseEvent e;
+        e.SetState(wxGetMouseState());
+        // check if the event was processed and if not 
+        // Skip() for the default menu action
+        if( !GetOwner()->SendEvent(wxEVT_GRID_LABEL_RIGHT_CLICK, -1, 
+                                    event.GetColumn(), e))
+        {
+                event.Skip();
+        }
+    }
+
     void OnBeginResize(wxHeaderCtrlEvent& event)
     {
         GetOwner()->DoStartResizeCol(event.GetColumn());
Index: interface/wx/grid.h
===================================================================
--- interface/wx/grid.h	(revision 64636)
+++ interface/wx/grid.h	(working copy)
@@ -2022,13 +2022,18 @@
         are using the grid to display tabular data and don't have thousands of
         columns in it.
 
-        Also note that currently @c wxEVT_GRID_LABEL_LEFT_DCLICK and
-        @c wxEVT_GRID_LABEL_RIGHT_DCLICK events are not generated for the column
-        labels if the native columns header is used (but this limitation could
-        possibly be lifted in the future).
+        By default a hide columns popup menu is shown when a native column 
+        header is right clicked. To avoid this Bind to the 
+        @c wxEVT_GRID_LABEL_RIGHT_CLICK event and use Skip(false) in your event
+        handler function.
+
+        Also note that if the native column header is used then a 
+        @c wxEVT_GRID_LABEL_RIGHT_DCLICK event is not generated for column 
+        labels (but this limitation could possibly be lifted in the future).
      */
     void UseNativeColHeader(bool native = true);
 
+
     //@}
 
 
Index: src/generic/grid.cpp
===================================================================
--- src/generic/grid.cpp	(revision 64794)
+++ src/generic/grid.cpp	(working copy)
@@ -170,6 +170,8 @@
 
 BEGIN_EVENT_TABLE(wxGridHeaderCtrl, wxHeaderCtrl)
     EVT_HEADER_CLICK(wxID_ANY, wxGridHeaderCtrl::OnClick)
+    EVT_HEADER_DCLICK(wxID_ANY, wxGridHeaderCtrl::OnDoubleClick)
+    EVT_HEADER_RIGHT_CLICK(wxID_ANY, wxGridHeaderCtrl::OnRightClick)
 
     EVT_HEADER_BEGIN_RESIZE(wxID_ANY, wxGridHeaderCtrl::OnBeginResize)
     EVT_HEADER_RESIZING(wxID_ANY, wxGridHeaderCtrl::OnResizing)
@@ -2042,10 +2044,15 @@
 }
 
 void wxGrid::CreateColumnWindow()
+
 {
+
+
+
     if ( m_useNativeHeader )
     {
         m_colWindow = new wxGridHeaderCtrl(this);
+
         m_colLabelHeight = m_colWindow->GetBestSize().y;
     }
     else // draw labels ourselves
@@ -5520,6 +5527,7 @@
 }
 
 void wxGrid::UseNativeColHeader(bool native)
+
 {
     if ( native == m_useNativeHeader )
         return;
@@ -5529,6 +5537,7 @@
 
     CreateColumnWindow();
 
+
     if ( m_useNativeHeader )
         GetGridColHeader()->SetColumnCount(m_numCols);
     CalcWindowSizes();
