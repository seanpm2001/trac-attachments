Index: include/wx/os2/combobox.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/combobox.h,v
retrieving revision 1.12
diff -u -r1.12 combobox.h
--- include/wx/os2/combobox.h	2005/01/19 16:25:10	1.12
+++ include/wx/os2/combobox.h	2006/06/16 09:44:18
@@ -97,8 +97,8 @@
     //
     // List functions: see wxChoice
     //
-    inline wxString GetValue(void) const { return GetLabel(); }
-    virtual void    SetValue(const wxString& rsValue);
+    virtual wxString  GetValue(void) const;
+    virtual void      SetValue(const wxString& rsValue);
 
     //
     // Clipboard operations
@@ -131,14 +131,6 @@
                                        ,WXWPARAM wParam
                                        ,WXLPARAM lParam
                                       );
-
-protected:
-    virtual void        DoSetSize( int nX
-                                  ,int nY
-                                  ,int nWidth
-                                  ,int nHeight
-                                  ,int nSizeFlags = wxSIZE_AUTO
-                                 );
 private:
     DECLARE_DYNAMIC_CLASS(wxComboBox)
 }; // end of CLASS wxComboBox
Index: samples/controls/controls.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/controls/controls.cpp,v
retrieving revision 1.245
diff -u -r1.245 controls.cpp
--- samples/controls/controls.cpp	2006/05/23 20:32:00	1.245
+++ samples/controls/controls.cpp	2006/06/16 09:44:27
@@ -1377,15 +1387,19 @@
 
 void MyPanel::OnComboTextChanged(wxCommandEvent& event)
 {
-    wxLogMessage(wxT("EVT_TEXT for the combobox: \"%s\" (event) or \"%s\" (control)."),
-                 event.GetString().c_str(),
-                 m_combo->GetValue().c_str());
+    if (m_combo)
+        wxLogMessage(wxT("EVT_TEXT for the combobox: \"%s\" (event) or \"%s\" (control)."),
+                     event.GetString().c_str(),
+                     m_combo->GetValue().c_str());
 }
 
 void MyPanel::OnComboTextEnter(wxCommandEvent& WXUNUSED(event))
 {
-    wxLogMessage(_T("Enter pressed in the combobox: value is '%s'."),
-                 m_combo->GetValue().c_str());
+    if (m_combo)
+        wxLogMessage(_T("Enter pressed in the combobox: value is '%s'."),
+                     m_combo->GetValue().c_str());
 }
 
 void MyPanel::OnComboButtons( wxCommandEvent &event )
Index: src/os2/choice.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/choice.cpp,v
retrieving revision 1.37
diff -u -r1.37 choice.cpp
--- src/os2/choice.cpp	2006/05/30 07:34:24	1.37
+++ src/os2/choice.cpp	2006/06/16 09:45:44
@@ -100,6 +100,14 @@
             ,rSize.x
             ,rSize.y
            );
+
+    // Set height to use with sizers i.e. without the dropdown listbox
+    wxFont vFont = GetFont();
+    int nCx,nCy;
+    wxGetCharSize( GetHWND(), &nCx, &nCy, &vFont );
+    int nEditHeight = EDIT_HEIGHT_FROM_CHAR_HEIGHT(nCy);
+    SetBestFittingSize(wxSize(-1,nEditHeight));
+
     return true;
 } // end of wxChoice::Create
 
@@ -253,7 +261,7 @@
     nLen = (size_t)LONGFROMMR(::WinSendMsg(GetHwnd(), LM_QUERYITEMTEXTLENGTH, (MPARAM)n, (MPARAM)0));
     if (nLen != LIT_ERROR && nLen > 0)
     {
-        zBuf = new wxChar[nLen + 1];
+        zBuf = new wxChar[++nLen];
         ::WinSendMsg( GetHwnd()
                      ,LM_QUERYITEMTEXT
                      ,MPFROM2SHORT((SHORT)n, (SHORT)nLen)
@@ -416,3 +424,4 @@
 } // end of wxChoice::Free
 
 #endif // wxUSE_CHOICE
+
Index: src/os2/combobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/combobox.cpp,v
retrieving revision 1.30
diff -u -r1.30 combobox.cpp
--- src/os2/combobox.cpp	2006/06/07 22:01:05	1.30
+++ src/os2/combobox.cpp	2006/06/16 09:45:45
@@ -39,17 +39,17 @@
 
 bool wxComboBox::OS2Command( WXUINT uParam, WXWORD WXUNUSED(wId) )
 {
-    long lSel = -1L;
-    wxString sValue;
+long        lSel;
+wxString    sValue;
 
     switch (uParam)
     {
         case CBN_LBSELECT:
-            if (GetSelection() > -1)
+            if ((lSel=GetSelection()) > -1)
             {
                 wxCommandEvent vEvent( wxEVT_COMMAND_COMBOBOX_SELECTED, GetId() );
 
-                vEvent.SetInt(GetSelection());
+                vEvent.SetInt(lSel);
                 vEvent.SetEventObject(this);
                 vEvent.SetString(GetStringSelection());
 
@@ -61,11 +61,11 @@
             {
                 wxCommandEvent vEvent( wxEVT_COMMAND_TEXT_UPDATED, GetId() );
 
-                if (lSel == -1L)
+                if (GetSelection() == -1L)
                     sValue = GetValue();
                 else
-                    SetValue(sValue);
-                vEvent.SetString(GetValue());
+                    sValue = GetStringSelection();
+                vEvent.SetString(sValue);
                 vEvent.SetEventObject(this);
                 ProcessCommand(vEvent);
             }
@@ -160,6 +160,14 @@
             ,rSize.x
             ,rSize.y
            );
+
+    // Set height to use with sizers i.e. without the dropdown listbox
+    wxFont vFont = GetFont();
+    int nCx,nCy;
+    wxGetCharSize( GetHWND(), &nCx, &nCy, &vFont );
+    int nEditHeight = EDIT_HEIGHT_FROM_CHAR_HEIGHT(nCy);
+    SetBestFittingSize(wxSize(-1,nEditHeight));
+
     if (!rsValue.empty())
     {
         SetValue(rsValue);
@@ -172,9 +180,12 @@
     return true;
 } // end of wxComboBox::Create
 
-void wxComboBox::SetValue(
-  const wxString&                   rsValue
-)
+wxString wxComboBox::GetValue() const
+{
+    return wxGetWindowText(GetHwnd());
+}
+
+void wxComboBox::SetValue( const wxString& rsValue )
 {
     if ( HasFlag(wxCB_READONLY) )
         SetStringSelection(rsValue);
@@ -338,22 +347,6 @@
                 );
 } // end of wxComboBox::SetSelection
 
-void wxComboBox::DoSetSize(
-  int                               nX
-, int                               nY
-, int                               nWidth
-, int                               nHeight
-, int                               nSizeFlags
-)
-{
-    wxControl::DoSetSize( nX
-                         ,nY
-                         ,nWidth
-                         ,nHeight
-                         ,nSizeFlags
-                        );
-} // end of wxComboBox::DoSetSize
-
 bool wxComboBox::ProcessEditMsg(
   WXUINT                            uMsg
 , WXWPARAM                          wParam
@@ -429,3 +422,4 @@
 
 #endif
  // wxUSE_COMBOBOX
+

 	  	 
