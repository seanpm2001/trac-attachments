--- numctrl.py.svn	2011-01-25 19:03:01.411627791 +0100
+++ numctrl.py	2011-01-25 19:17:02.567630466 +0100
@@ -407,7 +407,7 @@
 MAXINT = maxint     # (constants should be in upper case)
 MININT = -maxint-1
 
-from wx.tools.dbg import Logger
+##from wx.tools.dbg import Logger
 from wx.lib.masked import MaskedEditMixin, Field, BaseMaskedTextCtrl
 ##dbg = Logger()
 ##dbg(enable=1)
@@ -1149,7 +1149,7 @@
 
 ##        dbg('value:"%s"' % value, 'self._useParens:', self._useParens)
         if self._fractionWidth:
-            adjvalue = self._adjustFloat(self._GetNumValue(value).replace('.',self._decimalChar))
+            adjvalue = self._adjustFloat(self._GetNumValue(value).replace('.', self._decimalChar))
         else:
             adjvalue = self._adjustInt(self._GetNumValue(value))
 ##        dbg('adjusted value: "%s"' % adjvalue)
@@ -1670,14 +1670,14 @@
                     return int( value )
                 except ValueError:
                     try:
-##                       dbg(indent=0)
-                       return long( value )
+##                        dbg(indent=0)
+                        return long( value )
                     except ValueError:
-##                       dbg("couldn't convert to long; returning None")
-                       return None
+##                        dbg("couldn't convert to long; returning None")
+                        return None
 
                     else:
-                       raise
+                        raise
                 else:
 ##                    dbg('exception occurred; returning None')
                     return None
@@ -1746,7 +1746,7 @@
         self._SetSelection(orig_sel_start, orig_sel_to)
         if not just_return_value and new_text is not None:
             if new_text != self._GetValue():
-                    self.modified = True
+                self.modified = True
             if new_text == '':
                 self.ClearValue()
             else:
@@ -1840,9 +1840,9 @@
             style = wx.DEFAULT_DIALOG_STYLE ):
             wx.Dialog.__init__(self, parent, id, title, pos, size, style)
 
-            self.int_ctrl = NumCtrl(self, wx.NewId(), size=(55,20))
+            self.int_ctrl = NumCtrl(self, wx.NewId(), size=(55, 20))
             self.OK = wx.Button( self, wx.ID_OK, "OK")
-            self.Cancel = wx.Button( self, wx.ID_CANCEL, "Cancel")
+            self.Cancel = wx.Button(self, wx.ID_CANCEL, "Cancel")
 
             vs = wx.BoxSizer( wx.VERTICAL )
             vs.Add( self.int_ctrl, 0, wx.ALIGN_CENTRE|wx.ALL, 5 )
@@ -1863,7 +1863,7 @@
     class TestApp(wx.App):
         def OnInit(self):
             try:
-                self.frame = wx.Frame(None, -1, "Test", (20,20), (120,100)  )
+                self.frame = wx.Frame(None, -1, "Test", (20, 20), (120, 100)  )
                 self.panel = wx.Panel(self.frame, -1)
                 button = wx.Button(self.panel, -1, "Push Me", (20, 20))
                 self.Bind(wx.EVT_BUTTON, self.OnClick, button)
@@ -1876,7 +1876,7 @@
             dlg = myDialog(self.panel, -1, "test NumCtrl")
             dlg.int_ctrl.SetValue(501)
             dlg.int_ctrl.SetInsertionPoint(1)
-            dlg.int_ctrl.SetSelection(1,2)
+            dlg.int_ctrl.SetSelection(1, 2)
             rc = dlg.ShowModal()
             print 'final value', dlg.int_ctrl.GetValue()
             del dlg
@@ -1892,7 +1892,7 @@
     except:
         traceback.print_exc()
 
-__i=0
+__i = 0
 ## To-Do's:
 ## =============================##
 ##   1. Add support for printf-style format specification.
