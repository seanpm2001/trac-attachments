? art/Thumbs.db
? build/rebuild-makefiles.sh
? build/msw/builddoc.bat
? build/msw/buildwx_debug.bat
? build/msw/buildwx_debug.log
? build/msw/buildwx_release.bat
? build/msw/buildwx_udebug.bat
? build/msw/buildwx_urelease.bat
? build/msw/clean.bat
? build/msw/wx
? contrib/build/animate/buildwx_debug.bat
? contrib/build/animate/buildwx_debug.log
? contrib/build/animate/buildwx_release.bat
? contrib/build/animate/buildwx_udebug.bat
? contrib/build/animate/buildwx_urelease.bat
? contrib/build/animate/clean.bat
? demos/bombs/Thumbs.db
? demos/dbbrowse/bitmaps/Thumbs.db
? demos/dbbrowse/help.png/Thumbs.db
? demos/poem/Thumbs.db
? include/wx/setup.h
? lib/gcc_dll
? samples/Thumbs.db
Index: docs/latex/wx/text.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/docs/latex/wx/text.tex,v
retrieving revision 1.76
diff -u -r1.76 text.tex
--- docs/latex/wx/text.tex	2006/05/06 16:16:22	1.76
+++ docs/latex/wx/text.tex	2006/06/11 19:06:00
@@ -205,7 +205,7 @@
 
 \func{static wxTextAttr}{Merge}{\param{const wxTextAttr\&}{ base}, \param{const wxTextAttr\&}{ overlay}}
 
-Creates a new {\tt wxTextAttr} which is a merge of \arg{base} and 
+Creates a new {\tt wxTextAttr} which is a merge of \arg{base} and
 \arg{overlay}. Properties defined in \arg{overlay} take precedence over those
 in \arg{base}. Properties undefined/invalid in both are undefined in the
 result.
@@ -875,6 +875,18 @@
 \wxheading{See also}
 
 \helpref{MarkDirty}{wxtextctrlmarkdirty}
+
+
+\membersection{wxTextCtrl::SetModified}\label{wxtextctrlsetmodified}
+
+\constfunc{void}{SetModified}{\bool}
+
+Set the control modified or not.
+
+\wxheading{See also}
+
+\helpref{MarkDirty}{wxtextctrlmarkdirty}
+\helpref{DiscardEdits}{wxtextctrldiscardedits}
 
 
 \membersection{wxTextCtrl::IsMultiLine}\label{wxtextctrlismultiline}
Index: docs/latex/wx/treectrl.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/docs/latex/wx/treectrl.tex,v
retrieving revision 1.69
diff -u -r1.69 treectrl.tex
--- docs/latex/wx/treectrl.tex	2006/05/18 09:35:25	1.69
+++ docs/latex/wx/treectrl.tex	2006/05/31 16:52:18
@@ -331,6 +331,20 @@
 Expands the given item.
 
 
+\membersection{wxTreeCtrl::ExpandAllChilds}\label{wxtreectrlexpandallchilds}
+
+\func{void}{ExpandAllChilds}{\param{const wxTreeItemId\&}{ item}}
+
+Expands the given item and all its childs and grandchilds.
+
+
+\membersection{wxTreeCtrl::ExpandAll}\label{wxtreectrlexpandall}
+
+\func{void}{Expand}{}
+
+Expands all items in the tree.
+
+
 \membersection{wxTreeCtrl::GetBoundingRect}\label{wxtreectrlgetitemrect}
 
 \constfunc{bool}{GetBoundingRect}{\param{const wxTreeItemId\&}{ item}, \param{wxRect\& }{rect}, \param{bool }{textOnly = {\tt false}}}
Index: include/wx/textctrl.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/textctrl.h,v
retrieving revision 1.80
diff -u -r1.80 textctrl.h
--- include/wx/textctrl.h	2006/05/06 16:16:19	1.80
+++ include/wx/textctrl.h	2006/06/11 19:06:34
@@ -331,6 +331,7 @@
     // sets/clears the dirty flag
     virtual void MarkDirty() = 0;
     virtual void DiscardEdits() = 0;
+    void SetModified (bool modified);
 
     // set the max number of characters which may be entered in a single line
     // text control
Index: include/wx/treectrl.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/treectrl.h,v
retrieving revision 1.42
diff -u -r1.42 treectrl.h
--- include/wx/treectrl.h	2006/05/18 09:33:13	1.42
+++ include/wx/treectrl.h	2006/05/31 16:23:02
@@ -287,6 +287,10 @@
 
         // expand this item
     virtual void Expand(const wxTreeItemId& item) = 0;
+        // expand the item and all its childs and thats childs
+    void ExpandAllChilds(const wxTreeItemId& item);
+        // expand all items
+    void ExpandAll();
         // collapse the item without removing its children
     virtual void Collapse(const wxTreeItemId& item) = 0;
         // collapse the item and remove all children
Index: src/common/textcmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/textcmn.cpp,v
retrieving revision 1.46
diff -u -r1.46 textcmn.cpp
--- src/common/textcmn.cpp	2006/04/27 12:46:50	1.46
+++ src/common/textcmn.cpp	2006/06/11 18:10:44
@@ -154,6 +154,14 @@
     m_flags = attr.m_flags;
 }
 
+// wrapper for MarkDirty() and DiscardEdits()
+void wxTextCtrlBase::SetModified (bool modified)
+{
+    if (modified)
+        MarkDirty();
+    else
+        DiscardEdits();
+}
 
 // apply styling to text range
 bool wxTextCtrlBase::SetStyle(long WXUNUSED(start), long WXUNUSED(end),
Index: src/common/treebase.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/treebase.cpp,v
retrieving revision 1.24
diff -u -r1.24 treebase.cpp
--- src/common/treebase.cpp	2006/05/18 09:33:17	1.24
+++ src/common/treebase.cpp	2006/05/31 16:27:30
@@ -95,7 +95,7 @@
 static void wxGetBestTreeSize(const wxTreeCtrlBase* treeCtrl, const wxTreeItemId& id, wxSize& size)
 {
     wxRect rect;
-    
+
     if ( treeCtrl->GetBoundingRect(id, rect, true) )
     {
         if ( size.x < rect.x + rect.width )
@@ -120,7 +120,7 @@
     // this doesn't really compute the total bounding rectangle of all items
     // but a not too bad guess of it which has the advantage of not having to
     // examine all (potentially hundreds or thousands) items in the control
-    
+
     if (GetQuickBestSize())
     {
         for ( wxTreeItemId item = GetRootItem();
@@ -151,6 +151,26 @@
         CacheBestSize(size);
 
     return size;
+}
+
+void wxTreeCtrlBase::ExpandAll()
+{
+    ExpandAllChilds(GetRootItem());
+}
+
+void wxTreeCtrlBase::ExpandAllChilds(const wxTreeItemId& item)
+{
+    wxTreeItemId        idCurr;
+    wxTreeItemIdValue   cookie;
+
+    for (idCurr = GetFirstChild(item, cookie);
+         idCurr.IsOk();
+         idCurr = GetNextChild(item, cookie))
+    {
+        ExpandAllChilds(idCurr);
+    }
+
+    Expand(item);
 }
 
 #endif // wxUSE_TREECTRL

 	  	 
