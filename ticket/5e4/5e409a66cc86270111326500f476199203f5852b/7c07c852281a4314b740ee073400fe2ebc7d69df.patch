diff -ur wxWidgets-2.7.2.old/src/generic/listctrl.cpp wxWidgets-2.7.2/src/generic/listctrl.cpp
--- wxWidgets-2.7.2.old/src/generic/listctrl.cpp	2006-11-07 12:17:44.000000000 -0200
+++ wxWidgets-2.7.2/src/generic/listctrl.cpp	2006-11-10 17:24:12.000000000 -0200
@@ -687,8 +687,11 @@
 
     // send out a wxListEvent
     void SendNotify( size_t line,
-                     wxEventType command,
-                     const wxPoint& point = wxDefaultPosition );
+                     wxEventType command, 
+                     const wxPoint& point = wxDefaultPosition,
+		     // If the item is deleted, we should pass its associated
+		     // data to the event.
+		     const long *item_data=NULL);
 
     // override base class virtual to reset m_lineHeight when the font changes
     virtual bool SetFont(const wxFont& font)
@@ -2748,10 +2751,12 @@
 
 void wxListMainWindow::SendNotify( size_t line,
                                    wxEventType command,
-                                   const wxPoint& point )
+                                   const wxPoint& point,
+				   const long *item_data)
 {
     wxListEvent le( command, GetParent()->GetId() );
     le.SetEventObject( GetParent() );
+    
     le.m_itemIndex = line;
 
     // set only for events which have position
@@ -2762,11 +2767,17 @@
     // program has it anyhow and if we did it would result in accessing all
     // the lines, even those which are not visible now and this is precisely
     // what we're trying to avoid
-    if ( !IsVirtual() && (command != wxEVT_COMMAND_LIST_DELETE_ITEM) )
+    if ( !IsVirtual() )
     {
         if ( line != (size_t)-1 )
         {
-            GetLine(line)->GetItem( 0, le.m_item );
+	    if(command != wxEVT_COMMAND_LIST_DELETE_ITEM) 
+            	GetLine(line)->GetItem( 0, le.m_item );
+	    else
+	    {
+	    	wxASSERT_MSG(item_data != NULL, "item_data must be set when sending DELETE_ITEM notification");
+		le.m_item.SetData(*item_data);
+	    }
         }
         //else: this happens for wxEVT_COMMAND_LIST_ITEM_FOCUSED event
     }
@@ -4242,6 +4253,11 @@
         if ( m_current != index || m_current == count - 1 )
             m_current--;
     }
+ 
+    // We must pass the item's data to the user, but when we get to
+    // SendNotify the item will already be deleted. Let's try to save
+    // the data here before deleting the item.
+    long item_data=0;
 
     if ( InReportView() )
     {
@@ -4259,6 +4275,9 @@
             itemData = n->GetData();
             itemData->GetItem(item);
 
+	    if(i == 0)
+	    	item_data = item.GetData();
+
             itemWidth = GetItemWidthWithImage(&item);
 
             if (itemWidth >= m_aColWidths.Item(i)->nMaxWidth)
@@ -4267,6 +4286,16 @@
 
         ResetVisibleLinesRange();
     }
+    // don't try to get the line info for virtual list controls: the main
+    // program has it anyhow and if we did it would result in accessing all
+    // the lines, even those which are not visible now and this is precisely
+    // what we're trying to avoid
+    else if (!IsVirtual())
+    {
+    	wxListItem item;
+        GetLine(index)->GetItem( 0, item);
+	item_data = item.GetData();
+    }
 
     if ( IsVirtual() )
     {
@@ -4281,7 +4310,7 @@
     // we need to refresh the (vert) scrollbar as the number of items changed
     m_dirty = true;
 
-    SendNotify( index, wxEVT_COMMAND_LIST_DELETE_ITEM );
+    SendNotify( index, wxEVT_COMMAND_LIST_DELETE_ITEM, wxDefaultPosition, &item_data );
 
     RefreshAfter(index);
 }

 	  	 
