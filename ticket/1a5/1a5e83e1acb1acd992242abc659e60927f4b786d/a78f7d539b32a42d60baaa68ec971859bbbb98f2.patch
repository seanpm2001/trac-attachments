diff --git a/src/msw/menu.cpp b/src/msw/menu.cpp
index 3101620..17e9b69 100644
--- a/src/msw/menu.cpp
+++ b/src/msw/menu.cpp
@@ -167,6 +167,51 @@ public:
         return true;
     }
 
+    // Reindex ranges of existing radio groups
+    // if menu item at given position was removed.
+    // Removed item can be the item of any kind, not only
+    // the radio button belonging to the radio group.
+    // Returns true if this item was found in the existing radio group.
+    bool UpdateOnRemoveItem(int pos)
+    {
+        bool inExistingGroup = false;
+        // Pointer to the empty group which could left after removal.
+        Ranges::iterator itEmptyGroup = m_ranges.end(); 
+
+        for ( Ranges::iterator it = m_ranges.begin();
+              it != m_ranges.end();
+              ++it )
+        {
+            Range& r = *it;
+
+            if ( pos < r.start )
+            {
+                // Removed item was positioned before this range, update its indices.
+                r.start--;
+                r.end--;
+            }
+            else if ( pos <= r.end )
+            {
+                // Removed item belongs to this radio group
+                // (it is a radio button), update index of its end.
+                r.end--;
+                // Check if empty group left after removal.
+                // If so, it will be deleted later on.
+                if( r.end < r.start )
+                    itEmptyGroup = it;
+
+                inExistingGroup = true;
+            }
+            //else: Removed item was positioned after this range, nothing to do for it.
+        }
+
+        // Remove empty group from the list.
+        if( itEmptyGroup != m_ranges.end() )
+            m_ranges.erase(itEmptyGroup);
+
+        return inExistingGroup;
+    }
+
 private:
     // Contains the inclusive positions of the range start and end.
     struct Range
@@ -752,6 +797,15 @@ wxMenuItem *wxMenu::DoRemove(wxMenuItem *item)
     //else: this item doesn't have an accel, nothing to do
 #endif // wxUSE_ACCEL
 
+    // Update indices of radio groups.
+    if ( m_radioData )
+    {
+        bool inExistingGroup = m_radioData->UpdateOnRemoveItem(pos);
+
+        wxASSERT_MSG( !inExistingGroup || (inExistingGroup && item->GetKind() == wxITEM_RADIO), 
+                  wxT("Removed item is not a radio button but it belonged to the radio group") );
+    }
+
     // remove the item from the menu
     if ( !::RemoveMenu(GetHmenu(), (UINT)pos, MF_BYPOSITION) )
     {
