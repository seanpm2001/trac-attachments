Only in wxWindows: Debug
Only in modified/docs/gtk: COPYING.LIB
Only in modified/docs/wine: COPYING.LIB
Only in wxWindows/include: htmlhelp.h
Only in wxWindows/include/wx/msw: setup.h
diff -rbu2 wxWindows/include/wx/process.h modified/include/wx/process.h
--- wxWindows/include/wx/process.h	Wed Mar 06 08:59:01 2002
+++ modified/include/wx/process.h	Wed Mar 06 09:10:48 2002
@@ -69,5 +69,6 @@
 
     // kill the process with the given PID
-    static wxKillError Kill(int pid, wxSignal sig = wxSIGTERM);
+    static wxKillError Kill(int pid, wxSignal sig = wxSIGTERM,
+                            bool killChildren = FALSE);
 
     // test if the given process exists
diff -rbu2 wxWindows/include/wx/utils.h modified/include/wx/utils.h
--- wxWindows/include/wx/utils.h	Fri Feb 22 13:18:35 2002
+++ modified/include/wx/utils.h	Wed Mar 06 09:00:25 2002
@@ -151,7 +151,9 @@
 // Execute another program. Returns 0 if there was an error, a PID otherwise.
 WXDLLEXPORT long wxExecute(wxChar **argv, bool sync = FALSE,
-                           wxProcess *process = (wxProcess *) NULL);
+                           wxProcess *process = (wxProcess *) NULL,
+                           bool setupChildrenKill = FALSE);
 WXDLLEXPORT long wxExecute(const wxString& command, bool sync = FALSE,
-                           wxProcess *process = (wxProcess *) NULL);
+                           wxProcess *process = (wxProcess *) NULL,
+                           bool setupChildrenKill = FALSE);
 
 // execute the command capturing its output into an array line by line
@@ -202,5 +204,6 @@
 WXDLLEXPORT int wxKill(long pid,
                        wxSignal sig = wxSIGTERM,
-                       wxKillError *rc = NULL);
+                       wxKillError *rc = NULL,
+	               bool killChildren = FALSE);
 
 // Execute a command in an interactive shell window (always synchronously)
Only in modified/lib/bcc16: ctl3dv2.lib
Only in wxWindows/lib: jpegd.lib
Only in modified/lib/msvc15: ctl3dv2.lib
Only in wxWindows/lib: mswd
Only in wxWindows/lib: pngd.lib
Only in wxWindows/lib: regexd.lib
Only in wxWindows/lib: tiffd.lib
Only in modified/lib/watcom: odbc32.lib
Only in wxWindows/lib: wxmswd.lib
Only in wxWindows/lib: zlibd.lib
Only in wxWindows/src/common: Debug
Only in wxWindows/src/common: lex_yy.c
diff -rbu2 wxWindows/src/common/process.cpp modified/src/common/process.cpp
--- wxWindows/src/common/process.cpp	Fri Jun 15 21:59:06 2001
+++ modified/src/common/process.cpp	Tue Mar 05 10:57:04 2002
@@ -113,8 +113,8 @@
 
 /* static */
-wxKillError wxProcess::Kill(int pid, wxSignal sig)
+wxKillError wxProcess::Kill(int pid, wxSignal sig, bool killChildren)
 {
     wxKillError rc;
-    (void)wxKill(pid, sig, &rc);
+    (void)wxKill(pid, sig, &rc, killChildren);
 
     return rc;
Only in wxWindows/src/common: y_tab.c
Only in wxWindows/src/generic: Debug
Only in wxWindows/src/html: Debug
Only in wxWindows/src/jpeg: Debug
Only in wxWindows/src/jpeg: vc60.pdb
Only in modified/src/mac/macsock: sock_PPC.lib
diff -rbu2 wxWindows/src/mac/utils.cpp modified/src/mac/utils.cpp
--- wxWindows/src/mac/utils.cpp	Fri Feb 22 13:18:35 2002
+++ modified/src/mac/utils.cpp	Tue Mar 05 11:24:40 2002
@@ -112,5 +112,5 @@
 }
 
-int wxKill(long pid, wxSignal sig , wxKillError *rc )
+int wxKill(long pid, wxSignal sig , wxKillError *rc , bool killChildren )
 {
     // TODO
diff -rbu2 wxWindows/src/mac/utilsexc.cpp modified/src/mac/utilsexc.cpp
--- wxWindows/src/mac/utilsexc.cpp	Sun Jul 15 18:12:31 2001
+++ modified/src/mac/utilsexc.cpp	Wed Mar 06 09:07:29 2002
@@ -26,5 +26,6 @@
 #define wxEXECUTE_WIN_MESSAGE 10000
 
-long wxExecute(const wxString& command, bool sync, wxProcess *handler)
+long wxExecute(const wxString& command, bool sync, wxProcess *handler,
+               bool setupChildrenKill)
 {
     // TODO
diff -rbu2 wxWindows/src/makevc.env modified/src/makevc.env
--- wxWindows/src/makevc.env	Wed Mar 06 10:16:21 2002
+++ modified/src/makevc.env	Tue Jan 15 15:32:22 2002
@@ -261,6 +261,4 @@
 !endif
 
-CPPFLAGS = $(CPPFLAGS) /GR
-
 DUMMYOBJ=$(WXDIR)\$D\$(DUMMY).obj
 
diff -rbu2 wxWindows/src/mgl/utils.cpp modified/src/mgl/utils.cpp
--- wxWindows/src/mgl/utils.cpp	Thu Feb 14 20:07:52 2002
+++ modified/src/mgl/utils.cpp	Tue Mar 05 11:24:40 2002
@@ -141,5 +141,5 @@
 }
 
-int wxKill(long WXUNUSED(pid), wxSignal WXUNUSED(sig), wxKillError *WXUNUSED(rc))
+int wxKill(long WXUNUSED(pid), wxSignal WXUNUSED(sig), wxKillError *WXUNUSED(rc), bool killChildren)
 {
     wxFAIL_MSG( wxT("wxKill not implemented under MS-DOS!") );
@@ -147,5 +147,5 @@
 }
 
-long wxExecute(const wxString& WXUNUSED(command), bool WXUNUSED(sync), wxProcess *WXUNUSED(process))
+long wxExecute(const wxString& WXUNUSED(command), bool WXUNUSED(sync), wxProcess *WXUNUSED(process), bool setupChildrenKill)
 {
     wxFAIL_MSG( wxT("wxExecute not implemented under MS-DOS!") );
@@ -153,5 +153,5 @@
 }
 
-long wxExecute(wxChar **WXUNUSED(argv), bool WXUNUSED(sync), wxProcess *WXUNUSED(process))
+long wxExecute(wxChar **WXUNUSED(argv), bool WXUNUSED(sync), wxProcess *WXUNUSED(process), bool setupChildrenKill)
 {
     wxFAIL_MSG( wxT("wxExecute not implemented under MS-DOS!") );
Only in wxWindows/src/msw: Debug
Only in wxWindows/src/msw/ole: Debug
diff -rbu2 wxWindows/src/msw/utils.cpp modified/src/msw/utils.cpp
--- wxWindows/src/msw/utils.cpp	Fri Feb 22 13:18:36 2002
+++ modified/src/msw/utils.cpp	Wed Mar 06 09:18:50 2002
@@ -654,7 +654,57 @@
 #endif // __WIN32__
 
-int wxKill(long pid, wxSignal sig, wxKillError *krc)
+//--------------------------------------------------------------------------
+
+#ifdef __WIN32__
+
+#include <tlhelp32.h>
+
+static int wxKillAllChildren( long pid, wxSignal sig , wxKillError *krc )
+{
+    // Take a snapshot of all processes in the system.  
+    HANDLE hProcessSnap = CreateToolhelp32Snapshot( TH32CS_SNAPPROCESS, 0 );
+    if ( hProcessSnap == INVALID_HANDLE_VALUE ) {
+        if ( krc )
+          *krc = wxKILL_ERROR;
+        return -1;
+    }
+
+    //Fill in the size of the structure before using it.
+    PROCESSENTRY32 pe = {0};
+    pe.dwSize = sizeof(PROCESSENTRY32);
+    
+    // Walk the snapshot of the processes, and for each process,
+    // kill it if its parent is pid.
+    if ( !Process32First( hProcessSnap, &pe )) {
+        // Can't get first process.
+        if (krc)
+            *krc = wxKILL_ERROR;
+        CloseHandle (hProcessSnap);
+        return -1;
+    }
+    
+    do
+    {
+        if ( pe.th32ParentProcessID == (DWORD) pid )
+        {
+            if ( wxKill( pe.th32ProcessID, sig, krc ))
+                return -1;
+        }
+    } while ( Process32Next ( hProcessSnap, &pe ));
+    
+    
+    return 0;
+}
+#endif
+
+//--------------------------------------------------------------------------
+
+int wxKill(long pid, wxSignal sig, wxKillError *krc, bool killChildren)
 {
 #ifdef __WIN32__
+    if ( killChildren )
+        // Only wxSIGKILL will actually kill the processes under MSW.
+        sig = wxSIGKILL;
+
     // get the process handle to operate on
     HANDLE hProcess = ::OpenProcess(SYNCHRONIZE |
@@ -806,4 +856,7 @@
         {
             // killed => success
+            if ( killChildren )
+                return wxKillAllChildren( pid, sig, krc );
+
             return 0;
         }
diff -rbu2 wxWindows/src/msw/utilsexc.cpp modified/src/msw/utilsexc.cpp
--- wxWindows/src/msw/utilsexc.cpp	Wed Oct 17 18:25:52 2001
+++ modified/src/msw/utilsexc.cpp	Wed Mar 06 09:10:14 2002
@@ -361,5 +361,6 @@
 #endif // wxUSE_IPC
 
-long wxExecute(const wxString& cmd, bool sync, wxProcess *handler)
+long wxExecute(const wxString& cmd, bool sync, wxProcess *handler, 
+               xbool /*setupChildrenKill not applicable to MSW*/)
 {
     wxCHECK_MSG( !!cmd, 0, wxT("empty command in wxExecute") );
@@ -757,5 +758,6 @@
 }
 
-long wxExecute(char **argv, bool sync, wxProcess *handler)
+long wxExecute(char **argv, bool sync, wxProcess *handler,
+               bool  /*setupChildrenKill not applicable to MSW*/)
 {
     wxString command;
Only in wxWindows/src/msw: vc60.pdb
diff -rbu2 wxWindows/src/os2/UTILSEXC.CPP modified/src/os2/UTILSEXC.CPP
--- wxWindows/src/os2/UTILSEXC.CPP	Wed Jan 09 18:21:15 2002
+++ modified/src/os2/UTILSEXC.CPP	Tue Mar 05 10:51:41 2002
@@ -135,4 +135,5 @@
 , bool                              bSync
 , wxProcess*                        pHandler
+, bool                              /*setupChildrenKill not applicable to os2*/
 )
 {
@@ -228,4 +229,5 @@
 , bool                              bSync
 , wxProcess*                        pHandler
+, bool                              /*setupChildrenKill not applicable to os2 */
 )
 {
Only in wxWindows/src/png: Debug
Only in wxWindows/src/png: vc60.pdb
Only in wxWindows/src/regex: Debug
Only in wxWindows/src/regex: vc60.pdb
Only in wxWindows/src/tiff: Debug
Only in wxWindows/src/tiff: vc60.pdb
diff -rbu2 wxWindows/src/unix/utilsunx.cpp modified/src/unix/utilsunx.cpp
--- wxWindows/src/unix/utilsunx.cpp	Fri Feb 22 13:18:36 2002
+++ modified/src/unix/utilsunx.cpp	Wed Mar 06 09:24:05 2002
@@ -151,5 +151,6 @@
 // ----------------------------------------------------------------------------
 
-int wxKill(long pid, wxSignal sig, wxKillError *rc)
+int wxKill(long pid, wxSignal sig, wxKillError *rc,
+           bool /* killChildren isn't implemented under Unix */)
 {
     int err = kill((pid_t)pid, (int)sig);
@@ -188,5 +189,6 @@
 #define WXEXECUTE_NARGS   127
 
-long wxExecute( const wxString& command, bool sync, wxProcess *process )
+long wxExecute(const wxString& command, bool sync, wxProcess *process,
+               bool setupChildrenKill)
 {
     wxCHECK_MSG( !command.IsEmpty(), 0, wxT("can't exec empty command") );
@@ -248,5 +250,5 @@
 
     // do execute the command
-    long lRc = wxExecute(argv, sync, process);
+    long lRc = wxExecute(argv, sync, process, setupChildrenKill);
 
     // clean up
@@ -521,5 +523,6 @@
 long wxExecute(wxChar **argv,
                bool sync,
-               wxProcess *process)
+               wxProcess *process,
+               bool setupChildrenKill)
 {
     // for the sync execution, we return -1 to indicate failure, but for async
@@ -651,4 +654,8 @@
                     close(fd);
             }
+            if ( setupChildrenKill )
+                // Set process group to child process' pid.  Then killing
+                // -pid will kill the process and all of its children.
+                setsid();
         }
 
@@ -757,5 +764,5 @@
             close(end_proc_detect[1]); // close writing side
 
-            return pid;
+            return setupChildrenKill ? -pid : pid;
         }
 #else // !wxUSE_GUI
Only in wxWindows/src/zlib: Debug

 	  	 
