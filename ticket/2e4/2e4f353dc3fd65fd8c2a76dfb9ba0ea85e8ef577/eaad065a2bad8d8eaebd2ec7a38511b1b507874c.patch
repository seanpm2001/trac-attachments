Index: src/common/mimecmn.cpp
===================================================================
--- src/common/mimecmn.cpp	(revision 76589)
+++ src/common/mimecmn.cpp	(working copy)
@@ -64,7 +64,7 @@
 // ----------------------------------------------------------------------------
 
 void
-wxMimeTypeCommands::AddOrReplaceVerb(const wxString& verb, const wxString& cmd)
+wxMimeTypeCommands::AddOrReplaceVerb(const wxString& verb, const wxString& cmd, bool defaultApp)
 {
     int n = m_verbs.Index(verb, false /* ignore case */);
     if ( n == wxNOT_FOUND )
@@ -72,7 +72,8 @@
         m_verbs.Add(verb);
         m_commands.Add(cmd);
     }
-    else
+    else if (defaultApp)    // only replace an existing entry if this is the 
+                            //default app (otherwise the default app can be overwritten)
     {
         m_commands[n] = cmd;
     }
Index: include/wx/mimetype.h
===================================================================
--- include/wx/mimetype.h	(revision 76589)
+++ include/wx/mimetype.h	(working copy)
@@ -83,7 +83,7 @@
     }
 
     // add a new verb with the command or replace the old value
-    void AddOrReplaceVerb(const wxString& verb, const wxString& cmd);
+    void AddOrReplaceVerb(const wxString& verb, const wxString& cmd, bool defaultApp = false);
     void Add(const wxString& s)
     {
         m_verbs.Add(s.BeforeFirst(wxT('=')));
Index: src/unix/mimetype.cpp
===================================================================
--- src/unix/mimetype.cpp	(revision 76589)
+++ src/unix/mimetype.cpp	(working copy)
@@ -115,7 +115,16 @@
         wxString sTmp = GetLine(i).AfterFirst(wxT('='));
         return sTmp;
     }
+    
+    wxString GetMimetype(size_t i)
+    {
+        if (i > GetLineCount() )
+            return wxEmptyString;
 
+        wxString sTmp = GetLine(i).BeforeFirst(wxT('='));
+        return sTmp;
+    }
+
 private:
     wxArrayString m_text;
     wxString m_fname;
@@ -130,10 +139,13 @@
 
 
 // Read a XDG *.desktop file of type 'Application'
-void wxMimeTypesManagerImpl::LoadXDGApp(const wxString& filename)
+void wxMimeTypesManagerImpl::LoadXDGApp(const wxString& filename, bool defaultApp, const wxString& appMimetype)
 {
-    wxLogTrace(TRACE_MIME, wxT("loading XDG file %s"), filename.c_str());
-
+    if (defaultApp)
+        wxLogTrace(TRACE_MIME, wxT("loading default XDG file %s for %s"), filename.c_str(), appMimetype.c_str());
+    else
+        wxLogTrace(TRACE_MIME, wxT("loading XDG file %s"), filename.c_str());
+    
     wxMimeTextFile file(filename);
     if ( !file.Open() )
         return;
@@ -203,7 +215,7 @@
         nIndex = m_aTypes.Index(mimetype);
         if(nIndex != wxNOT_FOUND) { // is this a known MIME type?
             wxMimeTypeCommands* entry = m_aEntries[nIndex];
-            entry->AddOrReplaceVerb(wxT("open"), sCmd);
+            entry->AddOrReplaceVerb(wxT("open"), sCmd, (appMimetype == mimetype));
         }
     }
 }
@@ -608,10 +620,11 @@
                         if (textfile.GetLine(i).Find(wxT("=")) != wxNOT_FOUND)
                         {
                             wxString desktopFile = textfile.GetCmd(i);
+                            wxString mimetype = textfile.GetMimetype(i);
 
                             if (deskTopFilesSeen.Index(desktopFile) == wxNOT_FOUND)
                             {
-                                deskTopFilesSeen.Add(desktopFile);
+                                // deskTopFilesSeen.Add(desktopFile);
                                 size_t j;
                                 for (j = 0; j < dirs.GetCount(); j++)
                                 {
@@ -621,7 +634,7 @@
                                     desktopPath += desktopFile;
 
                                     if (wxFileExists(desktopPath))
-                                        LoadXDGApp(desktopPath);
+                                        LoadXDGApp(desktopPath, true, mimetype); // this is the default app for this mimetype
                                 }
                             }
                         }
Index: include/wx/unix/mimetype.h
===================================================================
--- include/wx/unix/mimetype.h	(revision 76589)
+++ include/wx/unix/mimetype.h	(working copy)
@@ -79,7 +79,7 @@
     wxString GetCommand(const wxString &verb, size_t nIndex) const;
 
     // Read XDG *.desktop file
-    void LoadXDGApp(const wxString& filename);
+    void LoadXDGApp(const wxString& filename, bool defaultApp = false, const wxString& appMimetype = "");
     // Scan XDG directory
     void LoadXDGAppsFilesFromDir(const wxString& dirname);
 
