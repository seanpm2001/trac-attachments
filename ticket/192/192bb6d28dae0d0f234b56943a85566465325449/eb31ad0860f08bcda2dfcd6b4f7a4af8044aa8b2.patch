 src/aui/auibook.cpp | 52 +++++++++++++++++++++++++++++++---------------------
 1 file changed, 31 insertions(+), 21 deletions(-)

diff --git a/src/aui/auibook.cpp b/src/aui/auibook.cpp
index 7142617..0f9dc63 100644
--- a/src/aui/auibook.cpp
+++ b/src/aui/auibook.cpp
@@ -411,24 +411,31 @@ void wxAuiTabContainer::Render(wxDC* raw_dc, wxWindow* wnd)
     if (!raw_dc || !raw_dc->IsOk())
         return;
 
-    wxMemoryDC dc;
+    // set up the DC we're drawing on: if the window is already double buffered
+    // we do it directly on wxPaintDC, otherwise we allocate a backing store
+    // buffer and compose the drawing there and then blit it to screen all at
+    // once
+    wxDC *dc;
+    wxMemoryDC dcm(raw_dc);
+    wxBitmap bmp;
+    if (wnd->IsDoubleBuffered())
+    {
+        dc = raw_dc;
+    }
+    else // window is not double buffered by the system, do it ourselves
+    {
+        bmp.Create(m_rect.GetWidth(), m_rect.GetHeight(), dcm);
+        dcm.SelectObject(bmp);
+        dc = &dcm;
+    }
 
-    // use the same layout direction as the window DC uses to ensure that the
-    // text is rendered correctly
-    dc.SetLayoutDirection(raw_dc->GetLayoutDirection());
+    if (!dc->IsOk())
+        return;
 
-    wxBitmap bmp;
     size_t i;
     size_t page_count = m_pages.GetCount();
     size_t button_count = m_buttons.GetCount();
 
-    // create off-screen bitmap
-    bmp.Create(m_rect.GetWidth(), m_rect.GetHeight(),*raw_dc);
-    dc.SelectObject(bmp);
-
-    if (!dc.IsOk())
-        return;
-
     // find out if size of tabs is larger than can be
     // afforded on screen
     int total_width = 0;
@@ -447,7 +454,7 @@ void wxAuiTabContainer::Render(wxDC* raw_dc, wxWindow* wnd)
 
 
         int x_extent = 0;
-        wxSize size = m_art->GetTabSize(dc,
+        wxSize size = m_art->GetTabSize(*dc,
                             wnd,
                             page.caption,
                             page.bitmap,
@@ -521,7 +528,7 @@ void wxAuiTabContainer::Render(wxDC* raw_dc, wxWindow* wnd)
 
 
     // draw background
-    m_art->DrawBackground(dc, wnd, m_rect);
+    m_art->DrawBackground(*dc, wnd, m_rect);
 
     // draw buttons
     int left_buttons_width = 0;
@@ -542,7 +549,7 @@ void wxAuiTabContainer::Render(wxDC* raw_dc, wxWindow* wnd)
         button_rect.SetY(1);
         button_rect.SetWidth(offset);
 
-        m_art->DrawButton(dc,
+        m_art->DrawButton(*dc,
                           wnd,
                           button_rect,
                           button.id,
@@ -571,7 +578,7 @@ void wxAuiTabContainer::Render(wxDC* raw_dc, wxWindow* wnd)
 
         wxRect button_rect(offset, 1, 1000, m_rect.height);
 
-        m_art->DrawButton(dc,
+        m_art->DrawButton(*dc,
                           wnd,
                           button_rect,
                           button.id,
@@ -650,7 +657,7 @@ void wxAuiTabContainer::Render(wxDC* raw_dc, wxWindow* wnd)
         if (rect.width <= 0)
             break;
 
-        m_art->DrawTab(dc,
+        m_art->DrawTab(*dc,
                        wnd,
                        page,
                        rect,
@@ -685,7 +692,7 @@ void wxAuiTabContainer::Render(wxDC* raw_dc, wxWindow* wnd)
         wxAuiTabContainerButton& tab_button = m_tabCloseButtons.Item(active);
 
         rect.x = active_offset;
-        m_art->DrawTab(dc,
+        m_art->DrawTab(*dc,
                        wnd,
                        page,
                        active_rect,
@@ -696,9 +703,12 @@ void wxAuiTabContainer::Render(wxDC* raw_dc, wxWindow* wnd)
     }
 
 
-    raw_dc->Blit(m_rect.x, m_rect.y,
-                 m_rect.GetWidth(), m_rect.GetHeight(),
-                 &dc, 0, 0);
+    if ( dc != raw_dc )
+    {
+        raw_dc->Blit(m_rect.x, m_rect.y,
+                     m_rect.GetWidth(), m_rect.GetHeight(),
+                     dc, 0, 0);
+    }
 }
 
 // Is the tab visible?
