Index: setup.h.in
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/setup.h.in,v
retrieving revision 1.180
diff -u -r1.180 setup.h.in
--- setup.h.in	2005/04/15 18:34:33	1.180
+++ setup.h.in	2005/04/20 16:03:33
@@ -740,6 +740,9 @@
 /* Define if you have pthread_cancel */
 #undef HAVE_PTHREAD_CANCEL
 
+/* Define if you have pthread_attr_setstacksize */
+#undef HAVE_PTHREAD_ATTR_SETSTACKSIZE
+
 /* Define if you have sigaction() */
 #undef HAVE_SIGACTION
 
Index: configure.in
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/configure.in,v
retrieving revision 1.986
diff -u -r1.986 configure.in
--- configure.in	2005/04/16 22:08:43	1.986
+++ configure.in	2005/04/20 16:03:37
@@ -4455,26 +4455,8 @@
                     AC_DEFINE(HAVE_PTHREAD_CANCEL),
                     AC_MSG_WARN([wxThread::Kill() will not work properly]))
 
-      dnl we don't use pthread_cleanup_push/pop() any more in the code, but I
-      dnl the code here for now in case we need it again soon; otherwise it
-      dnl should be removed in a couple of months (VZ in Sep 2003)
-      dnl
-      dnl AC_CACHE_CHECK([for pthread_cleanup_push/pop], wx_cv_func_pthread_cleanup_push,
-      dnl [
-      dnl   AC_TRY_COMPILE([#include <pthread.h>],
-      dnl                [
-      dnl                   pthread_cleanup_push(NULL, NULL);
-      dnl                   pthread_cleanup_pop(0);
-      dnl                ], [
-      dnl                   wx_cv_func_pthread_cleanup_push=yes
-      dnl                ], [
-      dnl                   wx_cv_func_pthread_cleanup_push=no
-      dnl                ])
-      dnl ])
-      dnl 
-      dnl if test "$wx_cv_func_pthread_cleanup_push" = "yes"; then
-      dnl     AC_DEFINE(HAVE_THREAD_CLEANUP_FUNCTIONS)
-      dnl fi
+      AC_CHECK_FUNC(pthread_attr_setstacksize,
+                    AC_DEFINE(HAVE_PTHREAD_ATTR_SETSTACKSIZE))
 
       dnl mutexattr_t initialization is done in quite different ways on different
       dnl platforms, so check for a few things:
Index: src/unix/threadpsx.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/threadpsx.cpp,v
retrieving revision 1.80
diff -u -r1.80 threadpsx.cpp
--- src/unix/threadpsx.cpp	2005/03/17 09:10:35	1.80
+++ src/unix/threadpsx.cpp	2005/04/20 16:03:37
@@ -1062,7 +1062,7 @@
     m_isDetached = kind == wxTHREAD_DETACHED;
 }
 
-wxThreadError wxThread::Create(unsigned int WXUNUSED(stackSize))
+wxThreadError wxThread::Create(unsigned int stackSize)
 {
     if ( m_internal->GetState() != STATE_NEW )
     {
@@ -1073,6 +1073,11 @@
     // set up the thread attribute: right now, we only set thread priority
     pthread_attr_t attr;
     pthread_attr_init(&attr);
+
+#ifdef HAVE_PTHREAD_ATTR_SETSTACKSIZE
+    if (stackSize)
+      pthread_attr_setstacksize(&attr, stackSize);
+#endif
 
 #ifdef HAVE_THREAD_PRIORITY_FUNCTIONS
     int policy;
Index: docs/latex/wx/thread.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/thread.tex,v
retrieving revision 1.34
diff -u -r1.34 thread.tex
--- docs/latex/wx/thread.tex	2005/01/16 13:33:19	1.34
+++ docs/latex/wx/thread.tex	2005/04/20 16:03:38
@@ -84,7 +84,15 @@
 Creates a new thread. The thread object is created in the suspended state, and you
 should call \helpref{Run}{wxthreadrun} to start running it.  You may optionally
 specify the stack size to be allocated to it (Ignored on platforms that don't
-support setting it explicitly, eg. Unix).
+support setting it explicitly, eg. Unices without pthread_attr_setstacksize).
+If you do not specify the stack size, the system's default value is used.
+
+{\bf Warning:} It is a very bad idea to rely on the system's default value
+as this default varies from just a couple of kByte on some systems (BSD and
+OS/2 systems} to one or several MByte (Windows, Solaris, Linux). So, if you
+create either many threads or if one of your threads requires more than just
+a few kBytes of memory, you will have mysterious problems on some platforms
+but not on others.
 
 \wxheading{Return value}
 

 	  	 
