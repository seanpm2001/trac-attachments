--- wxMSW-2.8.3/src/common/imagpng.cpp	Mon Mar 19 13:24:54 2007
+++ wxWidgets-2.8.3/src/common/imagpng.cpp	Thu Apr 19 13:39:49 2007
@@ -63,6 +63,8 @@
     Transparency_Alpha
 };
 
+static const double METER_2_INCH = 39.3700787;
+
 // ----------------------------------------------------------------------------
 // local functions
 // ----------------------------------------------------------------------------
@@ -747,6 +749,63 @@
 
     if ( iBitDepth == 16 )
         iElements *= 2;
+
+	// image resolution
+
+    UINT32 resX, resY;
+	int nUnitType = PNG_RESOLUTION_UNKNOWN;
+
+    if ( image->HasOption(wxIMAGE_OPTION_RESOLUTIONX) &&
+         image->HasOption(wxIMAGE_OPTION_RESOLUTIONY) )
+    {
+        resX = (UINT32)image->GetOptionInt(wxIMAGE_OPTION_RESOLUTIONX);
+        resY = (UINT32)image->GetOptionInt(wxIMAGE_OPTION_RESOLUTIONY);
+    }
+    else if ( image->HasOption(wxIMAGE_OPTION_RESOLUTION) )
+    {
+        resX =
+        resY = (UINT32)image->GetOptionInt(wxIMAGE_OPTION_RESOLUTION);
+    }
+    else
+    {
+        resX =
+        resY = 0;
+    }
+
+	// default resolution unit
+	int nResUnit = wxIMAGE_RESOLUTION_INCHES;
+
+    // sets the resolution unit field in the output file
+    // wxIMAGE_RESOLUTION_INCHES for inches
+    // wxIMAGE_RESOLUTION_CM for centimeters
+
+    if ( image->HasOption(wxIMAGE_OPTION_RESOLUTIONUNIT) )
+    {
+        nResUnit = image->GetOptionInt(wxIMAGE_OPTION_RESOLUTIONUNIT);
+	}
+
+	switch( nResUnit )
+	{
+		case wxIMAGE_RESOLUTION_INCHES:
+		resX = (int)( METER_2_INCH * resX );
+		resY = (int)( METER_2_INCH * resY );
+		nUnitType = PNG_RESOLUTION_METER;
+		break;
+
+		case wxIMAGE_RESOLUTION_CM:
+		resX *= 100;
+		resY *= 100;
+		nUnitType = PNG_RESOLUTION_METER;
+		break;
+
+		default:
+		::wxLogWarning( _("Unknown resolution unit %d."), nUnitType );
+		break;
+	}
+
+	png_set_pHYs( png_ptr, info_ptr, resX, resY, nUnitType );
+
+	//~ image resolution
 
     png_set_sBIT( png_ptr, info_ptr, &sig_bit );
     png_write_info( png_ptr, info_ptr );

 	  	 
