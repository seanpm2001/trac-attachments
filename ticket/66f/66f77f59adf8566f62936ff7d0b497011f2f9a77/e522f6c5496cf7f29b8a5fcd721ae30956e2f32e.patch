diff -rb wxWindows/include/wx/process.h modified/include/wx/process.h
71c71,72
<     static wxKillError Kill(int pid, wxSignal sig = wxSIGTERM);
---
>     static wxKillError Kill(int pid, wxSignal sig = wxSIGTERM,
>                             bool killChildren = FALSE);
diff -rb wxWindows/include/wx/utils.h modified/include/wx/utils.h
153c153,154
<                            wxProcess *process = (wxProcess *) NULL);
---
>                            wxProcess *process = (wxProcess *) NULL,
>                            bool setupChildrenKill = FALSE);
155c156,157
<                            wxProcess *process = (wxProcess *) NULL);
---
>                            wxProcess *process = (wxProcess *) NULL,
>                            bool setupChildrenKill = FALSE);
204c206,207
<                        wxKillError *rc = NULL);
---
>                        wxKillError *rc = NULL,
> 	               bool killChildren = FALSE);
diff -rb wxWindows/src/common/process.cpp modified/src/common/process.cpp
115c115
< wxKillError wxProcess::Kill(int pid, wxSignal sig)
---
> wxKillError wxProcess::Kill(int pid, wxSignal sig, bool killChildren)
118c118
<     (void)wxKill(pid, sig, &rc);
---
>     (void)wxKill(pid, sig, &rc, killChildren);
diff -rb wxWindows/src/mac/utils.cpp modified/src/mac/utils.cpp
114c114
< int wxKill(long pid, wxSignal sig , wxKillError *rc )
---
> int wxKill(long pid, wxSignal sig , wxKillError *rc , bool killChildren )
diff -rb wxWindows/src/mac/utilsexc.cpp modified/src/mac/utilsexc.cpp
28c28,29
< long wxExecute(const wxString& command, bool sync, wxProcess *handler)
---
> long wxExecute(const wxString& command, bool sync, wxProcess *handler,
>                bool setupChildrenKill)
diff -rb wxWindows/src/mgl/utils.cpp modified/src/mgl/utils.cpp
143c143
< int wxKill(long WXUNUSED(pid), wxSignal WXUNUSED(sig), wxKillError *WXUNUSED(rc))
---
> int wxKill(long WXUNUSED(pid), wxSignal WXUNUSED(sig), wxKillError *WXUNUSED(rc), bool killChildren)
149c149
< long wxExecute(const wxString& WXUNUSED(command), bool WXUNUSED(sync), wxProcess *WXUNUSED(process))
---
> long wxExecute(const wxString& WXUNUSED(command), bool WXUNUSED(sync), wxProcess *WXUNUSED(process), bool setupChildrenKill)
155c155
< long wxExecute(wxChar **WXUNUSED(argv), bool WXUNUSED(sync), wxProcess *WXUNUSED(process))
---
> long wxExecute(wxChar **WXUNUSED(argv), bool WXUNUSED(sync), wxProcess *WXUNUSED(process), bool setupChildrenKill)
diff -rb wxWindows/src/msw/utils.cpp modified/src/msw/utils.cpp
656c656,662
< int wxKill(long pid, wxSignal sig, wxKillError *krc)
---
> //--------------------------------------------------------------------------
> 
> #ifdef __WIN32__
> 
> #include <tlhelp32.h>
> 
> static int wxKillAllChildren( long pid, wxSignal sig , wxKillError *krc )
657a664,703
>     // Take a snapshot of all processes in the system.  
>     HANDLE hProcessSnap = CreateToolhelp32Snapshot( TH32CS_SNAPPROCESS, 0 );
>     if ( hProcessSnap == INVALID_HANDLE_VALUE ) {
>         if ( krc )
>           *krc = wxKILL_ERROR;
>         return -1;
>     }
> 
>     //Fill in the size of the structure before using it.
>     PROCESSENTRY32 pe = {0};
>     pe.dwSize = sizeof(PROCESSENTRY32);
>     
>     // Walk the snapshot of the processes, and for each process,
>     // kill it if its parent is pid.
>     if ( !Process32First( hProcessSnap, &pe )) {
>         // Can't get first process.
>         if (krc)
>             *krc = wxKILL_ERROR;
>         CloseHandle (hProcessSnap);
>         return -1;
>     }
>     
>     do
>     {
>         if ( pe.th32ParentProcessID == (DWORD) pid )
>         {
>             if ( wxKill( pe.th32ProcessID, sig, krc ))
>                 return -1;
>         }
>     } while ( Process32Next ( hProcessSnap, &pe ));
>     
>     
>     return 0;
> }
> #endif
> 
> //--------------------------------------------------------------------------
> 
> int wxKill(long pid, wxSignal sig, wxKillError *krc, bool killChildren)
> {
658a705,708
>     if ( killChildren )
>         // Only wxSIGKILL will actually kill the processes under MSW.
>         sig = wxSIGKILL;
> 
807a858,860
>             if ( killChildren )
>                 return wxKillAllChildren( pid, sig, krc );
> 
diff -rb wxWindows/src/msw/utilsexc.cpp modified/src/msw/utilsexc.cpp
363c363,364
< long wxExecute(const wxString& cmd, bool sync, wxProcess *handler)
---
> long wxExecute(const wxString& cmd, bool sync, wxProcess *handler, 
>                xbool /*setupChildrenKill not applicable to MSW*/)
759c760,761
< long wxExecute(char **argv, bool sync, wxProcess *handler)
---
> long wxExecute(char **argv, bool sync, wxProcess *handler,
>                bool  /*setupChildrenKill not applicable to MSW*/)
diff -rb wxWindows/src/os2/UTILSEXC.CPP modified/src/os2/UTILSEXC.CPP
136a137
> , bool                              /*setupChildrenKill not applicable to os2*/
229a231
> , bool                              /*setupChildrenKill not applicable to os2 */
diff -rb wxWindows/src/unix/utilsunx.cpp modified/src/unix/utilsunx.cpp
153c153,154
< int wxKill(long pid, wxSignal sig, wxKillError *rc)
---
> int wxKill(long pid, wxSignal sig, wxKillError *rc,
>            bool /* killChildren isn't implemented under Unix */)
190c191,192
< long wxExecute( const wxString& command, bool sync, wxProcess *process )
---
> long wxExecute(const wxString& command, bool sync, wxProcess *process,
>                bool setupChildrenKill)
250c252
<     long lRc = wxExecute(argv, sync, process);
---
>     long lRc = wxExecute(argv, sync, process, setupChildrenKill);
523c525,526
<                wxProcess *process)
---
>                wxProcess *process,
>                bool setupChildrenKill)
652a656,659
>             if ( setupChildrenKill )
>                 // Set process group to child process' pid.  Then killing
>                 // -pid will kill the process and all of its children.
>                 setsid();
759c766
<             return pid;
---
>             return setupChildrenKill ? -pid : pid;

 	  	 
