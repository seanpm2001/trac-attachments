--- wxWidgets.orig/include/wx/generic/combo.h	Tue Sep 19 22:32:11 2006
+++ wxWidgets/include/wx/generic/combo.h	Mon Oct  9 10:32:31 2006
@@ -66,4 +66,6 @@
     virtual ~wxGenericComboCtrl();
 
+    void SetCustomPaintWidth( int width );
+
     virtual bool IsKeyPopupToggle(const wxKeyEvent& event) const;
 
--- wxWidgets.orig/src/common/combocmn.cpp	Sun Oct  8 23:08:06 2006
+++ wxWidgets/src/common/combocmn.cpp	Mon Oct  9 18:50:56 2006
@@ -702,4 +702,7 @@
     if ( !(m_windowStyle & wxCB_READONLY) )
     {
+        if ( m_text )
+            m_text->Destroy();
+
         // wxTE_PROCESS_TAB is needed because on Windows, wxTAB_TRAVERSAL is
         // not used by the wxPropertyGrid and therefore the tab is processed by
@@ -914,7 +917,8 @@
     else
     {
+        // If it has border, have textctrl will the entire text field.
         m_text->SetSize( m_tcArea.x,
                          0,
-                         sz.x - m_btnArea.x - m_widthCustomPaint - customBorder,
+                         sz.x - m_btnArea.width - m_widthCustomPaint - customBorder,
                          sz.y );
     }
--- wxWidgets.orig/src/generic/combog.cpp	Sun Oct  8 23:08:10 2006
+++ wxWidgets/src/generic/combog.cpp	Mon Oct  9 18:59:36 2006
@@ -111,13 +111,14 @@
                                 const wxString& name)
 {
-
-    // Set border
+    //
+    // Note that technically we only support 'default' border and wxNO_BORDER.
     long border = style & wxBORDER_MASK;
+    int tcBorder = wxNO_BORDER;
 
-    if ( !border )
-    {
 #if defined(__WXUNIVERSAL__)
+    if ( !border )
         border = wxBORDER_SIMPLE;
 #elif defined(__WXMSW__)
+    if ( !border )
         // For XP, have 1-width custom border, for older version use sunken
         /*if ( wxUxThemeEngine::GetIfActive() )
@@ -128,20 +129,40 @@
         else*/
             border = wxBORDER_SUNKEN;
-#elif defined(__WXGTK__)
-        border = wxBORDER_NONE;
-        //m_widthCustomBorder = 2;
-        m_widthCustomBorder = 1;
 #else
-        border = wxBORDER_SIMPLE;
-#endif
 
-        style = (style & ~(wxBORDER_MASK)) | border;
+    //
+    // Generic version is optimized for wxGTK
+    //
+
+    #define UNRELIABLE_TEXTCTRL_BORDER
+
+    if ( !border )
+    {
+        if ( style & wxCB_READONLY )
+        {
+            m_widthCustomBorder = 1;
+        }
+        else
+        {
+            m_widthCustomBorder = 0;
+            tcBorder = 0;
+        }
     }
+    else
+    {
+        // Have textctrl instead use the border given.
+        tcBorder = border;
+    }
+
+    // Because we are going to have button outside the border,
+    // let's use wxBORDER_NONE for the whole control.
+    border = wxBORDER_NONE;
 
-#if defined(__WXGTK__)
     Customize( wxCC_BUTTON_OUTSIDE_BORDER |
                wxCC_NO_TEXT_AUTO_SELECT );
+
 #endif
 
+    style = (style & ~(wxBORDER_MASK)) | border;
     if ( style & wxCC_STD_BUTTON )
         m_iFlags |= wxCC_POPUP_ON_MOUSE_UP;
@@ -159,5 +180,5 @@
 
     // Create textctrl, if necessary
-    CreateTextCtrl( wxNO_BORDER, validator );
+    CreateTextCtrl( tcBorder, validator );
 
     // Add keyboard input handlers for main control and textctrl
@@ -322,4 +343,65 @@
     HandleNormalMouseEvent(event);
 
+}
+
+void wxGenericComboCtrl::SetCustomPaintWidth( int width )
+{
+#ifdef UNRELIABLE_TEXTCTRL_BORDER
+    //
+    // If starting/stopping to show an image in front
+    // of a writable text-field, then re-create textctrl
+    // with different kind of border (because we can't
+    // assume that textctrl fully supports wxNO_BORDER).
+    //
+    wxTextCtrl* tc = GetTextCtrl();
+
+    if ( tc && (m_iFlags & wxCC_BUTTON_OUTSIDE_BORDER) )
+    {
+        int borderType = tc->GetWindowStyle() & wxBORDER_MASK;
+        int tcCreateStyle = -1;
+
+        if ( width > 0 )
+        {
+            // Re-create textctrl with no border
+            if ( borderType != wxNO_BORDER )
+            {
+                m_widthCustomBorder = 1;
+                tcCreateStyle = wxNO_BORDER;
+            }
+        }
+        else if ( width == 0 )
+        {
+            // Re-create textctrl with normal border
+            if ( borderType == wxNO_BORDER )
+            {
+                m_widthCustomBorder = 0;
+                tcCreateStyle = 0;
+            }
+        }
+
+        // Common textctrl re-creation code
+        if ( tcCreateStyle != -1 )
+        {
+            tc->RemoveEventHandler(m_textEvtHandler);
+            delete m_textEvtHandler;
+
+            wxValidator* pValidator = tc->GetValidator();
+            if ( pValidator )
+            {
+                pValidator = (wxValidator*) pValidator->Clone();
+                CreateTextCtrl( tcCreateStyle, *pValidator );
+                delete pValidator;
+            }
+            else
+            {
+                CreateTextCtrl( tcCreateStyle, wxDefaultValidator );
+            }
+
+            InstallInputHandlers();
+        }
+    }
+#endif // UNRELIABLE_TEXTCTRL_BORDER
+
+    wxComboCtrlBase::SetCustomPaintWidth( width );
 }
 

 	  	 
