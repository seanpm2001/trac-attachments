Index: docs/latex/wx/app.tex
===================================================================
--- docs/latex/wx/app.tex	(revision 50252)
+++ docs/latex/wx/app.tex	(working copy)
@@ -190,7 +190,7 @@
 \func{static wxAppConsole *}{GetInstance}{\void}
 
 Returns the one and only global application object.
-Usually \texttt{wxTheApp} is usead instead.
+Usually \texttt{wxTheApp} is used instead.
 
 \wxheading{See also}
 
Index: docs/latex/wx/text.tex
===================================================================
--- docs/latex/wx/text.tex	(revision 50252)
+++ docs/latex/wx/text.tex	(working copy)
@@ -591,7 +591,7 @@
 Gets the current selection span. If the returned values are equal, there was
 no selection.
 
-Please note that the indices returned may be used with the other wxTextctrl
+Please note that the indices returned may be used with the other wxTextCtrl
 methods but don't necessarily represent the correct indices into the string
 returned by \helpref{GetValue()}{wxtextctrlgetvalue} for multiline controls
 under Windows (at least,) you should use
Index: docs/latex/wx/dropsrc.tex
===================================================================
--- docs/latex/wx/dropsrc.tex	(revision 50252)
+++ docs/latex/wx/dropsrc.tex	(working copy)
@@ -122,7 +122,7 @@
 \wxheading{Return value}
 
 Return false if you want default feedback, or true if you implement your own
-feedback. The return values is ignored under GTK.
+feedback. The return value is ignored under GTK.
 
 \membersection{wxDropSource::SetCursor}\label{wxdropsourcesetcursor}
 
Index: docs/latex/wx/locale.tex
===================================================================
--- docs/latex/wx/locale.tex	(revision 50252)
+++ docs/latex/wx/locale.tex	(working copy)
@@ -413,7 +413,10 @@
 
 The call of this function has several global side effects which you should
 understand: first of all, the application locale is changed - note that this
-will affect many of standard C library functions such as printf() or strftime().
+will affect many of standard C library functions such as printf() or
+strftime(). This may be even more problematic in multi-threaded
+programs where another thread keeps executing these functions without
+being aware of this global change.
 Second, this wxLocale object becomes the new current global locale for the
 application and so all subsequent calls to
 \helpref{wxGetTranslation()}{wxgettranslation} will try to
Index: docs/latex/wx/datetime.tex
===================================================================
--- docs/latex/wx/datetime.tex	(revision 50252)
+++ docs/latex/wx/datetime.tex	(working copy)
@@ -606,7 +606,7 @@
 
 \func{static bool}{IsDSTApplicable}{\param{int }{year = Inv\_Year}, \param{Country }{country = Country\_Default}}
 
-Returns {\tt true} if DST was used n the given year (the current one by
+Returns {\tt true} if DST was used in the given year (the current one by
 default) in the given country.
 
 
@@ -915,7 +915,12 @@
 
 Returns the month in the given timezone (local one by default).
 
+\wxheading{Warning}
 
+wxDateTime::Month is a standard enum type - january is equivalent to 0, not 1,
+thus don't simply dirty-cast this enum into an integer to use elsewhere.
+
+
 \membersection{wxDateTime::GetDay}\label{wxdatetimegetday}
 
 \constfunc{wxDateTime\_t}{GetDay}{\param{const TimeZone\& }{tz = Local}}
@@ -1479,7 +1484,7 @@
 
 Returns the {\it Modified Julian Day Number} (MJD) which is, by definition,
 equal to $JDN - 2400000.5$. The MJDs are simpler to work with as the integral
-MJDs correspond to midnights of the dates in the Gregorian calendar and not th
+MJDs correspond to midnights of the dates in the Gregorian calendar and not the
 noons like JDN. The MJD $0$ is Nov 17, 1858.
 
 
Index: docs/latex/wx/wxstring.tex
===================================================================
--- docs/latex/wx/wxstring.tex	(revision 50252)
+++ docs/latex/wx/wxstring.tex	(working copy)
@@ -723,7 +723,7 @@
 
 \func{static wxString}{Format}{\param{const wxChar }{*format}, \param{}{...}}
 
-This static function returns the string containing the result of calling 
+This static function {\bf returns} the string containing the result of calling
 \helpref{Printf}{wxstringprintf} with the passed parameters on it.
 
 \wxheading{See also}
@@ -735,7 +735,7 @@
 
 \func{static wxString}{FormatV}{\param{const wxChar }{*format}, \param{va\_list }{argptr}}
 
-This static function returns the string containing the result of calling 
+This static function {\bf returns} the string containing the result of calling
 \helpref{PrintfV}{wxstringprintfv} with the passed parameters on it.
 
 \wxheading{See also}
@@ -932,7 +932,7 @@
 
 \constfunc{wxString}{Left}{\param{size\_t}{ count}}
 
-Returns the first {\it count} characters of the string.
+{\bf Returns} the first {\it count} characters of the string.
 
 
 \membersection{wxString::Len}\label{wxstringlen}
@@ -955,7 +955,7 @@
 
 \constfunc{wxString}{Lower}{\void}
 
-Returns this string converted to the lower case.
+{\bf Returns} this string converted to the lower case.
 
 
 \membersection{wxString::LowerCase}\label{wxstringlowercase}
@@ -971,14 +971,14 @@
 
 \func{wxString\&}{MakeLower}{\void}
 
-Converts all characters to lower case and returns the result.
+Converts all characters to lower case, returning a reference to this string.
 
 
 \membersection{wxString::MakeUpper}\label{wxstringmakeupper}
 
 \func{wxString\&}{MakeUpper}{\void}
 
-Converts all characters to upper case and returns the result.
+Converts all characters to upper case, returning a reference to this string.
 
 
 \membersection{wxString::Matches}\label{wxstringmatches}
@@ -1011,7 +1011,7 @@
 
 \constfunc{wxString}{Mid}{\param{size\_t}{ first}, \param{size\_t}{ count = wxSTRING\_MAXLEN}}
 
-Returns a substring starting at {\it first}, with length {\it count}, or the rest of
+{\bf Returns} a substring starting at {\it first}, with length {\it count}, or the rest of
 the string if {\it count} is the default value.
 
 
@@ -1100,7 +1100,7 @@
 
 \constfunc{wxString}{Right}{\param{size\_t}{ count}}
 
-Returns the last {\it count} characters.
+{\bf Returns} the last {\it count} characters.
 
 
 \membersection{wxString::SetChar}\label{wxstringsetchar}
@@ -1158,7 +1158,7 @@
 
 \constfunc{wxString}{SubString}{\param{size\_t}{ from}, \param{size\_t}{ to}}
 
-Returns the part of the string between the indices {\it from} and {\it to}
+{\bf Returns} the part of the string between the indices {\it from} and {\it to}
 inclusive.
 
 This is a wxWidgets 1.xx compatibility function, use \helpref{Mid}{wxstringmid}
@@ -1334,7 +1334,7 @@
 
 \constfunc{wxString}{Upper}{\void}
 
-Returns this string converted to upper case.
+{\bf Returns} this string converted to upper case.
 
 
 \membersection{wxString::UpperCase}\label{wxstringuppercase}
Index: docs/latex/wx/function.tex
===================================================================
--- docs/latex/wx/function.tex	(revision 50252)
+++ docs/latex/wx/function.tex	(working copy)
@@ -2408,6 +2408,8 @@
 \twocolitem{wxICON\_INFORMATION}{Displays an information symbol.}
 \end{twocollist}
 
+Further supported styles can be found at its backend, \helpref{wxMessageDialog}{wxmessagedialog}.
+
 The return value is one of: wxYES, wxNO, wxCANCEL, wxOK.
 
 For example:
@@ -2424,6 +2426,8 @@
 {\it message} may contain newline characters, in which case the
 message will be split into separate lines, to cater for large messages.
 
+See also \helpref{wxMessageDialog}{wxmessagedialog}.
+
 \wxheading{Include files}
 
 <wx/msgdlg.h>
@@ -3326,7 +3330,7 @@
 
 \func{wxWindow *}{wxFindWindowAtPoint}{\param{const wxPoint\& }{pt}}
 
-Find the deepest window at the given mouse position in screen coordinates,
+Find the {\bf deepest} window at the given mouse position in screen coordinates,
 returning the window if found, or NULL if not.
 
 
@@ -3334,7 +3338,7 @@
 
 \func{wxWindow *}{wxFindWindowAtPointer}{\param{wxPoint\& }{pt}}
 
-Find the deepest window at the mouse pointer position, returning the window
+Find the {\bf deepest} window at the mouse pointer position, returning the window
 and current pointer position in screen coordinates.
 
 
@@ -4663,6 +4667,11 @@
 Sleeps for the specified number of milliseconds. Notice that usage of this
 function is encouraged instead of calling usleep(3) directly because the
 standard usleep() function is not MT safe.
+Also, notice that this function (or some of its implementations)
+may return prematurely (delivering signals may interrupt the sleep period),
+as documented e.g. in the sleep(3) man page. Unfortunately (just as with
+related library functions) there's no return value which would indicate an
+interrupted sleep.
 
 \wxheading{Include files}
 
Index: docs/latex/wx/sizeritem.tex
===================================================================
--- docs/latex/wx/sizeritem.tex	(revision 50252)
+++ docs/latex/wx/sizeritem.tex	(working copy)
@@ -259,7 +259,7 @@
 
 \func{void}{SetWindow}{\param{wxWindow* }{window}}
 
-Set the window to be tracked by thsi item.
+Set the window to be tracked by this item.
 
 
 \membersection{wxSizerItem::Show}\label{wxsizeritemshow}
Index: docs/latex/wx/window.tex
===================================================================
--- docs/latex/wx/window.tex	(revision 50252)
+++ docs/latex/wx/window.tex	(working copy)
@@ -2999,7 +2999,7 @@
 
 \func{void}{SetDropTarget}{\param{wxDropTarget*}{ target}}
 
-Associates a drop target with this window.
+Associates a drop target with this window, transferring ownership.
 
 If the window already has a drop target, it is deleted.
 
@@ -3715,7 +3715,7 @@
 
 \membersection{wxWindow::SetWindowVariant}\label{wxwindowsetwindowvariant}
 
-\func{void}{SetWindowVariant}{\param{wxWindowVariant}{variant}}
+\func{void}{SetWindowVariant}{\param{wxWindowVariant}{ variant}}
 
 This function can be called under all platforms but only does anything under
 Mac OS X 10.3+ currently. Under this system, each of the standard control can
Index: docs/latex/wx/bitmap.tex
===================================================================
--- docs/latex/wx/bitmap.tex	(revision 50252)
+++ docs/latex/wx/bitmap.tex	(working copy)
@@ -476,7 +476,7 @@
 
 \func{bool}{SaveFile}{\param{const wxString\& }{name}, \param{wxBitmapType}{ type}, \param{wxPalette* }{palette = NULL}}
 
-Saves a bitmap in the named file.
+Saves a bitmap in the named file. Can be a useful debugging feature, too.
 
 \wxheading{Parameters}
 
Index: docs/latex/wx/image.tex
===================================================================
--- docs/latex/wx/image.tex	(revision 50252)
+++ docs/latex/wx/image.tex	(working copy)
@@ -357,7 +357,7 @@
 
 \constfunc{wxImage}{ConvertToGreyscale}{\param{double}{ lr = 0.299}, \param{double}{ lg = 0.587}, \param{double}{ lb = 0.114}}
 
-Returns a greyscale version of the image. The returned image uses the luminance
+{\bf Returns} a greyscale version of the image. The returned image uses the luminance
 component of the original to calculate the greyscale. Defaults to using
 ITU-T BT.601 when converting to YUV, where every pixel equals
 (R * {\it lr}) + (G * {\it lg}) + (B * {\it lb}).
@@ -367,7 +367,7 @@
 
 \constfunc{wxImage}{ConvertToMono}{\param{unsigned char}{ r}, \param{unsigned char}{ g}, \param{unsigned char}{ b}}
 
-Returns monochromatic version of the image. The returned image has white
+{\bf Returns} monochromatic version of the image. The returned image has white
 colour where the original has {\it (r,g,b)} colour and black colour
 everywhere else.
 
@@ -720,7 +720,7 @@
 Gets a user-defined option as an integer. The function is case-insensitive to {\it name}.
 
 If the given option is not present, the function returns $0$. Use
-\helpref{wxImage::HasOption}{wximagehasoption} is $0$ is a possibly valid value
+\helpref{wxImage::HasOption}{wximagehasoption} if $0$ is a possibly valid value
 for the option.
 
 Options for wxPNGHandler
@@ -1020,29 +1020,30 @@
 
 \constfunc{wxImage}{Rotate90}{\param{bool}{ clockwise = true}}
 
-Returns a copy of the image rotated 90 degrees in the direction
+{\bf Returns} a copy of the image rotated 90 degrees in the direction
 indicated by {\it clockwise}.
 
 
 \membersection{wxImage::SaveFile}\label{wximagesavefile}
 
+\constfunc{bool}{SaveFile}{\param{const wxString\& }{name}}
+
+Saves an image in the named file. Can be a useful debugging feature, too.
+File type is determined from the extension of the file name.
+Note that this function may fail if the extension is not recognized! You
+can use one of the forms below to save images to files with non-standard extensions.
+
 \constfunc{bool}{SaveFile}{\param{const wxString\& }{name}, \param{int}{ type}}
 
 \constfunc{bool}{SaveFile}{\param{const wxString\& }{name}, \param{const wxString\&}{ mimetype}}
 
-Saves an image in the named file.
+See above.
 
-\constfunc{bool}{SaveFile}{\param{const wxString\& }{name}}
-
-Saves an image in the named file. File type is determined from the extension of the
-file name. Note that this function may fail if the extension is not recognized! You
-can use one of the forms above to save images to files with non-standard extensions.
-
 \constfunc{bool}{SaveFile}{\param{wxOutputStream\& }{stream}, \param{int}{ type}}
 
 \constfunc{bool}{SaveFile}{\param{wxOutputStream\& }{stream}, \param{const wxString\&}{ mimetype}}
 
-Saves an image in the given stream.
+Like above, but saves an image in the given stream.
 
 \wxheading{Parameters}
 
@@ -1110,7 +1111,7 @@
 
 \constfunc{wxImage}{Scale}{\param{int}{ width}, \param{int}{ height}, \param{int}{ quality = wxIMAGE\_QUALITY\_NORMAL}}
 
-Returns a scaled version of the image. This is also useful for
+{\bf Returns} a scaled version of the image. This is also useful for
 scaling bitmaps in general as the only other way to scale bitmaps
 is to blit a wxMemoryDC into another wxMemoryDC.
 
@@ -1162,7 +1163,7 @@
 
 \constfunc{wxImage}{Size}{\param{const wxSize\&}{ size}, \param{const wxPoint&}{ pos}, \param{int}{ red = -1}, \param{int}{ green = -1}, \param{int}{ blue = -1}}
 
-Returns a resized version of this image without scaling it by adding either a border
+{\bf Returns} a resized version of this image without scaling it by adding either a border
 with the given colour or cropping as necessary. The image is pasted into a new
 image with the given {\it size} and background colour at the position {\it pos}
 relative to the upper left of the new image. If {\it red = green = blue = -1}
Index: docs/latex/wx/dir.tex
===================================================================
--- docs/latex/wx/dir.tex	(revision 50252)
+++ docs/latex/wx/dir.tex	(working copy)
@@ -192,8 +192,8 @@
 
 \func{bool}{HasSubDirs}{\param{const wxString\& }{dirspec = wxEmptyString}}
 
-Returns {\tt true} if the directory contains any subdirectories (if a non
-empty {\it filespec} is given, only check for directories matching it).
+Returns {\tt true} if the directory contains any subdirectories (if a
+non-empty {\it filespec} is given, only check for directories matching it).
 The hidden subdirectories are taken into account as well.
 
 
Index: docs/latex/wx/tbitmap.tex
===================================================================
--- docs/latex/wx/tbitmap.tex	(revision 50252)
+++ docs/latex/wx/tbitmap.tex	(working copy)
@@ -141,7 +141,7 @@
 \item Windows bitmap file (wxBITMAP\_TYPE\_BMP)
 \end{itemize}
 
-Under wxGTK, wxCursor may load the following formats (in additional
+Under wxGTK, wxCursor may load the following formats (in addition
 to stock cursors):
 
 \begin{itemize}\itemsep=0pt
Index: docs/latex/wx/thread.tex
===================================================================
--- docs/latex/wx/thread.tex	(revision 50252)
+++ docs/latex/wx/thread.tex	(working copy)
@@ -458,7 +458,8 @@
 \func{void}{Yield}{\void}
 
 Give the rest of the thread time slice to the system allowing the other threads to run.
-Note that using this function is {\bf strongly discouraged}, since in
+
+Note that using this function is {\bf discouraged}, since in
 many cases it indicates a design weakness of your threading model (as
 does using Sleep functions).
 Threads should use the CPU in an efficient manner, i.e. they should
Index: docs/latex/wx/xmlres.tex
===================================================================
--- docs/latex/wx/xmlres.tex	(revision 50252)
+++ docs/latex/wx/xmlres.tex	(working copy)
@@ -115,7 +115,7 @@
 \constfunc{int}{CompareVersion}{\param{int }{major}, \param{int }{minor}, \param{int }{release}, \param{int }{revision}}
 
 Compares the XRC version to the argument. Returns -1 if the XRC version
-is less than the argument, +1 if greater, and 0 if they equal.
+is less than the argument, +1 if greater, and 0 if they are equal.
 
 
 \membersection{wxXmlResource::Get}\label{wxxmlresourceget}
@@ -124,7 +124,9 @@
 
 Gets the global resources object or creates one if none exists.
 
+{\bf Note:} make sure to use proper object locking in case you intend to do multi-threaded resource access!
 
+
 \membersection{wxXmlResource::GetFlags}\label{wxxmlresourcegetflags}
 
 \func{int}{GetFlags}{\void}
@@ -260,7 +262,11 @@
 
 Sets flags (bitlist of wxXRC\_USE\_LOCALE and wxXRC\_NO\_SUBCLASSING).
 
+Note that disabling wxXRC\_USE\_LOCALE may fix improper display of
+Umlaut characters in resources as indicated by .xrc "encoding"
+codepage locale tag (FIXME: could anyone tell us why this is necessary?).
 
+
 \membersection{wxXmlResource::Unload}\label{wxxmlresourceunload}
 
 \func{bool}{Unload}{\param{const wxString\& }{filename}}
