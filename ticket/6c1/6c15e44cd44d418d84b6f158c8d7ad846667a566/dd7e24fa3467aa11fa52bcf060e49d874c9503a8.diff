commit bc1e3752acd64796cf0817f0fa4fd55d28d1ea5f
Author: Vadim Zeitlin <vadim@wxwidgets.org>
Date:   Wed Jul 11 01:30:19 2012 +0200

    Add support for loading fonts from files.
    
    wxFont::AddPrivateFont() can now be used to load a font from a file for the
    applications private use. Update the font sample to show this.
    
    Closes #13568.

diff --git a/docs/changes.txt b/docs/changes.txt
index e05f13f..fd4e700 100644
--- a/docs/changes.txt
+++ b/docs/changes.txt
@@ -524,7 +524,15 @@ Major new features in this release
   was added.
 
 
-2.9.4: (release 2012-07-09)
+2.9.5: (released ????-??-??)
+------
+
+All (GUI):
+
+- Add support for loading fonts from files (Arthur Norman).
+
+
+2.9.4: (released 2012-07-09)
 ------
 
 INCOMPATIBLE CHANGES SINCE 2.9.3
diff --git a/docs/doxygen/overviews/font.h b/docs/doxygen/overviews/font.h
index bd95c95..f82c890 100644
--- a/docs/doxygen/overviews/font.h
+++ b/docs/doxygen/overviews/font.h
@@ -82,5 +82,20 @@ implemented for Windows and Unix (GTK+ and Motif) ports only, all the methods
 are available for all the ports and should be used to make your program work
 correctly when they are implemented later.
 
+@section overview_font_privateinfo Private font information
+
+Sometimes an application needs fonts that are not globally installed on the
+system. On Macintosh/OSX this can be arranged by placing the desired fonts
+within the Application Bundle in Contents/Resources/Fonts and using
+the ATSApplicationFontsPath key to point there. The full details of the
+procedure there can be found as OSX developer resources. For the GTK+ and
+Windows ports it is possible to add TrueType fonts at run-time using
+a sequence of calls to wxFont::AddPrivateFont() to give the names of files
+containing font data, followed by a call to wxFont::ActivatePrivateFonts()
+to complete the process of making the fonts available. These functions
+return false if they fail. They should be called just once before any
+graphics contexts have been created or other activity liable to use fonts
+has happened.
+
 */
 
diff --git a/include/wx/font.h b/include/wx/font.h
index 27f42bb..dc86b10 100644
--- a/include/wx/font.h
+++ b/include/wx/font.h
@@ -215,6 +215,12 @@ class WXDLLIMPEXP_CORE wxFontBase : public wxGDIObject
     // from the string representation of wxNativeFontInfo
     static wxFont *New(const wxString& strNativeFontDesc);
 
+    // These functions can be used to load private fonts if supported by this
+    // platform (wxHAS_PRIVATE_FONTS is defined): first add one or more files
+    // and then activate all of them at once.
+    static bool AddPrivateFont(const wxString& filename);
+    static bool ActivatePrivateFonts();
+
     // comparison
     bool operator==(const wxFont& font) const;
     bool operator!=(const wxFont& font) const { return !(*this == font); }
diff --git a/include/wx/gtk/font.h b/include/wx/gtk/font.h
index 41c19a6..4e9bc55 100644
--- a/include/wx/gtk/font.h
+++ b/include/wx/gtk/font.h
@@ -131,4 +131,8 @@ class WXDLLIMPEXP_CORE wxFont : public wxFontBase
     DECLARE_DYNAMIC_CLASS(wxFont)
 };
 
+#ifndef __WXMSW__
+    #define wxHAS_PRIVATE_FONTS 1
+#endif
+
 #endif // _WX_GTK_FONT_H_
diff --git a/include/wx/msw/font.h b/include/wx/msw/font.h
index 7a83f76..5027ba8 100644
--- a/include/wx/msw/font.h
+++ b/include/wx/msw/font.h
@@ -176,4 +176,6 @@ class WXDLLIMPEXP_CORE wxFont : public wxFontBase
     DECLARE_DYNAMIC_CLASS(wxFont)
 };
 
+#define wxHAS_PRIVATE_FONTS 1
+
 #endif // _WX_FONT_H_
diff --git a/include/wx/osx/font.h b/include/wx/osx/font.h
index 007eaef..831bce9 100644
--- a/include/wx/osx/font.h
+++ b/include/wx/osx/font.h
@@ -190,4 +190,6 @@ class WXDLLIMPEXP_CORE wxFont : public wxFontBase
     DECLARE_DYNAMIC_CLASS(wxFont)
 };
 
+#define wxHAS_PRIVATE_FONTS 1
+
 #endif // _WX_FONT_H_
diff --git a/interface/wx/font.h b/interface/wx/font.h
index 38238a2..b62e4d6 100644
--- a/interface/wx/font.h
+++ b/interface/wx/font.h
@@ -519,6 +519,44 @@ class wxFont : public wxGDIObject
     const wxNativeFontInfo *GetNativeFontInfo() const;
 
     /**
+        Specify the name of a file containing a TrueType font to be
+        made available to the current application.
+
+        This method can be used to allow this application to use the font from
+        the given file even if it is not globally installed on the system.
+
+        Under OS X this method actually doesn't do anything other than check
+        for the existence of the file in the "Fonts" subdirectory of the
+        application bundle "Resources" directory. You are responsible for
+        actually making the font file available in this directory and setting
+        @c ATSApplicationFontsPath to @c Fonts value in your @c Info.plist
+        file. See also wxStandardPaths::GetResourcesDir().
+
+        Notice that this method must be called before any graphics contexts
+        have been created.
+
+        Currently this method is implemented for all major platforms but you
+        may also test for @c wxHAS_PRIVATE_FONTS preprocessor symbol: if it is
+        not defined, this function and ActivatePrivatefonts() are not
+        implemented at all and always simply return false.
+
+        @return @true if the font was added and ActivatePrivatefonts() should
+            be called next or @false if adding it failed.
+
+        @since 2.9.5
+    */
+    static bool AddPrivateFont(const wxString& filename);
+
+    /**
+        Make all fonts registered by AddPrivateFont() actually available.
+
+        @return @true if the private fonts can now be used or @false on error.
+
+        @since 2.9.5
+    */
+    static bool ActivatePrivatefonts();
+
+    /**
         Gets the point size.
 
         @see SetPointSize()
diff --git a/samples/font/Makefile.in b/samples/font/Makefile.in
index a038fd0..f52904c 100644
diff --git a/samples/font/font.bkl b/samples/font/font.bkl
index cb88a72..bfa8333 100644
--- a/samples/font/font.bkl
+++ b/samples/font/font.bkl
@@ -9,4 +9,11 @@
         <wx-lib>base</wx-lib>
     </exe>
 
+    <wx-data id="data">
+        <files>
+            wxprivate.ttf
+        </files>
+    </wx-data>
+
+
 </makefile>
diff --git a/samples/font/font.cpp b/samples/font/font.cpp
index 4c78adc..3eeb309 100644
--- a/samples/font/font.cpp
+++ b/samples/font/font.cpp
@@ -128,6 +128,7 @@ class MyFrame : public wxFrame
     void OnSetFamily(wxCommandEvent& event);
     void OnSetFaceName(wxCommandEvent& event);
     void OnSetEncoding(wxCommandEvent& event);
+    void OnPrivateFont(wxCommandEvent& event);
 
 protected:
     bool DoEnumerateFamilies(bool fixedWidthOnly,
@@ -207,6 +208,8 @@ enum
     Font_SetFamily,
     Font_SetFaceName,
     Font_SetEncoding,
+
+    Font_Private,
     Font_Max
 };
 
@@ -258,6 +261,7 @@ enum
     EVT_MENU(Font_EnumFamilies, MyFrame::OnEnumerateFamilies)
     EVT_MENU(Font_EnumFixedFamilies, MyFrame::OnEnumerateFixedFamilies)
     EVT_MENU(Font_EnumEncodings, MyFrame::OnEnumerateEncodings)
+    EVT_MENU(Font_Private, MyFrame::OnPrivateFont)
 END_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -280,6 +284,7 @@ bool MyApp::OnInit()
 {
     if ( !wxApp::OnInit() )
         return false;
+    wxString privfont = argv[0].BeforeLast('/');
 
     // Create the main application window
     MyFrame *frame = new MyFrame(wxT("Font wxWidgets demo"),
@@ -372,7 +377,6 @@ bool MyApp::OnInit()
                          wxT("Default font for user interface objects such as menus and dialog boxes. "));
     menuSelect->Append(Font_SystemSettings, wxT("System fonts"), menuSettingFonts);
 
-
     menuSelect->AppendSeparator();
     menuSelect->Append(Font_EnumFamilies, wxT("Enumerate font &families\tCtrl-F"));
     menuSelect->Append(Font_EnumFixedFamilies,
@@ -383,6 +387,42 @@ bool MyApp::OnInit()
                      wxT("Find font for en&coding...\tCtrl-C"),
                      wxT("Find font families for given encoding"));
 
+#ifdef wxHAS_PRIVATE_FONTS
+    // Try to use a private font, under most platforms we just look for it in
+    // the current directory but under OS X it must be in a specific location
+    // so look for it there.
+    //
+    // For OS X you also need to ensure that you actually do put wxprivate.ttf
+    // in font.app/Contents/Resources/Fonts and add the following snippet
+    //
+    //     <plist version="0.9">
+    //       <dict>
+    //         ...
+    //         <key>ATSApplicationFontsPath</key>
+    //         <string>Fonts</string>
+    //         ...
+    //       </dict>
+    //     </plist>
+    //
+    // to your font.app/Contents/Info.plist.
+
+    wxString privfont;
+#ifdef __WXOSX__
+    privfont << wxStandardPaths::Get().GetResourcesDir() << "/";
+#endif
+    privfont << "wxprivate.ttf";
+
+    if ( wxFont::AddPrivateFont(privfont) &&
+            wxFont::ActivatePrivateFonts() )
+    {
+        menuSelect->AppendSeparator();
+        menuSelect->Append(Font_Private,
+                           "Select private font",
+                           "Select a font available only in this application");
+    }
+#endif // wxHAS_PRIVATE_FONTS
+
+
     // now append the freshly created menu to the menu bar...
     wxMenuBar *menuBar = new wxMenuBar;
     menuBar->Append(menuFile, wxT("&File"));
@@ -861,6 +901,20 @@ void MyFrame::OnSelectFont(wxCommandEvent& WXUNUSED(event))
     }
 }
 
+void MyFrame::OnPrivateFont(wxCommandEvent& WXUNUSED(event))
+{
+    wxFont font(GetCanvas()->GetTextFont());
+    if (font.SetFaceName("wxprivate"))
+    {
+        wxASSERT_MSG( font.IsOk(), wxT("The font should now be valid")) ;
+        DoChangeFont(font);
+    }
+    else
+    {
+        wxLogError("Failed to use private font.");
+    }
+}
+
 void MyFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
 {
     // true is to force the frame to close
diff --git a/samples/font/makefile.bcc b/samples/font/makefile.bcc
index d859ff8..ea16882 100644
diff --git a/samples/font/makefile.gcc b/samples/font/makefile.gcc
index 72f4f6b..f4f6e38 100644
diff --git a/samples/font/makefile.vc b/samples/font/makefile.vc
index e65b5b4..bba8301 100644
diff --git a/samples/font/makefile.wat b/samples/font/makefile.wat
index f5f6fef..574996e 100644
diff --git a/samples/font/wxprivate.ttf b/samples/font/wxprivate.ttf
new file mode 100644
index 0000000..82d77fe
Binary files /dev/null and b/samples/font/wxprivate.ttf differ
diff --git a/src/common/fontcmn.cpp b/src/common/fontcmn.cpp
index 52936bf..6ca6b1c 100644
--- a/src/common/fontcmn.cpp
+++ b/src/common/fontcmn.cpp
@@ -1120,4 +1120,20 @@ bool wxFromString(const wxString& str, wxFontBase *font)
     return font->SetNativeFontInfo(str);
 }
 
+#ifndef wxHAS_PRIVATE_FONTS
 
+// Adding private fonts is not supported on this platform, so provide the
+// functions that would be used, but make them no-ops that return a code
+// that indicates failure.
+
+bool wxFontBase::AddPrivateFont(const wxString& WXUNUSED(filename))
+{
+    return false;
+}
+
+bool wxFontBase::ActivatePrivateFonts()
+{
+    return false;
+}
+
+#endif // !wxHAS_PRIVATE_FONTS
diff --git a/src/gtk/font.cpp b/src/gtk/font.cpp
index 0626039..e7f6d0d 100644
--- a/src/gtk/font.cpp
+++ b/src/gtk/font.cpp
@@ -32,6 +32,11 @@
 
 #include "wx/gtk/private.h"
 
+#ifdef GDK_WINDOWING_X11
+    #include <X11/Xlib.h>
+    #include <X11/Xft/Xft.h>
+#endif
+
 // ----------------------------------------------------------------------------
 // constants
 // ----------------------------------------------------------------------------
@@ -550,3 +555,58 @@ bool wxFont::GTKSetPangoAttrs(PangoLayout* layout) const
 
     return true;
 }
+
+
+// ----------------------------------------------------------------------------
+// Support for adding private fonts
+// ----------------------------------------------------------------------------
+
+#ifdef wxHAS_PRIVATE_FONTS
+
+namespace
+{
+    FcConfig* gs_fcConfig = NULL;
+}
+
+bool wxFontBase::AddPrivateFont(const wxString& filename)
+{
+    if ( !gs_fcConfig )
+    {
+        gs_fcConfig = FcConfigGetCurrent();
+        if ( !gs_fcConfig )
+        {
+            gs_fcConfig = FcConfigCreate();
+            if ( !gs_fcConfig )
+            {
+                wxLogError(_("Failed to add custom font \"%s\" as "
+                             "font configuration object creation failed."),
+                           filename);
+                return false;
+            }
+        }
+    }
+
+    if ( !FcConfigAppFontAddFile(gs_fcConfig,
+            reinterpret_cast<const FcChar8*>(
+                static_cast<const char*>(filename.utf8_str())
+            )) )
+    {
+        wxLogError(_("Failed to add custom font \"%s\"."), filename);
+        return false;
+    }
+
+    return true;
+}
+
+bool wxFontBase::ActivatePrivateFonts()
+{
+    if ( !FcConfigSetCurrent(gs_fcConfig) )
+    {
+        wxLogError(_("Failed to update current font configuration."));
+        return false;
+    }
+
+    return true;
+}
+
+#endif // wxHAS_PRIVATE_FONTS
diff --git a/src/msw/graphics.cpp b/src/msw/graphics.cpp
index 78f1e4a..388fa85 100644
--- a/src/msw/graphics.cpp
+++ b/src/msw/graphics.cpp
@@ -37,6 +37,7 @@
     #include "wx/dcprint.h"
 #endif
 
+#include "wx/filename.h"
 #include "wx/stack.h"
 
 #include "wx/private/graphics.h"
@@ -887,6 +888,47 @@ void wxGDIPlusBrushData::Init()
 }
 
 //-----------------------------------------------------------------------------
+// Support for adding private fonts
+//-----------------------------------------------------------------------------
+
+namespace
+{
+
+wxArrayString gs_privateFontFileNames;
+Gdiplus::PrivateFontCollection* gs_privateFonts = NULL;
+Gdiplus::FontFamily* gs_pFontFamily = NULL;
+
+} // anonymous namespace
+
+bool wxFontBase::AddPrivateFont(const wxString& filename)
+{
+    if ( !wxFileName::FileExists(filename) )
+    {
+        wxLogError(_("Font file \"%s\" doesn't exist."), filename);
+        return false;
+    }
+
+    gs_privateFontFileNames.Add(filename);
+    return true;
+}
+
+bool wxFontBase::ActivatePrivateFonts()
+{
+    const int n = gs_privateFontFileNames.size();
+    for ( int i = 0 ; i < n; i++ )
+    {
+        const wxString& fname = gs_privateFontFileNames[i];
+        if ( !AddFontResourceEx(fname.t_str(), FR_PRIVATE, 0) )
+        {
+            wxLogSysError(_("Font file \"%s\" couldn't be loaded"),
+                          fname);
+        }
+    }
+
+    return true;
+}
+
+//-----------------------------------------------------------------------------
 // wxGDIPlusFont implementation
 //-----------------------------------------------------------------------------
 
@@ -897,7 +939,31 @@ void wxGDIPlusBrushData::Init()
                         const wxColour& col,
                         Unit fontUnit)
 {
-    m_font = new Font(name.wc_str(), size, style, fontUnit);
+    // If the user has registered any private fonts, they should be used in
+    // preference to any system-wide ones.
+    m_font = NULL;
+    if ( gs_privateFonts )
+    {
+        const int count = gs_privateFonts->GetFamilyCount();
+
+        // We should find all the families, i.e. "found" should be "count".
+        int found = 0;
+        gs_privateFonts->GetFamilies(count, gs_pFontFamily, &found);
+
+        for ( int j = 0 ; j < found; j++ )
+        {
+            wchar_t familyName[LF_FACESIZE];
+            int rc = gs_pFontFamily[j].GetFamilyName(familyName);
+            if ( rc == 0 && lstrcmp(name, familyName) == 0 )
+            {
+                m_font = new Font(&gs_pFontFamily[j], size, style, fontUnit);
+                break;
+            }
+        }
+    }
+
+    if ( !m_font )
+        m_font = new Font(name, size, style, fontUnit);
 
     m_textBrush = new SolidBrush(wxColourToColor(col));
 }
@@ -1961,7 +2027,6 @@ bool wxGDIPlusRenderer::EnsureIsLoaded()
     if ( !EnsureIsLoaded() )                   \
         return (returnOnFail)
 
-
 void wxGDIPlusRenderer::Load()
 {
     GdiplusStartupInput input;
@@ -1970,6 +2035,20 @@ void wxGDIPlusRenderer::Load()
     {
         wxLogTrace("gdiplus", "successfully initialized GDI+");
         m_loaded = 1;
+
+        // Make private fonts available to GDI+, if any.
+        const int n = gs_privateFontFileNames.size();
+        if ( n )
+        {
+            gs_privateFonts = new Gdiplus::PrivateFontCollection();
+            for ( int i = 0 ; i < n; i++ )
+            {
+                const wxString& fname = gs_privateFontFileNames[i];
+                gs_privateFonts->AddFontFile(fname.t_str());
+            }
+
+            gs_pFontFamily = new Gdiplus::FontFamily[n];
+        }
     }
     else
     {
@@ -1984,6 +2063,15 @@ void wxGDIPlusRenderer::Unload()
     {
         GdiplusShutdown(m_gditoken);
         m_gditoken = 0;
+
+        if ( gs_privateFonts )
+        {
+            delete gs_privateFonts;
+            gs_privateFonts = NULL;
+
+            delete[] gs_pFontFamily;
+            gs_pFontFamily = NULL;
+        }
     }
     m_loaded = -1; // next Load() will try again
 }
diff --git a/src/osx/fontutil.cpp b/src/osx/fontutil.cpp
index 6e21a53..7364fc6 100644
--- a/src/osx/fontutil.cpp
+++ b/src/osx/fontutil.cpp
@@ -25,6 +25,8 @@
 #include "wx/fontutil.h"
 #include "wx/fontmap.h"
 #include "wx/encinfo.h"
+#include "wx/filename.h"
+#include "wx/stdpaths.h"
 #include "wx/tokenzr.h"
 
 
@@ -66,6 +68,42 @@ wxString wxNativeEncodingInfo::ToString() const
 }
 
 // ----------------------------------------------------------------------------
+// Private Fonts
+// ----------------------------------------------------------------------------
+
+// On OSX one can provide private fonts simply by putting the font files in
+// with the resources in your application bundle. So the API for adding fonts
+// does not do anything except checking that the file you pass to it actually
+// does exist and is in the correct directory.
+
+bool wxFontBase::AddPrivateFont(const wxString& filename)
+{
+    wxFileName fn(filename);
+    if ( !fn.FileExists() )
+    {
+        wxLogError(_("Font file \"%s\" doesn't exist."), filename);
+        return false;
+    }
+
+    wxString fontsDir;
+    fontsDir << wxStandardPaths::Get().GetResourcesDir() << ;
+    if ( fn.GetPath() != fontsDir )
+    {
+        wxLogError(_("Font file \"%s\" cannot be used as it is not inside "
+                     "the font directory \"%s\"."), filename, fontsDir);
+        return false;
+    }
+
+    return true;
+}
+
+bool wxFontBase::ActivatePrivateFonts()
+{
+    // Nothing to do here.
+    return true;
+}
+
+// ----------------------------------------------------------------------------
 // helper functions
 // ----------------------------------------------------------------------------
 
