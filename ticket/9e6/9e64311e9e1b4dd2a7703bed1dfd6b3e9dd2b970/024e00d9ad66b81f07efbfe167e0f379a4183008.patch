Index: tests/datetime/datetimetest.cpp
===================================================================
--- tests/datetime/datetimetest.cpp	(revision 56152)
+++ tests/datetime/datetimetest.cpp	(working copy)
@@ -26,7 +26,7 @@
 #include "wx/ioswrap.h"
 
 // need this to be able to use CPPUNIT_ASSERT_EQUAL with wxDateTime objects
-static wxSTD ostream& operator<<(wxSTD ostream& ostr, const wxDateTime& dt)
+static std::ostream& operator<<(std::ostream& ostr, const wxDateTime& dt)
 {
     ostr << dt.FormatISODate() << " " << dt.FormatISOTime();
 
Index: tests/filename/filenametest.cpp
===================================================================
--- tests/filename/filenametest.cpp	(revision 56152)
+++ tests/filename/filenametest.cpp	(working copy)
@@ -290,7 +290,7 @@
     {
         const wxChar *original;
         int flags;
-        wxString expected;
+        const wxChar * expected;
     } tests[] =
     {
         // test wxPATH_NORM_ENV_VARS
@@ -335,7 +335,7 @@
         );
 
         // compare result with expected string
-        CPPUNIT_ASSERT_EQUAL( tests[i].expected, fn.GetFullPath(wxPATH_UNIX) );
+        CPPUNIT_ASSERT_EQUAL( wxString(tests[i].expected), fn.GetFullPath(wxPATH_UNIX) );
     }
 }
 
Index: tests/geometry/rect.cpp
===================================================================
--- tests/geometry/rect.cpp	(revision 56152)
+++ tests/geometry/rect.cpp	(working copy)
@@ -28,7 +28,7 @@
 // ----------------------------------------------------------------------------
 
 // this operator is needed to use CPPUNIT_ASSERT_EQUAL with wxRects
-wxSTD ostream& operator<<(wxSTD ostream& os, const wxRect& r)
+std::ostream& operator<<(std::ostream& os, const wxRect& r)
 {
     os << "{"
         << r.x << ", " << r.y << ", " << r.width << ", " << r.height
Index: tests/streams/fileback.cpp
===================================================================
--- tests/streams/fileback.cpp	(revision 56152)
+++ tests/streams/fileback.cpp	(working copy)
@@ -18,6 +18,15 @@
     #include "wx/wx.h"
 #endif
 
+
+// need this to be able to use CPPUNIT_ASSERT_EQUAL with wxFileOffset objects
+static std::ostream& operator<<(std::ostream& ostr, const wxFileOffset& fo)
+{
+    ostr << fo;
+    return ostr;
+}
+
+
 #include "wx/mstream.h"
 #include "wx/private/fileback.h"
 #include "bstream.h"
Index: tests/textfile/textfiletest.cpp
===================================================================
--- tests/textfile/textfiletest.cpp	(revision 56152)
+++ tests/textfile/textfiletest.cpp	(working copy)
@@ -64,7 +64,7 @@
     // create the test file with the given contents
     static void CreateTestFile(const char *contents)
     {
-        return CreateTestFile(strlen(contents), contents);
+        CreateTestFile(strlen(contents), contents);
     }
 
     // create the test file with the given contents (version must be used if
