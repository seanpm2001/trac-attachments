Index: interface/wx/msgdlg.h
===================================================================
--- interface/wx/msgdlg.h	(revision 55034)
+++ interface/wx/msgdlg.h	(working copy)
@@ -10,7 +10,8 @@
     @class wxMessageDialog
 
     This class represents a dialog that shows a single or multi-line message,
-    with a choice of OK, Yes, No and Cancel buttons.
+    with a choice of OK, Yes, No and Cancel buttons. Alternatively, buttons with
+    custom labels can be used.
 
     @library{wxcore}
     @category{cmndlg}
@@ -79,6 +80,29 @@
                     const wxPoint& pos = wxDefaultPosition);
 
     /**
+        @param parent
+            Parent window.
+        @param message
+            Message to show in the dialog.
+        @param buttons
+            An array containing one to three custom button labels.
+        @param defaultButton
+            The array index for the default button.
+        @param caption
+            The dialog title.
+        @param style
+            Combination of style flags described above.
+        @param pos
+            Dialog position (ignored under MSW).
+    */
+    wxMessageDialog(wxWindow *parent,
+                    const wxString& message,
+                    const wxArrayString &buttons,
+                    int defaultButton,
+                    const wxString& caption,
+                    long style);
+
+    /**
         Sets the extended message for the dialog: this message is usually an
         extension of the short message specified in the constructor or set with
         SetMessage().
Index: include/wx/msgdlg.h
===================================================================
--- include/wx/msgdlg.h	(revision 55034)
+++ include/wx/msgdlg.h	(working copy)
@@ -36,6 +36,22 @@
         SetMessageDialogStyle(style);
     }
 
+    wxMessageDialogBase(wxWindow *parent,
+                        const wxString& message,
+                        const wxArrayString &buttons,
+                        int defaultButton,
+                        const wxString& caption,
+                        long style)
+        : m_message(message),
+          m_caption(caption),
+          m_buttons(buttons),
+          m_defaultButton(defaultButton)
+    {
+        m_parent = parent;
+        wxASSERT(defaultButton < buttons.GetCount());
+        SetMessageDialogStyle(style);
+    }
+
     // virtual dtor for the base class
     virtual ~wxMessageDialogBase() { }
 
@@ -106,6 +122,8 @@
     wxString m_message,
              m_extendedMessage,
              m_caption;
+    const wxArrayString m_buttons;
+    int m_defaultButton;
     long m_dialogStyle;
 };
 
@@ -141,6 +159,14 @@
                              wxWindow *parent = NULL,
                              int x = wxDefaultCoord, int y = wxDefaultCoord);
 
+int WXDLLIMPEXP_CORE wxMessageBox(const wxString& message,
+                             const wxArrayString &buttons,
+                             int defaultButton = 0,
+                             const wxString& caption = wxMessageBoxCaptionStr,
+                             long style = wxCENTRE,
+                             wxWindow *parent = NULL,
+                             int x = wxDefaultCoord, int y = wxDefaultCoord);
+
 #endif // wxUSE_MSGDLG
 
 #endif // _WX_MSGDLG_H_BASE_
Index: src/common/utilscmn.cpp
===================================================================
--- src/common/utilscmn.cpp	(revision 55034)
+++ src/common/utilscmn.cpp	(working copy)
@@ -1424,6 +1424,34 @@
     return wxCANCEL;
 }
 
+// FIXME: Contains duplicated code from above.
+int wxMessageBox(const wxString& message, const wxArrayString &buttons,
+                 int defaultButton,
+                 const wxString& caption, long style,
+                 wxWindow *parent, int WXUNUSED(x), int WXUNUSED(y) )
+{
+    long decorated_style = style;
+
+    if ( ( style & ( wxICON_EXCLAMATION | wxICON_HAND | wxICON_INFORMATION | wxICON_QUESTION ) ) == 0 )
+    {
+        decorated_style |= ( style & wxYES ) ? wxICON_QUESTION : wxICON_INFORMATION ;
+    }
+
+    wxMessageDialog dialog(parent, message, buttons, defaultButton, caption, decorated_style);
+
+    int ans = dialog.ShowModal();
+
+    if(ans == wxID_CANCEL)
+        return -1;
+    else
+        return ans;
+
+    wxFAIL_MSG( _T("unexpected return code from wxMessageDialog") );
+
+    return wxCANCEL;
+}
+
+
 void wxInfoMessageBox(wxWindow* parent)
 {
     // don't translate these strings, they're for diagnostics purposes only
Index: samples/minimal/minimal.cpp
===================================================================
--- samples/minimal/minimal.cpp	(revision 55034)
+++ samples/minimal/minimal.cpp	(working copy)
@@ -185,6 +185,13 @@
 
 void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
 {
+    wxArrayString buttons;
+    buttons.Add("&Don't save");
+    buttons.Add("&Save");
+    buttons.Add("&Panic");
+
+    // ATTENTION: Do not commit this patched file to svn.
+#if 0
     wxMessageBox(wxString::Format
                  (
                     "Welcome to %s!\n"
@@ -195,6 +202,23 @@
                     wxGetOsDescription()
                  ),
                  "About wxWidgets minimal sample",
-                 wxOK | wxICON_INFORMATION,
-                 this);
+                 wxICON_INFORMATION | wxNO_DEFAULT | wxYES_NO,
+                              this);
+
+#endif
+
+    int retval = wxMessageBox(wxString::Format
+                 (
+                    "Welcome to %s!\n"
+                    "\n"
+                    "This is the minimal wxWidgets sample\n"
+                    "running under %s.",
+                    wxVERSION_STRING,
+                    wxGetOsDescription()
+                 ),
+                 buttons, 1,
+                 "About wxWidgets minimal sample",
+                 wxICON_INFORMATION,
+                              this);
+    wxLogMessage("Retval: %d", retval);
 }
