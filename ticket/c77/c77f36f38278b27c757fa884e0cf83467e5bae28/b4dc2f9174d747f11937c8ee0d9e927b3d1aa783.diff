Index: include/wx/gtk/msgdlg.h
===================================================================
--- include/wx/gtk/msgdlg.h	(revision 55034)
+++ include/wx/gtk/msgdlg.h	(working copy)
@@ -20,6 +20,13 @@
                     long style = wxOK|wxCENTRE,
                     const wxPoint& pos = wxDefaultPosition);
 
+    wxMessageDialog(wxWindow *parent, const wxString& message,
+                    const wxArrayString &buttons,
+                    int defaultButton = 0,
+                    const wxString& caption = wxMessageBoxCaptionStr,
+                    long style = wxCENTRE,
+                    const wxPoint& pos = wxDefaultPosition);
+
     virtual int ShowModal();
     virtual bool Show( bool WXUNUSED(show) = true ) { return false; };
 
Index: src/gtk/msgdlg.cpp
===================================================================
--- src/gtk/msgdlg.cpp	(revision 55034)
+++ src/gtk/msgdlg.cpp	(working copy)
@@ -45,6 +45,22 @@
 {
 }
 
+wxMessageDialog::wxMessageDialog(wxWindow *parent,
+                                 const wxString& message,
+                                 const wxArrayString &buttons,
+                                 int defaultButton,
+                                 const wxString& caption,
+                                 long style,
+                                 const wxPoint& WXUNUSED(pos))
+               : wxMessageDialogBase(GetParentForModalDialog(parent),
+                                     message,
+                                     buttons,
+                                     defaultButton,
+                                     caption,
+                                     style)
+{
+}
+
 void wxMessageDialog::GTKCreateMsgDialog()
 {
     GtkWindow * const parent = m_parent ? GTK_WINDOW(m_parent->m_widget) : NULL;
@@ -76,6 +92,12 @@
     GtkMessageType type = GTK_MESSAGE_ERROR;
     GtkButtonsType buttons = GTK_BUTTONS_OK;
 
+    if (m_buttons.GetCount() > 0) {
+        wxASSERT_MSG(m_buttons.GetCount() <= 3,
+                     "More than three buttons in a dialog will probably not work on other platforms.");
+        buttons = GTK_BUTTONS_NONE;
+    }
+
     if (m_dialogStyle & wxYES_NO)
     {
         if (m_dialogStyle & wxCANCEL)
@@ -147,7 +169,15 @@
     // doesn't support it natively and when using Hildon we add all the buttons
     // manually as it doesn't support too many of the combinations we have
     GtkDialog * const dlg = GTK_DIALOG(m_widget);
-    if ( m_dialogStyle & wxYES_NO )
+    if ( m_buttons.GetCount() > 0) {
+        for(size_t x = 0; x < m_buttons.GetCount(); x++) {
+            wxString b(m_buttons[x]);
+            b.Replace('&', '_'); // FIXME: is this the correct way to do this?
+            gtk_dialog_add_button(dlg, wxGTK_CONV(b), x);
+        }
+        gtk_dialog_set_default_response(dlg, m_defaultButton);
+    }
+    else if ( m_dialogStyle & wxYES_NO )
     {
         if ( m_dialogStyle & wxCANCEL )
         {
@@ -209,7 +239,10 @@
     switch (result)
     {
         default:
-            wxFAIL_MSG(_T("unexpected GtkMessageDialog return code"));
+            if(m_buttons.GetCount() > 0)
+                return result;
+            else
+                wxFAIL_MSG(_T("unexpected GtkMessageDialog return code"));
             // fall through
 
         case GTK_RESPONSE_CANCEL:
