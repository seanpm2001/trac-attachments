diff -ruN wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/AttributePanel.py wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/AttributePanel.py
--- wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/AttributePanel.py	2010-04-29 15:49:26.000000000 -0400
+++ wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/AttributePanel.py	2011-03-08 02:02:23.000000000 -0500
@@ -191,7 +191,8 @@
 
         if comp.styles or comp.genericStyles:
             # Create style page
-            panel = params.StylePanel(self.pageStyle, comp.styles, comp.genericStyles)
+            panel = params.StylePanel(self.pageStyle, comp.styles, comp.genericStyles,
+                                      equiv = comp.equivStyles)
             panels.append(panel)
             self.pageStyle.SetPanel(panel)
             self.nb.AddPage(self.pageStyle, 'Style')
@@ -200,7 +201,7 @@
         if comp.exStyles or comp.genericExStyles:
             # Create extra style page
             panel = params.StylePanel(self.pageExStyle, comp.exStyles + comp.genericExStyles, 
-                                      tag='exstyle')
+                                      tag='exstyle', equiv = comp.equivStyles)
             panels.append(panel)
             self.pageExStyle.SetPanel(panel)
             self.nb.AddPage(self.pageExStyle, 'ExStyle')
@@ -272,9 +273,7 @@
     def SetStyleValues(self, panel, style):
         panel.style = style
         panel.node = self.node
-        styles = map(string.strip, style.split('|')) # to list
-        for s,w in panel.controls:
-            w.SetValue(s in styles)
+        panel.SetValues([('XRCED', style)])
 
     # Set data for a style panel
     def SetCodeValues(self, panel, data):
diff -ruN wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/attribute.py wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/attribute.py
--- wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/attribute.py	2010-04-29 15:49:26.000000000 -0400
+++ wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/attribute.py	2011-03-08 18:24:58.000000000 -0500
@@ -67,7 +67,11 @@
     def add(parentNode, attribute, value):
         contentElem = Model.dom.createElement(attribute)
         parentNode.appendChild(contentElem)
-        for checked,item in value:
+        for item in value:
+            try:
+                checked, item = eval(item, {})
+            except:
+                checked = False
             elem = Model.dom.createElement('item')
             if checked:
                 elem.setAttribute('checked', '1')
@@ -84,6 +88,37 @@
                 value.append((checked, Attribute.get(n)))
         return value
 
+class HelpContentAttribute:
+    '''RadioBox content.  Value is a list of tuples (string, tooltip, help).'''
+    @staticmethod
+    def add(parentNode, attribute, value):
+        contentElem = Model.dom.createElement(attribute)
+        parentNode.appendChild(contentElem)
+        for item in value:
+            try:
+                item, tooltip, helptext = eval(item, {})
+            except:
+                tooltip = helptext = ''
+            elem = Model.dom.createElement('item')
+            if tooltip:
+                elem.setAttribute('tooltip', tooltip)
+            if helptext:
+                elem.setAttribute('helptext', helptext)
+            text = Model.dom.createTextNode(item)
+            elem.appendChild(text)
+            contentElem.appendChild(elem)
+    @staticmethod
+    def get(node):
+        if node is None: return []
+        value = []
+        for n in node.childNodes:
+            if n.nodeType == node.ELEMENT_NODE and n.tagName == 'item':
+                tooltip = n.getAttribute('tooltip')
+                helptext = n.getAttribute('helptext')
+                value.append((Attribute.get(n), tooltip, helptext))
+        return value
+    
+
 class DictAttribute:
     '''DictAttribute uses dictionary object for passing data.'''
     attributes = []
diff -ruN wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/component.py wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/component.py
--- wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/component.py	2011-03-07 22:56:57.000000000 -0500
+++ wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/component.py	2011-03-08 04:22:17.000000000 -0500
@@ -44,12 +44,12 @@
                         '!frame', '!mdi_child_frame'],
     'wizard': ['wizard_page'],
     'window': ['control', 'window', 'sizer', 'btnsizer', '!frame', '!mdi_child_frame'],
-    'sizer': ['control', 'sizer', 'btnsizer', 'spacer'],
+    'sizer': ['control', 'sizer', 'btnsizer', 'spacer', 'toolbar'],
     'book': ['control', 'window', '!sizer', '!btnsizer'],
     'btnsizer': ['stdbtn'],
     'menubar': ['menu'],
     'toolbar': ['tool', 'separator'],
-    'menu': ['menu', 'menu_item', 'separator'],
+    'menu': ['menu', 'menu_item', 'separator', 'break'],
 }
 '''
 Definition of compatibility of component groups as I{key}:I{group_list} pairs, where
@@ -67,11 +67,21 @@
                         'enabled', 'focused', 'hidden']
     '''Default window attributes for window-like components.'''
     genericStyles = [
-        'wxSIMPLE_BORDER', 'wxSUNKEN_BORDER', 'wxDOUBLE_BORDER',
-        'wxRAISED_BORDER', 'wxSTATIC_BORDER', 'wxNO_BORDER',
+        'wxBORDER_SIMPLE', 'wxBORDER_SUNKEN', 'wxBORDER_THEME',
+        'wxBORDER_RAISED', 'wxBORDER_STATIC', 'wxBORDER_NONE',
         'wxCLIP_CHILDREN', 'wxTRANSPARENT_WINDOW', 'wxWANTS_CHARS',
-        'wxNO_FULL_REPAINT_ON_RESIZE', 'wxFULL_REPAINT_ON_RESIZE'
+        'wxNO_FULL_REPAINT_ON_RESIZE', 'wxFULL_REPAINT_ON_RESIZE',
+        'wxTAB_TRANSVERSAL', 'wxALWAYS_SHOW_SB',
+        # deprecated
+        'wxBORDER_DOUBLE'
         ]
+    '''Default style flag equivalents'''
+    equivStyles = {'wxBORDER_SIMPLE': 'wxSIMPLE_BORDER',
+             'wxBORDER_SUNKEN': 'wxSUNKEN_BORDER',
+             'wxBORDER_DOUBLE': 'wxDOUBLE_BORDER',
+             'wxBORDER_RAISED': 'wxRAISED_BORDER',
+             'wxBORDER_STATIC': 'wxSTATIC_BORDER',
+             'wxBORDER_NONE': 'wxNO_BORDER'}
     '''Default generic styles.'''
     genericExStyles = [
         'wxWS_EX_VALIDATE_RECURSIVELY',
@@ -161,6 +171,10 @@
         '''Add more extra styles.'''
         self.exStyles.extend(styles)
 
+    def addEquivStyles(self, equiv):
+        '''Add more style equivalencies'''
+        self.equivStyles.update(equiv)
+
     def setSpecial(self, attrName, attrClass):
         '''Set special attribute class for processing XML.
 
@@ -310,13 +324,13 @@
                 # Style and exstyle are not in attributes and can be treated specially
                 if a == 'style':
                     styles = self.getAttribute(srcNode, a).split('|')
-                    allStyles = dstComp.styles + self.genericStyles
+                    allStyles = dstComp.styles + self.genericStyles + self.equivStyles.values()
                     dstStyles = [s for s in styles if s.strip() in allStyles]
                     if dstStyles:
                         dstComp.addAttribute(dstNode, a, '|'.join(dstStyles))
                 elif a == 'exstyle':
                     styles = self.getAttribute(srcNode, a).split('|')
-                    allStyles = dstComp.exStyles + self.genericExStyles
+                    allStyles = dstComp.exStyles + self.genericExStyles + self.equivStyles.values()
                     dstStyles = [s for s in styles if s.strip() in allStyles]
                     if dstStyles:
                         dstComp.addAttribute(dstNode, a, '|'.join(dstStyles))
diff -ruN wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/params.py wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/params.py
--- wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/params.py	2010-04-29 15:49:26.000000000 -0400
+++ wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/params.py	2011-03-08 18:03:43.000000000 -0500
@@ -443,16 +443,19 @@
         self.GetSizer().Fit(self)
         # Callbacks
         self.ID_BUTTON_APPEND = xrc.XRCID('BUTTON_APPEND')
+        self.ID_BUTTON_EDIT = xrc.XRCID('BUTTON_EDIT')
         self.ID_BUTTON_REMOVE = xrc.XRCID('BUTTON_REMOVE')
         self.ID_BUTTON_UP = xrc.XRCID('BUTTON_UP')
         self.ID_BUTTON_DOWN = xrc.XRCID('BUTTON_DOWN')
         wx.EVT_BUTTON(self, self.ID_BUTTON_UP, self.OnButtonUp)
         wx.EVT_BUTTON(self, self.ID_BUTTON_DOWN, self.OnButtonDown)
         wx.EVT_BUTTON(self, self.ID_BUTTON_APPEND, self.OnButtonAppend)
+        wx.EVT_BUTTON(self, self.ID_BUTTON_EDIT, self.OnButtonEdit)
         wx.EVT_BUTTON(self, self.ID_BUTTON_REMOVE, self.OnButtonRemove)
         wx.EVT_UPDATE_UI(self, self.ID_BUTTON_UP, self.OnUpdateUI)
         wx.EVT_UPDATE_UI(self, self.ID_BUTTON_DOWN, self.OnUpdateUI)
         wx.EVT_UPDATE_UI(self, self.ID_BUTTON_REMOVE, self.OnUpdateUI)
+        wx.EVT_UPDATE_UI(self, self.ID_BUTTON_EDIT, self.OnUpdateUI)
     def OnButtonUp(self, evt):
         i = self.list.GetSelection()
         str = self.list.GetString(i)
@@ -468,10 +471,14 @@
     def OnButtonAppend(self, evt):
         str = wx.GetTextFromUser('Enter new item:', 'Append', '', self)
         self.list.Append(str)
+    def OnButtonEdit(self, evt):
+        i = self.list.GetSelection()
+        str = wx.GetTextFromUser('Edit item:', 'Change', self.list.GetString(i), self)
+        self.list.SetString(i, str)
     def OnButtonRemove(self, evt):
         self.list.Delete(self.list.GetSelection())
     def OnUpdateUI(self, evt):
-        if evt.GetId() == self.ID_BUTTON_REMOVE:
+        if evt.GetId() == self.ID_BUTTON_REMOVE or evt.GetId() == self.ID_BUTTON_EDIT:
             evt.Enable(self.list.GetSelection() != -1)
         elif evt.GetId() == self.ID_BUTTON_UP:
             evt.Enable(self.list.GetSelection() > 0)
@@ -488,7 +495,7 @@
         self.list = xrc.XRCCTRL(self, 'CHECK_LIST')
         # Set list items
         i = 0
-        for v,ch in value:
+        for ch,v in value:
             self.list.Append(v)
             self.list.Check(i, ch)
             i += 1
@@ -496,6 +503,7 @@
         self.GetSizer().Fit(self)
         # Callbacks
         self.ID_BUTTON_APPEND = xrc.XRCID('BUTTON_APPEND')
+        self.ID_BUTTON_EDIT = xrc.XRCID('BUTTON_EDIT')
         self.ID_BUTTON_REMOVE = xrc.XRCID('BUTTON_REMOVE')
         self.ID_BUTTON_UP = xrc.XRCID('BUTTON_UP')
         self.ID_BUTTON_DOWN = xrc.XRCID('BUTTON_DOWN')
@@ -503,10 +511,12 @@
         wx.EVT_BUTTON(self, self.ID_BUTTON_UP, self.OnButtonUp)
         wx.EVT_BUTTON(self, self.ID_BUTTON_DOWN, self.OnButtonDown)
         wx.EVT_BUTTON(self, self.ID_BUTTON_APPEND, self.OnButtonAppend)
+        wx.EVT_BUTTON(self, self.ID_BUTTON_EDIT, self.OnButtonEdit)
         wx.EVT_BUTTON(self, self.ID_BUTTON_REMOVE, self.OnButtonRemove)
         wx.EVT_UPDATE_UI(self, self.ID_BUTTON_UP, self.OnUpdateUI)
         wx.EVT_UPDATE_UI(self, self.ID_BUTTON_DOWN, self.OnUpdateUI)
         wx.EVT_UPDATE_UI(self, self.ID_BUTTON_REMOVE, self.OnUpdateUI)
+        wx.EVT_UPDATE_UI(self, self.ID_BUTTON_EDIT, self.OnUpdateUI)
     def OnCheck(self, evt):
         # !!! Wrong wxGTK (wxMSW?) behavior: toggling selection if checking
         self.list.Deselect(evt.GetSelection())
@@ -527,10 +537,14 @@
     def OnButtonAppend(self, evt):
         str = wx.GetTextFromUser('Enter new item:', 'Append', '', self)
         self.list.Append(str)
+    def OnButtonEdit(self, evt):
+        i = self.list.GetSelection()
+        str = wx.GetTextFromUser('Edit item:', 'Change', self.list.GetString(i), self)
+        self.list.SetString(i, str)
     def OnButtonRemove(self, evt):
         self.list.Delete(self.list.GetSelection())
     def OnUpdateUI(self, evt):
-        if evt.GetId() == self.ID_BUTTON_REMOVE:
+        if evt.GetId() == self.ID_BUTTON_REMOVE or evt.GetId() == self.ID_BUTTON_EDIT:
             evt.Enable(self.list.GetSelection() != -1)
         elif evt.GetId() == self.ID_BUTTON_UP:
             evt.Enable(self.list.GetSelection() > 0)
@@ -538,6 +552,92 @@
             evt.Enable(self.list.GetSelection() != -1 and \
                        self.list.GetSelection() < self.list.GetCount() - 1)
 
+class ContentHelpListDialog(wx.Dialog):
+    '''Dialog for editing content attributes with help text.'''
+    def __init__(self, parent, value):
+        pre = wx.PreDialog()
+        g.res.LoadOnDialog(pre, parent, 'DIALOG_CONTENT_HELPLIST')
+        self.PostCreate(pre)
+        self.list = xrc.XRCCTRL(self, 'LIST')
+        self.list.InsertColumn(0, 'label')
+        self.list.InsertColumn(1, 'tooltip')
+        self.list.InsertColumn(2, 'help text')
+        # Set list items
+        i = 0
+        for v,t,h in value:
+            self.list.InsertStringItem(i, v)
+            self.list.SetStringItem(i, 1, t)
+            self.list.SetStringItem(i, 2, h)
+            i += 1
+        self.SetAutoLayout(True)
+        self.GetSizer().Fit(self)
+        # Callbacks
+        self.ID_BUTTON_APPEND = xrc.XRCID('BUTTON_APPEND')
+        self.ID_BUTTON_EDIT = xrc.XRCID('BUTTON_EDIT')
+        self.ID_BUTTON_REMOVE = xrc.XRCID('BUTTON_REMOVE')
+        self.ID_BUTTON_UP = xrc.XRCID('BUTTON_UP')
+        self.ID_BUTTON_DOWN = xrc.XRCID('BUTTON_DOWN')
+        wx.EVT_BUTTON(self, self.ID_BUTTON_UP, self.OnButtonUp)
+        wx.EVT_BUTTON(self, self.ID_BUTTON_DOWN, self.OnButtonDown)
+        wx.EVT_BUTTON(self, self.ID_BUTTON_APPEND, self.OnButtonAppend)
+        wx.EVT_BUTTON(self, self.ID_BUTTON_EDIT, self.OnButtonEdit)
+        wx.EVT_BUTTON(self, self.ID_BUTTON_REMOVE, self.OnButtonRemove)
+        wx.EVT_UPDATE_UI(self, self.ID_BUTTON_UP, self.OnUpdateUI)
+        wx.EVT_UPDATE_UI(self, self.ID_BUTTON_DOWN, self.OnUpdateUI)
+        wx.EVT_UPDATE_UI(self, self.ID_BUTTON_REMOVE, self.OnUpdateUI)
+        wx.EVT_UPDATE_UI(self, self.ID_BUTTON_EDIT, self.OnUpdateUI)
+    def OnButtonUp(self, evt):
+        i = self.list.GetNextItem(-1, state = wx.LIST_STATE_SELECTED)
+        v, t, h  = self.list.GetItem(i, 0), self.list.GetItem(i, 1), self.list.GetItem(i, 2)
+        self.list.DeleteItem(i)
+        i = self.list.InsertStringItem(i-1, v.GetText())
+        self.list.SetStringItem(i, 1, t.GetText())
+        self.list.SetStringItem(i, 2, h.GetText())
+        self.list.SetItemState(i, wx.LIST_STATE_SELECTED, wx.LIST_STATE_SELECTED)
+    def OnButtonDown(self, evt):
+        i = self.list.GetNextItem(-1, state = wx.LIST_STATE_SELECTED)
+        v, t, h  = self.list.GetItem(i, 0), self.list.GetItem(i, 1), self.list.GetItem(i, 2)
+        self.list.DeleteItem(i)
+        i = self.list.InsertStringItem(i+1, v.GetText())
+        self.list.SetStringItem(i, 1, t.GetText())
+        self.list.SetStringItem(i, 2, h.GetText())
+        self.list.SetItemState(i, wx.LIST_STATE_SELECTED, wx.LIST_STATE_SELECTED)
+    def OnButtonAppend(self, evt):
+        dlg = g.res.LoadDialog(self, 'DIALOG_HELPTEXT')
+        v = xrc.XRCCTRL(dlg, 'TEXT')
+        t = xrc.XRCCTRL(dlg, 'TOOLTIP')
+        h = xrc.XRCCTRL(dlg, 'HELPTEXT')
+        if dlg.ShowModal() == wx.ID_OK:
+            i = self.list.GetItemCount()
+            self.list.InsertStringItem(i, v.GetValue())
+            self.list.SetStringItem(i, 1, t.GetValue())
+            self.list.SetStringItem(i, 2, h.GetValue())
+        dlg.Destroy()
+    def OnButtonEdit(self, evt):
+        s = self.list.GetNextItem(-1, state = wx.LIST_STATE_SELECTED)
+        dlg = g.res.LoadDialog(self, 'DIALOG_HELPTEXT')
+        v = xrc.XRCCTRL(dlg, 'TEXT')
+        t = xrc.XRCCTRL(dlg, 'TOOLTIP')
+        h = xrc.XRCCTRL(dlg, 'HELPTEXT')
+        v.SetValue(self.list.GetItem(s, 0).GetText())
+        t.SetValue(self.list.GetItem(s, 1).GetText())
+        h.SetValue(self.list.GetItem(s, 2).GetText())
+        if dlg.ShowModal() == wx.ID_OK:
+            self.list.SetStringItem(s, 0, v.GetValue())
+            self.list.SetStringItem(s, 1, t.GetValue())
+            self.list.SetStringItem(s, 2, h.GetValue())
+        dlg.Destroy()
+    def OnButtonRemove(self, evt):
+        self.list.DeleteItem(self.list.GetNextItem(-1, state = wx.LIST_STATE_SELECTED))
+    def OnUpdateUI(self, evt):
+        s = self.list.GetNextItem(-1, state = wx.LIST_STATE_SELECTED)
+        if evt.GetId() == self.ID_BUTTON_REMOVE or evt.GetId() == self.ID_BUTTON_EDIT:
+            evt.Enable(s != -1)
+        elif evt.GetId() == self.ID_BUTTON_UP:
+            evt.Enable(s > 0)
+        elif evt.GetId() == self.ID_BUTTON_DOWN:
+            evt.Enable(s != -1 and s < self.list.GetItemCount() - 1)
+
 class ParamContent(PPanel):
     '''Editing of content attribute.'''
     def __init__(self, parent, name):
@@ -592,16 +692,31 @@
         if dlg.ShowModal() == wx.ID_OK:
             value = []
             for i in range(dlg.list.GetCount()):
-                value.append((dlg.list.GetString(i), int(dlg.list.IsChecked(i))))
+                value.append((bool(dlg.list.IsChecked(i)), dlg.list.GetString(i)))
+            self.SetValue(value)
+            Presenter.setApplied(False)
+            self.textModified = False
+        dlg.Destroy()
+
+# RadioBox content
+class ParamContentHelpList(ParamContent):
+    '''Editing of content attribute with help text.'''
+    def __init__(self, parent, name):
+        ParamContent.__init__(self, parent, name)
+    def OnButtonEdit(self, evt):
+        if self.textModified:           # text has newer value
+            self.value = self.GetValue()
+        dlg = ContentHelpListDialog(self, self.value)
+        if dlg.ShowModal() == wx.ID_OK:
+            value = []
+            for i in range(dlg.list.GetItemCount()):
+                value.append((dlg.list.GetItem(i, 0).GetText(),
+                              dlg.list.GetItem(i, 1).GetText(),
+                              dlg.list.GetItem(i, 2).GetText()))
             self.SetValue(value)
             Presenter.setApplied(False)
             self.textModified = False
         dlg.Destroy()
-    def SetValue(self, value):
-        if not value: value = []
-        self.value = value
-        repr_ = '|'.join(map(str,value))
-        self.text.ChangeValue(repr_)  # update text ctrl
 
 class IntListDialog(wx.Dialog):
     '''Dialog for editing integer lists.'''
@@ -904,12 +1019,14 @@
 
 class StylePanel(wx.Panel):
     '''Style panel.'''
-    def __init__(self, parent, styles, genericStyles=[], tag='style'):
+    equivStyles = []
+    def __init__(self, parent, styles, genericStyles=[], tag='style', equiv={}):
         wx.Panel.__init__(self, parent, -1)
         self.SetFont(g.smallerFont())
         self.node = None
         self.controls = []
         self.tag = tag
+        self.equivStyles = equiv
         topSizer = wx.BoxSizer(wx.HORIZONTAL)
         if genericStyles:
             # Generic styles
@@ -948,9 +1065,9 @@
         return [(self.tag, '|'.join(checked))]
 
     def SetValues(self, values):
-        styles = values[0][1].split('|')
+        styles = map(string.strip, values[0][1].split('|'))
         for s,check in self.controls:
-            check.SetValue(s in styles)
+            check.SetValue(s in styles or (self.equivStyles.has_key(s) and self.equivStyles[s] in styles))
 
     def OnCheck(self, evt):
         Presenter.setApplied(False)
diff -ruN wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugin.py wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugin.py
--- wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugin.py	2011-03-07 22:56:57.000000000 -0500
+++ wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugin.py	2011-03-07 22:57:13.000000000 -0500
@@ -30,7 +30,7 @@
     dir = os.path.abspath(os.path.normpath(dir))
     TRACE('* load_plugins from %s' % dir)
     os.chdir(dir)
-    sys.path = sys_path + [dir]
+    sys.path = [dir] + sys_path
     try:                                # try/finally shield
         ff_py = glob.glob('[!_]*.py')
         for f in ff_py:
diff -ruN wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/controls.py wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/controls.py
--- wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/controls.py	2011-03-07 22:56:57.000000000 -0500
+++ wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/controls.py	2011-03-08 18:55:50.000000000 -0500
@@ -39,13 +39,22 @@
               image=images.TreeStaticBitmap.GetImage())
 c.setSpecial('bitmap', attribute.BitmapAttribute)
 component.Manager.register(c)
-component.Manager.setMenu(c, 'control', 'bitmap', 'wxStaticLine', 30)
+component.Manager.setMenu(c, 'control', 'bitmap', 'wxStaticBitmap', 30)
 component.Manager.setTool(c, 'Controls', pos=(1,0))
 
+### wxAnimationCtrl
+
+c = component.Component('wxStaticBitmap', ['control','tool'],
+              ['pos', 'size', 'animation', 'inactive-bitmap'])
+c.addStyles('wxAC_NO_AUTORESIZE', 'wxAC_DEFAULT_STYLE')
+c.setSpecial('inactive-bitmap', attribute.BitmapAttribute)
+component.Manager.register(c)
+component.Manager.setMenu(c, 'control', 'animation', 'wxAnimationCtrl', 30)
+
 ### wxTextCtrl
 
 c = component.Component('wxTextCtrl', ['control','tool'],
-              ['pos', 'size', 'value'],
+              ['pos', 'size', 'value', 'maxlength'],
               image=images.TreeTextCtrl.GetImage())
 c.addStyles('wxTE_NO_VSCROLL',
             'wxTE_AUTO_SCROLL',
@@ -72,6 +81,21 @@
 component.Manager.setMenu(c, 'control', 'text ctrl', 'wxTextCtrl', 40)
 component.Manager.setTool(c, 'Controls', pos=(0,2))
 
+#### wxRichTextCtrl
+#
+#c = component.Component('wxRichTextCtrl', ['control','tool'],
+#              ['pos', 'size', 'value', 'maxlength'],
+#              image=images.TreeTextCtrl.GetImage())
+#c.addStyles('wxTE_PROCESS_ENTER',
+#            'wxTE_PROCESS_TAB',
+#            'wxTE_MULTILINE',
+#            'wxTE_READONLY',
+#            'wxTE_AUTO_URL')
+#c.setParamClass('value', params.ParamMultilineText)
+#c.addEvents('EVT_TEXT', 'EVT_TEXT_ENTER', 'EVT_TEXT_URL', 'EVT_TEXT_MAXLEN')
+#component.Manager.register(c)
+#component.Manager.setMenu(c, 'control', 'rich text ctrl', 'wxTRichextCtrl', 41)
+#
 ### wxChoice
 
 c = component.Component('wxChoice', ['control','tool'],
@@ -119,7 +143,7 @@
 c = component.Component('wxGauge', ['control','tool'],
               ['pos', 'size', 'range', 'value', 'shadow', 'bezel'],
               image=images.TreeGauge.GetImage())
-c.addStyles('wxGA_HORIZONTAL', 'wxGA_VERTICAL', 'wxGA_PROGRESSBAR', 'wxGA_SMOOTH')
+c.addStyles('wxGA_HORIZONTAL', 'wxGA_VERTICAL', 'wxGA_SMOOTH')
 c.setParamClass('range', params.ParamIntNN)
 c.setParamClass('value', params.ParamIntNN)
 c.setParamClass('shadow', params.ParamUnit)
@@ -277,19 +301,45 @@
               ['pos', 'size', 'value', 'message', 'wildcard'])
 c.addStyles('wxFLP_OPEN', 'wxFLP_SAVE', 'wxFLP_OVERWRITE_PROMPT',
             'wxFLP_FILE_MUST_EXIST', 'wxFLP_CHANGE_DIR',
-            'wxFLP_DEFAULT_STYLE')
+            'wxFLP_DEFAULT_STYLE', 'wxFLP_USE_TEXTCTRL')
 component.Manager.register(c)
 component.Manager.setMenu(c, 'control', 'file picker ctrl', 'wxFilePickerCtrl', 170)
 component.Manager.setTool(c, 'Controls', pos=(4,2))
 
+### wxDirPickerCtrl
+
+c = component.Component('wxDirPickerCtrl', ['control'],
+              ['pos', 'size', 'value', 'message', 'wildcard'])
+c.addStyles('wxDIRP_USE_TEXTCTRL',
+            'wxDIRP_DIR_MUST_EXIST', 'wxDIRP_CHANGE_DIR',
+            'wxDIRP_DEFAULT_STYLE')
+component.Manager.register(c)
+component.Manager.setMenu(c, 'control', 'dir picker ctrl', 'wxDirPickerCtrl', 171)
+
 ### wxDatePickerCtrl
 
-c = component.Component('wxDatePickerCtrl', ['control'], ['pos', 'size', 'borders'])
+c = component.Component('wxDatePickerCtrl', ['control'], ['pos', 'size'])
 c.addStyles('wxDP_DEFAULT', 'wxDP_SPIN', 'wxDP_DROPDOWN',
             'wxDP_ALLOWNONE', 'wxDP_SHOWCENTURY')
 component.Manager.register(c)
 component.Manager.setMenu(c, 'control', 'date picker ctrl', 'wxDateCtrl', 180)
 
+### wxFontPickerCtrl
+
+c = component.Component('wxFontPickerCtrl', ['control'], ['pos', 'size', 'value'])
+c.addStyles('wxFNTP_USE_TEXTCTRL', 'wxFNTP_FONTDESC_AS_LABEL',
+            'wxFNTP_USEFONT_FOR_LABEL', 'wxFNTP_DEFAULT_STYLE')
+component.Manager.register(c)
+component.Manager.setMenu(c, 'control', 'font picker ctrl', 'wxFontPickerCtrl', 181)
+
+### wxColourPickerCtrl
+
+c = component.Component('wxColourPickerCtrl', ['control'], ['pos', 'size', 'value'])
+c.addStyles('wxCLRP_USE_TEXTCTRL', 'wxCLRP_SHOW_LABEL', 'wxCLRP_DEFAULT_STYLE')
+c.addEvents('EVT_COMMAND_COLOURPICKER_CHANGED')
+component.Manager.register(c)
+component.Manager.setMenu(c, 'control', 'colour picker ctrl', 'wxColourPickerCtrl', 181)
+
 ### wxGrid
 
 c = component.Component('wxGrid', ['control'], ['pos', 'size'])
@@ -334,8 +384,7 @@
 c = component.Component('wxButton', ['control', 'tool', 'stdbtn'],
                         ['pos', 'size', 'label', 'default'],
                         image=images.TreeButton.GetImage())
-c.addStyles('wxBU_LEFT', 'wxBU_TOP', 'wxBU_RIGHT', 'wxBU_BOTTOM', 'wxBU_EXACTFIT',
-            'wxNO_BORDER')
+c.addStyles('wxBU_LEFT', 'wxBU_TOP', 'wxBU_RIGHT', 'wxBU_BOTTOM', 'wxBU_EXACTFIT')
 c.setParamClass('default', params.ParamBool)
 c.addEvents('EVT_BUTTON')
 component.Manager.register(c)
@@ -406,6 +455,8 @@
 c = component.Component('wxCheckBox', ['control','tool'],
                         ['pos', 'size', 'label', 'checked'],
                         image=images.TreeCheckBox.GetImage())
+c.addStyles('wxCHK_2STATE', 'wxCHK_3STATE', 'wxCHK_ALLOW_3RD_STATE_FOR_USER',
+            'wxALIGN_RIGHT')
 c.addEvents('EVT_CHECKBOX')
 component.Manager.register(c)
 component.Manager.setMenu(c, 'box', 'check box', 'wxCheckBox', 10)
@@ -416,7 +467,7 @@
 c = component.Component('wxComboBox', ['control','tool'],
               ['pos', 'size', 'content', 'selection', 'value'],
               image=images.TreeComboBox.GetImage())
-c.addStyles('wxCB_SINGLE', 'wxCB_DROPDOWN', 'wxCB_READONLY',
+c.addStyles('wxCB_SIMPLE', 'wxCB_DROPDOWN', 'wxCB_READONLY',
             'wxCB_SORT', 'wxTE_PROCESS_ENTER')
 c.setSpecial('content',  attribute.ContentAttribute)
 c.addEvents('EVT_COMBOBOX', 'EVT_TEXT', 'EVT_TEXT_ENTER')
@@ -424,13 +475,39 @@
 component.Manager.setMenu(c, 'box', 'combo box', 'wxComboBox', 20)
 component.Manager.setTool(c, 'Controls', pos=(2,2))
 
+### wxOwnerDrawnComboBox
+
+c = component.Component('wxOwnerDrawnComboBox', ['control','tool'],
+              ['pos', 'size', 'content', 'selection', 'value'],
+              image=images.TreeComboBox.GetImage())
+c.addStyles('wxCB_SIMPLE', 'wxCB_DROPDOWN', 'wxCB_READONLY', 'wxCB_SORT',
+            'wxODCB_STD_CONTROL_PAINT', 'wxODCB_DCLICK_CYCLES', 'wxTE_PROCESS_ENTER')
+c.setSpecial('content',  attribute.ContentAttribute)
+c.addEvents('EVT_COMBOBOX', 'EVT_TEXT', 'EVT_TEXT_ENTER')
+component.Manager.register(c)
+component.Manager.setMenu(c, 'box', 'virtual combo box', 'wxOwnerDrawnComboBox', 20)
+
+#### wxBitmapComboBox
+## FIXME: needs special content support (bitmap, text)
+#
+#c = component.Component('wxBitmapComboBox', ['control','tool'],
+#              ['pos', 'size', 'ownerdrawnitem', 'selection', 'value'],
+#              image=images.TreeComboBox.GetImage())
+#c.addStyles('wxCB_READONLY', 'wxCB_SORT')
+#c.setSpecial('ownerdrawnitem',  attribute.ContentAttribute)
+#c.addEvents('EVT_COMBOBOX', 'EVT_TEXT', 'EVT_TEXT_ENTER')
+#component.Manager.register(c)
+#component.Manager.setMenu(c, 'box', 'virtual combo box', 'wxBitmapComboBox', 20)
+#
 ### wxRadioBox
 
 c = component.Component('wxRadioBox', ['control','tool'],
               ['pos', 'size', 'label', 'dimension', 
                'content', 'selection', 'dimension'])
-c.addStyles('wxRA_SPECIFY_ROWS', 'wxRA_SPECIFY_COLS')
-c.setSpecial('content',  attribute.ContentAttribute)
+c.addStyles('wxRA_SPECIFY_ROWS', 'wxRA_SPECIFY_COLS', 'wxRA_HORIZONTAL',
+            'wxRA_VERTICAL')
+c.setSpecial('content',  attribute.HelpContentAttribute)
+c.setParamClass('content', params.ParamContentHelpList)
 c.setParamClass('dimension', params.ParamInt)
 c.addEvents('EVT_RADIOBOX')
 component.Manager.register(c)
@@ -450,6 +527,17 @@
 component.Manager.setMenu(c, 'box', 'list box', 'wxListBox', 40)
 component.Manager.setTool(c, 'Panels', pos=(0,0))
 
+### wxSimpleHtmlListBox
+
+c = component.Component('wxSimpleHtmlListBox', ['control','tool'],
+                        ['pos', 'size', 'content', 'selection'],
+                        image=images.TreeListBox.GetImage())
+c.addStyles('wxHLB_MULTIPLE', 'wxHLB_DEFAULT_STYLE')
+c.setSpecial('content',  attribute.ContentAttribute)
+c.addEvents('EVT_LISTBOX', 'EVT_LISTBOX_DCLICK')
+component.Manager.register(c)
+component.Manager.setMenu(c, 'box', 'html list box', 'wxSimpleHtmlListBox', 41)
+
 ### wxCheckListBox
 
 c = component.Component('wxCheckListBox', ['control','tool'],
diff -ruN wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/core.py wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/core.py
--- wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/core.py	2008-09-26 23:07:24.000000000 -0400
+++ wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/core.py	2011-03-08 15:31:18.000000000 -0500
@@ -39,13 +39,13 @@
               image=images.TreeFrame.GetImage())
 c.isTopLevel = True
 c.addStyles('wxDEFAULT_FRAME_STYLE', 'wxDEFAULT_DIALOG_STYLE', 'wxCAPTION', 
-            'wxSTAY_ON_TOP', 'wxSYSTEM_MENU', 'wxTHICK_FRAME',
-            'wxRESIZE_BORDER', 'wxRESIZE_BOX', 'wxCLOSE_BOX',
+            'wxSTAY_ON_TOP', 'wxSYSTEM_MENU',
+            'wxRESIZE_BORDER', 'wxCLOSE_BOX',
             'wxMAXIMIZE_BOX', 'wxMINIMIZE_BOX',
             'wxFRAME_NO_TASKBAR', 'wxFRAME_SHAPED', 'wxFRAME_TOOL_WINDOW',
             'wxFRAME_FLOAT_ON_PARENT',
-            'wxNO_3D', 'wxTAB_TRAVERSAL')
-c.addExStyles('wxFRAME_EX_CONTEXTHELP', 'wxFRAME_EX_METAL')
+            'wxTAB_TRAVERSAL')
+c.addExStyles('wxFRAME_EX_CONTEXTHELP', 'wxFRAME_EX_METAL', 'wxWS_EX_VALIDATE_RECURSIVELY')
 c.addEvents('EVT_SIZE', 'EVT_CLOSE', 'EVT_MENU_HIGHLIGHT', 'EVT_ICONIZE', 'EVT_MAXIMIZE',
             'EVT_ACTIVATE', 'EVT_UPDATE_UI')
 component.Manager.register(c)
@@ -73,13 +73,13 @@
               image=images.TreeFrame.GetImage())
 c.isTopLevel = True
 c.addStyles('wxDEFAULT_FRAME_STYLE', 'wxDEFAULT_DIALOG_STYLE', 'wxCAPTION', 
-            'wxSTAY_ON_TOP', 'wxSYSTEM_MENU', 'wxTHICK_FRAME',
-            'wxRESIZE_BORDER', 'wxRESIZE_BOX', 'wxCLOSE_BOX',
+            'wxSTAY_ON_TOP', 'wxSYSTEM_MENU',
+            'wxRESIZE_BORDER', 'wxCLOSE_BOX',
             'wxMAXIMIZE_BOX', 'wxMINIMIZE_BOX',
             'wxFRAME_NO_TASKBAR', 'wxFRAME_SHAPED', 'wxFRAME_TOOL_WINDOW',
             'wxFRAME_FLOAT_ON_PARENT', 'wxFRAME_NO_WINDOW_MENU',
-            'wxNO_3D', 'wxTAB_TRAVERSAL')
-c.addExStyles('wxFRAME_EX_METAL')
+            'wxTAB_TRAVERSAL')
+c.addExStyles('wxFRAME_EX_METAL', 'wxWS_EX_VALIDATE_RECURSIVELY')
 c.addEvents('EVT_SIZE', 'EVT_CLOSE', 'EVT_MENU_HIGHLIGHT', 'EVT_ICONIZE', 'EVT_MAXIMIZE',
             'EVT_ACTIVATE', 'EVT_UPDATE_UI')
 component.Manager.register(c)
@@ -106,13 +106,13 @@
               ['pos', 'size', 'title', 'centered'],
               image=images.TreeFrame.GetImage())
 c.addStyles('wxDEFAULT_FRAME_STYLE', 'wxDEFAULT_DIALOG_STYLE', 'wxCAPTION', 
-            'wxSTAY_ON_TOP', 'wxSYSTEM_MENU', 'wxTHICK_FRAME',
-            'wxRESIZE_BORDER', 'wxRESIZE_BOX', 'wxCLOSE_BOX',
+            'wxSTAY_ON_TOP', 'wxSYSTEM_MENU',
+            'wxRESIZE_BORDER', 'wxCLOSE_BOX',
             'wxMAXIMIZE_BOX', 'wxMINIMIZE_BOX',
             'wxFRAME_NO_TASKBAR', 'wxFRAME_SHAPED', 'wxFRAME_TOOL_WINDOW',
             'wxFRAME_FLOAT_ON_PARENT', 'wxFRAME_NO_WINDOW_MENU',
-            'wxNO_3D', 'wxTAB_TRAVERSAL')
-c.addExStyles('wxFRAME_EX_METAL')
+            'wxTAB_TRAVERSAL')
+c.addExStyles('wxFRAME_EX_METAL', 'wxWS_EX_VALIDATE_RECURSIVELY')
 c.addEvents('EVT_SIZE', 'EVT_CLOSE', 'EVT_MENU_HIGHLIGHT', 'EVT_ICONIZE', 'EVT_MAXIMIZE',
             'EVT_ACTIVATE', 'EVT_UPDATE_UI')
 component.Manager.register(c)
@@ -126,13 +126,13 @@
               image=images.TreeDialog.GetImage())
 c.isTopLevel = True
 c.setSpecial('icon', attribute.BitmapAttribute)
-c.addStyles('wxDEFAULT_DIALOG_STYLE', 'wxDEFAULT_FRAME_STYLE', 'wxCAPTION', 
-            'wxSTAY_ON_TOP', 'wxSYSTEM_MENU', 'wxTHICK_FRAME',
-            'wxRESIZE_BORDER', 'wxRESIZE_BOX', 'wxCLOSE_BOX',
+c.addStyles('wxDEFAULT_DIALOG_STYLE', 'wxCAPTION', 
+            'wxSTAY_ON_TOP', 'wxSYSTEM_MENU',
+            'wxRESIZE_BORDER', 'wxCLOSE_BOX',
             'wxMAXIMIZE_BOX', 'wxMINIMIZE_BOX',
-            'wxDIALOG_MODAL', 'wxDIALOG_MODELESS', 'wxDIALOG_NO_PARENT',
-            'wxNO_3D', 'wxTAB_TRAVERSAL')
-c.addExStyles('wxDIALOG_EX_CONTEXTHELP', 'wxDIALOG_EX_METAL')
+            'wxDIALOG_NO_PARENT', 'wxFRAME_SHAPED',
+            'wxTAB_TRAVERSAL')
+c.addExStyles('wxDIALOG_EX_CONTEXTHELP', 'wxDIALOG_EX_METAL', 'wxWS_EX_VALIDATE_RECURSIVELY')
 c.addEvents('EVT_INIT_DIALOG', 'EVT_SIZE', 'EVT_CLOSE', 
             'EVT_ICONIZE', 'EVT_MAXIMIZE', 'EVT_ACTIVATE', 'EVT_UPDATE_UI')
 component.Manager.register(c)
@@ -144,7 +144,8 @@
 c = component.Container('wxPanel', ['window', 'top_level', 'control'], 
               ['pos', 'size'],
               image=images.TreePanel.GetImage())
-c.addStyles('wxNO_3D', 'wxTAB_TRAVERSAL')
+c.addStyles('wxTAB_TRAVERSAL')
+c.addExStyles('wxWS_EX_VALIDATE_RECURSIVELY')
 component.Manager.register(c)
 component.Manager.setMenu(c, 'TOP_LEVEL', 'panel', 'wxPanel', 30)
 component.Manager.setMenu(c, 'container', 'panel', 'wxPanel', 10)
@@ -213,16 +214,9 @@
 class ParamButtons(params.ParamBinaryOr):
     '''Button flags.'''
     values = ['wxOK', 'wxCANCEL', 'wxYES', 'wxNO', 'wxHELP', 'wxNO_DEFAULT']
-class ParamSheetStyle(params.ParamBinaryOr):
-    '''Button flags.'''
-    values = ['wxPROPSHEET_DEFAULT', 'wxPROPSHEET_NOTEBOOK',
-            'wxPROPSHEET_CHOICEBOOK', 'wxPROPSHEET_LISTBOOK', 
-# Tool book needs an image list
-#            'wxPROPSHEET_TOOLBOOK', 'wxPROPSHEET_BUTTONTOOLBOOK',
-            'wxPROPSHEET_TREEBOOK', 'wxPROPSHEET_SHRINKTOFIT']
 c = component.SmartContainer('wxPropertySheetDialog', ['frame','book','window','top_level'], 
-                   ['pos', 'size', 'title', 'centered', 'icon', 'sheetstyle', 'buttons'],
-                   params={'buttons': ParamButtons, 'sheetstyle': ParamSheetStyle},
+                   ['pos', 'size', 'title', 'centered', 'icon', 'buttons'],
+                   params={'buttons': ParamButtons},
                    implicit_klass='propertysheetpage', 
                    implicit_page='PropertySheetPage', 
                    implicit_attributes=['label', 'selected', 'bitmap'],
@@ -235,8 +229,8 @@
             'wxTAB_TRAVERSAL', 'wxSTAY_ON_TOP', 'wxSYSTEM_MENU', 
             'wxRESIZE_BORDER', 'wxCLOSE_BOX', 'wxMAXIMIZE_BOX', 'wxMINIMIZE_BOX',
             'wxDIALOG_MODAL', 'wxDIALOG_MODELESS', 'wxDIALOG_NO_PARENT',
-            'wxNO_3D', 'wxTAB_TRAVERSAL')
-c.addExStyles('wxDIALOG_EX_CONTEXTHELP', 'wxDIALOG_EX_METAL')
+            'wxTAB_TRAVERSAL')
+c.addExStyles('wxDIALOG_EX_CONTEXTHELP', 'wxDIALOG_EX_METAL', 'wxWS_EX_VALIDATE_RECURSIVELY')
 c.addEvents('EVT_INIT_DIALOG', 'EVT_SIZE', 'EVT_CLOSE', 
             'EVT_ICONIZE', 'EVT_MAXIMIZE', 'EVT_ACTIVATE', 'EVT_UPDATE_UI')
 component.Manager.register(c)
@@ -342,7 +336,8 @@
 ### wxScrolledWindow
 
 c = component.Container('wxScrolledWindow', ['window', 'control'], ['pos', 'size'])
-c.addStyles('wxHSCROLL', 'wxVSCROLL', 'wxNO_3D', 'wxTAB_TRAVERSAL')
+c.addStyles('wxHSCROLL', 'wxVSCROLL', 'wxTAB_TRAVERSAL')
+c.addExStyles('wxWS_EX_VALIDATE_RECURSIVELY')
 c.addEvents('EVT_SCROLLWIN_TOP',
             'EVT_SCROLLWIN_BOTTOM',
             'EVT_SCROLLWIN_LINEUP',
@@ -358,12 +353,13 @@
 ### wxSplitterWindow
 
 c = component.Container('wxSplitterWindow', ['book', 'window', 'control'],
-              ['pos', 'size', 'orientation', 'sashpos', 'minsize'],
+              ['pos', 'size', 'orientation', 'sashpos', 'minsize', 'gravity'],
+              # note: no flt[0..1], so just leaving gravity as text
               params={'orientation': params.ParamOrientation, 
                       'sashpos': params.ParamUnit, 
                       'minsize': params.ParamUnit},
               image=images.TreeSplitterWindow.GetImage())
-c.addStyles('wxSP_3D', 'wxSP_3DSASH', 'wxSP_3DBORDER', 
+c.addStyles('wxSP_3D', 'wxSP_3DSASH', 'wxSP_3DBORDER', 'wxSP_BORDER',
             'wxSP_FULLSASH', 'wxSP_NOBORDER', 'wxSP_PERMIT_UNSPLIT', 'wxSP_LIVE_UPDATE',
             'wxSP_NO_XP_THEME')
 c.addEvents('EVT_SPLITTER_SASH_POS_CHANGING', 'EVT_SPLITTER_SASH_POS_CHANGED',
@@ -380,9 +376,11 @@
                    implicit_attributes=['label', 'selected', 'bitmap'],
                    implicit_params={'label': params.ParamText, 'selected': params.ParamBool},
                    image=images.TreeNotebook.GetImage())
-c.addStyles('wxNB_TOP', 'wxNB_LEFT', 'wxNB_RIGHT', 'wxNB_BOTTOM',
-            'wxNB_FIXEDWIDTH', 'wxNB_MULTILINE', 'wxNB_NOPAGETHEME', 
-            'wxNB_FLAT')
+c.addStyles('wxBK_DEFAULT', 'wxBK_TOP', 'wxBK_LEFT', 'wxBK_RIGHT', 'wxBK_BOTTOM',
+            'wxNB_FIXEDWIDTH', 'wxNB_MULTILINE', 'wxNB_NOPAGETHEME')
+c.addEquivStyles({'wxBK_DEFAULT': 'wxNB_DEFAULT', 'wxBK_LEFT': 'wxNB_LEFT',
+                  'wxBK_RIGHT': 'wxNB_RIGHT', 'wxBK_TOP': 'wxNB_TOP',
+                  'wxBK_BOTTOM': 'wxNB_BOTTOM'})
 c.setSpecial('bitmap', attribute.BitmapAttribute)
 c.addEvents('EVT_NOTEBOOK_PAGE_CHANGED', 'EVT_NOTEBOOK_PAGE_CHANGING')
 component.Manager.register(c)
@@ -396,7 +394,10 @@
                    implicit_page='ChoicebookPage', 
                    implicit_attributes=['label', 'selected', 'bitmap'],
                    implicit_params={'label': params.ParamText, 'selected': params.ParamBool})
-c.addStyles('wxCHB_DEFAULT', 'wxCHB_LEFT', 'wxCHB_RIGHT', 'wxCHB_TOP', 'wxCHB_BOTTOM')
+c.addStyles('wxBK_DEFAULT', 'wxBK_TOP', 'wxBK_LEFT', 'wxBK_RIGHT', 'wxBK_BOTTOM')
+c.addEquivStyles({'wxBK_DEFAULT': 'wxCHB_DEFAULT', 'wxBK_LEFT': 'wxCHB_LEFT',
+                  'wxBK_RIGHT': 'wxCHB_RIGHT', 'wxBK_TOP': 'wxCHB_TOP',
+                  'wxBK_BOTTOM': 'wxCHB_BOTTOM'})
 c.setSpecial('bitmap', attribute.BitmapAttribute)
 c.addEvents('EVT_CHOICEBOOK_PAGE_CHANGED', 'EVT_CHOICEBOOK_PAGE_CHANGING')
 component.Manager.register(c)
@@ -414,7 +415,10 @@
              implicit_page='ListbookPage', 
              implicit_attributes=['label', 'selected', 'bitmap'],
              implicit_params={'label': params.ParamText, 'selected': params.ParamBool})
-c.addStyles('wxLB_DEFAULT', 'wxLB_LEFT', 'wxLB_RIGHT', 'wxLB_TOP', 'wxLB_BOTTOM')
+c.addStyles('wxBK_DEFAULT', 'wxBK_LEFT', 'wxBK_RIGHT', 'wxBK_TOP', 'wxBK_BOTTOM')
+c.addEquivStyles({'wxBK_DEFAULT': 'wxLB_DEFAULT', 'wxBK_LEFT': 'wxLB_LEFT',
+                  'wxBK_RIGHT': 'wxLB_RIGHT', 'wxBK_TOP': 'wxLB_TOP',
+                  'wxBK_BOTTOM': 'wxLB_BOTTOM'})
 c.setSpecial('bitmap', attribute.BitmapAttribute)
 c.addEvents('EVT_LISTBOOK_PAGE_CHANGED', 'EVT_LISTBOOK_PAGE_CHANGING')
 component.Manager.register(c)
@@ -442,6 +446,18 @@
 component.Manager.setMenu(c, 'container', 'treebook', 'wxTreebook', 70)
 component.Manager.setTool(c, 'Panels', pos=(1,1), span=(1,2))
 
+### wxCollapsiblePane
+
+c = component.SmartContainer('wxCollapsiblePane', ['book', 'window', 'control'], ['pos', 'size', 'label', 'collapsed'],
+                   implicit_klass='panewindow', 
+                   implicit_page='', 
+                   implicit_attributes=[])
+c.addStyles('wxCP_NO_TLW_RESIZE', 'wxCP_DEFAULT_STYLE')
+c.setParamClass('collapsed', params.ParamBool)
+c.addEvents('EVT_COMMAND_COLLPANE_CHANGED')
+component.Manager.register(c)
+component.Manager.setMenu(c, 'container', 'collapsible pane', 'wxCollapsiblePane', 71)
+
 ################################################################################
 # Menus
 
@@ -507,7 +523,8 @@
              image=images.TreeToolBar.GetImage())
 c.addStyles('wxTB_FLAT', 'wxTB_DOCKABLE', 'wxTB_VERTICAL', 'wxTB_HORIZONTAL',
             'wxTB_3DBUTTONS','wxTB_TEXT', 'wxTB_NOICONS', 'wxTB_NODIVIDER',
-            'wxTB_NOALIGN', 'wxTB_HORZ_LAYOUT', 'wxTB_HORZ_TEXT')
+            'wxTB_NOALIGN', 'wxTB_HORZ_LAYOUT', 'wxTB_HORZ_TEXT',
+            'wxTB_TOP', 'wxTB_LEFT', 'wxTB_RIGHT', 'wxTB_BOTTOM')
 c.setParamClass('dontattachtoframe', params.ParamBool)
 c.setParamClass('bitmapsize', params.ParamPosSize)
 c.setParamClass('margins', params.ParamPosSize)
@@ -544,6 +561,14 @@
 component.Manager.setMenu(c, 'ROOT', 'separator', 'separator', 20)
 component.Manager.setTool(c, 'Menus', pos=(0,2))
 
+### wxBreak
+
+c = component.SimpleComponent('break', ['break'], [],
+                    image=images.TreeSeparator.GetImage())
+c.hasName = False
+component.Manager.register(c)
+component.Manager.setMenu(c, 'ROOT', 'break', 'break', 21)
+
 ### wxStatusBar
 
 c = component.SimpleComponent('wxStatusBar', ['statusbar'], ['fields', 'widths', 'styles'])
diff -ruN wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/wxlib.py wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/wxlib.py
--- wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/wxlib.py	2011-03-07 22:56:57.000000000 -0500
+++ wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/wxlib.py	2011-03-07 22:57:13.000000000 -0500
@@ -19,7 +19,7 @@
                    implicit_page='FoldPanel', 
                    implicit_attributes=['label', 'collapsed'],
                    implicit_params={'collapsed': params.ParamBool})
-c.addStyles('FPB_DEFAULT_STYLE', 'FPB_SINGLE_FOLD', 'FPB_COLLAPSE_TO_BOTTOM',
+c.addStyles('FPB_SINGLE_FOLD', 'FPB_COLLAPSE_TO_BOTTOM',
             'FPB_EXCLUSIVE_FOLD', 'FPB_HORIZONTAL', 'FPB_VERTICAL')
 component.Manager.register(c)
 component.Manager.addXmlHandler(xh_wxlib.FoldPanelBarXmlHandler)
diff -ruN wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/xh_wxlib.py wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/xh_wxlib.py
--- wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/xh_wxlib.py	2011-03-07 22:56:57.000000000 -0500
+++ wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/plugins/xh_wxlib.py	2011-03-07 22:57:13.000000000 -0500
@@ -17,7 +17,6 @@
         # Standard styles
         self.AddWindowStyles()
         # Custom styles
-        self.AddStyle('FPB_DEFAULT_STYLE', fpb.FPB_DEFAULT_STYLE)
         self.AddStyle('FPB_SINGLE_FOLD', fpb.FPB_SINGLE_FOLD)
         self.AddStyle('FPB_COLLAPSE_TO_BOTTOM', fpb.FPB_COLLAPSE_TO_BOTTOM)
         self.AddStyle('FPB_EXCLUSIVE_FOLD', fpb.FPB_EXCLUSIVE_FOLD)
diff -ruN wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/xrced.xrc wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/xrced.xrc
--- wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/xrced.xrc	2010-04-29 15:49:26.000000000 -0400
+++ wxPython-src-2.8.11.0/wxPython/wx/tools/XRCed/xrced.xrc	2011-03-08 17:24:49.000000000 -0500
@@ -84,6 +84,13 @@
                 <border>5</border>
               </object>
               <object class="sizeritem">
+                <object class="wxButton" name="BUTTON_EDIT">
+                  <label>Edit...</label>
+                </object>
+                <flag>wxBOTTOM|wxEXPAND</flag>
+                <border>5</border>
+              </object>
+              <object class="sizeritem">
                 <object class="wxButton" name="BUTTON_REMOVE">
                   <label>Remove</label>
                 </object>
@@ -169,6 +176,13 @@
                 <border>5</border>
               </object>
               <object class="sizeritem">
+                <object class="wxButton" name="BUTTON_EDIT">
+                  <label>Edit...</label>
+                </object>
+                <flag>wxBOTTOM|wxEXPAND</flag>
+                <border>5</border>
+              </object>
+              <object class="sizeritem">
                 <object class="wxButton" name="BUTTON_REMOVE">
                   <label>Remove</label>
                 </object>
@@ -871,4 +885,180 @@
       </object>
     </object>
   </object>
+  <object class="wxDialog" name="DIALOG_CONTENT_HELPLIST">
+    <object class="wxBoxSizer">
+      <orient>wxVERTICAL</orient>
+      <object class="sizeritem">
+        <object class="wxBoxSizer">
+          <orient>wxHORIZONTAL</orient>
+          <object class="sizeritem">
+            <object class="wxListCtrl" name="LIST">
+              <style>wxLC_REPORT</style>
+            </object>
+            <option>1</option>
+            <flag>wxTOP|wxBOTTOM|wxLEFT|wxEXPAND</flag>
+            <border>5</border>
+          </object>
+          <object class="sizeritem">
+            <object class="wxBoxSizer">
+              <orient>wxVERTICAL</orient>
+              <object class="sizeritem">
+                <object class="wxButton" name="BUTTON_UP">
+                  <label>Move Up</label>
+                </object>
+                <flag>wxBOTTOM|wxEXPAND</flag>
+                <border>5</border>
+              </object>
+              <object class="sizeritem">
+                <object class="wxButton" name="BUTTON_DOWN">
+                  <label>Move Down</label>
+                </object>
+                <flag>wxEXPAND</flag>
+              </object>
+              <object class="spacer">
+                <size>10,20</size>
+                <option>1</option>
+              </object>
+              <object class="sizeritem">
+                <object class="wxButton" name="BUTTON_APPEND">
+                  <label>Append...</label>
+                </object>
+                <flag>wxBOTTOM|wxEXPAND</flag>
+                <border>5</border>
+              </object>
+              <object class="sizeritem">
+                <object class="wxButton" name="BUTTON_EDIT">
+                  <label>Edit...</label>
+                </object>
+                <flag>wxBOTTOM|wxEXPAND</flag>
+                <border>5</border>
+              </object>
+              <object class="sizeritem">
+                <object class="wxButton" name="BUTTON_REMOVE">
+                  <label>Remove</label>
+                </object>
+                <flag>wxEXPAND</flag>
+              </object>
+            </object>
+            <flag>wxALL|wxEXPAND</flag>
+            <border>5</border>
+          </object>
+        </object>
+        <option>1</option>
+        <flag>wxEXPAND</flag>
+      </object>
+      <object class="spacer">
+        <size>0,10</size>
+      </object>
+      <object class="sizeritem">
+        <object class="wxStdDialogButtonSizer">
+          <object class="button">
+            <object class="wxButton" name="wxID_OK">
+            </object>
+          </object>
+          <object class="button">
+            <object class="wxButton" name="wxID_CANCEL">
+            </object>
+          </object>
+        </object>
+        <flag>wxALL|wxALIGN_CENTRE_HORIZONTAL</flag>
+        <border>10</border>
+      </object>
+    </object>
+    <size>250,300</size>
+    <title>Content</title>
+    <centered>1</centered>
+    <style>wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER</style>
+  </object>
+  <object class="wxDialog" name="DIALOG_HELPTEXT">
+    <object class="wxBoxSizer">
+      <orient>wxVERTICAL</orient>
+      <object class="sizeritem">
+        <object class="wxStaticText">
+          <label>Value</label>
+        </object>
+        <flag>wxALL</flag>
+        <border>5</border>
+      </object>
+      <object class="sizeritem">
+        <object class="wxBoxSizer">
+          <object class="sizeritem">
+            <object class="wxTextCtrl" name="TEXT">
+              <style>wxTE_MULTILINE</style>
+            </object>
+            <option>1</option>
+            <flag>wxALL|wxEXPAND</flag>
+            <border>5</border>
+          </object>
+          <orient>wxHORIZONTAL</orient>
+        </object>
+        <option>1</option>
+        <flag>wxEXPAND</flag>
+      </object>
+      
+      <object class="sizeritem">
+        <object class="wxStaticText">
+          <label>Tooltip</label>
+        </object>
+        <flag>wxALL</flag>
+        <border>5</border>
+      </object>
+      <object class="sizeritem">
+        <object class="wxBoxSizer">
+          <orient>wxHORIZONTAL</orient>
+          <object class="sizeritem">
+            <object class="wxTextCtrl" name="TOOLTIP">
+              <size>250,100</size>
+              <style>wxTE_MULTILINE</style>
+            </object>
+            <option>1</option>
+            <flag>wxALL|wxEXPAND</flag>
+            <border>5</border>
+          </object>
+        </object>
+        <option>1</option>
+        <flag>wxEXPAND</flag>
+      </object>
+      <object class="sizeritem">
+        <object class="wxStaticText">
+          <label>Help Text</label>
+        </object>
+        <flag>wxALL</flag>
+        <border>5</border>
+      </object>
+      <object class="sizeritem">
+        <object class="wxBoxSizer">
+          <orient>wxHORIZONTAL</orient>
+          <object class="sizeritem">
+            <object class="wxTextCtrl" name="HELPTEXT">
+              <size>250,100</size>
+              <style>wxTE_MULTILINE</style>
+            </object>
+            <option>1</option>
+            <flag>wxALL|wxEXPAND</flag>
+            <border>5</border>
+          </object>
+        </object>
+        <option>1</option>
+        <flag>wxEXPAND</flag>
+      </object>
+      <object class="sizeritem">
+        <object class="wxStdDialogButtonSizer">
+          <object class="button">
+            <object class="wxButton" name="wxID_OK">
+            </object>
+          </object>
+          <object class="button">
+            <object class="wxButton" name="wxID_CANCEL">
+            </object>
+          </object>
+        </object>
+        <flag>wxALL|wxALIGN_CENTRE_HORIZONTAL</flag>
+        <border>10</border>
+      </object>
+    </object>
+    <title>Edit item</title>
+    <centered>1</centered>
+    <style>wxDEFAULT_DIALOG_STYLE|wxRESIZE_BORDER</style>
+  </object>
 </resource>
\ No newline at end of file
