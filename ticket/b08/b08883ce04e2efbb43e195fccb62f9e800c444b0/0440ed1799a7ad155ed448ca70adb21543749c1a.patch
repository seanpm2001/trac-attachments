Index: textctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/mac/textctrl.cpp,v
retrieving revision 1.73
diff -u -3 -r1.73 textctrl.cpp
--- textctrl.cpp	2004/01/15 20:12:29	1.73
+++ textctrl.cpp	2004/02/04 05:08:04
@@ -24,6 +24,8 @@
   #include <stat.h>
 #endif
 
+#include "wx/msgdlg.h"
+
 #if wxUSE_STD_IOSTREAM
     #if wxUSE_IOSTREAMH
         #include <fstream.h>
@@ -57,6 +59,7 @@
 #include "TextCommon.h"
 #include "TextEncodingConverter.h"
 #include "wx/mac/uma.h"
+#include "MacTextEditor.h"
 
 #define TE_UNLIMITED_LENGTH 0xFFFFFFFFUL
 
@@ -1467,7 +1470,61 @@
 
 void wxTextCtrl::ShowPosition(long pos)
 {
-    // TODO
+    if (m_macUsesTXN)
+    {
+    #if TARGET_RT_MAC_MACHO
+        #ifdef AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER //only compile under 10.2 or greater
+        if ( (UInt32) TXNScroll != (UInt32) kUnresolvedCFragSymbolAddress )  //make sure it's defined before we execute code that will crash it
+        {   
+            OSErr theErr = noErr;
+            long pixelDiff = 0;
+            long lineDiff = 0;
+            long added = 0;
+            int i = 0;
+            SInt32 deltaVScroll = 0; 
+            SInt32 deltaHScroll = 0;
+            
+            wxString theContent = GetValue();
+            long currentPos = GetInsertionPoint();
+            wxString upToUs = theContent.Truncate(currentPos);
+            long currLineNumber = upToUs.Freq('\r');
+            //the biggest problem is figuring out what line we are currently on
+            //TXNScroll works on offsets from the current position, so we have to do some math
+        
+            lineDiff = pos - currLineNumber;
+             added = -(lineDiff / abs(lineDiff));
+            //if we don't have the -1, added will be negative when we are going backwards (infinite loop,
+            //because i = 0), and positive when we are going forwards (infinit loop, because i > currLineNumber)
+            
+            for (i=pos; i != currLineNumber; i = i + added)
+            {
+                Fixed hTemp = 0;
+                Fixed vTemp = 0;
+                long vTempLng = 0;
+                
+                theErr = TXNGetLineMetrics( (TXNObject) m_macTXN, i, &hTemp, &vTemp);
+                wxASSERT_MSG( theErr == noErr, _T("TXNGetLineMetrics returned an error!") );
+                
+                vTempLng = Fix2Long(vTemp);
+                pixelDiff = pixelDiff + vTempLng;
+            }
+     
+            deltaVScroll = ( (SInt32)(pixelDiff) * (-added));
+        
+            //Apple docs say there's a kTXNScrollUnitsAreLines option, but that seems to
+            //be unimplimented or something. We have to use pixels.
+            theErr = TXNScroll( (TXNObject) m_macTXN, kTXNScrollUnitsInPixels , kTXNScrollUnitsInPixels , &deltaVScroll, &deltaHScroll);            //TXNScroll only available in 10.2 or later.
+    
+            wxASSERT_MSG( theErr == noErr, _T("TXNScroll returned an error!") );
+        }
+        #endif //END AVAILABLE_MAC_OS_X_VERSION_10_2_AND_LATER
+    #endif	//END  TARGET_RT_MAC_MACHO
+    }
+    else
+    {
+        //not a TXN control
+    }
+    
 }
 
 int wxTextCtrl::GetLineLength(long lineNo) const

 	  	 
