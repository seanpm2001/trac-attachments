Index: minimal.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/samples/minimal/minimal.cpp,v
retrieving revision 1.64
diff -u -3 -r1.64 minimal.cpp
--- minimal.cpp	2003/12/28 17:34:18	1.64
+++ minimal.cpp	2004/02/04 05:09:50
@@ -12,7 +12,7 @@
 // ============================================================================
 // declarations
 // ============================================================================
-
+ 
 // ----------------------------------------------------------------------------
 // headers
 // ----------------------------------------------------------------------------
@@ -39,6 +39,7 @@
     #include "mondrian.xpm"
 #endif
 
+
 // ----------------------------------------------------------------------------
 // private classes
 // ----------------------------------------------------------------------------
@@ -66,8 +67,10 @@
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
-
+    void OnTest(wxCommandEvent& event);
 private:
+	wxTextCtrl* m_myText;
+	
     // any class wishing to process wxWindows events must use this macro
     DECLARE_EVENT_TABLE()
 };
@@ -85,7 +88,8 @@
     // it is important for the id corresponding to the "About" command to have
     // this standard value as otherwise it won't be handled properly under Mac
     // (where it is special and put into the "Apple" menu)
-    Minimal_About = wxID_ABOUT
+    Minimal_About = wxID_ABOUT,
+    Minimal_RemoveTest = 27
 };
 
 // ----------------------------------------------------------------------------
@@ -98,6 +102,7 @@
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_MENU(Minimal_RemoveTest,MyFrame::OnTest)
 END_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWindows to create
@@ -123,12 +128,12 @@
 
     // and show it (the frames, unlike simple controls, are not shown when
     // created initially)
-    frame->Show(true);
+    frame->Show(TRUE);
 
     // success: wxApp::OnRun() will be called which will enter the main message
-    // loop and the application will run. If we returned false here, the
+    // loop and the application will run. If we returned FALSE here, the
     // application would exit immediately.
-    return true;
+    return TRUE;
 }
 
 // ----------------------------------------------------------------------------
@@ -137,7 +142,7 @@
 
 // frame constructor
 MyFrame::MyFrame(const wxString& title)
-       : wxFrame(NULL, wxID_ANY, title)
+       : wxFrame(NULL, -1, title, wxDefaultPosition, wxSize(300, 300))
 {
     // set the frame icon
     SetIcon(wxICON(mondrian));
@@ -149,7 +154,7 @@
     // the "About" item should be in the help menu
     wxMenu *helpMenu = new wxMenu;
     helpMenu->Append(Minimal_About, _T("&About...\tF1"), _T("Show about dialog"));
-
+    menuFile->Append(Minimal_RemoveTest, _T("Switch Modes"), _T("Switch Modes (and show bug)"));
     menuFile->Append(Minimal_Quit, _T("E&xit\tAlt-X"), _T("Quit this program"));
 
     // now append the freshly created menu to the menu bar...
@@ -166,15 +171,29 @@
     CreateStatusBar(2);
     SetStatusText(_T("Welcome to wxWindows!"));
 #endif // wxUSE_STATUSBAR
-}
+    
+    m_myText = new wxTextCtrl(this, -1, "", wxDefaultPosition, wxDefaultSize, long(wxTE_MULTILINE));
+    
+
+    for (int i=0; i < 50; i++) //initialization, "go while", increment
+    {
+        wxString strToAppend;
+        strToAppend << "line #";
+        strToAppend << i;
+        strToAppend << "\n";
+        m_myText->AppendText(strToAppend); 
+    
+    }
 
-
-// event handlers
-
+}
+ 
+ 
+// event handlers 
+ 
 void MyFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
 {
-    // true is to force the frame to close
-    Close(true);
+    // TRUE is to force the frame to close
+    Close(TRUE);
 }
 
 void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
@@ -184,4 +203,9 @@
                 _T("Welcome to %s"), wxVERSION_STRING);
 
     wxMessageBox(msg, _T("About Minimal"), wxOK | wxICON_INFORMATION, this);
+}
+ 
+void MyFrame::OnTest(wxCommandEvent& WXUNUSED(event))
+{
+    m_myText->ShowPosition(50);  
 }

 	  	 
