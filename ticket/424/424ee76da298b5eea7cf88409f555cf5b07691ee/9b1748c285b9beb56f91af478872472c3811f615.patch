diff -uNr wxWidgets-3.1.4-orig/src/osx/cocoa/combobox.mm wxWidgets-3.1.4-mine/src/osx/cocoa/combobox.mm
--- wxWidgets-3.1.4-orig/src/osx/cocoa/combobox.mm	2020-07-22 19:20:06.000000000 +0200
+++ wxWidgets-3.1.4-mine/src/osx/cocoa/combobox.mm	2020-11-16 17:32:08.175036000 +0100
@@ -145,17 +145,24 @@
         wxComboBox* wxpeer = static_cast<wxComboBox*>(impl->GetWXPeer());
         if ( wxpeer ) {
             const int sel = wxpeer->GetSelection();
-
+            wxString val = wxpeer->GetString(sel);
+            
+            // we must manually set the new value to our wxNSTextFieldControl because at this time
+            // it still contains the old value and we want GetValue() to be able to get the new
+            // one when called from any of the event callbacks below
+            wxNSTextFieldControl* timpl = dynamic_cast<wxNSTextFieldControl*>(impl);
+            if ( timpl ) timpl->SetStringValue( val );
+                        
             wxCommandEvent event(wxEVT_COMBOBOX, wxpeer->GetId());
             event.SetEventObject( wxpeer );
             event.SetInt( sel );
-            event.SetString( wxpeer->GetString(sel) );
-            // For some reason, wxComboBox::GetValue will not return the newly selected item 
-            // while we're inside this callback, so use AddPendingEvent to make sure
-            // GetValue() returns the right value.
-
-            wxpeer->GetEventHandler()->AddPendingEvent( event );
+            event.SetString( val );
+            wxpeer->HandleWindowEvent( event );
 
+            wxCommandEvent tevent(wxEVT_TEXT, wxpeer->GetId());
+            tevent.SetEventObject( wxpeer );
+            tevent.SetString( val );
+            wxpeer->HandleWindowEvent( tevent );
         }
     }
 }
