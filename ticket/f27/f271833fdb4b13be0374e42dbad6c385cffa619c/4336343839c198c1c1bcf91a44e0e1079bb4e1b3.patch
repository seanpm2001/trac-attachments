diff --git a/tests/benchmarks/graphics.cpp b/tests/benchmarks/graphics.cpp
index 7237f18367..f53e069757 100644
--- a/tests/benchmarks/graphics.cpp
+++ b/tests/benchmarks/graphics.cpp
@@ -393,6 +393,95 @@ private:
         BenchmarkRoundedRectangles(msg, dc);
         BenchmarkCircles(msg, dc);
         BenchmarkEllipses(msg, dc);
+        BenchmarkGridLines(msg, dc);
+    }
+
+    void DrawLine(wxDC &dc, int nStartX, int nStartY, int nEndX, int nEndY)
+    {
+        // Fill rectangle with color
+        COLORREF before = ::GetBkColor(dc.GetHDC());
+        ::SetBkColor(dc.GetHDC(), RGB(0, 0, 0));
+
+        RECT rect;
+        rect.left = nStartX;
+        rect.top = nStartY;
+        rect.bottom = nEndY;
+        rect.right = nEndX;
+
+        ::ExtTextOut(dc.GetHDC(), 0, 0, ETO_OPAQUE, &rect, L"", 0, NULL);
+        ::SetBkColor(dc.GetHDC(), before);
+    }
+
+    void DrawDotLine(wxDC &dc, int nFrom, int nTo, int nStaticCoord)
+    {
+        for (int nCoord = nFrom; nCoord < nTo; nCoord += 2)
+        {
+            int32_t nX = nCoord;
+            int32_t nY = nStaticCoord;
+            DrawLine(dc, nX, nY, nX + 1, nY + 1);
+        }
+    }
+
+    void TryDrawDotLine(const wxString& msg, wxDC& dc, std::vector<int> &coordsX, std::vector<int> &coordsY, bool bwxDrawline)
+    {
+        wxPrintf("Benchmarking %s: ", msg);
+        fflush(stdout);
+
+        wxStopWatch sw;
+        int x = 0,
+            y = 0;
+        int nCnt = coordsX.size();
+
+        wxString sResult = "%ld ";
+
+        if ( bwxDrawline ) {
+            wxPen pen(*wxBLACK, 1, wxPENSTYLE_DOT);
+            pen.SetJoin(wxJOIN_BEVEL);
+            dc.SetPen(pen);
+            sResult += "dc.DrawLine()";
+        }
+        else {
+            sResult += "custom grid line";
+        }
+
+        sResult += " done in %ldms = %gus / line\n";
+
+        for (int i = 0; i < nCnt; ++i)
+        {
+            if (bwxDrawline) {
+                dc.DrawLine(x, y, coordsX[i], y + 1);
+            }
+            else {
+                DrawDotLine(dc, x, coordsX[i], coordsY[i]);
+            }
+
+            x = coordsX[i];
+            y = coordsY[i];
+        }
+
+        const long t = sw.Time();
+
+        wxPrintf(sResult, opts.numIters, t, (1000. * t) / opts.numIters);
+    }
+
+    void BenchmarkGridLines(const wxString& msg, wxDC& dc)
+    {
+        if (!opts.testLines) {
+            return;
+        }
+
+        srand(time(NULL));
+        std::vector<int> coordsX, coordsY;
+        for (int i = 0; i < opts.numIters; ++i)
+        {
+            int x = rand() % opts.width,
+                y = rand() % opts.height;
+            coordsX.push_back(x);
+            coordsY.push_back(y);
+        }
+
+        TryDrawDotLine(msg, dc, coordsX, coordsY, false);
+        TryDrawDotLine(msg, dc, coordsX, coordsY, true);
     }
 
     void BenchmarkLines(const wxString& msg, wxDC& dc)
