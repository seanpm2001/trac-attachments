diff -rbu2 wx-2.3.3-original/docview.cpp wx-2.3.3-minor/docview.cpp
--- wx-2.3.3-original/docview.cpp	Sun Sep 15 20:19:48 2002
+++ wx-2.3.3-minor/docview.cpp	Sun Oct 13 18:51:40 2002
@@ -97,4 +97,5 @@
 
 static inline wxString FindExtension(const wxChar *path);
+static wxWindow* wxFindSuitableParent(void);
 
 // ----------------------------------------------------------------------------
@@ -270,6 +271,4 @@
     SetTitle(wxFileNameFromPath(fileName));
 
-    GetDocumentManager()->AddFileToHistory(fileName);
-
     // Notify the views that the filename has changed
     wxNode *node = m_documentViews.First();
@@ -281,5 +280,24 @@
     }
 
-    return OnSaveDocument(m_documentFile);
+    if ( OnSaveDocument(m_documentFile) == FALSE )
+    {
+      // Files that were not saved correctly are not added to the FileHistory.
+      return FALSE;
+    }
+
+    // A file that doesn't use the default extension of its document template cannot be opened 
+    // via the FileHistory, so we do not add it.
+    if (docTemplate->FileMatchesTemplate(fileName))
+    {
+      GetDocumentManager()->AddFileToHistory(fileName);
+    }
+#if defined( __WXGTK__ ) // TODO: and other OS?
+    else // The user will probably not be able to open the file again, so
+         // we warn about the wrong file-extension.
+    {
+      wxMessageBox(_("The file was saved with an unsupported extension!"));
+    }
+#endif // __WXGTK__
+    return TRUE;
 }
 
@@ -1126,5 +1144,14 @@
 
     if (flags & wxDOC_SILENT)
+    {
         temp = FindTemplateForPath(path2);
+        if ( !temp )
+        {
+            // Since we do not add files with non-default extensions to the FileHistory this 
+            // can only happen if the application changes the allowed templates in runtime.
+            (void)wxMessageBox(_("Cannot open files with unknown file format."), _("Sorry"), 
+                               wxOK | wxICON_EXCLAMATION, wxFindSuitableParent());
+        }
+    }
     else
         temp = SelectDocumentPath(templates, n, path2, flags);
@@ -1145,6 +1172,11 @@
                 return (wxDocument *) NULL;
             }
+            // A file that doesn't use the default extension of its document template cannot be opened 
+            // via the FileHistory, so we do not add it.
+            if (temp->FileMatchesTemplate(path2)) // always true in wxGTK
+            {
             AddFileToHistory(path2);
         }
+        }
         return newDoc;
     }
@@ -1409,5 +1441,5 @@
                                         &FilterIndex,
                                         descrBuf,
-                                        0,
+                                        wxHIDE_READONLY, // we can't retrieve the value checked by the user
                                         parent);
 
@@ -1439,4 +1471,9 @@
         if ( !theTemplate )
             theTemplate = FindTemplateForPath(path);
+        if ( !theTemplate )
+        {
+            (void)wxMessageBox(_("Cannot open files with unknown file format."), _("Sorry"), 
+                               wxOK | wxICON_EXCLAMATION, parent);
+        }
     }
     else
@@ -1793,5 +1830,9 @@
         {
             // try to open it
-            (void)m_docManager->CreateDocument(filename, wxDOC_SILENT);
+            if( !(m_docManager->CreateDocument(filename, wxDOC_SILENT)) )
+            {
+                // remove the file from the MRU list. The user should already be notified.
+                m_docManager->RemoveFileFromHistory(n);
+            }
         }
         else
@@ -1923,5 +1964,14 @@
     for (i = 0; i < m_fileHistoryN; i++)
     {
-        if ( m_fileHistory[i] && (file == m_fileHistory[i]) )
+#if defined( __WXMSW__ ) // TODO: any other OS with case insensitive file names?
+        wxString testString( m_fileHistory[i] );
+        if (      m_fileHistory[i] 
+              && ( file.Lower() == testString.Lower() ) 
+           )
+#else
+        if (      m_fileHistory[i] 
+              && ( file == m_fileHistory[i] )
+           )
+#endif
         {
             // we do have it, move it to the top of the history
@@ -2085,5 +2135,5 @@
     buf.Printf(wxT("file%d"), m_fileHistoryN+1);
     wxString historyFile;
-    while ((m_fileHistoryN <= m_fileMaxFiles) && config.Read(buf, &historyFile) && (historyFile != wxT("")))
+    while ((m_fileHistoryN < m_fileMaxFiles) && config.Read(buf, &historyFile) && (historyFile != wxT("")))
     {
         m_fileHistory[m_fileHistoryN] = copystring((const wxChar*) historyFile);
@@ -2098,9 +2148,10 @@
 {
     int i;
-    for (i = 0; i < m_fileHistoryN; i++)
+    wxString empty(wxT(""));
+    for (i = 0; i < m_fileMaxFiles; i++)
     {
         wxString buf;
         buf.Printf(wxT("file%d"), i+1);
-        config.Write(buf, wxString(m_fileHistory[i]));
+        config.Write(buf, i < m_fileHistoryN ? wxString(m_fileHistory[i]) : empty);
     }
 }

 	  	 
