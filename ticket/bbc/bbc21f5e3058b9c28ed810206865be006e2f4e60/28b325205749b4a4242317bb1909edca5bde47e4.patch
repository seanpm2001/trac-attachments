diff -bru wxWidgets.orig/interface/wx/textctrl.h wxWidgets.patched/interface/wx/textctrl.h
--- wxWidgets.orig/interface/wx/textctrl.h	2015-09-06 01:59:17.000000000 -0400
+++ wxWidgets.patched/interface/wx/textctrl.h	2015-09-08 00:56:46.000000000 -0400
@@ -30,7 +30,6 @@
 // automatically detect the URLs and generate the events when mouse is
 // moved/clicked over an URL
 //
-// this is for Win32 richedit and wxGTK2 multiline controls only so far
 #define wxTE_AUTO_URL       0x1000
 
 // by default, the Windows text control doesn't show the selection when it
@@ -968,8 +967,7 @@
            ignored under other platforms
     @style{wxTE_AUTO_URL}
            Highlight the URLs and generate the wxTextUrlEvents when mouse
-           events occur over them. This style is only supported for wxTE_RICH
-           Win32 and multi-line wxGTK2 text controls.
+           events occur over them.
     @style{wxTE_NOHIDESEL}
            By default, the Windows text control doesn't show the selection
            when it doesn't have focus - use this style to force it to always
@@ -1149,8 +1147,7 @@
         pressed in a text control which must have wxTE_PROCESS_ENTER style for
         this event to be generated.
     @event{EVT_TEXT_URL(id, func)}
-        A mouse event occurred over an URL in the text control (wxMSW and
-        wxGTK2 only currently).
+        A mouse event occurred over an URL in the text control 
     @event{EVT_TEXT_MAXLEN(id, func)}
         This event is generated when the user tries to enter more text into the
         control than the limit set by wxTextCtrl::SetMaxLength(), see its description.
diff -bru wxWidgets.orig/src/osx/cocoa/textctrl.mm wxWidgets.patched/src/osx/cocoa/textctrl.mm
--- wxWidgets.orig/src/osx/cocoa/textctrl.mm	2015-09-06 01:59:19.000000000 -0400
+++ wxWidgets.patched/src/osx/cocoa/textctrl.mm	2015-09-09 08:35:58.000000000 -0400
@@ -352,7 +352,12 @@
     wxUnusedVar(aNotification);
     wxWidgetCocoaImpl* impl = (wxWidgetCocoaImpl* ) wxWidgetImpl::FindFromWXWidget( self );
     if ( impl )
+    {
         impl->controlTextDidChange();
+        wxWindow *wxpeer = impl->GetWXPeer();
+        if( wxpeer && wxpeer->GetWindowStyle() & wxTE_AUTO_URL )
+            [self checkTextInDocument:nil];
+    }
 }
 
 - (void) setEnabled:(BOOL) flag
@@ -391,6 +396,23 @@
         impl->DoNotifyFocusLost();
 }
 
+-(BOOL)textView:(NSTextView *)aTextView clickedOnLink:(id)link atIndex:(NSUInteger)charIndex
+{
+    wxWidgetCocoaImpl* impl = (wxWidgetCocoaImpl* ) wxWidgetImpl::FindFromWXWidget( aTextView );
+    if ( impl  )
+    {
+        wxWindow* wxpeer = (wxWindow*) impl->GetWXPeer();
+        if ( wxpeer )
+        {
+            wxMouseEvent evtMouse( wxEVT_LEFT_DOWN );
+            wxTextUrlEvent event( wxpeer->GetId(), evtMouse, (long int)charIndex, (long int)charIndex );
+            event.SetEventObject( wxpeer );
+            wxpeer->HandleWindowEvent( event );
+        }
+    }
+    return NO;
+}
+
 @end
 
 @implementation wxNSTextField
@@ -584,6 +606,8 @@
     {
         [tv setRichText:NO];
     }
+    if( wxPeer->HasFlag( wxTE_AUTO_URL ) )
+        [tv setAutomaticLinkDetectionEnabled:YES];
 
     [m_scrollView setDocumentView: tv];
 
@@ -625,6 +649,7 @@
     }
     return wxEmptyString;
 }
+
 void wxNSTextViewControl::SetStringValue( const wxString &str)
 {
     wxString st = str;
@@ -632,7 +657,11 @@
     wxMacEditHelper helper(m_textView);
 
     if (m_textView)
+    {
         [m_textView setString: wxCFStringRef( st , m_wxPeer->GetFont().GetEncoding() ).AsNSString()];
+        if( m_wxPeer->GetWindowStyle() & wxTE_AUTO_URL )
+            [m_textView checkTextInDocument:nil];
+    }
 }
 
 void wxNSTextViewControl::Copy()
