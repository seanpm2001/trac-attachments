diff -bru wxWidgets.orig/interface/wx/textctrl.h wxWidgets.patched/interface/wx/textctrl.h
--- wxWidgets.orig/interface/wx/textctrl.h	2015-09-06 01:59:17.000000000 -0400
+++ wxWidgets.patched/interface/wx/textctrl.h	2015-09-08 00:56:46.000000000 -0400
@@ -30,7 +30,6 @@
 // automatically detect the URLs and generate the events when mouse is
 // moved/clicked over an URL
 //
-// this is for Win32 richedit and wxGTK2 multiline controls only so far
 #define wxTE_AUTO_URL       0x1000
 
 // by default, the Windows text control doesn't show the selection when it
@@ -968,8 +967,7 @@
            ignored under other platforms
     @style{wxTE_AUTO_URL}
            Highlight the URLs and generate the wxTextUrlEvents when mouse
-           events occur over them. This style is only supported for wxTE_RICH
-           Win32 and multi-line wxGTK2 text controls.
+           events occur over them.
     @style{wxTE_NOHIDESEL}
            By default, the Windows text control doesn't show the selection
            when it doesn't have focus - use this style to force it to always
@@ -1149,8 +1147,7 @@
         pressed in a text control which must have wxTE_PROCESS_ENTER style for
         this event to be generated.
     @event{EVT_TEXT_URL(id, func)}
-        A mouse event occurred over an URL in the text control (wxMSW and
-        wxGTK2 only currently).
+        A mouse event occurred over an URL in the text control 
     @event{EVT_TEXT_MAXLEN(id, func)}
         This event is generated when the user tries to enter more text into the
         control than the limit set by wxTextCtrl::SetMaxLength(), see its description.
diff -bru wxWidgets.orig/samples/text/text.cpp wxWidgets.patched/samples/text/text.cpp
--- wxWidgets.orig/samples/text/text.cpp	2015-09-06 01:59:18.000000000 -0400
+++ wxWidgets.patched/samples/text/text.cpp	2015-09-07 00:29:40.000000000 -0400
@@ -1159,6 +1159,26 @@
                                 wxT("test wxTE_AUTO_URL: \"http://www.wxwidgets.org\""),
                                 wxPoint(450, 10), wxSize(200, 230),
                                 wxTE_RICH | wxTE_MULTILINE | wxTE_AUTO_URL);
+/*    wxString temp = wxT("Allows more than 30Kb of text\n")
+                    wxT("(even under broken Win9x)\n")
+                    wxT("and a very very very very very ")
+                    wxT("very very very long line to test ")
+                    wxT("wxHSCROLL style\n")
+                    wxT("\nAnd here is a link in quotation marks to ")
+                    wxT("test wxTE_AUTO_URL: \"http://www.wxwidgets.org\"");
+    int pos, pos1;
+    if( ( pos = temp.Find( "http://" ) ) != wxNOT_FOUND || ( pos = temp.Find( "https://" ) ) != wxNOT_FOUND )
+    {
+        wxString substr1 = temp.substr( 0, pos );
+        wxString substr2 = temp.substr( pos );
+        wxMessageBox( wxString::Format( "String started from URL is %s", substr2.c_str() ) );
+        pos1 = substr2.Find( '\"' );
+        if( pos1 != wxNOT_FOUND )
+        {
+        wxString url = substr2.substr( pos, pos1 - 1 );
+        wxMessageBox( wxString::Format( "The URL is %s", url.c_str() ) );
+        }
+    }*/
     m_textrich->SetStyle(0, 10, *wxRED);
     m_textrich->SetStyle(10, 20, *wxBLUE);
     m_textrich->SetStyle(30, 40,
diff -bru wxWidgets.orig/src/osx/cocoa/textctrl.mm wxWidgets.patched/src/osx/cocoa/textctrl.mm
--- wxWidgets.orig/src/osx/cocoa/textctrl.mm	2015-09-06 01:59:19.000000000 -0400
+++ wxWidgets.patched/src/osx/cocoa/textctrl.mm	2015-09-08 00:24:48.000000000 -0400
@@ -49,6 +49,24 @@
 #include "wx/osx/private.h"
 #include "wx/osx/cocoa/private/textimpl.h"
 
+@interface NSAttributedString(Hyperlink)
++(id)hyperlinkFromString:(NSString*)inString withURL:(NSURL*)aURL;
+@end
+
+@implementation NSAttributedString(Hyperlink)
++(id)hyperlinkFromString:(NSString*)inString withURL:(NSURL*)aURL
+{
+    NSMutableAttributedString *attrString = [[NSMutableAttributedString alloc] initWithString: inString];
+    NSRange range = NSMakeRange( 0, [attrString length] );
+    [attrString beginEditing];
+    [attrString addAttribute:NSLinkAttributeName value:[aURL absoluteString] range:range];
+    [attrString addAttribute:NSForegroundColorAttributeName value:[NSColor blueColor] range:range];
+    [attrString addAttribute: NSUnderlineStyleAttributeName value:[NSNumber numberWithInt:NSSingleUnderlineStyle] range:range];
+    [attrString endEditing];
+    return [attrString autorelease];
+}
+@end
+
 @interface NSView(EditableView)
 - (BOOL)isEditable;
 - (void)setEditable:(BOOL)flag;
@@ -391,6 +409,23 @@
         impl->DoNotifyFocusLost();
 }
 
+-(BOOL)textView:(NSTextView *)aTextView clickedOnLink:(id)link atIndex:(NSUInteger)charIndex
+{
+    wxWidgetCocoaImpl* impl = (wxWidgetCocoaImpl* ) wxWidgetImpl::FindFromWXWidget( aTextView );
+    if ( impl  )
+    {
+        wxWindow* wxpeer = (wxWindow*) impl->GetWXPeer();
+        if ( wxpeer )
+        {
+            wxMouseEvent evtMouse( wxEVT_LEFT_DOWN );
+            wxTextUrlEvent event( wxpeer->GetId(), evtMouse, (long int)charIndex, (long int)charIndex );
+            event.SetEventObject( wxpeer );
+            wxpeer->HandleWindowEvent( event );
+        }
+    }
+    return NO;
+}
+
 @end
 
 @implementation wxNSTextField
@@ -584,6 +619,8 @@
     {
         [tv setRichText:NO];
     }
+    if( wxPeer->HasFlag( wxTE_AUTO_URL ) )
+        [tv setAutomaticLinkDetectionEnabled:YES];
 
     [m_scrollView setDocumentView: tv];
 
@@ -632,7 +669,31 @@
     wxMacEditHelper helper(m_textView);
 
     if (m_textView)
+    {
+        if( m_wxPeer->GetWindowStyle() & wxTE_AUTO_URL )
+        {
+            int pos, pos1;
+            if( ( pos = st.Find( "http://" ) ) != wxNOT_FOUND || ( pos = st.Find( "https://" ) ) != wxNOT_FOUND )
+            {
+                wxString substr1 = st.substr( 0, pos );
+                [m_textView setString: wxCFStringRef( substr1 , m_wxPeer->GetFont().GetEncoding() ).AsNSString()];
+                wxString substr2 = st.substr( pos );
+                pos1 = substr2.Find( '\"' );
+                if( pos1 != wxNOT_FOUND )
+                {
+                    wxString url = st.substr( pos, pos1 );
+                    NSMutableAttributedString *temp = [[NSMutableAttributedString alloc] init];
+                    NSURL *url_obj = [NSURL URLWithString: wxCFStringRef(url).AsNSString()];
+                    [temp appendAttributedString:[NSAttributedString hyperlinkFromString:wxCFStringRef(url).AsNSString() withURL:url_obj]];
+                    NSRange range = NSMakeRange( pos, pos + ( pos1 ) );
+                    [[m_textView textStorage] appendAttributedString:temp];
+                    [temp release];
+                }
+            }
+        }
+        else
         [m_textView setString: wxCFStringRef( st , m_wxPeer->GetFont().GetEncoding() ).AsNSString()];
+    }
 }
 
 void wxNSTextViewControl::Copy()
