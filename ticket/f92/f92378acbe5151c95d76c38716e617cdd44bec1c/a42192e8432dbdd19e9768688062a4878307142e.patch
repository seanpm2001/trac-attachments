Index: wxWindows/include/wx/event.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/event.h,v
retrieving revision 1.139
diff -u -2 -r1.139 event.h
--- wxWindows/include/wx/event.h	6 Mar 2002 11:37:26 -0000	1.139
+++ wxWindows/include/wx/event.h	15 Mar 2002 01:38:37 -0000
@@ -208,10 +208,12 @@
         // System events
     DECLARE_EVENT_TYPE(wxEVT_SIZE, 400)
-    DECLARE_EVENT_TYPE(wxEVT_MOVE, 401)
-    DECLARE_EVENT_TYPE(wxEVT_CLOSE_WINDOW, 402)
-    DECLARE_EVENT_TYPE(wxEVT_END_SESSION, 403)
-    DECLARE_EVENT_TYPE(wxEVT_QUERY_END_SESSION, 404)
-    DECLARE_EVENT_TYPE(wxEVT_ACTIVATE_APP, 405)
-    DECLARE_EVENT_TYPE(wxEVT_POWER, 406)
+    DECLARE_EVENT_TYPE(wxEVT_SIZING, 401)
+    DECLARE_EVENT_TYPE(wxEVT_MOVE, 402)
+    DECLARE_EVENT_TYPE(wxEVT_MOVING, 403)
+    DECLARE_EVENT_TYPE(wxEVT_CLOSE_WINDOW, 404)
+    DECLARE_EVENT_TYPE(wxEVT_END_SESSION, 405)
+    DECLARE_EVENT_TYPE(wxEVT_QUERY_END_SESSION, 406)
+    DECLARE_EVENT_TYPE(wxEVT_ACTIVATE_APP, 407)
+    DECLARE_EVENT_TYPE(wxEVT_POWER, 408)
     DECLARE_EVENT_TYPE(wxEVT_ACTIVATE, 409)
     DECLARE_EVENT_TYPE(wxEVT_CREATE, 410)
@@ -870,4 +872,29 @@
 };
 
+// Moving event class
+
+/*
+ wxEVT_SIZING
+ */
+
+class WXDLLEXPORT wxSizingEvent : public wxEvent
+{
+public:
+    wxSizingEvent() { m_eventType = wxEVT_SIZING; }
+    wxSizingEvent(const wxRect& rect, int id = 0)
+        : m_rect(rect)
+        { m_eventType = wxEVT_SIZING; m_id = id; }
+
+    wxRect GetRect() const { return m_rect; }
+    void SetRect(wxRect rect) { m_rect = rect; }
+
+    virtual wxEvent *Clone() const { return new wxSizingEvent(*this); }
+
+    wxRect m_rect;
+
+private:
+    DECLARE_DYNAMIC_CLASS(wxSizingEvent)
+};
+
 // Move event class
 
@@ -894,4 +921,29 @@
 };
 
+// Moving event class
+
+/*
+ wxEVT_MOVING
+ */
+
+class WXDLLEXPORT wxMovingEvent : public wxEvent
+{
+public:
+    wxMovingEvent() { m_eventType = wxEVT_MOVING; }
+    wxMovingEvent(const wxRect& rect, int id = 0)
+        : m_rect(rect)
+        { m_eventType = wxEVT_MOVING; m_id = id; }
+
+    wxRect GetRect() const { return m_rect; }
+    void SetRect(wxRect rect) { m_rect = rect; }
+
+    virtual wxEvent *Clone() const { return new wxMovingEvent(*this); }
+
+    wxRect m_rect;
+
+private:
+    DECLARE_DYNAMIC_CLASS(wxMovingEvent)
+};
+
 // Paint event class
 /*
@@ -1906,5 +1958,7 @@
 typedef void (wxEvtHandler::*wxScrollWinEventFunction)(wxScrollWinEvent&);
 typedef void (wxEvtHandler::*wxSizeEventFunction)(wxSizeEvent&);
+typedef void (wxEvtHandler::*wxSizingEventFunction)(wxSizingEvent&);
 typedef void (wxEvtHandler::*wxMoveEventFunction)(wxMoveEvent&);
+typedef void (wxEvtHandler::*wxMovingEventFunction)(wxMovingEvent&);
 typedef void (wxEvtHandler::*wxPaintEventFunction)(wxPaintEvent&);
 typedef void (wxEvtHandler::*wxEraseEventFunction)(wxEraseEvent&);
@@ -1966,5 +2020,7 @@
 // Miscellaneous
 #define EVT_SIZE(func)  DECLARE_EVENT_TABLE_ENTRY( wxEVT_SIZE, -1, -1, (wxObjectEventFunction) (wxEventFunction) (wxSizeEventFunction) & func, (wxObject *) NULL ),
+#define EVT_SIZING(func)  DECLARE_EVENT_TABLE_ENTRY( wxEVT_SIZING, -1, -1, (wxObjectEventFunction) (wxEventFunction) (wxSizingEventFunction) & func, (wxObject *) NULL ),
 #define EVT_MOVE(func)  DECLARE_EVENT_TABLE_ENTRY( wxEVT_MOVE, -1, -1, (wxObjectEventFunction) (wxEventFunction) (wxMoveEventFunction) & func, (wxObject *) NULL ),
+#define EVT_MOVING(func)  DECLARE_EVENT_TABLE_ENTRY( wxEVT_MOVING, -1, -1, (wxObjectEventFunction) (wxEventFunction) (wxMovingEventFunction) & func, (wxObject *) NULL ),
 #define EVT_CLOSE(func)  DECLARE_EVENT_TABLE_ENTRY( wxEVT_CLOSE_WINDOW, -1, -1, (wxObjectEventFunction) (wxEventFunction) (wxCloseEventFunction) & func, (wxObject *) NULL ),
 #define EVT_END_SESSION(func)  DECLARE_EVENT_TABLE_ENTRY( wxEVT_END_SESSION, -1, -1, (wxObjectEventFunction) (wxEventFunction) (wxCloseEventFunction) & func, (wxObject *) NULL ),
Index: wxWindows/include/wx/msw/window.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/msw/window.h,v
retrieving revision 1.84
diff -u -2 -r1.84 window.h
--- wxWindows/include/wx/msw/window.h	17 Feb 2002 22:43:42 -0000	1.84
+++ wxWindows/include/wx/msw/window.h	15 Mar 2002 01:38:37 -0000
@@ -322,4 +322,5 @@
     bool HandleMaximize();
     bool HandleSize(int x, int y, WXUINT flag);
+    bool HandleSizing(wxRect& rect);
     bool HandleGetMinMaxInfo(void *mmInfo);
 
@@ -467,4 +468,5 @@
     // the (non-virtual) handlers for the events
     bool HandleMove(int x, int y);
+    bool HandleMoving(wxRect& rect);
     bool HandleJoystickEvent(WXUINT msg, int x, int y, WXUINT flags);
 
Index: wxWindows/src/common/event.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/common/event.cpp,v
retrieving revision 1.104
diff -u -2 -r1.104 event.cpp
--- wxWindows/src/common/event.cpp	23 Feb 2002 23:13:17 -0000	1.104
+++ wxWindows/src/common/event.cpp	15 Mar 2002 01:38:39 -0000
@@ -63,8 +63,10 @@
     IMPLEMENT_DYNAMIC_CLASS(wxKeyEvent, wxEvent)
     IMPLEMENT_DYNAMIC_CLASS(wxSizeEvent, wxEvent)
+    IMPLEMENT_DYNAMIC_CLASS(wxSizingEvent, wxEvent)
     IMPLEMENT_DYNAMIC_CLASS(wxPaintEvent, wxEvent)
     IMPLEMENT_DYNAMIC_CLASS(wxNcPaintEvent, wxEvent)
     IMPLEMENT_DYNAMIC_CLASS(wxEraseEvent, wxEvent)
     IMPLEMENT_DYNAMIC_CLASS(wxMoveEvent, wxEvent)
+    IMPLEMENT_DYNAMIC_CLASS(wxMovingEvent, wxEvent)
     IMPLEMENT_DYNAMIC_CLASS(wxFocusEvent, wxEvent)
     IMPLEMENT_DYNAMIC_CLASS(wxChildFocusEvent, wxCommandEvent)
@@ -203,5 +205,7 @@
 // System events
 DEFINE_EVENT_TYPE(wxEVT_SIZE)
+DEFINE_EVENT_TYPE(wxEVT_SIZING)
 DEFINE_EVENT_TYPE(wxEVT_MOVE)
+DEFINE_EVENT_TYPE(wxEVT_MOVING)
 DEFINE_EVENT_TYPE(wxEVT_CLOSE_WINDOW)
 DEFINE_EVENT_TYPE(wxEVT_END_SESSION)
Index: wxWindows/src/msw/window.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/msw/window.cpp,v
retrieving revision 1.301
diff -u -2 -r1.301 window.cpp
--- wxWindows/src/msw/window.cpp	7 Mar 2002 22:42:02 -0000	1.301
+++ wxWindows/src/msw/window.cpp	15 Mar 2002 01:38:42 -0000
@@ -2241,4 +2241,22 @@
             break;
 
+        case WM_MOVING:
+			{
+				LPRECT pRect = (LPRECT)lParam;
+				wxRect rc;
+				rc.SetLeft(pRect->left);
+				rc.SetTop(pRect->top);
+				rc.SetRight(pRect->right);
+				rc.SetBottom(pRect->bottom);
+				processed = HandleMoving(rc);
+				if (processed) {
+					pRect->left = rc.GetLeft();
+					pRect->top = rc.GetTop();
+					pRect->right = rc.GetRight();
+					pRect->bottom = rc.GetBottom();
+				}
+			}
+            break;
+
         case WM_SIZE:
             switch ( wParam )
@@ -2269,4 +2287,22 @@
             break;
 
+        case WM_SIZING:
+			{
+				LPRECT pRect = (LPRECT)lParam;
+				wxRect rc;
+				rc.SetLeft(pRect->left);
+				rc.SetTop(pRect->top);
+				rc.SetRight(pRect->right);
+				rc.SetBottom(pRect->bottom);
+				processed = HandleSizing(rc);
+				if (processed) {
+					pRect->left = rc.GetLeft();
+					pRect->top = rc.GetTop();
+					pRect->right = rc.GetRight();
+					pRect->bottom = rc.GetBottom();
+				}
+			}
+            break;
+
 #ifndef __WXMICROWIN__
         case WM_ACTIVATEAPP:
@@ -3732,4 +3768,15 @@
 }
 
+bool wxWindowMSW::HandleMoving(wxRect& rect)
+{
+    wxMovingEvent event(rect, m_windowId);
+    event.SetEventObject(this);
+
+    bool rc = GetEventHandler()->ProcessEvent(event);
+	if (rc)
+		rect = event.GetRect();
+	return rc;
+}
+
 bool wxWindowMSW::HandleSize(int w, int h, WXUINT WXUNUSED(flag))
 {
@@ -3738,4 +3785,15 @@
 
     return GetEventHandler()->ProcessEvent(event);
+}
+
+bool wxWindowMSW::HandleSizing(wxRect& rect)
+{
+    wxSizingEvent event(rect, m_windowId);
+    event.SetEventObject(this);
+
+    bool rc = GetEventHandler()->ProcessEvent(event);
+	if (rc)
+		rect = event.GetRect();
+	return rc;
 }
 
Index: wxWindows/src/mac/toplevel.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/mac/toplevel.cpp,v
retrieving revision 1.12
diff -u -2 -r1.12 toplevel.cpp
--- wxWindows/src/mac/toplevel.cpp	19 Feb 2002 10:45:27 -0000	1.12
+++ wxWindows/src/mac/toplevel.cpp	17 Mar 2002 06:30:51 -0000
@@ -89,4 +89,57 @@
 }
 
+#if TARGET_CARBON
+static pascal OSStatus
+WindowHandler( EventHandlerCallRef inHandler, EventRef inEvent, void* userData )
+{
+	Rect		bounds;
+	SInt16		height, width;
+	UInt32		attributes;
+	OSStatus	result = eventNotHandledErr;
+
+	GetEventParameter( inEvent, kEventParamAttributes, typeUInt32, NULL, sizeof( UInt32 ), NULL, &attributes );
+
+	if ((attributes & (kWindowBoundsChangeSizeChanged | kWindowBoundsChangeOriginChanged)) != 0)
+	{
+		// Extract the current bounds. This is the paramter you get to modify to
+		// alter the window position or size during a window resizing.
+		GetEventParameter( inEvent, kEventParamCurrentBounds, typeQDRectangle, NULL, sizeof( bounds ), NULL, &bounds );
+
+		wxRect rect;
+		rect.SetLeft(bounds.left);
+		rect.SetTop(bounds.top);
+		rect.SetRight(bounds.right);
+		rect.SetBottom(bounds.bottom);
+
+		bool rc;
+		wxWindowMac *pWindow = (wxWindowMac*)userData;
+		if ((attributes & kWindowBoundsChangeSizeChanged) != 0) {
+			wxSizingEvent event(rect, pWindow->GetId());
+			event.SetEventObject(pWindow);
+			rc = pWindow->GetEventHandler()->ProcessEvent(event);
+			rect = event.GetRect();
+		}
+		else {
+			wxMovingEvent event(rect, pWindow->GetId());
+			event.SetEventObject(pWindow);
+			rc = pWindow->GetEventHandler()->ProcessEvent(event);
+			rect = event.GetRect();
+		}
+
+		if (rc) {
+			bounds.left = rect.GetLeft();
+			bounds.top = rect.GetTop();
+			bounds.right = rect.GetRight();
+			bounds.bottom = rect.GetBottom();
+		}
+
+		// Set the current bounds parameter to our adjusted bounds. Return
+		// noErr to indicate we handled this event.
+		SetEventParameter( inEvent, kEventParamCurrentBounds, typeQDRectangle, sizeof( bounds ), &bounds );
+		result = noErr;
+	}
+	return result;
+}
+#endif
 
 // ----------------------------------------------------------------------------
@@ -282,4 +282,13 @@
     ::CreateRootControl( (WindowRef)m_macWindow , (ControlHandle*)&m_macRootControl ) ;
 
+#if TARGET_CARBON
+	// install a window event handler to send wxEVT_MOVING and wxEVT_SIZING events
+	EventTypeSpec events[] = { { kEventClassWindow, kEventWindowBoundsChanging } };
+	EventHandlerUPP	handlerProc = NewEventHandlerUPP( WindowHandler );
+	EventHandlerRef eventHandlerRef;
+	InstallWindowEventHandler( m_macWindowData->m_macWindow, handlerProc, GetEventTypeCount(events),
+				events, (void*)this, &eventHandlerRef);
+#endif
+
     m_macFocus = NULL ;
 }

 	  	 
