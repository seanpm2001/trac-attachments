Index: src/common/dynload.cpp
===================================================================
--- src/common/dynload.cpp	(revision 72922)
+++ src/common/dynload.cpp	(working copy)
@@ -79,21 +79,20 @@
     const wxClassInfo* const oldFirst = wxClassInfo::GetFirst();
     Load( libname, flags );
 
-    // It is simple to know what is the first object in the linked list of
-    // wxClassInfo that we registered (it's also the last one chronologically),
-    // it's just the new head of the wxClassInfo list:
-    m_ourFirst = wxClassInfo::GetFirst();
+    // It is simple to know what is the last object we registered, it's just
+    // the new head of the wxClassInfo list:
+    m_ourLast = wxClassInfo::GetFirst();
 
     // But to find the first wxClassInfo created by this library we need to
     // iterate until we get to the previous head as we don't have the links in
     // the backwards direction:
-    if ( m_ourFirst != oldFirst )
+    if ( m_ourLast != oldFirst )
     {
-        for ( const wxClassInfo* info = m_ourFirst; ; info = info->GetNext() )
+        for ( const wxClassInfo* info = m_ourLast; ; info = info->GetNext() )
         {
             if ( info->GetNext() == oldFirst )
             {
-                m_ourLast = info;
+                m_ourFirst = info;
                 break;
             }
         }
@@ -157,7 +156,7 @@
     if ( !m_ourFirst )
         return;
 
-    for ( const wxClassInfo *info = m_ourFirst; ; info = info->GetNext() )
+    for ( const wxClassInfo *info = /*m_ourFirst*/m_ourLast; ; info = info->GetNext() )
     {
         if( info->GetClassName() )
         {
@@ -166,7 +165,7 @@
             (*ms_classes)[info->GetClassName()] = this;
         }
 
-        if ( info == m_ourLast )
+        if ( info == /*m_ourLast*/m_ourFirst )
             break;
     }
 }
@@ -180,11 +179,11 @@
     if ( !m_ourFirst )
         return;
 
-    for ( const wxClassInfo *info = m_ourFirst; ; info = info->GetNext() )
+    for ( const wxClassInfo *info = /*m_ourFirst*/m_ourLast; ; info = info->GetNext() )
     {
         ms_classes->erase(ms_classes->find(info->GetClassName()));
 
-        if ( info == m_ourLast )
+        if ( info == /*m_ourLast*/m_ourFirst )
             break;
     }
 }
@@ -204,7 +203,7 @@
 
     if ( m_ourFirst )
     {
-        for ( const wxClassInfo *info = m_ourFirst; ; info = info->GetNext() )
+        for ( const wxClassInfo *info = /*m_ourFirst*/m_ourLast; ; info = info->GetNext() )
         {
             if( info->IsKindOf(wxCLASSINFO(wxModule)) )
             {
@@ -216,7 +215,7 @@
                 wxModule::RegisterModule(m);
             }
 
-            if ( info == m_ourLast )
+            if ( info == /*m_ourLast*/m_ourFirst )
                 break;
         }
     }
