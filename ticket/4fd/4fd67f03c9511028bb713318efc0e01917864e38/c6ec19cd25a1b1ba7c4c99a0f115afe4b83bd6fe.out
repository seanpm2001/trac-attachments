==31765== Memcheck, a memory error detector.
==31765== Copyright (C) 2002-2005, and GNU GPL'd, by Julian Seward et al.
==31765== Using LibVEX rev 1471, a library for dynamic binary translation.
==31765== Copyright (C) 2004-2005, and GNU GPL'd, by OpenWorks LLP.
==31765== Using valgrind-3.1.0-Debian, a dynamic binary instrumentation framework.
==31765== Copyright (C) 2000-2005, and GNU GPL'd, by Julian Seward et al.
==31765== For more details, rerun with: -v
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x40757A1: PyString_InternInPlace (stringobject.c:4337)
==31765==    by 0x4078A23: PyString_InternFromString (stringobject.c:4364)
==31765==    by 0x4082ED9: PyType_Ready (typeobject.c:5323)
==31765==    by 0x4084502: PyType_Ready (typeobject.c:3156)
==31765==    by 0x407044F: _Py_ReadyTypes (object.c:1820)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x40757A1: PyString_InternInPlace (stringobject.c:4337)
==31765==    by 0x4078A23: PyString_InternFromString (stringobject.c:4364)
==31765==    by 0x4082ED9: PyType_Ready (typeobject.c:5323)
==31765==    by 0x4084502: PyType_Ready (typeobject.c:3156)
==31765==    by 0x407044F: _Py_ReadyTypes (object.c:1820)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4084E93: mro_implementation (typeobject.c:1201)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4070465: _Py_ReadyTypes (object.c:1823)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765==  Address 0x43CA010 is 8 bytes before a block of size 4 free'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x406142A: PyList_Append (listobject.c:53)
==31765==    by 0x4084B7D: mro_implementation (typeobject.c:1184)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4070465: _Py_ReadyTypes (object.c:1823)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x4084FDE: mro_internal (typeobject.c:1309)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4070465: _Py_ReadyTypes (object.c:1823)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765==  Address 0x43CA010 is 8 bytes before a block of size 4 free'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x406142A: PyList_Append (listobject.c:53)
==31765==    by 0x4084B7D: mro_implementation (typeobject.c:1184)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4070465: _Py_ReadyTypes (object.c:1823)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x4083850: PyType_Ready (typeobject.c:5482)
==31765==    by 0x4084502: PyType_Ready (typeobject.c:3156)
==31765==    by 0x407047B: _Py_ReadyTypes (object.c:1826)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765==  Address 0x43CA010 is 8 bytes before a block of size 4 free'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x406142A: PyList_Append (listobject.c:53)
==31765==    by 0x4084B7D: mro_implementation (typeobject.c:1184)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4070465: _Py_ReadyTypes (object.c:1823)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x405DD61: list_dealloc (listobject.c:264)
==31765==    by 0x4084E67: mro_implementation (typeobject.c:1273)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4084502: PyType_Ready (typeobject.c:3156)
==31765==    by 0x407047B: _Py_ReadyTypes (object.c:1826)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765==  Address 0x43CA010 is 8 bytes before a block of size 4 free'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x406142A: PyList_Append (listobject.c:53)
==31765==    by 0x4084B7D: mro_implementation (typeobject.c:1184)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4070465: _Py_ReadyTypes (object.c:1823)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x4084E67: mro_implementation (typeobject.c:1273)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4084502: PyType_Ready (typeobject.c:3156)
==31765==    by 0x407047B: _Py_ReadyTypes (object.c:1826)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765==  Address 0x43CA010 is 8 bytes before a block of size 4 free'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x406142A: PyList_Append (listobject.c:53)
==31765==    by 0x4084B7D: mro_implementation (typeobject.c:1184)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4070465: _Py_ReadyTypes (object.c:1823)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x406C9F7: PyDict_SetItemString (dictobject.c:2026)
==31765==    by 0x4082E8D: PyType_Ready (typeobject.c:2826)
==31765==    by 0x4070491: _Py_ReadyTypes (object.c:1829)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765==  Address 0x43CB010 is not stack'd, malloc'd or (recently) free'd
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x4083850: PyType_Ready (typeobject.c:5482)
==31765==    by 0x40704A7: _Py_ReadyTypes (object.c:1832)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765==  Address 0x43CB010 is not stack'd, malloc'd or (recently) free'd
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x406C9F7: PyDict_SetItemString (dictobject.c:2026)
==31765==    by 0x40CA184: Py_InitModule4 (modsupport.c:82)
==31765==    by 0x409DC77: _PyBuiltin_Init (bltinmodule.c:2173)
==31765==    by 0x40CDE49: Py_InitializeEx (pythonrun.c:184)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765==  Address 0x43CD010 is 192 bytes inside a block of size 384 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x406C9F7: PyDict_SetItemString (dictobject.c:2026)
==31765==    by 0x4082E8D: PyType_Ready (typeobject.c:2826)
==31765==    by 0x4093FB5: _PyUnicodeUCS2_Init (unicodeobject.c:7359)
==31765==    by 0x40CDE44: Py_InitializeEx (pythonrun.c:181)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x409FFE7: _PyExc_Init (exceptions.c:1804)
==31765==    by 0x40CDED3: Py_InitializeEx (pythonrun.c:207)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765==  Address 0x43D1010 is not stack'd, malloc'd or (recently) free'd
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x406C9F7: PyDict_SetItemString (dictobject.c:2026)
==31765==    by 0x40A0052: _PyExc_Init (exceptions.c:1818)
==31765==    by 0x40CDED3: Py_InitializeEx (pythonrun.c:207)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765==  Address 0x43CD010 is 192 bytes inside a block of size 384 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x406C9F7: PyDict_SetItemString (dictobject.c:2026)
==31765==    by 0x4082E8D: PyType_Ready (typeobject.c:2826)
==31765==    by 0x4093FB5: _PyUnicodeUCS2_Init (unicodeobject.c:7359)
==31765==    by 0x40CDE44: Py_InitializeEx (pythonrun.c:181)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x406C9F7: PyDict_SetItemString (dictobject.c:2026)
==31765==    by 0x40A002F: _PyExc_Init (exceptions.c:1818)
==31765==    by 0x40CDED3: Py_InitializeEx (pythonrun.c:207)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765==  Address 0x43D1010 is not stack'd, malloc'd or (recently) free'd
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x40757A1: PyString_InternInPlace (stringobject.c:4337)
==31765==    by 0x406C9DE: PyDict_SetItemString (dictobject.c:2025)
==31765==    by 0x40CA184: Py_InitModule4 (modsupport.c:82)
==31765==    by 0x40D6F4A: initsignal (signalmodule.c:319)
==31765==    by 0x40D7D12: PyOS_InitInterrupts (signalmodule.c:643)
==31765==    by 0x40CE0C8: Py_InitializeEx (pythonrun.c:1610)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765==  Address 0x43C7010 is 352 bytes inside a block of size 2,744 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x427FCD3: qsort (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x4082F18: PyType_Ready (typeobject.c:5327)
==31765==    by 0x4084502: PyType_Ready (typeobject.c:3156)
==31765==    by 0x407044F: _Py_ReadyTypes (object.c:1820)
==31765==    by 0x40CDE11: Py_InitializeEx (pythonrun.c:167)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40C72B6: PyMarshal_ReadObjectFromString (marshal.c:823)
==31765==    by 0x40C73D4: PyMarshal_ReadLastObjectFromFile (marshal.c:784)
==31765==    by 0x40C2989: load_source_module (import.c:728)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x404499F: PyObject_CallFunction (abstract.c:1837)
==31765==  Address 0x43DF010 is 120 bytes inside a block of size 504 free'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x406142A: PyList_Append (listobject.c:53)
==31765==    by 0x40C6D1D: r_object (marshal.c:549)
==31765==    by 0x40C6DBC: r_object (marshal.c:598)
==31765==    by 0x40C69F7: r_object (marshal.c:669)
==31765==    by 0x40C6DBC: r_object (marshal.c:598)
==31765==    by 0x40C69F7: r_object (marshal.c:669)
==31765==    by 0x40C729A: PyMarshal_ReadObjectFromString (marshal.c:822)
==31765==    by 0x40C73D4: PyMarshal_ReadLastObjectFromFile (marshal.c:784)
==31765==    by 0x40C2989: load_source_module (import.c:728)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x40C73EC: PyMarshal_ReadLastObjectFromFile (marshal.c:786)
==31765==    by 0x40C2989: load_source_module (import.c:728)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765==    by 0x40A6878: PyEval_EvalFrame (ceval.c:2020)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==  Address 0x43E0010 is 272 bytes inside a block of size 352 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x42A914B: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x42AB729: fopen64 (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x40C3C5F: find_module (import.c:1324)
==31765==    by 0x40C4AA2: import_submodule (import.c:2266)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765==    by 0x40A6878: PyEval_EvalFrame (ceval.c:2020)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x406C9F7: PyDict_SetItemString (dictobject.c:2026)
==31765==    by 0x40D9060: setup_confname_table (posixmodule.c:7194)
==31765==    by 0x40D9972: initposix (posixmodule.c:7223)
==31765==    by 0x40C2B15: init_builtin (import.c:1773)
==31765==    by 0x40C441C: load_module (import.c:1702)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==  Address 0x43EF010 is 864 bytes inside a block of size 1,072 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x427FCD3: qsort (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x40D9009: setup_confname_table (posixmodule.c:7187)
==31765==    by 0x40D9972: initposix (posixmodule.c:7223)
==31765==    by 0x40C2B15: init_builtin (import.c:1773)
==31765==    by 0x40C441C: load_module (import.c:1702)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x40A5579: PyEval_EvalFrame (ceval.c:4077)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==  Address 0x43F5010 is 0 bytes after a block of size 8 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x4084E93: mro_implementation (typeobject.c:1201)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x406FA78: PyObject_GenericGetAttr (object.c:1235)
==31765==    by 0x406F206: PyObject_GetAttr (object.c:1088)
==31765==    by 0x406F30B: PyObject_GetAttrString (object.c:1031)
==31765==    by 0x4044A79: PyObject_CallMethod (abstract.c:1853)
==31765==    by 0x40A8447: PyEval_EvalFrame (ceval.c:4050)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40A7090: PyEval_EvalFrame (ceval.c:4083)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==  Address 0x43F5010 is 0 bytes after a block of size 8 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x4084E93: mro_implementation (typeobject.c:1201)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x406FA78: PyObject_GenericGetAttr (object.c:1235)
==31765==    by 0x406F206: PyObject_GetAttr (object.c:1088)
==31765==    by 0x406F30B: PyObject_GetAttrString (object.c:1031)
==31765==    by 0x4044A79: PyObject_CallMethod (abstract.c:1853)
==31765==    by 0x40A8447: PyEval_EvalFrame (ceval.c:4050)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x40A804F: PyEval_EvalFrame (ceval.c:1700)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==  Address 0x43FB010 is 144 bytes inside a block of size 232 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40C72B6: PyMarshal_ReadObjectFromString (marshal.c:823)
==31765==    by 0x40C73D4: PyMarshal_ReadLastObjectFromFile (marshal.c:784)
==31765==    by 0x40C2989: load_source_module (import.c:728)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4074037: string_dealloc (stringobject.c:512)
==31765==    by 0x40AA05A: code_dealloc (compile.c:220)
==31765==    by 0x40C2831: load_source_module (import.c:916)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765==    by 0x40A6878: PyEval_EvalFrame (ceval.c:2020)
==31765==  Address 0x43FA010 is 64 bytes inside a block of size 352 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x42A914B: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x42AB729: fopen64 (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x40C3C5F: find_module (import.c:1324)
==31765==    by 0x40C4AA2: import_submodule (import.c:2266)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765==    by 0x40A6878: PyEval_EvalFrame (ceval.c:2020)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x40D53DB: PyObject_GC_Del (gcmodule.c:1311)
==31765==    by 0x407C582: tupledealloc (tupleobject.c:182)
==31765==    by 0x40AA049: code_dealloc (compile.c:221)
==31765==    by 0x40C2831: load_source_module (import.c:916)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765==  Address 0x43F8010 is 80 bytes inside a block of size 490 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x4074037: string_dealloc (stringobject.c:512)
==31765==    by 0x40AA05A: code_dealloc (compile.c:220)
==31765==    by 0x40C2831: load_source_module (import.c:916)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40A6B6E: PyEval_EvalFrame (ceval.c:3593)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==  Address 0x43FD010 is 432 bytes inside a block of size 504 free'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x406142A: PyList_Append (listobject.c:53)
==31765==    by 0x40A652C: PyEval_EvalFrame (ceval.c:1229)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070DDC: PyObject_Realloc (obmalloc.c:818)
==31765==    by 0x40D5374: _PyObject_GC_Resize (gcmodule.c:1294)
==31765==    by 0x4059849: PyFrame_New (frameobject.c:598)
==31765==    by 0x40A94D8: PyEval_EvalCodeEx (ceval.c:2533)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==  Address 0x43FB010 is 144 bytes inside a block of size 232 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40C72B6: PyMarshal_ReadObjectFromString (marshal.c:823)
==31765==    by 0x40C73D4: PyMarshal_ReadLastObjectFromFile (marshal.c:784)
==31765==    by 0x40C2989: load_source_module (import.c:728)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4074037: string_dealloc (stringobject.c:512)
==31765==    by 0x40AA05A: code_dealloc (compile.c:220)
==31765==    by 0x407C568: tupledealloc (tupleobject.c:169)
==31765==    by 0x40AA049: code_dealloc (compile.c:221)
==31765==    by 0x40C2831: load_source_module (import.c:916)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==  Address 0x43FE010 is 56 bytes inside a block of size 352 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x42A914B: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x42AB729: fopen64 (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x40C3C5F: find_module (import.c:1324)
==31765==    by 0x40C4AA2: import_submodule (import.c:2266)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765==    by 0x40A6878: PyEval_EvalFrame (ceval.c:2020)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4039BC8: PyGrammar_AddAccelerators (acceler.c:124)
==31765==    by 0x403A951: PyParser_New (parser.c:77)
==31765==    by 0x403A9B6: parsetok (parsetok.c:109)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4039BC8: PyGrammar_AddAccelerators (acceler.c:124)
==31765==    by 0x403A951: PyParser_New (parser.c:77)
==31765==    by 0x403A9B6: parsetok (parsetok.c:109)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4039BC8: PyGrammar_AddAccelerators (acceler.c:124)
==31765==    by 0x403A951: PyParser_New (parser.c:77)
==31765==    by 0x403A9B6: parsetok (parsetok.c:109)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==  Address 0x4402010 is 560 bytes inside a block of size 640 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x4039BC8: PyGrammar_AddAccelerators (acceler.c:124)
==31765==    by 0x403A951: PyParser_New (parser.c:77)
==31765==    by 0x403A9B6: parsetok (parsetok.c:109)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==  Address 0x4447010 is 608 bytes inside a block of size 640 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x4039BC8: PyGrammar_AddAccelerators (acceler.c:124)
==31765==    by 0x403A951: PyParser_New (parser.c:77)
==31765==    by 0x403A9B6: parsetok (parsetok.c:109)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x403DF1E: PyTokenizer_Free (tokenizer.c:678)
==31765==    by 0x403AB72: parsetok (parsetok.c:213)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==  Address 0x43FF010 is 376 bytes inside a block of size 384 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x40A804F: PyEval_EvalFrame (ceval.c:1700)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070DDC: PyObject_Realloc (obmalloc.c:818)
==31765==    by 0x407566F: _PyString_Resize (stringobject.c:3521)
==31765==    by 0x40B1260: jcompile (compile.c:1217)
==31765==    by 0x40CE47A: PyRun_StringFlags (pythonrun.c:1281)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==  Address 0x4449010 is 4,768 bytes inside a block of size 6,012 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070DDC: PyObject_Realloc (obmalloc.c:818)
==31765==    by 0x407566F: _PyString_Resize (stringobject.c:3521)
==31765==    by 0x40B1279: jcompile (compile.c:1219)
==31765==    by 0x40CE47A: PyRun_StringFlags (pythonrun.c:1281)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==  Address 0x4449010 is 4,768 bytes inside a block of size 6,012 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x40B1A14: jcompile (compile.c:755)
==31765==    by 0x40CE47A: PyRun_StringFlags (pythonrun.c:1281)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==  Address 0x4449010 is 4,768 bytes inside a block of size 6,012 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x40B1A22: jcompile (compile.c:756)
==31765==    by 0x40CE47A: PyRun_StringFlags (pythonrun.c:1281)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==  Address 0x4449010 is 4,768 bytes inside a block of size 6,012 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x40B1A30: jcompile (compile.c:757)
==31765==    by 0x40CE47A: PyRun_StringFlags (pythonrun.c:1281)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==  Address 0x4449010 is 4,768 bytes inside a block of size 6,012 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4074037: string_dealloc (stringobject.c:512)
==31765==    by 0x40AA5FF: com_free (compile.c:1175)
==31765==    by 0x40B118E: jcompile (compile.c:5057)
==31765==    by 0x40CE47A: PyRun_StringFlags (pythonrun.c:1281)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==  Address 0x4449010 is 4,768 bytes inside a block of size 6,012 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40AA683: com_free (compile.c:1178)
==31765==    by 0x40B118E: jcompile (compile.c:5057)
==31765==    by 0x40CE47A: PyRun_StringFlags (pythonrun.c:1281)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==  Address 0x4449010 is 4,768 bytes inside a block of size 6,012 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x40AA5ED: com_free (compile.c:1187)
==31765==    by 0x40B118E: jcompile (compile.c:5057)
==31765==    by 0x40CE47A: PyRun_StringFlags (pythonrun.c:1281)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==  Address 0x4449010 is 4,768 bytes inside a block of size 6,012 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4074037: string_dealloc (stringobject.c:512)
==31765==    by 0x40A9FCE: code_dealloc (compile.c:228)
==31765==    by 0x40CE4B4: PyRun_StringFlags (pythonrun.c:1286)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==  Address 0x4449010 is 4,768 bytes inside a block of size 6,012 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4074037: string_dealloc (stringobject.c:512)
==31765==    by 0x40A9FCE: code_dealloc (compile.c:228)
==31765==    by 0x40591AA: frame_dealloc (frameobject.c:404)
==31765==    by 0x40D130E: tb_dealloc (traceback.c:34)
==31765==    by 0x40D1319: tb_dealloc (traceback.c:33)
==31765==    by 0x406A936: PyDict_DelItem (dictobject.c:639)
==31765==    by 0x406CA5E: PyDict_DelItemString (dictobject.c:2039)
==31765==    by 0x40CF76E: PySys_SetObject (sysmodule.c:79)
==31765==    by 0x40A3B52: PyEval_EvalFrame (ceval.c:2889)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==  Address 0x444B010 is 3,472 bytes inside a block of size 6,012 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x403AF8E: PyParser_ParseStringFlags (parsetok.c:31)
==31765==    by 0x40CCB57: PyParser_SimpleParseStringFlags (pythonrun.c:1385)
==31765==    by 0x40CE45E: PyRun_StringFlags (pythonrun.c:1242)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x40D53DB: PyObject_GC_Del (gcmodule.c:1311)
==31765==    by 0x407C582: tupledealloc (tupleobject.c:182)
==31765==    by 0x40AA038: code_dealloc (compile.c:222)
==31765==    by 0x40C2831: load_source_module (import.c:916)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765==  Address 0x445F010 is 16 bytes inside a block of size 64 free'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x406142A: PyList_Append (listobject.c:53)
==31765==    by 0x40C6D1D: r_object (marshal.c:549)
==31765==    by 0x40C6DBC: r_object (marshal.c:598)
==31765==    by 0x40C6A04: r_object (marshal.c:670)
==31765==    by 0x40C729A: PyMarshal_ReadObjectFromString (marshal.c:822)
==31765==    by 0x40C73D4: PyMarshal_ReadLastObjectFromFile (marshal.c:784)
==31765==    by 0x40C2989: load_source_module (import.c:728)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x40B1A22: jcompile (compile.c:756)
==31765==    by 0x40CE47A: PyRun_StringFlags (pythonrun.c:1281)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x40B1A22: jcompile (compile.c:756)
==31765==    by 0x40CE47A: PyRun_StringFlags (pythonrun.c:1281)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x40B1A30: jcompile (compile.c:757)
==31765==    by 0x40CE47A: PyRun_StringFlags (pythonrun.c:1281)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x40B1A30: jcompile (compile.c:757)
==31765==    by 0x40CE47A: PyRun_StringFlags (pythonrun.c:1281)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x40AA5ED: com_free (compile.c:1187)
==31765==    by 0x40B118E: jcompile (compile.c:5057)
==31765==    by 0x40CE47A: PyRun_StringFlags (pythonrun.c:1281)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x40AA5ED: com_free (compile.c:1187)
==31765==    by 0x40B118E: jcompile (compile.c:5057)
==31765==    by 0x40CE47A: PyRun_StringFlags (pythonrun.c:1281)
==31765==    by 0x409B21B: builtin_eval (bltinmodule.c:527)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x405DD61: list_dealloc (listobject.c:264)
==31765==    by 0x4084E67: mro_implementation (typeobject.c:1273)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4086060: type_new (typeobject.c:1959)
==31765==    by 0x407DBBA: type_call (typeobject.c:421)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x404499F: PyObject_CallFunction (abstract.c:1837)
==31765==    by 0x40A4C7E: PyEval_EvalFrame (ceval.c:4113)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x405DD61: list_dealloc (listobject.c:264)
==31765==    by 0x4084E67: mro_implementation (typeobject.c:1273)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4086060: type_new (typeobject.c:1959)
==31765==    by 0x407DBBA: type_call (typeobject.c:421)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x404499F: PyObject_CallFunction (abstract.c:1837)
==31765==    by 0x40A4C7E: PyEval_EvalFrame (ceval.c:4113)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x4084FDE: mro_internal (typeobject.c:1309)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4086060: type_new (typeobject.c:1959)
==31765==    by 0x407DBBA: type_call (typeobject.c:421)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x404499F: PyObject_CallFunction (abstract.c:1837)
==31765==    by 0x40A4C7E: PyEval_EvalFrame (ceval.c:4113)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x4084FDE: mro_internal (typeobject.c:1309)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4086060: type_new (typeobject.c:1959)
==31765==    by 0x407DBBA: type_call (typeobject.c:421)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x404499F: PyObject_CallFunction (abstract.c:1837)
==31765==    by 0x40A4C7E: PyEval_EvalFrame (ceval.c:4113)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406AC4C: dict_dealloc (dictobject.c:770)
==31765==    by 0x40A4CCE: PyEval_EvalFrame (ceval.c:1690)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406AC4C: dict_dealloc (dictobject.c:770)
==31765==    by 0x40A4CCE: PyEval_EvalFrame (ceval.c:1690)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40A40A0: PyEval_EvalFrame (ceval.c:917)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40A40A0: PyEval_EvalFrame (ceval.c:917)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x4058FCC: frame_dealloc (frameobject.c:394)
==31765==    by 0x40A8766: PyEval_EvalFrame (ceval.c:3653)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x4058FCC: frame_dealloc (frameobject.c:394)
==31765==    by 0x40A8766: PyEval_EvalFrame (ceval.c:3653)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40A40A0: PyEval_EvalFrame (ceval.c:917)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==  Address 0x4464010 is not stack'd, malloc'd or (recently) free'd
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x4058FCC: frame_dealloc (frameobject.c:394)
==31765==    by 0x40A8766: PyEval_EvalFrame (ceval.c:3653)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==  Address 0x4464010 is not stack'd, malloc'd or (recently) free'd
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x405F384: listiter_next (listobject.c:2770)
==31765==    by 0x40A402E: PyEval_EvalFrame (ceval.c:2121)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x405F384: listiter_next (listobject.c:2770)
==31765==    by 0x40A402E: PyEval_EvalFrame (ceval.c:2121)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070DE7: PyObject_Realloc (obmalloc.c:818)
==31765==    by 0x40D5374: _PyObject_GC_Resize (gcmodule.c:1294)
==31765==    by 0x4059849: PyFrame_New (frameobject.c:598)
==31765==    by 0x40A86D7: PyEval_EvalFrame (ceval.c:3640)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070DF4: PyObject_Realloc (obmalloc.c:818)
==31765==    by 0x40D5374: _PyObject_GC_Resize (gcmodule.c:1294)
==31765==    by 0x4059849: PyFrame_New (frameobject.c:598)
==31765==    by 0x40A86D7: PyEval_EvalFrame (ceval.c:3640)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x4083850: PyType_Ready (typeobject.c:5482)
==31765==    by 0x406FA78: PyObject_GenericGetAttr (object.c:1235)
==31765==    by 0x406F206: PyObject_GetAttr (object.c:1088)
==31765==    by 0x40A6923: PyEval_EvalFrame (ceval.c:1957)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==  Address 0x4464010 is not stack'd, malloc'd or (recently) free'd
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x40DCE25: posix_do_stat (posixmodule.c:1096)
==31765==    by 0x40DCE8E: posix_stat (posixmodule.c:1924)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==  Address 0x4464010 is not stack'd, malloc'd or (recently) free'd
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40C0607: vgetargs1 (getargs.c:116)
==31765==    by 0x40C08F7: PyArg_ParseTuple (getargs.c:54)
==31765==    by 0x40DCA1E: posix_listdir (posixmodule.c:1688)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==  Address 0x4465010 is 8 bytes before a block of size 36 alloc'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x4061304: listappend (listobject.c:53)
==31765==    by 0x40A93D1: PyEval_EvalFrame (ceval.c:3556)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40C0F76: vgetargskeywords (getargs.c:116)
==31765==    by 0x40C156C: PyArg_ParseTupleAndKeywords (getargs.c:1163)
==31765==    by 0x40538F8: file_init (fileobject.c:1878)
==31765==    by 0x407DC01: type_call (typeobject.c:435)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A6B20: PyEval_EvalFrame (ceval.c:3776)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40C0F76: vgetargskeywords (getargs.c:116)
==31765==    by 0x40C156C: PyArg_ParseTupleAndKeywords (getargs.c:1163)
==31765==    by 0x40538F8: file_init (fileobject.c:1878)
==31765==    by 0x407DC01: type_call (typeobject.c:435)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A6B20: PyEval_EvalFrame (ceval.c:3776)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x4053951: file_init (fileobject.c:1903)
==31765==    by 0x407DC01: type_call (typeobject.c:435)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A6B20: PyEval_EvalFrame (ceval.c:3776)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==  Address 0x4465010 is 8 bytes before a block of size 36 alloc'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x4061304: listappend (listobject.c:53)
==31765==    by 0x40A93D1: PyEval_EvalFrame (ceval.c:3556)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070DDC: PyObject_Realloc (obmalloc.c:818)
==31765==    by 0x40D5374: _PyObject_GC_Resize (gcmodule.c:1294)
==31765==    by 0x4059849: PyFrame_New (frameobject.c:598)
==31765==    by 0x40A86D7: PyEval_EvalFrame (ceval.c:3640)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==  Address 0x4465010 is 8 bytes before a block of size 36 alloc'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x4061304: listappend (listobject.c:53)
==31765==    by 0x40A93D1: PyEval_EvalFrame (ceval.c:3556)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x40DCE25: posix_do_stat (posixmodule.c:1096)
==31765==    by 0x40DCE8E: posix_stat (posixmodule.c:1924)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x40DCE25: posix_do_stat (posixmodule.c:1096)
==31765==    by 0x40DCE8E: posix_stat (posixmodule.c:1924)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40C0607: vgetargs1 (getargs.c:116)
==31765==    by 0x40C08F7: PyArg_ParseTuple (getargs.c:54)
==31765==    by 0x40DCDA5: posix_do_stat (posixmodule.c:1049)
==31765==    by 0x40DCE8E: posix_stat (posixmodule.c:1924)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40C0607: vgetargs1 (getargs.c:116)
==31765==    by 0x40C08F7: PyArg_ParseTuple (getargs.c:54)
==31765==    by 0x40DCDA5: posix_do_stat (posixmodule.c:1049)
==31765==    by 0x40DCE8E: posix_stat (posixmodule.c:1924)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x4055816: readahead_get_line_skip (fileobject.c:1699)
==31765==    by 0x40558CE: file_iternext (fileobject.c:1800)
==31765==    by 0x40A402E: PyEval_EvalFrame (ceval.c:2121)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x4055816: readahead_get_line_skip (fileobject.c:1699)
==31765==    by 0x40558CE: file_iternext (fileobject.c:1800)
==31765==    by 0x40A402E: PyEval_EvalFrame (ceval.c:2121)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x40DCE0D: posix_do_stat (posixmodule.c:415)
==31765==    by 0x40DCE8E: posix_stat (posixmodule.c:1924)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==  Address 0x44CB010 is 7,816 bytes inside a block of size 8,192 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x4055816: readahead_get_line_skip (fileobject.c:1699)
==31765==    by 0x40558CE: file_iternext (fileobject.c:1800)
==31765==    by 0x40A402E: PyEval_EvalFrame (ceval.c:2121)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x40555E4: file_dealloc (fileobject.c:1699)
==31765==    by 0x4058FCC: frame_dealloc (frameobject.c:394)
==31765==    by 0x40A96C1: PyEval_EvalCodeEx (ceval.c:2752)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==  Address 0x44CB010 is 7,816 bytes inside a block of size 8,192 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x4055816: readahead_get_line_skip (fileobject.c:1699)
==31765==    by 0x40558CE: file_iternext (fileobject.c:1800)
==31765==    by 0x40A402E: PyEval_EvalFrame (ceval.c:2121)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40C0F76: vgetargskeywords (getargs.c:116)
==31765==    by 0x40C156C: PyArg_ParseTupleAndKeywords (getargs.c:1163)
==31765==    by 0x40538F8: file_init (fileobject.c:1878)
==31765==    by 0x407DC01: type_call (typeobject.c:435)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A6B20: PyEval_EvalFrame (ceval.c:3776)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==  Address 0x44CE010 is 0 bytes inside a block of size 4 free'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x406142A: PyList_Append (listobject.c:53)
==31765==    by 0x4084B7D: mro_implementation (typeobject.c:1184)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x406FA78: PyObject_GenericGetAttr (object.c:1235)
==31765==    by 0x406F206: PyObject_GetAttr (object.c:1088)
==31765==    by 0x40A6923: PyEval_EvalFrame (ceval.c:1957)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x4055816: readahead_get_line_skip (fileobject.c:1699)
==31765==    by 0x40558CE: file_iternext (fileobject.c:1800)
==31765==    by 0x40A402E: PyEval_EvalFrame (ceval.c:2121)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==  Address 0x44CE010 is 0 bytes inside a block of size 4 free'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x406142A: PyList_Append (listobject.c:53)
==31765==    by 0x4084B7D: mro_implementation (typeobject.c:1184)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x406FA78: PyObject_GenericGetAttr (object.c:1235)
==31765==    by 0x406F206: PyObject_GetAttr (object.c:1088)
==31765==    by 0x40A6923: PyEval_EvalFrame (ceval.c:1957)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x4058FCC: frame_dealloc (frameobject.c:394)
==31765==    by 0x40A96C1: PyEval_EvalCodeEx (ceval.c:2752)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==  Address 0x4465010 is 8 bytes before a block of size 36 free'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x4061304: listappend (listobject.c:53)
==31765==    by 0x40A93D1: PyEval_EvalFrame (ceval.c:3556)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406AC4C: dict_dealloc (dictobject.c:770)
==31765==    by 0x4071696: set_dealloc (setobject.c:126)
==31765==    by 0x40A40A0: PyEval_EvalFrame (ceval.c:917)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==  Address 0x44CB010 is 7,816 bytes inside a block of size 8,192 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x4070651: PyMem_Free (object.c:1973)
==31765==    by 0x4055816: readahead_get_line_skip (fileobject.c:1699)
==31765==    by 0x40558CE: file_iternext (fileobject.c:1800)
==31765==    by 0x40A402E: PyEval_EvalFrame (ceval.c:2121)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406A648: dictresize (dictobject.c:533)
==31765==    by 0x406B1E6: dict_ass_sub (dictobject.c:933)
==31765==    by 0x404396F: PyObject_SetItem (abstract.c:123)
==31765==    by 0x40A5F05: PyEval_EvalFrame (ceval.c:1474)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765==    by 0x40C2811: load_source_module (import.c:915)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==  Address 0x4513010 is 688 bytes inside a block of size 1,236 free'd
==31765==    at 0x401D89D: realloc (vg_replace_malloc.c:306)
==31765==    by 0x406142A: PyList_Append (listobject.c:53)
==31765==    by 0x40C6D1D: r_object (marshal.c:549)
==31765==    by 0x40C6DBC: r_object (marshal.c:598)
==31765==    by 0x40C69F7: r_object (marshal.c:669)
==31765==    by 0x40C729A: PyMarshal_ReadObjectFromString (marshal.c:822)
==31765==    by 0x40C73D4: PyMarshal_ReadLastObjectFromFile (marshal.c:784)
==31765==    by 0x40C2989: load_source_module (import.c:728)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40A6B6E: PyEval_EvalFrame (ceval.c:3593)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x405AC96: function_call (funcobject.c:548)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765==    by 0x40BC084: _PyCodec_Lookup (codecs.c:147)
==31765==    by 0x40BC2FF: PyCodec_Encoder (codecs.c:234)
==31765==    by 0x40CE1FF: Py_InitializeEx (pythonrun.c:242)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40A6B6E: PyEval_EvalFrame (ceval.c:3593)
==31765==    by 0x40A8742: PyEval_EvalFrame (ceval.c:3651)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x405AC96: function_call (funcobject.c:548)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765==    by 0x40BC084: _PyCodec_Lookup (codecs.c:147)
==31765==    by 0x40BC2FF: PyCodec_Encoder (codecs.c:234)
==31765==    by 0x40CE1FF: Py_InitializeEx (pythonrun.c:242)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40C72B6: PyMarshal_ReadObjectFromString (marshal.c:823)
==31765==    by 0x40C73D4: PyMarshal_ReadLastObjectFromFile (marshal.c:784)
==31765==    by 0x40C2989: load_source_module (import.c:728)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x40C72B6: PyMarshal_ReadObjectFromString (marshal.c:823)
==31765==    by 0x40C73D4: PyMarshal_ReadLastObjectFromFile (marshal.c:784)
==31765==    by 0x40C2989: load_source_module (import.c:728)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x40A90B2: PyEval_EvalFrame (ceval.c:3568)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x406AC30: dict_dealloc (dictobject.c:766)
==31765==    by 0x405922C: frame_dealloc (frameobject.c:407)
==31765==    by 0x40A96C1: PyEval_EvalCodeEx (ceval.c:2752)
==31765==    by 0x405AC96: function_call (funcobject.c:548)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765==    by 0x40BC084: _PyCodec_Lookup (codecs.c:147)
==31765==    by 0x40BC2FF: PyCodec_Encoder (codecs.c:234)
==31765==    by 0x40CE1FF: Py_InitializeEx (pythonrun.c:242)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x405DD08: list_dealloc (listobject.c:266)
==31765==    by 0x406AC30: dict_dealloc (dictobject.c:766)
==31765==    by 0x405922C: frame_dealloc (frameobject.c:407)
==31765==    by 0x40A96C1: PyEval_EvalCodeEx (ceval.c:2752)
==31765==    by 0x405AC96: function_call (funcobject.c:548)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765==    by 0x40BC084: _PyCodec_Lookup (codecs.c:147)
==31765==    by 0x40BC2FF: PyCodec_Encoder (codecs.c:234)
==31765==    by 0x40CE1FF: Py_InitializeEx (pythonrun.c:242)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406AC4C: dict_dealloc (dictobject.c:770)
==31765==    by 0x405922C: frame_dealloc (frameobject.c:407)
==31765==    by 0x40A96C1: PyEval_EvalCodeEx (ceval.c:2752)
==31765==    by 0x405AC96: function_call (funcobject.c:548)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765==    by 0x40BC084: _PyCodec_Lookup (codecs.c:147)
==31765==    by 0x40BC2FF: PyCodec_Encoder (codecs.c:234)
==31765==    by 0x40CE1FF: Py_InitializeEx (pythonrun.c:242)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406AC4C: dict_dealloc (dictobject.c:770)
==31765==    by 0x405922C: frame_dealloc (frameobject.c:407)
==31765==    by 0x40A96C1: PyEval_EvalCodeEx (ceval.c:2752)
==31765==    by 0x405AC96: function_call (funcobject.c:548)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765==    by 0x40BC084: _PyCodec_Lookup (codecs.c:147)
==31765==    by 0x40BC2FF: PyCodec_Encoder (codecs.c:234)
==31765==    by 0x40CE1FF: Py_InitializeEx (pythonrun.c:242)
==31765==    by 0x40CE3F2: Py_Initialize (pythonrun.c:287)
==31765==    by 0x40D4329: Py_Main (main.c:427)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070DE7: PyObject_Realloc (obmalloc.c:818)
==31765==    by 0x403A0B3: PyNode_AddChild (node.c:95)
==31765==    by 0x403A6CC: PyParser_AddToken (parser.c:126)
==31765==    by 0x403AA14: parsetok (parsetok.c:166)
==31765==    by 0x40CCBFF: PyParser_SimpleParseFileFlags (pythonrun.c:1365)
==31765==    by 0x40CCC9C: PyRun_FileExFlags (pythonrun.c:1260)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070DF4: PyObject_Realloc (obmalloc.c:818)
==31765==    by 0x403A0B3: PyNode_AddChild (node.c:95)
==31765==    by 0x403A6CC: PyParser_AddToken (parser.c:126)
==31765==    by 0x403AA14: parsetok (parsetok.c:166)
==31765==    by 0x40CCBFF: PyParser_SimpleParseFileFlags (pythonrun.c:1365)
==31765==    by 0x40CCC9C: PyRun_FileExFlags (pythonrun.c:1260)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x40CCBFF: PyParser_SimpleParseFileFlags (pythonrun.c:1365)
==31765==    by 0x40CCC9C: PyRun_FileExFlags (pythonrun.c:1260)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x40CCBFF: PyParser_SimpleParseFileFlags (pythonrun.c:1365)
==31765==    by 0x40CCC9C: PyRun_FileExFlags (pythonrun.c:1260)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x403DF16: PyTokenizer_Free (tokenizer.c:677)
==31765==    by 0x403AB72: parsetok (parsetok.c:213)
==31765==    by 0x40CCBFF: PyParser_SimpleParseFileFlags (pythonrun.c:1365)
==31765==    by 0x40CCC9C: PyRun_FileExFlags (pythonrun.c:1260)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x403DF16: PyTokenizer_Free (tokenizer.c:677)
==31765==    by 0x403AB72: parsetok (parsetok.c:213)
==31765==    by 0x40CCBFF: PyParser_SimpleParseFileFlags (pythonrun.c:1365)
==31765==    by 0x40CCC9C: PyRun_FileExFlags (pythonrun.c:1260)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x403DF1E: PyTokenizer_Free (tokenizer.c:678)
==31765==    by 0x403AB72: parsetok (parsetok.c:213)
==31765==    by 0x40CCBFF: PyParser_SimpleParseFileFlags (pythonrun.c:1365)
==31765==    by 0x40CCC9C: PyRun_FileExFlags (pythonrun.c:1260)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== More than 100 errors detected.  Subsequent errors
==31765== will still be recorded, but in less detail than before.
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x403DF1E: PyTokenizer_Free (tokenizer.c:678)
==31765==    by 0x403AB72: parsetok (parsetok.c:213)
==31765==    by 0x40CCBFF: PyParser_SimpleParseFileFlags (pythonrun.c:1365)
==31765==    by 0x40CCC9C: PyRun_FileExFlags (pythonrun.c:1260)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406201E: list_ass_slice (listobject.c:532)
==31765==    by 0x40624AA: list_ass_item (listobject.c:699)
==31765==    by 0x4043AD7: PySequence_DelItem (abstract.c:1347)
==31765==    by 0x40AE695: symtable_node (compile.c:5786)
==31765==    by 0x40AEC5B: symtable_node (compile.c:6160)
==31765==    by 0x40AF376: symtable_build (compile.c:5167)
==31765==    by 0x40B15F5: jcompile (compile.c:4992)
==31765==    by 0x40CCCDB: PyRun_FileExFlags (pythonrun.c:1281)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406201E: list_ass_slice (listobject.c:532)
==31765==    by 0x40624AA: list_ass_item (listobject.c:699)
==31765==    by 0x4043AD7: PySequence_DelItem (abstract.c:1347)
==31765==    by 0x40AE695: symtable_node (compile.c:5786)
==31765==    by 0x40AEC5B: symtable_node (compile.c:6160)
==31765==    by 0x40AF376: symtable_build (compile.c:5167)
==31765==    by 0x40B15F5: jcompile (compile.c:4992)
==31765==    by 0x40CCCDB: PyRun_FileExFlags (pythonrun.c:1281)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070DE7: PyObject_Realloc (obmalloc.c:818)
==31765==    by 0x407566F: _PyString_Resize (stringobject.c:3521)
==31765==    by 0x40B1260: jcompile (compile.c:1217)
==31765==    by 0x40B44B5: com_node (compile.c:4942)
==31765==    by 0x40B09EB: compile_node (compile.c:4728)
==31765==    by 0x40B123E: jcompile (compile.c:5006)
==31765==    by 0x40CCCDB: PyRun_FileExFlags (pythonrun.c:1281)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070DF4: PyObject_Realloc (obmalloc.c:818)
==31765==    by 0x407566F: _PyString_Resize (stringobject.c:3521)
==31765==    by 0x40B1260: jcompile (compile.c:1217)
==31765==    by 0x40B44B5: com_node (compile.c:4942)
==31765==    by 0x40B09EB: compile_node (compile.c:4728)
==31765==    by 0x40B123E: jcompile (compile.c:5006)
==31765==    by 0x40CCCDB: PyRun_FileExFlags (pythonrun.c:1281)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4074037: string_dealloc (stringobject.c:512)
==31765==    by 0x40AA5FF: com_free (compile.c:1175)
==31765==    by 0x40B118E: jcompile (compile.c:5057)
==31765==    by 0x40B44B5: com_node (compile.c:4942)
==31765==    by 0x40B09EB: compile_node (compile.c:4728)
==31765==    by 0x40B123E: jcompile (compile.c:5006)
==31765==    by 0x40CCCDB: PyRun_FileExFlags (pythonrun.c:1281)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4074037: string_dealloc (stringobject.c:512)
==31765==    by 0x40AA5FF: com_free (compile.c:1175)
==31765==    by 0x40B118E: jcompile (compile.c:5057)
==31765==    by 0x40B44B5: com_node (compile.c:4942)
==31765==    by 0x40B09EB: compile_node (compile.c:4728)
==31765==    by 0x40B123E: jcompile (compile.c:5006)
==31765==    by 0x40CCCDB: PyRun_FileExFlags (pythonrun.c:1281)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x406201E: list_ass_slice (listobject.c:532)
==31765==    by 0x40624AA: list_ass_item (listobject.c:699)
==31765==    by 0x4043AD7: PySequence_DelItem (abstract.c:1347)
==31765==    by 0x40B44FA: com_node (compile.c:5786)
==31765==    by 0x40B09EB: compile_node (compile.c:4728)
==31765==    by 0x40B123E: jcompile (compile.c:5006)
==31765==    by 0x40CCCDB: PyRun_FileExFlags (pythonrun.c:1281)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765==  Address 0x451D010 is 256 bytes inside a block of size 384 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x406AC4C: dict_dealloc (dictobject.c:770)
==31765==    by 0x40AA650: com_free (compile.c:1181)
==31765==    by 0x40B118E: jcompile (compile.c:5057)
==31765==    by 0x40B4B8D: com_node (compile.c:4942)
==31765==    by 0x40B5BF2: com_node (compile.c:4181)
==31765==    by 0x40B091C: compile_node (compile.c:4808)
==31765==    by 0x40B123E: jcompile (compile.c:5006)
==31765==    by 0x40B44B5: com_node (compile.c:4942)
==31765==    by 0x40B09EB: compile_node (compile.c:4728)
==31765==    by 0x40B123E: jcompile (compile.c:5006)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4070D28: PyObject_Free (obmalloc.c:735)
==31765==    by 0x403A31E: freechildren (node.c:131)
==31765==    by 0x403A4EB: PyNode_Free (node.c:129)
==31765==    by 0x40CCCE5: PyRun_FileExFlags (pythonrun.c:1282)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765==  Address 0x451A010 is 3,888 bytes inside a block of size 6,012 free'd
==31765==    at 0x401CFCF: free (vg_replace_malloc.c:235)
==31765==    by 0x4070D4F: PyObject_Free (obmalloc.c:798)
==31765==    by 0x403A56B: PyParser_Delete (parser.c:101)
==31765==    by 0x403ABB9: parsetok (parsetok.c:182)
==31765==    by 0x40CCBFF: PyParser_SimpleParseFileFlags (pythonrun.c:1365)
==31765==    by 0x40CCC9C: PyRun_FileExFlags (pythonrun.c:1260)
==31765==    by 0x40CD6AF: PyRun_SimpleFileExFlags (pythonrun.c:869)
==31765==    by 0x40CEB5A: PyRun_AnyFileExFlags (pythonrun.c:673)
==31765==    by 0x40D4B54: Py_Main (main.c:493)
==31765==    by 0x8048579: main (python.c:23)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4010C2D: (within /lib/ld-2.3.6.so)
==31765==    by 0x400624D: (within /lib/ld-2.3.6.so)
==31765==    by 0x4352C75: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x4353937: _dl_open (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x414DCB7: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x414E2BA: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x414DD10: dlopen (in /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x40D2223: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==31765==    by 0x40C61F0: _PyImport_LoadDynamicModule (importdl.c:42)
==31765==    by 0x40C432F: load_module (import.c:1689)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4010C3C: (within /lib/ld-2.3.6.so)
==31765==    by 0x400624D: (within /lib/ld-2.3.6.so)
==31765==    by 0x4352C75: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x4353937: _dl_open (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x414DCB7: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x414E2BA: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x414DD10: dlopen (in /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x40D2223: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==31765==    by 0x40C61F0: _PyImport_LoadDynamicModule (importdl.c:42)
==31765==    by 0x40C432F: load_module (import.c:1689)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4010C4B: (within /lib/ld-2.3.6.so)
==31765==    by 0x400624D: (within /lib/ld-2.3.6.so)
==31765==    by 0x4352C75: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x4353937: _dl_open (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x414DCB7: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x414E2BA: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x414DD10: dlopen (in /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x40D2223: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==31765==    by 0x40C61F0: _PyImport_LoadDynamicModule (importdl.c:42)
==31765==    by 0x40C432F: load_module (import.c:1689)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4010C56: (within /lib/ld-2.3.6.so)
==31765==    by 0x400624D: (within /lib/ld-2.3.6.so)
==31765==    by 0x4352C75: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x4353937: _dl_open (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x414DCB7: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x414E2BA: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x414DD10: dlopen (in /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x40D2223: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==31765==    by 0x40C61F0: _PyImport_LoadDynamicModule (importdl.c:42)
==31765==    by 0x40C432F: load_module (import.c:1689)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x40086F7: (within /lib/ld-2.3.6.so)
==31765==    by 0x4352DE9: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x4353937: _dl_open (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x414DCB7: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x414E2BA: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x414DD10: dlopen (in /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x40D2223: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==31765==    by 0x40C61F0: _PyImport_LoadDynamicModule (importdl.c:42)
==31765==    by 0x40C432F: load_module (import.c:1689)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4008700: (within /lib/ld-2.3.6.so)
==31765==    by 0x4352DE9: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x4353937: _dl_open (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x414DCB7: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x414E2BA: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x414DD10: dlopen (in /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x40D2223: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==31765==    by 0x40C61F0: _PyImport_LoadDynamicModule (importdl.c:42)
==31765==    by 0x40C432F: load_module (import.c:1689)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x400882D: (within /lib/ld-2.3.6.so)
==31765==    by 0x4352DE9: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x4353937: _dl_open (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x414DCB7: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x414E2BA: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x414DD10: dlopen (in /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x40D2223: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==31765==    by 0x40C61F0: _PyImport_LoadDynamicModule (importdl.c:42)
==31765==    by 0x40C432F: load_module (import.c:1689)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4008852: (within /lib/ld-2.3.6.so)
==31765==    by 0x4352DE9: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x4353937: _dl_open (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x414DCB7: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x414E2BA: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x414DD10: dlopen (in /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x40D2223: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==31765==    by 0x40C61F0: _PyImport_LoadDynamicModule (importdl.c:42)
==31765==    by 0x40C432F: load_module (import.c:1689)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4084E93: mro_implementation (typeobject.c:1201)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4086060: type_new (typeobject.c:1959)
==31765==    by 0x407DBBA: type_call (typeobject.c:421)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x404499F: PyObject_CallFunction (abstract.c:1837)
==31765==    by 0x40A4C7E: PyEval_EvalFrame (ceval.c:4113)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x4084E93: mro_implementation (typeobject.c:1201)
==31765==    by 0x4084FF8: mro_internal (typeobject.c:1296)
==31765==    by 0x4082B49: PyType_Ready (typeobject.c:3204)
==31765==    by 0x4086060: type_new (typeobject.c:1959)
==31765==    by 0x407DBBA: type_call (typeobject.c:421)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x404499F: PyObject_CallFunction (abstract.c:1837)
==31765==    by 0x40A4C7E: PyEval_EvalFrame (ceval.c:4113)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A9DC5: PyEval_EvalCode (ceval.c:484)
==31765==    by 0x40C23F4: PyImport_ExecCodeModuleEx (import.c:636)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4010C64: (within /lib/ld-2.3.6.so)
==31765==    by 0x400624D: (within /lib/ld-2.3.6.so)
==31765==    by 0x4352C75: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x4353937: _dl_open (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x414DCB7: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x414E2BA: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x414DD10: dlopen (in /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x40D2223: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==31765==    by 0x40C61F0: _PyImport_LoadDynamicModule (importdl.c:42)
==31765==    by 0x40C432F: load_module (import.c:1689)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4010C6F: (within /lib/ld-2.3.6.so)
==31765==    by 0x400624D: (within /lib/ld-2.3.6.so)
==31765==    by 0x4352C75: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x4353937: _dl_open (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x414DCB7: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x414E2BA: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x414DD10: dlopen (in /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x40D2223: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==31765==    by 0x40C61F0: _PyImport_LoadDynamicModule (importdl.c:42)
==31765==    by 0x40C432F: load_module (import.c:1689)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4010C7A: (within /lib/ld-2.3.6.so)
==31765==    by 0x400624D: (within /lib/ld-2.3.6.so)
==31765==    by 0x4352C75: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x4353937: _dl_open (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x414DCB7: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x414E2BA: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x414DD10: dlopen (in /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x40D2223: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==31765==    by 0x40C61F0: _PyImport_LoadDynamicModule (importdl.c:42)
==31765==    by 0x40C432F: load_module (import.c:1689)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4010C85: (within /lib/ld-2.3.6.so)
==31765==    by 0x400624D: (within /lib/ld-2.3.6.so)
==31765==    by 0x4352C75: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x4353937: _dl_open (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x414DCB7: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x414E2BA: (within /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x414DD10: dlopen (in /lib/tls/i686/cmov/libdl-2.3.6.so)
==31765==    by 0x40D2223: _PyImport_GetDynLoadFunc (dynload_shlib.c:130)
==31765==    by 0x40C61F0: _PyImport_LoadDynamicModule (importdl.c:42)
==31765==    by 0x40C432F: load_module (import.c:1689)
==31765== 
==31765== Conditional jump or move depends on uninitialised value(s)
==31765==    at 0x4070D33: PyObject_Free (obmalloc.c:735)
==31765==    by 0x40D53DB: PyObject_GC_Del (gcmodule.c:1311)
==31765==    by 0x407C582: tupledealloc (tupleobject.c:182)
==31765==    by 0x40AA038: code_dealloc (compile.c:222)
==31765==    by 0x40C2831: load_source_module (import.c:916)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765== 
==31765== Use of uninitialised value of size 4
==31765==    at 0x4070D3D: PyObject_Free (obmalloc.c:735)
==31765==    by 0x40D53DB: PyObject_GC_Del (gcmodule.c:1311)
==31765==    by 0x407C582: tupledealloc (tupleobject.c:182)
==31765==    by 0x40AA038: code_dealloc (compile.c:222)
==31765==    by 0x40C2831: load_source_module (import.c:916)
==31765==    by 0x40C4AE0: import_submodule (import.c:2276)
==31765==    by 0x40C4CFF: load_next (import.c:2096)
==31765==    by 0x40C51B4: PyImport_ImportModuleEx (import.c:1931)
==31765==    by 0x409A91D: builtin___import__ (bltinmodule.c:45)
==31765==    by 0x406D4E2: PyCFunction_Call (methodobject.c:108)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A24B7: PyEval_CallObjectWithKeywords (ceval.c:3435)
==31765== 
==31765== Syscall param write(buf) points to uninitialised byte(s)
==31765==    at 0x4000772: (within /lib/ld-2.3.6.so)
==31765==    by 0x55386F3: _X11TransWrite (in /usr/lib/libX11.so.6.2.0)
==31765==    by 0x553D06A: (within /usr/lib/libX11.so.6.2.0)
==31765==    by 0x553D185: _XReply (in /usr/lib/libX11.so.6.2.0)
==31765==    by 0x5524204: XInternAtom (in /usr/lib/libX11.so.6.2.0)
==31765==    by 0x5537A88: XSetWMProperties (in /usr/lib/libX11.so.6.2.0)
==31765==    by 0x540EBDB: (within /usr/lib/libgdk-x11-2.0.so.0.800.20)
==31765==    by 0x541182E: gdk_window_new (in /usr/lib/libgdk-x11-2.0.so.0.800.20)
==31765==    by 0x53F1AC9: gdk_display_open (in /usr/lib/libgdk-x11-2.0.so.0.800.20)
==31765==    by 0x53D3018: gdk_display_open_default_libgtk_only (in /usr/lib/libgdk-x11-2.0.so.0.800.20)
==31765==    by 0x5206D2D: gtk_init_check (in /usr/lib/libgtk-x11-2.0.so.0.800.20)
==31765==    by 0x4C18EE6: wxApp::Initialize(int&, char**) (app.cpp:499)
==31765==  Address 0x62180B8 is 128 bytes inside a block of size 16,384 alloc'd
==31765==    at 0x401D7AA: calloc (vg_replace_malloc.c:279)
==31765==    by 0x5528F65: XOpenDisplay (in /usr/lib/libX11.so.6.2.0)
==31765==    by 0x53F19ED: gdk_display_open (in /usr/lib/libgdk-x11-2.0.so.0.800.20)
==31765==    by 0x53D3018: gdk_display_open_default_libgtk_only (in /usr/lib/libgdk-x11-2.0.so.0.800.20)
==31765==    by 0x5206D2D: gtk_init_check (in /usr/lib/libgtk-x11-2.0.so.0.800.20)
==31765==    by 0x4C18EE6: wxApp::Initialize(int&, char**) (app.cpp:499)
==31765==    by 0x4B77479: wxEntryStart(int&, char**) (init.cpp:289)
==31765==    by 0x47DAABA: wxPyApp::_BootstrapApp() (helpers.cpp:438)
==31765==    by 0x48160E6: _wrap_PyApp__BootstrapApp (_core_wrap.cpp:31281)
==31765==    by 0x406D475: PyCFunction_Call (methodobject.c:93)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A6F53: PyEval_EvalFrame (ceval.c:3845)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4010C58: (within /lib/ld-2.3.6.so)
==31765==    by 0x400624D: (within /lib/ld-2.3.6.so)
==31765==    by 0x4352C75: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x4353937: _dl_open (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x4354F4C: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x400B105: (within /lib/ld-2.3.6.so)
==31765==    by 0x435502D: __libc_dlopen_mode (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x4273DF2: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x426BD83: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x426C469: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x426AE56: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==  Address 0x6393088 is 48 bytes inside a block of size 49 alloc'd
==31765==    at 0x401C422: malloc (vg_replace_malloc.c:149)
==31765==    by 0x4273E7A: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x426BD83: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x426C469: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x426AE56: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x426AAB4: iconv_open (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x4B96179: wxMBConv_iconv::wxMBConv_iconv(char const*) (strconv.cpp:1707)
==31765==    by 0x4B97DA1: wxCSConv::DoCreate() const (strconv.cpp:3317)
==31765==    by 0x4B984CA: wxCSConv::CreateConvIfNeeded() const (strconv.cpp:3516)
==31765==    by 0x4B9872E: wxCSConv::WC2MB(char*, wchar_t const*, unsigned) const (strconv.cpp:3579)
==31765==    by 0x4B94ABE: wxMBConv::cWC2MB(wchar_t const*) const (strconv.cpp:384)
==31765==    by 0x4C14B67: wxMBConv::cWC2WX(wchar_t const*) const (strconv.h:117)
==31765== 
==31765== Syscall param writev(vector[...]) points to uninitialised byte(s)
==31765==    at 0x4000772: (within /lib/ld-2.3.6.so)
==31765==    by 0x55384E2: (within /usr/lib/libX11.so.6.2.0)
==31765==    by 0x5538735: _X11TransWritev (in /usr/lib/libX11.so.6.2.0)
==31765==    by 0x553D76E: _XSend (in /usr/lib/libX11.so.6.2.0)
==31765==    by 0x552D9F5: (within /usr/lib/libX11.so.6.2.0)
==31765==    by 0x552E06D: XPutImage (in /usr/lib/libX11.so.6.2.0)
==31765==    by 0x54BCC56: XcursorImageLoadCursor (in /usr/lib/libXcursor.so.1.0.2)
==31765==    by 0x54BD897: XcursorImagesLoadCursors (in /usr/lib/libXcursor.so.1.0.2)
==31765==    by 0x54BD92F: XcursorImagesLoadCursor (in /usr/lib/libXcursor.so.1.0.2)
==31765==    by 0x54C0969: XcursorTryShapeCursor (in /usr/lib/libXcursor.so.1.0.2)
==31765==    by 0x55180D6: XCreateGlyphCursor (in /usr/lib/libX11.so.6.2.0)
==31765==    by 0x5518552: XCreateFontCursor (in /usr/lib/libX11.so.6.2.0)
==31765==  Address 0x6218204 is 460 bytes inside a block of size 16,384 alloc'd
==31765==    at 0x401D7AA: calloc (vg_replace_malloc.c:279)
==31765==    by 0x5528F65: XOpenDisplay (in /usr/lib/libX11.so.6.2.0)
==31765==    by 0x53F19ED: gdk_display_open (in /usr/lib/libgdk-x11-2.0.so.0.800.20)
==31765==    by 0x53D3018: gdk_display_open_default_libgtk_only (in /usr/lib/libgdk-x11-2.0.so.0.800.20)
==31765==    by 0x5206D2D: gtk_init_check (in /usr/lib/libgtk-x11-2.0.so.0.800.20)
==31765==    by 0x4C18EE6: wxApp::Initialize(int&, char**) (app.cpp:499)
==31765==    by 0x4B77479: wxEntryStart(int&, char**) (init.cpp:289)
==31765==    by 0x47DAABA: wxPyApp::_BootstrapApp() (helpers.cpp:438)
==31765==    by 0x48160E6: _wrap_PyApp__BootstrapApp (_core_wrap.cpp:31281)
==31765==    by 0x406D475: PyCFunction_Call (methodobject.c:93)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A6F53: PyEval_EvalFrame (ceval.c:3845)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x4850FA3: _wrap_EvtHandler__setOORInfo (event.h:2453)
==31765==    by 0x406D4BA: PyCFunction_Call (methodobject.c:77)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A6F53: PyEval_EvalFrame (ceval.c:3845)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x405AC96: function_call (funcobject.c:548)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x4048ADA: instancemethod_call (classobject.c:2532)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x407FAC2: slot_tp_init (typeobject.c:4774)
==31765==  Address 0x5CD15C8 is 0 bytes inside a block of size 524 free'd
==31765==    at 0x401D268: operator delete(void*) (vg_replace_malloc.c:246)
==31765==    by 0x4E11D19: wxSplashScreen::~wxSplashScreen() (splash.cpp:92)
==31765==    by 0x4CD0E82: wxAppBase::DeletePendingObjects() (appcmn.cpp:419)
==31765==    by 0x4CD174A: wxAppBase::OnIdle(wxIdleEvent&) (appcmn.cpp:491)
==31765==    by 0x4B2FA86: wxAppConsole::HandleEvent(wxEvtHandler*, void (wxEvtHandler::*)(wxEvent&), wxEvent&) const (appbase.cpp:320)
==31765==    by 0x4BE9CC1: wxEvtHandler::ProcessEventIfMatches(wxEventTableEntryBase const&, wxEvtHandler*, wxEvent&) (event.cpp:1203)
==31765==    by 0x4BEA0AA: wxEventHashTable::HandleEvent(wxEvent&, wxEvtHandler*) (event.cpp:877)
==31765==    by 0x4BEACCC: wxEvtHandler::ProcessEvent(wxEvent&) (event.cpp:1265)
==31765==    by 0x4CD159D: wxAppBase::ProcessIdle() (appcmn.cpp:442)
==31765==    by 0x4C18399: wxapp_idle_callback (app.cpp:207)
==31765==    by 0x5649BF1: (within /usr/lib/libglib-2.0.so.0.1000.3)
==31765==    by 0x56478D5: g_main_context_dispatch (in /usr/lib/libglib-2.0.so.0.1000.3)
==31765== 
==31765== Jump to the invalid address stated on the next line
==31765==    at 0x0: ???
==31765==    by 0x406D4BA: PyCFunction_Call (methodobject.c:77)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A6F53: PyEval_EvalFrame (ceval.c:3845)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x405AC96: function_call (funcobject.c:548)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x4048ADA: instancemethod_call (classobject.c:2532)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x407FAC2: slot_tp_init (typeobject.c:4774)
==31765==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==31765== 
==31765== Process terminating with default action of signal 11 (SIGSEGV)
==31765==  Bad permissions for mapped region at address 0x0
==31765==    at 0x0: ???
==31765==    by 0x406D4BA: PyCFunction_Call (methodobject.c:77)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A6F53: PyEval_EvalFrame (ceval.c:3845)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x405AC96: function_call (funcobject.c:548)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x4048ADA: instancemethod_call (classobject.c:2532)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x407FAC2: slot_tp_init (typeobject.c:4774)
==31765== 
==31765== Invalid read of size 4
==31765==    at 0x435D470: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x431CA7D: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x431CAF6: tdestroy (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x435D5D6: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x435DC41: __libc_freeres (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x401931E: _vgw_freeres (vg_preloaded.c:62)
==31765==    by 0x4850FAE: _wrap_EvtHandler__setOORInfo (event.h:2453)
==31765==    by 0x406D4BA: PyCFunction_Call (methodobject.c:77)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A6F53: PyEval_EvalFrame (ceval.c:3845)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765==  Address 0xC is not stack'd, malloc'd or (recently) free'd
==31765== 
==31765== Process terminating with default action of signal 11 (SIGSEGV)
==31765==  Access not within mapped region at address 0xC
==31765==    at 0x435D470: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x431CA7D: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x431CAF6: tdestroy (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x435D5D6: (within /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x435DC41: __libc_freeres (in /lib/tls/i686/cmov/libc-2.3.6.so)
==31765==    by 0x401931E: _vgw_freeres (vg_preloaded.c:62)
==31765==    by 0x4850FAE: _wrap_EvtHandler__setOORInfo (event.h:2453)
==31765==    by 0x406D4BA: PyCFunction_Call (methodobject.c:77)
==31765==    by 0x4040E2D: PyObject_Call (abstract.c:1795)
==31765==    by 0x40A6F53: PyEval_EvalFrame (ceval.c:3845)
==31765==    by 0x40A9B7D: PyEval_EvalCodeEx (ceval.c:2741)
==31765==    by 0x40A8612: PyEval_EvalFrame (ceval.c:3661)
==31765== 
==31765== ERROR SUMMARY: 2139 errors from 131 contexts (suppressed: 25 from 1)
==31765== malloc/free: in use at exit: 7,684,010 bytes in 11,242 blocks.
==31765== malloc/free: 76,091 allocs, 64,849 frees, 14,910,286 bytes allocated.
==31765== For counts of detected errors, rerun with: -v
==31765== searching for pointers to 11,242 not-freed blocks.
==31765== checked 8,023,476 bytes.
==31765== 
==31765== LEAK SUMMARY:
==31765==    definitely lost: 2,188 bytes in 3 blocks.
==31765==      possibly lost: 58,496 bytes in 429 blocks.
==31765==    still reachable: 7,623,326 bytes in 10,810 blocks.
==31765==         suppressed: 0 bytes in 0 blocks.
==31765== Use --leak-check=full to see details of leaked memory.
Segmentation fault

 	  	 
