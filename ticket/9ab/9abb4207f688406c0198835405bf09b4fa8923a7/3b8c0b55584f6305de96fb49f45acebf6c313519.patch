Index: src/msw/mediactrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/mediactrl.cpp,v
retrieving revision 1.40
diff -b -u -2 -r1.40 mediactrl.cpp
--- src/msw/mediactrl.cpp	2005/06/02 17:27:43	1.40
+++ src/msw/mediactrl.cpp	2005/06/17 20:50:54
@@ -508,9 +508,16 @@
 // wxAMMediaBackend (Active Movie)
 //------------------------------------------------------------------
+#if wxUSE_THREADS
 class WXDLLIMPEXP_MEDIA wxAMMediaThread : public wxThread
+#else
+class WXDLLIMPEXP_MEDIA wxAMMediaThread : public wxTimer
+#endif
 {
 public:
+#if wxUSE_THREADS
     virtual ExitCode Entry();
-
+#else
+    virtual void Notify();
+#endif
     class wxAMMediaBackend* pThis;
 };
@@ -573,5 +580,7 @@
 
     wxMediaState m_state;
+#if wxUSE_THREADS
     wxCriticalSection m_rendercs;
+#endif
 
     IVMRWindowlessControl* m_pVMC;
@@ -1260,6 +1269,11 @@
     m_pThread = new wxAMMediaThread;
     m_pThread->pThis = this;
+
+#if wxUSE_THREADS
     m_pThread->Create();
     m_pThread->Run();
+#else
+    m_pThread->Start(10, wxTIMER_CONTINUOUS);
+#endif
 
     return true;
@@ -1288,5 +1302,7 @@
 bool wxAMMediaBackend::Play()
 {
+#if wxUSE_THREADS
     wxCriticalSectionLocker lock(m_rendercs);
+#endif
 
     if( SUCCEEDED(m_pMC->Run()) )
@@ -1307,5 +1323,7 @@
 bool wxAMMediaBackend::Pause()
 {
+#if wxUSE_THREADS
     wxCriticalSectionLocker lock(m_rendercs);
+#endif
 
     if( SUCCEEDED(m_pMC->Pause()) )
@@ -1325,5 +1343,7 @@
 bool wxAMMediaBackend::Stop()
 {
+#if wxUSE_THREADS
     wxCriticalSectionLocker lock(m_rendercs);
+#endif
 
     if( SUCCEEDED(m_pMC->Stop()) )
@@ -1469,6 +1489,12 @@
 void wxAMMediaBackend::Cleanup()
 {
+#if wxUSE_THREADS
     m_pThread->Delete();
     m_pThread = NULL;
+#else
+    m_pThread->Stop();
+    delete m_pThread;
+    m_pThread = NULL;
+#endif
 
     // Release and zero DirectShow interfaces
@@ -1568,12 +1594,21 @@
 
 //---------------------------------------------------------------------------
-// wxAMMediaThread::Entry
+// wxAMMediaThread::Entry/Notify
 //
 // Render the current movie frame
+// MinGW requires an extra DLL for threads, so a lot of users compile 
+// without them.  Here they are second-class citizens and get a timer
+// instead of a thread.
 //---------------------------------------------------------------------------
+#if wxUSE_THREADS
 wxThread::ExitCode wxAMMediaThread::Entry()
+#else
+void wxAMMediaThread::Notify()
+#endif
 {
+#if wxUSE_THREADS
     while(!TestDestroy())
     {
+#endif    
         LONG    evCode,
                 evParam1,
@@ -1601,8 +1636,10 @@
         }
 
+#if wxUSE_THREADS
         Sleep(10);
     }
 
     return NULL;
+#endif
 }
 

 	  	 
