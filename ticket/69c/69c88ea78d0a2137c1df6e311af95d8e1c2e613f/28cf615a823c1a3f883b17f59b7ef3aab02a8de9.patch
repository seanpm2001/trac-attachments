--- include/wx/fontdata.h	Tue May 05 09:40:32 2015
+++ include/wx/fontdata.h	Thu May 14 10:24:04 2015
@@ -12,6 +12,14 @@
 #include "wx/colour.h"
 #include "wx/encinfo.h"
 
+enum wxFontRestrictSelection
+{
+    wxFONTRESTRICT_NONE         = 0,
+    wxFONTRESTRICT_SCALABLE     = 1 << 0,
+    wxFONTRESTRICT_FIXEDPITCH   = 1 << 1,
+    
+};
+
 class WXDLLIMPEXP_CORE wxFontData : public wxObject
 {
 public:
@@ -33,6 +41,9 @@
     void EnableEffects(bool flag) { m_enableEffects = flag; }
     bool GetEnableEffects() const { return m_enableEffects; }
 
+    void RestrictSelection(int flags) { m_restrictSelection = flags; }
+    int  GetRestrictSelection() const { return m_restrictSelection; }
+
     void SetInitialFont(const wxFont& font) { m_initialFont = font; }
     wxFont GetInitialFont() const { return m_initialFont; }
 
@@ -63,7 +74,8 @@
 private:
     wxFontEncoding       m_encoding;
     wxNativeEncodingInfo m_encodingInfo;
-
+    int                  m_restrictSelection;
+    
     wxDECLARE_DYNAMIC_CLASS(wxFontData);
 };
 
--- interface/wx/fontdata.h	Tue May 05 09:40:44 2015
+++ interface/wx/fontdata.h	Fri May 15 09:47:00 2015
@@ -65,6 +65,20 @@
     bool GetEnableEffects() const;
 
     /**
+        Under Windows, returns the state of the flags restricting the selection.
+        @returns
+        - @c wxFONTRESTRICT_NONE If no restriction applies, or a combination of
+        the following flags:
+        - @c wxFONTRESTRICT_SCALABLE To show only scalable fonts - no raster fonts.
+        - @c wxFONTRESTRICT_FIXEDPITCH To show only monospaced fonts.
+
+        The default value is @c wxFONTRESTRICT_NONE.
+        
+        @since 3.1.0
+    */
+    int GetRestrictSelection() const;
+
+    /**
         Gets the font that will be initially used by the font dialog. This
         should have previously been set by the application.
     */
@@ -76,6 +90,20 @@
         The default value is @false.
     */
     bool GetShowHelp() const;
+
+    /**
+        Under Windows, restricts the selection to a subset of the available
+        fonts. Possible values are:
+        
+        - @c wxFONTRESTRICT_NONE No restriction
+        - @c wxFONTRESTRICT_SCALABLE To show only scalable fonts - no raster fonts.
+        - @c wxFONTRESTRICT_FIXEDPITCH To show only monospaced fonts.
+        
+        The default value is @c wxFONTRESTRICT_NONE.
+        
+        @since 3.1.0
+    */
+    void RestrictSelection(int flags);
 
     /**
         Under Windows, determines whether symbol fonts can be selected. Has no
--- src/common/fontdata.cpp	Tue May 05 09:41:02 2015
+++ src/common/fontdata.cpp	Thu May 14 10:28:03 2015
@@ -26,6 +26,7 @@
     m_maxSize = 0;
 
     m_encoding = wxFONTENCODING_SYSTEM;
+    m_restrictSelection = wxFONTRESTRICT_NONE;
 }
 
 wxFontData::~wxFontData()
@@ -43,7 +44,8 @@
       m_minSize(data.m_minSize),
       m_maxSize(data.m_maxSize),
       m_encoding(data.m_encoding),
-      m_encodingInfo(data.m_encodingInfo)
+      m_encodingInfo(data.m_encodingInfo),
+      m_restrictSelection(data.m_restrictSelection)
 {
 }
 
@@ -52,16 +54,17 @@
     if (&data != this)
     {
         wxObject::operator=(data);
-        m_fontColour     = data.m_fontColour;
-        m_showHelp       = data.m_showHelp;
-        m_allowSymbols   = data.m_allowSymbols;
-        m_enableEffects  = data.m_enableEffects;
-        m_initialFont    = data.m_initialFont;
-        m_chosenFont     = data.m_chosenFont;
-        m_minSize        = data.m_minSize;
-        m_maxSize        = data.m_maxSize;
-        m_encoding       = data.m_encoding;
-        m_encodingInfo   = data.m_encodingInfo;
+        m_fontColour        = data.m_fontColour;
+        m_showHelp          = data.m_showHelp;
+        m_allowSymbols      = data.m_allowSymbols;
+        m_enableEffects     = data.m_enableEffects;
+        m_initialFont       = data.m_initialFont;
+        m_chosenFont        = data.m_chosenFont;
+        m_minSize           = data.m_minSize;
+        m_maxSize           = data.m_maxSize;
+        m_encoding          = data.m_encoding;
+        m_encodingInfo      = data.m_encodingInfo;
+        m_restrictSelection = data.m_restrictSelection;
     }
     return *this;
 }
--- src/msw/fontdlg.cpp	Tue May 05 09:41:11 2015
+++ src/msw/fontdlg.cpp	Thu May 14 10:24:04 2015
@@ -92,6 +92,10 @@
       flags |= CF_EFFECTS;
     if ( m_fontData.GetShowHelp() )
       flags |= CF_SHOWHELP;
+    if ( m_fontData.GetRestrictSelection() & wxFONTRESTRICT_SCALABLE )
+      flags |= CF_SCALABLEONLY;
+    if ( m_fontData.GetRestrictSelection() & wxFONTRESTRICT_FIXEDPITCH )
+      flags |= CF_FIXEDPITCHONLY;
 
     if ( m_fontData.m_minSize != 0 || m_fontData.m_maxSize != 0 )
     {
