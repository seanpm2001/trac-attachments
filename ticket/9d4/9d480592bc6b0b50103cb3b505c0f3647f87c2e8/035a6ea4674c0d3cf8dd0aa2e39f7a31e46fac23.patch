Index: include/wx/motif/button.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/motif/button.h,v
retrieving revision 1.7
diff -b -u -2 -r1.7 button.h
--- include/wx/motif/button.h	2002/02/05 16:34:30	1.7
+++ include/wx/motif/button.h	2003/11/10 22:46:33
@@ -55,4 +55,6 @@
     virtual void ChangeBackgroundColour();
     virtual void ChangeForegroundColour();
+protected:
+    virtual wxSize DoGetBestSize() const;
 };
 
Index: include/wx/motif/choice.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/motif/choice.h,v
retrieving revision 1.12
diff -b -u -2 -r1.12 choice.h
--- include/wx/motif/choice.h	2002/08/24 10:54:15	1.12
+++ include/wx/motif/choice.h	2003/11/10 22:46:33
@@ -97,4 +97,9 @@
     wxList        m_clientList;    // contains the client data for the items
      
+    wxSize GetItemsSize() const;
+    wxSize GetMarginsSize() const;
+    virtual wxSize DoGetBestSize() const;
+
+    virtual void DoGetSize(int *x, int *y) const;
     virtual void DoSetSize(int x, int y,
         int width, int height,
Index: include/wx/motif/combobox.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/motif/combobox.h,v
retrieving revision 1.8
diff -b -u -2 -r1.8 combobox.h
--- include/wx/motif/combobox.h	2002/02/05 16:34:30	1.8
+++ include/wx/motif/combobox.h	2003/11/10 22:46:33
@@ -89,4 +89,6 @@
     
 protected:
+    virtual wxSize DoGetBestSize() const;
+
     virtual void DoSetSize(int x, int y,
         int width, int height,
Index: include/wx/motif/gauge.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/motif/gauge.h,v
retrieving revision 1.7
diff -b -u -2 -r1.7 gauge.h
--- include/wx/motif/gauge.h	2002/02/05 16:34:30	1.7
+++ include/wx/motif/gauge.h	2003/11/10 22:46:33
@@ -66,4 +66,6 @@
     
 protected:
+    virtual wxSize DoGetBestSize() const;
+
     int      m_rangeMax;
     int      m_gaugePos;
Index: include/wx/motif/listbox.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/motif/listbox.h,v
retrieving revision 1.15
diff -b -u -2 -r1.15 listbox.h
--- include/wx/motif/listbox.h	2002/07/31 20:35:41	1.15
+++ include/wx/motif/listbox.h	2003/11/10 22:46:33
@@ -90,4 +90,6 @@
 #endif
 protected:
+    virtual wxSize DoGetBestSize() const;
+
     int       m_noItems;
     
Index: include/wx/motif/textctrl.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/motif/textctrl.h,v
retrieving revision 1.14
diff -b -u -2 -r1.14 textctrl.h
--- include/wx/motif/textctrl.h	2002/02/05 16:34:31	1.14
+++ include/wx/motif/textctrl.h	2003/11/10 22:46:33
@@ -135,4 +135,5 @@
     wxString  m_fileName;
     
+    virtual wxSize DoGetBestSize() const;
 public:
     // Motif-specific
Index: src/motif/bmpbuttn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/motif/bmpbuttn.cpp,v
retrieving revision 1.16
diff -b -u -2 -r1.16 bmpbuttn.cpp
--- src/motif/bmpbuttn.cpp	2002/08/05 18:04:07	1.16
+++ src/motif/bmpbuttn.cpp	2003/11/10 22:46:38
@@ -115,15 +115,8 @@
     SetCanAddEventHandler(TRUE);
     
-    wxSize newSize = size;
+    wxSize newSize = m_buttonBitmap.Ok() ? GetBestSize() : wxSize(30, 30);
+    if( size.x != -1 ) newSize.x = size.x;
+    if( size.y != -1 ) newSize.y = size.y;
     
-    if (m_buttonBitmap.Ok())
-    {
-        int border = (style & wxNO_BORDER) ? 4 : 10;
-        if (newSize.x == -1)
-            newSize.x = m_buttonBitmap.GetWidth()+border;
-        if (newSize.y == -1)
-            newSize.y = m_buttonBitmap.GetHeight()+border;
-    }
-    
     AttachWidget (parent, m_mainWidget, (WXWidget) NULL, pos.x, pos.y, newSize.x, newSize.y);
 
@@ -285,9 +278,4 @@
         ret.x = m_buttonBitmap.GetWidth()+border;
         ret.y = m_buttonBitmap.GetHeight()+border;
-    }
-
-    if (!HasFlag(wxBU_EXACTFIT))
-    {
-        if (ret.x < 80) ret.x = 80;
     }
 
Index: src/motif/button.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/motif/button.cpp,v
retrieving revision 1.21
diff -b -u -2 -r1.21 button.cpp
--- src/motif/button.cpp	2001/08/16 11:30:13	1.21
+++ src/motif/button.cpp	2003/11/10 22:46:38
@@ -92,12 +92,7 @@
     SetCanAddEventHandler(TRUE);
     
-    int x = 0;  int y = 0;
-    wxFont new_font( parent->GetFont() );
-    GetTextExtent( label1, &x, &y, (int*)NULL, (int*)NULL, &new_font );
-
-    wxSize newSize = size;
-    if (newSize.x == -1) newSize.x = 30+x;
-    if (newSize.y == -1) newSize.y = 27+y;
-    SetSize( newSize.x, newSize.y );
+    wxSize newSize = GetBestSize();
+    if( size.x != -1 ) newSize.x = size.x;
+    if( size.y != -1 ) newSize.y = size.y;
     
     AttachWidget (parent, m_mainWidget, (WXWidget) NULL, pos.x, pos.y, newSize.x, newSize.y);
@@ -146,6 +141,48 @@
 {
     // TODO: check font size as in wxMSW ?  MB
-    //
-    return wxSize(80,26);
+    // y default should be quite small - let DoGetBestSize ajust it for the font
+    return wxSize(78,12);
+}
+
+wxSize wxButton::DoGetBestSize() const
+{
+    Dimension xmargin, ymargin, highlight, shadow, defThickness;
+
+    //TODO: Take into account XmNmarginLeft/Right/Top/Bottom (normally 0),
+    //                        XmNshowAsDefault (see man XmPushButton)
+    XtVaGetValues( (Widget)m_mainWidget,
+                   XmNmarginWidth, &xmargin,
+                   XmNmarginHeight, &ymargin,
+                   XmNhighlightThickness, &highlight,
+                   XmNshadowThickness, &shadow,
+                   XmNdefaultButtonShadowThickness, &defThickness,
+                   NULL );
+
+    int x = 0;  int y = 0;
+    GetTextExtent( GetLabel(), &x, &y );
+
+    int margin = highlight * 2 +
+        ( defThickness ? ( ( shadow + defThickness ) * 4 ) : ( shadow * 2 ) );
+    wxSize best( x + xmargin * 2 + margin,
+                 y + ymargin * 2 + margin );
+
+    // all buttons have at least the standard size unless the user explicitly
+    // wants them to be of smaller size and used wxBU_EXACTFIT style when
+    // creating the button
+    if( !HasFlag( wxBU_EXACTFIT ) )
+    {
+        wxSize def = GetDefaultSize();
+        int margin =  highlight * 2 +
+            ( defThickness ? ( shadow * 4 + defThickness * 4 ) : 0 );
+        def.x += margin;
+        def.y += margin;
+
+        if( def.x > best.x )
+            best.x = def.x;
+        if( def.y > best.y )
+            best.y = def.y;
+    }
+
+    return best;
 }
 
Index: src/motif/choice.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/motif/choice.cpp,v
retrieving revision 1.25
diff -b -u -2 -r1.25 choice.cpp
--- src/motif/choice.cpp	2002/08/24 10:54:15	1.25
+++ src/motif/choice.cpp	2003/11/10 22:46:38
@@ -116,8 +116,19 @@
     XtSetArg (args[argcnt], XmNmarginHeight, 0);
     argcnt++;
+    XtSetArg (args[argcnt], XmNspacing, 0);
+    argcnt++;
     XtSetArg (args[argcnt], XmNpacking, XmPACK_TIGHT);
     argcnt++;
     m_buttonWidget = (WXWidget) XmCreateOptionMenu ((Widget) m_formWidget, "choiceButton", args, argcnt);
 
+    Widget optionButton = XmOptionButtonGadget ((Widget) m_buttonWidget);
+    XtVaSetValues(optionButton, XmNmarginTop, 0,
+                                XmNmarginBottom, 0, NULL);
+
+    Widget optionLabel = XmOptionLabelGadget ((Widget) m_buttonWidget);
+    XtVaSetValues(optionLabel, XmNmarginWidth, 0,
+                               XmNmarginHeight, 0,
+                               XmNwidth, 0, NULL);
+
     m_mainWidget = m_buttonWidget;
 
@@ -138,9 +149,13 @@
 #endif
 
+    wxSize bestSize = GetBestSize();
+    if( size.x > 0 ) bestSize.x = size.x;
+    if( size.y > 0 ) bestSize.y = size.y;
+
     XtVaSetValues((Widget) m_formWidget, XmNresizePolicy, XmRESIZE_NONE, NULL);
 
     ChangeFont(FALSE);
 
-    AttachWidget (parent, m_buttonWidget, m_formWidget, pos.x, pos.y, size.x, size.y);
+    AttachWidget (parent, m_buttonWidget, m_formWidget, pos.x, pos.y, bestSize.x, bestSize.y);
 
     ChangeBackgroundColour();
@@ -382,4 +397,32 @@
 }
 
+void wxChoice::DoGetSize(int *x, int *y) const
+{
+    if (m_buttonWidget != NULL)
+    {
+        // The Motif choice control is a composite thing that doesn't know its
+        // real size until negotiations with its children have finished. WX needs
+        // to know the final size early, so we have to calculate it ourselves.
+        int curX = 0, curY = 0;
+        wxSize newSize;
+        
+        XtVaGetValues((Widget) m_buttonWidget,
+                XmNwidth, &curX, XmNheight, &curY, NULL);
+
+        newSize = GetMarginsSize() + GetItemsSize();
+
+        if (curX < newSize.x) curX = newSize.x;
+        if (curY < newSize.y) curY = newSize.y;
+
+        if (x) *x = curX;
+        if (y) *y = curY;
+    }
+    else
+    {
+        // If m_buttonWidget is NULL, we are probably a combobox (derived class)
+        wxWindow::DoGetSize(x, y);
+    }
+}
+
 void wxChoice::DoSetSize(int x, int y, int width, int height, int sizeFlags)
 {
@@ -390,20 +433,26 @@
         XtUnmanageChild ((Widget) m_formWidget);
 
-    int actualWidth = width, actualHeight = height;
+    wxSize margins = GetMarginsSize();
+    int actualWidth = width - margins.x + 1,    // Don't know why there's a 1-pixel error
+        actualHeight = height - margins.y;
 
-    if (width > -1)
+    if (width > -1 && actualWidth > -1)
     {
         int i;
         for (i = 0; i < m_noStrings; i++)
             XtVaSetValues ((Widget) m_widgetList[i], XmNwidth, actualWidth, NULL);
-        XtVaSetValues ((Widget) m_buttonWidget, XmNwidth, actualWidth,
+#if 0
+        XtVaSetValues ((Widget) m_buttonWidget, XmNwidth, width,
             NULL);
+#endif
     }
-    if (height > -1)
+    if (height > -1 && actualHeight > -1)
     {
+#if 0
         int i;
         for (i = 0; i < m_noStrings; i++)
             XtVaSetValues ((Widget) m_widgetList[i], XmNheight, actualHeight, NULL);
-        XtVaSetValues ((Widget) m_buttonWidget, XmNheight, actualHeight,
+#endif
+        XtVaSetValues ((Widget) m_buttonWidget, XmNheight, height,
             NULL);
     }
@@ -599,3 +648,52 @@
 {
     wxFAIL_MSG( wxT("wxChoice::SetString not implemented") );
+}
+
+wxSize wxChoice::GetItemsSize() const
+{
+    int x, y, mx = 0, my = 0;
+
+    // get my
+    GetTextExtent( "|", &x, &my );
+
+    wxStringList::Node* curr = m_stringList.GetFirst();
+    while( curr )
+    {
+        GetTextExtent( curr->GetData(), &x, &y );
+        mx = wxMax( mx, x );
+        my = wxMax( my, y );
+        curr = curr->GetNext();
+    }
+
+    return wxSize( mx, my );
+}
+
+wxSize wxChoice::GetMarginsSize() const
+{
+    Widget optionButton = XmOptionButtonGadget((Widget) m_buttonWidget);
+    Dimension marginT, marginB, marginL, marginR, marginHt, marginWd,
+        shadow, highlight;
+
+    XtVaGetValues(optionButton,
+                    XmNmarginTop,       &marginT,   // set to 0
+                    XmNmarginBottom,    &marginB,   // set to 0
+                    XmNmarginLeft,      &marginL,   // normally 0
+                    XmNmarginRight,     &marginR,   // normally 21
+                    XmNmarginHeight,    &marginHt,  // normally 1
+                    XmNmarginWidth,     &marginWd,  // normally 1
+                    XmNshadowThickness, &shadow,    // normally 2
+                    XmNhighlightThickness, &highlight,  // normally 1
+                    NULL);
+
+    return wxSize( marginL + marginR + 2*marginWd + 2*shadow + 2*highlight,
+                   marginT + marginB + 2*marginHt + 2*shadow + 2*highlight);
+}
+
+wxSize wxChoice::DoGetBestSize() const
+{
+    wxSize items = GetItemsSize();
+    wxSize margins = GetMarginsSize();
+
+    return wxSize( ( items.x ? items.x + margins.x : 120 ),
+                     items.y + margins.y );
 }
Index: src/motif/combobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/motif/combobox.cpp,v
retrieving revision 1.16.4.1
diff -b -u -2 -r1.16.4.1 combobox.cpp
--- src/motif/combobox.cpp	2002/09/21 20:53:57	1.16.4.1
+++ src/motif/combobox.cpp	2003/11/10 22:46:38
@@ -92,6 +92,10 @@
         (XtPointer) this);
 
+    wxSize newSize = GetBestSize();
+    if( size.x != -1 ) newSize.x = size.x;
+    if( size.y != -1 ) newSize.y = size.y;
+
     SetCanAddEventHandler(TRUE);
-    AttachWidget (parent, m_mainWidget, (WXWidget) NULL, pos.x, pos.y, size.x, size.y);
+    AttachWidget (parent, m_mainWidget, (WXWidget) NULL, pos.x, pos.y, newSize.x, newSize.y);
 
     ChangeBackgroundColour();
@@ -110,5 +114,5 @@
 {
     // Necessary so it doesn't call wxChoice::SetSize
-    wxWindow::DoSetSize(x, y, width, height, sizeFlags);
+    wxWindow::DoSetSize(x, y, width, DoGetBestSize().y, sizeFlags);
 }
 
@@ -358,4 +362,18 @@
 {
     wxWindow::ChangeBackgroundColour();
+}
+
+wxSize wxComboBox::DoGetBestSize() const
+{
+    if( (GetWindowStyle() & wxCB_DROPDOWN) == wxCB_DROPDOWN ||
+        (GetWindowStyle() & wxCB_READONLY) == wxCB_READONLY )
+    {
+        wxSize items = GetItemsSize();
+        // FIXME arbitrary constants
+        return wxSize( ( items.x ? items.x + 50 : 120 ),
+                         items.y + 10 );
+    }
+    else
+        return wxWindow::DoGetBestSize();
 }
 
Index: src/motif/gauge.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/motif/gauge.cpp,v
retrieving revision 1.14
diff -b -u -2 -r1.14 gauge.cpp
--- src/motif/gauge.cpp	2000/08/24 10:58:26	1.14
+++ src/motif/gauge.cpp	2003/11/10 22:46:39
@@ -126,9 +126,7 @@
 
     int x = pos.x; int y = pos.y;
-    int width = size.x; int height = size.y;
-    if (width == -1)
-        width = 150;
-    if (height == -1)
-        height = 80;
+    wxSize newSize = GetBestSize();
+    if( size.x != -1 ) newSize.x = size.x;
+    if( size.y != -1 ) newSize.y = size.y;
 
     m_font = parent->GetFont();
@@ -136,9 +134,17 @@
 
     SetCanAddEventHandler(TRUE);
-    AttachWidget (parent, m_mainWidget, (WXWidget) NULL, x, y, width, height);
+    AttachWidget (parent, m_mainWidget, (WXWidget) NULL, x, y, newSize.x, newSize.y);
 
     ChangeBackgroundColour();
 
     return TRUE;
+}
+
+wxSize wxGauge::DoGetBestSize() const
+{
+    if( HasFlag(wxGA_HORIZONTAL) )
+        return wxSize( 100, 18 );
+    else
+        return wxSize( 18, 100 );
 }
 
Index: src/motif/listbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/motif/listbox.cpp,v
retrieving revision 1.26.2.1
diff -b -u -2 -r1.26.2.1 listbox.cpp
--- src/motif/listbox.cpp	2002/11/28 18:13:00	1.26.2.1
+++ src/motif/listbox.cpp	2003/11/10 22:46:39
@@ -99,10 +99,7 @@
     XtManageChild (listWidget);
 
-    long width = size.x;
-    long height = size.y;
-    if (width == -1)
-        width = 150;
-    if (height == -1)
-        height = 80;
+    wxSize newSize = GetBestSize();
+    if( size.x != -1 ) newSize.x = size.x;
+    if( size.y != -1 ) newSize.y = size.y;
 
     XtAddCallback (listWidget,
@@ -128,5 +125,5 @@
     SetCanAddEventHandler(TRUE);
     AttachWidget (parent, m_mainWidget, (WXWidget) NULL,
-                  pos.x, pos.y, width, height);
+                  pos.x, pos.y, newSize.x, newSize.y);
 
     ChangeBackgroundColour();
@@ -712,3 +709,45 @@
 {
     return m_noItems;
+}
+
+#define LIST_SCROLL_SPACING 6
+
+wxSize wxListBox::DoGetBestSize() const
+{
+    int max;
+    Dimension spacing, highlight, xmargin, ymargin, shadow;
+    int width = 0;
+    int x, y;
+
+    XtVaGetValues( (Widget) m_mainWidget,
+                   XmNitemCount, &max,
+                   XmNlistSpacing, &spacing,
+                   XmNhighlightThickness, &highlight,
+                   XmNlistMarginWidth, &xmargin,
+                   XmNlistMarginHeight, &ymargin,
+                   XmNshadowThickness, &shadow,
+                   NULL );
+
+    for( size_t i = 0; i < (size_t)max; ++i )
+    {
+        GetTextExtent( GetString( i ), &x, &y );
+        width = wxMax( width, x );
+    }
+
+    // use some arbitrary value if there are no strings
+    if( width == 0 )
+        width = 100;
+
+    // get my
+    GetTextExtent( "v", &x, &y );
+
+    // make it a little larger than widest string, plus the scrollbar
+    width += wxSystemSettings::GetMetric( wxSYS_VSCROLL_X )
+        + 2 * highlight + LIST_SCROLL_SPACING + 2 * xmargin + 2 * shadow;
+
+    // at least 3 items, at most 10
+    int height = wxMax( 3, wxMin( 10, max ) ) *
+        ( y + spacing + 2 * highlight ) + 2 * ymargin + 2 * shadow;
+
+    return wxSize( width, height );
 }
Index: src/motif/spinbutt.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/motif/spinbutt.cpp,v
retrieving revision 1.15.2.1
diff -b -u -2 -r1.15.2.1 spinbutt.cpp
--- src/motif/spinbutt.cpp	2003/01/07 21:40:39	1.15.2.1
+++ src/motif/spinbutt.cpp	2003/11/10 22:46:39
@@ -365,5 +365,5 @@
 wxSize wxSpinButton::DoGetBestSize() const
 {
-    return IsVertical() ? wxSize( 24, 34 ) : wxSize( 34, 24 );
+    return IsVertical() ? wxSize( 20, 30 ) : wxSize( 30, 20 );
 }
 
Index: src/motif/textctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/motif/textctrl.cpp,v
retrieving revision 1.32
diff -b -u -2 -r1.32 textctrl.cpp
--- src/motif/textctrl.cpp	2002/09/02 20:08:16	1.32
+++ src/motif/textctrl.cpp	2003/11/10 22:46:40
@@ -213,6 +213,10 @@
     ChangeFont(FALSE);
 
+    wxSize newSize = GetBestSize();
+    if( size.x != -1 ) newSize.x = size.x;
+    if( size.y != -1 ) newSize.y = size.y;
+
     SetCanAddEventHandler(TRUE);
-    AttachWidget (parent, m_mainWidget, (WXWidget) NULL, pos.x, pos.y, size.x, size.y);
+    AttachWidget (parent, m_mainWidget, (WXWidget) NULL, pos.x, pos.y, newSize.x, newSize.y);
 
     ChangeBackgroundColour();
@@ -729,4 +733,5 @@
         wxCommandEvent commandEvent(wxEVT_COMMAND_TEXT_UPDATED, GetId());
         commandEvent.SetEventObject(this);
+        commandEvent.SetString(GetValue());
         ProcessCommand(commandEvent);
     }
@@ -735,4 +740,33 @@
     // otherwise GetValue() would return incorrect (not yet updated value)
     m_tempCallbackStruct = NULL;
+}
+
+wxSize wxTextCtrl::DoGetBestSize() const
+{
+    if (GetWindowStyle() & wxTE_MULTILINE)
+        return wxWindow::DoGetBestSize();
+
+    Dimension xmargin, ymargin, highlight, shadow;
+    char* value;
+
+    XtVaGetValues( (Widget)m_mainWidget,
+                   XmNmarginWidth, &xmargin,
+                   XmNmarginHeight, &ymargin,
+                   XmNvalue, &value,
+                   XmNhighlightThickness, &highlight,
+                   XmNshadowThickness, &shadow,
+                   NULL );
+
+    if( !value )
+        value = "|";
+
+    int x, y;
+    GetTextExtent( value, &x, &y );
+
+    if( x < 78 ) x = 78;
+
+    return wxSize( x + 2 * xmargin + 2 * highlight + 2 * shadow,
+                   // MBN: +2 necessary: Lesstif bug or mine?
+                   y + 2 * ymargin + 2 * highlight + 2 * shadow + 2 ); 
 }
 
Index: src/motif/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/motif/window.cpp,v
retrieving revision 1.94.2.4
diff -b -u -2 -r1.94.2.4 window.cpp
--- src/motif/window.cpp	2003/07/08 21:36:55	1.94.2.4
+++ src/motif/window.cpp	2003/11/10 22:46:41
@@ -1359,8 +1359,30 @@
     }
 
-    if ( width == -1 )
+    wxSize size(-1, -1);
+    if ( width <= 0 )
+    {
+        if ( ( sizeFlags & wxSIZE_AUTO_WIDTH ) && !fromCtor )
+        {
+            size = DoGetBestSize();
+            width = size.x;
+        }
+        else
+        {
         width = oldW;
+        }
+    }
+
     if ( height == -1 )
+    {
+        if( ( sizeFlags & wxSIZE_AUTO_HEIGHT ) && !fromCtor )
+        {
+            if( size.x == -1 ) size = DoGetBestSize();
+            height = size.y;
+        }
+        else
+        {
         height = oldH;
+        }
+    }
 
     bool nothingChanged = (x == oldX) && (y == oldY) &&

 	  	 
