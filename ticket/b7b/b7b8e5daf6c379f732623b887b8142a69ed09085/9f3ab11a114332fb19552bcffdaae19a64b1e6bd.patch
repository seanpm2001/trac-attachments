diff --git a/samples/minimal/minimal.cpp b/samples/minimal/minimal.cpp
index 0d91f7fc75..f046a9eb82 100644
--- a/samples/minimal/minimal.cpp
+++ b/samples/minimal/minimal.cpp
@@ -39,6 +39,8 @@
     #include "../sample.xpm"
 #endif
 
+#include <wx/button.h>
+
 // ----------------------------------------------------------------------------
 // private classes
 // ----------------------------------------------------------------------------
@@ -59,6 +61,7 @@ public:
 // Define a new frame type: this is going to be our main frame
 class MyFrame : public wxFrame
 {
+        wxButton* m_triggerAssert;
 public:
     // ctor(s)
     MyFrame(const wxString& title);
@@ -66,6 +69,7 @@ public:
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    void OnTriggerAssert(wxCommandEvent& event);
 
 private:
     // any class wishing to process wxWidgets events must use this macro
@@ -85,7 +89,9 @@ enum
     // it is important for the id corresponding to the "About" command to have
     // this standard value as otherwise it won't be handled properly under Mac
     // (where it is special and put into the "Apple" menu)
-    Minimal_About = wxID_ABOUT
+    Minimal_About = wxID_ABOUT,
+    
+    ID_TRIGGER_ASSERT = wxID_HIGHEST
 };
 
 // ----------------------------------------------------------------------------
@@ -98,6 +104,7 @@ enum
 wxBEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_BUTTON(ID_TRIGGER_ASSERT, MyFrame::OnTriggerAssert)
 wxEND_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -164,6 +171,17 @@ MyFrame::MyFrame(const wxString& title)
 
     // ... and attach this menu bar to the frame
     SetMenuBar(menuBar);
+    
+    this->SetSizeHints( wxDefaultSize, wxDefaultSize );
+
+    wxBoxSizer* topSizer;
+    topSizer = new wxBoxSizer( wxVERTICAL );
+
+    m_triggerAssert = new wxButton(this, ID_TRIGGER_ASSERT, "Trigger Assert");
+    topSizer->Add (m_triggerAssert);
+ 
+    this->SetSizer( topSizer );
+    this->Layout();
 #else // !wxUSE_MENUS
     // If menus are not available add a button to access the about box
     wxSizer* sizer = new wxBoxSizer(wxHORIZONTAL);
@@ -204,3 +222,15 @@ void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
                  wxOK | wxICON_INFORMATION,
                  this);
 }
+
+void MyFrame::OnTriggerAssert(wxCommandEvent& WXUNUSED(event))
+{
+    wxColour c = wxNullColour;
+    wxString str = c.GetAsString(); 
+    // The content of str on Windows is "rgba(0, 0, 0, 0.000)" and NO assert message is thrown
+    // On wxGTK an assert message is thrown
+    /*../src/gtk/colour.cpp(218): assert ""IsOk()"" failed in Alpha(): invalid colour
+      ../src/gtk/colour.cpp(185): assert ""IsOk()"" failed in Red(): invalid colour
+      ../src/gtk/colour.cpp(196): assert ""IsOk()"" failed in Green(): invalid colour
+      ../src/gtk/colour.cpp(207): assert ""IsOk()"" failed in Blue(): invalid colour*/
+}
