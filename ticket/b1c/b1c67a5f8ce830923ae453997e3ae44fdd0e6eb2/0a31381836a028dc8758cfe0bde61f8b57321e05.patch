Index: cube.cpp
===================================================================
--- cube.cpp	(revision 58341)
+++ cube.cpp	(working copy)
@@ -38,6 +38,9 @@
     #include "../../sample.xpm"
 #endif
 
+#include <wx/artprov.h>
+
+
 // ----------------------------------------------------------------------------
 // helper functions
 // ----------------------------------------------------------------------------
@@ -161,7 +164,7 @@
         const wxImage img(DrawDice(256, i + 1));
 
         glPixelStorei(GL_UNPACK_ALIGNMENT, 1);
-        glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, img.GetWidth(), img.GetHeight(), 
+        glTexImage2D(GL_TEXTURE_2D, 0, GL_RGBA, img.GetWidth(), img.GetHeight(),
                      0, GL_RGB, GL_UNSIGNED_BYTE, img.GetData());
     }
 
@@ -371,7 +374,7 @@
 MyFrame::MyFrame()
        : wxFrame(NULL, wxID_ANY, _T("wxWidgets OpenGL Cube Sample"))
 {
-    new TestGLCanvas(this);
+    wxWindow* canv = new TestGLCanvas(this);
 
     SetIcon(wxICON(sample));
 
@@ -385,6 +388,25 @@
 
     SetMenuBar(menuBar);
 
+	wxToolBar* bar = new wxToolBar(this,wxID_ANY);
+	bar->AddTool(1,_T("tool 1"),wxArtProvider::GetBitmap(wxART_GO_BACK),_T("help 1"));
+	bar->AddTool(2,_T("tool 2"),wxArtProvider::GetBitmap(wxART_GO_BACK),_T("help 2"));
+	bar->AddTool(3,_T("tool 3"),wxArtProvider::GetBitmap(wxART_GO_BACK),_T("help 3"));
+	bar->AddTool(4,_T("tool 4"),wxArtProvider::GetBitmap(wxART_GO_BACK),_T("help 4"));
+	bar->Realize();
+	SetToolBar(bar);
+
+	wxBoxSizer * siz = new wxBoxSizer(wxHORIZONTAL);
+	wxCheckListBox * ctrl = new wxCheckListBox(this,wxID_ANY,wxDefaultPosition,wxSize(60,-1));
+	ctrl->Append(_T("long text 1 ************************"));
+	ctrl->Append(_T("long text 2 ************************"));
+	ctrl->Append(_T("long text 3 ************************"));
+	ctrl->Append(_T("long text 4 ************************"));
+	ctrl->SetToolTip(_T("This is a long tool tip"));
+	siz->Add(ctrl,0,wxEXPAND );
+	siz->Add(canv,1,wxEXPAND );
+	SetSizer(siz);
+
     CreateStatusBar();
 
     SetClientSize(400, 400);
