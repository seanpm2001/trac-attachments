diff -urwN --exclude=*.po wxWidgets-2.6.3-orig/src/common/menucmn.cpp wxWidgets-2.6.3/src/common/menucmn.cpp
--- wxWidgets-2.6.3-orig/src/common/menucmn.cpp	Sun Oct 23 11:42:54 2005
+++ wxWidgets-2.6.3/src/common/menucmn.cpp	Wed Mar 22 22:56:46 2006
@@ -88,9 +88,9 @@
 static inline bool CompareAccelString(const wxString& str, const wxChar *accel)
 {
 #if wxUSE_INTL
-    return str == accel || str == wxGetTranslation(accel);
+    return (str.CmpNoCase(accel) == 0) || (str.CmpNoCase(wxGetTranslation(accel)) == 0);
 #else
-    return str == accel;
+    return (str.CmpNoCase(accel) == 0);
 #endif
 }
 
@@ -109,11 +109,11 @@
         wxString current;
         for ( size_t n = (size_t)posTab + 1; n < label.Len(); n++ ) {
             if ( (label[n] == '+') || (label[n] == '-') ) {
-                if ( CompareAccelString(current, wxTRANSLATE("ctrl")) )
+                if ( CompareAccelString(current, wxTRANSLATE("Ctrl") )
                     accelFlags |= wxACCEL_CTRL;
-                else if ( CompareAccelString(current, wxTRANSLATE("alt")) )
+                else if ( CompareAccelString(current, wxTRANSLATE("Alt") )
                     accelFlags |= wxACCEL_ALT;
-                else if ( CompareAccelString(current, wxTRANSLATE("shift")) )
+                else if ( CompareAccelString(current, wxTRANSLATE("Shift")) )
                     accelFlags |= wxACCEL_SHIFT;
                 else {
                     // we may have "Ctrl-+", for example, but we still want to
@@ -165,131 +165,135 @@
                 else {
                     // several special cases
                     current.MakeUpper();
-                    if ( current == wxT("DEL") )
+                    if ( CompareAccelString(current, wxTRANSLATE("DEL")) )
                         keyCode = WXK_DELETE;
-                    else if ( current == wxT("DELETE") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("DELETE")) )
                         keyCode = WXK_DELETE;
-                    else if ( current == wxT("BACK") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("BACK")) )
                         keyCode = WXK_BACK;
-                    else if ( current == wxT("INS") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("INS")) )
                         keyCode = WXK_INSERT;
-                    else if ( current == wxT("INSERT") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("INSERT")) )
                         keyCode = WXK_INSERT;
-                    else if ( current == wxT("ENTER") || current == wxT("RETURN") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("ENTER")) )
                         keyCode = WXK_RETURN;
-                    else if ( current == wxT("PGUP") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("RETURN")) )
+                        keyCode = WXK_RETURN;
+                    else if ( CompareAccelString(current, wxTRANSLATE("PGUP")) )
                         keyCode = WXK_PRIOR;
-                    else if ( current == wxT("PGDN") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("PGDN")) )
                         keyCode = WXK_NEXT;
-                    else if ( current == wxT("LEFT") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("LEFT")) )
                         keyCode = WXK_LEFT;
-                    else if ( current == wxT("RIGHT") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("RIGHT")) )
                         keyCode = WXK_RIGHT;
-                    else if ( current == wxT("UP") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("UP")) )
                         keyCode = WXK_UP;
-                    else if ( current == wxT("DOWN") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("DOWN")) )
                         keyCode = WXK_DOWN;
-                    else if ( current == wxT("HOME") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("HOME")) )
                         keyCode = WXK_HOME;
-                    else if ( current == wxT("END") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("END")) )
                         keyCode = WXK_END;
-                    else if ( current == wxT("SPACE") || current == _("SPACE") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("SPACE")) )
                         keyCode = WXK_SPACE;
-                    else if ( current == wxT("TAB") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("TAB")) )
                         keyCode = WXK_TAB;
-                    else if ( current == wxT("ESC") || current == wxT("ESCAPE") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("ESC")) )
+                        keyCode = WXK_ESCAPE;
+                    else if ( CompareAccelString(current, wxTRANSLATE("ESCAPE")) )
                         keyCode = WXK_ESCAPE;
-                    else if ( current == wxT("CANCEL") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("CANCEL")) )
                         keyCode = WXK_CANCEL;
-                    else if ( current == wxT("CLEAR") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("CLEAR")) )
                         keyCode = WXK_CLEAR;
-                    else if ( current == wxT("MENU") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("MENU")) )
                         keyCode = WXK_MENU;
-                    else if ( current == wxT("PAUSE") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("PAUSE")) )
                         keyCode = WXK_PAUSE;
-                    else if ( current == wxT("CAPITAL") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("CAPITAL")) )
                         keyCode = WXK_CAPITAL;
-                    else if ( current == wxT("SELECT") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("SELECT")) )
                         keyCode = WXK_SELECT;
-                    else if ( current == wxT("PRINT") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("PRINT")) )
                         keyCode = WXK_PRINT;
-                    else if ( current == wxT("EXECUTE") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("EXECUTE")) )
                         keyCode = WXK_EXECUTE;
-                    else if ( current == wxT("SNAPSHOT") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("SNAPSHOT")) )
                         keyCode = WXK_SNAPSHOT;
-                    else if ( current == wxT("HELP") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("HELP")) )
                         keyCode = WXK_HELP;
-                    else if ( current == wxT("ADD") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("ADD")) )
                         keyCode = WXK_ADD;
-                    else if ( current == wxT("SEPARATOR") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("SEPARATOR")) )
                         keyCode = WXK_SEPARATOR;
-                    else if ( current == wxT("SUBTRACT") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("SUBTRACT")) )
                         keyCode = WXK_SUBTRACT;
-                    else if ( current == wxT("DECIMAL") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("DECIMAL")) )
                         keyCode = WXK_DECIMAL;
-                    else if ( current == wxT("DIVIDE") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("DIVIDE")) )
                         keyCode = WXK_DIVIDE;
-                    else if ( current == wxT("NUM_LOCK") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("NUM_LOCK")) )
                         keyCode = WXK_NUMLOCK;
-                    else if ( current == wxT("SCROLL_LOCK") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("SCROLL_LOCK")) )
                         keyCode = WXK_SCROLL;
-                    else if ( current == wxT("PAGEUP") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("PAGEUP")) )
                         keyCode = WXK_PAGEUP;
-                    else if ( current == wxT("PAGEDOWN") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("PAGEDOWN")) )
                         keyCode = WXK_PAGEDOWN;
-                    else if ( current == wxT("KP_SPACE") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_SPACE")) )
                         keyCode = WXK_NUMPAD_SPACE;
-                    else if ( current == wxT("KP_TAB") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_TAB")) )
                         keyCode = WXK_NUMPAD_TAB;
-                    else if ( current == wxT("KP_ENTER") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_ENTER")) )
                         keyCode = WXK_NUMPAD_ENTER;
-                    else if ( current == wxT("KP_HOME") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_HOME")) )
                         keyCode = WXK_NUMPAD_HOME;
-                    else if ( current == wxT("KP_LEFT") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_LEFT")) )
                         keyCode = WXK_NUMPAD_LEFT;
-                    else if ( current == wxT("KP_UP") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_UP")) )
                         keyCode = WXK_NUMPAD_UP;
-                    else if ( current == wxT("KP_RIGHT") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_RIGHT")) )
                         keyCode = WXK_NUMPAD_RIGHT;
-                    else if ( current == wxT("KP_DOWN") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_DOWN")) )
                         keyCode = WXK_NUMPAD_DOWN;
-                    else if ( current == wxT("KP_PRIOR") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_PRIOR")) )
                         keyCode = WXK_NUMPAD_PRIOR;
-                    else if ( current == wxT("KP_PAGEUP") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_PAGEUP")) )
                         keyCode = WXK_NUMPAD_PAGEUP;
-                    else if ( current == wxT("KP_NEXT;") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_NEXT")) )
                         keyCode = WXK_NUMPAD_NEXT;
-                    else if ( current == wxT("KP_PAGEDOWN") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_PAGEDOWN")) )
                         keyCode = WXK_NUMPAD_PAGEDOWN;
-                    else if ( current == wxT("KP_END") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_END")) )
                         keyCode = WXK_NUMPAD_END;
-                    else if ( current == wxT("KP_BEGIN") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_BEGIN")) )
                         keyCode = WXK_NUMPAD_BEGIN;
-                    else if ( current == wxT("KP_INSERT") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_INSERT")) )
                         keyCode = WXK_NUMPAD_INSERT;
-                    else if ( current == wxT("KP_DELETE") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_DELETE")) )
                         keyCode = WXK_NUMPAD_DELETE;
-                    else if ( current == wxT("KP_EQUAL") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_EQUAL")) )
                         keyCode = WXK_NUMPAD_EQUAL;
-                    else if ( current == wxT("KP_MULTIPLY") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_MULTIPLY")) )
                         keyCode = WXK_NUMPAD_MULTIPLY;
-                    else if ( current == wxT("KP_ADD") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_ADD")) )
                         keyCode = WXK_NUMPAD_ADD;
-                    else if ( current == wxT("KP_SEPARATOR") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_SEPARATOR")) )
                         keyCode = WXK_NUMPAD_SEPARATOR;
-                    else if ( current == wxT("KP_SUBTRACT") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_SUBTRACT")) )
                         keyCode = WXK_NUMPAD_SUBTRACT;
-                    else if ( current == wxT("KP_DECIMAL") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_DECIMAL")) )
                         keyCode = WXK_NUMPAD_DECIMAL;
-                    else if ( current == wxT("KP_DIVIDE") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("KP_DIVIDE")) )
                         keyCode = WXK_NUMPAD_DIVIDE;
-                    else if ( current == wxT("WINDOWS_LEFT") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("WINDOWS_LEFT")) )
                         keyCode = WXK_WINDOWS_LEFT;
-                    else if ( current == wxT("WINDOWS_RIGHT") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("WINDOWS_RIGHT")) )
                         keyCode = WXK_WINDOWS_RIGHT;
-                    else if ( current == wxT("WINDOWS_MENU") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("WINDOWS_MENU")) )
                         keyCode = WXK_WINDOWS_MENU;
-                    else if ( current == wxT("COMMAND") )
+                    else if ( CompareAccelString(current, wxTRANSLATE("COMMAND")) )
                         keyCode = WXK_COMMAND;
                     else if ( current.Left(3) == wxT("KP_") && wxIsdigit(current[3U]) )
                         keyCode = WXK_NUMPAD0 + wxAtoi(current.c_str() + 3);
@@ -328,11 +332,11 @@
 
         int flags = accel->GetFlags();
         if ( flags & wxACCEL_ALT )
-            text += wxT("Alt-");
+            text += _("Alt") + wxT("+");
         if ( flags & wxACCEL_CTRL )
-            text += wxT("Ctrl-");
+            text += _("Ctrl")+ wxT("+");
         if ( flags & wxACCEL_SHIFT )
-            text += wxT("Shift-");
+            text += _("Shift")+ wxT("+");
 
         int code = accel->GetKeyCode();
         switch ( code )
@@ -351,9 +355,189 @@
             case WXK_F12:
                 text << wxT('F') << code - WXK_F1 + 1;
                 break;
-
-            // if there are any other keys wxGetAccelFromString() may return,
-            // we should process them here
+            case WXK_DELETE:
+                text << _("DELETE");
+                break;
+            case WXK_BACK:
+                text << _("BACK");
+                break;
+            case WXK_INSERT:
+                text << _("INSERT");
+                break;
+            case WXK_RETURN:
+                text << _("RETURN");
+                break;
+            case WXK_PRIOR:
+                text << _("PGUP");
+                break;
+            case WXK_NEXT:
+                text << _("PGDN");
+                break;
+            case WXK_LEFT:
+                text << _("LEFT");
+                break;
+            case WXK_RIGHT:
+                text << _("RIGHT");
+                break;
+            case WXK_UP:
+                text << _("UP");
+                break;
+            case WXK_DOWN:
+                text << _("DOWN");
+                break;
+            case WXK_HOME:
+                text << _("HOME");
+                break;
+            case WXK_END:
+                text << _("END");
+                break;
+            case WXK_SPACE:
+                text << _("SPACE");
+                break;
+            case WXK_TAB:
+                text << _("TAB");
+                break;
+            case WXK_ESCAPE:
+                text << _("ESCAPE");
+                break;
+            case WXK_CANCEL:
+                text << _("CANCEL");
+                break;
+            case WXK_CLEAR:
+                text << _("CLEAR");
+                break;
+            case WXK_MENU:
+                text << _("MENU");
+                break;
+            case WXK_PAUSE:
+                text << _("PAUSE");
+                break;
+            case WXK_CAPITAL:
+                text << _("CAPITAL");
+                break;
+            case WXK_SELECT:
+                text << _("SELECT");
+                break;
+            case WXK_PRINT:
+                text << _("PRINT");
+                break;
+            case WXK_EXECUTE:
+                text << _("EXECUTE");
+                break;
+            case WXK_SNAPSHOT:
+                text << _("SNAPSHOT");
+                break;
+            case WXK_HELP:
+                text << _("HELP");
+                break;
+            case WXK_ADD:
+                text << _("ADD");
+                break;
+            case WXK_SEPARATOR:
+                text << _("SEPARATOR");
+                break;
+            case WXK_SUBTRACT:
+                text << _("SUBTRACT");
+                break;
+            case WXK_DECIMAL:
+                text << _("DECIMAL");
+                break;
+            case WXK_DIVIDE:
+                text << _("DIVIDE");
+                break;
+            case WXK_NUMLOCK:
+                text << _("NUM_LOCK");
+                break;
+            case WXK_SCROLL:
+                text << _("SCROLL_LOCK");
+                break;
+            case WXK_PAGEUP:
+                text << _("PAGEUP");
+                break;
+            case WXK_PAGEDOWN:
+                text << _("PAGEDOWN");
+                break;
+            case WXK_NUMPAD_SPACE:
+                text << _("KP_SPACE");
+                break;
+            case WXK_NUMPAD_TAB:
+                text << _("KP_TAB");
+                break;
+            case WXK_NUMPAD_ENTER:
+                text << _("KP_ENTER");
+                break;
+            case WXK_NUMPAD_HOME:
+                text << _("KP_HOME");
+                break;
+            case WXK_NUMPAD_LEFT:
+                text << _("KP_LEFT");
+                break;
+            case WXK_NUMPAD_UP:
+                text << _("KP_UP");
+                break;
+            case WXK_NUMPAD_RIGHT:
+                text << _("KP_RIGHT");
+                break;
+            case WXK_NUMPAD_DOWN:
+                text << _("KP_DOWN");
+                break;
+            case WXK_NUMPAD_PRIOR:
+                text << _("KP_PRIOR");
+                break;
+            case WXK_NUMPAD_PAGEUP:
+                text << _("KP_PAGEUP");
+                break;
+            case WXK_NUMPAD_NEXT:
+                text << _("KP_NEXT");
+                break;
+            case WXK_NUMPAD_PAGEDOWN:
+                text << _("KP_PAGEDOWN");
+                break;
+            case WXK_NUMPAD_END:
+                text << _("KP_END");
+                break;
+            case WXK_NUMPAD_BEGIN:
+                text << _("KP_BEGIN");
+                break;
+            case WXK_NUMPAD_INSERT:
+                text << _("KP_INSERT");
+                break;
+            case WXK_NUMPAD_DELETE:
+                text << _("KP_DELETE");
+                break;
+            case WXK_NUMPAD_EQUAL:
+                text << _("KP_EQUAL");
+                break;
+            case WXK_NUMPAD_MULTIPLY:
+                text << _("KP_MULTIPLY");
+                break;
+            case WXK_NUMPAD_ADD:
+                text << _("KP_ADD");
+                break;
+            case WXK_NUMPAD_SEPARATOR:
+                text << _("KP_SEPARATOR");
+                break;
+            case WXK_NUMPAD_SUBTRACT:
+                text << _("KP_SUBTRACT");
+                break;
+            case WXK_NUMPAD_DECIMAL:
+                text << _("KP_DECIMAL");
+                break;
+            case WXK_NUMPAD_DIVIDE:
+                text << _("KP_DIVIDE");
+                break;
+            case WXK_WINDOWS_LEFT:
+                text << _("WINDOWS_LEFT");
+                break;
+            case WXK_WINDOWS_RIGHT:
+                text << _("WINDOWS_RIGHT");
+                break;
+            case WXK_WINDOWS_MENU:
+                text << _("WINDOWS_MENU");
+                break;
+            case WXK_COMMAND:
+                text << _("COMMAND");
+                break;
 
             default:
                 if ( wxIsalnum(code) )

 	  	 
