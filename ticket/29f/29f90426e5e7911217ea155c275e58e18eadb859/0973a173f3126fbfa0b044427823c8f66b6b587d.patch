Index: include/wx/generic/spinctlg.h
===================================================================
--- include/wx/generic/spinctlg.h	(revision 67411)
+++ include/wx/generic/spinctlg.h	(working copy)
@@ -101,6 +101,8 @@
     virtual bool AcceptsFocus() const { return false; }
     virtual void SetFocus();
 
+    virtual void DoEnable(bool WXUNUSED(enable));
+
     friend class wxSpinCtrlTextGeneric;
 
 protected:
@@ -145,6 +147,8 @@
     wxTextCtrl   *m_textCtrl;
     wxSpinButton *m_spinButton;
 
+    bool m_create_done;
+
 private:
     // common part of all ctors
     void Init();
Index: src/generic/spinctlg.cpp
===================================================================
--- src/generic/spinctlg.cpp	(revision 67411)
+++ src/generic/spinctlg.cpp	(working copy)
@@ -176,6 +176,8 @@
                                    double increment,
                                    const wxString& name)
 {
+    m_create_done = false;
+
     // don't use borders for this control itself, it wouldn't look good with
     // the text control borders (but we might want to use style border bits to
     // select the text control style)
@@ -227,6 +229,7 @@
     // that it overwrites the text control
     wxControl::Show(false);
     m_isShown = true;
+	m_create_done = true;
     return true;
 }
 
@@ -299,6 +302,20 @@
     return true;
 }
 
+void wxSpinCtrlGenericBase::DoEnable(bool enable)
+{
+    // Do nothing here unless this is called from the Create() method. 
+    // This method is overridden so that enabling the parent control does
+    // NOT inadvertently enable this control (the sub-controls will still
+    // be enabled, as they should). Otherwise it could interfere with siblings
+    // event handling (see e.g. #12045 for the kind of problems which arise 
+    // otherwise).
+    if(!m_create_done)
+    {
+        wxSpinCtrlBase::DoEnable(enable);
+    }
+}
+
 bool wxSpinCtrlGenericBase::Show(bool show)
 {
     if ( !wxControl::Show(show) )
