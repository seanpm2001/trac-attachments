diff --git a/tests/Makefile.in b/tests/Makefile.in
index 08d8a5a..51de3c7 100644
--- a/tests/Makefile.in
+++ b/tests/Makefile.in
@@ -390,7 +390,7 @@ COND_wxUSE_REGEX_builtin___LIB_REGEX_p = \
 
 ### Targets: ###
 
-all: test$(EXEEXT) $(__test_drawing___depname) $(__test_drawingplugin___depname) $(__test_gui___depname) $(__test_gui_bundle___depname) data data-images fr
+all: test$(EXEEXT) $(__test_drawing___depname) $(__test_drawingplugin___depname) $(__test_gui___depname) $(__test_gui_bundle___depname) data data-images fr ja
 
 install: 
 
@@ -495,6 +495,18 @@ fr:
 	esac; \
 	done
 
+ja: 
+	@mkdir -p ./intl/ja
+	@for f in internat.po internat.mo; do \
+	if test ! -f ./intl/ja/$$f -a ! -d ./intl/ja/$$f ; \
+	then x=yep ; \
+	else x=`find $(srcdir)/intl/ja/$$f -newer ./intl/ja/$$f -print` ; \
+	fi; \
+	case "$$x" in ?*) \
+	cp -pRf $(srcdir)/intl/ja/$$f ./intl/ja ;; \
+	esac; \
+	done
+
 test_test.o: $(srcdir)/test.cpp $(TEST_ODEP)
 	$(CXXC) -c -o $@ $(TEST_CXXFLAGS) $(srcdir)/test.cpp
 
@@ -1071,4 +1083,4 @@ failtest_weakref:
 # Include dependency info, if present:
 @IF_GNU_MAKE@-include ./.deps/*.d
 
-.PHONY: all install uninstall clean distclean test_gui_bundle data data-images fr
+.PHONY: all install uninstall clean distclean test_gui_bundle data data-images fr ja
diff --git a/tests/makefile.bcc b/tests/makefile.bcc
index 44b25a6..1c9a274 100644
--- a/tests/makefile.bcc
+++ b/tests/makefile.bcc
@@ -461,7 +461,7 @@ $(OBJS):
 
 ### Targets: ###
 
-all: $(OBJS)\test.exe $(__test_drawing___depname) $(__test_drawingplugin___depname) $(__test_gui___depname) data data-images fr
+all: $(OBJS)\test.exe $(__test_drawing___depname) $(__test_drawingplugin___depname) $(__test_gui___depname) data data-images fr ja
 
 clean: 
 	-if exist $(OBJS)\*.obj del $(OBJS)\*.obj
@@ -530,6 +530,10 @@ fr:
 	if not exist $(OBJS)\intl\fr mkdir $(OBJS)\intl\fr
 	for %f in (internat.po internat.mo) do if not exist $(OBJS)\intl\fr\%f copy .\intl\fr\%f $(OBJS)\intl\fr
 
+ja: 
+	if not exist $(OBJS)\intl\ja mkdir $(OBJS)\intl\ja
+	for %f in (internat.po internat.mo) do if not exist $(OBJS)\intl\ja\%f copy .\intl\ja\%f $(OBJS)\intl\ja
+
 $(OBJS)\test_dummy.obj: .\dummy.cpp
 	$(CXX) -q -c -P -o$@ $(TEST_CXXFLAGS) -H .\dummy.cpp
 
diff --git a/tests/makefile.gcc b/tests/makefile.gcc
index 5bdd6cc..d196e9b 100644
--- a/tests/makefile.gcc
+++ b/tests/makefile.gcc
@@ -464,7 +464,7 @@ $(OBJS):
 
 ### Targets: ###
 
-all: $(OBJS)\test.exe $(__test_drawing___depname) $(__test_drawingplugin___depname) $(__test_gui___depname) data data-images fr
+all: $(OBJS)\test.exe $(__test_drawing___depname) $(__test_drawingplugin___depname) $(__test_gui___depname) data data-images fr ja
 
 clean: 
 	-if exist $(OBJS)\*.o del $(OBJS)\*.o
@@ -506,6 +506,10 @@ fr:
 	if not exist $(OBJS)\intl\fr mkdir $(OBJS)\intl\fr
 	for %%f in (internat.po internat.mo) do if not exist $(OBJS)\intl\fr\%%f copy .\intl\fr\%%f $(OBJS)\intl\fr
 
+ja: 
+	if not exist $(OBJS)\intl\ja mkdir $(OBJS)\intl\ja
+	for %%f in (internat.po internat.mo) do if not exist $(OBJS)\intl\ja\%%f copy .\intl\ja\%%f $(OBJS)\intl\ja
+
 $(OBJS)\test_dummy.o: ./dummy.cpp
 	$(CXX) -c -o $@ $(TEST_CXXFLAGS) $(CPPDEPS) $<
 
@@ -1052,7 +1056,7 @@ $(OBJS)\test_gui_setsize.o: ./window/setsize.cpp
 $(OBJS)\test_gui_xrctest.o: ./xml/xrctest.cpp
 	$(CXX) -c -o $@ $(TEST_GUI_CXXFLAGS) $(CPPDEPS) $<
 
-.PHONY: all clean data data-images fr
+.PHONY: all clean data data-images fr ja
 
 
 SHELL := $(COMSPEC)
diff --git a/tests/makefile.vc b/tests/makefile.vc
index b7b1304..1845bea 100644
--- a/tests/makefile.vc
+++ b/tests/makefile.vc
@@ -650,7 +650,7 @@ $(OBJS):
 
 ### Targets: ###
 
-all: $(OBJS)\test.exe $(__test_drawing___depname) $(__test_drawingplugin___depname) $(__test_gui___depname) data data-images fr
+all: $(OBJS)\test.exe $(__test_drawing___depname) $(__test_drawingplugin___depname) $(__test_gui___depname) data data-images fr ja
 
 clean: 
 	-if exist $(OBJS)\*.obj del $(OBJS)\*.obj
@@ -707,6 +707,10 @@ fr:
 	if not exist $(OBJS)\intl\fr mkdir $(OBJS)\intl\fr
 	for %f in (internat.po internat.mo) do if not exist $(OBJS)\intl\fr\%f copy .\intl\fr\%f $(OBJS)\intl\fr
 
+ja: 
+	if not exist $(OBJS)\intl\ja mkdir $(OBJS)\intl\ja
+	for %f in (internat.po internat.mo) do if not exist $(OBJS)\intl\ja\%f copy .\intl\ja\%f $(OBJS)\intl\ja
+
 $(OBJS)\test_dummy.obj: .\dummy.cpp
 	$(CXX) /c /nologo /TP /Fo$@ $(TEST_CXXFLAGS) /Yctestprec.h .\dummy.cpp
 
diff --git a/tests/menu/menu.cpp b/tests/menu/menu.cpp
index efc2f0a..a7c76d6 100644
--- a/tests/menu/menu.cpp
+++ b/tests/menu/menu.cpp
@@ -86,6 +86,7 @@ private:
         CPPUNIT_TEST( EnableTop );
         CPPUNIT_TEST( Count );
         CPPUNIT_TEST( Labels );
+        CPPUNIT_TEST( i18n );
         CPPUNIT_TEST( RadioItems );
         CPPUNIT_TEST( RemoveAdd );
         CPPUNIT_TEST( ChangeBitmap );
@@ -99,6 +100,7 @@ private:
     void EnableTop();
     void Count();
     void Labels();
+    void i18n();
     void RadioItems();
     void RemoveAdd();
     void ChangeBitmap();
@@ -334,6 +336,36 @@ void MenuTestCase::Labels()
     CPPUNIT_ASSERT_EQUAL( "Foo", wxMenuItem::GetLabelText("&Foo\tCtrl-F") );
 }
 
+void MenuTestCase::i18n()
+{
+    // Check that appended mnemonics are correctly stripped;
+    // see http://trac.wxwidgets.org/ticket/16736
+    wxLocale::AddCatalogLookupPathPrefix("./intl");
+    CPPUNIT_ASSERT( wxLocale::IsAvailable(wxLANGUAGE_JAPANESE) );
+
+    wxLocale locale(wxLANGUAGE_JAPANESE, wxLOCALE_DONT_LOAD_DEFAULT);
+    locale.AddCatalog("internat");
+
+    // Check the translation is being used:
+    CPPUNIT_ASSERT( wxString("&File") != wxString(_("&File")) );
+
+    wxString filemenu = m_frame->GetMenuBar()->GetMenuLabel(0);
+    CPPUNIT_ASSERT_EQUAL
+        ( wxStripMenuCodes(_("&File")),
+          wxStripMenuCodes(wxGetTranslation(filemenu)) 
+        );
+
+    // Test strings that have shortcuts. Duplicate non-mnemonic translations 
+    // exist for both "Edit" and "View", for ease of comparison
+    CPPUNIT_ASSERT_EQUAL( _("Edit"), wxStripMenuCodes(_("E&dit\tCtrl+E")) );
+
+    //"Vie&w" also has a space before the (&W)
+    CPPUNIT_ASSERT_EQUAL( _("View"), wxStripMenuCodes(_("Vie&w\tCtrl+V")) );
+
+    // Test a 'normal' mnemonic too: the translation is "Preten&d"
+    CPPUNIT_ASSERT_EQUAL( "Pretend", wxStripMenuCodes(_("B&ogus")) );
+}
+
 void MenuTestCase::RadioItems()
 {
     wxMenuBar * const bar = m_frame->GetMenuBar();
diff --git a/tests/test.bkl b/tests/test.bkl
index d2b71a4..acce6a8 100644
--- a/tests/test.bkl
+++ b/tests/test.bkl
@@ -327,6 +327,7 @@
     </template>
 
     <wx-data id="fr" template="catalog"/>
+    <wx-data id="ja" template="catalog"/>
 
 
     <fragment format="autoconf">
