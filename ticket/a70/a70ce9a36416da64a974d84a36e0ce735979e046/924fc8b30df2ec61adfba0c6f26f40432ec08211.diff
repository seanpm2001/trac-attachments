Index: include/wx/window.h
===================================================================
--- include/wx/window.h	(revision 974)
+++ include/wx/window.h	(working copy)
@@ -913,7 +913,7 @@
         // windows having captured the mouse and after calling ReleaseMouse()
         // the mouse is not released but returns to the window which had had
         // captured it previously (if any)
-    void CaptureMouse();
+    void CaptureMouse(bool addPrevToStack = true);
     void ReleaseMouse();
 
         // get the window which currently captures the mouse or NULL


Index: src/common/wincmn.cpp
===================================================================
--- src/common/wincmn.cpp	(revision 974)
+++ src/common/wincmn.cpp	(working copy)
@@ -2738,7 +2738,7 @@
 wxWindow *wxWindowBase::ms_winCaptureCurrent = NULL;
 bool wxWindowBase::ms_winCaptureChanging = false;
 
-void wxWindowBase::CaptureMouse()
+void wxWindowBase::CaptureMouse(bool addPrevToStack)
 {
     wxLogTrace(_T("mousecapture"), _T("CaptureMouse(%p)"), static_cast<void*>(this));
 
@@ -2747,15 +2747,18 @@
     ms_winCaptureChanging = true;
 
     wxWindow *winOld = GetCapture();
-    if ( winOld )
+    if (winOld)
     {
         ((wxWindowBase*) winOld)->DoReleaseMouse();
 
-        // save it on stack
-        wxWindowNext *item = new wxWindowNext;
-        item->win = winOld;
-        item->next = ms_winCaptureNext;
-        ms_winCaptureNext = item;
+		if (addPrevToStack)
+		{
+			// save it on stack
+			wxWindowNext *item = new wxWindowNext;
+			item->win = winOld;
+			item->next = ms_winCaptureNext;
+			ms_winCaptureNext = item;
+		}
     }
     //else: no mouse capture to save
 
