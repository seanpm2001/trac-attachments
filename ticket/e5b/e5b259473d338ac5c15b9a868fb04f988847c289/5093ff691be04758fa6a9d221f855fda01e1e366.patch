Index: include/wx/animate.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/animate.h,v
retrieving revision 1.6
diff -b -u -2 -r1.6 animate.h
--- include/wx/animate.h	2006/10/21 13:51:31	1.6
+++ include/wx/animate.h	2006/11/03 21:05:06
@@ -83,5 +83,5 @@
     virtual bool IsPlaying() const = 0;
 
-    virtual void SetInactiveBitmap(const wxBitmap &bmp);
+    virtual void SetInactiveBitmap(const wxBitmap &bmp) = 0;
     wxBitmap GetInactiveBitmap() const
         { return m_bmpStatic; }
Index: src/common/animatecmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/animatecmn.cpp,v
retrieving revision 1.2
diff -b -u -2 -r1.2 animatecmn.cpp
--- src/common/animatecmn.cpp	2006/10/21 13:51:34	1.2
+++ src/common/animatecmn.cpp	2006/11/03 20:58:02
@@ -31,10 +31,4 @@
 IMPLEMENT_ABSTRACT_CLASS(wxAnimationCtrlBase, wxControl)
 
-void wxAnimationCtrlBase::SetInactiveBitmap(const wxBitmap &bmp)
-{ 
-    m_bmpStatic = bmp; 
-    m_bmpStatic.UnShare();
-}
-
 
 #endif      // wxUSE_ANIMATIONCTRL
Index: src/generic/animateg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/animateg.cpp,v
retrieving revision 1.11
diff -b -u -2 -r1.11 animateg.cpp
--- src/generic/animateg.cpp	2006/10/21 13:51:36	1.11
+++ src/generic/animateg.cpp	2006/11/03 21:21:49
@@ -344,5 +344,5 @@
 void wxAnimationCtrl::SetInactiveBitmap(const wxBitmap &bmp)
 {
-    wxAnimationCtrlBase::SetInactiveBitmap(bmp);
+    m_bmpStatic = bmp;
 
     // if not playing, update the backing store now
@@ -631,8 +631,19 @@
     // NB: resizing an animation control may take a lot of time
     //     for big animations as the backing store must be
-    //     extended and rebuilt. Try to avoid it!!
+    //     extended and rebuilt. Try to avoid it (e.g. using
+    //     a null proportion value for your wxAnimationCtrls
+    //     when using them inside sizers)!!
     if (m_animation.IsOk())
+    {
+        // be careful to change the backing store *only* if we are 
+        // playing the animation as otherwise we may be displaying 
+        // the inactive bitmap and overwriting the backing store 
+        // with the last played frame is wrong in this case
+        if (IsPlaying())
+        {
         if (!RebuildBackingStoreUpToFrame(m_currentFrame))
             Stop();     // in case we are playing
+        }
+    }
 }

Index: src/gtk/animate.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/animate.cpp,v
retrieving revision 1.9
diff -b -u -2 -r1.9 animate.cpp
--- src/gtk/animate.cpp	2006/10/31 08:49:52	1.9
+++ src/gtk/animate.cpp	2006/11/03 21:05:34
@@ -321,5 +321,5 @@
 void wxAnimationCtrl::SetInactiveBitmap(const wxBitmap &bmp)
 {
-    wxAnimationCtrlBase::SetInactiveBitmap(bmp);
+    m_bmpStatic = bmp;
 
     // update the pixbuf associated with m_widget now...
Index: docs/latex/wx/animatctrl.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/animatctrl.tex,v
retrieving revision 1.4
diff -b -u -2 -r1.4 animatctrl.tex
--- docs/latex/wx/animatctrl.tex	2006/10/21 13:51:28	1.4
+++ docs/latex/wx/animatctrl.tex	2006/11/03 21:26:06
@@ -18,4 +18,7 @@
 (e.g. a "throbber").
 
+Note that you should avoid to resize dynamically the wxAnimationCtrl as it may
+require some time to rebuild internally its cache for the last displayed frame.
+
 It is only available if \texttt{wxUSE\_ANIMATIONCTRL} is set to $1$ (the default).
 

 	  	 
