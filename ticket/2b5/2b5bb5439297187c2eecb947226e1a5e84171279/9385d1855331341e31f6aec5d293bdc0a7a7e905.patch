diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig/src/generic/grid.cpp wxWindows/src/generic/grid.cpp
--- wxWindows.orig/src/generic/grid.cpp	Fri Nov 22 15:03:54 2002
+++ wxWindows/src/generic/grid.cpp	Mon Nov 25 11:19:33 2002
@@ -1483,11 +1483,19 @@
     dc.SetBackgroundMode( wxSOLID );
 
-    if ( isSelected )
+// DJC (MAPTEK) grey out fields if the grid is disabled
+    if( grid.IsEnabled() )
     {
-        dc.SetBrush( wxBrush(grid.GetSelectionBackground(), wxSOLID) );
-    }
+      if ( isSelected )
+      {
+          dc.SetBrush( wxBrush(grid.GetSelectionBackground(), wxSOLID) );
+      }
+      else
+      {
+          dc.SetBrush( wxBrush(attr.GetBackgroundColour(), wxSOLID) );
+      }
+    }  
     else
     {
-        dc.SetBrush( wxBrush(attr.GetBackgroundColour(), wxSOLID) );
+      dc.SetBrush(wxBrush(wxSystemSettings::GetSystemColour(wxSYS_COLOUR_BTNFACE), wxSOLID));
     }
 
@@ -1509,13 +1517,22 @@
     // TODO some special colours for attr.IsReadOnly() case?
 
-    if ( isSelected )
+    // DJC (MAPTEK) different coloured text when the grid is disabled
+    if( grid.IsEnabled() )
     {
-        dc.SetTextBackground( grid.GetSelectionBackground() );
-        dc.SetTextForeground( grid.GetSelectionForeground() );
+      if ( isSelected )
+      {
+          dc.SetTextBackground( grid.GetSelectionBackground() );
+          dc.SetTextForeground( grid.GetSelectionForeground() );
+      }
+      else
+      {
+          dc.SetTextBackground( attr.GetBackgroundColour() );
+          dc.SetTextForeground( attr.GetTextColour() );
+      }
     }
     else
     {
-        dc.SetTextBackground( attr.GetBackgroundColour() );
-        dc.SetTextForeground( attr.GetTextColour() );
+      dc.SetTextBackground(wxSystemSettings::GetSystemColour(wxSYS_COLOUR_BTNFACE));
+      dc.SetTextForeground(wxSystemSettings::GetSystemColour(wxSYS_COLOUR_GRAYTEXT));
     }
 
@@ -3538,9 +3555,11 @@
 END_EVENT_TABLE()
 
+// DJC (MAPTEK) 19-Jun-2001 use wxCLIP_CHILDREN as well
 wxGridWindow::wxGridWindow( wxGrid *parent,
                             wxGridRowLabelWindow *rowLblWin,
                             wxGridColLabelWindow *colLblWin,
                             wxWindowID id, const wxPoint &pos, const wxSize &size )
-        : wxWindow( parent, id, pos, size, wxWANTS_CHARS, wxT("grid window") )
+        : wxWindow( parent, id, pos, size, wxWANTS_CHARS|wxCLIP_CHILDREN, wxT("grid window") )
+
 {
     m_owner = parent;
@@ -3986,4 +4005,27 @@
     int h = m_numRows > 0 ? GetRowBottom(m_numRows - 1) + m_extraHeight + 1 : 0;
 
+// DJC (MAPTEK) 19-Jun-2001 account for editor since it could possibly
+// be larger than the cell
+    // take into account editor if shown
+    if( IsCellEditControlShown() )
+    {
+      int w2, h2;
+      int r = m_currentCellCoords.GetRow();
+      int c = m_currentCellCoords.GetCol();
+      int x = GetColLeft(c);
+      int y = GetRowTop(r);
+
+      // how big is the editor
+      wxGridCellAttr* attr = GetCellAttr(r, c);
+      wxGridCellEditor* editor = attr->GetEditor(this, r, c);
+      editor->GetControl()->GetSize(&w2, &h2);
+      w2 += x;
+      h2 += y;
+      if( w2 > w ) w = w2;
+      if( h2 > h ) h = h2;
+      editor->DecRef();
+      attr->DecRef();
+    }
+
     // preserve (more or less) the previous position
     int x, y;
@@ -5189,52 +5231,31 @@
                 MakeCellVisible( coords );
 
-                // if this is the second click on this cell then start
-                // the edit control
-                if ( m_waitForSlowClick &&
-                     (coords == m_currentCellCoords) &&
-                     CanEnableCellControl())
-                {
-                    EnableCellEditControl();
-
-                    wxGridCellAttr* attr = GetCellAttr(m_currentCellCoords);
-                    wxGridCellEditor *editor = attr->GetEditor(this,
-                                                               coords.GetRow(),
-                                                               coords.GetCol());
-                    editor->StartingClick();
-                    editor->DecRef();
-                    attr->DecRef();
-
-                    m_waitForSlowClick = FALSE;
-                }
-                else
+                if ( event.ControlDown() )
                 {
-                    if ( event.ControlDown() )
+                    if ( m_selection )
                     {
-                        if ( m_selection )
-                        {
-                            m_selection->ToggleCellSelection( coords.GetRow(),
-                                                              coords.GetCol(),
-                                                              event.ControlDown(),
-                                                              event.ShiftDown(),
-                                                              event.AltDown(),
-                                                              event.MetaDown() );
-                        }
-                        m_selectingTopLeft = wxGridNoCellCoords;
-                        m_selectingBottomRight = wxGridNoCellCoords;
-                        m_selectingKeyboard = coords;
+                        m_selection->ToggleCellSelection( coords.GetRow(),
+                                                          coords.GetCol(),
+                                                          event.ControlDown(),
+                                                          event.ShiftDown(),
+                                                          event.AltDown(),
+                                                          event.MetaDown() );
                     }
-                    else
+                    m_selectingTopLeft = wxGridNoCellCoords;
+                    m_selectingBottomRight = wxGridNoCellCoords;
+                    m_selectingKeyboard = coords;
+                }
+                else
+                {
+                    m_waitForSlowClick = m_currentCellCoords == coords && coords != wxGridNoCellCoords;
+                    SetCurrentCell( coords );
+                    if ( m_selection )
                     {
-                        SetCurrentCell( coords );
-                        if ( m_selection )
+                        if ( m_selection->GetSelectionMode() !=
+                                wxGrid::wxGridSelectCells )
                         {
-                            if ( m_selection->GetSelectionMode() !=
-                                    wxGrid::wxGridSelectCells )
-                            {
-                                HighlightBlock( coords, coords );
-                            }
+                            HighlightBlock( coords, coords );
                         }
                     }
-                    m_waitForSlowClick = TRUE;
                 }
             }
@@ -5288,9 +5309,24 @@
                 m_selectingTopLeft = wxGridNoCellCoords;
                 m_selectingBottomRight = wxGridNoCellCoords;
+
+                // Show the edit control, if it has been hidden for
+                // drag-shrinking.
+                ShowCellEditControl();
             }
+            else
+            {
+              if( m_waitForSlowClick && CanEnableCellControl())
+              {
+                EnableCellEditControl();
+
+                wxGridCellAttr* attr = GetCellAttr(coords);
+                wxGridCellEditor *editor = attr->GetEditor(this, coords.GetRow(), coords.GetCol());
+                editor->StartingClick();
+                editor->DecRef();
+                attr->DecRef();
 
-            // Show the edit control, if it has been hidden for
-            // drag-shrinking.
-            ShowCellEditControl();
+                m_waitForSlowClick = FALSE;
+              }
+            }
         }
         else if ( m_cursorMode == WXGRID_CURSOR_RESIZE_ROW )
@@ -6107,13 +6143,12 @@
                          || editor->IsAcceptedKey(event) )
                     {
+                        // DJC MAPTEK - ensure cell is visble
+                        MakeCellVisible(row, col);
                         EnableCellEditControl();
-
-                        // the editor could be not shown for a variety of
-                        // reasons (i.e. blocked by the app or whatever), so
-                        // check if it really was created
-                        if ( m_cellEditCtrlEnabled )
-                        {
-                            editor->StartingKey(event);
-                        }
+                        // DJC MAPTEK - a problem can arise if the cell is not
+                        // completely visible (even after calling MakeCellVisible
+                        // the control is not created and calling StartingKey will
+                        // crash the app
+                        if( editor->IsCreated() && m_cellEditCtrlEnabled ) editor->StartingKey(event);
                     }
                     else
@@ -6625,5 +6660,7 @@
 
         // Now draw the rectangle
-        dc.SetPen(wxPen(m_cellHighlightColour, penWidth, wxSOLID));
+        // use the cellHighlightColour if the cell is inside a selection, this
+        // will ensure the cell is always visible.
+        dc.SetPen(wxPen(IsInSelection(row,col)?m_selectionForeground:m_cellHighlightColour, penWidth, wxSOLID));
         dc.SetBrush(*wxTRANSPARENT_BRUSH);
         dc.DrawRectangle(rect);
@@ -6959,51 +6996,55 @@
     long textWidth, textHeight;
     long lineWidth, lineHeight;
+    int nLines;
 
     dc.SetClippingRegion( rect );
-    if ( lines.GetCount() )
-    {
-        GetTextBoxSize( dc, lines, &textWidth, &textHeight );
-        dc.GetTextExtent( lines[0], &lineWidth, &lineHeight );
 
-        float x, y;
-        switch ( horizAlign )
-        {
-            case wxALIGN_RIGHT:
-                x = rect.x + (rect.width - textWidth - 1);
-                break;
+    nLines = lines.GetCount();
+    if( nLines > 0 )
+    {
+      int l;
+      float x, y;
+      GetTextBoxSize(dc, lines, &textWidth, &textHeight);
+      switch( vertAlign )
+      {
+        case wxALIGN_BOTTOM:
+          y = rect.y + (rect.height - textHeight - 1);
+          break;
+
+        case wxALIGN_CENTRE:
+          y = rect.y + ((rect.height - textHeight)/2);
+          break;
 
-            case wxALIGN_CENTRE:
-                x = rect.x + ((rect.width - textWidth)/2);
-                break;
+        case wxALIGN_TOP:
+        default:
+          y = rect.y + 1;
+          break;
+      }
 
-            case wxALIGN_LEFT:
-            default:
-                x = rect.x + 1;
-                break;
-        }
+      // Align each line of a multi-line label
+      for( l = 0; l < nLines; l++ )
+      {
+        dc.GetTextExtent(lines[l], &lineWidth, &lineHeight);
 
-        switch ( vertAlign )
+        switch( horizAlign )
         {
-            case wxALIGN_BOTTOM:
-                y = rect.y + (rect.height - textHeight - 1);
-                break;
+          case wxALIGN_RIGHT:
+            x = rect.x + (rect.width - lineWidth - 1);
+            break;
 
-            case wxALIGN_CENTRE:
-                y = rect.y + ((rect.height - textHeight)/2);
-                break;
+          case wxALIGN_CENTRE:
+            x = rect.x + ((rect.width - lineWidth)/2);
+            break;
 
-            case wxALIGN_TOP:
-            default:
-                y = rect.y + 1;
-                break;
+          case wxALIGN_LEFT:
+          default:
+            x = rect.x + 1;
+            break;
         }
 
-        for ( size_t i = 0;  i < lines.GetCount();  i++ )
-        {
-            dc.DrawText( lines[i], (int)x, (int)y );
-            y += lineHeight;
-        }
+        dc.DrawText( lines[l], (int)x, (int)y );
+        y += lineHeight;
+      }
     }
-
     dc.DestroyClippingRegion();
 }
@@ -7263,5 +7304,4 @@
             }
 
-            editor->Show( TRUE, attr );
 
             // resize editor to overflow into righthand cells if allowed
@@ -7297,5 +7337,11 @@
 		    rect.SetRight(client_right-1);
             }
+
+// DJC (MAPTEK) 19-Feb-2001 do set size prior to showing the control
             editor->SetSize( rect );
+            editor->Show( TRUE, attr );
+// DJC (MAPTEK) 19-Jun-2001 recalc dimensions in case we need to
+// expand the scrolled window to account for editor
+            CalcDimensions();
 
             editor->BeginEdit(row, col, this);
@@ -7620,15 +7666,9 @@
         else if ( right > cw )
         {
-            int w = r.GetWidth();
-            xpos = r.GetLeft();
-            for ( i = col-1;  i >= 0;  i-- )
-            {
-                int colWidth = GetColWidth(i);
-                if ( w + colWidth > cw )
-                    break;
-
-                w += colWidth;
-                xpos -= colWidth;
-            }
+            // DJC MAPTEK
+            // position the view so that the cell is on the right
+            int x0, y0;
+            CalcUnscrolledPosition(0, 0, &x0, &y0);
+            xpos = x0 + (right - cw);
 
             // see comment for ypos above
@@ -9078,4 +9118,15 @@
     }
 
+    // DJC MAPTEK if < 0 calc new width from label
+    if( width < 0 )
+    {
+      long w, h;
+      wxArrayString lines;
+      wxClientDC dc(m_colLabelWin);
+      dc.SetFont(GetLabelFont());
+      StringToLines(GetColLabelValue(col), lines);
+      GetTextBoxSize(dc, lines, &w, &h);
+      width = w + 6;
+    }
     int w = wxMax( 0, width );
     int diff = w - m_colWidths[col];

 	  	 
