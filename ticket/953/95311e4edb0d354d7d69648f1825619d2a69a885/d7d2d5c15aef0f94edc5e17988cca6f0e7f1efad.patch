Index: docs/latex/wx/size.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/size.tex,v
retrieving revision 1.18
diff -u -r1.18 size.tex
--- docs/latex/wx/size.tex	2006/11/01 12:21:29	1.18
+++ docs/latex/wx/size.tex	2006/12/25 20:22:38
@@ -198,9 +198,9 @@
 Assignment operator.
 
 
-\func{bool}{operator $==$}{\param{const wxSize\& }{sz}}
+\constfunc{bool}{operator $==$}{\param{const wxSize\& }{sz}}
 
-\func{bool}{operator $!=$}{\param{const wxSize\& }{sz}}
+\constfunc{bool}{operator $!=$}{\param{const wxSize\& }{sz}}
 
 \func{wxSize}{operator $+$}{\param{const wxSize\& }{sz}}
 
Index: docs/latex/wx/treectrl.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/treectrl.tex,v
retrieving revision 1.73
diff -u -r1.73 treectrl.tex
--- docs/latex/wx/treectrl.tex	2006/11/09 11:20:30	1.73
+++ docs/latex/wx/treectrl.tex	2006/12/25 21:22:46
@@ -13,7 +13,7 @@
 
 A tree control presents information as a hierarchy, with items that may be expanded
 to show further items. Items in a tree control are referenced by wxTreeItemId handles,
-which may be tested for validity by calling wxTreeItemId::IsOk.
+which may be tested for validity by calling \helpref{wxTreeItemId::IsOk}{wxtreeitemidisok}.
 
 To intercept events from a tree control, use the event table macros described in \helpref{wxTreeEvent}{wxtreeevent}.
 
@@ -238,6 +238,13 @@
 Collapses the given item.
 
 
+\membersection{wxTreeCtrl::CollapseAll}\label{wxtreectrlcollapseall}
+
+\func{void}{CollapseAll}{}
+
+Collapses the root item.
+
+
 \membersection{wxTreeCtrl::CollapseAndReset}\label{wxtreectrlcollapseandreset}
 
 \func{void}{CollapseAndReset}{\param{const wxTreeItemId\&}{ item}}
@@ -333,7 +340,7 @@
 
 \membersection{wxTreeCtrl::ExpandAll}\label{wxtreectrlexpandall}
 
-\func{void}{Expand}{\void}
+\func{void}{ExpandAll}{\void}
 
 Expands all items in the tree.
 
@@ -728,6 +735,13 @@
 See also: \helpref{SetItemBold}{wxtreectrlsetitembold}
 
 
+\membersection{wxTreeCtrl::IsEmpty}\label{wxtreectrlisempty}
+
+\constfunc{bool}{IsEmpty}{}
+
+Returns {\tt true} if the control is empty (no root item).
+
+
 \membersection{wxTreeCtrl::IsExpanded}\label{wxtreectrlisexpanded}
 
 \constfunc{bool}{IsExpanded}{\param{const wxTreeItemId\&}{ item}}
@@ -1022,4 +1036,60 @@
 \func{void}{UnselectItem}{\param{const wxTreeItemId\& }{item}}
 
 Unselects the given item. This works in multiselection controls only.
+
+
+
+
+
+%% the wxTreeItemId opaque class
+
+
+\section{\class{wxTreeItemId}}\label{wxtreeitemid}
+
+An opaque reference to a tree item.
+
+
+\wxheading{Derived from}
+
+None
+
+\wxheading{Include files}
+
+<wx/treebase.h>
+
+\wxheading{See also}
+
+\helpref{wxTreeItemCtrl}{wxtreeitemctrl}, \helpref{wxTreeItemData}{wxtreeitemdata},\\
+\helpref{wxTreeCtrl overview}{wxtreectrloverview}
+
+
+\latexignore{\rtfignore{\wxheading{Members}}}
+
+\membersection{wxTreeItemId::wxTreeItemId}\label{wxtreeitemidconstr}
+
+\func{}{wxTreeItemId}{\void}
+
+Default constructor. wxTreemItemIds are not meant to be constructed explicitely by
+the user; they are returned by the \helpref{wxTreeItemCtrl}{wxtreeitemctrl} functions instead.
+
+
+\membersection{wxTreeItemId::IsOk}\label{wxtreeitemidisok}
+
+\constfunc{bool}{IsOk}{}
+
+Returns \true if this instance is referencing a valid tree item.
+
+
+\membersection{Operators}\label{wxtreeitemidoperators}
+
+\constfunc{void}{operator $!$}{}
+
+Synonim for \helpref{IsOk}{wxtreeitemidisok}
+
+
+\constfunc{bool}{operator $==$}{\param{const wxTreeItemId\& }{item}}
+
+\constfunc{bool}{operator $!=$}{\param{const wxTreeItemId\& }{item}}
+
+Operators for comparison between \helpref{wxTreeItemId}{wxtreeitemid} objects.
 
Index: include/wx/treectrl.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/treectrl.h,v
retrieving revision 1.44
diff -u -r1.44 treectrl.h
--- include/wx/treectrl.h	2006/07/02 01:22:37	1.44
+++ include/wx/treectrl.h	2006/12/25 21:06:18
@@ -172,7 +172,10 @@
     virtual bool IsSelected(const wxTreeItemId& item) const = 0;
         // is item text in bold font?
     virtual bool IsBold(const wxTreeItemId& item) const = 0;
+        // is the control empty?
+    virtual bool IsEmpty() const;
 
+
     // number of children
     // ------------------
 
@@ -293,6 +296,10 @@
     void ExpandAll();
         // collapse the item without removing its children
     virtual void Collapse(const wxTreeItemId& item) = 0;
+        // collapse the item and all its childs and thats childs
+    void CollapseAllChildren(const wxTreeItemId& item);
+        // collapse all items
+    void CollapseAll();
         // collapse the item and remove all children
     virtual void CollapseAndReset(const wxTreeItemId& item) = 0;
         // toggles the current state
Index: src/common/treebase.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/treebase.cpp,v
retrieving revision 1.34
diff -u -r1.34 treebase.cpp
--- src/common/treebase.cpp	2006/11/27 16:36:09	1.34
+++ src/common/treebase.cpp	2006/12/25 21:08:29
@@ -183,6 +183,9 @@
 
 void wxTreeCtrlBase::ExpandAll()
 {
+    if (IsEmpty())
+        return;
+
     ExpandAllChildren(GetRootItem());
 }
 
@@ -200,6 +203,34 @@
     {
         ExpandAllChildren(idCurr);
     }
+}
+
+void wxTreeCtrlBase::CollapseAll()
+{
+    if (IsEmpty())
+        return;
+
+    CollapseAllChildren(GetRootItem());
+}
+
+void wxTreeCtrlBase::CollapseAllChildren(const wxTreeItemId& item)
+{
+    // first (recursively) expand all the children
+    wxTreeItemIdValue cookie;
+    for ( wxTreeItemId idCurr = GetFirstChild(item, cookie);
+          idCurr.IsOk();
+          idCurr = GetNextChild(item, cookie) )
+    {
+        CollapseAllChildren(idCurr);
+    }
+
+    // then collapse this element too
+    Collapse(item);
+}
+
+bool wxTreeCtrlBase::IsEmpty() const
+{
+    return !GetRootItem().IsOk();
 }
 
 #endif // wxUSE_TREECTRL

 	  	 
