Index: include/wx/aboutdlg.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/aboutdlg.h,v
retrieving revision 1.4
diff -u2 -r1.4 include/wx/aboutdlg.h
--- include/wx/aboutdlg.h
+++ include/wx/aboutdlg.h
@@ -129,4 +129,8 @@
     wxString GetDescriptionAndCredits() const;
 
+    // Returns all array elements in a single comma-separated and
+    // newline-terminated string
+    static wxString AllAsString(const wxArrayString& a);
+
 private:
     wxString m_name,
Index: include/wx/generic/aboutdlgg.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/generic/aboutdlgg.h,v
retrieving revision 1.3
diff -u2 -r1.3 include/wx/generic/aboutdlgg.h
--- include/wx/generic/aboutdlgg.h
+++ include/wx/generic/aboutdlgg.h
@@ -65,4 +65,8 @@
     void AddText(const wxString& text);
 
+    // add a wxCollapsiblePane containing the given text.
+    // The wxStaticText is wrapped at maxWidth if it's != -1.
+    void AddCollapsiblePane(const wxString &title, const wxString &text, int maxWidth = -1);
+
 private:
     // common part of all ctors
Index: src/generic/aboutdlgg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/aboutdlgg.cpp,v
retrieving revision 1.13
diff -u2 -r1.13 src/generic/aboutdlgg.cpp
--- src/generic/aboutdlgg.cpp
+++ src/generic/aboutdlgg.cpp
@@ -47,10 +47,9 @@
 // ----------------------------------------------------------------------------
 
-// helper function: returns all array elements in a single comma-separated and
-// newline-terminated string
-static wxString AllAsString(const wxArrayString& a)
+wxString wxAboutDialogInfo::AllAsString(const wxArrayString& a)
 {
     wxString s;
     const size_t count = a.size();
+    s.Alloc(count*16);
     for ( size_t n = 0; n < count; n++ )
     {
@@ -135,20 +134,19 @@
 
 #if wxUSE_COLLPANE
-    // add licence
-    if ( info.HasLicence() )
-    {
-        wxCollapsiblePane *
-            licensepnl = new wxCollapsiblePane(this, wxID_ANY, wxT("License"));
+    const int maxWidth = 400;
 
-        new wxStaticText(licensepnl->GetPane(), wxID_ANY, info.GetLicence(),
-                         wxDefaultPosition, wxDefaultSize,
-                         wxALIGN_CENTRE);
+    if ( info.HasLicence() )
+        AddCollapsiblePane(wxT("License"), info.GetLicence(), maxWidth);
+    if ( info.HasDevelopers() )
+        AddCollapsiblePane(wxT("Developers"), info.AllAsString(info.GetDevelopers()), maxWidth);
+    if ( info.HasDocWriters() )
+        AddCollapsiblePane(wxT("Documentation writers"), info.AllAsString(info.GetDocWriters()), maxWidth);
+    if ( info.HasArtists() )
+        AddCollapsiblePane(wxT("Artists"), info.AllAsString(info.GetArtists()), maxWidth);
+    if ( info.HasTranslators() )
+        AddCollapsiblePane(wxT("Translators"), info.AllAsString(info.GetTranslators()), maxWidth);
 
-        m_sizerText->Add(licensepnl, wxSizerFlags(1).Expand().Border(wxBOTTOM));
-    }
 #endif // wxUSE_COLLPANE
 
-    // TODO: add credits (developers, artists, doc writers, translators)
-
     DoAddCustomControls();
 
@@ -200,4 +198,19 @@
 }
 
+void wxGenericAboutDialog::AddCollapsiblePane(const wxString &title, const wxString &text, int maxWidth)
+{
+    wxCollapsiblePane *pane = new wxCollapsiblePane(this, wxID_ANY, title);
+    wxStaticText *txt = new wxStaticText(pane->GetPane(), wxID_ANY, text,
+                                         wxDefaultPosition, wxDefaultSize,
+                                         wxALIGN_CENTRE);
+
+    // do not go beyond maxWidth pixels
+    if (maxWidth != -1)
+        txt->Wrap(maxWidth);
+
+    // NB: all the wxCollapsiblePanes must be added with a null proportion value
+    m_sizerText->Add(pane, wxSizerFlags(0).Expand().Border(wxBOTTOM));
+}
+
 // ----------------------------------------------------------------------------
 // public functions

 	  	 
