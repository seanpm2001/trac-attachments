--- event.cpp.orig	2021-04-12 15:23:58.000000000 -0700
+++ event.cpp	2021-05-19 16:23:31.000000000 -0700
@@ -80,6 +80,24 @@
     wxDECLARE_EVENT_TABLE();
 };
 
+
+// Define a custom button used to test wxWindow::WarpPointer
+class MyEvtWarpButton : public wxButton
+{
+public:
+    static long BUTTON_ID;
+
+    MyEvtWarpButton(wxWindow *parent, const wxString& label)
+        : wxButton(parent, BUTTON_ID, label)
+    {
+    }
+
+private:
+};
+
+long MyEvtWarpButton::BUTTON_ID = wxNewId();
+
+
 // Define a custom button used to highlight the events handling order
 class MyEvtTestButton : public wxButton
 {
@@ -115,6 +133,8 @@
 
 long MyEvtTestButton::BUTTON_ID = wxNewId();
 
+
+
 // Define a new frame type: this is going to be our main frame
 class MyFrame : public wxFrame
 {
@@ -137,6 +157,11 @@
 
     void OnUpdateUIPop(wxUpdateUIEvent& event);
 
+
+    // regular event handlers used to test wxWindow::WarpPointer
+    void OnClickWarp(wxCommandEvent& event);
+
+
     // regular event handlers used to highlight the events handling order
     void OnClickDynamicHandlerFrame(wxCommandEvent& event);
     void OnClickDynamicHandlerButton(wxCommandEvent& event);
@@ -179,6 +204,9 @@
     // the button to whose event we connect dynamically
     wxButton *m_btnDynamic;
 
+    // the button used to test wxWindow::WarpPointer
+    MyEvtWarpButton *m_warpBtn;
+
     // the button used to highlight the event handlers execution order
     MyEvtTestButton *m_testBtn;
 
@@ -422,6 +450,17 @@
     sizer->Add(m_btnDynamic, centreY);
 
     mainSizer->Add(sizer, 1, wxEXPAND);
+
+
+
+    m_warpBtn = new MyEvtWarpButton(panel, "Test wxWindow::WarpPointer");
+	m_warpBtn->Bind(wxEVT_BUTTON, &MyFrame::OnClickWarp, this);
+
+    mainSizer->Add(new wxStaticLine(panel), 0, wxEXPAND);
+    mainSizer->Add(m_warpBtn);
+
+
+
     mainSizer->Add(new wxStaticLine(panel), 0, wxEXPAND);
     mainSizer->Add(new wxStaticLine(panel), 0, wxEXPAND);
 
@@ -471,6 +510,16 @@
                  wxOK | wxICON_INFORMATION, this);
 }
 
+
+void MyFrame::OnClickWarp(wxCommandEvent& event)
+{
+//    wxMessageBox("warp test", "test", wxOK | wxICON_INFORMATION, this);
+	WarpPointer ( 25, 25 );
+
+    event.Skip();
+}
+
+
 void MyFrame::OnClickStaticHandlerFrame(wxCommandEvent& event)
 {
     wxLogMessage("Step 6, 4 in \"How Events are Processed\":\n"
