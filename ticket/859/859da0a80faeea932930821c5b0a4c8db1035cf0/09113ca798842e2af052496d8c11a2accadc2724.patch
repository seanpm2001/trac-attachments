diff -ru -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxMSW-2006-12-14/include/wx/msw/apptbase.h wxMSW-patched/include/wx/msw/apptbase.h
--- wxMSW-2006-12-14/include/wx/msw/apptbase.h	2006-12-14 04:54:00.000000000 -0300
+++ wxMSW-patched/include/wx/msw/apptbase.h	2006-12-15 12:02:18.593750000 -0300
@@ -40,6 +40,9 @@
     // process a message while waiting for a(nother) thread, should return
     // false if and only if we have to exit the application
     virtual bool DoMessageFromThreadWait() = 0;
+
+	// wait for the handle to be signaled
+    virtual DWORD WaitForThread(HANDLE hThread) = 0;
 };
 
 #endif // _WX_MSW_APPTBASE_H_
diff -ru -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxMSW-2006-12-14/include/wx/msw/apptrait.h wxMSW-patched/include/wx/msw/apptrait.h
--- wxMSW-2006-12-14/include/wx/msw/apptrait.h	2006-12-14 04:54:00.000000000 -0300
+++ wxMSW-patched/include/wx/msw/apptrait.h	2006-12-15 12:02:24.421875000 -0300
@@ -24,6 +24,7 @@
     virtual void AfterChildWaitLoop(void *data);
 
     virtual bool DoMessageFromThreadWait();
+    virtual DWORD WaitForThread(HANDLE hThread);
 };
 
 #if wxUSE_GUI
@@ -37,6 +38,7 @@
 
     virtual bool DoMessageFromThreadWait();
     virtual wxPortId GetToolkitVersion(int *majVer, int *minVer) const;
+    virtual DWORD WaitForThread(HANDLE hThread);
 };
 
 #endif // wxUSE_GUI
S'olo en wxMSW-patched/src/msw: .thread.cpp.swp
diff -ru -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxMSW-2006-12-14/src/msw/app.cpp wxMSW-patched/src/msw/app.cpp
--- wxMSW-2006-12-14/src/msw/app.cpp	2006-12-14 04:54:00.000000000 -0300
+++ wxMSW-patched/src/msw/app.cpp	2006-12-15 12:01:53.890625000 -0300
@@ -225,6 +225,18 @@
     return evtLoop->Dispatch();
 }
 
+DWORD wxGUIAppTraits::WaitForThread(HANDLE hThread)
+{
+    return ::MsgWaitForMultipleObjects
+                 (
+                   1,              // number of objects to wait for
+                   &hThread,     // the objects
+                   false,          // don't wait for all objects
+                   INFINITE,       // no timeout
+                   QS_ALLINPUT|QS_ALLPOSTMESSAGE   // return as soon as there are any events
+                 );
+}
+
 wxPortId wxGUIAppTraits::GetToolkitVersion(int *majVer, int *minVer) const
 {
     OSVERSIONINFO info;
diff -ru -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxMSW-2006-12-14/src/msw/basemsw.cpp wxMSW-patched/src/msw/basemsw.cpp
--- wxMSW-2006-12-14/src/msw/basemsw.cpp	2006-12-14 04:54:00.000000000 -0300
+++ wxMSW-patched/src/msw/basemsw.cpp	2006-12-15 12:01:41.937500000 -0300
@@ -71,3 +71,8 @@
     return true;
 }
 
+DWORD wxConsoleAppTraits::WaitForThread(HANDLE hThread)
+{
+    return ::WaitForSingleObject(hThread, INFINITE);
+}
+
diff -ru -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxMSW-2006-12-14/src/msw/thread.cpp wxMSW-patched/src/msw/thread.cpp
--- wxMSW-2006-12-14/src/msw/thread.cpp	2006-12-14 04:54:00.000000000 -0300
+++ wxMSW-patched/src/msw/thread.cpp	2006-12-15 12:08:20.156250000 -0300
@@ -755,15 +755,16 @@
 #if !defined(QS_ALLPOSTMESSAGE)
 #define QS_ALLPOSTMESSAGE 0
 #endif
-
-        result = ::MsgWaitForMultipleObjects
-                 (
-                   1,              // number of objects to wait for
-                   &m_hThread,     // the objects
-                   false,          // don't wait for all objects
-                   INFINITE,       // no timeout
-                   QS_ALLINPUT|QS_ALLPOSTMESSAGE   // return as soon as there are any events
-                 );
+        wxAppTraits *traits = wxTheApp ? wxTheApp->GetTraits()
+                                                   : NULL;
+        if ( traits )
+        {
+            result = traits->WaitForThread(m_hThread);
+        }
+        else
+        {
+            //FIXME: What should be done here??
+        }
 
         switch ( result )
         {
@@ -788,9 +789,6 @@
                 //     the system might dead lock then
                 if ( wxThread::IsMain() )
                 {
-                    wxAppTraits *traits = wxTheApp ? wxTheApp->GetTraits()
-                                                   : NULL;
-
                     if ( traits && !traits->DoMessageFromThreadWait() )
                     {
                         // WM_QUIT received: kill the thread

 	  	 
