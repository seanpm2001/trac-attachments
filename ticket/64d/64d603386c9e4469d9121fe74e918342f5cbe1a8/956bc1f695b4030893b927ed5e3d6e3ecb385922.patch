diff --git a/samples/minimal/minimal.cpp b/samples/minimal/minimal.cpp
--- a/samples/minimal/minimal.cpp
+++ b/samples/minimal/minimal.cpp
@@ -67,6 +67,7 @@ public:
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    void OnPaint(wxPaintEvent &event);
 
 private:
     // any class wishing to process wxWidgets events must use this macro
@@ -99,6 +100,7 @@ enum
 wxBEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_PAINT (MyFrame::OnPaint)
 wxEND_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -126,7 +128,7 @@ bool MyApp::OnInit()
 
     // create the main application window
     MyFrame *frame = new MyFrame("Minimal wxWidgets App");
-
+    frame->SetClientSize(380,200);
     // and show it (the frames, unlike simple controls, are not shown when
     // created initially)
     frame->Show(true);
@@ -172,6 +174,24 @@ MyFrame::MyFrame(const wxString& title)
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+    wxCursor cursor1(wxCURSOR_IBEAM);
+    wxCursor cursor2(wxCURSOR_CROSS);
+    wxCursor cursor3(wxCURSOR_BULLSEYE);
+    wxCursor cursor4(wxCURSOR_ARROW);
+    wxIcon icon = wxICON(sample);
+
+    const int y = 130;
+    wxBitmap bmp1(cursor1);
+    new wxStaticBitmap(this, wxID_ANY, bmp1, wxPoint(10, y));
+    wxBitmap bmp2(cursor2);
+    new wxStaticBitmap(this, wxID_ANY, bmp2, wxPoint(60, y));
+    wxBitmap bmp3(cursor3);
+    new wxStaticBitmap(this, wxID_ANY, bmp3, wxPoint(110, y));
+    wxBitmap bmp4(cursor4);
+    new wxStaticBitmap(this, wxID_ANY, bmp4, wxPoint(160, y));
+    wxBitmap bmp5(icon);
+    new wxStaticBitmap(this, wxID_ANY, bmp5, wxPoint(210, y));
+    new wxStaticText(this, wxID_ANY, wxT("wxStaticBitmap"), wxPoint(260, y));
 }
 
 
@@ -198,3 +218,44 @@ void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
                  wxOK | wxICON_INFORMATION,
                  this);
 }
+
+void MyFrame::OnPaint(wxPaintEvent &WXUNUSED(event))
+{
+    wxPaintDC dc(this);
+    dc.SetBackground(wxBrush(wxColour(0, 127,127)));
+    dc.Clear();
+
+    wxCursor cursor1(wxCURSOR_IBEAM);
+    wxCursor cursor2(wxCURSOR_CROSS);
+    wxCursor cursor3(wxCURSOR_BULLSEYE);
+    wxCursor cursor4(wxCURSOR_ARROW);
+    wxIcon icon = wxICON(sample);
+
+    int y = 10;
+#ifdef __WXMSW__
+    HDC hDc = (HDC)dc.GetHDC();
+    ::DrawIconEx(hDc, 10, y, (HICON)cursor1.GetHandle(),
+                    0, 0, 0, NULL, DI_COMPAT|DI_DEFAULTSIZE|DI_NORMAL);
+    ::DrawIconEx(hDc, 60, y, (HICON)cursor2.GetHandle(),
+                    0, 0, 0, NULL, DI_COMPAT|DI_DEFAULTSIZE|DI_NORMAL);
+    ::DrawIconEx(hDc, 110, y, (HICON)cursor3.GetHandle(),
+                    0, 0, 0, NULL, DI_COMPAT|DI_DEFAULTSIZE|DI_NORMAL);
+    ::DrawIconEx(hDc, 160, y, (HICON)cursor4.GetHandle(),
+                    0, 0, 0, NULL, DI_COMPAT|DI_DEFAULTSIZE|DI_NORMAL);
+    ::DrawIconEx(hDc, 210, y, (HICON)icon.GetHandle(),
+                    0, 0, 0, NULL, DI_COMPAT|DI_DEFAULTSIZE|DI_NORMAL);
+    dc.DrawLabel(wxT("MSW native drawing"), wxRect(260, y, 50, 40));
+    y += 60;
+#endif
+    wxBitmap bmp1(cursor1);
+    dc.DrawBitmap(bmp1, wxPoint(10, y), true);
+    wxBitmap bmp2(cursor2);
+    dc.DrawBitmap(bmp2, wxPoint(60, y), true);
+    wxBitmap bmp3(cursor3);
+    dc.DrawBitmap(bmp3, wxPoint(110, y), true);
+    wxBitmap bmp4(cursor4);
+    dc.DrawBitmap(bmp4, wxPoint(160, y), true);
+    wxBitmap bmp5(icon);
+    dc.DrawBitmap(bmp5, wxPoint(210, y), true);
+    dc.DrawLabel(wxT("DrawBitmap"), wxRect(260, y, 50, 40));
+}
