Index: samples/mdi/mdi.cpp
===================================================================
--- samples/mdi/mdi.cpp	(revision 16899)
+++ samples/mdi/mdi.cpp	(working copy)
@@ -30,6 +30,7 @@
 #endif
 
 #include "wx/toolbar.h"
+#include "wx/listctrl.h"
 
 #if !defined(__WXMSW__)
     #include "../sample.xpm"
@@ -168,7 +169,7 @@
                  const long style)
        : wxMDIParentFrame(parent, id, title, pos, size, style)
 {
-    textWindow = new wxTextCtrl(this, wxID_ANY, _T("A help window"),
+    textWindow = new wxTextCtrl(this, wxID_ANY, _T("New window creates sequentially wxScrollWindow or Panel based child frames. Please try to resize both variants. Sizers inside wxPanel works correctly, but in wxScrolledWindow repaints and reposition is wrong.\nPress Ctrl-N to begin test"),
                                 wxDefaultPosition, wxDefaultSize,
                                 wxTE_MULTILINE | wxSUNKEN_BORDER);
 
@@ -186,6 +187,9 @@
     wxAcceleratorTable accel(3, entries);
     SetAcceleratorTable(accel);
 #endif // wxUSE_ACCEL
+
+	// bug reproduce better
+	Maximize(true);
 }
 
 void MyFrame::OnClose(wxCloseEvent& event)
@@ -218,14 +222,108 @@
                        _T("Usage: mdi.exe"), _T("About MDI Demo"));
 }
 
+void CreateControls( wxWindow *itemMDIChildFrame1, bool test )
+{    
+    wxBoxSizer* itemBoxSizer2 = new wxBoxSizer(wxVERTICAL);
+    itemMDIChildFrame1->SetSizer(itemBoxSizer2);
+
+	wxWindow* itemPanelOrScrolledWindow;
+	if( test )
+	{
+		itemPanelOrScrolledWindow = new wxScrolledWindow( itemMDIChildFrame1, wxID_STATIC, wxDefaultPosition, wxSize(100, 100), wxHSCROLL|wxVSCROLL );
+		static_cast<wxScrolledWindow*>(itemPanelOrScrolledWindow)->SetScrollbars(1, 1, 0, 0);
+	}
+	else
+		itemPanelOrScrolledWindow = new wxPanel( itemMDIChildFrame1, wxID_STATIC, wxDefaultPosition, wxSize(100, 100) );
+		
+    itemBoxSizer2->Add(itemPanelOrScrolledWindow, 1, wxGROW|wxALL, 5);
+	
+	
+    wxBoxSizer* itemBoxSizer4 = new wxBoxSizer(wxVERTICAL);
+    itemPanelOrScrolledWindow->SetSizer(itemBoxSizer4);
+
+    wxBoxSizer* itemBoxSizer5 = new wxBoxSizer(wxHORIZONTAL);
+    itemBoxSizer4->Add(itemBoxSizer5, 0, wxALIGN_RIGHT|wxALL, 5);
+    wxPanel* itemPanel6 = new wxPanel( itemPanelOrScrolledWindow, wxID_STATIC, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
+    itemBoxSizer5->Add(itemPanel6, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+    wxBoxSizer* itemBoxSizer7 = new wxBoxSizer(wxHORIZONTAL);
+    itemPanel6->SetSizer(itemBoxSizer7);
+
+    wxBoxSizer* itemBoxSizer8 = new wxBoxSizer(wxHORIZONTAL);
+    itemBoxSizer7->Add(itemBoxSizer8, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+    wxListCtrl* itemListCtrl9 = new wxListCtrl( itemPanel6, wxID_STATIC, wxDefaultPosition, wxSize(100, 100), wxLC_REPORT );
+    itemBoxSizer8->Add(itemListCtrl9, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+
+    wxBoxSizer* itemBoxSizer10 = new wxBoxSizer(wxHORIZONTAL);
+    itemBoxSizer7->Add(itemBoxSizer10, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+    wxButton* itemButton11 = new wxButton( itemPanel6, wxID_STATIC, _("Button"), wxDefaultPosition, wxDefaultSize, 0 );
+    itemBoxSizer10->Add(itemButton11, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+
+    wxStaticText* itemStaticText12 = new wxStaticText( itemPanel6, wxID_STATIC, _("Static text"), wxDefaultPosition, wxDefaultSize, 0 );
+    itemBoxSizer7->Add(itemStaticText12, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+
+    wxBoxSizer* itemBoxSizer13 = new wxBoxSizer(wxHORIZONTAL);
+    itemBoxSizer4->Add(itemBoxSizer13, 0, wxALIGN_CENTER_HORIZONTAL|wxALL, 5);
+    wxPanel* itemPanel14 = new wxPanel( itemPanelOrScrolledWindow, wxID_STATIC, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
+    itemBoxSizer13->Add(itemPanel14, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+    wxBoxSizer* itemBoxSizer15 = new wxBoxSizer(wxHORIZONTAL);
+    itemPanel14->SetSizer(itemBoxSizer15);
+
+    wxBoxSizer* itemBoxSizer16 = new wxBoxSizer(wxHORIZONTAL);
+    itemBoxSizer15->Add(itemBoxSizer16, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+    wxListCtrl* itemListCtrl17 = new wxListCtrl( itemPanel14, wxID_STATIC, wxDefaultPosition, wxSize(100, 100), wxLC_REPORT );
+    itemBoxSizer16->Add(itemListCtrl17, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+
+    wxBoxSizer* itemBoxSizer18 = new wxBoxSizer(wxHORIZONTAL);
+    itemBoxSizer15->Add(itemBoxSizer18, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+    wxButton* itemButton19 = new wxButton( itemPanel14, wxID_STATIC, _("Button"), wxDefaultPosition, wxDefaultSize, 0 );
+    itemBoxSizer18->Add(itemButton19, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+
+    wxStaticText* itemStaticText20 = new wxStaticText( itemPanel14, wxID_STATIC, _("Static text"), wxDefaultPosition, wxDefaultSize, 0 );
+    itemBoxSizer15->Add(itemStaticText20, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+
+    wxBoxSizer* itemBoxSizer21 = new wxBoxSizer(wxHORIZONTAL);
+    itemBoxSizer4->Add(itemBoxSizer21, 0, wxALIGN_LEFT|wxALL, 5);
+    wxPanel* itemPanel22 = new wxPanel( itemPanelOrScrolledWindow, wxID_STATIC, wxDefaultPosition, wxDefaultSize, wxSUNKEN_BORDER|wxTAB_TRAVERSAL );
+    itemBoxSizer21->Add(itemPanel22, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+    wxBoxSizer* itemBoxSizer23 = new wxBoxSizer(wxHORIZONTAL);
+    itemPanel22->SetSizer(itemBoxSizer23);
+
+    wxBoxSizer* itemBoxSizer24 = new wxBoxSizer(wxHORIZONTAL);
+    itemBoxSizer23->Add(itemBoxSizer24, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+    wxListCtrl* itemListCtrl25 = new wxListCtrl( itemPanel22, wxID_STATIC, wxDefaultPosition, wxSize(100, 100), wxLC_REPORT );
+    itemBoxSizer24->Add(itemListCtrl25, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+
+    wxBoxSizer* itemBoxSizer26 = new wxBoxSizer(wxHORIZONTAL);
+    itemBoxSizer23->Add(itemBoxSizer26, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+    wxButton* itemButton27 = new wxButton( itemPanel22, wxID_STATIC, _("Button"), wxDefaultPosition, wxDefaultSize, 0 );
+    itemBoxSizer26->Add(itemButton27, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+
+    wxStaticText* itemStaticText28 = new wxStaticText( itemPanel22, wxID_STATIC, _("Static text"), wxDefaultPosition, wxDefaultSize, 0 );
+    itemBoxSizer23->Add(itemStaticText28, 0, wxALIGN_CENTER_VERTICAL|wxALL, 5);
+
+    itemPanelOrScrolledWindow->FitInside();
+}
+
+
 void MyFrame::OnNewWindow(wxCommandEvent& WXUNUSED(event) )
 {
+	static bool is_panel = false;
+
     // Make another frame, containing a canvas
-    MyChild *subframe = new MyChild(frame, _T("Canvas Frame"));
+    MyChild *subframe = new MyChild(frame, _T("Child Frame"));
 
     wxString title;
-    title.Printf(_T("Canvas Frame %d"), ++gs_nFrames);
+	
+	if( is_panel )
+		title.Printf(_T("Sizers in Panel %d"), ++gs_nFrames);
+	else
+		title.Printf(_T("Sizers in ScrollWindow %d"), ++gs_nFrames);
 
+	CreateControls(subframe, !is_panel);
+
+	is_panel = !is_panel;
+		
     subframe->SetTitle(title);
 
     // Give it an icon
@@ -269,15 +367,6 @@
     subframe->SetStatusText(title);
 #endif // wxUSE_STATUSBAR
 
-    int width, height;
-    subframe->GetClientSize(&width, &height);
-    MyCanvas *canvas = new MyCanvas(subframe, wxPoint(0, 0), wxSize(width, height));
-    canvas->SetCursor(wxCursor(wxCURSOR_PENCIL));
-    subframe->canvas = canvas;
-
-    // Give it scrollbars
-    canvas->SetScrollbars(20, 20, 50, 50);
-
     subframe->Show(true);
 }
 
