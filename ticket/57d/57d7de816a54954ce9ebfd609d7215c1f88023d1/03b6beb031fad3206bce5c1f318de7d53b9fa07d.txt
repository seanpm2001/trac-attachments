Index: newbmpbtn.h
===================================================================
RCS file: /home/wxcvs/wxWindows/contrib/include/wx/fl/newbmpbtn.h,v
retrieving revision 1.3
diff -r1.3 newbmpbtn.h
73,74d72
<     bool      mPrevPressedState;
<     bool      mPrevInFocusState;
168a167,169
>         // Enables/disables button
>     virtual bool Enable(bool enable);
> 
175,176c176,183
<         // Responds to a mouse move event.
<     void OnMouseMove( wxMouseEvent& event );
---
>         // Responds to a left mouse button double click.
>     void OnLButtonDClick( wxMouseEvent& event );
> 
>         // Responds to mouse enter to window.
>     void OnMouseEnter( wxMouseEvent& event );
> 
>         // Responds to mouse leave from window.
>     void OnMouseLeave( wxMouseEvent& event );
Index: dyntbar.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/contrib/src/fl/dyntbar.cpp,v
retrieving revision 1.6
diff -r1.6 dyntbar.cpp
187a188,191
> #if wxUSE_TOOLTIPS
>     pBmpBtn->SetToolTip( helpString1 );
> #endif  // wxUSE_TOOLTIPS
> 
Index: newbmpbtn.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/contrib/src/fl/newbmpbtn.cpp,v
retrieving revision 1.5
diff -r1.5 newbmpbtn.cpp
207,209c207,211
<     EVT_LEFT_DOWN( wxNewBitmapButton::OnLButtonDown )
<     EVT_LEFT_UP  ( wxNewBitmapButton::OnLButtonUp   )
<     EVT_MOTION   ( wxNewBitmapButton::OnMouseMove   )
---
>     EVT_LEFT_DOWN   ( wxNewBitmapButton::OnLButtonDown   )
>     EVT_LEFT_UP     ( wxNewBitmapButton::OnLButtonUp     )
>     EVT_LEFT_DCLICK ( wxNewBitmapButton::OnLButtonDClick )
>     EVT_ENTER_WINDOW( wxNewBitmapButton::OnMouseEnter    )
>     EVT_LEAVE_WINDOW( wxNewBitmapButton::OnMouseLeave    )
248,249d249
<         mPrevPressedState( FALSE ),
<         mPrevInFocusState( FALSE ),
293,294d292
<         mPrevPressedState( FALSE ),
<         mPrevInFocusState( FALSE ),
501,550d498
< 
<     destDc.SetBrush( grayBrush );
<     destDc.SetPen( nullPen );
< 
<     destDc.DrawRectangle( 0,0, destDim.x+1, destDim.y+1 );
< 
<     if ( isPressed )
<     {
<         ++imgPos.x; ++imgPos.y;
<         ++txtPos.x; ++txtPos.y;
<     }
< 
<     if ( hasImage )
<     {
< 
<         destDc.Blit( imgPos.x, imgPos.y, 
<                  srcBmp->GetWidth()+1,
<                  srcBmp->GetHeight()+1,
<                  &srcDc, 0,0, wxCOPY,TRUE );
<     }
< 
<     if ( hasText )
<     {
<         wxWindow* pTopWnd = this;
< 
<         do
<         {
<             wxWindow* pParent = pTopWnd->GetParent();
< 
<             if ( pParent == 0 )
<                 break;
< 
<             pTopWnd = pParent;
<         } while (1);
< 
<         destDc.SetFont( wxSystemSettings::GetFont( wxSYS_DEFAULT_GUI_FONT) );
< 
<         if ( isEnabled )
<         {
<             destDc.SetTextForeground( wxSystemSettings::GetColour(wxSYS_COLOUR_BTNTEXT) );
<         }
<         else
<         {
<             destDc.SetTextForeground( wxSystemSettings::GetColour(wxSYS_COLOUR_3DSHADOW) );
<         }
<         destDc.SetTextBackground( wxSystemSettings::GetColour(wxSYS_COLOUR_BTNFACE) );
< 
<         destDc.DrawText( mLabelText, txtPos.x, txtPos.y );
<     }
< 
613a562,581
> bool wxNewBitmapButton::Enable(bool enable)
> {
>     if ( enable != m_isEnabled )
>     {
>         if ( mIsInFocus )
>         {
>             mIsInFocus = FALSE;
>         }
> 
>         if ( mIsPressed )
>         {
>             mIsPressed = FALSE;
>         }
> 
>         Refresh();
>     }
> 
>     return wxPanel::Enable( enable );
> }
> 
677d644
<     mPrevPressedState = FALSE;   
681,683d647
< 
<     if ( !mIsInFocus )
<             CaptureMouse();
693d656
<     mIsInFocus   = FALSE;
696c659,666
<     ReleaseMouse();
---
>     if ( IsInWindow( event.m_x, event.m_y ) ) 
>     {
>         // fire event, if mouse was released
>         // within the bounds of button
>         wxCommandEvent cmd( mFiredEventType, GetId() );
>         GetParent()->ProcessEvent( cmd );
>     }
> }
697a668,669
> void wxNewBitmapButton::OnLButtonDClick( wxMouseEvent& event )
> {
703a676,679
> 
>         mDragStarted = FALSE;
>         mIsPressed   = FALSE;
>         Refresh();
717c693
< void wxNewBitmapButton::OnMouseMove( wxMouseEvent& event )
---
> void wxNewBitmapButton::OnMouseEnter( wxMouseEvent& event )
719,724c695
<     mPrevPressedState=mIsPressed;
<     mPrevInFocusState=mIsInFocus;
<     if ( !mIsInFocus && IsInWindow( event.m_x, event.m_y ) )
<     {
<         if ( !mDragStarted )
<             CaptureMouse();
---
>     bool prevIsInFocus = mIsInFocus;
725a697,698
>     if ( !mIsInFocus )
>     {
728,729c701
<     else
<     if ( mIsInFocus && !IsInWindow( event.m_x, event.m_y ) )
---
>     if ( prevIsInFocus != mIsInFocus )
731,734c703
<         mIsInFocus = FALSE;
< 
<         if ( !mDragStarted )
<             ReleaseMouse();
---
>         Refresh();
735a705
> }
737c707,711
<     if ( mDragStarted )
---
> void wxNewBitmapButton::OnMouseLeave( wxMouseEvent& event )
> {
>     bool prevIsInFocus = mIsInFocus;
>     bool prevIsPressed = mIsPressed;
>     if ( mIsInFocus )
739,743c713,714
<         if ( IsInWindow( event.m_x, event.m_y ) )
< 
<             mIsPressed = TRUE;
<         else
<             mIsPressed = FALSE;
---
>         mIsInFocus = FALSE;
>         mIsPressed = FALSE;
745,747c716
< 
<     if ((mIsPressed != mPrevPressedState) ||
<         (mIsInFocus!=mPrevInFocusState))
---
>     if ( prevIsInFocus != mIsInFocus || prevIsPressed != mIsPressed )

 	  	 
