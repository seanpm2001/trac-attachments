Index: include/wx/event.h
===================================================================
--- include/wx/event.h	(revision 74076)
+++ include/wx/event.h	(working copy)
@@ -1747,9 +1747,13 @@
     wxMouseWheelAxis GetWheelAxis() const { return m_wheelAxis; }
 
     // Returns the configured number of lines (or whatever) to be scrolled per
-    // wheel action.  Defaults to one.
+    // wheel action. Defaults to three.
     int GetLinesPerAction() const { return m_linesPerAction; }
 
+    // Returns the configured number of columns (or whatever) to be scrolled per
+    // wheel action. Defaults to three.
+    int GetColumnsPerAction() const { return m_columnsPerAction; }
+
     // Is the system set to do page scrolling?
     bool IsPageScroll() const { return ((unsigned int)m_linesPerAction == UINT_MAX); }
 
@@ -1770,6 +1774,7 @@
     int           m_wheelRotation;
     int           m_wheelDelta;
     int           m_linesPerAction;
+    int           m_columnsPerAction;
 
 protected:
     void Assign(const wxMouseEvent& evt);
Index: include/wx/msw/missing.h
===================================================================
--- include/wx/msw/missing.h	(revision 74076)
+++ include/wx/msw/missing.h	(working copy)
@@ -86,6 +86,9 @@
     #ifndef SPI_GETWHEELSCROLLLINES
         #define SPI_GETWHEELSCROLLLINES 104
     #endif
+    #ifndef SPI_GETWHEELSCROLLCHARS
+        #define SPI_GETWHEELSCROLLCHARS 108
+    #endif
 #endif // wxUSE_MOUSEWHEEL
 
 // Needed by window.cpp
Index: interface/wx/event.h
===================================================================
--- interface/wx/event.h	(revision 74076)
+++ interface/wx/event.h	(working copy)
@@ -2730,6 +2730,12 @@
     int GetLinesPerAction() const;
 
     /**
+        Returns the configured number of columns (or whatever) to be scrolled per
+        wheel action. Defaults to three.
+    */
+    int GetColumnsPerAction() const;
+
+    /**
         Returns the logical mouse position in pixels (i.e.\ translated according to the
         translation set for the DC, which usually indicates that the window has been
         scrolled).
Index: src/common/event.cpp
===================================================================
--- src/common/event.cpp	(revision 74076)
+++ src/common/event.cpp	(working copy)
@@ -565,6 +565,7 @@
     m_wheelRotation = 0;
     m_wheelDelta = 0;
     m_linesPerAction = 0;
+    m_columnsPerAction = 0;
 }
 
 void wxMouseEvent::Assign(const wxMouseEvent& event)
@@ -587,6 +588,7 @@
     m_wheelRotation = event.m_wheelRotation;
     m_wheelDelta = event.m_wheelDelta;
     m_linesPerAction = event.m_linesPerAction;
+    m_columnsPerAction = event.m_columnsPerAction;
     m_wheelAxis = event.m_wheelAxis;
 }
 
Index: src/gtk/window.cpp
===================================================================
--- src/gtk/window.cpp	(revision 74076)
+++ src/gtk/window.cpp	(working copy)
@@ -1649,6 +1649,7 @@
 
     // FIXME: Get these values from GTK or GDK
     event.m_linesPerAction = 3;
+    event.m_columnsPerAction = 3;
     event.m_wheelDelta = 120;
 
     // Determine the scroll direction.
Index: src/gtk1/window.cpp
===================================================================
--- src/gtk1/window.cpp	(revision 74076)
+++ src/gtk1/window.cpp	(working copy)
@@ -1332,6 +1332,7 @@
     if (event.GetEventType() == wxEVT_MOUSEWHEEL)
     {
        event.m_linesPerAction = 3;
+       event.m_columnsPerAction = 3;
        event.m_wheelDelta = 120;
        if (((GdkEventButton*)gdk_event)->button == 4)
            event.m_wheelRotation = 120;
Index: src/msw/window.cpp
===================================================================
--- src/msw/window.cpp	(revision 74076)
+++ src/msw/window.cpp	(working copy)
@@ -5607,7 +5607,20 @@
         }
     }
 
+    static int s_columnsPerRotation = -1;
+    if ( s_columnsPerRotation == -1 )
+    {
+        if ( !::SystemParametersInfo(SPI_GETWHEELSCROLLCHARS, 0,
+                                     &s_columnsPerRotation, 0))
+        {
+            // this setting is not supported on Windows 2000/XP, so use the value of 1
+            // http://msdn.microsoft.com/en-us/library/ms997498.aspx
+            s_columnsPerRotation = 1;
+        }
+    }
+
     event.m_linesPerAction = s_linesPerRotation;
+    event.m_columnsPerAction = s_columnsPerRotation;
     return HandleWindowEvent(event);
 
 #else // !wxUSE_MOUSEWHEEL
Index: src/osx/carbon/nonownedwnd.cpp
===================================================================
--- src/osx/carbon/nonownedwnd.cpp	(revision 74076)
+++ src/osx/carbon/nonownedwnd.cpp	(working copy)
@@ -542,6 +542,7 @@
             wxevent.m_wheelRotation = delta;
             wxevent.m_wheelDelta = 1;
             wxevent.m_linesPerAction = 1;
+            wxevent.m_columnsPerAction = 3;
             if ( axis == kEventMouseWheelAxisX )
                 wxevent.m_wheelAxis = wxMOUSE_WHEEL_HORIZONTAL;
         }
Index: src/osx/cocoa/window.mm
===================================================================
--- src/osx/cocoa/window.mm	(revision 74076)
+++ src/osx/cocoa/window.mm	(working copy)
@@ -669,6 +669,7 @@
             
             wxevent.m_wheelDelta = 10;
             wxevent.m_linesPerAction = 1;
+            wxevent.m_columnsPerAction = 3;
                 
             if ( fabs(deltaX) > fabs(deltaY) )
             {
Index: src/x11/window.cpp
===================================================================
--- src/x11/window.cpp	(revision 74076)
+++ src/x11/window.cpp	(working copy)
@@ -1486,6 +1486,7 @@
                     button = xevent->xbutton.button;
 
                     wxevent.m_linesPerAction = 3;
+                    wxevent.m_columnsPerAction = 3;
                     wxevent.m_wheelDelta = WHEEL_DELTA;
 
                     // Button 4 means mousewheel up, 5 means down
