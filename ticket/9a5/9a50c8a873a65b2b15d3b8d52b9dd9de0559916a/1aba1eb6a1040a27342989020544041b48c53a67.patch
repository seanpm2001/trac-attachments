Index: docs/latex/wx/joystick.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/joystick.tex,v
retrieving revision 1.8
diff -u -r1.8 joystick.tex
--- docs/latex/wx/joystick.tex	2005/11/29 12:49:55	1.8
+++ docs/latex/wx/joystick.tex	2007/03/11 19:47:10
@@ -39,6 +39,14 @@
 A bitlist of wxJOY\_BUTTONn identifiers, where n is 1, 2, 3 or 4 
 is available for historical reasons.
 
+\constfunc{bool}{GetButtonState}{\param{unsigned}{ id}}
+
+Returns the state of the specified joystick button.
+
+\wxheading{Parameters}
+
+\docparam{id}{The button id to report, from 0 to \helpref{GetNumberButtons()}{wxjoystickgetnumberbuttons} - 1}
+
 \membersection{wxJoystick::GetManufacturerId}\label{wxjoystickgetmanufacturerid}
 
 \constfunc{int}{GetManufacturerId}{\void}
@@ -99,6 +107,14 @@
 \constfunc{wxPoint}{GetPosition}{\void}
 
 Returns the x, y position of the joystick.
+
+\constfunc{int}{GetPosition}{\param{unsigned}{ axis}}
+
+Returns the position of the specified joystick axis.
+
+\wxheading{Parameters}
+
+\docparam{axis}{The joystick axis to report, from 0 to \helpref{GetNumberAxes()}{wxjoystickgetnumberaxes} - 1.}
 
 \membersection{wxJoystick::GetPOVPosition}\label{wxjoystickgetpovposition}
 
Index: include/wx/mac/carbon/joystick.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/joystick.h,v
retrieving revision 1.6
diff -u -r1.6 joystick.h
--- include/wx/mac/carbon/joystick.h	2005/11/29 12:49:56	1.6
+++ include/wx/mac/carbon/joystick.h	2007/03/11 19:47:13
@@ -28,6 +28,8 @@
   ////////////////////////////////////////////////////////////////////////////
 
   wxPoint GetPosition() const;
+  int GetPosition(unsigned axis) const;
+  bool GetButtonState(unsigned button) const;
   int GetZPosition() const;
   int GetButtonState() const;
   int GetPOVPosition() const;
Index: include/wx/mac/classic/joystick.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/classic/joystick.h,v
retrieving revision 1.5
diff -u -r1.5 joystick.h
--- include/wx/mac/classic/joystick.h	2005/11/29 12:49:58	1.5
+++ include/wx/mac/classic/joystick.h	2007/03/11 19:47:14
@@ -28,6 +28,8 @@
   ////////////////////////////////////////////////////////////////////////////
 
   wxPoint GetPosition() const;
+  int GetPosition(unsigned axis) const;
+  bool GetButtonState(unsigned button) const;
   int GetZPosition() const;
   int GetButtonState() const;
   int GetPOVPosition() const;
Index: include/wx/mac/corefoundation/joystick.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/corefoundation/joystick.h,v
retrieving revision 1.3
diff -u -r1.3 joystick.h
--- include/wx/mac/corefoundation/joystick.h	2005/11/29 12:49:59	1.3
+++ include/wx/mac/corefoundation/joystick.h	2007/03/11 19:47:14
@@ -28,6 +28,8 @@
     ////////////////////////////////////////////////////////////////////////////
 
     wxPoint GetPosition() const;
+    int GetPosition(unsigned axis) const;
+    bool GetButtonState(unsigned button) const;
     int GetZPosition() const;
     int GetButtonState() const;
     int GetPOVPosition() const;
Index: include/wx/msw/joystick.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/joystick.h,v
retrieving revision 1.9
diff -u -r1.9 joystick.h
--- include/wx/msw/joystick.h	2005/09/23 12:50:12	1.9
+++ include/wx/msw/joystick.h	2007/03/11 19:47:14
@@ -28,6 +28,8 @@
   ////////////////////////////////////////////////////////////////////////////
 
   wxPoint GetPosition(void) const;
+  int GetPosition(unsigned axis) const;
+  bool GetButtonState(unsigned button) const;
   int GetZPosition(void) const;
   int GetButtonState(void) const;
   int GetPOVPosition(void) const;
Index: include/wx/palmos/joystick.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/joystick.h,v
retrieving revision 1.3
diff -u -r1.3 joystick.h
--- include/wx/palmos/joystick.h	2005/09/23 12:50:35	1.3
+++ include/wx/palmos/joystick.h	2007/03/11 19:47:15
@@ -28,6 +28,8 @@
   ////////////////////////////////////////////////////////////////////////////
 
   wxPoint GetPosition(void) const;
+  int GetPosition(unsigned axis) const;
+  bool GetButtonState(unsigned button) const;
   int GetZPosition(void) const;
   int GetButtonState(void) const;
   int GetPOVPosition(void) const;
Index: include/wx/unix/joystick.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/unix/joystick.h,v
retrieving revision 1.10
diff -u -r1.10 joystick.h
--- include/wx/unix/joystick.h	2006/10/17 14:44:49	1.10
+++ include/wx/unix/joystick.h	2007/03/11 19:47:15
@@ -32,6 +32,8 @@
     ////////////////////////////////////////////////////////////////////////////
 
     wxPoint GetPosition() const;
+    int GetPosition(unsigned axis) const;
+    bool GetButtonState(unsigned button) const;
     int GetZPosition() const;
     int GetButtonState() const;
     int GetPOVPosition() const;
Index: src/mac/carbon/joystick.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/joystick.cpp,v
retrieving revision 1.15
diff -u -r1.15 joystick.cpp
--- src/mac/carbon/joystick.cpp	2005/11/29 12:50:06	1.15
+++ src/mac/carbon/joystick.cpp	2007/03/11 19:47:29
@@ -28,6 +28,18 @@
     return wxPoint(0, 0);
 }
 
+int wxJoystick::GetPosition(unsigned axis) const
+{
+    // TODO
+    return 0;
+}
+
+bool wxJoystick::GetButtonState(unsigned id) const
+{
+    // TODO
+    return false;
+}
+
 int wxJoystick::GetZPosition() const
 {
     // TODO
Index: src/mac/classic/joystick.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/classic/joystick.cpp,v
retrieving revision 1.6
diff -u -r1.6 joystick.cpp
--- src/mac/classic/joystick.cpp	2006/01/26 19:53:01	1.6
+++ src/mac/classic/joystick.cpp	2007/03/11 19:47:30
@@ -26,6 +26,18 @@
     return wxPoint(0, 0);
 }
 
+int wxJoystick::GetPosition(unsigned axis) const
+{
+    // TODO
+    return 0;
+}
+
+bool wxJoystick::GetButtonState(unsigned id) const
+{
+    // TODO
+    return false;
+}
+
 int wxJoystick::GetZPosition() const
 {
     // TODO
Index: src/msw/joystick.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/joystick.cpp,v
retrieving revision 1.29
diff -u -r1.29 joystick.cpp
--- src/msw/joystick.cpp	2006/05/04 07:56:48	1.29
+++ src/msw/joystick.cpp	2007/03/11 19:47:30
@@ -86,6 +86,26 @@
         return wxPoint(0,0);
 }
 
+int wxJoystick::GetPosition(unsigned axis) const
+{
+    switch (axis) {
+    case 0:
+        return GetPosition().x;
+    case 1:
+        return GetPosition().y;
+    case 2:
+        return GetZPosition();
+    case 3:
+        return GetRudderPosition();
+    case 4:
+        return GetUPosition();
+    case 5:
+        return GetVPosition();
+    default:
+        return 0;
+    }
+}
+
 int wxJoystick::GetZPosition() const
 {
     JOYINFO joyInfo;
@@ -125,6 +145,14 @@
     }
     else
         return 0;
+}
+
+bool wxJoystick::GetButtonState(unsigned id) const
+{
+    if (id > sizeof(int) * 8)
+        return false;
+
+    return (GetButtonState() & (1 << id)) != 0;
 }
 
 /**
Index: src/palmos/joystick.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/palmos/joystick.cpp,v
retrieving revision 1.7
diff -u -r1.7 joystick.cpp
--- src/palmos/joystick.cpp	2006/05/04 07:56:57	1.7
+++ src/palmos/joystick.cpp	2007/03/11 19:47:31
@@ -35,6 +35,18 @@
     return wxPoint(0, 0);
 }
 
+int wxJoystick::GetPosition(unsigned axis) const
+{
+    // TODO
+    return 0;
+}
+
+bool wxJoystick::GetButtonState(unsigned id) const
+{
+    // TODO
+    return false;
+}
+
 int wxJoystick::GetZPosition() const
 {
     return 0;
Index: src/unix/joystick.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/joystick.cpp,v
retrieving revision 1.15
diff -u -r1.15 joystick.cpp
--- src/unix/joystick.cpp	2006/08/09 11:18:21	1.15
+++ src/unix/joystick.cpp	2007/03/11 19:47:32
@@ -44,7 +44,9 @@
     wxJS_AXIS_V,
 
     wxJS_AXIS_MAX = 32767,
-    wxJS_AXIS_MIN = -32767
+    wxJS_AXIS_MIN = -32767,
+    wxJS_MAX_AXES = 15,
+    wxJS_MAX_BUTTONS = sizeof(int) * 8
 };
 
 
@@ -62,13 +64,15 @@
     void* Entry();
 
 private:
+    void      SendEvent(wxEventType type, long ts, int change = 0);
     int       m_device;
     int       m_joystick;
     wxPoint   m_lastposition;
-    int       m_axe[15];
+    int       m_axe[wxJS_MAX_AXES];
     int       m_buttons;
     wxWindow* m_catchwin;
     int       m_polling;
+    int       m_threshold;
 
     friend class wxJoystick;
 };
@@ -80,12 +84,24 @@
       m_lastposition(wxDefaultPosition),
       m_buttons(0),
       m_catchwin(NULL),
-      m_polling(0)
+      m_polling(0),
+      m_threshold(0)
 {
-    for (int i=0; i<15; i++)
-        m_axe[i] = 0;
+    memset(m_axe, 0, sizeof(m_axe));
 }
 
+void wxJoystickThread::SendEvent(wxEventType type, long ts, int change)
+{
+    wxJoystickEvent jwx_event(type, m_buttons, m_joystick, change);
+
+    jwx_event.SetTimestamp(ts);
+    jwx_event.SetPosition(m_lastposition);
+    jwx_event.SetZPosition(m_axe[wxJS_AXIS_Z]);
+    jwx_event.SetEventObject(m_catchwin);
+
+    if (m_catchwin)
+        m_catchwin->AddPendingEvent(jwx_event);
+}
 
 void* wxJoystickThread::Entry()
 {
@@ -115,10 +131,11 @@
 
             //printf("time: %d\t value: %d\t type: %d\t number: %d\n",
             //       j_evt.time, j_evt.value, j_evt.type, j_evt.number);
-
-            wxJoystickEvent jwx_event;
 
-            if (j_evt.type & JS_EVENT_AXIS)
+            if ((j_evt.type & JS_EVENT_AXIS) && (j_evt.number < wxJS_MAX_AXES))
+            {
+                if (   (m_axe[j_evt.number] + m_threshold < j_evt.value)
+                    || (m_axe[j_evt.number] - m_threshold > j_evt.value) )
             {
                 m_axe[j_evt.number] = j_evt.value;
 
@@ -126,47 +143,36 @@
                 {
                     case wxJS_AXIS_X:
                         m_lastposition.x = j_evt.value;
-                        jwx_event.SetEventType(wxEVT_JOY_MOVE);
+                        SendEvent(wxEVT_JOY_MOVE, j_evt.time);
                         break;
                     case wxJS_AXIS_Y:
                         m_lastposition.y = j_evt.value;
-                        jwx_event.SetEventType(wxEVT_JOY_MOVE);
+                        SendEvent(wxEVT_JOY_MOVE, j_evt.time);
                         break;
                     case wxJS_AXIS_Z:
-                        jwx_event.SetEventType(wxEVT_JOY_ZMOVE);
+                        SendEvent(wxEVT_JOY_ZMOVE, j_evt.time);
                         break;
                     default:
-                        jwx_event.SetEventType(wxEVT_JOY_MOVE);
+                        SendEvent(wxEVT_JOY_MOVE, j_evt.time);
                         // TODO: There should be a way to indicate that the event
                         //       is for some other axes.
                         break;
                 }
             }
+            }
 
-            if (j_evt.type & JS_EVENT_BUTTON)
+            if ( (j_evt.type & JS_EVENT_BUTTON) && (j_evt.number < wxJS_MAX_BUTTONS) )
             {
                 if (j_evt.value)
                 {
                     m_buttons |= (1 << j_evt.number);
-                    jwx_event.SetEventType(wxEVT_JOY_BUTTON_DOWN);
+                    SendEvent(wxEVT_JOY_BUTTON_DOWN, j_evt.time, j_evt.number);
                 }
                 else
                 {
                     m_buttons &= ~(1 << j_evt.number);
-                    jwx_event.SetEventType(wxEVT_JOY_BUTTON_UP);
+                    SendEvent(wxEVT_JOY_BUTTON_UP, j_evt.time, j_evt.number);
                 }
-
-                jwx_event.SetButtonChange(j_evt.number);
-
-                jwx_event.SetTimestamp(j_evt.time);
-                jwx_event.SetJoystick(m_joystick);
-                jwx_event.SetButtonState(m_buttons);
-                jwx_event.SetPosition(m_lastposition);
-                jwx_event.SetZPosition(m_axe[3]);
-                jwx_event.SetEventObject(m_catchwin);
-
-                if (m_catchwin)
-                    m_catchwin->AddPendingEvent(jwx_event);
             }
         }
     }
@@ -225,6 +231,13 @@
     return pos;
 }
 
+int wxJoystick::GetPosition(unsigned axis) const
+{
+    if (m_thread && (axis < wxJS_MAX_AXES))
+        return m_thread->m_axe[axis];
+    return 0;
+}
+
 int wxJoystick::GetZPosition() const
 {
     if (m_thread)
@@ -239,6 +252,13 @@
     return 0;
 }
 
+bool wxJoystick::GetButtonState(unsigned id) const
+{
+    if (m_thread && (id < wxJS_MAX_BUTTONS))
+        return (m_thread->m_buttons & (1 << id)) != 0;
+    return false;
+}
+
 int wxJoystick::GetPOVPosition() const
 {
     return -1;
@@ -272,11 +292,15 @@
 
 int wxJoystick::GetMovementThreshold() const
 {
+    if (m_thread)
+        return m_thread->m_threshold;
     return 0;
 }
 
 void wxJoystick::SetMovementThreshold(int threshold)
 {
+    if (m_thread)
+        m_thread->m_threshold = threshold;
 }
 
 ////////////////////////////////////////////////////////////////////////////
@@ -370,6 +394,9 @@
     if (m_device != -1)
         ioctl(m_device, JSIOCGBUTTONS, &nb);
 
+    if (nb > wxJS_MAX_BUTTONS)
+        nb = wxJS_MAX_BUTTONS;
+
     return nb;
 }
 
@@ -380,17 +407,20 @@
     if (m_device != -1)
         ioctl(m_device, JSIOCGAXES, &nb);
 
+    if (nb > wxJS_MAX_AXES)
+        nb = wxJS_MAX_AXES;
+
     return nb;
 }
 
 int wxJoystick::GetMaxButtons() const
 {
-    return 15; // internal
+    return wxJS_MAX_BUTTONS; // internal
 }
 
 int wxJoystick::GetMaxAxes() const
 {
-    return 15; // internal
+    return wxJS_MAX_AXES; // internal
 }
 
 int wxJoystick::GetPollingMin() const

 	  	 
