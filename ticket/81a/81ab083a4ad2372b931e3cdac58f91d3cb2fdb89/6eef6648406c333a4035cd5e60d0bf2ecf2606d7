diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/spinbutt.cpp ./spinbutt.cpp
14,18d13
< #pragma implementation "spinbutbase.h"
< #endif
< 
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
37,42d31
< 
< wxSpinButton::wxSpinButton()
<    : wxSpinButtonBase()
< {
< }
< 
73,81d61
< int wxSpinButton::GetMin() const
< {
<    return m_min;
< }
< 
< int wxSpinButton::GetMax() const
< {
<    return m_max;
< }
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/statbmp.cpp ./statbmp.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
21d16
< #include "wx/dcclient.h"
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/statbox.cpp ./statbox.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/statbrma.cpp ./statbrma.cpp
20,22c20
< #include "wx/statusbr.h"
< #include "wx/dc.h"
< #include "wx/dcclient.h"
---
> #include "wx/mac/statusbr.h"
25c23
< IMPLEMENT_DYNAMIC_CLASS(wxStatusBarMac, wxWindow);
---
> IMPLEMENT_DYNAMIC_CLASS(wxStatusBarMac, wxStatusBarGeneric);
27c25
< BEGIN_EVENT_TABLE(wxStatusBarMac, wxWindow)
---
> BEGIN_EVENT_TABLE(wxStatusBarMac, wxStatusBarGeneric)
38c36
< // wxStatusBarMac class
---
> // wxStatusBarXX class
43c41
<    SetParent(NULL);
---
>     SetParent(NULL);
91,99c89,94
<    dc.SetPen(black);
<    dc.DrawLine(0, 0 , m_width , 0);
<    dc.SetPen(white);
<    dc.DrawLine(0, 1 , m_width , 1);
< 
<    int i;
<    if ( GetFont().Ok() )
<       dc.SetFont(GetFont());
<    dc.SetBackgroundMode(wxTRANSPARENT);
---
>     dc.SetPen(black);
>     dc.DrawLine(0, 0 ,
>            m_width , 0);
>    	dc.SetPen(white);
>     dc.DrawLine(0, 1 ,
>            m_width , 1);
101,102c96,103
<    for ( i = 0; i < m_nFields; i ++ )
<       DrawField(dc, i);
---
> 
>   int i;
>   if ( GetFont().Ok() )
>     dc.SetFont(GetFont());
>   dc.SetBackgroundMode(wxTRANSPARENT);
> 
>   for ( i = 0; i < m_nFields; i ++ )
>     DrawField(dc, i);
105c106
<       dc.SetFont(wxNullFont);
---
>         dc.SetFont(wxNullFont);
107c108
< }
---
> }
\ No newline at end of file
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/statline.cpp ./statline.cpp
23,26d22
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/statlmac.cpp ./statlmac.cpp
23,26d22
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/stattext.cpp ./stattext.cpp
18,19c18
< #include "wx/dc.h"
< #include "wx/dcclient.h"
---
> 
Only in .: statusbr.cpp
Only in /Users/mark/cvs/wxWindows/wxWindows/src/mac/: statusbr_stub.cpp
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/tabctrl.cpp ./tabctrl.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/taskbar.cpp ./taskbar.cpp
17,20d16
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/textctrl.cpp ./textctrl.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
24d19
< #ifndef __WXMAC_X__
27d21
< #endif
31,33d24
< #include "wx/app.h"
< #include "wx/button.h"
< #include "wx/panel.h"
43d33
< #ifndef __WXMAC_X__
45d34
< #endif
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/thread.cpp ./thread.cpp
21,24d20
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/timer.cpp ./timer.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
73c69
<    (void)wxTimerBase::Start(milliseconds, mode);
---
>     (void)wxTimerBase::Start(milliseconds, mode);
75,76c71,72
<    wxCHECK_MSG( m_milli > 0, FALSE, wxT("invalid value for timer timeour") );
<    wxCHECK_MSG( m_info.m_task.tmAddr == NULL , FALSE, wxT("attempting to restart a timer") );
---
>     wxCHECK_MSG( m_milli > 0, FALSE, wxT("invalid value for timer timeour") );
>     wxCHECK_MSG( m_info.m_task.tmAddr == NULL , FALSE, wxT("attempting to restart a timer") );
78,79c74
<    m_milli = milliseconds;
< #ifndef __WXMAC_X__
---
>     m_milli = milliseconds;
81,83d75
< #else
<    m_info.m_task.tmAddr = NewTimerUPP(MacTimerProc);
< #endif
86,89c78,80
<    InsXTime((QElemPtr) &m_info.m_task ) ;
<    PrimeTime( (QElemPtr) &m_info.m_task , m_milli ) ;
< 
<    return FALSE;
---
>     InsXTime((QElemPtr) &m_info.m_task ) ;
>     PrimeTime( (QElemPtr) &m_info.m_task , m_milli ) ;
>     return FALSE;
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/toolbar.cpp ./toolbar.cpp
15,18d14
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/tooltip.cpp ./tooltip.cpp
14,17d13
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
22d17
< #include "wx/app.h"
26d20
< #include "wx/timer.h"
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/uma.cpp ./uma.cpp
1,5d0
< 
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
8d2
< #include "wx/defs.h"
354,355d347
< 
< #ifndef __WXMAC_X__
359,361d350
< #else
<    c2pstrcpy(ptitle, title);
< #endif
364d352
< 
367d354
< #ifndef __WXMAC_X__
370,376d356
< #else
<    Str255 ptitle;
< 
<    // Possible HACK
<    GetWTitle(inWindowRef, ptitle);
<    p2cstrcpy(title, ptitle);
< #endif
940,945c920,925
< OSErr UMAGetControlData(ControlHandle 			inControl,
<                         ControlPartCode 		inPart,
<                         ResType 				inTagName,
<                         Size 					inBufferSize,
<                         Ptr 					outBuffer,
<                         Size *					outActualSize)
---
> OSErr UMAGetControlData					(ControlHandle 			inControl,
> 								 ControlPartCode 		inPart,
> 								 ResType 				inTagName,
> 								 Size 					inBufferSize,
> 								 Ptr 					outBuffer,
> 								 Size *					outActualSize)

 	  	 
