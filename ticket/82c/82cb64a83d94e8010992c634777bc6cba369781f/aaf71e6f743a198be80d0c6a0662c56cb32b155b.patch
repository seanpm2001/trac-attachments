Index: include/wx/window.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/window.h,v
retrieving revision 1.146
diff -b -u -2 -r1.146 window.h
--- include/wx/window.h	2004/06/09 15:37:25	1.146
+++ include/wx/window.h	2004/06/14 01:11:40
@@ -969,9 +969,13 @@
 //        void ProcessInternalIdle() ;
 
-        // get the handle of the window for the underlying window system: this
-        // is only used for wxWin itself or for user code which wants to call
-        // platform-specific APIs
+        // these are only used for wxWin itself or for user code which wants
+        // to interface with platform-specific APIs
+        // get the handle of the window for the underlying window system
     virtual WXWidget GetHandle() const = 0;
+        // associate the window with a new native handle
+    virtual void AssociateHandle(WXWidget handle) {}
+        // disassociate the current native handle from the window
+    virtual void DisassociateHandle() {}
 
 #if wxUSE_PALETTE
Index: include/wx/msw/window.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/msw/window.h,v
retrieving revision 1.115
diff -b -u -2 -r1.115 window.h
--- include/wx/msw/window.h	2004/05/23 20:51:29	1.115
+++ include/wx/msw/window.h	2004/06/14 01:11:42
@@ -174,4 +174,10 @@
     void UnsubclassWin();
 
+    // Window association (part of wxWindowBase)
+    void AssociateHandle(WXWidget handle) { SetHWND((WXHWND) handle);
+                                            SubclassWin((WXHWND) handle); }
+    void DisassociateHandle() { //UnsubclassWin() calls SetHEND(0) for us
+                                UnsubclassWin(); }
+
     WXFARPROC MSWGetOldWndProc() const { return m_oldWndProc; }
     void MSWSetOldWndProc(WXFARPROC proc) { m_oldWndProc = proc; }
@@ -179,6 +185,6 @@
     // return TRUE if the window is of a standard (i.e. not wxWidgets') class
     //
-    // to understand why does it work, look at SubclassWin() code and comments
+    // to understand why it works, look at SubclassWin() code and comments
     bool IsOfStandardClass() const { return m_oldWndProc != NULL; }
 
Index: src/msw/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/window.cpp,v
retrieving revision 1.488
diff -b -u -2 -r1.488 window.cpp
--- src/msw/window.cpp	2004/06/03 14:05:19	1.488
+++ src/msw/window.cpp	2004/06/14 01:11:57
@@ -999,5 +999,5 @@
     if ( hwnd )
     {
-        m_hWnd = 0;
+        SetHWND(0);
 
         wxCHECK_RET( ::IsWindow(hwnd), wxT("invalid HWND in UnsubclassWin") );

 	  	 
