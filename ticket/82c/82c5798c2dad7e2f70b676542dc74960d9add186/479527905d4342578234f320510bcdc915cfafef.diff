Index: include/wx/datetime.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/datetime.h,v
retrieving revision 1.74
diff --unified -r1.74 datetime.h
--- include/wx/datetime.h	2006/04/02 00:54:57	1.74
+++ include/wx/datetime.h	2006/04/13 16:04:43
@@ -417,7 +417,7 @@
     {
     public:
         TimeZone(TZ tz);
-        TimeZone(wxDateTime_t offset = 0) { m_offset = offset; }
+        TimeZone(wxDateTime_t offset = 0) : m_offset(offset) {}
 
         long GetOffset() const { return m_offset; }
 
@@ -560,7 +560,7 @@
     // ------------------------------------------------------------------------
 
         // default ctor does not initialize the object, use Set()!
-    wxDateTime() { m_time = wxLongLong((long)ULONG_MAX, ULONG_MAX); }
+    wxDateTime() : m_time(wxLongLong((long)ULONG_MAX, ULONG_MAX)) {}
 
         // from time_t: seconds since the Epoch 00:00:00 UTC, Jan 1, 1970)
 #if (!(defined(__VISAGECPP__) && __IBMCPP__ >= 400))
@@ -1063,7 +1063,7 @@
     // ------------------------------------------------------------------------
 
         // construct from internal representation
-    wxDateTime(const wxLongLong& time) { m_time = time; }
+    wxDateTime(const wxLongLong& time) : m_time(time) {}
 
         // get the internal representation
     inline wxLongLong GetValue() const;
@@ -1139,7 +1139,7 @@
     static wxTimeSpan Week() { return Weeks(1); }
 
         // default ctor constructs the 0 time span
-    wxTimeSpan() { }
+    wxTimeSpan() : m_diff(0l) {}
 
         // from separate values for each component, date set to 0 (hours are
         // not restricted to 0..24 range, neither are minutes, seconds or
@@ -1289,7 +1289,7 @@
     // ------------------------------------------------------------------------
 
         // construct from internal representation
-    wxTimeSpan(const wxLongLong& diff) { m_diff = diff; }
+    wxTimeSpan(const wxLongLong& diff) : m_diff(diff) {}
 
         // get the internal representation
     wxLongLong GetValue() const { return m_diff; }
@@ -1342,12 +1342,7 @@
 
         // this many years/months/weeks/days
     wxDateSpan(int years = 0, int months = 0, int weeks = 0, int days = 0)
-    {
-        m_years = years;
-        m_months = months;
-        m_weeks = weeks;
-        m_days = days;
-    }
+        : m_years(years), m_months(months), m_weeks(weeks), m_days(days) {}
 
         // get an object for the given number of days
     static wxDateSpan Days(int days) { return wxDateSpan(0, 0, 0, days); }
Index: include/wx/dir.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dir.h,v
retrieving revision 1.20
diff --unified -r1.20 dir.h
--- include/wx/dir.h	2005/09/25 20:49:24	1.20
+++ include/wx/dir.h	2006/04/13 16:04:43
@@ -89,7 +89,7 @@
     // -----
 
     // default, use Open()
-    wxDir() { m_data = NULL; }
+    wxDir() : m_data(NULL) {}
 
     // opens the directory for enumeration, use IsOpened() to test success
     wxDir(const wxString& dir);
Index: include/wx/dynarray.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dynarray.h,v
retrieving revision 1.84
diff --unified -r1.84 dynarray.h
--- include/wx/dynarray.h	2005/09/25 19:58:31	1.84
+++ include/wx/dynarray.h	2006/04/13 16:04:45
@@ -498,7 +498,7 @@
 {                                                                     \
   typedef comptype SCMPFUNC;                                          \
 public:                                                               \
-  name(comptype fn defcomp) { m_fnCompare = fn; }                     \
+  name(comptype fn defcomp) : m_fnCompare(fn) {}                      \
                                                                       \
   name& operator=(const name& src)                                    \
     { base* temp = (base*) this;                                      \
Index: include/wx/dynlib.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dynlib.h,v
retrieving revision 1.60
diff --unified -r1.60 dynlib.h
--- include/wx/dynlib.h	2005/11/20 21:23:53	1.60
+++ include/wx/dynlib.h	2006/04/13 16:04:45
@@ -114,7 +114,7 @@
 public:
     // ctor, normally never used as these objects are only created by
     // wxDynamicLibrary::ListLoaded()
-    wxDynamicLibraryDetails() { m_address = NULL; m_length = 0; }
+    wxDynamicLibraryDetails() : m_address(NULL), m_length(0) {}
 
     // get the (base) name
     wxString GetName() const { return m_name; }
Index: include/wx/event.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/event.h,v
retrieving revision 1.253
diff --unified -r1.253 event.h
--- include/wx/event.h	2006/03/30 14:03:56	1.253
+++ include/wx/event.h	2006/04/13 16:04:48
@@ -589,12 +589,10 @@
 {
 public:
     wxNotifyEvent(wxEventType commandType = wxEVT_NULL, int winid = 0)
-        : wxCommandEvent(commandType, winid)
-        { m_bAllow = true; }
+        : wxCommandEvent(commandType, winid), m_bAllow(true) {}
 
     wxNotifyEvent(const wxNotifyEvent& event)
-        : wxCommandEvent(event)
-        { m_bAllow = event.m_bAllow; }
+        : wxCommandEvent(event), m_bAllow(event.m_bAllow) {}
 
     // veto the operation (usually it's allowed by default)
     void Veto() { m_bAllow = false; }
@@ -663,9 +661,9 @@
 public:
     wxScrollWinEvent(wxEventType commandType = wxEVT_NULL,
                      int pos = 0, int orient = 0);
-    wxScrollWinEvent(const wxScrollWinEvent & event) : wxEvent(event)
-        {    m_commandInt = event.m_commandInt;
-            m_extraLong = event.m_extraLong;    }
+    wxScrollWinEvent(const wxScrollWinEvent & event)
+        : wxEvent(event),
+          m_commandInt(event.m_commandInt), m_extraLong(event.m_extraLong) {}
 
     int GetOrientation() const { return (int) m_extraLong; }
     int GetPosition() const { return m_commandInt; }
@@ -1247,12 +1245,10 @@
 {
 public:
     wxFocusEvent(wxEventType type = wxEVT_NULL, int winid = 0)
-        : wxEvent(winid, type)
-        { m_win = NULL; }
+        : wxEvent(winid, type), m_win(NULL) {}
 
     wxFocusEvent(const wxFocusEvent& event)
-        : wxEvent(event)
-        { m_win = event.m_win; }
+        : wxEvent(event), m_win(event.m_win) {}
 
     // The window associated with this event is the window which had focus
     // before for SET event and the window which will have focus for the KILL
@@ -1295,11 +1291,9 @@
 {
 public:
     wxActivateEvent(wxEventType type = wxEVT_NULL, bool active = true, int Id = 0)
-        : wxEvent(Id, type)
-        { m_active = active; }
+        : wxEvent(Id, type), m_active(active) {}
     wxActivateEvent(const wxActivateEvent& event)
-        : wxEvent(event)
-    { m_active = event.m_active; }
+        : wxEvent(event), m_active(event.m_active) {}
 
     bool GetActive() const { return m_active; }
 
@@ -1341,11 +1335,9 @@
 {
 public:
     wxMenuEvent(wxEventType type = wxEVT_NULL, int winid = 0, wxMenu* menu = NULL)
-        : wxEvent(winid, type)
-        { m_menuId = winid; m_menu = menu; }
+        : wxEvent(winid, type), m_menuId(winid), m_menu(menu) {}
     wxMenuEvent(const wxMenuEvent & event)
-        : wxEvent(event)
-    { m_menuId = event.m_menuId; m_menu = event.m_menu; }
+        : wxEvent(event), m_menuId(event.m_menuId), m_menu(event.m_menu) {}
 
     // only for wxEVT_MENU_HIGHLIGHT
     int GetMenuId() const { return m_menuId; }
@@ -1429,11 +1421,9 @@
 {
 public:
     wxShowEvent(int winid = 0, bool show = false)
-        : wxEvent(winid, wxEVT_SHOW)
-        { m_show = show; }
+        : wxEvent(winid, wxEVT_SHOW), m_show(show) {}
     wxShowEvent(const wxShowEvent & event)
-        : wxEvent(event)
-    { m_show = event.m_show; }
+        : wxEvent(event), m_show(event.m_show) {}
 
     void SetShow(bool show) { m_show = show; }
     bool GetShow() const { return m_show; }
@@ -1455,11 +1445,9 @@
 {
 public:
     wxIconizeEvent(int winid = 0, bool iconized = true)
-        : wxEvent(winid, wxEVT_ICONIZE)
-        { m_iconized = iconized; }
+        : wxEvent(winid, wxEVT_ICONIZE), m_iconized(iconized) {}
     wxIconizeEvent(const wxIconizeEvent & event)
-        : wxEvent(event)
-    { m_iconized = event.m_iconized; }
+        : wxEvent(event), m_iconized(event.m_iconized) {}
 
     // return true if the frame was iconized, false if restored
     bool Iconized() const { return m_iconized; }
@@ -1665,16 +1653,15 @@
 {
 public:
     wxUpdateUIEvent(wxWindowID commandId = 0)
-        : wxCommandEvent(wxEVT_UPDATE_UI, commandId)
-    {
-        m_checked =
-        m_enabled =
-        m_shown =
-        m_setEnabled =
-        m_setShown =
-        m_setText =
-        m_setChecked = false;
-    }
+        : wxCommandEvent(wxEVT_UPDATE_UI, commandId),
+          m_checked(false),
+          m_enabled(false),
+          m_shown(false),
+          m_setEnabled(false),
+          m_setShown(false),
+          m_setText(false),
+          m_setChecked(false)
+    { }
     wxUpdateUIEvent(const wxUpdateUIEvent & event)
         : wxCommandEvent(event),
           m_checked(event.m_checked),
Index: include/wx/ffile.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/ffile.h,v
retrieving revision 1.26
diff --unified -r1.26 ffile.h
--- include/wx/ffile.h	2006/04/05 14:37:37	1.26
+++ include/wx/ffile.h	2006/04/13 16:04:48
@@ -35,11 +35,11 @@
   // ctors
   // -----
     // def ctor
-  wxFFile() { m_fp = NULL; }
+  wxFFile() : m_fp(NULL) {}
     // open specified file (may fail, use IsOpened())
   wxFFile(const wxChar *filename, const wxChar *mode = _T("r"));
     // attach to (already opened) file
-  wxFFile(FILE *lfp) { m_fp = lfp; }
+  wxFFile(FILE *lfp) : m_fp(lfp) {}
 
   // open/close
     // open a file (existing or not - the mode controls what happens)
Index: include/wx/file.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/file.h,v
retrieving revision 1.49
diff --unified -r1.49 file.h
--- include/wx/file.h	2006/04/05 14:37:37	1.49
+++ include/wx/file.h	2006/04/13 16:04:49
@@ -71,11 +71,11 @@
   // ctors
   // -----
     // def ctor
-  wxFile() { m_fd = fd_invalid; m_error = false; }
+  wxFile() : m_fd(fd_invalid), m_error(false) {}
     // open specified file (may fail, use IsOpened())
   wxFile(const wxChar *szFileName, OpenMode mode = read);
     // attach to (already opened) file
-  wxFile(int lfd) { m_fd = lfd; m_error = false; }
+  wxFile(int lfd) : m_fd(lfd), m_error(false) {}
 
   // open/close
     // create a new file (with the default value of bOverwrite, it will fail if
Index: include/wx/filesys.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/filesys.h,v
retrieving revision 1.31
diff --unified -r1.31 filesys.h
--- include/wx/filesys.h	2005/09/23 12:48:39	1.31
+++ include/wx/filesys.h	2006/04/13 16:04:49
@@ -46,11 +46,10 @@
              , wxDateTime modif
 #endif // wxUSE_DATETIME
              )
+        : m_Stream(stream), m_Location(loc),
+          m_MimeType(mimetype), m_Anchor(anchor)
     {
-        m_Stream = stream;
-        m_Location = loc;
-        m_MimeType = mimetype; m_MimeType.MakeLower();
-        m_Anchor = anchor;
+        m_MimeType.MakeLower();
 #if wxUSE_DATETIME
         m_Modif = modif;
 #endif // wxUSE_DATETIME
@@ -155,7 +154,7 @@
 class WXDLLIMPEXP_BASE wxFileSystem : public wxObject
 {
 public:
-    wxFileSystem() : wxObject() { m_FindFileHandler = NULL;}
+    wxFileSystem() : wxObject(), m_FindFileHandler(NULL) {}
     virtual ~wxFileSystem() { }
 
     // sets the current location. Every call to OpenFile is
Index: include/wx/fmappriv.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/fmappriv.h,v
retrieving revision 1.5
diff --unified -r1.5 fmappriv.h
--- include/wx/fmappriv.h	2004/05/26 10:49:43	1.5
+++ include/wx/fmappriv.h	2006/04/13 16:04:49
@@ -41,8 +41,8 @@
 {
 public:
     wxFontMapperPathChanger(wxFontMapperBase *fontMapper, const wxString& path)
+        : m_fontMapper(fontMapper)
     {
-        m_fontMapper = fontMapper;
         m_ok = m_fontMapper->ChangePath(path, &m_pathOld);
     }
 
Index: include/wx/hash.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/hash.h,v
retrieving revision 1.44
diff --unified -r1.44 hash.h
--- include/wx/hash.h	2006/02/08 21:44:22	1.44
+++ include/wx/hash.h	2006/04/13 16:04:50
@@ -341,7 +341,9 @@
 public:
     wxHashTable( wxKeyType keyType = wxKEY_INTEGER,
                  size_t size = wxHASH_SIZE_DEFAULT )
-        : wxHashTableBase() { Create( keyType, size ); BeginFind(); }
+        : wxHashTableBase(), m_curr(NULL), m_currBucket(0)
+        { Create( keyType, size ); BeginFind(); }
+
     wxHashTable( const wxHashTable& table );
 
     virtual ~wxHashTable() { Destroy(); }
Index: include/wx/iconloc.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/iconloc.h,v
retrieving revision 1.6
diff --unified -r1.6 iconloc.h
--- include/wx/iconloc.h	2004/05/23 20:50:23	1.6
+++ include/wx/iconloc.h	2006/04/13 16:04:50
@@ -60,10 +60,7 @@
 
 inline
 wxIconLocation::wxIconLocation(const wxString& file, int num)
-              : wxIconLocationBase(file)
-{
-    SetIndex(num);
-}
+    : wxIconLocationBase(file), m_index(num) {}
 
 #else // !MSW
 
Index: include/wx/init.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/init.h,v
retrieving revision 1.8
diff --unified -r1.8 init.h
--- include/wx/init.h	2005/01/17 00:13:39	1.8
+++ include/wx/init.h	2006/04/13 16:04:50
@@ -73,9 +73,7 @@
 public:
     // initialize the library
     wxInitializer(int argc = 0, wxChar **argv = NULL)
-    {
-        m_ok = wxInitialize(argc, argv);
-    }
+        : m_ok(wxInitialize(argc, argv)) {}
 
     // has the initialization been successful? (explicit test)
     bool IsOk() const { return m_ok; }
Index: include/wx/mimetype.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mimetype.h,v
retrieving revision 1.41
diff --unified -r1.41 mimetype.h
--- include/wx/mimetype.h	2006/03/17 14:12:47	1.41
+++ include/wx/mimetype.h	2006/04/13 16:04:50
@@ -166,7 +166,7 @@
 
         // invalid item - use this to terminate the array passed to
         // wxMimeTypesManager::AddFallbacks
-    wxFileTypeInfo() { }
+    wxFileTypeInfo() : m_iconIndex(0) {}
 
     // test if this object can be used
     bool IsValid() const { return !m_mimeType.empty(); }
Index: include/wx/object.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/object.h,v
retrieving revision 1.125
diff --unified -r1.125 object.h
--- include/wx/object.h	2006/04/12 13:06:05	1.125
+++ include/wx/object.h	2006/04/13 16:04:51
@@ -407,12 +407,12 @@
     DECLARE_ABSTRACT_CLASS(wxObject)
 
 public:
-    wxObject() { m_refData = NULL; }
+    wxObject() : m_refData(NULL) {}
     virtual ~wxObject() { UnRef(); }
 
     wxObject(const wxObject& other)
+        : m_refData(other.m_refData)
     {
-         m_refData = other.m_refData;
          if (m_refData)
              m_refData->m_count++;
     }
Index: include/wx/process.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/process.h,v
retrieving revision 1.39
diff --unified -r1.39 process.h
--- include/wx/process.h	2005/10/09 15:48:09	1.39
+++ include/wx/process.h	2006/04/13 16:04:51
@@ -132,11 +132,10 @@
 class WXDLLIMPEXP_BASE wxProcessEvent : public wxEvent
 {
 public:
-    wxProcessEvent(int nId = 0, int pid = 0, int exitcode = 0) : wxEvent(nId)
+    wxProcessEvent(int nId = 0, int pid = 0, int exitcode = 0)
+        : wxEvent(nId), m_pid(pid), m_exitcode(exitcode)
     {
         m_eventType = wxEVT_END_PROCESS;
-        m_pid = pid;
-        m_exitcode = exitcode;
     }
 
     // accessors
Index: include/wx/stopwatch.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/stopwatch.h,v
retrieving revision 1.10
diff --unified -r1.10 stopwatch.h
--- include/wx/stopwatch.h	2006/02/11 16:38:25	1.10
+++ include/wx/stopwatch.h	2006/04/13 16:04:51
@@ -24,7 +24,7 @@
 {
 public:
     // ctor starts the stop watch
-    wxStopWatch() { m_pauseCount = 0; Start(); }
+    wxStopWatch() : m_pauseCount(0) { Start(); }
 
     // start the stop watch at the moment t0
     void Start(long t0 = 0);
Index: include/wx/textbuf.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/textbuf.h,v
retrieving revision 1.24
diff --unified -r1.24 textbuf.h
--- include/wx/textbuf.h	2006/04/05 14:37:38	1.24
+++ include/wx/textbuf.h	2006/04/13 16:04:51
@@ -172,7 +172,7 @@
     // -----
 
     // default ctor, use Open(string)
-    wxTextBuffer() { m_isOpened = false; }
+    wxTextBuffer() : m_nCurLine(0), m_isOpened(false) {}
 
     // ctor from filename
     wxTextBuffer(const wxString& strBufferName);
Index: include/wx/tokenzr.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/tokenzr.h,v
retrieving revision 1.22
diff --unified -r1.22 tokenzr.h
--- include/wx/tokenzr.h	2006/01/06 21:41:54	1.22
+++ include/wx/tokenzr.h	2006/04/13 16:04:51
@@ -43,7 +43,7 @@
 public:
     // ctors and initializers
         // default ctor, call SetString() later
-    wxStringTokenizer() { m_mode = wxTOKEN_INVALID; }
+    wxStringTokenizer() : m_mode(wxTOKEN_INVALID) {}
         // ctor which gives us the string
     wxStringTokenizer(const wxString& str,
                       const wxString& delims = wxDEFAULT_DELIMITERS,
Index: include/wx/msw/private.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/private.h,v
retrieving revision 1.152
diff --unified -r1.152 private.h
--- include/wx/msw/private.h	2006/03/09 13:18:46	1.152
+++ include/wx/msw/private.h	2006/04/13 16:04:54
@@ -363,7 +363,7 @@
 class ScreenHDC
 {
 public:
-    ScreenHDC() { m_hdc = ::GetDC(NULL);    }
+    ScreenHDC() : m_hdc(::GetDC(NULL)) {}
    ~ScreenHDC() { ::ReleaseDC(NULL, m_hdc); }
 
     operator HDC() const { return m_hdc; }
@@ -378,7 +378,7 @@
 class WindowHDC
 {
 public:
-    WindowHDC(HWND hwnd) { m_hdc = ::GetDC(m_hwnd = hwnd); }
+    WindowHDC(HWND hwnd) : m_hwnd(hwnd), m_hdc(::GetDC(hwnd)) {}
    ~WindowHDC() { ::ReleaseDC(m_hwnd, m_hdc); }
 
     operator HDC() const { return m_hdc; }
@@ -395,7 +395,7 @@
 class MemoryHDC
 {
 public:
-    MemoryHDC(HDC hdc = 0) { m_hdc = ::CreateCompatibleDC(hdc); }
+    MemoryHDC(HDC hdc = 0) : m_hdc(::CreateCompatibleDC(hdc)) {}
    ~MemoryHDC() { ::DeleteDC(m_hdc); }
 
     operator HDC() const { return m_hdc; }
@@ -411,8 +411,8 @@
 class SelectInHDC
 {
 public:
-    SelectInHDC(HDC hdc, HGDIOBJ hgdiobj) : m_hdc(hdc)
-        { m_hgdiobj = ::SelectObject(hdc, hgdiobj); }
+    SelectInHDC(HDC hdc, HGDIOBJ hgdiobj)
+        : m_hdc(hdc), m_hgdiobj(::SelectObject(hdc, hgdiobj)) {}
 
    ~SelectInHDC() { ::SelectObject(m_hdc, m_hgdiobj); }
 
@@ -530,9 +530,8 @@
     {
     public:
         HDCMapModeChanger(HDC hdc, int mm)
-            : m_hdc(hdc)
+            : m_hdc(hdc), m_modeOld(::SetMapMode(hdc, mm))
         {
-            m_modeOld = ::SetMapMode(hdc, mm);
             if ( !m_modeOld )
                 wxLogLastError(_T("SelectClipRgn"));
         }
@@ -560,8 +559,8 @@
 public:
     // allocates a block of given size
     GlobalPtr(size_t size, unsigned flags = GMEM_MOVEABLE)
+        : m_hGlobal(::GlobalAlloc(flags, size))
     {
-        m_hGlobal = ::GlobalAlloc(flags, size);
         if ( !m_hGlobal )
             wxLogLastError(_T("GlobalAlloc"));
     }
@@ -587,9 +586,9 @@
 class GlobalPtrLock
 {
 public:
-    GlobalPtrLock(HGLOBAL hGlobal) : m_hGlobal(hGlobal)
+    GlobalPtrLock(HGLOBAL hGlobal)
+        : m_hGlobal(hGlobal), m_ptr(GlobalLock(hGlobal))
     {
-        m_ptr = GlobalLock(hGlobal);
         if ( !m_ptr )
         {
             wxLogLastError(_T("GlobalLock"));
@@ -625,7 +624,7 @@
 {
 public:
     // ctor doesn't register the class, call Initialize() for this
-    ClassRegistrar() { m_registered = -1; }
+    ClassRegistrar() : m_registered(-1) {}
 
     // return true if the class is already registered
     bool IsInitialized() const { return m_registered != -1; }

 	  	 
