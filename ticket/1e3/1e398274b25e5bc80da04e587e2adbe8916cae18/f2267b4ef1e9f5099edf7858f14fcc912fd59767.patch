Index: wxWidgets-2.8/src/msw/ole/automtn.cpp
===================================================================
--- wxWidgets-2.8/src/msw/ole/automtn.cpp	(revision 50553)
+++ wxWidgets-2.8/src/msw/ole/automtn.cpp	(working copy)
@@ -673,6 +673,62 @@
 
 WXDLLEXPORT bool wxConvertOleToVariant(const VARIANTARG& oleVariant, wxVariant& variant)
 {
+  // VT_ARRAY and VT_BYREF are greater than VT_TYPEMASK
+  // so check for these two flags before masking them off
+  // -jw 2006/12/19
+  if (oleVariant.vt & VT_ARRAY)
+    {
+      variant.ClearList();
+
+      int cDims, cElements, i;
+      VARIANTARG* pvdata;
+
+      // Iterate the dimensions: number of elements is x*y*z
+      for (cDims = 0, cElements = 1;
+	   cDims < oleVariant.parray->cDims; cDims ++)
+	cElements *= oleVariant.parray->rgsabound[cDims].cElements;
+
+      // Get a pointer to the data
+      HRESULT hr = SafeArrayAccessData(oleVariant.parray, (void HUGEP* FAR*) & pvdata);
+      if (hr != NOERROR)
+	return false;
+
+      if (oleVariant.vt & VT_UNKNOWN)
+	{
+	  variant = pvdata;
+	  return true;
+	}
+	    
+      // Iterate the data.
+      for (i = 0; i < cElements; i++)
+	{
+	  VARIANTARG& oleElement = pvdata[i];
+	  wxVariant vElement;
+	  if (!wxConvertOleToVariant(oleElement, vElement))
+	    return false;
+
+	  variant.Append(vElement);
+	}
+      SafeArrayUnaccessData(oleVariant.parray);
+    }
+
+  else if (oleVariant.vt & VT_BYREF)
+    {
+      switch (oleVariant.vt & VT_TYPEMASK)
+	{
+	case VT_VARIANT:
+	  {
+	    VARIANTARG& oleReference = *((LPVARIANT)oleVariant.byref);
+	    if (!wxConvertOleToVariant(oleReference,variant))
+		return false;
+	    break;
+	  }
+	default:
+	  wxLogError(wxT("wxAutomationObject::ConvertOleToVariant: [as yet] unhandled reference %X"),oleVariant.vt);
+	  return false;
+	}
+    }
+  else
     switch (oleVariant.vt & VT_TYPEMASK)
     {
     case VT_BSTR:
@@ -728,35 +784,6 @@
             variant = oleVariant.dblVal;
             break;
         }
-    case VT_ARRAY:
-        {
-            variant.ClearList();
-
-            int cDims, cElements, i;
-            VARIANTARG* pvdata;
-
-            // Iterate the dimensions: number of elements is x*y*z
-            for (cDims = 0, cElements = 1;
-                cDims < oleVariant.parray->cDims; cDims ++)
-                    cElements *= oleVariant.parray->rgsabound[cDims].cElements;
-
-            // Get a pointer to the data
-            HRESULT hr = SafeArrayAccessData(oleVariant.parray, (void HUGEP* FAR*) & pvdata);
-            if (hr != NOERROR)
-                return false;
-            // Iterate the data.
-            for (i = 0; i < cElements; i++)
-            {
-                VARIANTARG& oleElement = pvdata[i];
-                wxVariant vElement;
-                if (!wxConvertOleToVariant(oleElement, vElement))
-                    return false;
-
-                variant.Append(vElement);
-            }
-            SafeArrayUnaccessData(oleVariant.parray);
-            break;
-        }
     case VT_DISPATCH:
         {
             variant = (void*) oleVariant.pdispVal;
@@ -773,7 +800,7 @@
         }
     default:
         {
-            wxLogError(wxT("wxAutomationObject::ConvertOleToVariant: Unknown variant value type"));
+	  wxLogError(wxT("wxAutomationObject::ConvertOleToVariant: Unknown variant value type %X -> %X"),oleVariant.vt,oleVariant.vt&VT_TYPEMASK);
             return false;
         }
     }

 	  	 
