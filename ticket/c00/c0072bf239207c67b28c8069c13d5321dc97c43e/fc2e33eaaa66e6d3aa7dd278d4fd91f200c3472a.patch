Index: wxWidgets/src/msw/fontenum.cpp
===================================================================
--- wxWidgets/src/msw/fontenum.cpp	(revision 57177)
+++ wxWidgets/src/msw/fontenum.cpp	(working copy)
@@ -166,7 +166,7 @@
 #else // __WIN32__
     LOGFONT lf;
     lf.lfCharSet = (BYTE)m_charset;
-    wxStrlcpy(lf.lfFaceName, m_facename, WXSIZEOF(lf.lfFaceName));
+    wxStrlcpy(lf.lfFaceName, m_facename.c_str(), WXSIZEOF(lf.lfFaceName));
     lf.lfPitchAndFamily = 0;
     ::EnumFontFamiliesEx(hDC, &lf, (wxFONTENUMPROC)wxFontEnumeratorProc,
                          (LPARAM)this, 0 /* reserved */) ;
Index: wxWidgets/src/msw/filedlg.cpp
===================================================================
--- wxWidgets/src/msw/filedlg.cpp	(revision 57177)
+++ wxWidgets/src/msw/filedlg.cpp	(working copy)
@@ -494,7 +494,7 @@
 
     //=== Setting defaultFileName >>=========================================
 
-    wxStrlcpy(fileNameBuffer, m_fileName, WXSIZEOF(fileNameBuffer));
+    wxStrlcpy(fileNameBuffer, m_fileName.c_str(), WXSIZEOF(fileNameBuffer));
 
     of.lpstrFile = fileNameBuffer;  // holds returned filename
     of.nMaxFile  = wxMAXPATH;
Index: wxWidgets/src/msw/font.cpp
===================================================================
--- wxWidgets/src/msw/font.cpp	(revision 57177)
+++ wxWidgets/src/msw/font.cpp	(working copy)
@@ -618,7 +618,7 @@
 
 bool wxNativeFontInfo::SetFaceName(const wxString& facename)
 {
-    wxStrlcpy(lf.lfFaceName, facename, WXSIZEOF(lf.lfFaceName));
+    wxStrlcpy(lf.lfFaceName, facename.c_str(), WXSIZEOF(lf.lfFaceName));
     return true;
 }
 
Index: wxWidgets/src/msw/dialup.cpp
===================================================================
--- wxWidgets/src/msw/dialup.cpp	(revision 57177)
+++ wxWidgets/src/msw/dialup.cpp	(working copy)
@@ -807,7 +807,7 @@
 
     RASDIALPARAMS rasDialParams;
     rasDialParams.dwSize = sizeof(rasDialParams);
-    wxStrlcpy(rasDialParams.szEntryName, entryName, RAS_MaxEntryName);
+    wxStrlcpy(rasDialParams.szEntryName, entryName.c_str(), RAS_MaxEntryName);
 
     // do we have the username and password?
     if ( !username || !password )
@@ -829,8 +829,8 @@
     }
     else
     {
-        wxStrlcpy(rasDialParams.szUserName, username, UNLEN);
-        wxStrlcpy(rasDialParams.szPassword, password, PWLEN);
+        wxStrlcpy(rasDialParams.szUserName, username.c_str(), UNLEN);
+        wxStrlcpy(rasDialParams.szPassword, password.c_str(), PWLEN);
     }
 
     // default values for other fields
Index: wxWidgets/src/msw/app.cpp
===================================================================
--- wxWidgets/src/msw/app.cpp	(revision 57177)
+++ wxWidgets/src/msw/app.cpp	(working copy)
@@ -654,7 +654,7 @@
     for ( size_t n = 0; n < count; n++ )
     {
         if ( gs_regClassesInfo[n].basename == name )
-            return gs_regClassesInfo[n].regname;
+            return gs_regClassesInfo[n].regname.c_str();
     }
 
     // we need to register this class
@@ -696,7 +696,7 @@
     {
         wxLogLastError(wxString::Format(wxT("RegisterClass(%s)"),
                        regClass.regname));
-        ::UnregisterClass(regClass.regname, wxhInstance);
+        ::UnregisterClass(regClass.regname.c_str(), wxhInstance);
         return NULL;
     }
 
@@ -728,13 +728,13 @@
     for ( size_t n = 0; n < count; n++ )
     {
         const ClassRegInfo& regClass = gs_regClassesInfo[n];
-        if ( !::UnregisterClass(regClass.regname, wxhInstance) )
+        if ( !::UnregisterClass(regClass.regname.c_str(), wxhInstance) )
         {
             wxLogLastError(wxString::Format(wxT("UnregisterClass(%s)"),
                            regClass.regname));
         }
 
-        if ( !::UnregisterClass(regClass.regnameNR, wxhInstance) )
+        if ( !::UnregisterClass(regClass.regnameNR.c_str(), wxhInstance) )
         {
             wxLogLastError(wxString::Format(wxT("UnregisterClass(%s)"),
                            regClass.regnameNR));
Index: wxWidgets/src/msw/fontutil.cpp
===================================================================
--- wxWidgets/src/msw/fontutil.cpp	(revision 57177)
+++ wxWidgets/src/msw/fontutil.cpp	(working copy)
@@ -162,7 +162,7 @@
     wxZeroMemory(lf);       // all default values
 
     lf.lfCharSet = (BYTE)info.charset;
-    wxStrlcpy(lf.lfFaceName, info.facename, WXSIZEOF(lf.lfFaceName));
+    wxStrlcpy(lf.lfFaceName, info.facename.c_str(), WXSIZEOF(lf.lfFaceName));
 
     HFONT hfont = ::CreateFontIndirect(&lf);
     if ( !hfont )
Index: wxWidgets/src/msw/listctrl.cpp
===================================================================
--- wxWidgets/src/msw/listctrl.cpp	(revision 57177)
+++ wxWidgets/src/msw/listctrl.cpp	(working copy)
@@ -2486,7 +2486,7 @@
                     if ( lvi.mask & LVIF_TEXT )
                     {
                         wxString text = OnGetItemText(item, lvi.iSubItem);
-                        wxStrlcpy(lvi.pszText, text, lvi.cchTextMax);
+                        wxStrlcpy(lvi.pszText, text.c_str(), lvi.cchTextMax);
                     }
 
                     // see comment at the end of wxListCtrl::GetColumn()
Index: wxWidgets/src/msw/utils.cpp
===================================================================
--- wxWidgets/src/msw/utils.cpp	(revision 57177)
+++ wxWidgets/src/msw/utils.cpp	(working copy)
@@ -218,7 +218,7 @@
 
             if ( !host.empty() )
             {
-                wxStrlcpy(buf, host, maxSize);
+                wxStrlcpy(buf, host.c_str(), maxSize);
 
                 return true;
             }
