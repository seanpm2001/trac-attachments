Index: src/msw/frame.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/frame.cpp,v
retrieving revision 1.190.2.1
diff -u -r1.190.2.1 frame.cpp
--- src/msw/frame.cpp	2005/10/23 11:05:46	1.190.2.1
+++ src/msw/frame.cpp	2006/01/21 23:21:43
@@ -822,6 +822,7 @@
 
 bool wxFrame::HandleSize(int WXUNUSED(x), int WXUNUSED(y), WXUINT id)
 {
+    wxLogDebug("handlesize");
 #if !defined(__WXMICROWIN__) && !defined(__WXWINCE__)
     switch ( id )
     {
@@ -830,11 +831,21 @@
             // only do it it if we were iconized before, otherwise resizing the
             // parent frame has a curious side effect of bringing it under it's
             // children
-            if ( !m_iconized )
-                break;
 
+            /*
+                m_iconized isn't reliable here because IsIconized() updates it, and
+                we can't rely on user code not being called between the actual
+                iconization and this being called (like in an EVT_MOVE handler, see
+                https://sourceforge.net/tracker/index.php?func=detail&aid=1407848&group_id=9863&atid=109863
+                
+                Instead, just raise ourself after fixing the children
+            */
+            //if ( !m_iconized )
+            //    break;
+
             // restore all child frames too
             IconizeChildFrames(false);
+            this->Raise();
 
             (void)SendIconizeEvent(false);
             break;
@@ -847,6 +858,12 @@
 #else
     wxUnusedVar(id);
 #endif // !__WXWINCE__
+
+    /*
+        m_iconized is safe here, though (see above) because 
+        IsIconized() will update this to the right value when 
+        minimizing
+    */
 
     if ( !m_iconized )
     {

 	  	 
