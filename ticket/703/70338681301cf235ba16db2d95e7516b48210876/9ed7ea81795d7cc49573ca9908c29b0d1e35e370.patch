diff -bru --expand-tabs /home/igor/wxWidgets.55580/src/msw/choice.cpp /mnt/winxp/wxWidgets.55580/src/msw/choice.cpp
--- /home/igor/wxWidgets.55580/src/msw/choice.cpp	2008-09-12 21:58:11.000000000 -0400
+++ /mnt/winxp/wxWidgets.55580/src/msw/choice.cpp	2008-10-02 02:05:16.437500000 -0400
@@ -552,9 +552,18 @@
             nItems = 24;
 
         // add space for the drop down list
+                if( HasFlag( wxCB_SIMPLE ) )
+                {
+            int cx, cy;
+            wxGetCharSize( GetHWND(), &cx, &cy, GetFont() );
+            height = EDIT_HEIGHT_FROM_CHAR_HEIGHT( cy ) * wxMin( wxMax( nItems, 3 ), 10 );
+                }
+                else
+                {
         const int hItem = SendMessage(GetHwnd(), CB_GETITEMHEIGHT, 0, 0);
         height += hItem*(nItems + 1);
     }
+    }
     else // keep the same height as now
     {
         // normally wxWindow::DoSetSize() checks if we set the same size as the
@@ -604,6 +613,7 @@
 {
     // find the widest string
     int wChoice = 0;
+        int hChoice;
     const unsigned int nItems = GetCount();
     for ( unsigned int i = 0; i < nItems; i++ )
     {
@@ -620,8 +630,16 @@
 
     // the combobox should be slightly larger than the widest string
     wChoice += 5*GetCharWidth();
+        if( HasFlag( wxCB_SIMPLE ) )
+        {
+                int cx, cy;
+                wxGetCharSize( GetHWND(), &cx, &cy, GetFont() );
+                hChoice = EDIT_HEIGHT_FROM_CHAR_HEIGHT( cy ) * wxMin( wxMax( nItems, 3 ), 10 );
+        }
+        else
+                hChoice = EDIT_HEIGHT_FROM_CHAR_HEIGHT(GetCharHeight());
 
-    wxSize best(wChoice, EDIT_HEIGHT_FROM_CHAR_HEIGHT(GetCharHeight()));
+    wxSize best(wChoice, hChoice);
     CacheBestSize(best);
     return best;
 }
