Index: docs/latex/wx/wxstring.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/docs/latex/wx/wxstring.tex,v
retrieving revision 1.59
diff -u -r1.59 wxstring.tex
--- docs/latex/wx/wxstring.tex	2006/02/13 15:18:35	1.59
+++ docs/latex/wx/wxstring.tex	2006/05/06 16:15:00
@@ -125,6 +125,7 @@
 \helpref{IsSameAs}{wxstringissameas}\\
 \helpref{Matches}{wxstringmatches}\\
 \helpref{StartsWith}{wxstringstartswith}
+\helpref{EndsWith}{wxstringendswith}
 
 \membersection{Substring extraction}\label{substringextractioninwxstring}
 
@@ -141,7 +142,9 @@
 \helpref{AfterFirst}{wxstringafterfirst}\\
 \helpref{AfterLast}{wxstringafterlast}\\
 \helpref{StartsWith}{wxstringstartswith}
+\helpref{EndsWith}{wxstringendswith}
 
+
 \membersection{Case conversion}\label{caseconversioninwxstring}
 
 The MakeXXX() variants modify the string in place, while the other functions
@@ -966,6 +969,16 @@
 of the string (i.e. after the prefix) into {\it rest} string if it is not 
 {\tt NULL}. Otherwise, the function returns {\tt false} and doesn't modify the 
 {\it rest}.
+
+\membersection{wxString::EndsWith}\label{wxstringendswith}
+
+\constfunc{bool}{EndsWith}{\param{const wxChar }{*postfix}, \param{wxString }{*rest = NULL}}
+
+This function can be used to test if the string ends with the specified 
+{\it postfix}. If it does, the function will return {\tt true} and put the rest
+(the beginning) of the string (i.e. after the prefix) into {\it rest} string
+if it is not  {\tt NULL}. Otherwise, the function returns {\tt false} and doesn't
+modify the {\it rest}.
 
 \membersection{wxString::Strip}\label{wxstringstrip}
 
Index: include/wx/string.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/string.h,v
retrieving revision 1.215
diff -u -r1.215 string.h
--- include/wx/string.h	2006/04/15 18:39:56	1.215
+++ include/wx/string.h	2006/05/06 16:01:24
@@ -1060,6 +1060,10 @@
       // string in the provided pointer if it is not NULL, otherwise return
       // false
   bool StartsWith(const wxChar *prefix, wxString *rest = NULL) const;
+      // check that the string ends with postfix and return the rest (before
+      // the postfix) of the string in the provided pointer if it is not NULL,
+      // otherwise return false
+  bool EndsWith(const wxChar *postfix, wxString *rest) const;
 
       // get first nCount characters
   wxString Left(size_t nCount) const;
Index: src/common/string.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/string.cpp,v
retrieving revision 1.266
diff -u -r1.266 string.cpp
--- src/common/string.cpp	2006/04/18 07:24:34	1.266
+++ src/common/string.cpp	2006/05/06 16:02:46
@@ -1373,7 +1373,7 @@
 
     // first check if the beginning of the string matches the prefix: note
     // that we don't have to check that we don't run out of this string as
-    // when we reach the terminating NUL, either prefix string ends too (and
+    // when we reach the terminating NULL, either prefix string ends too (and
     // then it's ok) or we break out of the loop because there is no match
     const wxChar *p = c_str();
     while ( *prefix )
@@ -1393,6 +1393,29 @@
 
     return true;
 }
+
+
+// check that the string ends with postfix and return the rest (before the postfix)
+// of the string in the provided pointer if it is not NULL, otherwise return false
+bool wxString::EndsWith(const wxChar *postfix, wxString *rest) const
+{
+    wxASSERT_MSG( postfix, _T("invalid parameter in wxString::EndssWith") );
+
+    wxString strPostfix(postfix);
+
+    if (Length() < strPostfix.Length() || Right(strPostfix.Length()) != strPostfix)
+        // no match
+        return false;
+
+    if ( rest )
+    {
+        // put the rest of the string into provided pointer
+        *rest = Left(Length()-strPostfix.Length());
+    }
+
+    return true;
+}
+
 
 // extract nCount last (rightmost) characters
 wxString wxString::Right(size_t nCount) const

 	  	 
