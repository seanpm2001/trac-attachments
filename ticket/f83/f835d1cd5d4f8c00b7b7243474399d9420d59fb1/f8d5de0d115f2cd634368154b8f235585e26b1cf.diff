--- wxWidgets-3.0.2-base/src/propgrid/propgrid.cpp	2014-10-06 23:33:44.000000000 +0200
+++ wxWidgets-3.0.2/src/propgrid/propgrid.cpp	2016-02-04 03:29:47.000000000 +0100
@@ -1971,6 +1971,8 @@
             else
             {
                 bufferDC = new wxMemoryDC();
+                double userScale = GetContentScaleFactor();
+                bufferDC->SetUserScale(userScale, userScale);
 
                 // If nothing was changed, then just copy from double-buffer
                 bufferDC->SelectObject( *m_doubleBuffer );
@@ -2111,10 +2113,12 @@
     // Prepare some pens and brushes that are often changed to.
     //
 
+    double userScale = GetContentScaleFactor();
+
     wxBrush marginBrush(m_colMargin);
-    wxPen marginPen(m_colMargin);
+    wxPen marginPen(m_colMargin,userScale);
     wxBrush capbgbrush(m_colCapBack,wxSOLID);
-    wxPen linepen(m_colLine,1,wxSOLID);
+    wxPen linepen(m_colLine,userScale,wxSOLID);
 
     wxColour selBackCol;
     if ( isPgEnabled )
@@ -2123,7 +2127,7 @@
         selBackCol = m_colMargin;
 
     // pen that has same colour as text
-    wxPen outlinepen(m_colPropFore,1,wxSOLID);
+    wxPen outlinepen(m_colPropFore,userScale,wxSOLID);
 
     //
     // Clear margin with background colour
@@ -4587,6 +4591,8 @@
 
     if ( !(GetExtraStyle() & wxPG_EX_NATIVE_DOUBLE_BUFFERING) )
     {
+        double userScale = GetContentScaleFactor();
+
         int dblh = (m_lineHeight*2);
         if ( !m_doubleBuffer )
         {
@@ -4594,7 +4600,7 @@
             int w = (width>250)?width:250;
             int h = height + dblh;
             h = (h>400)?h:400;
-            m_doubleBuffer = new wxBitmap( w, h );
+            m_doubleBuffer = new wxBitmap( w*userScale, h*userScale );
         }
         else
         {
@@ -4607,7 +4613,7 @@
                 if ( w < width ) w = width;
                 if ( h < (height+dblh) ) h = height + dblh;
                 delete m_doubleBuffer;
-                m_doubleBuffer = new wxBitmap( w, h );
+                m_doubleBuffer = new wxBitmap( w*userScale, h*userScale );
             }
         }
     }
