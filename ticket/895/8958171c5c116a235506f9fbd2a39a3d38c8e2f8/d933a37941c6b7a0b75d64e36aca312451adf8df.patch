Index: include/wx/dbtable.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dbtable.h,v
retrieving revision 1.43
diff -b -u -2 -r1.43 dbtable.h
--- include/wx/dbtable.h	2004/12/28 21:32:18	1.43
+++ include/wx/dbtable.h	2005/01/24 16:21:06
@@ -116,4 +116,6 @@
     // Where, Order By and From clauses
     wxString    where;               // Standard SQL where clause, minus the word WHERE
+    wxString    groupBy;             // Standard SQL group by clause, minus the words GROUP BY
+    wxString    having;              // Standard SQL having clause, minus the word HAVING
     wxString    orderBy;             // Standard SQL order by clause, minus the ORDER BY
     wxString    from;                // Allows for joins in a wxDbTable::Query().  Format: ",tbl,tbl..."
@@ -217,4 +219,6 @@
     const wxString &GetOrderByClause()   { return orderBy; }
     const wxString &GetWhereClause()     { return where; }
+    const wxString &GetHavingClause()    { return having; }
+    const wxString &GetGroupByClause()   { return groupBy; }
 
     bool            IsQueryOnly()        { return queryOnly; }
@@ -228,8 +232,14 @@
     bool            SetOrderByColNums(UWORD first, ...);
     void            SetWhereClause(const wxString &Where) { where = Where; }
+    void            SetHavingClause(const wxString &Having) { having = Having; }
+    void            SetGroupByClause(const wxString &GroupBy) { groupBy = GroupBy; }
     void            From(const wxString &From) { from = From; }
     void            OrderBy(const wxString &OrderBy) { orderBy = OrderBy; }
     void            Where(const wxString &Where) { where = Where; }
+    void            Having(const wxString &Having) { having = Having; }
+    void            GroupBy(const wxString &GroupBy) { groupBy = GroupBy; }
     const wxString &Where()   { return where; }
+    const wxString &Having()  { return having; }
+    const wxString &GroupBy() { return groupBy; }
     const wxString &OrderBy() { return orderBy; }
     const wxString &From()    { return from; }
Index: src/common/dbtable.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/dbtable.cpp,v
retrieving revision 1.101
diff -b -u -2 -r1.101 dbtable.cpp
--- src/common/dbtable.cpp	2004/12/29 21:19:39	1.101
+++ src/common/dbtable.cpp	2005/01/24 16:21:40
@@ -155,5 +155,7 @@
     m_numCols           = numColumns;               // Number of columns in the table
     where.Empty();                                  // Where clause
+    having.Empty();                                 // Having clause
     orderBy.Empty();                                // Order By clause
+    groupBy.Empty();                                // Group By clause
     from.Empty();                                   // From clause
     selectForUpdate     = false;                    // SELECT ... FOR UPDATE; Indicates whether to include the FOR UPDATE phrase
@@ -1160,4 +1162,20 @@
     }
 
+#if !wxODBC_BACKWARD_COMPATABILITY
+	// Append the GROUP BY clause
+	if (groupBy.Length())
+	{
+        pSqlStmt += wxT(" GROUP BY ");
+        pSqlStmt += groupBy;
+    }
+
+	// Append the HAVING clause
+	if (having.Length())
+	{
+        pSqlStmt += wxT(" HAVING ");
+        pSqlStmt += having;
+    }
+#endif
+
     // Append the ORDER BY clause
 #if wxODBC_BACKWARD_COMPATABILITY
@@ -1171,4 +1189,5 @@
     }
 
+
     // SELECT FOR UPDATE if told to do so and the datasource is capable.  Sybase
     // parses the FOR UPDATE clause but ignores it.  See the comment above on the
@@ -2516,6 +2535,9 @@
     wxChar *saveOrderBy = orderBy;
 #else
+	// Save the where, order by, group by and having clauses
     wxString saveWhere = where;
     wxString saveOrderBy = orderBy;
+    wxString saveGroupBy = groupBy;
+    wxString saveHaving = having;
 #endif
     // Build a where clause to refetch the record with.  Try and use the
@@ -2549,4 +2571,8 @@
     where = whereClause;
     orderBy.Empty();
+#if !wxODBC_BACKWARD_COMPATABILITY
+    groupBy.Empty();
+    having.Empty();
+#endif
     if (!Query())
         result = false;
@@ -2562,7 +2588,9 @@
         pDb->DispAllErrors(henv, hdbc, hstmtInternal);
 
-    // Restore the original where and order by clauses
+    // Restore the original where, order by, group by and having clauses
     where   = saveWhere;
     orderBy = saveOrderBy;
+    groupBy = saveGroupBy;
+    having = saveHaving;
 
     return(result);
@@ -2715,6 +2743,8 @@
         switch (colDefs[colNumber].SqlCtype)
         {
+#if wxUSE_UNICODE
             case SQL_WCHAR:
             case SQL_WVARCHAR:
+#endif
             case SQL_CHAR:
             case SQL_VARCHAR:
@@ -2781,6 +2811,8 @@
         switch (colDefs[colNumber].SqlCtype)
         {
+#if wxUSE_UNICODE
             case SQL_WCHAR:
             case SQL_WVARCHAR:
+#endif
             case SQL_CHAR:
             case SQL_VARCHAR:

 	  	 
