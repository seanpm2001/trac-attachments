Index: src/msw/timer.cpp
===================================================================
--- src/msw/timer.cpp	(revision 63306)
+++ src/msw/timer.cpp	(working copy)
@@ -39,7 +39,7 @@
 
 // define a hash containing all the timers: it is indexed by timer id and
 // contains the corresponding timer
-WX_DECLARE_HASH_MAP(unsigned long, wxTimer *, wxIntegerHash, wxIntegerEqual,
+WX_DECLARE_HASH_MAP(WPARAM, wxTimer *, wxIntegerHash, wxIntegerEqual,
                     wxTimerMap);
 
 // instead of using a global here, wrap it in a static function as otherwise it
@@ -188,7 +188,7 @@
 {
     if ( message == WM_TIMER )
     {
-        wxTimerMap::iterator node = TimerMap().find((unsigned long)wParam);
+        wxTimerMap::iterator node = TimerMap().find(wParam);
 
         wxCHECK_MSG( node != TimerMap().end(), 0, wxT("bogus timer id in wxTimerProc") );
 
Index: include/wx/msw/timer.h
===================================================================
--- include/wx/msw/timer.h	(revision 63306)
+++ include/wx/msw/timer.h	(working copy)
@@ -30,7 +30,7 @@
 protected:
     void Init();
 
-    unsigned long m_id;
+    WPARAM m_id;
 
 private:
     DECLARE_DYNAMIC_CLASS_NO_COPY(wxTimer)
