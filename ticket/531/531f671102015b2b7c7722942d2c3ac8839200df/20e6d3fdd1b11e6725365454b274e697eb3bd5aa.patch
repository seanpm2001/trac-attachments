Index: include/wx/xrc/xmlres.h
===================================================================
--- include/wx/xrc/xmlres.h	(revision 69098)
+++ include/wx/xrc/xmlres.h	(working copy)
@@ -143,6 +143,9 @@
     // Removes all handlers
     void ClearHandlers();
 
+    // Removes all caches.
+    void ClearCache();
+
     // Registers subclasses factory for use in XRC. This function is not meant
     // for public use, please see the comment above wxXmlSubclassFactory
     // definition.
@@ -355,6 +358,14 @@
 #if wxUSE_FILESYSTEM
     // Another helper: detect if the filename is a ZIP or XRS file
     static bool IsArchive(const wxString& filename);
+
+    //1. Create the file system object on the heap, this will
+    //make it possible for others to re-create the object and by
+    //that reset the file system caches.
+    //2. Let derived classes access the file system object,
+    //so derived classes will be able to manage it.
+    wxFileSystem *m_curFileSystem;
+    wxFileSystem& GetCurFileSystem() { return *m_curFileSystem; }
 #endif // wxUSE_FILESYSTEM
 
 private:
@@ -385,10 +396,6 @@
     int m_flags;
     wxVector<wxXmlResourceHandler*> m_handlers;
     wxXmlResourceDataRecords *m_data;
-#if wxUSE_FILESYSTEM
-    wxFileSystem m_curFileSystem;
-    wxFileSystem& GetCurFileSystem() { return m_curFileSystem; }
-#endif
 
     // domain to pass to translation functions, if any.
     wxString m_domain;
Index: src/xrc/xmlres.cpp
===================================================================
--- src/xrc/xmlres.cpp	(revision 69098)
+++ src/xrc/xmlres.cpp	(working copy)
@@ -246,6 +246,7 @@
     m_flags = flags;
     m_version = -1;
     m_data = new wxXmlResourceDataRecords;
+    m_curFileSystem = new wxFileSystem;
     SetDomain(domain);
 }
 
@@ -254,6 +255,7 @@
     m_flags = flags;
     m_version = -1;
     m_data = new wxXmlResourceDataRecords;
+    m_curFileSystem = new wxFileSystem;
     SetDomain(domain);
     Load(filemask);
 }
@@ -268,6 +270,7 @@
         delete *i;
     }
     delete m_data;
+    delete m_curFileSystem;
 }
 
 void wxXmlResource::SetDomain(const wxString& domain)
@@ -454,7 +457,18 @@
     m_handlers.clear();
 }
 
+void wxXmlResource::ClearCache()
+{
+// By re-creating the file system object all caches
+// will be deleted.
+// Here one might also clear all loaded items?
+#if wxUSE_FILESYSTEM
+    delete m_curFileSystem;
+    m_curFileSystem = new wxFileSystem;
+#endif
 
+}
+
 wxMenu *wxXmlResource::LoadMenu(const wxString& name)
 {
     return (wxMenu*)CreateResFromNode(FindResource(name, wxT("wxMenu")), NULL, NULL);
@@ -856,7 +870,8 @@
         // ensure that relative paths work correctly when loading this node
         // (which should happen as soon as we return as FindResource() result
         // is always passed to CreateResFromNode())
-        m_curFileSystem.ChangePathTo(path);
+        //Why use class object when there is a function defined?
+        GetCurFileSystem().ChangePathTo(path);
     }
 #endif // wxUSE_FILESYSTEM
 
