diff -ru -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxMSW-2007-02-12/src/common/db.cpp wxMSW-dbPatched/src/common/db.cpp
--- wxMSW-2007-02-12/src/common/db.cpp	2007-02-12 04:54:34.000000000 -0300
+++ wxMSW-dbPatched/src/common/db.cpp	2007-02-15 11:08:30.937500000 -0300
@@ -16,7 +16,7 @@
 //                -Set ODBC option to only read committed writes to the DB so all
 //                   databases operate the same in that respect
 // Created:     9.96
-// RCS-ID:      $Id: db.cpp,v 1.138 2006/12/24 12:14:31 VZ Exp $
+// RCS-ID:      $Id: db.cpp,v 1.137 2006/11/13 14:45:44 VZ Exp $
 // Copyright:   (c) 1996 Remstar International, Inc.
 // Licence:     wxWindows licence
 ///////////////////////////////////////////////////////////////////////////////
@@ -63,6 +63,7 @@
 
 #ifdef __WXDEBUG__
     extern wxList TablesInUse;
+    extern wxCriticalSection csTablesInUse;
 #endif
 
 // SQL Log defaults to be used by GetDbConnection
@@ -1746,21 +1747,24 @@
     wxASSERT(nTables == 0);
 
 #ifdef __WXDEBUG__
-    wxTablesInUse *tiu;
-    wxList::compatibility_iterator pNode;
-    pNode = TablesInUse.GetFirst();
-    wxString s,s2;
-    while (pNode)
-    {
-        tiu = (wxTablesInUse *)pNode->GetData();
-        if (tiu->pDb == this)
-        {
-            s.Printf(wxT("(%-20s)     tableID:[%6lu]     pDb:[%p]"),
-                     tiu->tableName, tiu->tableID, wx_static_cast(void*, tiu->pDb));
-            s2.Printf(wxT("Orphaned table found using pDb:[%p]"), wx_static_cast(void*, this));
-            wxLogDebug(s.c_str(),s2.c_str());
+    {
+        wxCriticalSectionLocker lock(csTablesInUse);
+        wxTablesInUse *tiu;
+        wxList::compatibility_iterator pNode;
+        pNode = TablesInUse.GetFirst();
+        wxString s,s2;
+        while (pNode)
+        {
+            tiu = (wxTablesInUse *)pNode->GetData();
+            if (tiu->pDb == this)
+            {
+                s.Printf(wxT("(%-20s)     tableID:[%6lu]     pDb:[%p]"),
+                        tiu->tableName, tiu->tableID, wx_static_cast(void*, tiu->pDb));
+                s2.Printf(wxT("Orphaned table found using pDb:[%p]"), wx_static_cast(void*, this));
+                wxLogDebug(s.c_str(),s2.c_str());
+            }
+            pNode = pNode->GetNext();
         }
-        pNode = pNode->GetNext();
     }
 #endif
 
@@ -2306,7 +2310,6 @@
             return false;
         }
 
-        pColInf[colNum].sqlDataType = Sqllen;
         switch (Sqllen)
         {
 #if wxUSE_UNICODE
diff -ru -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxMSW-2007-02-12/src/common/dbtable.cpp wxMSW-dbPatched/src/common/dbtable.cpp
--- wxMSW-2007-02-12/src/common/dbtable.cpp	2007-02-12 04:54:34.000000000 -0300
+++ wxMSW-dbPatched/src/common/dbtable.cpp	2007-02-15 11:06:38.468750000 -0300
@@ -60,6 +60,7 @@
 
 #ifdef __WXDEBUG__
     wxList TablesInUse;
+    wxCriticalSection csTablesInUse;
 #endif
 
 
@@ -195,7 +196,10 @@
     tableInUse->tableName = tblName;
     tableInUse->tableID   = tableID;
     tableInUse->pDb       = pDb;
-    TablesInUse.Append(tableInUse);
+    {
+        wxCriticalSectionLocker lock(csTablesInUse);
+        TablesInUse.Append(tableInUse);
+    }
 #endif
 
     pDb->WriteSqlLog(s);
@@ -321,17 +325,20 @@
         bool found = false;
 
         wxList::compatibility_iterator pNode;
-        pNode = TablesInUse.GetFirst();
-        while (pNode && !found)
         {
-            if (((wxTablesInUse *)pNode->GetData())->tableID == tableID)
+            wxCriticalSectionLocker lock(csTablesInUse);
+            pNode = TablesInUse.GetFirst();
+            while (!found && pNode)
             {
-                found = true;
-                delete (wxTablesInUse *)pNode->GetData();
-                TablesInUse.Erase(pNode);
+                if (((wxTablesInUse *)pNode->GetData())->tableID == tableID)
+                {
+                    found = true;
+                    delete (wxTablesInUse *)pNode->GetData();
+                    TablesInUse.Erase(pNode);
+                }
+                else
+                    pNode = pNode->GetNext();
             }
-            else
-                pNode = pNode->GetNext();
         }
         if (!found)
         {

 	  	 
