Index: include/wx/file.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/file.h,v
retrieving revision 1.39
diff -u -2 -r1.39 file.h
--- include/wx/file.h	2004/10/15 00:22:23	1.39
+++ include/wx/file.h	2004/11/09 23:40:16
@@ -96,12 +96,12 @@
   // read/write (unbuffered)
     // returns number of bytes read or ofsInvalid on error
-  wxFileSize_t Read(void *pBuf, wxFileSize_t nCount);
+  size_t Read(void *pBuf, size_t nCount);
     // returns the number of bytes written
-  wxFileSize_t Write(const void *pBuf, wxFileSize_t nCount);
+  size_t Write(const void *pBuf, size_t nCount);
     // returns true on success
   bool Write(const wxString& s, wxMBConv& conv = wxConvUTF8)
   {
       const wxWX2MBbuf buf = s.mb_str(conv);
-      wxFileSize_t size = strlen(buf);
+      size_t size = strlen(buf);
       return Write((const char *) buf, size) == size;
   }
@@ -109,13 +109,13 @@
   bool Flush();
 
-  // file pointer operations (return ofsInvalid on failure)
-    // move ptr ofs bytes related to start/current off_t/end of file
-  wxFileSize_t Seek(wxFileOffset ofs, wxSeekMode mode = wxFromStart);
+  // file pointer operations (return wxInvalidOffset on failure)
+    // move ptr ofs bytes related to start/current offset/end of file
+  wxFileOffset Seek(wxFileOffset ofs, wxSeekMode mode = wxFromStart);
     // move ptr to ofs bytes before the end
-  wxFileSize_t SeekEnd(wxFileOffset ofs = 0) { return Seek(ofs, wxFromEnd); }
-    // get current off_t
-  wxFileSize_t Tell() const;
+  wxFileOffset SeekEnd(wxFileOffset ofs = 0) { return Seek(ofs, wxFromEnd); }
+    // get current offset
+  wxFileOffset Tell() const;
     // get current file length
-  wxFileSize_t Length() const;
+  wxFileOffset Length() const;
 
   // simple accessors
@@ -165,5 +165,5 @@
 
   // I/O (both functions return true on success, false on failure)
-  bool Write(const void *p, wxFileSize_t n) { return m_file.Write(p, n) == n; }
+  bool Write(const void *p, size_t n) { return m_file.Write(p, n) == n; }
   bool Write(const wxString& str, wxMBConv& conv = wxConvUTF8)
     { return m_file.Write(str, conv); }
Index: include/wx/filefn.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/filefn.h,v
retrieving revision 1.111
diff -u -2 -r1.111 filefn.h
--- include/wx/filefn.h	2004/10/19 21:10:42	1.111
+++ include/wx/filefn.h	2004/11/09 23:40:18
@@ -132,5 +132,4 @@
 #if defined( __WXWINCE__)
     typedef __int64 wxFileOffset;
-    typedef unsigned __int64 wxFileSize_t;
     #define wxFileOffsetFmtSpec _("I64")
     int wxOpen(const wxChar *filename, int oflag, int WXUNUSED(pmode));
@@ -199,9 +198,7 @@
     #if wxHAS_HUGE_FILES
         typedef wxLongLong_t wxFileOffset;
-        typedef unsigned wxLongLong_t wxFileSize_t;
         #define wxFileOffsetFmtSpec wxLongLongFmtSpec
     #else
         typedef off_t wxFileOffset;
-        typedef unsigned long wxFileSize_t;
     #endif
 
@@ -219,10 +216,5 @@
         #endif
     #else
-        #if defined(__WATCOMC__)
-            inline wxFileSize_t wxRead( int handle, void *buffer, wxFileSize_t len )
-                                { return ::read( handle, buffer, (unsigned int)len ); }
-            inline wxFileSize_t wxWrite( int handle, const void *buffer, wxFileSize_t len )
-                                { return ::write( handle, buffer, (unsigned int)len ); }
-        #elif defined(__DMC__)
+        #if defined(__DMC__) || defined(__WATCOMC__)
             #define wxRead        ::read
             #define wxWrite       ::write
@@ -333,8 +325,6 @@
         wxCOMPILE_TIME_ASSERT( sizeof(off_t) == sizeof(wxLongLong_t),
                                 BadFileSizeType );
-        typedef unsigned wxLongLong_t wxFileSize_t;
     #else
         #define wxFileOffsetFmtSpec _T("")
-        typedef unsigned long wxFileSize_t;
     #endif
     // functions
@@ -374,7 +364,7 @@
 // in headers included by more than one primary source
 //
-extern const wxFileSize_t wxInvalidOffset;
+extern const int wxInvalidOffset;
 #else
-const wxFileSize_t wxInvalidOffset = (wxFileSize_t)-1;
+const int wxInvalidOffset = -1;
 #endif
 
Index: include/wx/stream.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/stream.h,v
retrieving revision 1.62
diff -u -2 -r1.62 stream.h
--- include/wx/stream.h	2004/09/26 13:18:41	1.62
+++ include/wx/stream.h	2004/11/09 23:40:20
@@ -24,5 +24,5 @@
 #include "wx/object.h"
 #include "wx/string.h"
-#include "wx/filefn.h"  // for off_t, wxInvalidOffset and wxSeekMode
+#include "wx/filefn.h"  // for wxFileOffset, wxInvalidOffset and wxSeekMode
 
 class WXDLLIMPEXP_BASE wxStreamBase;
Index: samples/console/console.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/console/console.cpp,v
retrieving revision 1.179
diff -u -2 -r1.179 console.cpp
--- samples/console/console.cpp	2004/10/19 18:50:26	1.179
+++ samples/console/console.cpp	2004/11/09 23:40:35
@@ -576,10 +576,10 @@
         wxPuts(_T("File dump:\n----------"));
 
-        static const off_t len = 1024;
+        static const size_t len = 1024;
         wxChar buf[len];
         for ( ;; )
         {
-            off_t nRead = file.Read(buf, len);
-            if ( nRead == wxInvalidOffset )
+            size_t nRead = file.Read(buf, len);
+            if ( nRead == (size_t)wxInvalidOffset )
             {
                 wxPrintf(_T("Failed to read the file."));
Index: src/common/file.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/file.cpp,v
retrieving revision 1.90
diff -u -2 -r1.90 file.cpp
--- src/common/file.cpp	2004/10/15 08:13:09	1.90
+++ src/common/file.cpp	2004/11/09 23:40:41
@@ -145,4 +145,13 @@
 #endif
 
+#if !defined __UNIX__ && !defined __DJGPP__
+    #ifdef __WXWINCE__
+        typedef int ssize_t;
+    #else
+        typedef ptrdiff_t ssize_t;
+    #endif
+#endif
+wxCOMPILE_TIME_ASSERT(sizeof(ssize_t) == sizeof(size_t), ssize_t_wrong_size);
+
 // ============================================================================
 // implementation of wxFile
@@ -299,13 +308,14 @@
 
 // read
-wxFileSize_t wxFile::Read(void *pBuf, wxFileSize_t nCount)
+size_t wxFile::Read(void *pBuf, size_t nCount)
 {
     wxCHECK( (pBuf != NULL) && IsOpened(), 0 );
 
-    wxFileSize_t iRc = wxRead(m_fd, pBuf, nCount);
+    ssize_t iRc = wxRead(m_fd, pBuf, nCount);
 
-    if ( iRc == wxInvalidOffset )
+    if ( iRc == -1 )
     {
         wxLogSysError(_("can't read from file descriptor %d"), m_fd);
+        return (size_t)wxInvalidOffset;
     }
 
@@ -314,11 +324,11 @@
 
 // write
-wxFileSize_t wxFile::Write(const void *pBuf, wxFileSize_t nCount)
+size_t wxFile::Write(const void *pBuf, size_t nCount)
 {
     wxCHECK( (pBuf != NULL) && IsOpened(), 0 );
 
-    wxFileSize_t iRc = wxWrite(m_fd, pBuf, nCount);
+    ssize_t iRc = wxWrite(m_fd, pBuf, nCount);
 
-    if ( iRc == wxInvalidOffset )
+    if ( iRc == -1 )
     {
         wxLogSysError(_("can't write to file descriptor %d"), m_fd);
@@ -327,5 +337,5 @@
     }
 
-    return (wxFileSize_t)iRc;
+    return iRc;
 }
 
@@ -353,5 +363,5 @@
 
 // seek
-wxFileSize_t wxFile::Seek(wxFileOffset ofs, wxSeekMode mode)
+wxFileOffset wxFile::Seek(wxFileOffset ofs, wxSeekMode mode)
 {
     wxASSERT( IsOpened() );
@@ -375,10 +385,10 @@
     }
 
-    if (ofs == (wxFileOffset) wxInvalidOffset)
+    if (ofs == wxInvalidOffset)
     {
         wxLogSysError(_("can't seek on file descriptor %d, large files support is not enabled."), m_fd);
         return wxInvalidOffset;
     }
-    wxFileSize_t iRc = wxSeek(m_fd, ofs, origin);
+    wxFileOffset iRc = wxSeek(m_fd, ofs, origin);
     if ( iRc == wxInvalidOffset )
     {
@@ -390,9 +400,9 @@
 
 // get current file offset
-wxFileSize_t wxFile::Tell() const
+wxFileOffset wxFile::Tell() const
 {
     wxASSERT( IsOpened() );
 
-    wxFileSize_t iRc = wxTell(m_fd);
+    wxFileOffset iRc = wxTell(m_fd);
     if ( iRc == wxInvalidOffset )
     {
@@ -404,12 +414,12 @@
 
 // get current file length
-wxFileSize_t wxFile::Length() const
+wxFileOffset wxFile::Length() const
 {
     wxASSERT( IsOpened() );
 
-    wxFileSize_t iRc = Tell();
+    wxFileOffset iRc = Tell();
     if ( iRc != wxInvalidOffset ) {
         // have to use const_cast :-(
-        wxFileSize_t iLen = ((wxFile *)this)->SeekEnd();
+        wxFileOffset iLen = ((wxFile *)this)->SeekEnd();
         if ( iLen != wxInvalidOffset ) {
             // restore old position
@@ -436,9 +446,9 @@
     wxASSERT( IsOpened() );
 
-    wxFileSize_t iRc;
+    wxFileOffset iRc;
 
 #if defined(__DOS__) || defined(__UNIX__) || defined(__GNUWIN32__) || defined( __MWERKS__ ) || defined(__SALFORDC__)
     // @@ this doesn't work, of course, on unseekable file descriptors
-    wxFileSize_t ofsCur = Tell(),
+    wxFileOffset ofsCur = Tell(),
     ofsMax = Length();
     if ( ofsCur == wxInvalidOffset || ofsMax == wxInvalidOffset )
Index: src/common/filefn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/filefn.cpp,v
retrieving revision 1.215
diff -u -2 -r1.215 filefn.cpp
--- src/common/filefn.cpp	2004/10/15 00:00:51	1.215
+++ src/common/filefn.cpp	2004/11/09 23:40:46
@@ -105,5 +105,5 @@
 // in headers included by more than one primary source
 //
-const wxFileSize_t wxInvalidOffset = (wxFileSize_t)-1;
+const int wxInvalidOffset = -1;
 #endif
 
Index: src/common/gifdecod.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/gifdecod.cpp,v
retrieving revision 1.34
diff -u -2 -r1.34 gifdecod.cpp
--- src/common/gifdecod.cpp	2004/10/17 21:39:04	1.34
+++ src/common/gifdecod.cpp	2004/11/09 23:40:49
@@ -622,5 +622,5 @@
         return false;
 
-    m_f->SeekI(-(off_t)WXSIZEOF(buf), wxFromCurrent);
+    m_f->SeekI(-(wxFileOffset)WXSIZEOF(buf), wxFromCurrent);
 
     return memcmp(buf, "GIF", WXSIZEOF(buf)) == 0;
Index: src/common/imagbmp.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/imagbmp.cpp,v
retrieving revision 1.50
diff -u -2 -r1.50 imagbmp.cpp
--- src/common/imagbmp.cpp	2004/10/18 05:55:58	1.50
+++ src/common/imagbmp.cpp	2004/11/09 23:40:52
@@ -845,5 +845,5 @@
     wxInt8          bbuf[4];
 
-    wxFileSize_t offset = 0; // keep gcc quiet
+    wxFileOffset offset = 0; // keep gcc quiet
     if ( IsBmp )
     {
Index: src/common/image.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/image.cpp,v
retrieving revision 1.183
diff -u -2 -r1.183 image.cpp
--- src/common/image.cpp	2004/10/18 05:55:59	1.183
+++ src/common/image.cpp	2004/11/09 23:40:56
@@ -1482,5 +1482,5 @@
 bool wxImageHandler::CallDoCanRead(wxInputStream& stream)
 {
-    wxFileSize_t posOld = stream.TellI();
+    wxFileOffset posOld = stream.TellI();
     if ( posOld == wxInvalidOffset )
     {
Index: src/common/imagiff.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/imagiff.cpp,v
retrieving revision 1.11
diff -u -2 -r1.11 imagiff.cpp
--- src/common/imagiff.cpp	2004/09/16 18:13:31	1.11
+++ src/common/imagiff.cpp	2004/11/09 23:40:58
@@ -240,5 +240,5 @@
         return false;
 
-    m_f->SeekI(-(off_t)WXSIZEOF(buf), wxFromCurrent);
+    m_f->SeekI(-(wxFileOffset)WXSIZEOF(buf), wxFromCurrent);
 
     return (memcmp(buf, "FORM", 4) == 0) && (memcmp(buf+8, "ILBM", 4) == 0);
@@ -340,5 +340,5 @@
 
     // compute file length
-    off_t currentPos = m_f->TellI();
+    wxFileOffset currentPos = m_f->TellI();
     m_f->SeekI(0, wxFromEnd);
     long filesize = m_f->TellI();
Index: src/common/imagtiff.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/imagtiff.cpp,v
retrieving revision 1.29
diff -u -2 -r1.29 imagtiff.cpp
--- src/common/imagtiff.cpp	2004/10/17 21:39:05	1.29
+++ src/common/imagtiff.cpp	2004/11/09 23:40:58
@@ -90,5 +90,5 @@
     }
 
-    return (toff_t)stream->SeekI( (off_t)off, mode );
+    return (toff_t)stream->SeekI( (wxFileOffset)off, mode );
 }
 
@@ -106,5 +106,5 @@
     }
 
-    return (toff_t)stream->SeekO( (off_t)off, mode );
+    return (toff_t)stream->SeekO( (wxFileOffset)off, mode );
 }
 
Index: src/common/intl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/intl.cpp,v
retrieving revision 1.143
diff -u -2 -r1.143 intl.cpp
--- src/common/intl.cpp	2004/10/16 11:31:27	1.143
+++ src/common/intl.cpp	2004/11/09 23:41:08
@@ -1121,5 +1121,5 @@
 
   // get the file size (assume it is less than 4Gb...)
-  wxFileSize_t nSize = fileMsg.Length();
+  wxFileOffset nSize = fileMsg.Length();
   if ( nSize == wxInvalidOffset )
     return false;
@@ -1127,5 +1127,5 @@
   // read the whole file in memory
   m_pData = new size_t8[nSize];
-  if ( fileMsg.Read(m_pData, nSize) != nSize ) {
+  if ( fileMsg.Read(m_pData, nSize) != nSize + (size_t)0 ) {
     wxDELETEA(m_pData);
     return false;
@@ -1133,5 +1133,5 @@
 
   // examine header
-  bool bValid = nSize > sizeof(wxMsgCatalogHeader);
+  bool bValid = nSize + (size_t)0 > sizeof(wxMsgCatalogHeader);
 
   wxMsgCatalogHeader *pHeader = (wxMsgCatalogHeader *)m_pData;
Index: src/common/stream.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/stream.cpp,v
retrieving revision 1.89
diff -u -2 -r1.89 stream.cpp
--- src/common/stream.cpp	2004/11/02 07:13:08	1.89
+++ src/common/stream.cpp	2004/11/09 23:41:10
@@ -577,8 +577,8 @@
                 wxFAIL_MSG( _T("invalid seek mode") );
 
-                return (wxFileOffset) wxInvalidOffset;
+                return wxInvalidOffset;
         }
         if (diff < 0 || diff > last_access)
-            return (wxFileOffset) wxInvalidOffset;
+            return wxInvalidOffset;
         SetIntPosition(diff);
         return diff;
@@ -617,10 +617,10 @@
     }
 
-    return (wxFileOffset) wxInvalidOffset;
+    return wxInvalidOffset;
 }
 
 wxFileOffset wxStreamBuffer::Tell() const
 {
-    wxFileSize_t pos;
+    wxFileOffset pos;
 
     // ask the stream for position if we have a real one
@@ -629,5 +629,5 @@
         pos = m_stream->OnSysTell();
         if ( pos == wxInvalidOffset )
-            return (wxFileOffset) wxInvalidOffset;
+            return wxInvalidOffset;
     }
     else // no associated stream
@@ -660,10 +660,10 @@
 wxFileOffset wxStreamBase::OnSysSeek(wxFileOffset WXUNUSED(seek), wxSeekMode WXUNUSED(mode))
 {
-    return (wxFileOffset) wxInvalidOffset;
+    return wxInvalidOffset;
 }
 
 wxFileOffset wxStreamBase::OnSysTell() const
 {
-    return (wxFileOffset) wxInvalidOffset;
+    return wxInvalidOffset;
 }
 
@@ -890,5 +890,5 @@
 wxFileOffset wxInputStream::TellI() const
 {
-    wxFileSize_t pos = OnSysTell();
+    wxFileOffset pos = OnSysTell();
 
     if (pos != wxInvalidOffset)
@@ -991,5 +991,5 @@
         default:
             wxFAIL_MSG( _T("invalid seek mode") );
-            return (wxFileOffset) wxInvalidOffset;
+            return wxInvalidOffset;
     }
 
@@ -1123,5 +1123,5 @@
 wxFileOffset wxBufferedInputStream::TellI() const
 {
-    wxFileSize_t pos = m_i_streambuf->Tell();
+    wxFileOffset pos = m_i_streambuf->Tell();
 
     if (pos != wxInvalidOffset)
Index: src/common/textfile.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/textfile.cpp,v
retrieving revision 1.46
diff -u -2 -r1.46 textfile.cpp
--- src/common/textfile.cpp	2004/10/15 00:34:21	1.46
+++ src/common/textfile.cpp	2004/11/09 23:41:11
@@ -98,5 +98,5 @@
     char ch, chLast = '\0';
     char buf[1024];
-    wxFileSize_t nRead;
+    size_t nRead;
 
     strPtr = strBuf = new char[1024];
@@ -106,5 +106,5 @@
     {
         nRead = m_file.Read(buf, WXSIZEOF(buf));
-        if ( nRead == wxInvalidOffset )
+        if ( nRead == (size_t)wxInvalidOffset )
         {
             // read error (error message already given in wxFile::Read)
@@ -113,5 +113,5 @@
         }
 
-        for (wxFileSize_t n = 0; n < nRead; n++)
+        for (size_t n = 0; n < nRead; n++)
         {
             ch = buf[n];
Index: src/common/wfstream.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/wfstream.cpp,v
retrieving revision 1.27
diff -u -2 -r1.27 wfstream.cpp
--- src/common/wfstream.cpp	2004/10/15 00:34:21	1.27
+++ src/common/wfstream.cpp	2004/11/09 23:41:11
@@ -70,8 +70,8 @@
 size_t wxFileInputStream::OnSysRead(void *buffer, size_t size)
 {
-    wxFileSize_t ret = m_file->Read(buffer, size);
+    size_t ret = m_file->Read(buffer, size);
 
     // NB: we can't use a switch here because HP-UX CC doesn't allow
-    //     switching over long long (which off_t is in 64bit mode)
+    //     switching over long long (which size_t is in 64bit mode)
 
     if ( !ret )
@@ -80,5 +80,5 @@
         m_lasterror = wxSTREAM_EOF;
     }
-    else if ( ret == wxInvalidOffset )
+    else if ( ret == (size_t)wxInvalidOffset )
     {
         m_lasterror = wxSTREAM_READ_ERROR;
@@ -235,9 +235,9 @@
 size_t wxFFileInputStream::OnSysRead(void *buffer, size_t size)
 {
-    wxFileSize_t ret = m_file->Read(buffer, size);
+    size_t ret = m_file->Read(buffer, size);
 
     if (m_file->Eof())
         m_lasterror = wxSTREAM_EOF;
-    if (ret == wxInvalidOffset)
+    if (ret == (size_t)wxInvalidOffset)
     {
         m_lasterror = wxSTREAM_READ_ERROR;
@@ -253,5 +253,5 @@
 #pragma message disable intsignchange
 #endif
-   return ( m_file->Seek(pos, mode) ? m_file->Tell() : wxInvalidOffset );
+   return ( m_file->Seek(pos, mode) ? (wxFileOffset)m_file->Tell() : wxInvalidOffset );
 #ifdef __VMS
 #pragma message enable intsignchange
@@ -332,5 +332,5 @@
 #pragma message disable intsignchange
 #endif
-    return ( m_file->Seek(pos, mode) ? m_file->Tell() : wxInvalidOffset );
+    return ( m_file->Seek(pos, mode) ? (wxFileOffset)m_file->Tell() : wxInvalidOffset );
 #ifdef __VMS
 #pragma message enable intsignchange
Index: src/common/xpmdecod.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/xpmdecod.cpp,v
retrieving revision 1.40
diff -u -2 -r1.40 xpmdecod.cpp
--- src/common/xpmdecod.cpp	2004/10/17 21:39:05	1.40
+++ src/common/xpmdecod.cpp	2004/11/09 23:41:14
@@ -128,5 +128,5 @@
         return false;
 
-    stream.SeekI(-(off_t)WXSIZEOF(buf), wxFromCurrent);
+    stream.SeekI(-(wxFileOffset)WXSIZEOF(buf), wxFromCurrent);
 
     return memcmp(buf, "/* XPM */", WXSIZEOF(buf)) == 0;
Index: src/html/chm.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/html/chm.cpp,v
retrieving revision 1.5
diff -u -2 -r1.5 chm.cpp
--- src/html/chm.cpp	2004/09/27 19:15:03	1.5
+++ src/html/chm.cpp	2004/11/09 23:41:17
@@ -378,11 +378,11 @@
     virtual size_t OnSysRead(void *buffer, size_t bufsize);
     /// See wxInputStream
-    virtual off_t OnSysSeek(off_t seek, wxSeekMode mode);
+    virtual wxFileOffset OnSysSeek(wxFileOffset seek, wxSeekMode mode);
     /// See wxInputStream
-    virtual off_t OnSysTell() const { return m_pos; }
+    virtual wxFileOffset OnSysTell() const { return m_pos; }
 
 private:
     size_t m_size;
-    off_t m_pos;
+    wxFileOffset m_pos;
     bool m_simulateHHP;
 
@@ -502,5 +502,5 @@
 
 
-off_t wxChmInputStream::OnSysSeek(off_t seek, wxSeekMode mode)
+wxFileOffset wxChmInputStream::OnSysSeek(wxFileOffset seek, wxSeekMode mode)
 {
     wxString mode_str = wxEmptyString;
@@ -513,5 +513,5 @@
     m_lasterror = wxSTREAM_NO_ERROR;
 
-    off_t nextpos;
+    wxFileOffset nextpos;
 
     switch ( mode )
Index: src/msw/gdiimage.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/gdiimage.cpp,v
retrieving revision 1.45
diff -u -2 -r1.45 gdiimage.cpp
--- src/msw/gdiimage.cpp	2004/08/26 08:46:18	1.45
+++ src/msw/gdiimage.cpp	2004/11/09 23:41:21
@@ -649,5 +649,5 @@
     if (nColors < 1
       || file.Read(pBmpInfo->bmiColors, nColors * sizeof(RGBQUAD))
-        == (off_t)(nColors * sizeof(RGBQUAD))) {
+        == nColors * sizeof(RGBQUAD)) {
 
       // So how big the bitmap surface is.
Index: src/msw/urlmsw.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/urlmsw.cpp,v
retrieving revision 1.4
diff -u -2 -r1.4 urlmsw.cpp
--- src/msw/urlmsw.cpp	2004/09/07 11:11:05	1.4
+++ src/msw/urlmsw.cpp	2004/11/09 23:41:21
@@ -123,7 +123,7 @@
     void Attach(HINTERNET hFile);
 
-    off_t SeekI( off_t WXUNUSED(pos), wxSeekMode WXUNUSED(mode) )
+    wxFileOffset SeekI( wxFileOffset WXUNUSED(pos), wxSeekMode WXUNUSED(mode) )
         { return -1; }
-    off_t TellI() const
+    wxFileOffset TellI() const
         { return -1; }
 
Index: src/unix/snglinst.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/snglinst.cpp,v
retrieving revision 1.14
diff -u -2 -r1.14 snglinst.cpp
--- src/unix/snglinst.cpp	2004/10/15 00:34:12	1.14
+++ src/unix/snglinst.cpp	2004/11/09 23:41:24
@@ -278,6 +278,6 @@
 
     char buf[256];
-    wxFileSize_t count = file.Read(buf, WXSIZEOF(buf));
-    if ( count == wxInvalidOffset )
+    size_t count = file.Read(buf, WXSIZEOF(buf));
+    if ( count == (size_t)wxInvalidOffset )
     {
         wxLogError(_("Failed to read PID from lock file."));
Index: tests/streams/bstream.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/tests/streams/bstream.h,v
retrieving revision 1.3
diff -u -2 -r1.3 bstream.h
--- tests/streams/bstream.h	2004/04/18 19:26:20	1.3
+++ tests/streams/bstream.h	2004/11/09 23:41:26
@@ -209,5 +209,5 @@
         if (!m_bSimpleTellITest)
         {
-            off_t pos = stream_in.SeekI(5, wxFromStart);
+            wxFileOffset pos = stream_in.SeekI(5, wxFromStart);
             CPPUNIT_ASSERT(stream_in.TellI() == pos);
             (void)stream_in.GetC();
@@ -270,6 +270,6 @@
 
         char *buf = "Some text";
-        off_t i;
-        off_t len = (off_t) strlen(buf);
+        int i;
+        int len = strlen(buf);
         for (i = 0; i < len; i++)
             stream_out.PutC(buf[i]);
@@ -286,5 +286,5 @@
         // Do the buffer version.
         char *buf = "Some text";
-        off_t len = (off_t) strlen(buf);
+        int len = strlen(buf);
         (void)stream_out.Write(buf, len);
         CPPUNIT_ASSERT(stream_out.TellO() == len);
Index: utils/HelpGen/src/HelpGen.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/utils/HelpGen/src/HelpGen.cpp,v
retrieving revision 1.31
diff -u -2 -r1.31 HelpGen.cpp
--- utils/HelpGen/src/HelpGen.cpp	2004/10/05 15:38:29	1.31
+++ utils/HelpGen/src/HelpGen.cpp	2004/11/09 23:41:32
@@ -1418,5 +1418,5 @@
     buf[len] = '\0';
 
-    if ( (wxFileOffset)file.Read(buf, len) == wxInvalidOffset ) {
+    if ( file.Read(buf, len) == (size_t)wxInvalidOffset ) {
         delete [] buf;
 
@@ -1989,5 +1989,5 @@
     buf[len] = '\0';
 
-    if ( (wxFileOffset)file.Read(buf, len) == wxInvalidOffset ) {
+    if ( file.Read(buf, len) == (size_t)wxInvalidOffset ) {
         delete [] buf;
 
Index: utils/wxOLE/gtk/wxole.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/utils/wxOLE/gtk/wxole.cpp,v
retrieving revision 1.3
diff -u -2 -r1.3 wxole.cpp
--- utils/wxOLE/gtk/wxole.cpp	2004/05/25 11:20:35	1.3
+++ utils/wxOLE/gtk/wxole.cpp	2004/11/09 23:41:34
@@ -80,6 +80,6 @@
 
   size_t OnSysRead(void *buffer, size_t size);
-  off_t OnSysSeek(off_t pos, wxSeekMode mode);
-  off_t OnSysTell() const;
+  wxFileOffset OnSysSeek(wxFileOffset pos, wxSeekMode mode);
+  wxFileOffset OnSysTell() const;
 };
 
@@ -161,5 +161,5 @@
 }
 
-off_t wxOleInputStream::OnSysSeek( off_t pos, wxSeekMode mode )
+wxFileOffset wxOleInputStream::OnSysSeek( wxFileOffset pos, wxSeekMode mode )
 {
     CORBA_Environment ev;
@@ -171,5 +171,5 @@
 }
 
-off_t wxOleInputStream::OnSysTell() const
+wxFileOffset wxOleInputStream::OnSysTell() const
 {
     return 0;  /* oh well */

 	  	 
