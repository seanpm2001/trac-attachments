--- wxWidgets.orig/include/wx/combo.h	Tue Sep  5 21:31:31 2006
+++ wxWidgets/include/wx/combo.h	Tue Sep 12 21:00:58 2006
@@ -294,4 +294,10 @@
     }
 
+    // Returns area covered by the text field.
+    const wxRect& GetTextRect() const
+    {
+        return m_tcArea;
+    }
+
     //
     // Utilies needed by the popups or native implementations
@@ -371,7 +377,5 @@
     bool HandleButtonMouseEvent( wxMouseEvent& event, int flags );
 
-    // Conversion to double-clicks and some basic filtering
     // returns true if event was consumed or filtered (event type is also set to 0 in this case)
-    //bool PreprocessMouseEvent( wxMouseEvent& event, bool isOnButtonArea );
     bool PreprocessMouseEvent( wxMouseEvent& event, int flags );
 
@@ -453,7 +457,4 @@
     wxEvtHandler*           m_popupExtraHandler;
 
-    // needed for "instant" double-click handling
-    wxLongLong              m_timeLastMouseUp;
-
     // used to prevent immediate re-popupping incase closed popup
     // by clicking on the combo control (needed because of inconsistent
@@ -518,7 +519,4 @@
     // is the popup window currenty shown?
     bool                    m_isPopupShown;
-
-    // Set to 1 on mouse down, 0 on mouse up. Used to eliminate down-less mouse ups.
-    bool                    m_downReceived;
 
 private:
--- wxWidgets.orig/src/common/combocmn.cpp	Sat Sep  9 14:57:19 2006
+++ wxWidgets/src/common/combocmn.cpp	Tue Sep 12 21:00:58 2006
@@ -647,5 +647,4 @@
     m_absIndent = -1;
     m_iFlags = 0;
-    m_downReceived = false;
     m_timeCanAcceptClick = 0;
 }
@@ -1347,9 +1346,7 @@
 }
 
-// Conversion to double-clicks and some basic filtering
 // returns true if event was consumed or filtered
-//bool wxComboCtrlBase::PreprocessMouseEvent( wxMouseEvent& event, bool isOnButtonArea )
 bool wxComboCtrlBase::PreprocessMouseEvent( wxMouseEvent& event,
-                                               int flags )
+                                            int WXUNUSED(flags) )
 {
     wxLongLong t = ::wxGetLocalTimeMillis();
@@ -1365,46 +1362,4 @@
 #endif
 
-    //
-    // Generate our own double-clicks
-    // (to allow on-focus dc-event on double-clicks instead of triple-clicks)
-    if ( (m_windowStyle & wxCC_SPECIAL_DCLICK) &&
-         !m_isPopupShown &&
-         //!(handlerFlags & wxCC_MF_ON_BUTTON) )
-         !(flags & wxCC_MF_ON_BUTTON) )
-    {
-        if ( evtType == wxEVT_LEFT_DOWN )
-        {
-            // Set value to avoid up-events without corresponding downs
-            m_downReceived = true;
-        }
-        else if ( evtType == wxEVT_LEFT_DCLICK )
-        {
-            // We'll make our own double-clicks
-            //evtType = 0;
-            event.SetEventType(0);
-            return true;
-        }
-        else if ( evtType == wxEVT_LEFT_UP )
-        {
-            if ( m_downReceived || m_timeLastMouseUp == 1 )
-            {
-                wxLongLong timeFromLastUp = (t-m_timeLastMouseUp);
-
-                if ( timeFromLastUp < DOUBLE_CLICK_CONVERSION_TRESHOLD )
-                {
-                    //type = wxEVT_LEFT_DCLICK;
-                    event.SetEventType(wxEVT_LEFT_DCLICK);
-                    m_timeLastMouseUp = 1;
-                }
-                else
-                {
-                    m_timeLastMouseUp = t;
-                }
-
-                //m_downReceived = false;
-            }
-        }
-    }
-
     // Filter out clicks on button immediately after popup dismiss (Windows like behaviour)
     if ( evtType == wxEVT_LEFT_DOWN && t < m_timeCanAcceptClick )
@@ -1512,10 +1467,4 @@
     if ( event.GetEventType() == wxEVT_SET_FOCUS )
     {
-        // First click is the first part of double-click
-        // Some platforms don't generate down-less mouse up-event
-        // (Windows does, GTK+2 doesn't), so that's why we have
-        // to do this.
-        m_timeLastMouseUp = ::wxGetLocalTimeMillis();
-
         if ( m_text && m_text != ::wxWindow::FindFocus() )
             m_text->SetFocus();

 	  	 
