Index: wxWindows/include/wx/filedlg.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/filedlg.h,v
retrieving revision 1.22
diff -b -u -2 -r1.22 filedlg.h
--- wxWindows/include/wx/filedlg.h	2003/06/14 13:31:36	1.22
+++ wxWindows/include/wx/filedlg.h	2003/06/23 20:07:31
@@ -19,6 +19,8 @@
 #endif
 
+#include "wx/dialog.h"
+
 //----------------------------------------------------------------------------
-// wxFileDialog data and generic functions
+// wxFileDialog data
 //----------------------------------------------------------------------------
 
@@ -36,13 +38,72 @@
 WXDLLEXPORT_DATA(extern const wxChar*) wxFileSelectorPromptStr;
 WXDLLEXPORT_DATA(extern const wxChar*) wxFileSelectorDefaultWildcardStr;
+
+//----------------------------------------------------------------------------
+// wxFileDialogBase
+//----------------------------------------------------------------------------
+
+class WXDLLEXPORT wxFileDialogBase: public wxDialog
+{
+public:
+    wxFileDialogBase () {}
+
+    wxFileDialogBase(wxWindow *parent,
+                 const wxString& message = wxFileSelectorPromptStr,
+                 const wxString& defaultDir = wxEmptyString,
+                 const wxString& defaultFile = wxEmptyString,
+                 const wxString& wildCard = wxFileSelectorDefaultWildcardStr,
+                 long style = 0,
+                 const wxPoint& pos = wxDefaultPosition);
 
-// Parses the filterStr, returning the number of filters.
-// Returns 0 if none or if there's a problem, they arrays will contain an equal
-// number of items found before the error.
-// filterStr is in the form:
-// "All files (*.*)|*.*|Image Files (*.jpeg *.png)|*.jpg;*.png"
-extern int wxParseFileFilter(const wxString& filterStr,
+    virtual void SetMessage(const wxString& message) { m_message = message; }
+    virtual void SetPath(const wxString& path) { m_path = path; }
+    virtual void SetDirectory(const wxString& dir) { m_dir = dir; }
+    virtual void SetFilename(const wxString& name) { m_fileName = name; }
+    virtual void SetWildcard(const wxString& wildCard) { m_wildCard = wildCard; }
+    virtual void SetStyle(long style) { m_dialogStyle = style; }
+    virtual void SetFilterIndex(int filterIndex) { m_filterIndex = filterIndex; }
+
+    virtual wxString GetMessage() const { return m_message; }
+    virtual wxString GetPath() const { return m_path; }
+    virtual void GetPaths(wxArrayString& paths) const { paths.Empty(); paths.Add(m_path); }
+    virtual wxString GetDirectory() const { return m_dir; }
+    virtual wxString GetFilename() const { return m_fileName; }
+    virtual void GetFilenames(wxArrayString& files) const { files.Empty(); files.Add(m_fileName); }
+    virtual wxString GetWildcard() const { return m_wildCard; }
+    virtual long GetStyle() const { return m_dialogStyle; }
+    virtual int GetFilterIndex() const { return m_filterIndex; }
+
+    // Utility functions
+
+    // Parses the wildCard, returning the number of filters.
+    // Returns 0 if none or if there's a problem,
+    // The arrays will contain an equal number of items found before the error.
+    // wildCard is in the form:
+    // "All files (*)|*|Image Files (*.jpeg *.png)|*.jpg;*.png"
+    static int ParseWildcard(const wxString& wildCard,
                              wxArrayString& descriptions,
                              wxArrayString& filters);
+
+    // Append first extension to filePath from a ';' separated extensionList
+    // if filePath = "path/foo.bar" just return it as is
+    // if filePath = "foo[.]" and extensionList = "*.jpg;*.png" return "foo.jpg"
+    // if the extension is "*.j?g" (has wildcards) or "jpg" then return filePath
+    static wxString AppendExtension(const wxString &filePath,
+                                    const wxString &extensionList);
+
+protected:
+    wxString      m_message;
+    long          m_dialogStyle;
+    wxWindow     *m_parent;
+    wxString      m_dir;
+    wxString      m_path;       // Full path
+    wxString      m_fileName;
+    wxString      m_wildCard;
+    int           m_filterIndex;
+
+private:
+    DECLARE_DYNAMIC_CLASS(wxFileDialogBase)
+    DECLARE_NO_COPY_CLASS(wxFileDialogBase)
+};
 
 //----------------------------------------------------------------------------
Index: wxWindows/include/wx/msw/filedlg.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/msw/filedlg.h,v
retrieving revision 1.13
diff -b -u -2 -r1.13 filedlg.h
--- wxWindows/include/wx/msw/filedlg.h	2003/06/14 13:31:37	1.13
+++ wxWindows/include/wx/msw/filedlg.h	2003/06/23 20:07:32
@@ -17,11 +17,9 @@
 #endif
 
-#include "wx/dialog.h"
+//-------------------------------------------------------------------------
+// wxFileDialog
+//-------------------------------------------------------------------------
 
-/*
- * File selector
- */
-
-class WXDLLEXPORT wxFileDialog: public wxDialog
+class WXDLLEXPORT wxFileDialog: public wxFileDialogBase
 {
 public:
@@ -33,37 +31,13 @@
                  long style = 0,
                  const wxPoint& pos = wxDefaultPosition);
-
-    void SetMessage(const wxString& message) { m_message = message; }
-    void SetPath(const wxString& path);
-    void SetDirectory(const wxString& dir) { m_dir = dir; }
-    void SetFilename(const wxString& name) { m_fileName = name; }
-    void SetWildcard(const wxString& wildCard) { m_wildCard = wildCard; }
-    void SetStyle(long style) { m_dialogStyle = style; }
-    void SetFilterIndex(int filterIndex) { m_filterIndex = filterIndex; }
 
-    wxString GetMessage() const { return m_message; }
-    wxString GetPath() const { return m_path; }
-    void GetPaths(wxArrayString& paths) const;
-    wxString GetDirectory() const { return m_dir; }
-    wxString GetFilename() const { return m_fileName; }
-    void GetFilenames(wxArrayString& files) const { files = m_fileNames; }
-    wxString GetWildcard() const { return m_wildCard; }
-    long GetStyle() const { return m_dialogStyle; }
-    int GetFilterIndex() const { return m_filterIndex ; }
+    virtual void SetPath(const wxString& path);
+    virtual void GetPaths(wxArrayString& paths) const;
 
     virtual int ShowModal();
 
-protected:
-    wxString      m_message;
-    long          m_dialogStyle;
-    wxWindow *    m_parent;
-    wxString      m_dir;
-    wxString      m_path;       // Full path
-    wxString      m_fileName;
+private:
     wxArrayString m_fileNames;
-    wxString      m_wildCard;
-    int           m_filterIndex;
 
-private:
     DECLARE_DYNAMIC_CLASS(wxFileDialog)
     DECLARE_NO_COPY_CLASS(wxFileDialog)
Index: wxWindows/include/wx/gtk/filedlg.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/gtk/filedlg.h,v
retrieving revision 1.15
diff -b -u -2 -r1.15 filedlg.h
--- wxWindows/include/wx/gtk/filedlg.h	2003/06/14 13:31:38	1.15
+++ wxWindows/include/wx/gtk/filedlg.h	2003/06/23 20:07:32
@@ -16,11 +16,9 @@
 #endif
 
-#include "wx/dialog.h"
-
 //-------------------------------------------------------------------------
-// File selector
+// wxFileDialog
 //-------------------------------------------------------------------------
 
-class wxFileDialog: public wxDialog
+class wxFileDialog: public wxFileDialogBase
 {
 public:
@@ -29,35 +27,11 @@
     wxFileDialog(wxWindow *parent,
                  const wxString& message = wxFileSelectorPromptStr,
-                 const wxString& defaultDir = "",
-                 const wxString& defaultFile = "",
+                 const wxString& defaultDir = wxEmptyString,
+                 const wxString& defaultFile = wxEmptyString,
                  const wxString& wildCard = wxFileSelectorDefaultWildcardStr,
                  long style = 0,
                  const wxPoint& pos = wxDefaultPosition);
-
-    void SetMessage(const wxString& message) { m_message = message; }
-    void SetPath(const wxString& path);
-    void SetDirectory(const wxString& dir) { m_dir = dir; }
-    void SetFilename(const wxString& name) { m_fileName = name; }
-    void SetWildcard(const wxString& wildCard) { m_wildCard = wildCard; }
-    void SetStyle(long style) { m_dialogStyle = style; }
-    void SetFilterIndex(int filterIndex) { m_filterIndex = filterIndex; }
-
-    wxString GetMessage() const { return m_message; }
-    wxString GetPath() const { return m_path; }
-    wxString GetDirectory() const { return m_dir; }
-    wxString GetFilename() const { return m_fileName; }
-    wxString GetWildcard() const { return m_wildCard; }
-    long GetStyle() const { return m_dialogStyle; }
-    int GetFilterIndex() const { return m_filterIndex ; }
     
-protected:    
-    wxString    m_message;
-    long        m_dialogStyle;
-    wxWindow *  m_parent;
-    wxString    m_dir;
-    wxString    m_path; // Full path
-    wxString    m_fileName;
-    wxString    m_wildCard;
-    int         m_filterIndex;
+    virtual void SetPath(const wxString& path);
     
 private:
Index: wxWindows/include/wx/os2/FILEDLG.H
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/os2/FILEDLG.H,v
retrieving revision 1.8
diff -b -u -2 -r1.8 FILEDLG.H
--- wxWindows/include/wx/os2/FILEDLG.H	2003/06/14 13:31:39	1.8
+++ wxWindows/include/wx/os2/FILEDLG.H	2003/06/23 20:07:32
@@ -13,11 +13,9 @@
 #define _WX_FILEDLG_H_
 
-#include "wx/dialog.h"
+//-------------------------------------------------------------------------
+// wxFileDialog
+//-------------------------------------------------------------------------
 
-/*
- * File selector
- */
-
-class WXDLLEXPORT wxFileDialog: public wxDialog
+class WXDLLEXPORT wxFileDialog: public wxFileDialogBase
 {
 DECLARE_DYNAMIC_CLASS(wxFileDialog)
@@ -25,42 +23,17 @@
     wxFileDialog( wxWindow*       pParent
                  ,const wxString& rsMessage = wxFileSelectorPromptStr
-                 ,const wxString& rsDefaultDir = ""
-                 ,const wxString& rsDefaultFile = ""
+                 ,const wxString& rsDefaultDir = wxEmptyString
+                 ,const wxString& rsDefaultFile = wxEmptyString
                  ,const wxString& rsWildCard = wxFileSelectorDefaultWildcardStr
                  ,long            lStyle = 0
                  ,const wxPoint&  rPos = wxDefaultPosition
                 );
-
-    inline void SetMessage(const wxString& rsMessage) { m_sMessage = rsMessage; }
-    inline void SetPath(const wxString& rsPath) { m_sPath = rsPath; }
-    inline void SetDirectory(const wxString& rsDir) { m_sDir = rsDir; }
-    inline void SetFilename(const wxString& rsName) { m_sFileName = rsName; }
-    inline void SetWildcard(const wxString& rsWildCard) { m_sWildCard = rsWildCard; }
-    inline void SetStyle(long lStyle) { m_lDialogStyle = lStyle; }
-    inline void SetFilterIndex(int nFilterIndex) { m_nFilterIndex = nFilterIndex; }
 
-    inline wxString GetMessage(void) const { return m_sMessage; }
-    inline wxString GetPath(void) const { return m_sPath; }
-           void     GetPaths(wxArrayString& rasPath) const;
-    inline wxString GetDirectory(void) const { return m_sDir; }
-    inline wxString GetFilename(void) const { return m_sFileName; }
-    inline void     GetFilenames(wxArrayString& rasFilenames) { rasFilenames = m_asFileNames; }
-    inline wxString GetWildcard(void) const { return m_sWildCard; }
-    inline long     GetStyle(void) const { return m_lDialogStyle; }
-    inline int      GetFilterIndex() const { return m_nFilterIndex ; }
+    virtual void GetPaths(wxArrayString& rasPath) const;
 
     int ShowModal();
 
 protected:
-    wxString                        m_sMessage;
-    long                            m_lDialogStyle;
-    wxWindow*                       m_pParent;
-    wxString                        m_sDir;
-    wxString                        m_sPath; // Full path
-    wxString                        m_sFileName;
-    wxArrayString                   m_asFileNames;
-    wxString                        m_sWildCard;
-    int                             m_nFilterIndex;
-    wxPoint                         m_vPos;
+    wxArrayString m_fileNames;
 }; // end of CLASS wxFileDialog
 
Index: wxWindows/include/wx/motif/filedlg.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/motif/filedlg.h,v
retrieving revision 1.7
diff -b -u -2 -r1.7 filedlg.h
--- wxWindows/include/wx/motif/filedlg.h	2003/06/14 13:31:40	1.7
+++ wxWindows/include/wx/motif/filedlg.h	2003/06/23 20:07:32
@@ -17,53 +17,27 @@
 #endif
 
-#include "wx/dialog.h"
+//-------------------------------------------------------------------------
+// wxFileDialog
+//-------------------------------------------------------------------------
 
-/*
-* File selector
-*/
-
-class WXDLLEXPORT wxFileDialog: public wxDialog
+class WXDLLEXPORT wxFileDialog: public wxFileDialogBase
 {
     DECLARE_DYNAMIC_CLASS(wxFileDialog)
 public:
-    wxString    m_message;
-    long        m_dialogStyle;
-    wxWindow *  m_parent;
-    wxString    m_dir;
-    wxString    m_path; // Full path
-    wxString    m_fileName;
-    wxString    m_wildCard;
-    int         m_filterIndex;
     
     // For Motif
-    wxPoint     m_pos;
     static wxString m_fileSelectorAnswer;
     static bool m_fileSelectorReturned;
     
 public:
-    wxFileDialog(wxWindow *parent, const wxString& message = wxFileSelectorPromptStr,
-        const wxString& defaultDir = "", const wxString& defaultFile = "", const wxString& wildCard = wxFileSelectorDefaultWildcardStr,
-        long style = 0, const wxPoint& pos = wxDefaultPosition);
-    
-    inline void SetMessage(const wxString& message) { m_message = message; }
-    inline void SetPath(const wxString& path) { m_path = path; }
-    inline void SetDirectory(const wxString& dir) { m_dir = dir; }
-    inline void SetFilename(const wxString& name) { m_fileName = name; }
-    inline void SetWildcard(const wxString& wildCard) { m_wildCard = wildCard; }
-    inline void SetStyle(long style) { m_dialogStyle = style; }
-    inline void SetFilterIndex(int filterIndex) { m_filterIndex = filterIndex; }
-    
-    inline wxString GetMessage() const { return m_message; }
-    inline wxString GetPath() const { return m_path; }
-    inline void GetPaths(wxArrayString& a) { a.Empty(); a.Add(m_path); }
-    inline wxString GetDirectory() const { return m_dir; }
-    inline wxString GetFilename() const { return m_fileName; }
-    inline void GetFilenames(wxArrayString& a) { a.Empty();
-    a.Add( m_fileName); }
-    inline wxString GetWildcard() const { return m_wildCard; }
-    inline long GetStyle() const { return m_dialogStyle; }
-    inline int GetFilterIndex() const { return m_filterIndex ; }
+    wxFileDialog(wxWindow *parent,
+                 const wxString& message = wxFileSelectorPromptStr,
+                 const wxString& defaultDir = wxEmptyString,
+                 const wxString& defaultFile = wxEmptyString,
+                 const wxString& wildCard = wxFileSelectorDefaultWildcardStr,
+                 long style = 0,
+                 const wxPoint& pos = wxDefaultPosition);
     
-    int ShowModal();
+    virtual int ShowModal();
 };
 
Index: wxWindows/include/wx/mac/filedlg.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/mac/filedlg.h,v
retrieving revision 1.13
diff -b -u -2 -r1.13 filedlg.h
--- wxWindows/include/wx/mac/filedlg.h	2003/06/14 13:31:41	1.13
+++ wxWindows/include/wx/mac/filedlg.h	2003/06/23 20:07:32
@@ -17,48 +17,27 @@
 #endif
 
-#include "wx/dialog.h"
+//-------------------------------------------------------------------------
+// wxFileDialog
+//-------------------------------------------------------------------------
 
-/*
- * File selector
- */
-
-class WXDLLEXPORT wxFileDialog: public wxDialog
+class WXDLLEXPORT wxFileDialog: public wxFileDialogBase
 {
 DECLARE_DYNAMIC_CLASS(wxFileDialog)
 protected:
-    wxString    m_message;
-    long        m_dialogStyle;
-    wxWindow *  m_parent;
-    wxString    m_dir;
-    wxString    m_path; // Full path
-    wxString    m_fileName;
     wxArrayString m_fileNames;
     wxArrayString m_paths;
-    wxString    m_wildCard;
-    int         m_filterIndex;
-public:
-    wxFileDialog(wxWindow *parent, const wxString& message = wxFileSelectorPromptStr,
-        const wxString& defaultDir = wxEmptyString, const wxString& defaultFile = wxEmptyString, const wxString& wildCard = wxFileSelectorDefaultWildcardStr,
-        long style = 0, const wxPoint& pos = wxDefaultPosition);
 
-    inline void SetMessage(const wxString& message) { m_message = message; }
-    inline void SetPath(const wxString& path) { m_path = path; }
-    inline void SetDirectory(const wxString& dir) { m_dir = dir; }
-    inline void SetFilename(const wxString& name) { m_fileName = name; }
-    inline void SetWildcard(const wxString& wildCard) { m_wildCard = wildCard; }
-    inline void SetStyle(long style) { m_dialogStyle = style; }
-    inline void SetFilterIndex(int filterIndex) { m_filterIndex = filterIndex; }
+public:
+    wxFileDialog(wxWindow *parent,
+                 const wxString& message = wxFileSelectorPromptStr,
+                 const wxString& defaultDir = wxEmptyString,
+                 const wxString& defaultFile = wxEmptyString,
+                 const wxString& wildCard = wxFileSelectorDefaultWildcardStr,
+                 long style = 0,
+                 const wxPoint& pos = wxDefaultPosition);
 
-    inline wxString GetMessage() const { return m_message; }
-    inline wxString GetPath() const { return m_path; }
-    inline wxString GetDirectory() const { return m_dir; }
-    inline wxString GetFilename() const { return m_fileName; }
-    void GetPaths(wxArrayString& paths) const { paths = m_paths; }
-    void GetFilenames(wxArrayString& files) const { files = m_fileNames; }
-    inline wxString GetWildcard() const { return m_wildCard; }
-    inline long GetStyle() const { return m_dialogStyle; }
-    inline int GetFilterIndex() const { return m_filterIndex ; }
+    virtual void GetPaths(wxArrayString& paths) const { paths = m_paths; }
 
-    int ShowModal();
+    virtual int ShowModal();
     
     // not supported for file dialog, RR
@@ -66,5 +45,4 @@
                            int WXUNUSED(width), int WXUNUSED(height),
                            int WXUNUSED(sizeFlags) = wxSIZE_AUTO) {}
-
 };
 
Index: wxWindows/include/wx/generic/filedlgg.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/generic/filedlgg.h,v
retrieving revision 1.25
diff -b -u -2 -r1.25 filedlgg.h
--- wxWindows/include/wx/generic/filedlgg.h	2003/06/14 13:31:47	1.25
+++ wxWindows/include/wx/generic/filedlgg.h	2003/06/23 20:07:32
@@ -17,5 +17,4 @@
 #endif
 
-#include "wx/dialog.h"
 #include "wx/listctrl.h"
 #include "wx/datetime.h"
@@ -44,5 +43,5 @@
 //-------------------------------------------------------------------------
 
-class WXDLLEXPORT wxGenericFileDialog: public wxDialog
+class WXDLLEXPORT wxGenericFileDialog: public wxFileDialogBase
 {
 public:
@@ -51,6 +50,6 @@
     wxGenericFileDialog(wxWindow *parent,
                  const wxString& message = wxFileSelectorPromptStr,
-                 const wxString& defaultDir = _T(""),
-                 const wxString& defaultFile = _T(""),
+                        const wxString& defaultDir = wxEmptyString,
+                        const wxString& defaultFile = wxEmptyString,
                  const wxString& wildCard = wxFileSelectorDefaultWildcardStr,
                  long style = 0,
@@ -58,23 +57,11 @@
     virtual ~wxGenericFileDialog();
 
-    void SetMessage(const wxString& message) { SetTitle(message); }
-    void SetPath(const wxString& path);
-    void SetDirectory(const wxString& dir) { m_dir = dir; }
-    void SetFilename(const wxString& name) { m_fileName = name; }
-    void SetWildcard(const wxString& wildCard) { m_wildCard = wildCard; }
-    void SetStyle(long style) { m_dialogStyle = style; }
-    void SetFilterIndex(int filterIndex);
-
-    wxString GetMessage() const { return m_message; }
-    wxString GetPath() const { return m_path; }
-    wxString GetDirectory() const { return m_dir; }
-    wxString GetFilename() const { return m_fileName; }
-    wxString GetWildcard() const { return m_wildCard; }
-    long GetStyle() const { return m_dialogStyle; }
-    int GetFilterIndex() const { return m_filterIndex; }
+    virtual void SetMessage(const wxString& message) { SetTitle(message); }
+    virtual void SetPath(const wxString& path);
+    virtual void SetFilterIndex(int filterIndex);
 
     // for multiple file selection
-    void GetPaths(wxArrayString& paths) const;
-    void GetFilenames(wxArrayString& files) const;
+    virtual void GetPaths(wxArrayString& paths) const;
+    virtual void GetFilenames(wxArrayString& files) const;
 
     // implementation only from now on
@@ -104,11 +91,4 @@
     void DoSetFilterIndex(int filterindex);
 
-    wxString       m_message;
-    long           m_dialogStyle;
-    wxString       m_dir;
-    wxString       m_path; // Full path
-    wxString       m_fileName;
-    wxString       m_wildCard;
-    int            m_filterIndex;
     wxString       m_filterExtension;
     wxChoice      *m_choice;
Index: wxWindows/src/msw/filedlg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/filedlg.cpp,v
retrieving revision 1.51
diff -b -u -2 -r1.51 filedlg.cpp
--- wxWindows/src/msw/filedlg.cpp	2003/06/14 13:31:42	1.51
+++ wxWindows/src/msw/filedlg.cpp	2003/06/23 20:07:32
@@ -34,5 +34,4 @@
     #include "wx/utils.h"
     #include "wx/msgdlg.h"
-    #include "wx/dialog.h"
     #include "wx/filedlg.h"
     #include "wx/filefn.h"
@@ -77,10 +76,6 @@
 // ============================================================================
 
-// ----------------------------------------------------------------------------
-// wxWin macros
-// ----------------------------------------------------------------------------
+IMPLEMENT_CLASS(wxFileDialog, wxFileDialogBase)
 
-IMPLEMENT_CLASS(wxFileDialog, wxDialog)
-
 // ----------------------------------------------------------------------------
 // wxFileDialog
@@ -93,16 +88,10 @@
                            const wxString& wildCard,
                            long style,
-                           const wxPoint& WXUNUSED(pos))
+                           const wxPoint& pos)
+             :wxFileDialogBase(parent, message, defaultDir, defaultFileName, wildCard, style, pos)
+
 {
-    m_message = message;
-    m_dialogStyle = style;
     if ( ( m_dialogStyle & wxMULTIPLE ) && ( m_dialogStyle & wxSAVE ) )
         m_dialogStyle &= ~wxMULTIPLE;
-    m_parent = parent;
-    m_path = wxT("");
-    m_fileName = defaultFileName;
-    m_dir = defaultDir;
-    m_wildCard = wildCard;
-    m_filterIndex = 0;
 }
 
@@ -351,6 +340,4 @@
         else
         {
-            const wxChar* extension = NULL;
-
             //=== Adding the correct extension >>=================================
 
@@ -361,37 +348,13 @@
             {
                 // User has typed a filename without an extension:
+                const wxChar* extension = filterBuffer;
+                int   maxFilter = (int)(of.nFilterIndex*2L) - 1;
 
-                // A filename can end in a "." here ("abc."), this means it
-                // does not have an extension. Because later on a "." with
-                // the default extension is appended we remove the "." if
-                // filename ends with one (We don't want files called
-                // "abc..ext")
-                int idx = wxStrlen(fileNameBuffer) - 1;
-                if ( fileNameBuffer[idx] == wxT('.') )
-                {
-                    fileNameBuffer[idx] = wxT('\0');
-                }
+                for( int i = 0; i < maxFilter; i++ )           // get extension
+                    extension = extension + wxStrlen( extension ) + 1;
 
-                int   maxFilter = (int)(of.nFilterIndex*2L-1L);
-                extension = filterBuffer;
-
-                for( int i = 0; i < maxFilter; i++ ) {          // get extension
-                    extension = extension + wxStrlen( extension ) +1;
-                }
-
-                extension = wxStrrchr( extension, wxT('.') );
-                if (  extension                                 // != "blabla"
-                        && !wxStrrchr( extension, wxT('*') )       // != "blabla.*"
-                        && !wxStrrchr( extension, wxT('?') )       // != "blabla.?"
-                        && extension[1]                           // != "blabla."
-                        && extension[1] != wxT(' ') )              // != "blabla. "
-                {
-                    // now concat extension to the fileName:
-                    m_fileName = wxString(fileNameBuffer) + extension;
-
-                    int len = wxStrlen( fileNameBuffer );
-                    wxStrncpy( fileNameBuffer + len, extension, wxMAXPATH - len );
-                    fileNameBuffer[ wxMAXPATH -1 ] = wxT('\0');
-                }
+                m_fileName = AppendExtension(fileNameBuffer, extension);
+                wxStrncpy(fileNameBuffer, m_fileName.c_str(), wxMin(m_fileName.Len(), wxMAXPATH-1));
+                fileNameBuffer[wxMin(m_fileName.Len(), wxMAXPATH-1)] = wxT('\0');
             }
 
Index: wxWindows/src/gtk/filedlg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/gtk/filedlg.cpp,v
retrieving revision 1.39
diff -b -u -2 -r1.39 filedlg.cpp
--- wxWindows/src/gtk/filedlg.cpp	2003/06/14 13:31:43	1.39
+++ wxWindows/src/gtk/filedlg.cpp	2003/06/23 20:07:32
@@ -17,5 +17,4 @@
 #include "wx/generic/msgdlgg.h"
 
-
 #include <gtk/gtk.h>
 
@@ -121,5 +120,5 @@
 //-----------------------------------------------------------------------------
 
-IMPLEMENT_DYNAMIC_CLASS(wxFileDialog,wxDialog)
+IMPLEMENT_DYNAMIC_CLASS(wxFileDialog,wxFileDialogBase)
 
 wxFileDialog::wxFileDialog( wxWindow *parent, const wxString& message,
@@ -127,4 +126,5 @@
                             const wxString& wildCard,
                             long style, const wxPoint& pos )
+             :wxFileDialogBase(parent, message, defaultDir, defaultFileName, wildCard, style, pos)
 {
     m_needParent = FALSE;
@@ -136,12 +136,4 @@
         return;
     }
-
-    m_message = message;
-    m_path = wxT("");
-    m_fileName = defaultFileName;
-    m_dir = defaultDir;
-    m_wildCard = wildCard;
-    m_dialogStyle = style;
-    m_filterIndex = 1;
 
     m_widget = gtk_file_selection_new( m_message.mbc_str() );
Index: wxWindows/src/os2/FILEDLG.CPP
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/os2/FILEDLG.CPP,v
retrieving revision 1.9
diff -b -u -2 -r1.9 FILEDLG.CPP
--- wxWindows/src/os2/FILEDLG.CPP	2003/06/14 13:31:44	1.9
+++ wxWindows/src/os2/FILEDLG.CPP	2003/06/23 20:07:32
@@ -20,5 +20,4 @@
     #include "wx/utils.h"
     #include "wx/msgdlg.h"
-    #include "wx/dialog.h"
     #include "wx/filedlg.h"
     #include "wx/intl.h"
@@ -57,5 +56,5 @@
 # define MAXEXT                         5
 #endif
-IMPLEMENT_CLASS(wxFileDialog, wxDialog)
+IMPLEMENT_CLASS(wxFileDialog, wxFileDialogBase)
 
 // ----------------------------------------------------------------------------
@@ -72,16 +71,11 @@
 , const wxPoint&                    rPos
 )
+    :wxFileDialogBase(pParent, rsMessage, rsDefaultDir, rsDefaultFileName, rsWildCard, lStyle, rPos)
+
 {
-    m_sMessage     = rsMessage;
-    m_lDialogStyle = lStyle;
-    if ((m_lDialogStyle & wxMULTIPLE) && (m_lDialogStyle & wxSAVE))
-        m_lDialogStyle &= ~wxMULTIPLE;
-    m_pParent      = pParent;
-    m_sPath        = "";
-    m_sFileName    = rsDefaultFileName;
-    m_sDir         = rsDefaultDir;
-    m_sWildCard    = rsWildCard;
-    m_nFilterIndex = 1;
-    m_vPos         = rPos;
+    if ((m_dialogStyle & wxMULTIPLE) && (m_dialogStyle & wxSAVE))
+        m_dialogStyle &= ~wxMULTIPLE;
+
+    m_filterIndex = 1;
 } // end of wxFileDialog::wxFileDialog
 
@@ -90,14 +84,14 @@
 ) const
 {
-    wxString                        sDir(m_sDir);
-    size_t                          nCount = m_asFileNames.GetCount();
+    wxString                        sDir(m_dir);
+    size_t                          nCount = m_fileNames.GetCount();
 
     rasPaths.Empty();
-    if (m_sDir.Last() != _T('\\'))
+    if (m_dir.Last() != _T('\\'))
         sDir += _T('\\');
 
     for ( size_t n = 0; n < nCount; n++ )
     {
-        rasPaths.Add(sDir + m_asFileNames[n]);
+        rasPaths.Add(sDir + m_fileNames[n]);
     }
 } // end of wxFileDialog::GetPaths
@@ -113,5 +107,5 @@
     wxString                        sDir;
     size_t                          i;
-    size_t                          nLen = m_sDir.length();
+    size_t                          nLen = m_dir.length();
     int                             nCount = 0;
     FILEDLG                         vFileDlg;
@@ -119,6 +113,6 @@
 
     memset(&vFileDlg, '\0', sizeof(FILEDLG));
-    if (m_pParent)
-        hWnd = (HWND) m_pParent->GetHWND();
+    if (m_parent)
+        hWnd = (HWND) m_parent->GetHWND();
     if (!hWnd && wxTheApp->GetTopWindow())
         hWnd = (HWND) wxTheApp->GetTopWindow()->GetHWND();
@@ -128,12 +122,12 @@
     *zTitleBuffer    = wxT('\0');
 
-    if (m_lDialogStyle & wxSAVE)
+    if (m_dialogStyle & wxSAVE)
         lFlags = FDS_SAVEAS_DIALOG;
     else
         lFlags = FDS_OPEN_DIALOG;
 
-    if ((m_lDialogStyle & wxHIDE_READONLY) || (m_lDialogStyle & wxSAVE))
+    if ((m_dialogStyle & wxHIDE_READONLY) || (m_dialogStyle & wxSAVE))
         lFlags |= FDS_SAVEAS_DIALOG;
-    if (m_lDialogStyle & wxMULTIPLE )
+    if (m_dialogStyle & wxMULTIPLE )
         lFlags |= FDS_OPEN_DIALOG | FDS_MULTIPLESEL;
 
@@ -150,5 +144,5 @@
     for ( i = 0; i < nLen; i++ )
     {
-        wxChar                      ch = m_sDir[i];
+        wxChar                      ch = m_dir[i];
 
         switch (ch)
@@ -166,5 +160,5 @@
                 while (i < nLen - 1)
                 {
-                    wxChar          chNext = m_sDir[i + 1];
+                    wxChar          chNext = m_dir[i + 1];
 
                     if (chNext != _T('\\') && chNext != _T('/'))
@@ -190,8 +184,8 @@
         }
     }
-    if ( wxStrlen(m_sWildCard) == 0 )
+    if ( wxStrlen(m_wildCard) == 0 )
         sTheFilter = "";
     else
-        sTheFilter = m_sWildCard;
+        sTheFilter = m_wildCard;
 
     pzFilterBuffer = strtok((char*)sTheFilter.c_str(), "|");
@@ -208,5 +202,5 @@
     }
     if (nCount == 0)
-        sDir += m_sFileName;
+        sDir += m_fileName;
     if (sDir.IsEmpty())
         sDir = "*.*";
@@ -215,11 +209,11 @@
 
     hWnd = ::WinFileDlg( HWND_DESKTOP
-                        ,GetHwndOf(m_pParent)
+                        ,GetHwndOf(m_parent)
                         ,&vFileDlg
                        );
     if (hWnd && vFileDlg.lReturn == DID_OK)
     {
-        m_asFileNames.Empty();
-        if ((m_lDialogStyle & wxMULTIPLE ) && vFileDlg.ulFQFCount > 1)
+        m_fileNames.Empty();
+        if ((m_dialogStyle & wxMULTIPLE ) && vFileDlg.ulFQFCount > 1)
         {
             for (int i = 0; i < vFileDlg.ulFQFCount; i++)
@@ -227,17 +221,17 @@
                 if (i == 0)
                 {
-                    m_sDir = wxPathOnly(wxString((const char*)*vFileDlg.papszFQFilename[0]));
-                    m_sPath = (const char*)*vFileDlg.papszFQFilename[0];
+                    m_dir = wxPathOnly(wxString((const char*)*vFileDlg.papszFQFilename[0]));
+                    m_path = (const char*)*vFileDlg.papszFQFilename[0];
                 }
-                m_sFileName = wxFileNameFromPath(wxString((const char*)*vFileDlg.papszFQFilename[i]));
-                m_asFileNames.Add(m_sFileName);
+                m_fileName = wxFileNameFromPath(wxString((const char*)*vFileDlg.papszFQFilename[i]));
+                m_fileNames.Add(m_fileName);
             }
             ::WinFreeFileDlgList(vFileDlg.papszFQFilename);
         }
-        else if (!(m_lDialogStyle & wxSAVE))
+        else if (!(m_dialogStyle & wxSAVE))
         {
-            m_sPath = vFileDlg.szFullFile;
-            m_sFileName = wxFileNameFromPath(vFileDlg.szFullFile);
-            m_sDir = wxPathOnly(vFileDlg.szFullFile);
+            m_path = vFileDlg.szFullFile;
+            m_fileName = wxFileNameFromPath(vFileDlg.szFullFile);
+            m_dir = wxPathOnly(vFileDlg.szFullFile);
         }
         else // save file
@@ -251,6 +245,6 @@
 
             wxSplitPath( zFileNameBuffer
-                        ,&m_sPath
-                        ,&m_sFileName
+                        ,&m_path
+                        ,&m_fileName
                         ,&sExt
                        );
@@ -286,5 +280,5 @@
                         // Now concat extension to the fileName:
                         //
-                        m_sPath = wxString(zFileNameBuffer) + pzExtension;
+                        m_path = wxString(zFileNameBuffer) + pzExtension;
                     }
                 }
@@ -292,20 +286,20 @@
             else
             {
-                m_sPath = vFileDlg.szFullFile;
+                m_path = vFileDlg.szFullFile;
             }
-            m_sFileName = wxFileNameFromPath(vFileDlg.szFullFile);
-            m_sDir = wxPathOnly(vFileDlg.szFullFile);
+            m_fileName = wxFileNameFromPath(vFileDlg.szFullFile);
+            m_dir = wxPathOnly(vFileDlg.szFullFile);
 
             //
             // === Simulating the wxOVERWRITE_PROMPT >>============================
             //
-            if ((m_lDialogStyle & wxOVERWRITE_PROMPT) &&
-                (m_lDialogStyle & wxSAVE) &&
-                (wxFileExists(m_sPath.c_str())))
+            if ((m_dialogStyle & wxOVERWRITE_PROMPT) &&
+                (m_dialogStyle & wxSAVE) &&
+                (wxFileExists(m_path.c_str())))
             {
                 wxString            sMessageText;
 
                 sMessageText.Printf( _("File '%s' already exists.\nDo you want to replace it?")
-                                    ,m_sPath.c_str()
+                                    ,m_path.c_str()
                                    );
                 if (wxMessageBox( sMessageText
Index: wxWindows/src/motif/filedlg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/motif/filedlg.cpp,v
retrieving revision 1.22
diff -b -u -2 -r1.22 filedlg.cpp
--- wxWindows/src/motif/filedlg.cpp	2003/06/14 13:31:45	1.22
+++ wxWindows/src/motif/filedlg.cpp	2003/06/23 20:07:32
@@ -22,5 +22,4 @@
 #include "wx/defs.h"
 #include "wx/utils.h"
-#include "wx/dialog.h"
 #include "wx/filedlg.h"
 #include "wx/intl.h"
@@ -48,5 +47,5 @@
 #include "wx/motif/private.h"
 
-IMPLEMENT_CLASS(wxFileDialog, wxDialog)
+IMPLEMENT_CLASS(wxFileDialog, wxFileDialogBase)
 
 #define DEFAULT_FILE_SELECTOR_SIZE 0
@@ -116,14 +115,7 @@
                            const wxString& defaultDir, const wxString& defaultFileName, const wxString& wildCard,
                            long style, const wxPoint& pos)
+             :wxFileDialogBase(parent, message, defaultDir, defaultFileName, wildCard, style, pos)
 {
-    m_message = message;
-    m_dialogStyle = style;
-    m_parent = parent;
-    m_path = "";
-    m_fileName = defaultFileName;
-    m_dir = defaultDir;
-    m_wildCard = wildCard;
     m_filterIndex = 1;
-    m_pos = pos;
 }
 
Index: wxWindows/src/mac/filedlg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/mac/filedlg.cpp,v
retrieving revision 1.32
diff -b -u -2 -r1.32 filedlg.cpp
--- wxWindows/src/mac/filedlg.cpp	2003/06/14 13:31:46	1.32
+++ wxWindows/src/mac/filedlg.cpp	2003/06/23 20:07:32
@@ -27,5 +27,5 @@
 
 #if !USE_SHARED_LIBRARY
-IMPLEMENT_CLASS(wxFileDialog, wxDialog)
+IMPLEMENT_CLASS(wxFileDialog, wxFileDialogBase)
 #endif
 
@@ -278,14 +278,7 @@
         const wxString& defaultDir, const wxString& defaultFileName, const wxString& wildCard,
         long style, const wxPoint& pos)
+             :wxFileDialogBase(parent, message, defaultDir, defaultFileName, wildCard, style, pos)
 {
     wxASSERT_MSG( NavServicesAvailable() , wxT("Navigation Services are not running") ) ;
-    m_message = message;
-    m_dialogStyle = style;
-    m_parent = parent;
-    m_path = wxT("");
-    m_fileName = defaultFileName;
-    m_dir = defaultDir;
-    m_wildCard = wildCard;
-    m_filterIndex = 0;
 }
 
Index: wxWindows/src/generic/filedlgg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/generic/filedlgg.cpp,v
retrieving revision 1.93
diff -b -u -2 -r1.93 filedlgg.cpp
--- wxWindows/src/generic/filedlgg.cpp	2003/06/14 13:31:48	1.93
+++ wxWindows/src/generic/filedlgg.cpp	2003/06/23 20:07:32
@@ -811,5 +811,5 @@
 #define  ID_CHECK         (wxID_FILEDLGG + 12)
 
-IMPLEMENT_DYNAMIC_CLASS(wxGenericFileDialog,wxDialog)
+IMPLEMENT_DYNAMIC_CLASS(wxGenericFileDialog, wxFileDialogBase)
 
 BEGIN_EVENT_TABLE(wxGenericFileDialog,wxDialog)
@@ -838,7 +838,9 @@
                            long style,
                            const wxPoint& pos )
-            : wxDialog( parent, -1, message, pos, wxDefaultSize,
-                        wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER )
+                    :wxFileDialogBase(parent, message, defaultDir, defaultFile, wildCard, style, pos)
 {
+    wxDialog::Create( parent, -1, message, pos, wxDefaultSize,
+                      wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER );
+
     if (wxConfig::Get(FALSE))
     {
@@ -849,7 +851,4 @@
     }
 
-    m_message = message;
-    m_dialogStyle = style;
-
     if (m_dialogStyle == 0)
         m_dialogStyle = wxOPEN;
@@ -857,5 +856,4 @@
         m_dialogStyle |= wxOPEN;
 
-    m_dir = defaultDir;
     if ((m_dir.empty()) || (m_dir == wxT(".")))
     {
@@ -870,28 +868,11 @@
     m_path += wxFILE_SEP_PATH;
     m_path += defaultFile;
-    m_fileName = defaultFile;
-    m_wildCard = wildCard;
-    m_filterIndex = 0;
     m_filterExtension = wxEmptyString;
 
     // interpret wildcards
-
-    if (m_wildCard.IsEmpty())
-        m_wildCard = _("All files (*)|*");
-
     wxArrayString wildDescriptions, wildFilters;
-    int wild_count = wxParseFileFilter(m_wildCard, wildDescriptions, wildFilters);
-
+    int wild_count = ParseWildcard(m_wildCard, wildDescriptions, wildFilters);
     wxASSERT_MSG(wild_count > 0, wxT("Wrong file type descripition") );
 
-    // if error parsing, add default back
-    if (wildFilters.GetCount() < 1u)
-    {
-        wild_count = 1;
-        m_wildCard = _("All files (*)|*");
-        wildDescriptions.Add(_("All files (*)"));
-        wildFilters.Add(wxT("*"));
-    }
-
     // layout
 
@@ -1213,11 +1194,5 @@
     if ( !(m_dialogStyle & wxOPEN) || !wxFileExists(filename) )
     {
-        wxString ext;
-        wxSplitPath(filename, NULL, NULL, &ext);
-        if ( ext.empty() )
-        {
-            // append the first extension of the filter string
-            filename += m_filterExtension.BeforeFirst(_T(';'));
-        }
+        filename = AppendExtension(filename, m_filterExtension);
     }
 
Index: wxWindows/src/generic/dirctrlg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/generic/dirctrlg.cpp,v
retrieving revision 1.62
diff -b -u -2 -r1.62 dirctrlg.cpp
--- wxWindows/src/generic/dirctrlg.cpp	2003/06/22 00:22:39	1.62
+++ wxWindows/src/generic/dirctrlg.cpp	2003/06/23 20:07:32
@@ -48,4 +48,5 @@
 #include "wx/image.h"
 #include "wx/choice.h"
+#include "wx/filedlg.h"  // for wxFileDialogBase::ParseWildcard
 
 #if wxUSE_STATLINE
@@ -100,7 +101,4 @@
 #endif
 
-// declared in filedlg.h, defined in fldlgcmn.cpp
-extern int wxParseFileFilter(const wxString& filterStr, wxArrayString& descriptions, wxArrayString& filters);
-
 // ----------------------------------------------------------------------------
 // wxGetAvailableDrives, for WINDOWS, DOS, WXPM, MAC, UNIX (returns "/")
@@ -1041,5 +1039,5 @@
 int wxGenericDirCtrl::ParseFilter(const wxString& filterStr, wxArrayString& filters, wxArrayString& descriptions)
 {
-    return wxParseFileFilter(filterStr, descriptions, filters );
+    return wxFileDialogBase::ParseWildcard(filterStr, descriptions, filters );
 }
 
@@ -1533,5 +1531,5 @@
     wxIconLocation iconLoc;
     wxIcon ic;
-    if ( ft && ft->GetIcon(&iconLoc) )
+    if ( ft && ft->GetIcon(&ic) ) //onLoc) )
     {
         ic = wxIcon(iconLoc);
Index: wxWindows/src/common/fldlgcmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/fldlgcmn.cpp,v
retrieving revision 1.4
diff -b -u -2 -r1.4 fldlgcmn.cpp
--- wxWindows/src/common/fldlgcmn.cpp	2003/06/15 20:18:03	1.4
+++ wxWindows/src/common/fldlgcmn.cpp	2003/06/23 20:07:33
@@ -31,4 +31,130 @@
 #if wxUSE_FILEDLG
 
+//----------------------------------------------------------------------------
+// wxFileDialogBase
+//----------------------------------------------------------------------------
+
+IMPLEMENT_DYNAMIC_CLASS(wxFileDialogBase, wxDialog)
+
+wxFileDialogBase::wxFileDialogBase(wxWindow *parent,
+                                   const wxString& message,
+                                   const wxString& defaultDir,
+                                   const wxString& defaultFile,
+                                   const wxString& wildCard,
+                                   long style,
+                                   const wxPoint& pos)
+{
+    m_parent = parent;
+    m_message = message;
+    m_dir = defaultDir;
+    m_fileName = defaultFile;
+    m_wildCard = wildCard;
+    m_dialogStyle = style;
+    m_path = wxT("");
+    m_filterIndex = 0;
+
+    if (m_wildCard.IsEmpty())
+        m_wildCard = wxFileSelectorDefaultWildcardStr;
+
+    // convert m_wildCard from "*.bar" to "Files (*.bar)|*.bar"
+    if ( m_wildCard.Find(wxT('|')) == wxNOT_FOUND )
+    {
+        m_wildCard.Printf(_("Files (%s)|%s"),
+                          m_wildCard.c_str(), m_wildCard.c_str());
+    }
+}
+
+// Parses the filterStr, returning the number of filters.
+// Returns 0 if none or if there's a problem.
+// filterStr is in the form: "All files (*.*)|*.*|JPEG Files (*.jpeg)|*.jpg"
+
+int wxFileDialogBase::ParseWildcard(const wxString& filterStr,
+                                    wxArrayString& descriptions,
+                                    wxArrayString& filters)
+{
+    descriptions.Clear();
+    filters.Clear();
+
+    wxString str(filterStr);
+
+    wxString description, filter;
+    for ( int pos = 0; pos != wxNOT_FOUND; )
+    {
+        pos = str.Find(wxT('|'));
+        if ( pos == wxNOT_FOUND )
+        {
+            // if there are no '|'s at all in the string just take the entire
+            // string as filter
+            if ( filters.IsEmpty() )
+            {
+                descriptions.Add(filterStr);
+                filters.Add(filterStr);
+            }
+            else
+            {
+                wxFAIL_MSG( _T("missing '|' in the wildcard string!") );
+            }
+
+            break;
+        }
+
+        description = str.Left(pos);
+        str = str.Mid(pos + 1);
+        pos = str.Find(wxT('|'));
+        if ( pos == wxNOT_FOUND )
+        {
+            filter = str;
+        }
+        else
+        {
+            filter = str.Left(pos);
+            str = str.Mid(pos + 1);
+        }
+
+        descriptions.Add(description);
+        filters.Add(filter);
+    }
+
+    return filters.GetCount();
+}
+
+wxString wxFileDialogBase::AppendExtension(const wxString &filePath,
+                                           const wxString &extensionList)
+{
+    // strip off path, to avoid problems with "path.bar/foo"
+    wxString fileName = filePath.AfterLast(wxFILE_SEP_PATH);
+
+    // if fileName is of form "foo.bar" it's ok, return it
+    int idx_dot = fileName.Find(wxT('.'), TRUE);
+    if ((idx_dot != wxNOT_FOUND) && (idx_dot < (int)fileName.Len() - 1))
+        return filePath;
+
+    // get the first extension from extensionList, or all of it
+    wxString ext = extensionList.BeforeFirst(wxT(';'));
+
+    // if ext == "foo" or "foo." there's no extension
+    int idx_ext_dot = ext.Find(wxT('.'), TRUE);
+    if ((idx_ext_dot == wxNOT_FOUND) || (idx_ext_dot == (int)ext.Len() - 1))
+        return filePath;
+    else
+        ext = ext.AfterLast(wxT('.'));
+
+    // if ext == "*" or "bar*" or "b?r" or " " then its not valid
+    if ((ext.Find(wxT('*')) != wxNOT_FOUND) ||
+        (ext.Find(wxT('?')) != wxNOT_FOUND) ||
+        (ext.Strip(wxString::both).IsEmpty()))
+        return filePath;
+
+    // if fileName doesn't have a '.' then add one
+    if (filePath.Last() != wxT('.'))
+        ext = wxT(".") + ext;
+
+    return filePath + ext;
+}
+
+//----------------------------------------------------------------------------
+// wxFileDialog convenience functions
+//----------------------------------------------------------------------------
+
 wxString wxFileSelector(const wxChar *title,
                                const wxChar *defaultDir,
@@ -68,39 +194,26 @@
                             defaultFilenameString, filter2,
                             flags, wxPoint(x, y));
-    if( wxStrlen(defaultExtension) != 0 )
-    {
-        int filterFind = 0,
-            filterIndex = 0;
 
-        for( unsigned int i = 0; i < filter2.Len(); i++ )
-        {
-            if( filter2.GetChar(i) == wxT('|') )
+   // if filter is of form "All files (*)|*|..." set correct filter index
+    if((wxStrlen(defaultExtension) != 0) && (filter2.Find(wxT('|')) != wxNOT_FOUND))
             {
-                // save the start index of the new filter
-                unsigned int is = i++;
-
-                // find the end of the filter
-                for( ; i < filter2.Len(); i++ )
-                {
-                    if(filter2[i] == wxT('|'))
-                        break;
-                }
+        int filterIndex = 0;
 
-                if( i-is-1 > 0 && is+1 < filter2.Len() )
+        wxArrayString descriptions, filters;
+        // don't care about errors, handled already by wxFileDialog
+        (void)wxFileDialogBase::ParseWildcard(filter2, descriptions, filters);
+        for (size_t n=0; n<filters.GetCount(); n++)
                 {
-                    if( filter2.Mid(is+1,i-is-1).Contains(defaultExtension) )
+            if (filters[n].Contains(defaultExtension))
                     {
-                        filterFind = filterIndex;
+                filterIndex = n;
                         break;
                     }
                 }
 
-                filterIndex++;
-            }
+        if (filterIndex > 0)
+            fileDialog.SetFilterIndex(filterIndex);
         }
 
-        fileDialog.SetFilterIndex(filterFind);
-    }
-
     wxString filename;
     if ( fileDialog.ShowModal() == wxID_OK )
@@ -112,44 +225,8 @@
 }
 
+//----------------------------------------------------------------------------
+// wxFileSelectorEx
+//----------------------------------------------------------------------------
 
-/*
-wxString wxFileSelector( const wxChar *title,
-                         const wxChar *defaultDir,
-                         const wxChar *defaultFileName,
-                         const wxChar *defaultExtension,
-                         const wxChar *filter,
-                         int flags,
-                         wxWindow *parent,
-                         int x,
-                         int y )
-{
-    wxString filter2;
-    if ( defaultExtension && !filter )
-        filter2 = wxString(wxT("*.")) + wxString(defaultExtension) ;
-    else if ( filter )
-        filter2 = filter;
-
-    wxString defaultDirString;
-    if (defaultDir)
-        defaultDirString = defaultDir;
-
-    wxString defaultFilenameString;
-    if (defaultFileName)
-        defaultFilenameString = defaultFileName;
-
-    wxFileDialog fileDialog( parent, title, defaultDirString, defaultFilenameString, filter2, flags, wxPoint(x, y) );
-
-    if ( fileDialog.ShowModal() == wxID_OK )
-    {
-        return fileDialog.GetPath();
-    }
-    else
-    {
-        return wxEmptyString;
-    }
-}
-*/
-
-
 wxString wxFileSelectorEx(const wxChar *title,
                           const wxChar *defaultDir,
@@ -181,9 +258,9 @@
     return filename;
 }
-
 
+//----------------------------------------------------------------------------
+// wxDefaultFileSelector - Generic load/save dialog (for internal use only)
+//----------------------------------------------------------------------------
 
-// Generic file load/save dialog (for internal use only)
-//   see wx[Load/Save]FileSelector
 static wxString wxDefaultFileSelector(bool load,
                                       const wxChar *what,
@@ -218,5 +295,8 @@
 }
 
-// Generic file load dialog
+//----------------------------------------------------------------------------
+// wxLoadFileSelector
+//----------------------------------------------------------------------------
+
 WXDLLEXPORT wxString wxLoadFileSelector(const wxChar *what,
                                         const wxChar *extension,
@@ -226,6 +306,9 @@
     return wxDefaultFileSelector(TRUE, what, extension, default_name, parent);
 }
+
+//----------------------------------------------------------------------------
+// wxSaveFileSelector
+//----------------------------------------------------------------------------
 
-// Generic file save dialog
 WXDLLEXPORT wxString wxSaveFileSelector(const wxChar *what,
                                         const wxChar *extension,
@@ -234,59 +317,4 @@
 {
     return wxDefaultFileSelector(FALSE, what, extension, default_name, parent);
-}
-
-
-// Parses the filterStr, returning the number of filters.
-// Returns 0 if none or if there's a problem.
-// filterStr is in the form: "All files (*.*)|*.*|JPEG Files (*.jpeg)|*.jpg"
-
-int wxParseFileFilter(const wxString& filterStr,
-                      wxArrayString& descriptions,
-                      wxArrayString& filters)
-{
-    descriptions.Clear();
-    filters.Clear();
-
-    wxString str(filterStr);
-
-    wxString description, filter;
-    for ( int pos = 0; pos != wxNOT_FOUND; )
-    {
-        pos = str.Find(wxT('|'));
-        if ( pos == wxNOT_FOUND )
-        {
-            // if there are no '|'s at all in the string just take the entire
-            // string as filter
-            if ( filters.IsEmpty() )
-            {
-                descriptions.Add(filterStr);
-                filters.Add(filterStr);
-            }
-            else
-            {
-                wxFAIL_MSG( _T("missing '|' in the wildcard string!") );
-            }
-
-            break;
-        }
-
-        description = str.Left(pos);
-        str = str.Mid(pos + 1);
-        pos = str.Find(wxT('|'));
-        if ( pos == wxNOT_FOUND )
-        {
-            filter = str;
-        }
-        else
-        {
-            filter = str.Left(pos);
-            str = str.Mid(pos + 1);
-        }
-
-        descriptions.Add(description);
-        filters.Add(filter);
-    }
-
-    return filters.GetCount();
 }
 

 	  	 
