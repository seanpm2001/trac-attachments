diff --git a/docs/doxygen/overviews/xrc_format.h b/docs/doxygen/overviews/xrc_format.h
index dd91c23..84478f5 100644
--- a/docs/doxygen/overviews/xrc_format.h
+++ b/docs/doxygen/overviews/xrc_format.h
@@ -1522,13 +1522,26 @@ class.
 </object>
 @endcode
 
-
 @subsubsection xrc_wxribbonbar wxRibbonBar
 
 @beginTable
 @hdr3col{property, type, description}
 @row3col{art-provider, @ref overview_xrcformat_type_string,
     One of @c default, @c aui or @c msw (default: @c default).}
+@row3col{art-colour-primary, @ref overview_xrcformat_type_colour,
+    Primary colour for the art-provider colour scheme (default: @c default).}
+@row3col{art-colour-secondary, @ref overview_xrcformat_type_colour,
+    Secondary colour for the art-provider colour scheme (default: @c default).}
+@row3col{art-colour-tertiary, @ref overview_xrcformat_type_colour,
+    Tertiary colour for the art-provider colour scheme (default: @c default).}
+@row3col{art-provider, @ref overview_xrcformat_type_string,
+    One of @c default, @c aui or @c msw (default: @c default).}
+@row3col{active-page, integer,
+    Sets the initial active ribbon page (default: @c default).}
+@row3col{show-panels, @ref overview_xrcformat_type_bool,
+    Whether the ribbon bar should show panels to begin with (default: true).}
+@row3col{tab-ctrl-margins, @ref overview_xrcformat_type_size,
+    Size of the tab margins, x and y as left and right (default: @c default).}
 @endTable
 
 A wxRibbonBar may have @ref xrc_wxribbonpage child objects. The @c page
@@ -1550,6 +1563,39 @@ class.
             </object>
         </object>
     </object>
+
+    <object class="page" name="EditPage">
+        <label>Edit</label>
+        <object class="panel">
+            <label>Basic</label>
+            <object class="wxRibbonToolBar">
+                <object class="tool" name="Undo">
+                    <bitmap>undo.xpm</bitmap>
+                    <label>Undo</label>
+                </object>
+                <object class="tool" name="Redo">
+                    <bitmap>redo.xpm</bitmap>
+                    <label>Redo</label>
+                </object>
+
+                <object class="separator"/>
+
+                <object class="tool" name="Cut">
+                    <bitmap>cut.xpm</bitmap>
+                    <label>Cut</label>
+                </object>
+                <object class="tool" name="Copy">
+                    <bitmap>copy.xpm</bitmap>
+                    <label>Copy</label>
+                </object>
+                <object class="tool" name="Paste">
+                    <bitmap>paste.xpm</bitmap>
+                    <label>Paste</label>
+                </object>
+            </object>
+        </object>
+    </object>
+
     <object class="page" name="ViewPage">
         <label>View</label>
         <object class="panel">
@@ -1588,8 +1634,12 @@ class.
 @hdr3col{property, type, description}
 @row3col{hybrid, @ref overview_xrcformat_type_bool,
     If true, the @c wxRIBBON_BUTTON_HYBRID kind is used (default: false).}
+@row3col{toggle, @ref overview_xrcformat_type_bool,
+    If true, the @c wxRIBBON_BUTTON_TOGGLE kind is used (default: false).}
 @row3col{disabled, @ref overview_xrcformat_type_bool,
     Whether the button should be disabled (default: false).}
+@row3col{checked, @ref overview_xrcformat_type_bool,
+    If a toggle button, whether it should be toggled on by default (default: false).}
 @row3col{label, @ref overview_xrcformat_type_text,
     Item's label (default: empty).}
 @row3col{bitmap, @ref overview_xrcformat_type_bitmap,
@@ -1600,6 +1650,41 @@ class.
     Disabled bitmap (default: none).}
 @row3col{small-disabled-bitmap, @ref overview_xrcformat_type_bitmap,
     Small disabled bitmap (default: none).}
+@row3col{small-size, @ref overview_xrcformat_type_size,
+    Size of the small version of the button (default: @c default).}
+@row3col{help, @ref overview_xrcformat_type_text,
+    Item's help text (default: none).}
+@endTable
+
+@subsubsection xrc_wxribbontoolbar wxRibbonToolBar
+
+@beginTable
+@hdr3col{property, type, description}
+@row3col{rows, @ref overview_xrcformat_type_size,
+    Sets the minumum and maximum rows the toolbar should have (default: @c default).}
+@endTable
+
+wxRibbonToolBar can have child objects of the @c tool pseudo-class. It can also
+have the @c separator pseudo-class to insert a toolbar separator.
+
+@c tool objects have the following properties:
+
+@beginTable
+@hdr3col{property, type, description}
+@row3col{hybrid, @ref overview_xrcformat_type_bool,
+    If true, the @c wxRIBBON_BUTTON_HYBRID kind is used (default: false).}
+@row3col{toggle, @ref overview_xrcformat_type_bool,
+    If true, the @c wxRIBBON_BUTTON_TOGGLE kind is used (default: false).}
+@row3col{disabled, @ref overview_xrcformat_type_bool,
+    Whether the tool should be disabled (default: false).}
+@row3col{checked, @ref overview_xrcformat_type_bool,
+    If a toggle tool, whether it should be toggled on by default (default: false).}
+@row3col{label, @ref overview_xrcformat_type_text,
+    Item's label (default: empty).}
+@row3col{bitmap, @ref overview_xrcformat_type_bitmap,
+    Item's bitmap (default: none).}
+@row3col{disabled-bitmap, @ref overview_xrcformat_type_bitmap,
+    Disabled bitmap (default: none).}
 @row3col{help, @ref overview_xrcformat_type_text,
     Item's help text (default: none).}
 @endTable
@@ -1655,7 +1740,6 @@ class.
 A wxRibbonPanel may have children of any type derived from wxRibbonControl or
 a single wxSizer child with non-ribbon windows in it.
 
-
 @subsubsection xrc_wxrichtextctrl wxRichTextCtrl
 
 @beginTable
diff --git a/include/wx/xrc/xh_ribbon.h b/include/wx/xrc/xh_ribbon.h
index 14f6719..d40098d 100644
--- a/include/wx/xrc/xh_ribbon.h
+++ b/include/wx/xrc/xh_ribbon.h
@@ -36,6 +36,9 @@ class WXDLLIMPEXP_RIBBON wxRibbonXmlHandler : public wxXmlResourceHandler
     wxObject* Handle_galleryitem();
     wxObject* Handle_panel();
     wxObject* Handle_bar();
+    wxObject* Handle_toolbar();
+    wxObject* Handle_tool();
+    wxObject* Handle_separator();
 
     void Handle_RibbonArtProvider(wxRibbonControl *control);
 
diff --git a/src/xrc/xh_ribbon.cpp b/src/xrc/xh_ribbon.cpp
index b47434c..cd9af9e 100644
--- a/src/xrc/xh_ribbon.cpp
+++ b/src/xrc/xh_ribbon.cpp
@@ -18,8 +18,11 @@
 
 #include "wx/xrc/xh_ribbon.h"
 
+#include <iostream>
+
 #include "wx/ribbon/bar.h"
 #include "wx/ribbon/buttonbar.h"
+#include "wx/ribbon/toolbar.h"
 #include "wx/ribbon/gallery.h"
 
 #include "wx/scopeguard.h"
@@ -54,6 +57,7 @@
     XRC_ADD_STYLE(wxRIBBON_BAR_ALWAYS_SHOW_TABS);
     XRC_ADD_STYLE(wxRIBBON_BAR_DEFAULT_STYLE);
     XRC_ADD_STYLE(wxRIBBON_BAR_FOLDBAR_STYLE);
+    XRC_ADD_STYLE(wxRIBBON_BAR_SHOW_HELP_BUTTON);
 }
 
 wxObject *wxRibbonXmlHandler::DoCreateResource()
@@ -62,8 +66,14 @@ wxObject *wxRibbonXmlHandler::DoCreateResource()
         return Handle_button();
     if (m_class == wxT("wxRibbonButtonBar"))
         return Handle_buttonbar();
+    else if (m_class == wxT("tool"))
+        return Handle_tool();
+    else if (m_class == wxT("separator"))
+        return Handle_separator();
     else if (m_class == wxT("item"))
         return Handle_galleryitem();
+    else if (m_class == wxT("wxRibbonToolBar"))
+        return Handle_toolbar();
     else if (m_class == wxT("wxRibbonGallery"))
         return Handle_gallery();
     else if (m_class == wxT("wxRibbonPanel") || m_class == wxT("panel"))
@@ -73,7 +83,7 @@ wxObject *wxRibbonXmlHandler::DoCreateResource()
     else if (m_class == wxT("wxRibbonBar"))
         return Handle_bar();
     else
-        return Handle_control ();
+        return Handle_control();
 }
 
 bool wxRibbonXmlHandler::CanHandle(wxXmlNode *node)
@@ -86,7 +96,11 @@ bool wxRibbonXmlHandler::CanHandle(wxXmlNode *node)
            (m_isInside == &wxRibbonPage::ms_classInfo &&
                 IsOfClass(node, wxT("panel"))) ||
            (m_isInside == &wxRibbonGallery::ms_classInfo &&
-                IsOfClass(node, wxT("item")));
+                IsOfClass(node, wxT("item"))) ||
+           (m_isInside == CLASSINFO(wxRibbonToolBar) &&
+                IsOfClass(node, wxT("tool"))) ||
+           (m_isInside == CLASSINFO(wxRibbonToolBar) &&
+                IsOfClass(node, wxT("separator")));
 }
 
 bool wxRibbonXmlHandler::IsRibbonControl (wxXmlNode *node)
@@ -96,6 +110,7 @@ bool wxRibbonXmlHandler::IsRibbonControl (wxXmlNode *node)
            IsOfClass(node, wxT("wxRibbonPage")) ||
            IsOfClass(node, wxT("wxRibbonPanel")) ||
            IsOfClass(node, wxT("wxRibbonGallery")) ||
+           IsOfClass(node, wxT("wxRibbonToolBar")) ||
            IsOfClass(node, wxT("wxRibbonControl"));
 }
 
@@ -136,6 +151,36 @@ wxObject* wxRibbonXmlHandler::Handle_buttonbar()
     return buttonBar;
 }
 
+wxObject* wxRibbonXmlHandler::Handle_toolbar()
+{
+    XRC_MAKE_INSTANCE(toolBar, wxRibbonToolBar);
+
+    if ( !toolBar->Create(wxDynamicCast(m_parent, wxWindow), GetID(),
+                         GetPosition(), GetSize(), GetStyle()) )
+    {
+        ReportError("could not create ribbon toolbar");
+    }
+    else
+    {
+        const wxClassInfo *const wasInside = m_isInside;
+        wxON_BLOCK_EXIT_SET(m_isInside, wasInside);
+        m_isInside = &wxRibbonToolBar::ms_classInfo;
+
+        CreateChildren(toolBar, true);
+
+        if ( HasParam("rows") )
+        {
+            const wxSize tmp = GetSize("rows");
+
+            toolBar->SetRows(tmp.x, tmp.y);
+        }
+
+        toolBar->Realize();
+    }
+
+    return toolBar;
+}
+
 wxObject* wxRibbonXmlHandler::Handle_button()
 {
     wxRibbonButtonBar *buttonBar = wxStaticCast(m_parent, wxRibbonButtonBar);
@@ -144,6 +189,11 @@ wxObject* wxRibbonXmlHandler::Handle_button()
 
     if (GetBool(wxT("hybrid")))
         kind = wxRIBBON_BUTTON_HYBRID;
+    else if (GetBool(wxT("toggle")))
+        kind = wxRIBBON_BUTTON_TOGGLE;
+
+    const wxSize bitmap_size = GetSize();
+    const wxSize small_bitmap_size = GetSize("small-size");
 
     // FIXME: The code below uses wxXmlNode directly but this can't be done
     //        in the ribbon library code as it would force it to always link
@@ -192,10 +242,10 @@ wxObject* wxRibbonXmlHandler::Handle_button()
 
     if (!buttonBar->AddButton(GetID(),
                               GetText("label"),
-                              GetBitmap ("bitmap"),
-                              GetBitmap ("small-bitmap"),
-                              GetBitmap ("disabled-bitmap"),
-                              GetBitmap ("small-disabled-bitmap"),
+                              GetBitmap ("bitmap", wxART_OTHER, bitmap_size),
+                              GetBitmap ("small-bitmap", wxART_OTHER, small_bitmap_size),
+                              GetBitmap ("disabled-bitmap", wxART_OTHER, bitmap_size),
+                              GetBitmap ("small-disabled-bitmap", wxART_OTHER, small_bitmap_size),
                               kind,
                               GetText("help")))
     {
@@ -208,6 +258,54 @@ wxObject* wxRibbonXmlHandler::Handle_button()
     return NULL; // nothing to return
 }
 
+wxObject* wxRibbonXmlHandler::Handle_separator()
+{
+    wxRibbonToolBar *toolBar = wxStaticCast(m_parent, wxRibbonToolBar);
+
+    if (!toolBar->AddSeparator())
+    {
+        ReportError("could not create toolbar separator");
+    }
+
+    return NULL;
+}
+
+wxObject* wxRibbonXmlHandler::Handle_tool()
+{
+    wxRibbonToolBar *toolBar = wxStaticCast(m_parent, wxRibbonToolBar);
+
+    wxRibbonButtonKind kind = wxRIBBON_BUTTON_NORMAL;
+
+    if (GetBool(wxT("hybrid")))
+        kind = wxRIBBON_BUTTON_HYBRID;
+    else if (GetBool(wxT("toggle")))
+        kind = wxRIBBON_BUTTON_TOGGLE;
+
+    const wxSize bitmap_size = GetSize();
+
+    if (!toolBar->AddTool(GetID(),
+                          GetBitmap("bitmap", wxART_OTHER, bitmap_size),
+                          GetBitmap("disabled-bitmap", wxART_OTHER, bitmap_size),
+                          GetText("help"),
+                          kind))
+    {
+        ReportError("could not create tool");
+    }
+
+    if (GetBool(wxT("disabled")))
+    {
+        toolBar->EnableTool(GetID(), false);
+    }
+
+    if (kind == wxRIBBON_BUTTON_TOGGLE && GetBool(wxT("checked")))
+    {
+        toolBar->ToggleTool(GetID(), true);
+    }
+
+    return NULL; // nothing to return
+}
+
+
 wxObject* wxRibbonXmlHandler::Handle_control()
 {
     wxRibbonControl *control = wxDynamicCast (m_instance, wxRibbonControl);
@@ -305,6 +403,22 @@ wxObject* wxRibbonXmlHandler::Handle_bar()
 
     Handle_RibbonArtProvider (ribbonBar);
 
+    wxColour primary, secondary, tertiary;
+    ribbonBar->GetArtProvider()->GetColourScheme(&primary, &secondary, &tertiary);
+
+    primary = GetColour("art-colour-primary", primary);
+    secondary = GetColour("art-colour-secondary", secondary);
+    tertiary = GetColour("art-colour-tertiary", tertiary);
+
+    //Should the alternate spelling be included as well?
+#if 0
+    primary = GetColour("art-color-primary", primary);
+    secondary = GetColour("art-color-secondary", secondary);
+    tertiary = GetColour("art-color-tertiary", tertiary);
+#endif
+
+    ribbonBar->GetArtProvider()->SetColourScheme(primary, secondary, tertiary);
+
     if ( !ribbonBar->Create(wxDynamicCast(m_parent, wxWindow),
                             GetID(),
                             GetPosition(),
@@ -326,6 +440,16 @@ wxObject* wxRibbonXmlHandler::Handle_bar()
 
         CreateChildren (ribbonBar, true);
 
+        ribbonBar->SetActivePage(GetLong("active-page", 0));
+        ribbonBar->ShowPanels(GetBool("show-panels", true));
+
+        if (HasParam("tab-ctrl-margins"))
+        {
+            const wxSize tmp = GetSize("tab-ctrl-margins");
+
+            ribbonBar->SetTabCtrlMargins(tmp.x, tmp.y);
+        }
+
         ribbonBar->Realize();
     }
 
