Index: samples/minimal/minimal.cpp
===================================================================
--- samples/minimal/minimal.cpp	(revision 69556)
+++ samples/minimal/minimal.cpp	(working copy)
@@ -73,6 +73,18 @@
     DECLARE_EVENT_TABLE()
 };
 
+class MyDialog : public wxDialog
+{
+public:
+	MyDialog (wxWindow *parent, wxWindowID id, const wxString &title,
+			const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize,
+			long style=wxDEFAULT_DIALOG_STYLE, const wxString &name=wxDialogNameStr);
+    void OnModalDialog(wxCommandEvent& event);
+    void OnNonModalDialog(wxCommandEvent& event);
+private:
+    DECLARE_EVENT_TABLE()
+};
+
 // ----------------------------------------------------------------------------
 // constants
 // ----------------------------------------------------------------------------
@@ -86,7 +98,10 @@
     // it is important for the id corresponding to the "About" command to have
     // this standard value as otherwise it won't be handled properly under Mac
     // (where it is special and put into the "Apple" menu)
-    Minimal_About = wxID_ABOUT
+    Minimal_About = wxID_ABOUT,
+
+    ID_BTN_MODAL=100,
+    ID_BTN_NON_MODAL
 };
 
 // ----------------------------------------------------------------------------
@@ -197,4 +212,34 @@
                  "About wxWidgets minimal sample",
                  wxOK | wxICON_INFORMATION,
                  this);
+	MyDialog *dlg = new MyDialog(this, -1, "Non-modal dialog");
+	dlg->Show();
+}
+
+BEGIN_EVENT_TABLE(MyDialog, wxDialog)
+    EVT_BUTTON(ID_BTN_MODAL,  MyDialog::OnModalDialog)
+    EVT_BUTTON(ID_BTN_NON_MODAL, MyDialog::OnNonModalDialog)
+END_EVENT_TABLE()
+
+MyDialog::MyDialog (wxWindow *parent, wxWindowID id, const wxString &title,
+		const wxPoint &pos, const wxSize &size,
+		long style, const wxString &name)
+	:wxDialog(parent, id, title, pos, size, style, name)
+{
+	wxButton *btn1 = new wxButton(this, ID_BTN_MODAL,     "Open a modal dialog");
+	wxButton *btn2 = new wxButton(this, ID_BTN_NON_MODAL, "Open a non-modal dialog");
+	wxBoxSizer *sizer = new wxBoxSizer(wxVERTICAL);
+	sizer->Add(btn1, 0, wxALIGN_CENTER | wxALL, 10);
+	sizer->Add(btn2, 0, wxALIGN_CENTER | wxALL, 10);
+	SetSizerAndFit(sizer);
+}
+
+void MyDialog::OnModalDialog(wxCommandEvent& event){
+	MyDialog dlg(this, -1, "Modal dialog");
+	dlg.ShowModal();
+}
+
+void MyDialog::OnNonModalDialog(wxCommandEvent& event){
+	MyDialog *dlg = new MyDialog(this, -1, "Non-modal dialog");
+	dlg->Show();
 }
