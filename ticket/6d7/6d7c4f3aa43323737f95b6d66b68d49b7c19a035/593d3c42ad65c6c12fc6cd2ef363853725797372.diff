diff --git a/interface/wx/fswatcher.h b/interface/wx/fswatcher.h
index e720f02..a4b7b1d 100644
--- a/interface/wx/fswatcher.h
+++ b/interface/wx/fswatcher.h
@@ -30,7 +30,7 @@
     and use the event table @c EVT_FSWATCHER macro to handle these events in a
     derived class method. Alternatively, you can use
     wxFileSystemWatcher::SetOwner() to send the events to another object. Or
-    you could use wxEvtHandler::Connect() with @c wxEVT_FSWATCHER to handle
+    you could use wxEvtHandler::Bind() with @c wxEVT_FSWATCHER to handle
     these events in any other object. See the fswatcher sample for an example
     of the latter approach.
 
@@ -63,22 +63,24 @@ public:
         @param path
             The name of the path to watch.
         @param events
-            An optional filter to receive only events of particular types.
+            An optional filter. The only flags currently implemented are 
+            @a wxFSW_EVENT_ALL to receive all event types and (Unix-only) 
+            @a wxFSW_EVENT_DONT_FOLLOW to prevent dereferencing any symbolic
+            links.
      */
     virtual bool Add(const wxFileName& path, int events = wxFSW_EVENT_ALL);
 
     /**
-        This is the same as Add(), but recursively adds every file/directory in
-        the tree rooted at @a path.
+        This is the same as Add(), but also recursively adds every 
+        file/directory in the tree rooted at @a path.
 
         Additionally a file mask can be specified to include only files
         matching that particular mask.
 
-        This method is implemented efficiently under MSW but shouldn't be used
-        for the directories with a lot of children (such as e.g. the root
-        directory) under the other platforms as it calls Add() there for each
-        subdirectory potentially creating a lot of watches and taking a long
-        time to execute.
+        This method is implemented efficiently on MSW, but should be used with 
+        care on other platforms for directories with lots of children (e.g. the 
+        root directory) as it calls Add() for each subdirectory, potentially 
+        creating a lot of watches and taking a long time to execute.
      */
     virtual bool AddTree(const wxFileName& path, int events = wxFSW_EVENT_ALL,
                          const wxString& filter = wxEmptyString);
@@ -89,8 +91,8 @@ public:
     virtual bool Remove(const wxFileName& path);
 
     /**
-        Same as Remove(), but also removes every file/directory belonging to
-        the tree rooted at @a path.
+        This is the same as Remove(), but also removes every file/directory 
+        belonging to the tree rooted at @a path.
      */
     virtual bool RemoveTree(const wxFileName& path);
 
