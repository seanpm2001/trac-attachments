Index: docs/latex/wx/slider.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/slider.tex,v
retrieving revision 1.7
diff -b -u -2 -r1.7 slider.tex
--- docs/latex/wx/slider.tex	2004/09/23 15:41:42	1.7
+++ docs/latex/wx/slider.tex	2005/01/16 05:48:10
@@ -33,4 +33,5 @@
 \twocolitem{\windowstyle{wxSL\_TOP}}{Displays ticks on the top, if a horizontal slider.}
 \twocolitem{\windowstyle{wxSL\_SELRANGE}}{Allows the user to select a range on the slider. Windows 95 only.}
+\twocolitem{\windowstyle{wxSL\_INVERSE}}{Inverses the mininum and maximum endpoints on the slider.}
 \end{twocollist}
 
Index: include/wx/defs.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/defs.h,v
retrieving revision 1.468
diff -b -u -2 -r1.468 defs.h
--- include/wx/defs.h	2004/12/30 15:07:13	1.468
+++ include/wx/defs.h	2005/01/16 05:48:12
@@ -1442,4 +1442,5 @@
 #define wxSL_BOTH            0x0400
 #define wxSL_SELRANGE        0x0800
+#define wxSL_INVERSE         0x1000
 
 /*
Index: samples/controls/controls.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/controls/controls.cpp,v
retrieving revision 1.224
diff -b -u -2 -r1.224 controls.cpp
--- samples/controls/controls.cpp	2004/12/12 18:32:26	1.224
+++ samples/controls/controls.cpp	2005/01/16 05:48:17
@@ -138,4 +138,6 @@
 #if wxUSE_SLIDER
     wxSlider      *m_slider;
+		wxCheckBox    *m_chkInvert;
+		void OnInvertSlider(wxCommandEvent & event);
 #endif // wxUSE_SLIDER
     wxButton      *m_fontButton;
@@ -418,4 +420,5 @@
 #if wxUSE_SLIDER
 const int  ID_SLIDER            = 181;
+const int  ID_OPT_INVERTSLIDER  = 207;
 #endif // wxUSE_SLIDER
 
@@ -486,4 +489,5 @@
 #if wxUSE_SLIDER
 EVT_SLIDER    (ID_SLIDER,               MyPanel::OnSliderUpdate)
+EVT_CHECKBOX  (ID_OPT_INVERTSLIDER,     MyPanel::OnInvertSlider)
 #endif // wxUSE_SLIDER
 #if wxUSE_SPINBTN
@@ -556,4 +560,5 @@
 #if wxUSE_SLIDER
     m_slider = NULL;
+		m_chkInvert = NULL;
 #endif // wxUSE_SLIDER
     m_fontButton = NULL;
@@ -794,6 +799,7 @@
                                wxGA_VERTICAL | wxGA_SMOOTH | wxNO_BORDER );
     m_slider = new wxSlider( panel, ID_SLIDER, 0, 0, 200,
-                             wxPoint(18,85), wxSize(155,wxDefaultCoord),
+                             wxPoint(18,85), wxSize(115,wxDefaultCoord),
                              wxSL_AUTOTICKS | wxSL_LABELS);
+		m_chkInvert = new wxCheckBox( panel, ID_OPT_INVERTSLIDER, _T("Invert"), wxPoint(135, 105), wxSize(50,20));
     m_slider->SetTickFreq(40, 0);
 #if wxUSE_TOOLTIPS
@@ -1385,4 +1391,26 @@
 }
 
+void MyPanel::OnInvertSlider( wxCommandEvent & WXUNUSED(event) )
+{
+  wxWindow * parent = m_slider->GetParent();
+  int value = m_slider->GetValue();
+
+  m_slider->Destroy();
+
+  if (m_chkInvert->IsChecked())
+  {
+    m_slider = new wxSlider( parent, ID_SLIDER, value, 0, 200,
+                             wxPoint(18,85), wxSize(115,wxDefaultCoord),
+                             wxSL_AUTOTICKS | wxSL_LABELS | wxSL_INVERSE);
+  }
+  else
+  {
+    m_slider = new wxSlider( parent, ID_SLIDER, value, 0, 200,
+                             wxPoint(18,85), wxSize(115,wxDefaultCoord),
+                             wxSL_AUTOTICKS | wxSL_LABELS);
+  }
+
+  m_slider->SetTickFreq(40, 0);
+}
 #endif // wxUSE_SLIDER
Index: src/gtk/slider.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/slider.cpp,v
retrieving revision 1.55
diff -b -u -2 -r1.55 slider.cpp
--- src/gtk/slider.cpp	2004/12/14 21:08:04	1.55
+++ src/gtk/slider.cpp	2005/01/16 05:48:23
@@ -150,4 +150,8 @@
     // -0.9 is rounded to -1
     double val = m_adjust->value;
+
+    if (m_windowStyle & wxSL_INVERSE)
+        val = (double)(m_rangeMax + m_rangeMin) - val;
+
     return (int)(val < 0 ? val - 0.5 : val + 0.5);
 }
@@ -155,7 +159,12 @@
 void wxSlider::SetValue( int value )
 {
+    if (m_windowStyle & wxSL_INVERSE)
+        value = (m_rangeMax + m_rangeMin) - value;
+
     float fpos = (float)value;
     m_oldPos = fpos;
     if (fabs(fpos-m_adjust->value) < 0.2) return;
+
+		
 
     m_adjust->value = fpos;
Index: src/mac/carbon/slider.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/slider.cpp,v
retrieving revision 1.35
diff -b -u -2 -r1.35 slider.cpp
--- src/mac/carbon/slider.cpp	2004/10/19 07:06:06	1.35
+++ src/mac/carbon/slider.cpp	2005/01/16 05:48:23
@@ -137,5 +137,10 @@
 int wxSlider::GetValue() const
 {
-    return m_peer->GetValue() ;
+    int value = m_peer->GetValue();
+
+    if (m_windowStyle & wxSL_INVERSE)
+        value = (m_rangeMax + m_rangeMin) - value;
+
+    return value;
 }
 
@@ -146,4 +151,8 @@
     if ( m_macValueStatic )
         m_macValueStatic->SetLabel( valuestring ) ;
+
+    if (m_windowStyle & wxSL_INVERSE)
+        value = (m_rangeMax + m_rangeMin) - value;
+
     m_peer->SetValue( value ) ;
 }
@@ -160,9 +169,9 @@
 
     if(m_macMinimumStatic) {
-        value.Printf(wxT("%d"), m_rangeMin);
+        value.Printf(wxT("%d"), (m_windowStyle & wxSL_INVERSE ? m_rangeMax : m_rangeMin));
         m_macMinimumStatic->SetLabel(value);
     }
     if(m_macMaximumStatic) {
-        value.Printf(wxT("%d"), m_rangeMax);
+        value.Printf(wxT("%d"), (m_windowStyle & wxSL_INVERSE ? m_rangeMin : m_rangeMax));
         m_macMaximumStatic->SetLabel(value);
     }
@@ -245,5 +254,10 @@
 void wxSlider::Command (wxCommandEvent & event)
 {
-    SetValue (event.GetInt());
+    int value = event.GetInt();
+
+    if (m_windowStyle & wxSL_INVERSE)
+        value = (m_rangeMax + m_rangeMin) - value;
+
+    SetValue(value);
     ProcessCommand (event);
 }
@@ -253,4 +267,7 @@
     SInt16 value = m_peer->GetValue() ;
 
+    if (m_windowStyle & wxSL_INVERSE)
+        value = (m_rangeMax + m_rangeMin) - value;
+
     SetValue( value ) ;
 
@@ -274,4 +291,7 @@
 {
     SInt16 value = m_peer->GetValue() ;
+
+    if (m_windowStyle & wxSL_INVERSE)
+        value = (m_rangeMax + m_rangeMin) - value;
 
     SetValue( value ) ;
Index: src/mac/classic/slider.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/classic/slider.cpp,v
retrieving revision 1.6
diff -b -u -2 -r1.6 slider.cpp
--- src/mac/classic/slider.cpp	2004/09/30 16:33:30	1.6
+++ src/mac/classic/slider.cpp	2005/01/16 05:48:24
@@ -134,5 +134,10 @@
 int wxSlider::GetValue() const
 {
-    return GetControl32BitValue( (ControlHandle) m_macControl) ;
+    int value = (int)GetControl32BitValue( (ControlHandle) m_macControl);
+
+    if (m_windowStyle & wxSL_INVERSE)
+        value = (m_rangeMax + m_rangeMin) - value;
+
+    return value;
 }
 
@@ -143,4 +148,8 @@
     if ( m_macValueStatic )
         m_macValueStatic->SetLabel( valuestring ) ;
+
+    if (m_windowStyle & wxSL_INVERSE)
+        value = (m_rangeMax + m_rangeMin) - value;
+
     SetControl32BitValue( (ControlHandle) m_macControl , value ) ;
 }
@@ -157,9 +166,9 @@
 
     if(m_macMinimumStatic) {
-        value.Printf(wxT("%d"), m_rangeMin);
+        value.Printf(wxT("%d"), (m_windowStyle & wxSL_INVERSE ? m_rangeMax : m_rangeMin));
         m_macMinimumStatic->SetLabel(value);
     }
     if(m_macMaximumStatic) {
-        value.Printf(wxT("%d"), m_rangeMax);
+        value.Printf(wxT("%d"), (m_windowStyle & wxSL_INVERSE ? m_rangeMin : m_rangeMax));
         m_macMaximumStatic->SetLabel(value);
     }
@@ -242,5 +251,10 @@
 void wxSlider::Command (wxCommandEvent & event)
 {
-    SetValue (event.GetInt());
+    int value = event.GetInt();
+
+    if (m_windowStyle & wxSL_INVERSE)
+        value = (m_rangeMax + m_rangeMin) - value;
+
+    SetValue (value);
     ProcessCommand (event);
 }
@@ -249,4 +263,7 @@
 {
     SInt16 value = ::GetControl32BitValue( (ControlHandle) m_macControl ) ;
+
+    if (m_windowStyle & wxSL_INVERSE)
+        value = (m_rangeMax + m_rangeMin) - value;
 
     SetValue( value ) ;
Index: src/msw/slider95.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/slider95.cpp,v
retrieving revision 1.71
diff -b -u -2 -r1.71 slider95.cpp
--- src/msw/slider95.cpp	2004/12/13 01:03:44	1.71
+++ src/msw/slider95.cpp	2005/01/16 05:48:25
@@ -104,4 +104,5 @@
     wxFLAGS_MEMBER(wxSL_BOTH)
     wxFLAGS_MEMBER(wxSL_SELRANGE)
+		wxFLAGS_MEMBER(wxSL_INVERSE)
 
 wxEND_FLAGS( wxSliderStyle )
@@ -314,4 +315,7 @@
     }
 
+		if (m_windowStyle & wxSL_INVERSE)
+			newPos = (m_rangeMax + m_rangeMin) - newPos;
+
     SetValue(newPos);
 
@@ -330,5 +334,10 @@
 void wxSlider95::Command (wxCommandEvent & event)
 {
-    SetValue (event.GetInt());
+		int value = event.GetInt();
+
+		if (m_windowStyle & wxSL_INVERSE)
+			value = (m_rangeMax + m_rangeMin) - value;
+
+    SetValue (value);
     ProcessCommand (event);
 }
@@ -505,15 +514,23 @@
 int wxSlider95::GetValue() const
 {
-    return ::SendMessage(GetHwnd(), TBM_GETPOS, 0, 0);
+		int value = ::SendMessage(GetHwnd(), TBM_GETPOS, 0, 0);
+
+		if (m_windowStyle & wxSL_INVERSE)
+			value = (m_rangeMax + m_rangeMin) - value;
+
+    return value;
 }
 
 void wxSlider95::SetValue(int value)
 {
-    ::SendMessage(GetHwnd(), TBM_SETPOS, (WPARAM)TRUE, (LPARAM)value);
-
     if ( m_labels )
     {
         ::SetWindowText((*m_labels)[SliderLabel_Value], Format(value));
     }
+
+		if (m_windowStyle & wxSL_INVERSE)
+			value = (m_rangeMax + m_rangeMin) - value;
+
+		::SendMessage(GetHwnd(), TBM_SETPOS, (WPARAM)TRUE, (LPARAM)value);
 }
 
@@ -527,6 +544,15 @@
     if ( m_labels )
     {
+				if (m_windowStyle & wxSL_INVERSE)
+				{
+					//swap max and min labels
+					::SetWindowText((*m_labels)[SliderLabel_Min], Format(m_rangeMax));
+					::SetWindowText((*m_labels)[SliderLabel_Max], Format(m_rangeMin));
+				}
+				else
+				{
         ::SetWindowText((*m_labels)[SliderLabel_Min], Format(m_rangeMin));
         ::SetWindowText((*m_labels)[SliderLabel_Max], Format(m_rangeMax));
+				}
     }
 }
Index: src/os2/slider.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/slider.cpp,v
retrieving revision 1.26
diff -b -u -2 -r1.26 slider.cpp
--- src/os2/slider.cpp	2004/10/21 17:38:06	1.26
+++ src/os2/slider.cpp	2005/01/16 05:48:27
@@ -184,5 +184,10 @@
 )
 {
-    SetValue(rEvent.GetInt());
+    int value = rEvent.GetInt();
+
+    if (m_windowStyle & wxSL_INVERSE)
+        value = (m_rangeMax + m_rangeMin) - value;
+
+    SetValue(value);
     ProcessCommand(rEvent);
 } // end of wxSlider::Command
@@ -262,5 +267,5 @@
         // Now create min static control
         //
-        sprintf(wxBuffer, "%d", nMinValue);
+        sprintf(wxBuffer, "%d", (m_windowStyle & wxSL_INVERSE ? nMaxValue : nMinValue));
         lWstyle = SS_TEXT|DT_LEFT|WS_VISIBLE;
         if (m_windowStyle & wxCLIP_SIBLINGS)
@@ -357,5 +362,5 @@
         // Finally, create max value static item
         //
-        sprintf(wxBuffer, "%d", nMaxValue);
+        sprintf(wxBuffer, "%d", (m_windowStyle & wxSL_INVERSE ? nMinValue : nMaxValue));
         lWstyle = SS_TEXT|DT_LEFT|WS_VISIBLE;
         if (m_windowStyle & wxCLIP_SIBLINGS)
@@ -977,4 +982,8 @@
         return true;
     }
+
+    if (m_windowStyle & wxSL_INVERSE)
+        nNewPos = (m_rangeMax + m_rangeMin) - nNewPos;
+
     SetValue(nNewPos);
 
@@ -1032,5 +1041,5 @@
     if (m_hStaticMin)
     {
-        wxSprintf(zBuf, wxT("%d"), m_nRangeMin);
+        wxSprintf(zBuf, wxT("%d"), (m_windowStyle & wxSL_INVERSE ? m_RangeMax : m_RangeMin));
         ::WinSetWindowText((HWND)m_hStaticMin, zBuf);
     }
@@ -1038,5 +1047,5 @@
     if (m_hStaticMax)
     {
-        wxSprintf(zBuf, wxT("%d"), m_nRangeMax);
+        wxSprintf(zBuf, wxT("%d"), (m_windowStyle & wxSL_INVERSE ? m_RangeMin : m_RangeMax));
         ::WinSetWindowText((HWND)m_hStaticMax, zBuf);
     }
@@ -1137,4 +1146,13 @@
 )
 {
+    if (m_hStaticValue)
+    {
+        wxSprintf(wxBuffer, wxT("%d"), nValue);
+        ::WinSetWindowText((HWND)m_hStaticValue, wxBuffer);
+    }
+
+    if (m_windowStyle & wxSL_INVERSE)
+        nValue = (m_rangeMax + m_rangeMin) - nValue;
+
     int                             nPixelRange = SHORT1FROMMR(::WinSendMsg( GetHwnd()
                                                                             ,SLM_QUERYSLIDERINFO
@@ -1155,9 +1173,5 @@
                  ,(MPARAM)nNewPos
                 );
-    if (m_hStaticValue)
-    {
-        wxSprintf(wxBuffer, wxT("%d"), nValue);
-        ::WinSetWindowText((HWND)m_hStaticValue, wxBuffer);
-    }
+
 } // end of wxSlider::SetValue
 

 	  	 
