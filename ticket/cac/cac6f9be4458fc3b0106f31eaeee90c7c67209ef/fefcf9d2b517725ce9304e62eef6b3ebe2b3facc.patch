Index: slider.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/mac/carbon/slider.cpp,v
retrieving revision 1.35
diff -B -b -u -4 -r1.35 slider.cpp
--- slider.cpp	2004/10/19 07:06:06	1.35
+++ slider.cpp	2005/01/23 17:53:13
@@ -135,18 +134,21 @@
 }
 
 int wxSlider::GetValue() const
 {
-    return m_peer->GetValue() ;
+    // We may need to invert the value returned by the widget
+    return MacInvertOrNot( m_peer->GetValue() ) ;
 }
 
 void wxSlider::SetValue(int value)
 {
     wxString valuestring ;
     valuestring.Printf( wxT("%d") , value ) ;
     if ( m_macValueStatic )
         m_macValueStatic->SetLabel( valuestring ) ;
-    m_peer->SetValue( value ) ;
+
+    // We only invert for the setting of the actual native widget
+    m_peer->SetValue( MacInvertOrNot ( value ) ) ;
 }
 
 void wxSlider::SetRange(int minValue, int maxValue)
 {
@@ -158,13 +160,13 @@
     m_peer->SetMinimum( m_rangeMin);
     m_peer->SetMaximum( m_rangeMax);
 
     if(m_macMinimumStatic) {
-        value.Printf(wxT("%d"), m_rangeMin);
+        value.Printf(wxT("%d"), MacInvertOrNot( m_rangeMin ) );
         m_macMinimumStatic->SetLabel(value);
     }
     if(m_macMaximumStatic) {
-        value.Printf(wxT("%d"), m_rangeMax);
+        value.Printf(wxT("%d"), MacInvertOrNot( m_rangeMax ) );
         m_macMaximumStatic->SetLabel(value);
     }
     SetValue(m_rangeMin);
 }
@@ -249,9 +251,11 @@
 }
 
 void wxSlider::MacHandleControlClick( WXWidget control , wxInt16 controlpart, bool mouseStillDown )
 {
-    SInt16 value = m_peer->GetValue() ;
+    // Whatever the native value is, we may need to invert it for calling
+    // SetValue and putting the possibly inverted value in the event
+    SInt16 value = MacInvertOrNot ( m_peer->GetValue() ) ;
 
     SetValue( value ) ;
 
     wxEventType scrollEvent = wxEVT_NULL ;
@@ -271,9 +275,11 @@
 }
 
 wxInt32 wxSlider::MacControlHit( WXEVENTHANDLERREF handler , WXEVENTREF mevent )
 {
-    SInt16 value = m_peer->GetValue() ;
+    // Whatever the native value is, we may need to invert it for calling
+    // SetValue and putting the possibly inverted value in the event
+    SInt16 value = MacInvertOrNot ( m_peer->GetValue() ) ;
 
     SetValue( value ) ;
 
     wxEventType scrollEvent = wxEVT_NULL ;
@@ -320,11 +325,11 @@
         wxString text;
         int ht, wd;
 
         // Get maximum text label width and height
-        text.Printf(wxT("%d"), m_rangeMin);
+        text.Printf(wxT("%d"), MacInvertOrNot( m_rangeMin ) );
         GetTextExtent(text, &textwidth, &textheight);
-        text.Printf(wxT("%d"), m_rangeMax);
+        text.Printf(wxT("%d"), MacInvertOrNot( m_rangeMax ) );
         GetTextExtent(text, &wd, &ht);
         if(ht > textheight) {
             textheight = ht;
         }
@@ -382,11 +387,11 @@
         wxString text;
         int ht;
 
         // Get maximum text label width and height
-        text.Printf(wxT("%d"), m_rangeMin);
+        text.Printf(wxT("%d"), MacInvertOrNot( m_rangeMin ) );
         GetTextExtent(text, &minValWidth, &textheight);
-        text.Printf(wxT("%d"), m_rangeMax);
+        text.Printf(wxT("%d"), MacInvertOrNot( m_rangeMax ) );
         GetTextExtent(text, &maxValWidth, &ht);
         if(ht > textheight) {
             textheight = ht;
         }
@@ -435,7 +440,29 @@
 
 void wxSlider::DoMoveWindow(int x, int y, int width, int height)
 {
     wxControl::DoMoveWindow(x,y,width,height) ;
+}
+
+// Common processing to invert slider values based on wxSL_INVERSE
+int wxSlider::MacInvertOrNot(int value) const
+{
+    if (m_windowStyle & wxSL_VERTICAL)
+    {
+        // The reason for the backwards logic is that Mac's vertical sliders are
+        // inverted compared to Windows and GTK, hence we want inversion to be the
+        // default, and if wxSL_INVERSE is set, then we do not invert (use native)
+        if (m_windowStyle & wxSL_INVERSE)
+            return value;
+        else
+            return (m_rangeMax + m_rangeMin) - value;
+    }
+    else // normal logic applies to HORIZONTAL sliders
+    {
+        if (m_windowStyle & wxSL_INVERSE)
+            return (m_rangeMax + m_rangeMin) - value;
+        else
+            return value;
+    }
 }
 
 #endif // wxUSE_SLIDER
Index: slider.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/mac/carbon/slider.h,v
retrieving revision 1.6
diff -u -4 -r1.6 slider.h
--- slider.h	2004/09/30 16:37:50	1.6
+++ slider.h	2005/01/23 17:54:40
@@ -92,8 +92,11 @@
   void Command(wxCommandEvent& event);
     virtual wxInt32 MacControlHit( WXEVENTHANDLERREF handler , WXEVENTREF event ) ;
     void                     MacHandleControlClick( WXWidget control , wxInt16 controlpart , bool mouseStillDown ) ;
 
+    // Common processing to invert slider values based on wxSL_INVERSE
+    int MacInvertOrNot(int value) const;
+
      wxStaticText*    m_macMinimumStatic ;
      wxStaticText*    m_macMaximumStatic ;
      wxStaticText*    m_macValueStatic ;
 

 	  	 
