diff -ru wxWidgets.orig/src/unix/gsocket.cpp wxWidgets/src/unix/gsocket.cpp
--- wxWidgets.orig/src/unix/gsocket.cpp	2007-02-13 12:10:04.000000000 +0100
+++ wxWidgets/src/unix/gsocket.cpp	2007-03-09 17:38:24.000000000 +0100
@@ -251,13 +251,13 @@
   misalign = sizeof(char *) - pos%sizeof(char *);
   if(misalign < sizeof(char *))
     pos += misalign;
-  
+
   /* leave space for pointer list */
   p = h->h_aliases;
   char **h_aliases = (char **)(buffer + pos);
   while(*(p++) != 0)
     pos += sizeof(char *);
-  
+
   /* copy aliases and fill new pointer list */
   for (p = h->h_aliases, q = h_aliases; *p != 0; p++, q++)
   {
@@ -389,13 +389,13 @@
   unsigned int misalign = sizeof(char *) - pos%sizeof(char *);
   if(misalign < sizeof(char *))
     pos += misalign;
-  
+
   /* leave space for pointer list */
   char **p = s->s_aliases, **q;
   char **s_aliases = (char **)(buffer + pos);
   while(*(p++) != 0)
     pos += sizeof(char *);
-  
+
   /* copy addresses and fill new pointer list */
   for (p = s->s_aliases, q = s_aliases; *p != 0; p++, q++){
     len = strlen(*p);
@@ -762,7 +762,7 @@
 
   /* FreeBSD variants can't use MSG_NOSIGNAL, and instead use a socket option */
 #ifdef SO_NOSIGPIPE
-  setsockopt(m_fd, SOL_SOCKET, SO_NOSIGPIPE, (const char*)&arg, sizeof(u_long));
+  setsockopt(m_fd, SOL_SOCKET, SO_NOSIGPIPE, (const char*)&arg, sizeof(arg));
 #endif
 
   ioctl(m_fd, FIONBIO, &arg);
@@ -773,9 +773,9 @@
    */
   if (m_reusable)
   {
-    setsockopt(m_fd, SOL_SOCKET, SO_REUSEADDR, (const char*)&arg, sizeof(u_long));
+    setsockopt(m_fd, SOL_SOCKET, SO_REUSEADDR, (const char*)&arg, sizeof(arg));
 #ifdef SO_REUSEPORT
-    setsockopt(m_fd, SOL_SOCKET, SO_REUSEPORT, (const char*)&arg, sizeof(u_long));
+    setsockopt(m_fd, SOL_SOCKET, SO_REUSEPORT, (const char*)&arg, sizeof(arg));
 #endif
   }
 
@@ -967,7 +967,7 @@
 
   /* FreeBSD variants can't use MSG_NOSIGNAL, and instead use a socket option */
 #ifdef SO_NOSIGPIPE
-  setsockopt(m_fd, SOL_SOCKET, SO_NOSIGPIPE, (const char*)&arg, sizeof(u_long));
+  setsockopt(m_fd, SOL_SOCKET, SO_NOSIGPIPE, (const char*)&arg, sizeof(arg));
 #endif
 
 #if defined(__EMX__) || defined(__VISAGECPP__)
@@ -979,9 +979,9 @@
   // If the reuse flag is set, use the applicable socket reuse flags(s)
   if (m_reusable)
   {
-    setsockopt(m_fd, SOL_SOCKET, SO_REUSEADDR, (const char*)&arg, sizeof(u_long));
+    setsockopt(m_fd, SOL_SOCKET, SO_REUSEADDR, (const char*)&arg, sizeof(arg));
 #ifdef SO_REUSEPORT
-    setsockopt(m_fd, SOL_SOCKET, SO_REUSEPORT, (const char*)&arg, sizeof(u_long));
+    setsockopt(m_fd, SOL_SOCKET, SO_REUSEPORT, (const char*)&arg, sizeof(arg));
 #endif
   }
 
@@ -1111,6 +1111,14 @@
 #endif
   gs_gui_functions->Enable_Events(this);
 
+  if (m_reusable)
+  {
+    setsockopt(m_fd, SOL_SOCKET, SO_REUSEADDR, (const char*)&arg, sizeof(arg));
+#ifdef SO_REUSEPORT
+    setsockopt(m_fd, SOL_SOCKET, SO_REUSEPORT, (const char*)&arg, sizeof(arg));
+#endif
+  }
+
   /* Bind to the local address,
    * and retrieve the actual address bound.
    */
@@ -1319,7 +1327,7 @@
       {
         /* This is a TCP server socket that detected a connection.
           While the INPUT_FLAG is also set, it doesn't matter on
-          this kind of  sockets, as we can only Accept() from them. */        
+          this kind of  sockets, as we can only Accept() from them. */
         result |= GSOCK_CONNECTION_FLAG;
         m_detected |= GSOCK_CONNECTION_FLAG;
       }

 	  	 
