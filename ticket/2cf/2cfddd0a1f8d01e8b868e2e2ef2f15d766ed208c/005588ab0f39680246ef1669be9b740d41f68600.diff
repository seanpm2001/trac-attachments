diff --git src/common/fswatchercmn.cpp src/common/fswatchercmn.cpp
index 73a608c..a13dfd3 100644
--- src/common/fswatchercmn.cpp
+++ src/common/fswatchercmn.cpp
@@ -159,8 +159,11 @@ bool wxFileSystemWatcherBase::AddTree(const wxFileName& path, int events,
         // all of them to Add() and let it choose? this is useful when adding a
         // file to a dir that is already watched, then not only should we know
         // about that, but Add() should also behave well then
-        virtual wxDirTraverseResult OnFile(const wxString& WXUNUSED(filename))
-        {
+        virtual wxDirTraverseResult OnFile(const wxString& filename)
+         {
+            wxLogTrace(wxTRACE_FSWATCHER, "--- AddTree adding file '%s' ---",
+                                                                    filename);
+            m_watcher->DoAdd(wxFileName::FileName(filename), m_events, wxFSWPath_File);
             return wxDIR_CONTINUE;
         }
 
@@ -169,7 +172,7 @@ bool wxFileSystemWatcherBase::AddTree(const wxFileName& path, int events,
             wxLogTrace(wxTRACE_FSWATCHER, "--- AddTree adding '%s' ---",
                                                                     dirname);
             // we add as much as possible and ignore errors
-            m_watcher->Add(wxFileName(dirname), m_events);
+            m_watcher->DoAdd(wxFileName::DirName(dirname), m_events, wxFSWPath_Dir);
             return wxDIR_CONTINUE;
         }
 
@@ -182,6 +185,9 @@ bool wxFileSystemWatcherBase::AddTree(const wxFileName& path, int events,
     wxDir dir(path.GetFullPath());
     AddTraverser traverser(this, events);
     dir.Traverse(traverser, filter);
+    
+    // We need to add 'path' too; wxDir doesn't
+    Add(path.GetPathWithSep(), events);
 
     return true;
 }
@@ -209,7 +215,7 @@ bool wxFileSystemWatcherBase::RemoveTree(const wxFileName& path)
 
         virtual wxDirTraverseResult OnDir(const wxString& dirname)
         {
-            m_watcher->RemoveTree(wxFileName(dirname));
+            m_watcher->Remove(wxFileName::DirName(dirname));
             return wxDIR_CONTINUE;
         }
 
@@ -221,6 +227,9 @@ bool wxFileSystemWatcherBase::RemoveTree(const wxFileName& path)
     RemoveTraverser traverser(this);
     dir.Traverse(traverser);
 
+    // We need to remove 'path' too; wxDir doesn't
+    Remove(path);
+
     return true;
 }
 
