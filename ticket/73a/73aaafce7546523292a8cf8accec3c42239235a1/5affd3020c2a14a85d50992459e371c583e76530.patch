Index: src/mac/carbon/menu.cpp
===================================================================
--- src/mac/carbon/menu.cpp	(revision 48645)
+++ src/mac/carbon/menu.cpp	(working copy)
@@ -402,40 +402,42 @@
 // helper functions returning the mac menu position for a certain item, note that this is
 // mac-wise 1 - based, i.e. the first item has index 1 whereas on MSWin it has pos 0
 
+
+// XXX If there are multiple items with the same command ID (e.g. for doing
+// dynamic menu items), this will only find the first one.
 int wxMenu::MacGetIndexFromId( int id )
 {
-    size_t pos;
-    wxMenuItemList::compatibility_iterator node = GetMenuItems().GetFirst();
-    for ( pos = 0; node; pos++ )
-    {
-        if ( node->GetData()->GetId() == id )
-            break;
-
-        node = node->GetNext();
+    // Use the Mac menu to find the right item.
+    UInt32 command = wxIdToMacCommand(id);
+    MenuRef menuref = (MenuRef) GetHMenu();
+    UInt16 item_count = CountMenuItems(menuref);
+    for(UInt16 idx = 1; idx <= item_count; ++ idx) {
+        UInt32 other_command = 0;
+        GetMenuItemCommandID(menuref, idx, &other_command);
+        if(command == other_command) {
+            return idx;
+        }
     }
 
-    if (!node)
-        return 0;
-
-    return pos + 1 ;
+    // Didn't find it.
+    return 0;
 }
 
 int wxMenu::MacGetIndexFromItem( wxMenuItem *pItem )
 {
-    size_t pos;
-    wxMenuItemList::compatibility_iterator node = GetMenuItems().GetFirst();
-    for ( pos = 0; node; pos++ )
-    {
-        if ( node->GetData() == pItem )
-            break;
-
-        node = node->GetNext();
+    // Use the Mac menu to find the right item.
+    MenuRef menuref = (MenuRef) GetHMenu();
+    UInt16 item_count = CountMenuItems(menuref);
+    for(UInt16 idx = 1; idx <= item_count; ++ idx) {
+      UInt32 refcon = 0;
+      GetMenuItemRefCon(menuref, idx, &refcon);
+      if((wxMenuItem*) refcon == (wxMenuItem*) pItem) {
+          return idx;
+      }
     }
 
-    if (!node)
-        return 0;
-
-    return pos + 1 ;
+    // Didn't find it.
+    return 0;
 }
 
 void wxMenu::MacEnableMenu( bool bDoEnable )
@@ -796,6 +798,16 @@
             }
 
             wxInsertMenuItemsInMenu(menu, wm, winListStart);
+
+	    // Re-associate the wxMenu with the window menu, otherwise the
+	    // menu item indexes will be wrong.  This is safe since the Mac
+	    // menu items were copied above:
+            if( (MenuRef) menu->GetHMenu() != wm ) {
+                ::DisposeMenu(MAC_WXHMENU(menu->GetHMenu()));
+                menu->SetHMenu((WXHMENU) wm);
+                wxRemoveMacMenuAssociation( menu );
+                wxAssociateMenuWithMacMenu( wm , menu ) ;
+            }
         }
         else
         {
Index: include/wx/mac/carbon/menu.h
===================================================================
--- include/wx/mac/carbon/menu.h	(revision 48645)
+++ include/wx/mac/carbon/menu.h	(working copy)
@@ -59,6 +59,10 @@
         // get the menu handle
     WXHMENU GetHMenu() const { return m_hMenu; }
 
+    // set the menu handle (warning! this can leak menus if not used
+    // carefully!)
+    void SetHMenu(WXHMENU hMenu) { this->m_hMenu = hMenu; }
+
     short MacGetMenuId() { return m_macMenuId ; }
 
 protected:

 	  	 
