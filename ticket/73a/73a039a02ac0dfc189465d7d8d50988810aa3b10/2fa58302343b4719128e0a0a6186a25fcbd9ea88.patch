Index: samples/menu/menu.cpp
===================================================================
--- samples/menu/menu.cpp	(revision 49346)
+++ samples/menu/menu.cpp	(working copy)
@@ -510,13 +510,13 @@
 #endif
 
     wxMenu *testMenu = new wxMenu;
-    testMenu->Append(Menu_Test_Normal, _T("&Normal item"));
-    testMenu->AppendSeparator();
-    testMenu->AppendCheckItem(Menu_Test_Check, _T("&Check item"));
-    testMenu->AppendSeparator();
-    testMenu->AppendRadioItem(Menu_Test_Radio1, _T("Radio item &1"));
-    testMenu->AppendRadioItem(Menu_Test_Radio2, _T("Radio item &2"));
-    testMenu->AppendRadioItem(Menu_Test_Radio3, _T("Radio item &3"));
+    testMenu->Append(10005, _T("&Normal item"));
+    //testMenu->AppendSeparator();
+    testMenu->AppendCheckItem(10004, _T("&Check item"));
+    //testMenu->AppendSeparator();
+    testMenu->AppendRadioItem(-10003, _T("Radio item &1"));
+    testMenu->AppendRadioItem(-10001, _T("Radio item &2"));
+    testMenu->AppendRadioItem(-10002, _T("Radio item &3"));
 
     wxMenu *helpMenu = new wxMenu;
     helpMenu->Append(Menu_Help_About, _T("&About\tF1"), _T("About menu sample"));
Index: src/common/menucmn.cpp
===================================================================
--- src/common/menucmn.cpp	(revision 49346)
+++ src/common/menucmn.cpp	(working copy)
@@ -30,6 +30,7 @@
     #include "wx/intl.h"
     #include "wx/log.h"
     #include "wx/menu.h"
+    #include "wx/frame.h"
 #endif
 
 #include "wx/stockitem.h"
@@ -472,6 +473,33 @@
             menu = menu->GetParent();
         }
     }
+    
+    if( !processed )
+    {
+        // If the menu has a menu bar, send events to it (or really its frame)
+        wxMenuBase* curMenu = this;
+        
+        // Find the menu bar this menu belongs to
+        while(curMenu)
+        {
+            if(curMenu->m_menuBar)
+            {
+                if(curMenu->m_menuBar->GetFrame())
+                {
+                    wxEvtHandler *handler = curMenu->m_menuBar->GetFrame()->GetEventHandler();
+                    if ( handler )
+                        processed = handler->ProcessEvent(event);
+                }
+                
+                break;
+            }
+            
+            // Parent menu
+            curMenu = curMenu->GetParent();
+        }
+    }
+    
+    
 
     return processed;
 }
Index: src/msw/frame.cpp
===================================================================
--- src/msw/frame.cpp	(revision 49346)
+++ src/msw/frame.cpp	(working copy)
@@ -967,6 +967,26 @@
 
             return popupMenu->MSWCommand(cmd, id);
         }
+        else if(GetMenuBar())
+        {
+            wxMenuItem* item = GetMenuBar()->FindItem((int)(signed short)id);
+            if(!item)
+            {
+                wxLogDebug(wxT("NOT FOUND 1"));
+                item = GetMenuBar()->FindItem(id);
+            }
+            
+            if(item && item->GetMenu())
+            {
+                wxLogDebug(wxT("FOUND ITEM"));
+                return item->GetMenu()->MSWCommand(cmd, id);
+            }
+            else
+            {
+                wxLogDebug(wxT("NOT FOUND 2"));
+            }
+                
+        }
 #endif // wxUSE_MENUS_NATIVE
 
 #if defined(__SMARTPHONE__) && defined(__WXWINCE__)
Index: src/msw/menu.cpp
===================================================================
--- src/msw/menu.cpp	(revision 49346)
+++ src/msw/menu.cpp	(working copy)
@@ -399,7 +399,7 @@
         flags |= MF_POPUP;
     }
     else {
-        id = pItem->GetId();
+        id = (unsigned short)(signed short) pItem->GetId();
     }
 
 
Index: src/msw/menuitem.cpp
===================================================================
--- src/msw/menuitem.cpp	(revision 49346)
+++ src/msw/menuitem.cpp	(working copy)
@@ -258,6 +258,7 @@
 
 void wxMenuItem::Check(bool check)
 {
+    wxLogDebug(wxT("%d"), GetId());
     wxCHECK_RET( IsCheckable(), wxT("only checkable items may be checked") );
 
     if ( m_isChecked == check )
@@ -270,7 +271,10 @@
     {
         // it doesn't make sense to uncheck a radio item - what would this do?
         if ( !check )
+        {
+            wxLogDebug(wxT("Not Checked"));
             return;
+        }
 
         // get the index of this item in the menu
         const wxMenuItemList& items = m_parentMenu->GetMenuItems();
@@ -301,6 +305,8 @@
         // don't do it!
         wxCHECK_RET( start != -1 && end != -1,
                      _T("invalid ::CheckMenuRadioItem() parameter(s)") );
+                     
+        wxLogDebug(wxT("%d-%d-%d"), start, end, pos);
 
         if ( !::CheckMenuRadioItem(hmenu,
                                    start,   // the first radio group item

 	  	 
