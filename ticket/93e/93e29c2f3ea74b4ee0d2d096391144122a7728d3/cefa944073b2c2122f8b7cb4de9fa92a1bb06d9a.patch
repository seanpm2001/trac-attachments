Index: include/wx/buffer.h
===================================================================
--- include/wx/buffer.h	(revision 48673)
+++ include/wx/buffer.h	(working copy)
@@ -32,12 +32,14 @@
 
     wxCharTypeBuffer(const CharType *str = NULL)
         : m_str(str ? wxStrdup(str) : NULL),
+          m_size(str ? wxStrlen(str) : 0),
           m_owned(true)
     {
     }
 
     wxCharTypeBuffer(size_t len)
         : m_str((CharType *)malloc((len + 1)*sizeof(CharType))),
+          m_size(len),
           m_owned(true)
     {
         m_str[len] = (CharType)0;
@@ -47,6 +49,7 @@
     {
         wxCharTypeBuffer buf;
         buf.m_str = wx_const_cast(CharType*, str);
+        buf.m_size = (str ? wxStrlen(str) : 0);
         buf.m_owned = false;
         return buf;
     }
@@ -87,6 +90,7 @@
         if ( m_owned )
             free(m_str);
         m_str = NULL;
+        m_size = 0;
     }
 
     wxCharTypeBuffer(const wxCharTypeBuffer& src)
@@ -99,6 +103,7 @@
         if ( m_owned )
             free(m_str);
         m_str = str ? wxStrdup(str) : NULL;
+        m_size = str ? wxStrlen(str) : 0;
         m_owned = true;
         return *this;
     }
@@ -119,9 +124,12 @@
             str = (CharType *)realloc(m_str, (len + 1)*sizeof(CharType));
         if ( !str )
             return false;
-
+            
         m_str = str;
+        m_str[len] = (CharType)0;
+        m_size = len;
 
+
         return true;
     }
 
@@ -129,6 +137,9 @@
     const CharType *data() const { return m_str; }
     operator const CharType *() const { return m_str; }
     CharType operator[](size_t n) const { return m_str[n]; }
+    
+    // size returns the size of the buffer excluding the +1 for the terminator
+    size_t size() const { return m_size; }
 
 
 private:
@@ -136,6 +147,7 @@
     {
         CharType *p = m_str;
         ((wxCharTypeBuffer *)this)->m_str = NULL;
+        ((wxCharTypeBuffer *)this)->m_size = 0;
         return p;
     }
 
@@ -143,10 +155,12 @@
     {
         m_owned = src.m_owned;
         m_str = src.DoRelease();
+        m_size = m_str ? wxStrlen(m_str) : 0;
     }
 
 private:
     CharType *m_str;
+    size_t m_size;
     bool m_owned;
 };
 

 	  	 
