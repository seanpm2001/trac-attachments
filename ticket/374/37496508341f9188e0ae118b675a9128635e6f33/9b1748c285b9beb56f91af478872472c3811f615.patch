diff -uNr wxWidgets-3.1.4-orig/include/wx/osx/listbox.h wxWidgets-3.1.4-mine/include/wx/osx/listbox.h
--- wxWidgets-3.1.4-orig/include/wx/osx/listbox.h	2020-07-22 19:20:06.000000000 +0200
+++ wxWidgets-3.1.4-mine/include/wx/osx/listbox.h	2020-11-13 21:46:29.000000000 +0100
@@ -153,6 +153,7 @@
     virtual wxSize DoGetBestSize() const wxOVERRIDE;
 
     bool m_blockEvents;
+    bool m_blockEnsureVisible;
 
     wxListWidgetColumn* m_textColumn;
 
diff -uNr wxWidgets-3.1.4-orig/src/osx/listbox_osx.cpp wxWidgets-3.1.4-mine/src/osx/listbox_osx.cpp
--- wxWidgets-3.1.4-orig/src/osx/listbox_osx.cpp	2020-07-22 19:20:06.000000000 +0200
+++ wxWidgets-3.1.4-mine/src/osx/listbox_osx.cpp	2020-11-14 21:14:41.000000000 +0100
@@ -72,6 +72,7 @@
 {
     DontCreatePeer();
     m_blockEvents = false;
+    m_blockEnsureVisible = false;
 
     if ( ! (style & wxNO_BORDER) )
         style = (style & ~wxBORDER_MASK) | wxSUNKEN_BORDER ;
@@ -202,7 +203,7 @@
 
     UpdateOldSelections();
 
-    if (select)
+    if ( select && !m_blockEnsureVisible )
         EnsureVisible(n);
 }
 
@@ -349,7 +350,26 @@
 {
     int idx = wxNOT_FOUND;
     unsigned int startpos = pos;
-
+    wxArrayInt selections;
+    int numSelections = 0;
+    
+    if ( !IsSorted() )
+    {
+        if ( HasMultipleSelection() )
+        {
+            numSelections = GetSelections(selections);
+        }
+        else
+        {
+            int sel = GetSelection();
+            if ( sel != wxNOT_FOUND )
+            {
+                selections.Add(sel);
+                numSelections = 1;
+            }
+        }
+    }
+        
     const unsigned int numItems = items.GetCount();
     for ( unsigned int i = 0; i < numItems; ++i )
     {
@@ -366,15 +386,30 @@
     }
 
     GetListPeer()->UpdateLineToEnd(startpos);
-
-    // Inserting the items may scroll the listbox down to show the last
-    // selected one but we don't want to do it as it could result in e.g. the
-    // first items of a listbox be hidden immediately after its creation so
-    // show the first selected item instead. Ideal would probably be to
-    // preserve the old selection unchanged, in fact, but I don't know how to
-    // get the first visible item so for now do at least this.
-    SetFirstItem(startpos);
-
+        
+    for ( int i = 0; i < numSelections; ++i )
+    {
+        if ( startpos <= selections[i] )
+        {
+            if ( HasMultipleSelection() ) {
+                        
+                int j;
+                    
+                // Do not deselect item if it is to be selected below
+                for ( j = 0; j < numSelections; ++j )
+                {
+                    if ( selections[i] == selections[j] + numItems ) break;
+                }
+                
+                if ( j == numSelections ) Deselect(selections[i]);
+            }
+                
+            m_blockEnsureVisible = true;
+            SetSelection(selections[i] + numItems);
+            m_blockEnsureVisible = false;
+        }
+    }
+        
     InvalidateBestSize();
 
     UpdateOldSelections();
