Index: include/wx/generic/treectlg.h
===================================================================
--- include/wx/generic/treectlg.h	(revision 63279)
+++ include/wx/generic/treectlg.h	(working copy)
@@ -122,6 +122,11 @@
     virtual size_t GetSelections(wxArrayTreeItemIds&) const;
     virtual wxTreeItemId GetFocusedItem() const { return m_current; }
 
+    // Clears the currently focused item
+    virtual void ClearFocusedItem();
+    // Sets the currently focused item. Item should be valid
+    virtual void SetFocusedItem(const wxTreeItemId& item);
+
     virtual wxTreeItemId GetItemParent(const wxTreeItemId& item) const;
     virtual wxTreeItemId GetFirstChild(const wxTreeItemId& item,
                                        wxTreeItemIdValue& cookie) const;
Index: include/wx/msw/treectrl.h
===================================================================
--- include/wx/msw/treectrl.h	(revision 63279)
+++ include/wx/msw/treectrl.h	(working copy)
@@ -128,7 +128,13 @@
     virtual wxTreeItemId GetSelection() const;
     virtual size_t GetSelections(wxArrayTreeItemIds& selections) const;
     virtual wxTreeItemId GetFocusedItem() const;
+    
+    // Clears the currently focused item
+    virtual void ClearFocusedItem();
+    // Sets the currently focused item. Item should be valid
+    virtual void SetFocusedItem(const wxTreeItemId& item);
 
+
     virtual wxTreeItemId GetItemParent(const wxTreeItemId& item) const;
     virtual wxTreeItemId GetFirstChild(const wxTreeItemId& item,
                                        wxTreeItemIdValue& cookie) const;
@@ -285,9 +291,6 @@
     // and the tree has wxTR_HIDE_ROOT style)
     bool IsHiddenRoot(const wxTreeItemId& item) const;
 
-    // clears/sets the currently focused item
-    void ClearFocusedItem();
-    void SetFocusedItem(const wxTreeItemId& item);
 
     // check if the given flags (taken from TV_HITTESTINFO structure)
     // indicate a position "on item": this is less trivial than just checking
Index: include/wx/treectrl.h
===================================================================
--- include/wx/treectrl.h	(revision 63279)
+++ include/wx/treectrl.h	(working copy)
@@ -214,6 +214,13 @@
         // equivalent to GetSelection() if not wxTR_MULTIPLE
     virtual wxTreeItemId GetFocusedItem() const = 0;
 
+
+        // Clears the currently focused item
+    virtual void ClearFocusedItem() = 0;
+        // Sets the currently focused item. Item should be valid
+    virtual void SetFocusedItem(const wxTreeItemId& item)  = 0;
+
+
         // get the parent of this item (may return NULL if root)
     virtual wxTreeItemId GetItemParent(const wxTreeItemId& item) const = 0;
 
Index: interface/wx/treectrl.h
===================================================================
--- interface/wx/treectrl.h	(revision 63279)
+++ interface/wx/treectrl.h	(working copy)
@@ -437,7 +437,23 @@
     */
     virtual wxTreeItemId GetFocusedItem() const;
 
+
     /**
+        Clears the currently focused item
+
+        @since 2.9.1
+    */
+    virtual void ClearFocusedItem() = 0;
+
+    /**
+        Sets the currently focused item. Item should be valid
+
+        @since 2.9.1
+    */
+    virtual void SetFocusedItem(const wxTreeItemId& item)  = 0;
+
+
+    /**
         Returns the normal image list.
     */
     wxImageList* GetImageList() const;
Index: samples/treectrl/treetest.cpp
===================================================================
--- samples/treectrl/treetest.cpp	(revision 63279)
+++ samples/treectrl/treetest.cpp	(working copy)
@@ -129,6 +129,8 @@
     MENU_LINK(ToggleIcon)
     MENU_LINK(ToggleState)
     MENU_LINK(SelectRoot)
+    MENU_LINK(SetFocusedRoot)
+    MENU_LINK(ClearFocused)
 
     MENU_LINK(ShowFirstVisible)
 #ifdef wxHAS_LAST_VISIBLE
@@ -263,6 +265,9 @@
     tree_menu->Append(TreeTest_DeleteChildren, wxT("Delete &children"));
     tree_menu->Append(TreeTest_DeleteAll, wxT("Delete &all items"));
     tree_menu->Append(TreeTest_SelectRoot, wxT("Select root item"));
+    tree_menu->AppendSeparator();
+    tree_menu->Append(TreeTest_SetFocusedRoot, wxT("Set root item Focused"));
+    tree_menu->Append(TreeTest_ClearFocused, wxT("Clear Focused item"));
 
     tree_menu->AppendSeparator();
     tree_menu->Append(TreeTest_Count, wxT("Count children of current item"));
@@ -592,6 +597,18 @@
         m_treeCtrl->SelectItem(m_treeCtrl->GetRootItem());
 }
 
+void MyFrame::OnSetFocusedRoot(wxCommandEvent& WXUNUSED(event))
+{
+    if ( !m_treeCtrl->HasFlag(wxTR_HIDE_ROOT) )
+        m_treeCtrl->SetFocusedItem(m_treeCtrl->GetRootItem());
+}
+
+void MyFrame::OnClearFocused(wxCommandEvent& WXUNUSED(event))
+{
+//    if ( m_treeCtrl->GetFocusedItem().IsOk() )
+            m_treeCtrl->ClearFocusedItem();
+}
+
 void MyFrame::OnUnselect(wxCommandEvent& WXUNUSED(event))
 {
     m_treeCtrl->UnselectAll();
Index: samples/treectrl/treetest.h
===================================================================
--- samples/treectrl/treetest.h	(revision 63279)
+++ samples/treectrl/treetest.h	(working copy)
@@ -212,6 +212,8 @@
     void OnSelectChildren(wxCommandEvent& event);
 #endif // NO_MULTIPLE_SELECTION
     void OnSelectRoot(wxCommandEvent& event);
+    void OnSetFocusedRoot(wxCommandEvent& event);
+    void OnClearFocused(wxCommandEvent& event);
     void OnDelete(wxCommandEvent& event);
     void OnDeleteChildren(wxCommandEvent& event);
     void OnDeleteAll(wxCommandEvent& event);
@@ -355,6 +357,8 @@
     TreeTest_Select,
     TreeTest_Unselect,
     TreeTest_SelectRoot,
+    TreeTest_ClearFocused,
+    TreeTest_SetFocusedRoot,
     TreeTest_SelectChildren,
     TreeTest_ShowFirstVisible,
     TreeTest_ShowLastVisible,
Index: src/generic/treectlg.cpp
===================================================================
--- src/generic/treectlg.cpp	(revision 63279)
+++ src/generic/treectlg.cpp	(working copy)
@@ -1953,6 +1953,18 @@
     }
 }
 
+void wxGenericTreeCtrl::ClearFocusedItem()
+{
+    wxTreeItemId item = GetFocusedItem();
+    if ( item.IsOk() ) SelectItem(item, false);
+}
+
+void wxGenericTreeCtrl::SetFocusedItem(const wxTreeItemId& item)
+{
+    wxCHECK_RET( item.IsOk(), wxT("invalid tree item") );
+    SelectItem(item, true);
+}
+
 void wxGenericTreeCtrl::UnselectAllChildren(wxGenericTreeItem *item)
 {
     if (item->IsSelected())
Index: src/msw/treectrl.cpp
===================================================================
--- src/msw/treectrl.cpp	(revision 63279)
+++ src/msw/treectrl.cpp	(working copy)
@@ -2137,6 +2137,8 @@
 
 void wxTreeCtrl::SetFocusedItem(const wxTreeItemId& item)
 {
+    wxCHECK_RET( item.IsOk(), wxT("invalid tree item") );
+
     TempSetter set(m_changingSelection);
 
     ::SetFocus(GetHwnd(), HITEM(item));
@@ -3217,7 +3219,7 @@
                     // unprocessed
                     MSWHandleSelectionKey(wParam);
                 }
-
+                
                 // pretend that we did process it in any case as we already
                 // generated an event for it
                 processed = true;
