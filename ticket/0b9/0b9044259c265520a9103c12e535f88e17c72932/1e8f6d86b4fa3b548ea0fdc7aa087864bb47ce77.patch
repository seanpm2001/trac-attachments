Index: src/aui/framemanager.cpp
===================================================================
--- src/aui/framemanager.cpp	(révision 72301)
+++ src/aui/framemanager.cpp	(copie de travail)
@@ -4793,7 +4793,7 @@
     }
     else if (evt.button == wxAUI_BUTTON_MAXIMIZE_RESTORE && !pane.IsMaximized())
     {
-        // fire pane close event
+        // fire pane maximize event
         wxAuiManagerEvent e(wxEVT_AUI_PANE_MAXIMIZE);
         e.SetManager(this);
         e.SetPane(evt.pane);
@@ -4807,7 +4807,7 @@
     }
     else if (evt.button == wxAUI_BUTTON_MAXIMIZE_RESTORE && pane.IsMaximized())
     {
-        // fire pane close event
+        // fire pane restore event
         wxAuiManagerEvent e(wxEVT_AUI_PANE_RESTORE);
         e.SetManager(this);
         e.SetPane(evt.pane);
@@ -4819,12 +4819,31 @@
             Update();
         }
     }
-    else if (evt.button == wxAUI_BUTTON_PIN)
-    {
-        if ((m_flags & wxAUI_MGR_ALLOW_FLOATING) &&
-            pane.IsFloatable())
-                pane.Float();
-        Update();
+    else if (evt.button == wxAUI_BUTTON_PIN && (m_flags & wxAUI_MGR_ALLOW_FLOATING) && pane.IsFloatable())
+    {       
+        if (pane.IsMaximized()) 
+        {
+            // If the pane is maximized, the original state must be restored
+            // before trying to float the pane
+            // If application vetoes restoration, we do nothing
+            wxAuiManagerEvent e(wxEVT_AUI_PANE_RESTORE);
+            e.SetManager(this);
+            e.SetPane(evt.pane);
+            ProcessMgrEvent(e);
+
+            if (!e.GetVeto())
+            {
+               RestorePane(pane);
+               pane.Float();
+               Update();
+            }
+
+        } 
+        else
+        {
+            pane.Float();
+            Update();
+        }
     }
 }
 
