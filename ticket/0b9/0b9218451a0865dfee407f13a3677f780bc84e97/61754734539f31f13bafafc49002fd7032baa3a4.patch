diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig/include/wx/gsocket.h wxWindows/include/wx/gsocket.h
--- wxWindows.orig/include/wx/gsocket.h	Fri Feb  6 14:11:14 2004
+++ wxWindows/include/wx/gsocket.h	Fri Feb  6 14:11:24 2004
@@ -66,5 +66,6 @@
   GSOCK_WOULDBLOCK,
   GSOCK_TIMEDOUT,
-  GSOCK_MEMERR
+  GSOCK_MEMERR,
+  GSOCK_OPTERR,
 } GSocketError;
 
@@ -290,4 +291,12 @@
 void GSocket_UnsetCallback(GSocket *socket, GSocketEventFlags flags);
 
+GSocketError GSocket_GetSockOpt(GSocket *socket, int level, int optname,
+                                void *optval, int *optlen);
+
+GSocketError GSocket_SetSockOpt(GSocket *socket, int level, int optname, 
+                                const void *optval, int optlen);
+
+void GSocket_Streamed(GSocket *socket);
+void GSocket_Unstreamed(GSocket *socket);
 
 /* GAddress */
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig/include/wx/socket.h wxWindows/include/wx/socket.h
--- wxWindows.orig/include/wx/socket.h	Fri Feb  6 14:11:14 2004
+++ wxWindows/include/wx/socket.h	Fri Feb  6 14:11:23 2004
@@ -180,4 +180,8 @@
   void SetTimeout(long seconds);
 
+  bool GetOption(int level, int optname, void *optval, int *optlen);
+  bool SetOption(int level, int optname, const void *optval, int optlen);
+  inline wxUint32 GetLastIOSize() const { return m_lcount; };
+
   // event handling
   void *GetClientData() const { return m_clientData; }
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig/src/common/socket.cpp wxWindows/src/common/socket.cpp
--- wxWindows.orig/src/common/socket.cpp	Fri Feb  6 14:11:13 2004
+++ wxWindows/src/common/socket.cpp	Fri Feb  6 14:11:24 2004
@@ -754,4 +754,5 @@
 }
 
+
 bool wxSocketBase::WaitForWrite(long seconds, long milliseconds)
 {
@@ -1162,4 +1163,25 @@
 }
 
+bool wxSocketBase::GetOption(int level, int optname, void *optval, int *optlen)
+{
+    if (GSocket_GetSockOpt(m_socket, level, optname, optval, optlen) 
+        != GSOCK_NOERROR)
+    {
+        return FALSE;
+    }
+    return TRUE;
+}
+
+bool wxSocketBase::SetOption(int level, int optname, const void *optval, 
+                              int optlen)
+{
+    if (GSocket_SetSockOpt(m_socket, level, optname, optval, optlen) 
+        != GSOCK_NOERROR)
+    {
+        return FALSE;
+    }
+    return TRUE;
+}
+
 // ==========================================================================
 // wxSocketClient
@@ -1257,7 +1279,10 @@
 
   if(!m_socket)
+  {
+    wxASSERT_MSG( 0, _T("datagram socket not new'd") );
     return;
-
+  }
   // Setup the socket as non connection oriented
+  GSocket_Unstreamed(m_socket);
   GSocket_SetLocal(m_socket, addr.GetAddress());
   if( GSocket_SetNonOriented(m_socket) != GSOCK_NOERROR )
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig/src/msw/gsocket.c wxWindows/src/msw/gsocket.c
--- wxWindows.orig/src/msw/gsocket.c	Fri Feb  6 14:11:13 2004
+++ wxWindows/src/msw/gsocket.c	Fri Feb  6 14:11:25 2004
@@ -915,4 +915,34 @@
 }
 
+GSocketError GSocket_GetSockOpt(GSocket *socket, int level, int optname,
+                                void *optval, int *optlen)
+{
+    if (getsockopt(socket->m_fd, level, optname, optval, optlen) == 0)
+    {
+        return GSOCK_NOERROR;
+    }
+    return GSOCK_OPTERR;
+}
+
+GSocketError GSocket_SetSockOpt(GSocket *socket, int level, int optname, 
+                                const void *optval, int optlen)
+{
+    if (setsockopt(socket->m_fd, level, optname, optval, optlen) == 0)
+    {
+        return GSOCK_NOERROR;       
+    }
+    return GSOCK_OPTERR;
+}
+
+void GSocket_Streamed(GSocket *socket)
+{
+    socket->m_stream = TRUE;
+}
+
+void GSocket_Unstreamed(GSocket *socket)
+{
+    socket->m_stream = FALSE;
+}
+
 /* Internals (IO) */
 
@@ -1237,5 +1267,5 @@
 
   address->m_family = GSOCK_INET;
-  address->m_realfamily = PF_INET;
+  address->m_realfamily = AF_INET;
   ((struct sockaddr_in *)address->m_addr)->sin_family = AF_INET;
   ((struct sockaddr_in *)address->m_addr)->sin_addr.s_addr = INADDR_ANY;
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig/src/unix/gsocket.c wxWindows/src/unix/gsocket.c
--- wxWindows.orig/src/unix/gsocket.c	Fri Feb  6 14:11:12 2004
+++ wxWindows/src/unix/gsocket.c	Fri Feb  6 14:11:25 2004
@@ -1015,4 +1015,33 @@
 }
 
+GSocketError GSocket_GetSockOpt(GSocket *socket, int level, int optname,
+                                void *optval, int *optlen)
+{
+    if (getsockopt(socket->m_fd, level, optname, optval, optlen) == 0)
+    {
+        return GSOCK_NOERROR;
+    }
+    return GSOCK_OPTERR;
+}
+
+GSocketError GSocket_SetSockOpt(GSocket *socket, int level, int optname, 
+                                const void *optval, int optlen)
+{
+    if (setsockopt(socket->m_fd, level, optname, optval, optlen) == 0)
+    {
+        return GSOCK_NOERROR;       
+    }
+    return GSOCK_OPTERR;
+}
+
+void GSocket_Streamed(GSocket *socket)
+{
+    socket->m_stream = TRUE;
+}
+
+void GSocket_Unstreamed(GSocket *socket)
+{
+    socket->m_stream = FALSE;
+}
 
 #define CALL_CALLBACK(socket, event) {                                  \

 	  	 
