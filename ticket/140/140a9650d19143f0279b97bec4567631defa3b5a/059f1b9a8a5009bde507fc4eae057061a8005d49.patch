Index: samples/oleauto/oleauto.cpp
===================================================================
--- samples/oleauto/oleauto.cpp	(revision 66285)
+++ samples/oleauto/oleauto.cpp	(working copy)
@@ -72,6 +72,8 @@
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
     void OnTest(wxCommandEvent& event);
+    WXIDISPATCH* GetExcel();
+    void DoExcelOperations(wxAutomationObject& excelObject);
 
 private:
     // any class wishing to process wxWidgets events must use this macro
@@ -200,18 +202,35 @@
         wxT("\nThe active cell should then say 'wxWidgets automation test!' in bold."),
         wxT("Excel start"));
 
+    wxAutomationObject excelObject(GetExcel());
+    if(excelObject.IsOk())
+    {
+            // Ensure that Excel is visible
+        if (!excelObject.PutProperty(wxT("Visible"), true))
+        {
+            wxLogError(wxT("Could not make Excel object visible"));
+            return;
+        }
+
+        DoExcelOperations(excelObject);
+    }
+}
+
+WXIDISPATCH* MyFrame::GetExcel()
+{
     wxAutomationObject excelObject;
-    if ( !excelObject.GetInstance(wxT("Excel.Application")) )
+    if ( !excelObject.GetInstance(wxT("Excel.Application"), wxAutomationInstance_CreateIfNeeded ))
     {
         wxLogError(wxT("Could not create Excel object."));
-        return;
+        return NULL;
     }
 
-    // Ensure that Excel is visible
-    if (!excelObject.PutProperty(wxT("Visible"), true))
-    {
-        wxLogError(wxT("Could not make Excel object visible"));
-    }
+    return excelObject.GetDispatchPtr();
+}
+
+void MyFrame::DoExcelOperations(wxAutomationObject& excelObject)  
+{
+    //wxAutomationObject excelObject(
     const wxVariant workbooksCountVariant = excelObject.GetProperty(wxT("Workbooks.Count"));
     if (workbooksCountVariant.IsNull())
     {
