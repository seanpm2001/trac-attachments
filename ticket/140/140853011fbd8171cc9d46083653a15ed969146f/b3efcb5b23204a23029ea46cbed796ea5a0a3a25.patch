diff --git a/include/wx/textentry.h b/include/wx/textentry.h
index 3a240d1..2f88f24 100644
--- a/include/wx/textentry.h
+++ b/include/wx/textentry.h
@@ -190,6 +190,9 @@ public:
             SuppressTextChangedEvents();
     }
 
+    // return true if the events are currently not suppressed
+    bool EventsAllowed() const { return m_eventsBlock == 0; }
+
 protected:
     // flags for DoSetValue(): common part of SetValue() and ChangeValue() and
     // also used to implement WriteText() in wxMSW
@@ -247,7 +250,6 @@ protected:
             SendTextUpdatedEvent();
     }
 
-
 private:
     // suppress or resume the text changed events generation: don't use these
     // functions directly, use EventsSuppressor class above instead
@@ -271,9 +273,6 @@ private:
     // initially the generation of the events is enabled
     virtual void EnableTextChangedEvents(bool WXUNUSED(enable)) { }
 
-    // return true if the events are currently not suppressed
-    bool EventsAllowed() const { return m_eventsBlock == 0; }
-
 
     // if this counter is non-null, events are blocked
     unsigned m_eventsBlock;
diff --git a/src/osx/cocoa/textctrl.mm b/src/osx/cocoa/textctrl.mm
index accef76..410a954 100644
--- a/src/osx/cocoa/textctrl.mm
+++ b/src/osx/cocoa/textctrl.mm
@@ -249,8 +249,21 @@ protected :
 {
     wxUnusedVar(aNotification);
     wxWidgetCocoaImpl* impl = (wxWidgetCocoaImpl* ) wxWidgetImpl::FindFromWXWidget( self );
-    if ( impl )
-        impl->controlTextDidChange();
+    if ( impl ) {
+        // This notification can be received as a result of a call to wxTextCtrl::ChangeValue, which should not generate
+        // a wxEVT_COMMAND_TEXT_UPDATED event, so check if events are allowed before notifying the cocoa implementation.
+        wxWindow* wxpeer = (wxWindow *) impl->GetWXPeer();
+        wxTextEntry* textEntry = NULL;
+        if ( wxDynamicCast( wxpeer, wxTextCtrl ) ) {
+            textEntry = ( wxTextEntry* ) ( wxDynamicCast( wxpeer, wxTextCtrl ) );
+        } else if ( wxDynamicCast( wxpeer, wxComboBox ) ) {
+            textEntry = ( wxTextEntry* ) ( wxDynamicCast( wxpeer, wxComboBox ) );
+        }
+
+        if ( !textEntry || textEntry->EventsAllowed() ) {
+            impl->controlTextDidChange();
+        }
+    }
 }
 
 typedef BOOL (*wxOSX_insertNewlineHandlerPtr)(NSView* self, SEL _cmd, NSControl *control, NSTextView* textView, SEL commandSelector);
@@ -640,6 +653,20 @@ void wxNSTextFieldControl::WriteText(const wxString& str)
         val.insert( start , str ) ;
         SetStringValue( val ) ;
         SetSelection( start + str.length() , start + str.length() ) ;
+
+        // An event is generated automatically by the Cocoa framework if the code passes through
+        // the other if branch, but here we have to generate it ourselves.
+        wxWindow* wxpeer = (wxWindow *) GetWXPeer();
+        wxTextEntry* textEntry = NULL;
+        if ( wxDynamicCast( wxpeer, wxTextCtrl ) ) {
+            textEntry = ( wxTextEntry* ) ( wxDynamicCast( wxpeer, wxTextCtrl ) );
+        } else if ( wxDynamicCast( wxpeer, wxComboBox ) ) {
+            textEntry = ( wxTextEntry* ) ( wxDynamicCast( wxpeer, wxComboBox ) );
+        }
+
+        if ( textEntry && textEntry->EventsAllowed() ) {
+            textEntry->SendTextUpdatedEvent();
+        }
     }
     m_lastKeyDownEvent = formerEvent;
 }
diff --git a/src/osx/textentry_osx.cpp b/src/osx/textentry_osx.cpp
index 2d9d79a..a6d531d 100644
--- a/src/osx/textentry_osx.cpp
+++ b/src/osx/textentry_osx.cpp
@@ -161,7 +161,10 @@ void wxTextEntry::WriteText(const wxString& str)
 {
     GetTextPeer()->WriteText( str ) ;
 
+    // An event will be generated by the Cocoa framework on OS X
+#if !defined(__WXOSX_COCOA__)
     SendTextUpdatedEventIfAllowed();
+#endif
 }
 
 void wxTextEntry::Clear()
