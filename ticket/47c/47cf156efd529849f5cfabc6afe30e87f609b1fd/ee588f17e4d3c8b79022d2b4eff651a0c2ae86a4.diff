diff -u2 -r wxWidgetsOrig/docs/latex/wx/csconv.tex wxWidgets/docs/latex/wx/csconv.tex
--- wxWidgetsOrig/docs/latex/wx/csconv.tex	2007-01-17 18:41:34.125000000 +0100
+++ wxWidgets/docs/latex/wx/csconv.tex	2006-12-20 13:39:53.453125000 +0100
@@ -33,6 +33,6 @@
 
 Constructor. You may specify either the name of the character set you want to
-convert from/to or an encoding constant. If the character set name is not
-recognized, ISO 8859-1 is used as fall back.
+convert from/to or an encoding constant. If the character set name (or the
+encoding) is not recognized, ISO 8859-1 is used as fall back.
 
 
@@ -44,4 +44,14 @@
 
 
+\membersection{wxCSConv::IsOk}\label{wxcsconvisok}
+
+\constfunc{bool}{IsOk}{\void}
+
+Returns \true if the charset (or the encoding) given at constructor is really
+available to use. Returns \false if ISO 8859-1 will be used instead.
+
+Note this does \_not\_ mean that a given string will be correctly converted.
+A bad-formed string will make conversion functions return \texttt{wxCONV\_FAILED}.
+
 \membersection{wxCSConv::MB2WC}\label{wxcsconvmb2wc}
 
diff -u2 -r wxWidgetsOrig/include/wx/strconv.h wxWidgets/include/wx/strconv.h
--- wxWidgetsOrig/include/wx/strconv.h	2007-01-17 18:44:05.000000000 +0100
+++ wxWidgets/include/wx/strconv.h	2006-12-20 09:39:48.906250000 +0100
@@ -385,4 +385,5 @@
 
     void Clear();
+    bool IsOk() const;
 
 private:
diff -u2 -r wxWidgetsOrig/src/common/strconv.cpp wxWidgets/src/common/strconv.cpp
--- wxWidgetsOrig/src/common/strconv.cpp	2007-01-17 18:51:54.187500000 +0100
+++ wxWidgets/src/common/strconv.cpp	2006-12-18 11:47:19.312172500 +0100
@@ -3519,4 +3519,21 @@
 }
 
+bool wxCSConv::IsOk() const
+{
+    CreateConvIfNeeded();
+	wxFontEncoding enc = m_encoding;
+
+	//Special case, no convReal created for wxFONTENCODING_ISO8859_1
+    if (enc == wxFONTENCODING_ISO8859_1)
+        return true; //It is OK, we manage it directly
+
+    //m_convReal->IsOk() is called at its own creation, so we now it
+    //returned true. If not so, m_convReal is NULL
+    if (m_convReal)
+        return true;
+
+    return false; //Failed in convReal creation
+}
+
 size_t wxCSConv::ToWChar(wchar_t *dst, size_t dstLen,
                          const char *src, size_t srcLen) const
diff -u2 -r wxWidgetsOrig/tests/strings/unicode.cpp wxWidgets/tests/strings/unicode.cpp
--- wxWidgetsOrig/tests/strings/unicode.cpp	2006-08-28 14:28:49.000000000 +0200
+++ wxWidgets/tests/strings/unicode.cpp	2007-01-17 17:46:10.781250000 +0100
@@ -60,4 +60,5 @@
         CPPUNIT_TEST( ConversionUTF16 );
         CPPUNIT_TEST( ConversionUTF32 );
+        CPPUNIT_TEST( wxCSConv_IsOk );
 #endif // wxUSE_WCHAR_T
     CPPUNIT_TEST_SUITE_END();
@@ -72,4 +73,5 @@
     void ConversionUTF16();
     void ConversionUTF32();
+    void wxCSConv_IsOk();
 
     // test if converting s using the given encoding gives ws and vice versa
@@ -318,4 +320,26 @@
 }
 
+void UnicodeTestCase::wxCSConv_IsOk()
+{
+    wxCSConv* conv;
+    conv = new wxCSConv(wxFONTENCODING_SYSTEM);
+    CPPUNIT_ASSERT( conv->IsOk() );
+    wxDELETE(conv);
+
+    conv = new wxCSConv(wxT("utf8"));
+    CPPUNIT_ASSERT( conv->IsOk() );
+    wxDELETE(conv);
+
+    conv = new wxCSConv(wxT("ConvIsOkTestFailer"));
+    CPPUNIT_ASSERT( !conv->IsOk() );
+    wxDELETE(conv);
+
+#ifdef __WINDOWS__
+    conv = new wxCSConv(wxT("WINDOWS-437"));
+    CPPUNIT_ASSERT( conv->IsOk() );
+    wxDELETE(conv);
+#endif
+}
+
 #endif // wxUSE_WCHAR_T
 

 	  	 
