Index: include/wx/defs.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/defs.h,v
retrieving revision 1.256
diff -u -2 -r1.256 defs.h
--- include/wx/defs.h	2001/07/29 22:40:21	1.256
+++ include/wx/defs.h	2001/07/30 16:07:04
@@ -38,4 +38,10 @@
 #endif // Win32
 
+#if defined(__WXMSW__) || defined(__WIN32__)
+    #if !defined(__WINDOWS__)
+        #define __WINDOWS__
+    #endif
+#endif
+
 #ifdef __WXWINE__
     #ifndef __WIN32__
Index: include/wx/listctrl.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/listctrl.h,v
retrieving revision 1.31
diff -u -2 -r1.31 listctrl.h
--- include/wx/listctrl.h	2001/07/20 00:25:09	1.31
+++ include/wx/listctrl.h	2001/07/30 16:07:09
@@ -332,4 +332,6 @@
     bool IsSelected(long index)
         { return GetItemState(index, wxLIST_STATE_SELECTED) != 0; }
+private:
+    DECLARE_DYNAMIC_CLASS(wxListView)
 };
 
Index: include/wx/msw/gccpriv.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/msw/gccpriv.h,v
retrieving revision 1.5
diff -u -2 -r1.5 gccpriv.h
--- include/wx/msw/gccpriv.h	2001/07/18 23:00:30	1.5
+++ include/wx/msw/gccpriv.h	2001/07/30 16:07:11
@@ -4,9 +4,9 @@
 #define _WX_MSW_GCCPRIV_H_
 
-#if defined( __MINGW32__ )
-    //#include <_mingw.h>
-    #if __MINGW32_MAJOR_VERSION >= 1
-        #ifndef HAVE_W32API_H
-        #define HAVE_W32API_H
+#if defined( __MINGW32__ ) && !defined( HAVE_W32API_H )
+    #if ( __GNUC__ > 2 ) || ( ( __GNUC__ == 2 ) && ( __GNUC_MINOR__ >= 95 ) )
+        #include <_mingw.h>
+        #if __MINGW32_MAJOR_VERSION >= 1
+            #define HAVE_W32API_H
         #endif
     #endif
Index: src/generic/listctrl.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/generic/listctrl.cpp,v
retrieving revision 1.201
diff -u -2 -r1.201 listctrl.cpp
--- src/generic/listctrl.cpp	2001/07/30 13:47:22	1.201
+++ src/generic/listctrl.cpp	2001/07/30 16:07:43
@@ -4318,4 +4318,5 @@
 
 IMPLEMENT_DYNAMIC_CLASS(wxListCtrl, wxControl)
+IMPLEMENT_DYNAMIC_CLASS(wxListView, wxListCtrl)
 
 BEGIN_EVENT_TABLE(wxListCtrl,wxControl)
Index: src/msw/dialup.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/msw/dialup.cpp,v
retrieving revision 1.22
diff -u -2 -r1.22 dialup.cpp
--- src/msw/dialup.cpp	2001/07/07 23:02:09	1.22
+++ src/msw/dialup.cpp	2001/07/30 16:07:51
@@ -865,7 +865,15 @@
     if ( dwRet != 0 )
     {
+#if wxUSE_UNICODE
+        // can't pass a wxWCharBuffer through ( ... )
+        wxLogError(_("Failed to %s dialup connection: %s").data(),
+                   async ? _("initiate").data() : _("establish").data(),
+                   GetErrorString(dwRet).c_str());
+#else
+        // can't pass a wxWCharBuffer through ( ... )
         wxLogError(_("Failed to %s dialup connection: %s"),
                    wxString(async ? _("initiate") : _("establish")).c_str(),
                    GetErrorString(dwRet).c_str());
+#endif
 
         // we should still call RasHangUp() if we got a non 0 connection
Index: src/msw/listctrl.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/msw/listctrl.cpp,v
retrieving revision 1.98
diff -u -2 -r1.98 listctrl.cpp
--- src/msw/listctrl.cpp	2001/07/27 20:05:07	1.98
+++ src/msw/listctrl.cpp	2001/07/30 16:07:55
@@ -124,4 +124,5 @@
 
 IMPLEMENT_DYNAMIC_CLASS(wxListCtrl, wxControl)
+IMPLEMENT_DYNAMIC_CLASS(wxListView, wxListCtrl)
 IMPLEMENT_DYNAMIC_CLASS(wxListItem, wxObject)
 
@@ -481,4 +482,5 @@
     }
 
+#if !( defined(__GNUWIN32__) && !wxCHECK_W32API_VERSION( 1, 0 ) )
     if ( style & wxLC_VIRTUAL )
     {
@@ -486,8 +488,5 @@
         if ( ver < 470 )
         {
-            wxLogWarning(_("Please install a newer version of comctl32.dll\n"
-                           "(at least version 4.70 is required but you have "
-                           "%d.%02d)\n"
-                           "or this program won't operate correctly."),
+            wxLogWarning(_("Please install a newer version of comctl32.dll\n(at least version 4.70 is required but you have %d.%02d)\nor this program won't operate correctly."),
                         ver / 100, ver % 100);
         }
@@ -495,4 +494,5 @@
         wstyle |= LVS_OWNERDATA;
     }
+#endif
 
     return wstyle;
@@ -1626,5 +1626,6 @@
 #endif // 0
 
-#if defined(_WIN32_IE) && _WIN32_IE >= 0x300
+#if defined(_WIN32_IE) && _WIN32_IE >= 0x300 \
+    && !( defined(__GNUWIN32__) && !wxCHECK_W32API_VERSION( 1, 0 ) )
         case NM_CUSTOMDRAW:
             *result = OnCustomDraw(lParam);
Index: src/msw/tbar95.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/msw/tbar95.cpp,v
retrieving revision 1.63
diff -u -2 -r1.63 tbar95.cpp
--- src/msw/tbar95.cpp	2001/07/14 17:37:55	1.63
+++ src/msw/tbar95.cpp	2001/07/30 16:08:01
@@ -1059,5 +1059,5 @@
     ColorMap[4].from = sm_stdColours[5]; ColorMap[4].to = COLOR_WINDOW;       // magenta      (255, 0, 255)
 
-    for ( int n = 0; n < WXSIZEOF(ColorMap); n++)
+    for ( size_t n = 0; n < WXSIZEOF(ColorMap); n++)
     {
         ColorMap[n].to = ::GetSysColor(ColorMap[n].to);
@@ -1077,5 +1077,5 @@
                 COLORREF pixel = ::GetPixel(hdcMem, i, j);
 
-                for ( int k = 0; k < WXSIZEOF(ColorMap); k++ )
+                for ( size_t k = 0; k < WXSIZEOF(ColorMap); k++ )
                 {
                     int distance = abs( GetRValue( pixel ) - GetRValue( ColorMap[k].from )) ;
Index: src/msw/treectrl.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/msw/treectrl.cpp,v
retrieving revision 1.103
diff -u -2 -r1.103 treectrl.cpp
--- src/msw/treectrl.cpp	2001/07/22 01:28:18	1.103
+++ src/msw/treectrl.cpp	2001/07/30 16:08:06
@@ -2142,5 +2142,5 @@
             break;
 
-#if defined(_WIN32_IE) && _WIN32_IE >= 0x300 && !wxUSE_COMCTL32_SAFELY && !defined(__GNUWIN32__)
+#if defined(_WIN32_IE) && _WIN32_IE >= 0x300 && !wxUSE_COMCTL32_SAFELY && !( defined(__GNUWIN32__) && !wxCHECK_W32API_VERSION( 1, 0 ) )
         case NM_CUSTOMDRAW:
             {

 	  	 
