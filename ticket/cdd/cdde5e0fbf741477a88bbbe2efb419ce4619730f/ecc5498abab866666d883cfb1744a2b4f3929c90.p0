--- src/common/menucmn-o.cpp	2007-09-14 11:29:13.000000000 +0200
+++ src/common/menucmn.cpp	2007-09-15 13:51:16.000000000 +0200
@@ -284,6 +284,33 @@
 }
 
 // ----------------------------------------------------------------------------
+// ShowPopupMenu functionality
+// ----------------------------------------------------------------------------
+void wxMenuBase::OnCommand( wxCommandEvent& evt )
+{
+    m_id_selected = evt.GetId();
+    evt.Skip();
+}
+
+int wxMenuBase::PopupGetId( wxWindow *wnd, wxPoint pt )
+{
+    if( !wnd ) 
+        if( !(wnd = wxGetActiveWindow( )) )
+            return wxID_NONE;
+    
+    // Setup temporary event handler 
+    Connect( wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(wxMenuBase::OnCommand), NULL, this );
+    m_id_selected = wxID_NONE;
+    // This is a cast, given that wxWindow wants a wxMenu, not a wxMenuBase
+    // Since wxMenu inherits directly from wxMenuBase, it is safe.
+    wnd->PopupMenu( (wxMenu*)this, pt );
+    Disconnect( wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(wxMenuBase::OnCommand), NULL, this );
+    
+    return m_id_selected;
+}
+
+
+// ----------------------------------------------------------------------------
 // wxMenu searching for items
 // ----------------------------------------------------------------------------
 
--- include/wx/menu-o.h	2007-09-14 11:33:24.000000000 +0200
+++ include/wx/menu.h	2007-09-15 13:08:51.000000000 +0200
@@ -211,6 +211,10 @@
     bool Destroy(int itemid) { return Destroy(FindChildItem(itemid)); }
     bool Destroy(wxMenuItem *item);
 
+    // show popup menu functionality
+    // -----------------------------
+    int PopupGetId( wxWindow *wnd, wxPoint pt=wxDefaultPosition );
+
     // menu items access
     // -----------------
 
@@ -363,6 +367,9 @@
     // associate the submenu with this menu
     void AddSubMenu(wxMenu *submenu);
 
+    // Get the ID of the selected item  - PopupGetId()
+	void OnCommand( wxCommandEvent& evt );
+    
     wxMenuBar     *m_menuBar;           // menubar we belong to or NULL
     wxMenu        *m_menuParent;        // parent menu or NULL
 
@@ -374,6 +381,8 @@
     long           m_style;             // combination of wxMENU_XXX flags
 
     wxEvtHandler  *m_eventHandler;      // a pluggable in event handler
+    
+    int            m_id_selected;       // Id selected in PopupGetId()
 
     static bool      ms_locked;
 

 	  	 
