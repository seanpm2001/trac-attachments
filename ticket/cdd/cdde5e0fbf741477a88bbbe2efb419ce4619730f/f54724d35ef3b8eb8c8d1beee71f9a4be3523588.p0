--- include/wx/window-o.h	2007-09-16 23:59:32.000000000 +0200
+++ include/wx/window.h	2007-09-17 00:00:53.000000000 +0200
@@ -992,6 +992,7 @@
         { return DoPopupMenu(menu, pos.x, pos.y); }
     bool PopupMenu(wxMenu *menu, int x, int y)
         { return DoPopupMenu(menu, x, y); }
+    int PopupMenuGetId( wxMenu *menu, const wxPoint& pt=wxDefaultPosition, bool skip_evt_handlers=false );
 #endif // wxUSE_MENUS
 
     // override this method to return true for controls having multiple pages
@@ -1229,6 +1230,11 @@
     virtual bool TryValidator(wxEvent& event);
     virtual bool TryParent(wxEvent& event);
 
+#ifdef wxUSE_MENUS
+    // Get the ID of the selected item  - used by PopupMenuGetId()
+    void OnCommandGetId( wxCommandEvent& evt );
+#endif    
+
     // common part of MoveBefore/AfterInTabOrder()
     enum MoveKind
     {
@@ -1508,6 +1514,13 @@
     // indicates if execution is inside CaptureMouse/ReleaseMouse
     static bool ms_winCaptureChanging;
 
+#if wxUSE_MENUS
+    // Id selected in PopupMenuGetId()
+    static int     ms_popupIdSelected;      
+    // Set to true if skip event handler in PopupMenuGetId()
+    static bool    ms_popupSkipEvtHandler; 
+#endif
+
     DECLARE_ABSTRACT_CLASS(wxWindowBase)
     DECLARE_NO_COPY_CLASS(wxWindowBase)
     DECLARE_EVENT_TABLE()
--- src/common/wincmn-o.cpp	2007-09-16 23:28:54.000000000 +0200
+++ src/common/wincmn.cpp	2007-09-16 23:34:28.000000000 +0200
@@ -2238,6 +2238,45 @@
     UpdateWindowUI(wxUPDATE_UI_RECURSE);
 }
 
+
+#if wxUSE_MENUS
+
+// PopupMenuGetId functionality
+// Support for retrieveing the ID of a selected menu item directly.
+// Needs two globals vars and an event handler to operate
+
+int wxWindowBase::ms_popupIdSelected;
+bool wxWindowBase::ms_popupSkipEvtHandler;
+
+void wxWindowBase::OnCommandGetId( wxCommandEvent& evt )
+{
+    ms_popupIdSelected = evt.GetId();
+    if( !ms_popupSkipEvtHandler ) 
+        evt.Skip();
+}
+
+int wxWindowBase::PopupMenuGetId( wxMenu *menu, const wxPoint& pt, bool skipEvtHandlers )
+{
+    ms_popupSkipEvtHandler = skipEvtHandlers;
+    
+    // Setup temporary event handler 
+    Connect( wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(wxWindowBase::OnCommandGetId), NULL, this );
+    ms_popupIdSelected = wxID_NONE;
+
+    // Use ordinary case
+    PopupMenu( menu, pt );
+    
+    // Remove temporary event handler
+    Disconnect( wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(wxWindowBase::OnCommandGetId), NULL, this );
+    ms_popupSkipEvtHandler = false;
+    
+    return ms_popupIdSelected;
+}
+
+#endif // wxUSE_MENUS
+
+
+
 // methods for drawing the sizers in a visible way
 #ifdef __WXDEBUG__
 
@@ -3101,6 +3140,8 @@
     return wxACC_NOT_IMPLEMENTED;
 }
 
+
+
 #if wxUSE_VARIANT
 // Gets a variant representing the selected children
 // of this object.
--- docs/latex/wx/window-o.tex	2007-09-14 11:31:16.000000000 +0200
+++ docs/latex/wx/window.tex	2007-09-16 23:54:43.000000000 +0200
@@ -2397,6 +2397,28 @@
 }
 
 
+\membersection{wxWindow::PopupMenuGetId}\label{wxwindowpopupmenugetid}
+
+\func{int}{PopupMenuGetId}{\param{wxMenu*}{ wnd}, \param{const wxPoint\&}{ pos= wxDefaultPosition}, \rtfsp
+\param{bool}{ skip_evt_handler=false}}
+
+Show a popup menu on this window and return the selected ID. If there is
+an event handler installed for this ID, it will be executed as usual (unless 
+skip_evt_handler is set to true). It is helpful for showing a number of alternatives 
+that may or may not be connected with any event handlers (such as selecting from a 
+list of strings). 
+
+\wxheading{Parameters}
+
+\docparam{menu}{The menu to show.}
+\docparam{pos}{Where to show it.}
+\docparam{skip_evt_handler}{Whether to bypass event handlers or not.}
+
+\wxheading{Return value}
+
+The selected menu ID or wxID_NONE if none selected or on error.
+
+
 \membersection{wxWindow::PrevControlId}\label{wxwindowprevcontrolid}
 
 \func{static int}{PrevControlId}{\param{int }{winid}}

 	  	 
