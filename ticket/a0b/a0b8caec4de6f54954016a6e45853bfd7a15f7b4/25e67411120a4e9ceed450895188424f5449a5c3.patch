Index: include/wx/gtk1/combobox.h
===================================================================
--- include/wx/gtk1/combobox.h	(revision 64392)
+++ include/wx/gtk1/combobox.h	(working copy)
@@ -126,23 +126,6 @@
     void OnSize( wxSizeEvent &event );
     void OnChar( wxKeyEvent &event );
 
-    // Standard event handling
-    void OnCut(wxCommandEvent& event);
-    void OnCopy(wxCommandEvent& event);
-    void OnPaste(wxCommandEvent& event);
-    void OnUndo(wxCommandEvent& event);
-    void OnRedo(wxCommandEvent& event);
-    void OnDelete(wxCommandEvent& event);
-    void OnSelectAll(wxCommandEvent& event);
-
-    void OnUpdateCut(wxUpdateUIEvent& event);
-    void OnUpdateCopy(wxUpdateUIEvent& event);
-    void OnUpdatePaste(wxUpdateUIEvent& event);
-    void OnUpdateUndo(wxUpdateUIEvent& event);
-    void OnUpdateRedo(wxUpdateUIEvent& event);
-    void OnUpdateDelete(wxUpdateUIEvent& event);
-    void OnUpdateSelectAll(wxUpdateUIEvent& event);
-
     bool     m_ignoreNextUpdate:1;
     wxList   m_clientDataList;
     wxList   m_clientObjectList;
Index: include/wx/gtk1/textctrl.h
===================================================================
--- include/wx/gtk1/textctrl.h	(revision 64392)
+++ include/wx/gtk1/textctrl.h	(working copy)
@@ -110,18 +110,6 @@
     void OnDropFiles( wxDropFilesEvent &event );
     void OnChar( wxKeyEvent &event );
 
-    void OnCut(wxCommandEvent& event);
-    void OnCopy(wxCommandEvent& event);
-    void OnPaste(wxCommandEvent& event);
-    void OnUndo(wxCommandEvent& event);
-    void OnRedo(wxCommandEvent& event);
-
-    void OnUpdateCut(wxUpdateUIEvent& event);
-    void OnUpdateCopy(wxUpdateUIEvent& event);
-    void OnUpdatePaste(wxUpdateUIEvent& event);
-    void OnUpdateUndo(wxUpdateUIEvent& event);
-    void OnUpdateRedo(wxUpdateUIEvent& event);
-
     bool SetFont(const wxFont& font);
     bool SetForegroundColour(const wxColour& colour);
     bool SetBackgroundColour(const wxColour& colour);
Index: include/wx/gtk/combobox.h
===================================================================
--- include/wx/gtk/combobox.h	(revision 64392)
+++ include/wx/gtk/combobox.h	(working copy)
@@ -101,23 +101,6 @@
 
     void OnChar( wxKeyEvent &event );
 
-    // Standard event handling
-    void OnCut(wxCommandEvent& event);
-    void OnCopy(wxCommandEvent& event);
-    void OnPaste(wxCommandEvent& event);
-    void OnUndo(wxCommandEvent& event);
-    void OnRedo(wxCommandEvent& event);
-    void OnDelete(wxCommandEvent& event);
-    void OnSelectAll(wxCommandEvent& event);
-
-    void OnUpdateCut(wxUpdateUIEvent& event);
-    void OnUpdateCopy(wxUpdateUIEvent& event);
-    void OnUpdatePaste(wxUpdateUIEvent& event);
-    void OnUpdateUndo(wxUpdateUIEvent& event);
-    void OnUpdateRedo(wxUpdateUIEvent& event);
-    void OnUpdateDelete(wxUpdateUIEvent& event);
-    void OnUpdateSelectAll(wxUpdateUIEvent& event);
-
     virtual void DisableEvents();
     virtual void EnableEvents();
     GtkWidget* GetConnectWidget();
Index: include/wx/gtk/textctrl.h
===================================================================
--- include/wx/gtk/textctrl.h	(revision 64392)
+++ include/wx/gtk/textctrl.h	(working copy)
@@ -102,18 +102,6 @@
     void OnDropFiles( wxDropFilesEvent &event );
     void OnChar( wxKeyEvent &event );
 
-    void OnCut(wxCommandEvent& event);
-    void OnCopy(wxCommandEvent& event);
-    void OnPaste(wxCommandEvent& event);
-    void OnUndo(wxCommandEvent& event);
-    void OnRedo(wxCommandEvent& event);
-
-    void OnUpdateCut(wxUpdateUIEvent& event);
-    void OnUpdateCopy(wxUpdateUIEvent& event);
-    void OnUpdatePaste(wxUpdateUIEvent& event);
-    void OnUpdateUndo(wxUpdateUIEvent& event);
-    void OnUpdateRedo(wxUpdateUIEvent& event);
-
     bool SetFont(const wxFont& font);
     bool SetForegroundColour(const wxColour& colour);
     bool SetBackgroundColour(const wxColour& colour);
Index: include/wx/motif/textctrl.h
===================================================================
--- include/wx/motif/textctrl.h	(revision 64392)
+++ include/wx/motif/textctrl.h	(working copy)
@@ -64,18 +64,6 @@
     void OnChar(wxKeyEvent& event);
     //  void OnEraseBackground(wxEraseEvent& event);
 
-    void OnCut(wxCommandEvent& event);
-    void OnCopy(wxCommandEvent& event);
-    void OnPaste(wxCommandEvent& event);
-    void OnUndo(wxCommandEvent& event);
-    void OnRedo(wxCommandEvent& event);
-
-    void OnUpdateCut(wxUpdateUIEvent& event);
-    void OnUpdateCopy(wxUpdateUIEvent& event);
-    void OnUpdatePaste(wxUpdateUIEvent& event);
-    void OnUpdateUndo(wxUpdateUIEvent& event);
-    void OnUpdateRedo(wxUpdateUIEvent& event);
-
     virtual void Command(wxCommandEvent& event);
 
     // implementation from here to the end
Index: include/wx/msw/combobox.h
===================================================================
--- include/wx/msw/combobox.h	(revision 64392)
+++ include/wx/msw/combobox.h	(working copy)
@@ -98,23 +98,6 @@
     virtual WXLRESULT MSWWindowProc(WXUINT nMsg, WXWPARAM wParam, WXLPARAM lParam);
     bool MSWShouldPreProcessMessage(WXMSG *pMsg);
 
-    // Standard event handling
-    void OnCut(wxCommandEvent& event);
-    void OnCopy(wxCommandEvent& event);
-    void OnPaste(wxCommandEvent& event);
-    void OnUndo(wxCommandEvent& event);
-    void OnRedo(wxCommandEvent& event);
-    void OnDelete(wxCommandEvent& event);
-    void OnSelectAll(wxCommandEvent& event);
-
-    void OnUpdateCut(wxUpdateUIEvent& event);
-    void OnUpdateCopy(wxUpdateUIEvent& event);
-    void OnUpdatePaste(wxUpdateUIEvent& event);
-    void OnUpdateUndo(wxUpdateUIEvent& event);
-    void OnUpdateRedo(wxUpdateUIEvent& event);
-    void OnUpdateDelete(wxUpdateUIEvent& event);
-    void OnUpdateSelectAll(wxUpdateUIEvent& event);
-
     virtual WXDWORD MSWGetStyle(long style, WXDWORD *exstyle) const;
 
 #if wxUSE_UXTHEME
Index: include/wx/msw/textctrl.h
===================================================================
--- include/wx/msw/textctrl.h	(revision 64392)
+++ include/wx/msw/textctrl.h	(working copy)
@@ -150,22 +150,6 @@
     void OnDropFiles(wxDropFilesEvent& event);
     void OnChar(wxKeyEvent& event); // Process 'enter' if required
 
-    void OnCut(wxCommandEvent& event);
-    void OnCopy(wxCommandEvent& event);
-    void OnPaste(wxCommandEvent& event);
-    void OnUndo(wxCommandEvent& event);
-    void OnRedo(wxCommandEvent& event);
-    void OnDelete(wxCommandEvent& event);
-    void OnSelectAll(wxCommandEvent& event);
-
-    void OnUpdateCut(wxUpdateUIEvent& event);
-    void OnUpdateCopy(wxUpdateUIEvent& event);
-    void OnUpdatePaste(wxUpdateUIEvent& event);
-    void OnUpdateUndo(wxUpdateUIEvent& event);
-    void OnUpdateRedo(wxUpdateUIEvent& event);
-    void OnUpdateDelete(wxUpdateUIEvent& event);
-    void OnUpdateSelectAll(wxUpdateUIEvent& event);
-
     // Show a context menu for Rich Edit controls (the standard
     // EDIT control has one already)
     void OnContextMenu(wxContextMenuEvent& event);
Index: include/wx/msw/wince/textctrlce.h
===================================================================
--- include/wx/msw/wince/textctrlce.h	(revision 64392)
+++ include/wx/msw/wince/textctrlce.h	(working copy)
@@ -146,22 +146,6 @@
     void OnDropFiles(wxDropFilesEvent& event);
     void OnChar(wxKeyEvent& event); // Process 'enter' if required
 
-    void OnCut(wxCommandEvent& event);
-    void OnCopy(wxCommandEvent& event);
-    void OnPaste(wxCommandEvent& event);
-    void OnUndo(wxCommandEvent& event);
-    void OnRedo(wxCommandEvent& event);
-    void OnDelete(wxCommandEvent& event);
-    void OnSelectAll(wxCommandEvent& event);
-
-    void OnUpdateCut(wxUpdateUIEvent& event);
-    void OnUpdateCopy(wxUpdateUIEvent& event);
-    void OnUpdatePaste(wxUpdateUIEvent& event);
-    void OnUpdateUndo(wxUpdateUIEvent& event);
-    void OnUpdateRedo(wxUpdateUIEvent& event);
-    void OnUpdateDelete(wxUpdateUIEvent& event);
-    void OnUpdateSelectAll(wxUpdateUIEvent& event);
-
     // Show a context menu for Rich Edit controls (the standard
     // EDIT control has one already)
     void OnRightClick(wxMouseEvent& event);
Index: include/wx/os2/textctrl.h
===================================================================
--- include/wx/os2/textctrl.h	(revision 64392)
+++ include/wx/os2/textctrl.h	(working copy)
@@ -148,22 +148,6 @@
     void OnDropFiles(wxDropFilesEvent& rEvent);
     void OnChar(wxKeyEvent& rEvent); // Process 'enter' if required
 
-    void OnCut(wxCommandEvent& rEvent);
-    void OnCopy(wxCommandEvent& rEvent);
-    void OnPaste(wxCommandEvent& rEvent);
-    void OnUndo(wxCommandEvent& rEvent);
-    void OnRedo(wxCommandEvent& rEvent);
-    void OnDelete(wxCommandEvent& rEvent);
-    void OnSelectAll(wxCommandEvent& rEvent);
-
-    void OnUpdateCut(wxUpdateUIEvent& rEvent);
-    void OnUpdateCopy(wxUpdateUIEvent& rEvent);
-    void OnUpdatePaste(wxUpdateUIEvent& rEvent);
-    void OnUpdateUndo(wxUpdateUIEvent& rEvent);
-    void OnUpdateRedo(wxUpdateUIEvent& rEvent);
-    void OnUpdateDelete(wxUpdateUIEvent& rEvent);
-    void OnUpdateSelectAll(wxUpdateUIEvent& rEvent);
-
     inline bool IsMLE(void) {return m_bIsMLE;}
     inline void SetMLE(bool bIsMLE) {m_bIsMLE = bIsMLE;}
 
Index: include/wx/osx/textctrl.h
===================================================================
--- include/wx/osx/textctrl.h	(revision 64392)
+++ include/wx/osx/textctrl.h	(working copy)
@@ -111,22 +111,6 @@
     void OnChar(wxKeyEvent& event); // Process 'enter' if required
     void OnKeyDown(wxKeyEvent& event); // Process clipboard shortcuts
 
-    void OnCut(wxCommandEvent& event);
-    void OnCopy(wxCommandEvent& event);
-    void OnPaste(wxCommandEvent& event);
-    void OnUndo(wxCommandEvent& event);
-    void OnRedo(wxCommandEvent& event);
-    void OnDelete(wxCommandEvent& event);
-    void OnSelectAll(wxCommandEvent& event);
-
-    void OnUpdateCut(wxUpdateUIEvent& event);
-    void OnUpdateCopy(wxUpdateUIEvent& event);
-    void OnUpdatePaste(wxUpdateUIEvent& event);
-    void OnUpdateUndo(wxUpdateUIEvent& event);
-    void OnUpdateRedo(wxUpdateUIEvent& event);
-    void OnUpdateDelete(wxUpdateUIEvent& event);
-    void OnUpdateSelectAll(wxUpdateUIEvent& event);
-
     void OnContextMenu(wxContextMenuEvent& event);
 
     virtual bool MacSetupCursor( const wxPoint& pt );
Index: include/wx/palmos/textctrl.h
===================================================================
--- include/wx/palmos/textctrl.h	(revision 64392)
+++ include/wx/palmos/textctrl.h	(working copy)
@@ -175,22 +175,6 @@
     void OnDropFiles(wxDropFilesEvent& event);
     void OnChar(wxKeyEvent& event); // Process 'enter' if required
 
-    void OnCut(wxCommandEvent& event);
-    void OnCopy(wxCommandEvent& event);
-    void OnPaste(wxCommandEvent& event);
-    void OnUndo(wxCommandEvent& event);
-    void OnRedo(wxCommandEvent& event);
-    void OnDelete(wxCommandEvent& event);
-    void OnSelectAll(wxCommandEvent& event);
-
-    void OnUpdateCut(wxUpdateUIEvent& event);
-    void OnUpdateCopy(wxUpdateUIEvent& event);
-    void OnUpdatePaste(wxUpdateUIEvent& event);
-    void OnUpdateUndo(wxUpdateUIEvent& event);
-    void OnUpdateRedo(wxUpdateUIEvent& event);
-    void OnUpdateDelete(wxUpdateUIEvent& event);
-    void OnUpdateSelectAll(wxUpdateUIEvent& event);
-
     // Show a context menu for Rich Edit controls (the standard
     // EDIT control has one already)
     void OnContextMenu(wxContextMenuEvent& event);
Index: include/wx/richtext/richtextctrl.h
===================================================================
--- include/wx/richtext/richtextctrl.h	(revision 64392)
+++ include/wx/richtext/richtextctrl.h	(working copy)
@@ -615,22 +615,6 @@
     void OnCaptureLost(wxMouseCaptureLostEvent& event);
     void OnSysColourChanged(wxSysColourChangedEvent& event);
 
-    void OnCut(wxCommandEvent& event);
-    void OnCopy(wxCommandEvent& event);
-    void OnPaste(wxCommandEvent& event);
-    void OnUndo(wxCommandEvent& event);
-    void OnRedo(wxCommandEvent& event);
-    void OnSelectAll(wxCommandEvent& event);
-    void OnClear(wxCommandEvent& event);
-
-    void OnUpdateCut(wxUpdateUIEvent& event);
-    void OnUpdateCopy(wxUpdateUIEvent& event);
-    void OnUpdatePaste(wxUpdateUIEvent& event);
-    void OnUpdateUndo(wxUpdateUIEvent& event);
-    void OnUpdateRedo(wxUpdateUIEvent& event);
-    void OnUpdateSelectAll(wxUpdateUIEvent& event);
-    void OnUpdateClear(wxUpdateUIEvent& event);
-
     // Show a context menu for Rich Edit controls (the standard
     // EDIT control has one already)
     void OnContextMenu(wxContextMenuEvent& event);
Index: include/wx/textentry.h
===================================================================
--- include/wx/textentry.h	(revision 64392)
+++ include/wx/textentry.h	(working copy)
@@ -305,5 +305,36 @@
     };
 #endif
 
+/////////////////////////////////////////////////////////////////////////////
+// wxEditMenuEvtHandler
+
+class WXDLLIMPEXP_CORE wxEditMenuEvtHandler : public wxEvtHandler
+{
+public:
+    wxEditMenuEvtHandler(wxTextEntryBase*);
+
+protected:
+    void OnCopy(wxCommandEvent&);
+    void OnCut(wxCommandEvent&);
+    void OnPaste(wxCommandEvent&);
+    void OnUndo(wxCommandEvent&);
+    void OnRedo(wxCommandEvent&);
+    void OnDelete(wxCommandEvent&);
+    void OnSelectAll(wxCommandEvent&);
+
+    void OnUpdateCut(wxUpdateUIEvent&);
+    void OnUpdateCopy(wxUpdateUIEvent&);
+    void OnUpdatePaste(wxUpdateUIEvent&);
+    void OnUpdateUndo(wxUpdateUIEvent&);
+    void OnUpdateRedo(wxUpdateUIEvent&);
+    void OnUpdateDelete(wxUpdateUIEvent&);
+    void OnUpdateSelectAll(wxUpdateUIEvent&);
+    DECLARE_EVENT_TABLE()
+
+private:
+    wxTextEntryBase* m_edit;
+};
+
+
 #endif // _WX_TEXTENTRY_H_
 
Index: include/wx/x11/textctrl.h
===================================================================
--- include/wx/x11/textctrl.h	(revision 64392)
+++ include/wx/x11/textctrl.h	(working copy)
@@ -186,18 +186,6 @@
 
     virtual bool Enable( bool enable = true );
 
-    void OnCut(wxCommandEvent& event);
-    void OnCopy(wxCommandEvent& event);
-    void OnPaste(wxCommandEvent& event);
-    void OnUndo(wxCommandEvent& event);
-    void OnRedo(wxCommandEvent& event);
-
-    void OnUpdateCut(wxUpdateUIEvent& event);
-    void OnUpdateCopy(wxUpdateUIEvent& event);
-    void OnUpdatePaste(wxUpdateUIEvent& event);
-    void OnUpdateUndo(wxUpdateUIEvent& event);
-    void OnUpdateRedo(wxUpdateUIEvent& event);
-
     bool SetFont(const wxFont& font);
     bool SetForegroundColour(const wxColour& colour);
     bool SetBackgroundColour(const wxColour& colour);
Index: samples/docview/view.cpp
===================================================================
--- samples/docview/view.cpp	(revision 64392)
+++ samples/docview/view.cpp	(working copy)
@@ -154,9 +154,6 @@
 IMPLEMENT_DYNAMIC_CLASS(TextEditView, wxView)
 
 BEGIN_EVENT_TABLE(TextEditView, wxView)
-    EVT_MENU(wxID_COPY, TextEditView::OnCopy)
-    EVT_MENU(wxID_PASTE, TextEditView::OnPaste)
-    EVT_MENU(wxID_SELECTALL, TextEditView::OnSelectAll)
 END_EVENT_TABLE()
 
 bool TextEditView::OnCreate(wxDocument *doc, long WXUNUSED(flags))
@@ -171,6 +168,10 @@
 
     Activate(true);
 
+    m_handler = new wxEditMenuEvtHandler(m_text);
+    m_handler->SetPreviousHandler(this);
+    SetNextHandler(m_handler);
+
     return true;
 }
 
@@ -186,6 +187,9 @@
 
     Activate(false);
 
+    SetNextHandler(NULL);
+    wxDELETE(m_handler);
+
     if ( wxGetApp().GetMode() == MyApp::Mode_Single )
     {
         m_text->Clear();
Index: samples/docview/view.h
===================================================================
--- samples/docview/view.h	(revision 64392)
+++ samples/docview/view.h	(working copy)
@@ -103,12 +103,9 @@
     wxTextCtrl *GetText() const { return m_text; }
 
 private:
-    void OnCopy(wxCommandEvent& WXUNUSED(event)) { m_text->Copy(); }
-    void OnPaste(wxCommandEvent& WXUNUSED(event)) { m_text->Paste(); }
-    void OnSelectAll(wxCommandEvent& WXUNUSED(event)) { m_text->SelectAll(); }
-
     wxFrame *m_frame;
     wxTextCtrl *m_text;
+    wxEditMenuEvtHandler* m_handler;
 
     DECLARE_EVENT_TABLE()
     DECLARE_DYNAMIC_CLASS(TextEditView)
Index: src/common/textentrycmn.cpp
===================================================================
--- src/common/textentrycmn.cpp	(revision 64392)
+++ src/common/textentrycmn.cpp	(working copy)
@@ -300,4 +300,96 @@
     return win->HandleWindowEvent(event);
 }
 
+BEGIN_EVENT_TABLE(wxEditMenuEvtHandler, wxEvtHandler)
+    EVT_MENU(wxID_CUT, wxEditMenuEvtHandler::OnCut)
+    EVT_MENU(wxID_COPY, wxEditMenuEvtHandler::OnCopy)
+    EVT_MENU(wxID_PASTE, wxEditMenuEvtHandler::OnPaste)
+    EVT_MENU(wxID_UNDO, wxEditMenuEvtHandler::OnUndo)
+    EVT_MENU(wxID_REDO, wxEditMenuEvtHandler::OnRedo)
+    EVT_MENU(wxID_CLEAR, wxEditMenuEvtHandler::OnDelete)
+    EVT_MENU(wxID_SELECTALL, wxEditMenuEvtHandler::OnSelectAll)
+
+    EVT_UPDATE_UI(wxID_CUT, wxEditMenuEvtHandler::OnUpdateCut)
+    EVT_UPDATE_UI(wxID_COPY, wxEditMenuEvtHandler::OnUpdateCopy)
+    EVT_UPDATE_UI(wxID_PASTE, wxEditMenuEvtHandler::OnUpdatePaste)
+    EVT_UPDATE_UI(wxID_UNDO, wxEditMenuEvtHandler::OnUpdateUndo)
+    EVT_UPDATE_UI(wxID_REDO, wxEditMenuEvtHandler::OnUpdateRedo)
+    EVT_UPDATE_UI(wxID_CLEAR, wxEditMenuEvtHandler::OnUpdateDelete)
+    EVT_UPDATE_UI(wxID_SELECTALL, wxEditMenuEvtHandler::OnUpdateSelectAll)
+END_EVENT_TABLE()
+
+wxEditMenuEvtHandler::wxEditMenuEvtHandler(wxTextEntryBase* edit) : wxEvtHandler(), m_edit(edit)
+{
+}
+
+void wxEditMenuEvtHandler::OnCopy(wxCommandEvent& WXUNUSED(event))
+{
+    m_edit->Copy();
+}
+
+void wxEditMenuEvtHandler::OnCut(wxCommandEvent& WXUNUSED(event))
+{
+    m_edit->Cut();
+}
+
+void wxEditMenuEvtHandler::OnPaste(wxCommandEvent& WXUNUSED(event))
+{
+    m_edit->Paste();
+}
+
+void wxEditMenuEvtHandler::OnUndo(wxCommandEvent& WXUNUSED(event))
+{
+    m_edit->Undo();
+}
+
+void wxEditMenuEvtHandler::OnRedo(wxCommandEvent& WXUNUSED(event))
+{
+    m_edit->Redo();
+}
+
+void wxEditMenuEvtHandler::OnDelete(wxCommandEvent& WXUNUSED(event))
+{
+    m_edit->Clear();
+}
+
+void wxEditMenuEvtHandler::OnSelectAll(wxCommandEvent& WXUNUSED(event))
+{
+    m_edit->SelectAll();
+}
+
+void wxEditMenuEvtHandler::OnUpdateCut(wxUpdateUIEvent& event)
+{
+    event.Enable(m_edit->CanCut());
+}
+
+void wxEditMenuEvtHandler::OnUpdateCopy(wxUpdateUIEvent& event)
+{
+    event.Enable(m_edit->CanCopy());
+}
+
+void wxEditMenuEvtHandler::OnUpdatePaste(wxUpdateUIEvent& event)
+{
+    event.Enable(m_edit->CanPaste());
+}
+
+void wxEditMenuEvtHandler::OnUpdateUndo(wxUpdateUIEvent& event)
+{
+    event.Enable(m_edit->CanUndo());
+}
+
+void wxEditMenuEvtHandler::OnUpdateRedo(wxUpdateUIEvent& event)
+{
+    event.Enable(m_edit->CanRedo());
+}
+
+void wxEditMenuEvtHandler::OnUpdateSelectAll(wxUpdateUIEvent& event)
+{
+    event.Enable(!m_edit->IsEmpty());
+}
+
+void wxEditMenuEvtHandler::OnUpdateDelete(wxUpdateUIEvent& event)
+{ 
+    event.Enable(m_edit->IsEditable() && m_edit->GetLastPosition());
+}
+
 #endif // wxUSE_TEXTCTRL || wxUSE_COMBOBOX
Index: src/gtk1/combobox.cpp
===================================================================
--- src/gtk1/combobox.cpp	(revision 64392)
+++ src/gtk1/combobox.cpp	(working copy)
@@ -175,22 +175,6 @@
 BEGIN_EVENT_TABLE(wxComboBox, wxControl)
     EVT_SIZE(wxComboBox::OnSize)
     EVT_CHAR(wxComboBox::OnChar)
-
-    EVT_MENU(wxID_CUT, wxComboBox::OnCut)
-    EVT_MENU(wxID_COPY, wxComboBox::OnCopy)
-    EVT_MENU(wxID_PASTE, wxComboBox::OnPaste)
-    EVT_MENU(wxID_UNDO, wxComboBox::OnUndo)
-    EVT_MENU(wxID_REDO, wxComboBox::OnRedo)
-    EVT_MENU(wxID_CLEAR, wxComboBox::OnDelete)
-    EVT_MENU(wxID_SELECTALL, wxComboBox::OnSelectAll)
-
-    EVT_UPDATE_UI(wxID_CUT, wxComboBox::OnUpdateCut)
-    EVT_UPDATE_UI(wxID_COPY, wxComboBox::OnUpdateCopy)
-    EVT_UPDATE_UI(wxID_PASTE, wxComboBox::OnUpdatePaste)
-    EVT_UPDATE_UI(wxID_UNDO, wxComboBox::OnUpdateUndo)
-    EVT_UPDATE_UI(wxID_REDO, wxComboBox::OnUpdateRedo)
-    EVT_UPDATE_UI(wxID_CLEAR, wxComboBox::OnUpdateDelete)
-    EVT_UPDATE_UI(wxID_SELECTALL, wxComboBox::OnUpdateSelectAll)
 END_EVENT_TABLE()
 
 bool wxComboBox::Create( wxWindow *parent, wxWindowID id,
@@ -909,81 +893,4 @@
     return GetDefaultAttributesFromGTKWidget(gtk_combo_new, true);
 }
 
-// ----------------------------------------------------------------------------
-// standard event handling
-// ----------------------------------------------------------------------------
-
-void wxComboBox::OnCut(wxCommandEvent& WXUNUSED(event))
-{
-    Cut();
-}
-
-void wxComboBox::OnCopy(wxCommandEvent& WXUNUSED(event))
-{
-    Copy();
-}
-
-void wxComboBox::OnPaste(wxCommandEvent& WXUNUSED(event))
-{
-    Paste();
-}
-
-void wxComboBox::OnUndo(wxCommandEvent& WXUNUSED(event))
-{
-    Undo();
-}
-
-void wxComboBox::OnRedo(wxCommandEvent& WXUNUSED(event))
-{
-    Redo();
-}
-
-void wxComboBox::OnDelete(wxCommandEvent& WXUNUSED(event))
-{
-    long from, to;
-    GetSelection(& from, & to);
-    if (from != -1 && to != -1)
-        Remove(from, to);
-}
-
-void wxComboBox::OnSelectAll(wxCommandEvent& WXUNUSED(event))
-{
-    SetSelection(-1, -1);
-}
-
-void wxComboBox::OnUpdateCut(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCut() );
-}
-
-void wxComboBox::OnUpdateCopy(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCopy() );
-}
-
-void wxComboBox::OnUpdatePaste(wxUpdateUIEvent& event)
-{
-    event.Enable( CanPaste() );
-}
-
-void wxComboBox::OnUpdateUndo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanUndo() );
-}
-
-void wxComboBox::OnUpdateRedo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanRedo() );
-}
-
-void wxComboBox::OnUpdateDelete(wxUpdateUIEvent& event)
-{
-    event.Enable(HasSelection() && IsEditable()) ;
-}
-
-void wxComboBox::OnUpdateSelectAll(wxUpdateUIEvent& event)
-{
-    event.Enable(GetLastPosition() > 0);
-}
-
 #endif
Index: src/gtk1/textctrl.cpp
===================================================================
--- src/gtk1/textctrl.cpp	(revision 64392)
+++ src/gtk1/textctrl.cpp	(working copy)
@@ -205,18 +205,6 @@
 
 BEGIN_EVENT_TABLE(wxTextCtrl, wxTextCtrlBase)
     EVT_CHAR(wxTextCtrl::OnChar)
-
-    EVT_MENU(wxID_CUT, wxTextCtrl::OnCut)
-    EVT_MENU(wxID_COPY, wxTextCtrl::OnCopy)
-    EVT_MENU(wxID_PASTE, wxTextCtrl::OnPaste)
-    EVT_MENU(wxID_UNDO, wxTextCtrl::OnUndo)
-    EVT_MENU(wxID_REDO, wxTextCtrl::OnRedo)
-
-    EVT_UPDATE_UI(wxID_CUT, wxTextCtrl::OnUpdateCut)
-    EVT_UPDATE_UI(wxID_COPY, wxTextCtrl::OnUpdateCopy)
-    EVT_UPDATE_UI(wxID_PASTE, wxTextCtrl::OnUpdatePaste)
-    EVT_UPDATE_UI(wxID_UNDO, wxTextCtrl::OnUpdateUndo)
-    EVT_UPDATE_UI(wxID_REDO, wxTextCtrl::OnUpdateRedo)
 END_EVENT_TABLE()
 
 void wxTextCtrl::Init()
@@ -1191,56 +1179,6 @@
     gtk_widget_modify_style(m_text, style);
 }
 
-void wxTextCtrl::OnCut(wxCommandEvent& WXUNUSED(event))
-{
-    Cut();
-}
-
-void wxTextCtrl::OnCopy(wxCommandEvent& WXUNUSED(event))
-{
-    Copy();
-}
-
-void wxTextCtrl::OnPaste(wxCommandEvent& WXUNUSED(event))
-{
-    Paste();
-}
-
-void wxTextCtrl::OnUndo(wxCommandEvent& WXUNUSED(event))
-{
-    Undo();
-}
-
-void wxTextCtrl::OnRedo(wxCommandEvent& WXUNUSED(event))
-{
-    Redo();
-}
-
-void wxTextCtrl::OnUpdateCut(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCut() );
-}
-
-void wxTextCtrl::OnUpdateCopy(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCopy() );
-}
-
-void wxTextCtrl::OnUpdatePaste(wxUpdateUIEvent& event)
-{
-    event.Enable( CanPaste() );
-}
-
-void wxTextCtrl::OnUpdateUndo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanUndo() );
-}
-
-void wxTextCtrl::OnUpdateRedo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanRedo() );
-}
-
 void wxTextCtrl::OnInternalIdle()
 {
     wxCursor cursor = m_cursor;
Index: src/gtk/combobox.cpp
===================================================================
--- src/gtk/combobox.cpp	(revision 64392)
+++ src/gtk/combobox.cpp	(working copy)
@@ -68,22 +68,6 @@
 
 BEGIN_EVENT_TABLE(wxComboBox, wxChoice)
     EVT_CHAR(wxComboBox::OnChar)
-
-    EVT_MENU(wxID_CUT, wxComboBox::OnCut)
-    EVT_MENU(wxID_COPY, wxComboBox::OnCopy)
-    EVT_MENU(wxID_PASTE, wxComboBox::OnPaste)
-    EVT_MENU(wxID_UNDO, wxComboBox::OnUndo)
-    EVT_MENU(wxID_REDO, wxComboBox::OnRedo)
-    EVT_MENU(wxID_CLEAR, wxComboBox::OnDelete)
-    EVT_MENU(wxID_SELECTALL, wxComboBox::OnSelectAll)
-
-    EVT_UPDATE_UI(wxID_CUT, wxComboBox::OnUpdateCut)
-    EVT_UPDATE_UI(wxID_COPY, wxComboBox::OnUpdateCopy)
-    EVT_UPDATE_UI(wxID_PASTE, wxComboBox::OnUpdatePaste)
-    EVT_UPDATE_UI(wxID_UNDO, wxComboBox::OnUpdateUndo)
-    EVT_UPDATE_UI(wxID_REDO, wxComboBox::OnUpdateRedo)
-    EVT_UPDATE_UI(wxID_CLEAR, wxComboBox::OnUpdateDelete)
-    EVT_UPDATE_UI(wxID_SELECTALL, wxComboBox::OnUpdateSelectAll)
 END_EVENT_TABLE()
 
 void wxComboBox::Init()
@@ -263,80 +247,6 @@
     return GetDefaultAttributesFromGTKWidget(gtk_combo_box_entry_new, true);
 }
 
-// ----------------------------------------------------------------------------
-// standard event handling
-// ----------------------------------------------------------------------------
-
-void wxComboBox::OnCut(wxCommandEvent& WXUNUSED(event))
-{
-    Cut();
-}
-
-void wxComboBox::OnCopy(wxCommandEvent& WXUNUSED(event))
-{
-    Copy();
-}
-
-void wxComboBox::OnPaste(wxCommandEvent& WXUNUSED(event))
-{
-    Paste();
-}
-
-void wxComboBox::OnUndo(wxCommandEvent& WXUNUSED(event))
-{
-    Undo();
-}
-
-void wxComboBox::OnRedo(wxCommandEvent& WXUNUSED(event))
-{
-    Redo();
-}
-
-void wxComboBox::OnDelete(wxCommandEvent& WXUNUSED(event))
-{
-    RemoveSelection();
-}
-
-void wxComboBox::OnSelectAll(wxCommandEvent& WXUNUSED(event))
-{
-    SelectAll();
-}
-
-void wxComboBox::OnUpdateCut(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCut() );
-}
-
-void wxComboBox::OnUpdateCopy(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCopy() );
-}
-
-void wxComboBox::OnUpdatePaste(wxUpdateUIEvent& event)
-{
-    event.Enable( CanPaste() );
-}
-
-void wxComboBox::OnUpdateUndo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanUndo() );
-}
-
-void wxComboBox::OnUpdateRedo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanRedo() );
-}
-
-void wxComboBox::OnUpdateDelete(wxUpdateUIEvent& event)
-{
-    event.Enable(HasSelection() && IsEditable()) ;
-}
-
-void wxComboBox::OnUpdateSelectAll(wxUpdateUIEvent& event)
-{
-    event.Enable(!wxTextEntry::IsEmpty());
-}
-
 void wxComboBox::Popup()
 {
      gtk_combo_box_popup( GTK_COMBO_BOX(m_widget) );
Index: src/gtk/textctrl.cpp
===================================================================
--- src/gtk/textctrl.cpp	(revision 64392)
+++ src/gtk/textctrl.cpp	(working copy)
@@ -588,18 +588,6 @@
 BEGIN_EVENT_TABLE(wxTextCtrl, wxTextCtrlBase)
     EVT_CHAR(wxTextCtrl::OnChar)
 
-    EVT_MENU(wxID_CUT, wxTextCtrl::OnCut)
-    EVT_MENU(wxID_COPY, wxTextCtrl::OnCopy)
-    EVT_MENU(wxID_PASTE, wxTextCtrl::OnPaste)
-    EVT_MENU(wxID_UNDO, wxTextCtrl::OnUndo)
-    EVT_MENU(wxID_REDO, wxTextCtrl::OnRedo)
-
-    EVT_UPDATE_UI(wxID_CUT, wxTextCtrl::OnUpdateCut)
-    EVT_UPDATE_UI(wxID_COPY, wxTextCtrl::OnUpdateCopy)
-    EVT_UPDATE_UI(wxID_PASTE, wxTextCtrl::OnUpdatePaste)
-    EVT_UPDATE_UI(wxID_UNDO, wxTextCtrl::OnUpdateUndo)
-    EVT_UPDATE_UI(wxID_REDO, wxTextCtrl::OnUpdateRedo)
-
     // wxTE_AUTO_URL wxTextUrl support. Currently only creates
     // wxTextUrlEvent in the same cases as wxMSW, more can be added here.
     EVT_MOTION      (wxTextCtrl::OnUrlMouseEvent)
@@ -1738,56 +1726,6 @@
     gtk_widget_modify_style(m_text, style);
 }
 
-void wxTextCtrl::OnCut(wxCommandEvent& WXUNUSED(event))
-{
-    Cut();
-}
-
-void wxTextCtrl::OnCopy(wxCommandEvent& WXUNUSED(event))
-{
-    Copy();
-}
-
-void wxTextCtrl::OnPaste(wxCommandEvent& WXUNUSED(event))
-{
-    Paste();
-}
-
-void wxTextCtrl::OnUndo(wxCommandEvent& WXUNUSED(event))
-{
-    Undo();
-}
-
-void wxTextCtrl::OnRedo(wxCommandEvent& WXUNUSED(event))
-{
-    Redo();
-}
-
-void wxTextCtrl::OnUpdateCut(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCut() );
-}
-
-void wxTextCtrl::OnUpdateCopy(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCopy() );
-}
-
-void wxTextCtrl::OnUpdatePaste(wxUpdateUIEvent& event)
-{
-    event.Enable( CanPaste() );
-}
-
-void wxTextCtrl::OnUpdateUndo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanUndo() );
-}
-
-void wxTextCtrl::OnUpdateRedo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanRedo() );
-}
-
 wxSize wxTextCtrl::DoGetBestSize() const
 {
     // FIXME should be different for multi-line controls...
Index: src/motif/textctrl.cpp
===================================================================
--- src/motif/textctrl.cpp	(revision 64392)
+++ src/motif/textctrl.cpp	(working copy)
@@ -65,18 +65,6 @@
         EVT_DROP_FILES(wxTextCtrl::OnDropFiles)
         EVT_CHAR(wxTextCtrl::OnChar)
 
-    EVT_MENU(wxID_CUT, wxTextCtrl::OnCut)
-    EVT_MENU(wxID_COPY, wxTextCtrl::OnCopy)
-    EVT_MENU(wxID_PASTE, wxTextCtrl::OnPaste)
-    EVT_MENU(wxID_UNDO, wxTextCtrl::OnUndo)
-    EVT_MENU(wxID_REDO, wxTextCtrl::OnRedo)
-
-    EVT_UPDATE_UI(wxID_CUT, wxTextCtrl::OnUpdateCut)
-    EVT_UPDATE_UI(wxID_COPY, wxTextCtrl::OnUpdateCopy)
-    EVT_UPDATE_UI(wxID_PASTE, wxTextCtrl::OnUpdatePaste)
-    EVT_UPDATE_UI(wxID_UNDO, wxTextCtrl::OnUpdateUndo)
-    EVT_UPDATE_UI(wxID_REDO, wxTextCtrl::OnUpdateRedo)
-
     END_EVENT_TABLE()
 
 // ============================================================================
@@ -695,52 +683,3 @@
     tw->ProcessCommand(event);
 }
 
-void wxTextCtrl::OnCut(wxCommandEvent& WXUNUSED(event))
-{
-    Cut();
-}
-
-void wxTextCtrl::OnCopy(wxCommandEvent& WXUNUSED(event))
-{
-    Copy();
-}
-
-void wxTextCtrl::OnPaste(wxCommandEvent& WXUNUSED(event))
-{
-    Paste();
-}
-
-void wxTextCtrl::OnUndo(wxCommandEvent& WXUNUSED(event))
-{
-    Undo();
-}
-
-void wxTextCtrl::OnRedo(wxCommandEvent& WXUNUSED(event))
-{
-    Redo();
-}
-
-void wxTextCtrl::OnUpdateCut(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCut() );
-}
-
-void wxTextCtrl::OnUpdateCopy(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCopy() );
-}
-
-void wxTextCtrl::OnUpdatePaste(wxUpdateUIEvent& event)
-{
-    event.Enable( CanPaste() );
-}
-
-void wxTextCtrl::OnUpdateUndo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanUndo() );
-}
-
-void wxTextCtrl::OnUpdateRedo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanRedo() );
-}
Index: src/msw/combobox.cpp
===================================================================
--- src/msw/combobox.cpp	(revision 64392)
+++ src/msw/combobox.cpp	(working copy)
@@ -118,21 +118,6 @@
 #endif
 
 BEGIN_EVENT_TABLE(wxComboBox, wxControl)
-    EVT_MENU(wxID_CUT, wxComboBox::OnCut)
-    EVT_MENU(wxID_COPY, wxComboBox::OnCopy)
-    EVT_MENU(wxID_PASTE, wxComboBox::OnPaste)
-    EVT_MENU(wxID_UNDO, wxComboBox::OnUndo)
-    EVT_MENU(wxID_REDO, wxComboBox::OnRedo)
-    EVT_MENU(wxID_CLEAR, wxComboBox::OnDelete)
-    EVT_MENU(wxID_SELECTALL, wxComboBox::OnSelectAll)
-
-    EVT_UPDATE_UI(wxID_CUT, wxComboBox::OnUpdateCut)
-    EVT_UPDATE_UI(wxID_COPY, wxComboBox::OnUpdateCopy)
-    EVT_UPDATE_UI(wxID_PASTE, wxComboBox::OnUpdatePaste)
-    EVT_UPDATE_UI(wxID_UNDO, wxComboBox::OnUpdateUndo)
-    EVT_UPDATE_UI(wxID_REDO, wxComboBox::OnUpdateRedo)
-    EVT_UPDATE_UI(wxID_CLEAR, wxComboBox::OnUpdateDelete)
-    EVT_UPDATE_UI(wxID_SELECTALL, wxComboBox::OnUpdateSelectAll)
 END_EVENT_TABLE()
 
 // ----------------------------------------------------------------------------
@@ -628,80 +613,6 @@
     return !HasFlag(wxCB_READONLY) && wxTextEntry::IsEditable();
 }
 
-// ----------------------------------------------------------------------------
-// standard event handling
-// ----------------------------------------------------------------------------
-
-void wxComboBox::OnCut(wxCommandEvent& WXUNUSED(event))
-{
-    Cut();
-}
-
-void wxComboBox::OnCopy(wxCommandEvent& WXUNUSED(event))
-{
-    Copy();
-}
-
-void wxComboBox::OnPaste(wxCommandEvent& WXUNUSED(event))
-{
-    Paste();
-}
-
-void wxComboBox::OnUndo(wxCommandEvent& WXUNUSED(event))
-{
-    Undo();
-}
-
-void wxComboBox::OnRedo(wxCommandEvent& WXUNUSED(event))
-{
-    Redo();
-}
-
-void wxComboBox::OnDelete(wxCommandEvent& WXUNUSED(event))
-{
-    RemoveSelection();
-}
-
-void wxComboBox::OnSelectAll(wxCommandEvent& WXUNUSED(event))
-{
-    SelectAll();
-}
-
-void wxComboBox::OnUpdateCut(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCut() );
-}
-
-void wxComboBox::OnUpdateCopy(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCopy() );
-}
-
-void wxComboBox::OnUpdatePaste(wxUpdateUIEvent& event)
-{
-    event.Enable( CanPaste() );
-}
-
-void wxComboBox::OnUpdateUndo(wxUpdateUIEvent& event)
-{
-    event.Enable( IsEditable() && CanUndo() );
-}
-
-void wxComboBox::OnUpdateRedo(wxUpdateUIEvent& event)
-{
-    event.Enable( IsEditable() && CanRedo() );
-}
-
-void wxComboBox::OnUpdateDelete(wxUpdateUIEvent& event)
-{
-    event.Enable(IsEditable() && HasSelection());
-}
-
-void wxComboBox::OnUpdateSelectAll(wxUpdateUIEvent& event)
-{
-    event.Enable(IsEditable() && !wxTextEntry::IsEmpty());
-}
-
 void wxComboBox::MSWDoPopupOrDismiss(bool show)
 {
     wxASSERT_MSG( !HasFlag(wxCB_SIMPLE),
Index: src/msw/textctrl.cpp
===================================================================
--- src/msw/textctrl.cpp	(revision 64392)
+++ src/msw/textctrl.cpp	(working copy)
@@ -255,22 +255,6 @@
     EVT_CONTEXT_MENU(wxTextCtrl::OnContextMenu)
 #endif
 
-    EVT_MENU(wxID_CUT, wxTextCtrl::OnCut)
-    EVT_MENU(wxID_COPY, wxTextCtrl::OnCopy)
-    EVT_MENU(wxID_PASTE, wxTextCtrl::OnPaste)
-    EVT_MENU(wxID_UNDO, wxTextCtrl::OnUndo)
-    EVT_MENU(wxID_REDO, wxTextCtrl::OnRedo)
-    EVT_MENU(wxID_CLEAR, wxTextCtrl::OnDelete)
-    EVT_MENU(wxID_SELECTALL, wxTextCtrl::OnSelectAll)
-
-    EVT_UPDATE_UI(wxID_CUT, wxTextCtrl::OnUpdateCut)
-    EVT_UPDATE_UI(wxID_COPY, wxTextCtrl::OnUpdateCopy)
-    EVT_UPDATE_UI(wxID_PASTE, wxTextCtrl::OnUpdatePaste)
-    EVT_UPDATE_UI(wxID_UNDO, wxTextCtrl::OnUpdateUndo)
-    EVT_UPDATE_UI(wxID_REDO, wxTextCtrl::OnUpdateRedo)
-    EVT_UPDATE_UI(wxID_CLEAR, wxTextCtrl::OnUpdateDelete)
-    EVT_UPDATE_UI(wxID_SELECTALL, wxTextCtrl::OnUpdateSelectAll)
-
     EVT_SET_FOCUS(wxTextCtrl::OnSetFocus)
 END_EVENT_TABLE()
 
@@ -2086,80 +2070,6 @@
     return wxSize(wText, hText);
 }
 
-// ----------------------------------------------------------------------------
-// standard handlers for standard edit menu events
-// ----------------------------------------------------------------------------
-
-void wxTextCtrl::OnCut(wxCommandEvent& WXUNUSED(event))
-{
-    Cut();
-}
-
-void wxTextCtrl::OnCopy(wxCommandEvent& WXUNUSED(event))
-{
-    Copy();
-}
-
-void wxTextCtrl::OnPaste(wxCommandEvent& WXUNUSED(event))
-{
-    Paste();
-}
-
-void wxTextCtrl::OnUndo(wxCommandEvent& WXUNUSED(event))
-{
-    Undo();
-}
-
-void wxTextCtrl::OnRedo(wxCommandEvent& WXUNUSED(event))
-{
-    Redo();
-}
-
-void wxTextCtrl::OnDelete(wxCommandEvent& WXUNUSED(event))
-{
-    RemoveSelection();
-}
-
-void wxTextCtrl::OnSelectAll(wxCommandEvent& WXUNUSED(event))
-{
-    SelectAll();
-}
-
-void wxTextCtrl::OnUpdateCut(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCut() );
-}
-
-void wxTextCtrl::OnUpdateCopy(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCopy() );
-}
-
-void wxTextCtrl::OnUpdatePaste(wxUpdateUIEvent& event)
-{
-    event.Enable( CanPaste() );
-}
-
-void wxTextCtrl::OnUpdateUndo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanUndo() );
-}
-
-void wxTextCtrl::OnUpdateRedo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanRedo() );
-}
-
-void wxTextCtrl::OnUpdateDelete(wxUpdateUIEvent& event)
-{
-    event.Enable( HasSelection() && IsEditable() );
-}
-
-void wxTextCtrl::OnUpdateSelectAll(wxUpdateUIEvent& event)
-{
-    event.Enable( !IsEmpty() );
-}
-
 void wxTextCtrl::OnContextMenu(wxContextMenuEvent& event)
 {
 #if wxUSE_RICHEDIT
Index: src/msw/wince/textctrlce.cpp
===================================================================
--- src/msw/wince/textctrlce.cpp	(revision 64392)
+++ src/msw/wince/textctrlce.cpp	(working copy)
@@ -51,23 +51,6 @@
 
 BEGIN_EVENT_TABLE(wxTextCtrl, wxControl)
     EVT_CHAR(wxTextCtrl::OnChar)
-
-    EVT_MENU(wxID_CUT, wxTextCtrl::OnCut)
-    EVT_MENU(wxID_COPY, wxTextCtrl::OnCopy)
-    EVT_MENU(wxID_PASTE, wxTextCtrl::OnPaste)
-    EVT_MENU(wxID_UNDO, wxTextCtrl::OnUndo)
-    EVT_MENU(wxID_REDO, wxTextCtrl::OnRedo)
-    EVT_MENU(wxID_CLEAR, wxTextCtrl::OnDelete)
-    EVT_MENU(wxID_SELECTALL, wxTextCtrl::OnSelectAll)
-
-    EVT_UPDATE_UI(wxID_CUT, wxTextCtrl::OnUpdateCut)
-    EVT_UPDATE_UI(wxID_COPY, wxTextCtrl::OnUpdateCopy)
-    EVT_UPDATE_UI(wxID_PASTE, wxTextCtrl::OnUpdatePaste)
-    EVT_UPDATE_UI(wxID_UNDO, wxTextCtrl::OnUpdateUndo)
-    EVT_UPDATE_UI(wxID_REDO, wxTextCtrl::OnUpdateRedo)
-    EVT_UPDATE_UI(wxID_CLEAR, wxTextCtrl::OnUpdateDelete)
-    EVT_UPDATE_UI(wxID_SELECTALL, wxTextCtrl::OnUpdateSelectAll)
-
     EVT_SET_FOCUS(wxTextCtrl::OnSetFocus)
 END_EVENT_TABLE()
 
@@ -1123,85 +1106,6 @@
     return wxSize(wText, hText);
 }
 
-// ----------------------------------------------------------------------------
-// standard handlers for standard edit menu events
-// ----------------------------------------------------------------------------
-
-void wxTextCtrl::OnCut(wxCommandEvent& WXUNUSED(event))
-{
-    Cut();
-}
-
-void wxTextCtrl::OnCopy(wxCommandEvent& WXUNUSED(event))
-{
-    Copy();
-}
-
-void wxTextCtrl::OnPaste(wxCommandEvent& WXUNUSED(event))
-{
-    Paste();
-}
-
-void wxTextCtrl::OnUndo(wxCommandEvent& WXUNUSED(event))
-{
-    Undo();
-}
-
-void wxTextCtrl::OnRedo(wxCommandEvent& WXUNUSED(event))
-{
-    Redo();
-}
-
-void wxTextCtrl::OnDelete(wxCommandEvent& WXUNUSED(event))
-{
-    long from, to;
-    GetSelection(& from, & to);
-    if (from != -1 && to != -1)
-        Remove(from, to);
-}
-
-void wxTextCtrl::OnSelectAll(wxCommandEvent& WXUNUSED(event))
-{
-    SetSelection(-1, -1);
-}
-
-void wxTextCtrl::OnUpdateCut(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCut() );
-}
-
-void wxTextCtrl::OnUpdateCopy(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCopy() );
-}
-
-void wxTextCtrl::OnUpdatePaste(wxUpdateUIEvent& event)
-{
-    event.Enable( CanPaste() );
-}
-
-void wxTextCtrl::OnUpdateUndo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanUndo() );
-}
-
-void wxTextCtrl::OnUpdateRedo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanRedo() );
-}
-
-void wxTextCtrl::OnUpdateDelete(wxUpdateUIEvent& event)
-{
-    long from, to;
-    GetSelection(& from, & to);
-    event.Enable(from != -1 && to != -1 && from != to && IsEditable()) ;
-}
-
-void wxTextCtrl::OnUpdateSelectAll(wxUpdateUIEvent& event)
-{
-    event.Enable(GetLastPosition() > 0);
-}
-
 void wxTextCtrl::OnSetFocus(wxFocusEvent& WXUNUSED(event))
 {
     // be sure the caret remains invisible if the user had hidden it
Index: src/os2/textctrl.cpp
===================================================================
--- src/os2/textctrl.cpp	(revision 64392)
+++ src/os2/textctrl.cpp	(working copy)
@@ -60,18 +60,6 @@
 BEGIN_EVENT_TABLE(wxTextCtrl, wxTextCtrlBase)
     EVT_CHAR(wxTextCtrl::OnChar)
     EVT_DROP_FILES(wxTextCtrl::OnDropFiles)
-
-    EVT_MENU(wxID_CUT, wxTextCtrl::OnCut)
-    EVT_MENU(wxID_COPY, wxTextCtrl::OnCopy)
-    EVT_MENU(wxID_PASTE, wxTextCtrl::OnPaste)
-    EVT_MENU(wxID_UNDO, wxTextCtrl::OnUndo)
-    EVT_MENU(wxID_REDO, wxTextCtrl::OnRedo)
-
-    EVT_UPDATE_UI(wxID_CUT, wxTextCtrl::OnUpdateCut)
-    EVT_UPDATE_UI(wxID_COPY, wxTextCtrl::OnUpdateCopy)
-    EVT_UPDATE_UI(wxID_PASTE, wxTextCtrl::OnUpdatePaste)
-    EVT_UPDATE_UI(wxID_UNDO, wxTextCtrl::OnUpdateUndo)
-    EVT_UPDATE_UI(wxID_REDO, wxTextCtrl::OnUpdateRedo)
 END_EVENT_TABLE()
 
 
@@ -1218,88 +1206,6 @@
     return wxSize(wText, hText);
 } // end of wxTextCtrl::DoGetBestSize
 
-// ----------------------------------------------------------------------------
-// standard handlers for standard edit menu events
-// ----------------------------------------------------------------------------
-
-void wxTextCtrl::OnCut( wxCommandEvent& WXUNUSED(rEvent) )
-{
-    Cut();
-} // end of wxTextCtrl::OnCut
-
-void wxTextCtrl::OnCopy( wxCommandEvent& WXUNUSED(rEvent) )
-{
-    Copy();
-} // end of wxTextCtrl::OnCopy
-
-void wxTextCtrl::OnPaste( wxCommandEvent& WXUNUSED(rEvent) )
-{
-    Paste();
-} // end of wxTextCtrl::OnPaste
-
-void wxTextCtrl::OnUndo( wxCommandEvent& WXUNUSED(rEvent) )
-{
-    Undo();
-} // end of wxTextCtrl::OnUndo
-
-void wxTextCtrl::OnRedo( wxCommandEvent& WXUNUSED(rEvent) )
-{
-    Redo();
-} // end of wxTextCtrl::OnRedo
-
-void wxTextCtrl::OnDelete( wxCommandEvent& WXUNUSED(rEvent) )
-{
-    long lFrom, lTo;
-
-    GetSelection( &lFrom, &lTo );
-
-    if (lFrom != -1 && lTo != -1)
-        Remove( lFrom, lTo );
-} // end of wxTextCtrl::OnDelete
-
-void wxTextCtrl::OnSelectAll( wxCommandEvent& WXUNUSED(rEvent) )
-{
-    SetSelection(-1, -1);
-} // end of wxTextCtrl::OnSelectAll
-
-void wxTextCtrl::OnUpdateCut( wxUpdateUIEvent& rEvent )
-{
-    rEvent.Enable(CanCut());
-} // end of wxTextCtrl::OnUpdateCut
-
-void wxTextCtrl::OnUpdateCopy( wxUpdateUIEvent& rEvent )
-{
-    rEvent.Enable(CanCopy());
-} // end of wxTextCtrl::OnUpdateCopy
-
-void wxTextCtrl::OnUpdatePaste( wxUpdateUIEvent& rEvent )
-{
-    rEvent.Enable(CanPaste());
-} // end of wxTextCtrl::OnUpdatePaste
-
-void wxTextCtrl::OnUpdateUndo( wxUpdateUIEvent& rEvent )
-{
-    rEvent.Enable(CanUndo());
-} // end of wxTextCtrl::OnUpdateUndo
-
-void wxTextCtrl::OnUpdateRedo( wxUpdateUIEvent& rEvent )
-{
-    rEvent.Enable(CanRedo());
-} // end of wxTextCtrl::OnUpdateRedo
-
-void wxTextCtrl::OnUpdateDelete( wxUpdateUIEvent& rEvent )
-{
-    long lFrom, lTo;
-
-    GetSelection( &lFrom, &lTo );
-    rEvent.Enable( lFrom != -1L && lTo != -1L && lFrom != lTo && IsEditable()) ;
-} // end of wxTextCtrl::OnUpdateDelete
-
-void wxTextCtrl::OnUpdateSelectAll( wxUpdateUIEvent& rEvent )
-{
-    rEvent.Enable(GetLastPosition() > 0);
-} // end of wxTextCtrl::OnUpdateSelectAll
-
 bool wxTextCtrl::SetBackgroundColour( const wxColour& rColour )
 {
     if (m_bIsMLE)
Index: src/osx/textctrl_osx.cpp
===================================================================
--- src/osx/textctrl_osx.cpp	(revision 64392)
+++ src/osx/textctrl_osx.cpp	(working copy)
@@ -54,23 +54,8 @@
     EVT_DROP_FILES(wxTextCtrl::OnDropFiles)
     EVT_CHAR(wxTextCtrl::OnChar)
     EVT_KEY_DOWN(wxTextCtrl::OnKeyDown)
-    EVT_MENU(wxID_CUT, wxTextCtrl::OnCut)
-    EVT_MENU(wxID_COPY, wxTextCtrl::OnCopy)
-    EVT_MENU(wxID_PASTE, wxTextCtrl::OnPaste)
-    EVT_MENU(wxID_UNDO, wxTextCtrl::OnUndo)
-    EVT_MENU(wxID_REDO, wxTextCtrl::OnRedo)
-    EVT_MENU(wxID_CLEAR, wxTextCtrl::OnDelete)
-    EVT_MENU(wxID_SELECTALL, wxTextCtrl::OnSelectAll)
 
     EVT_CONTEXT_MENU(wxTextCtrl::OnContextMenu)
-
-    EVT_UPDATE_UI(wxID_CUT, wxTextCtrl::OnUpdateCut)
-    EVT_UPDATE_UI(wxID_COPY, wxTextCtrl::OnUpdateCopy)
-    EVT_UPDATE_UI(wxID_PASTE, wxTextCtrl::OnUpdatePaste)
-    EVT_UPDATE_UI(wxID_UNDO, wxTextCtrl::OnUpdateUndo)
-    EVT_UPDATE_UI(wxID_REDO, wxTextCtrl::OnUpdateRedo)
-    EVT_UPDATE_UI(wxID_CLEAR, wxTextCtrl::OnUpdateDelete)
-    EVT_UPDATE_UI(wxID_SELECTALL, wxTextCtrl::OnUpdateSelectAll)
 END_EVENT_TABLE()
 
 
@@ -492,83 +477,6 @@
 
 // CS: Context Menus only work with MLTE implementations or non-multiline HIViews at the moment
 
-void wxTextCtrl::OnCut(wxCommandEvent& WXUNUSED(event))
-{
-    Cut();
-}
-
-void wxTextCtrl::OnCopy(wxCommandEvent& WXUNUSED(event))
-{
-    Copy();
-}
-
-void wxTextCtrl::OnPaste(wxCommandEvent& WXUNUSED(event))
-{
-    Paste();
-}
-
-void wxTextCtrl::OnUndo(wxCommandEvent& WXUNUSED(event))
-{
-    Undo();
-}
-
-void wxTextCtrl::OnRedo(wxCommandEvent& WXUNUSED(event))
-{
-    Redo();
-}
-
-void wxTextCtrl::OnDelete(wxCommandEvent& WXUNUSED(event))
-{
-    long from, to;
-
-    GetSelection( &from, &to );
-    if (from != -1 && to != -1)
-        Remove( from, to );
-}
-
-void wxTextCtrl::OnSelectAll(wxCommandEvent& WXUNUSED(event))
-{
-    SetSelection(-1, -1);
-}
-
-void wxTextCtrl::OnUpdateCut(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCut() );
-}
-
-void wxTextCtrl::OnUpdateCopy(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCopy() );
-}
-
-void wxTextCtrl::OnUpdatePaste(wxUpdateUIEvent& event)
-{
-    event.Enable( CanPaste() );
-}
-
-void wxTextCtrl::OnUpdateUndo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanUndo() );
-}
-
-void wxTextCtrl::OnUpdateRedo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanRedo() );
-}
-
-void wxTextCtrl::OnUpdateDelete(wxUpdateUIEvent& event)
-{
-    long from, to;
-
-    GetSelection( &from, &to );
-    event.Enable( from != -1 && to != -1 && from != to && IsEditable() ) ;
-}
-
-void wxTextCtrl::OnUpdateSelectAll(wxUpdateUIEvent& event)
-{
-    event.Enable(GetLastPosition() > 0);
-}
-
 void wxTextCtrl::OnContextMenu(wxContextMenuEvent& event)
 {
     if ( GetTextPeer()->HasOwnContextMenu() )
Index: src/palmos/textctrl.cpp
===================================================================
--- src/palmos/textctrl.cpp	(revision 64392)
+++ src/palmos/textctrl.cpp	(working copy)
@@ -163,23 +163,6 @@
 #if wxUSE_RICHEDIT
     EVT_RIGHT_UP(wxTextCtrl::OnRightClick)
 #endif
-
-    EVT_MENU(wxID_CUT, wxTextCtrl::OnCut)
-    EVT_MENU(wxID_COPY, wxTextCtrl::OnCopy)
-    EVT_MENU(wxID_PASTE, wxTextCtrl::OnPaste)
-    EVT_MENU(wxID_UNDO, wxTextCtrl::OnUndo)
-    EVT_MENU(wxID_REDO, wxTextCtrl::OnRedo)
-    EVT_MENU(wxID_CLEAR, wxTextCtrl::OnDelete)
-    EVT_MENU(wxID_SELECTALL, wxTextCtrl::OnSelectAll)
-
-    EVT_UPDATE_UI(wxID_CUT, wxTextCtrl::OnUpdateCut)
-    EVT_UPDATE_UI(wxID_COPY, wxTextCtrl::OnUpdateCopy)
-    EVT_UPDATE_UI(wxID_PASTE, wxTextCtrl::OnUpdatePaste)
-    EVT_UPDATE_UI(wxID_UNDO, wxTextCtrl::OnUpdateUndo)
-    EVT_UPDATE_UI(wxID_REDO, wxTextCtrl::OnUpdateRedo)
-    EVT_UPDATE_UI(wxID_CLEAR, wxTextCtrl::OnUpdateDelete)
-    EVT_UPDATE_UI(wxID_SELECTALL, wxTextCtrl::OnUpdateSelectAll)
-
     EVT_SET_FOCUS(wxTextCtrl::OnSetFocus)
 END_EVENT_TABLE()
 
@@ -484,66 +467,6 @@
     return wxSize(0,0);
 }
 
-// ----------------------------------------------------------------------------
-// standard handlers for standard edit menu events
-// ----------------------------------------------------------------------------
-
-void wxTextCtrl::OnCut(wxCommandEvent& WXUNUSED(event))
-{
-}
-
-void wxTextCtrl::OnCopy(wxCommandEvent& WXUNUSED(event))
-{
-}
-
-void wxTextCtrl::OnPaste(wxCommandEvent& WXUNUSED(event))
-{
-}
-
-void wxTextCtrl::OnUndo(wxCommandEvent& WXUNUSED(event))
-{
-}
-
-void wxTextCtrl::OnRedo(wxCommandEvent& WXUNUSED(event))
-{
-}
-
-void wxTextCtrl::OnDelete(wxCommandEvent& WXUNUSED(event))
-{
-}
-
-void wxTextCtrl::OnSelectAll(wxCommandEvent& WXUNUSED(event))
-{
-}
-
-void wxTextCtrl::OnUpdateCut(wxUpdateUIEvent& event)
-{
-}
-
-void wxTextCtrl::OnUpdateCopy(wxUpdateUIEvent& event)
-{
-}
-
-void wxTextCtrl::OnUpdatePaste(wxUpdateUIEvent& event)
-{
-}
-
-void wxTextCtrl::OnUpdateUndo(wxUpdateUIEvent& event)
-{
-}
-
-void wxTextCtrl::OnUpdateRedo(wxUpdateUIEvent& event)
-{
-}
-
-void wxTextCtrl::OnUpdateDelete(wxUpdateUIEvent& event)
-{
-}
-
-void wxTextCtrl::OnUpdateSelectAll(wxUpdateUIEvent& event)
-{
-}
-
 void wxTextCtrl::OnSetFocus(wxFocusEvent& WXUNUSED(event))
 {
 }
Index: src/richtext/richtextctrl.cpp
===================================================================
--- src/richtext/richtextctrl.cpp	(revision 64392)
+++ src/richtext/richtextctrl.cpp	(working copy)
@@ -159,27 +159,6 @@
     EVT_MOUSE_CAPTURE_LOST(wxRichTextCtrl::OnCaptureLost)
     EVT_CONTEXT_MENU(wxRichTextCtrl::OnContextMenu)
     EVT_SYS_COLOUR_CHANGED(wxRichTextCtrl::OnSysColourChanged)
-
-    EVT_MENU(wxID_UNDO, wxRichTextCtrl::OnUndo)
-    EVT_UPDATE_UI(wxID_UNDO, wxRichTextCtrl::OnUpdateUndo)
-
-    EVT_MENU(wxID_REDO, wxRichTextCtrl::OnRedo)
-    EVT_UPDATE_UI(wxID_REDO, wxRichTextCtrl::OnUpdateRedo)
-
-    EVT_MENU(wxID_COPY, wxRichTextCtrl::OnCopy)
-    EVT_UPDATE_UI(wxID_COPY, wxRichTextCtrl::OnUpdateCopy)
-
-    EVT_MENU(wxID_PASTE, wxRichTextCtrl::OnPaste)
-    EVT_UPDATE_UI(wxID_PASTE, wxRichTextCtrl::OnUpdatePaste)
-
-    EVT_MENU(wxID_CUT, wxRichTextCtrl::OnCut)
-    EVT_UPDATE_UI(wxID_CUT, wxRichTextCtrl::OnUpdateCut)
-
-    EVT_MENU(wxID_CLEAR, wxRichTextCtrl::OnClear)
-    EVT_UPDATE_UI(wxID_CLEAR, wxRichTextCtrl::OnUpdateClear)
-
-    EVT_MENU(wxID_SELECTALL, wxRichTextCtrl::OnSelectAll)
-    EVT_UPDATE_UI(wxID_SELECTALL, wxRichTextCtrl::OnUpdateSelectAll)
 END_EVENT_TABLE()
 
 /*!
@@ -2744,83 +2723,6 @@
     return wxSize(10, 10);
 }
 
-// ----------------------------------------------------------------------------
-// standard handlers for standard edit menu events
-// ----------------------------------------------------------------------------
-
-void wxRichTextCtrl::OnCut(wxCommandEvent& WXUNUSED(event))
-{
-    Cut();
-}
-
-void wxRichTextCtrl::OnClear(wxCommandEvent& WXUNUSED(event))
-{
-    DeleteSelection();
-}
-
-void wxRichTextCtrl::OnCopy(wxCommandEvent& WXUNUSED(event))
-{
-    Copy();
-}
-
-void wxRichTextCtrl::OnPaste(wxCommandEvent& WXUNUSED(event))
-{
-    Paste();
-}
-
-void wxRichTextCtrl::OnUndo(wxCommandEvent& WXUNUSED(event))
-{
-    Undo();
-}
-
-void wxRichTextCtrl::OnRedo(wxCommandEvent& WXUNUSED(event))
-{
-    Redo();
-}
-
-void wxRichTextCtrl::OnUpdateCut(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCut() );
-}
-
-void wxRichTextCtrl::OnUpdateCopy(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCopy() );
-}
-
-void wxRichTextCtrl::OnUpdateClear(wxUpdateUIEvent& event)
-{
-    event.Enable( CanDeleteSelection() );
-}
-
-void wxRichTextCtrl::OnUpdatePaste(wxUpdateUIEvent& event)
-{
-    event.Enable( CanPaste() );
-}
-
-void wxRichTextCtrl::OnUpdateUndo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanUndo() );
-    event.SetText( GetCommandProcessor()->GetUndoMenuLabel() );
-}
-
-void wxRichTextCtrl::OnUpdateRedo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanRedo() );
-    event.SetText( GetCommandProcessor()->GetRedoMenuLabel() );
-}
-
-void wxRichTextCtrl::OnSelectAll(wxCommandEvent& WXUNUSED(event))
-{
-    if (GetLastPosition() > 0)
-        SelectAll();
-}
-
-void wxRichTextCtrl::OnUpdateSelectAll(wxUpdateUIEvent& event)
-{
-    event.Enable(GetLastPosition() > 0);
-}
-
 void wxRichTextCtrl::OnContextMenu(wxContextMenuEvent& event)
 {
     if (event.GetEventObject() != this)
Index: src/x11/textctrl.cpp
===================================================================
--- src/x11/textctrl.cpp	(revision 64392)
+++ src/x11/textctrl.cpp	(working copy)
@@ -140,18 +140,6 @@
     EVT_MOUSE_EVENTS(wxTextCtrl::OnMouse)
     EVT_KILL_FOCUS(wxTextCtrl::OnKillFocus)
     EVT_SET_FOCUS(wxTextCtrl::OnSetFocus)
-
-    EVT_MENU(wxID_CUT, wxTextCtrl::OnCut)
-    EVT_MENU(wxID_COPY, wxTextCtrl::OnCopy)
-    EVT_MENU(wxID_PASTE, wxTextCtrl::OnPaste)
-    EVT_MENU(wxID_UNDO, wxTextCtrl::OnUndo)
-    EVT_MENU(wxID_REDO, wxTextCtrl::OnRedo)
-
-    EVT_UPDATE_UI(wxID_CUT, wxTextCtrl::OnUpdateCut)
-    EVT_UPDATE_UI(wxID_COPY, wxTextCtrl::OnUpdateCopy)
-    EVT_UPDATE_UI(wxID_PASTE, wxTextCtrl::OnUpdatePaste)
-    EVT_UPDATE_UI(wxID_UNDO, wxTextCtrl::OnUpdateUndo)
-    EVT_UPDATE_UI(wxID_REDO, wxTextCtrl::OnUpdateRedo)
 END_EVENT_TABLE()
 
 void wxTextCtrl::Init()
@@ -2301,60 +2289,6 @@
     SetScrollbars( m_charWidth, m_lineHeight, m_longestLine+2, y_range, view_x, view_y );
 }
 
-//-----------------------------------------------------------------------------
-//  clipboard handlers
-//-----------------------------------------------------------------------------
-
-void wxTextCtrl::OnCut(wxCommandEvent& WXUNUSED(event))
-{
-    Cut();
-}
-
-void wxTextCtrl::OnCopy(wxCommandEvent& WXUNUSED(event))
-{
-    Copy();
-}
-
-void wxTextCtrl::OnPaste(wxCommandEvent& WXUNUSED(event))
-{
-    Paste();
-}
-
-void wxTextCtrl::OnUndo(wxCommandEvent& WXUNUSED(event))
-{
-    Undo();
-}
-
-void wxTextCtrl::OnRedo(wxCommandEvent& WXUNUSED(event))
-{
-    Redo();
-}
-
-void wxTextCtrl::OnUpdateCut(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCut() );
-}
-
-void wxTextCtrl::OnUpdateCopy(wxUpdateUIEvent& event)
-{
-    event.Enable( CanCopy() );
-}
-
-void wxTextCtrl::OnUpdatePaste(wxUpdateUIEvent& event)
-{
-    event.Enable( CanPaste() );
-}
-
-void wxTextCtrl::OnUpdateUndo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanUndo() );
-}
-
-void wxTextCtrl::OnUpdateRedo(wxUpdateUIEvent& event)
-{
-    event.Enable( CanRedo() );
-}
-
 wxSize wxTextCtrl::DoGetBestSize() const
 {
     if (IsSingleLine())
