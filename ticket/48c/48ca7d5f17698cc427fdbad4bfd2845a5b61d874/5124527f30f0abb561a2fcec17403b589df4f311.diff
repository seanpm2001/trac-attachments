diff --git a/samples/minimal/minimal.cpp b/samples/minimal/minimal.cpp
index 80bf766..9dd31f2 100644
--- a/samples/minimal/minimal.cpp
+++ b/samples/minimal/minimal.cpp
@@ -19,6 +19,7 @@
  
 // For compilers that support precompilation, includes "wx/wx.h".
 #include "wx/wxprec.h"
+#include "wx/dataview.h"
  
 #ifdef __BORLANDC__
     #pragma hdrstop
@@ -40,6 +41,7 @@
     #include "../sample.xpm"
 #endif
 
+
 // ----------------------------------------------------------------------------
 // private classes
 // ----------------------------------------------------------------------------
@@ -67,10 +69,13 @@ public:
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    void OnEvent(wxCommandEvent& event);
 
 private:
     // any class wishing to process wxWidgets events must use this macro
     DECLARE_EVENT_TABLE()
+
+    wxDataViewListCtrl *m_listctrl;
 };
 
 // ----------------------------------------------------------------------------
@@ -86,7 +91,9 @@ enum
     // it is important for the id corresponding to the "About" command to have
     // this standard value as otherwise it won't be handled properly under Mac
     // (where it is special and put into the "Apple" menu)
-    Minimal_About = wxID_ABOUT
+    Minimal_About = wxID_ABOUT,
+
+    Event
 };
 
 // ----------------------------------------------------------------------------
@@ -99,6 +106,7 @@ enum
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_MENU(Event, MyFrame::OnEvent)
 END_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -151,6 +159,7 @@ MyFrame::MyFrame(const wxString& title)
 #if wxUSE_MENUS
     // create a menu bar
     wxMenu *fileMenu = new wxMenu;
+    fileMenu->Append( Event, "Trigger Event" );
 
     // the "About" item should be in the help menu
     wxMenu *helpMenu = new wxMenu;
@@ -172,10 +181,34 @@ MyFrame::MyFrame(const wxString& title)
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+
+    m_listctrl = new wxDataViewListCtrl( this, wxID_ANY, wxDefaultPosition, wxDefaultSize );
+    m_listctrl->AppendTextColumn( wxT("Test 1") );
+    wxDataViewSpinRenderer *renderer = new wxDataViewSpinRenderer(1, 1);
+    wxDataViewColumn *column = new wxDataViewColumn(wxT("Test 2"), renderer, 1);
+    m_listctrl->AppendColumn( column );
+
+    wxVector<wxVariant> data;
+    data.push_back(wxVariant(wxT("TEST #1")) );
+    data.push_back(wxVariant(1) );
+    m_listctrl->AppendItem( data );
+
 }
 
 
 // event handlers
+void MyFrame::OnEvent(wxCommandEvent& event)
+{
+    m_listctrl->DeleteAllItems( );  // commenting out either one of these lines will cause it to fail
+    //m_listctrl->DeleteAllItems( );  // this line could also be m_listctrl->GetStore()->DeleteAllItems()
+    for( int i = 1; i <= 20; i++)
+    {
+        wxVector<wxVariant> data;
+        data.push_back(wxVariant(wxString::Format(wxT("TEST #%i"), i) ) );
+        data.push_back(wxVariant(1) );
+        m_listctrl->AppendItem( data );
+    }
+}
 
 void MyFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
 {
