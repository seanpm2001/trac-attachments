? gtk.window.cpp.patch
? gtk_combobox_multiple_selected_events.patch
? gtk_scroll_lineup_linedown.patch
? gtk_scroll_lineup_linedown_2.patch
? contrib/samples/foldbar/foldpanelbar/mondrian.xpm
? src/gtk/window.cpp.new
Index: src/gtk/combobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/combobox.cpp,v
retrieving revision 1.120
diff -b -u -2 -r1.120 combobox.cpp
--- src/gtk/combobox.cpp	2004/12/15 07:42:31	1.120
+++ src/gtk/combobox.cpp	2005/01/05 14:10:38
@@ -39,5 +39,5 @@
 
 extern bool   g_blockEventsOnDrag;
-
+static int    g_SelectionBeforePopup = -1;
 //-----------------------------------------------------------------------------
 //  "changed" - typing and list item matches get changed, select-child
@@ -69,4 +69,28 @@
 }
 
+static void
+gtk_popup_hide_callback(GtkCombo *WXUNUSED(gtk_combo), wxComboBox *combo)
+{  
+  // when the popup is hidden, throw a SELECTED event only if the combobox selection changed.
+  int curSelection = combo->GetSelection();
+  if (g_SelectionBeforePopup != curSelection)
+    {
+      wxCommandEvent event( wxEVT_COMMAND_COMBOBOX_SELECTED, combo->GetId() );
+      event.SetInt( curSelection );
+      event.SetString( combo->GetStringSelection() );
+      event.SetEventObject( combo );
+      combo->GetEventHandler()->ProcessEvent( event );
+    }
+  // reset the selection flag to an identifiable value
+  g_SelectionBeforePopup = -1;
+}
+
+static void
+gtk_popup_show_callback(GtkCombo *WXUNUSED(gtk_combo), wxComboBox *combo)
+{
+  // store the combobox selection value before the popup is shown
+  g_SelectionBeforePopup = combo->GetSelection();
+}
+
 //-----------------------------------------------------------------------------
 // "select-child" - click/cursor get select-child, changed, select-child
@@ -100,10 +124,16 @@
       GTK_SIGNAL_FUNC(gtk_text_changed_callback), (gpointer)combo );
 
+    // throw a SELECTED event only if the combobox popup is hidden
+    // because when combobox popup is shown, gtk_combo_select_child_callback is called each times
+    // the mouse is over an item with a pressed button so a lot of SELECTED event could be generated 
+    // if the user keep the mouse button down and select other items ...
+    if (g_SelectionBeforePopup == -1)
+      {
     wxCommandEvent event( wxEVT_COMMAND_COMBOBOX_SELECTED, combo->GetId() );
     event.SetInt( curSelection );
     event.SetString( combo->GetStringSelection() );
     event.SetEventObject( combo );
-
     combo->GetEventHandler()->ProcessEvent( event );
+      }
 
     // Now send the event ourselves
@@ -219,4 +249,11 @@
     if (style & wxCB_READONLY)
         gtk_entry_set_editable( GTK_ENTRY( combo->entry ), FALSE );
+
+    // "show" and "hide" events are generated when user click on the combobox button which popups a list
+    // this list is the "popwin" gtk widget
+    gtk_signal_connect( GTK_OBJECT(GTK_COMBO(combo)->popwin), "hide",
+			GTK_SIGNAL_FUNC(gtk_popup_hide_callback), (gpointer)this );
+    gtk_signal_connect( GTK_OBJECT(GTK_COMBO(combo)->popwin), "show",
+			GTK_SIGNAL_FUNC(gtk_popup_show_callback), (gpointer)this );
 
     gtk_signal_connect( GTK_OBJECT(combo->entry), "changed",

 	  	 
