--- src/common/event-svn.cpp	2008-01-25 17:36:19.000000000 +0100
+++ src/common/event.cpp	2008-02-09 19:06:03.000000000 +0100
@@ -1053,6 +1053,7 @@
         {
             wxDynamicEventTableEntry *entry = (wxDynamicEventTableEntry*)*it;
 
+#if wxUSE_WEAKREF==1
             // Remove ourselves from sink destructor notifications
             // (this has usually been been done, in wxTrackable destructor)
             wxEvtHandler *eventSink = entry->m_eventSink;
@@ -1066,6 +1067,7 @@
                     delete evtConnRef;
                 }
             }
+#endif // wxUSE_WEAKREF==1
 
             if (entry->m_callbackUserData)
                 delete entry->m_callbackUserData;
@@ -1367,8 +1369,10 @@
     // Insert at the front of the list so most recent additions are found first
     m_dynamicEvents->Insert( (wxObject*) entry );
 
-    // Make sure we get to know when a sink is destroyed
-    if ( eventSink )
+#if wxUSE_WEAKREF==1
+    // Make sure we get to know when a sink is destroyed. No point 
+    // tracking connection to same object. 
+    if ( eventSink && eventSink!=this )
     {
         wxEventConnectionRef *evtConnRef = FindRefInTrackerList(eventSink);
         if ( evtConnRef )
@@ -1376,6 +1380,7 @@
         else
             evtConnRef = new wxEventConnectionRef(this, eventSink);
     }
+#endif // wxUSE_WEAKREF==1
 }
 
 bool wxEvtHandler::Disconnect( int id, int lastId, wxEventType eventType,
@@ -1386,13 +1391,15 @@
     if (!m_dynamicEvents)
         return false;
 
+#if wxUSE_WEAKREF==1
     // Remove connection from tracker node (wxEventConnectionRef)
-    if ( eventSink )
+    if ( eventSink && eventSink!=this )
     {
         wxEventConnectionRef *evtConnRef = FindRefInTrackerList(eventSink);
         if ( evtConnRef )
             evtConnRef->DecRef();
     }
+#endif // wxUSE_WEAKREF==1
 
     wxList::compatibility_iterator node = m_dynamicEvents->GetFirst();
     while (node)
@@ -1484,11 +1491,13 @@
     return m_clientData;
 }
 
+#if wxUSE_WEAKREF==1
+
 // A helper to find an wxEventConnectionRef object
 wxEventConnectionRef *
 wxEvtHandler::FindRefInTrackerList(wxEvtHandler *eventSink)
 {
-    for ( wxTrackerNode *node = eventSink->GetFirst(); node; node = node->m_nxt )
+    for ( wxTrackerNode *node = eventSink->wxTrackable::GetFirst(); node; node = node->m_nxt )
     {
         // we only want wxEventConnectionRef nodes here
         wxEventConnectionRef *evtConnRef = node->ToEventConnection();
@@ -1523,6 +1532,7 @@
         node = node_nxt;
     }
 }
+#endif // wxUSE_WEAKREF==1
 
 #endif // wxUSE_BASE
 

 	  	 
