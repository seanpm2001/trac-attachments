Index: src/common/wxchar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/wxchar.cpp,v
retrieving revision 1.116
diff -u2 -r1.116 src/common/wxchar.cpp
--- src/common/wxchar.cpp
+++ src/common/wxchar.cpp
@@ -166,4 +166,5 @@
 #if !defined(wxVsnprintf_)
 
+
 // wxUSE_STRUTILS says our wxVsnprintf_ implementation to use or not to
 // use wxStrlen and wxStrncpy functions over one-char processing loops.
@@ -187,5 +188,5 @@
 #define wxMAX_SVNPRINTF_FLAGBUFFER_LEN    32
 
-// the conversion specifiers accepted by wxMyPosVsnprintf_
+// the conversion specifiers accepted by wxVsnprintf_
 enum wxPrintfArgType {
     wxPAT_INVALID = -1,
@@ -214,5 +215,5 @@
 };
 
-// an argument passed to wxMyPosVsnprintf_
+// an argument passed to wxVsnprintf_
 typedef union {
     int pad_int;                        //  %d, %i, %o, %u, %x, %X
@@ -241,5 +242,5 @@
 
 // Contains parsed data relative to a conversion specifier given to
-// wxMyPosVsnprintf_ and parsed from the format string
+// wxVsnprintf_ and parsed from the format string
 // NOTE: in C++ there is almost no difference between struct & classes thus
 //       there is no performance gain by using a struct here...
@@ -275,4 +276,7 @@
     // a little buffer where formatting flags like #+\.hlqLZ are stored by Parse()
     // for use in Process()
+    // NB: this buffer can be safely a char buffer instead of a wchar_t buffer
+    //     since it's used only for numeric conversion specifier and always
+    //     with sprintf().
     char szFlags[wxMAX_SVNPRINTF_FLAGBUFFER_LEN];
 
@@ -281,5 +285,5 @@
 
     // we don't declare this as a constructor otherwise it would be called
-    // automatically and we don't want this: to be optimized, wxMyPosVsnprintf_
+    // automatically and we don't want this: to be optimized, wxVsnprintf_
     // calls this function only on really-used instances of this class.
     void Init();
@@ -311,5 +315,8 @@
     argpos = argend = NULL;
     type = wxPAT_INVALID;
-    szFlags[0] = wxT('%');
+
+    // this character will never be removed from szFlags array and
+    // is important when calling sprintf() in wxPrintfConvSpec::Process() !
+    szFlags[0] = '%';
 }
 
@@ -330,5 +337,5 @@
         if (in_prec && !prec_dot) \
         { \
-            szFlags[flagofs++] = '.'; \
+            szFlags[flagofs++] = (char)'.'; \
             prec_dot = true; \
         }
@@ -350,5 +357,5 @@
             case wxT('\''):
                 CHECK_PREC
-                szFlags[flagofs++] = ch;
+                szFlags[flagofs++] = (char)ch;
                 break;
 
@@ -356,5 +363,5 @@
                 CHECK_PREC
                 adj_left = true;
-                szFlags[flagofs++] = ch;
+                szFlags[flagofs++] = (char)ch;
                 break;
 
@@ -371,5 +378,5 @@
                 ilen = -1;
                 CHECK_PREC
-                szFlags[flagofs++] = ch;
+                szFlags[flagofs++] = (char)ch;
                 break;
 
@@ -377,5 +384,5 @@
                 ilen = 1;
                 CHECK_PREC
-                szFlags[flagofs++] = ch;
+                szFlags[flagofs++] = (char)ch;
                 break;
 
@@ -384,5 +391,5 @@
                 ilen = 2;
                 CHECK_PREC
-                szFlags[flagofs++] = ch;
+                szFlags[flagofs++] = (char)ch;
                 break;
 
@@ -390,5 +397,5 @@
                 ilen = 3;
                 CHECK_PREC
-                szFlags[flagofs++] = ch;
+                szFlags[flagofs++] = (char)ch;
                 break;
 
@@ -411,5 +418,5 @@
                 // save the * in our formatting buffer...
                 // will be replaced later by Process()
-                szFlags[flagofs++] = ch;
+                szFlags[flagofs++] = (char)ch;
                 break;
 
@@ -423,5 +430,5 @@
                             (*argend <= wxT('9')) )
                     {
-                        szFlags[flagofs++] = *argend;
+                        szFlags[flagofs++] = (char)(*argend);
                         len = len*10 + (*argend - wxT('0'));
                         argend++;
@@ -465,6 +472,6 @@
             case wxT('X'):
                 CHECK_PREC
-                szFlags[flagofs++] = ch;
-                szFlags[flagofs] = '\0';
+                szFlags[flagofs++] = (char)ch;
+                szFlags[flagofs] = (char)'\0';
                 if (ilen == 0)
                     type = wxPAT_INT;
@@ -493,6 +500,6 @@
             case wxT('G'):
                 CHECK_PREC
-                szFlags[flagofs++] = ch;
-                szFlags[flagofs] = '\0';
+                szFlags[flagofs++] = (char)ch;
+                szFlags[flagofs] = (char)'\0';
                 if (ilen == 2)
                     type = wxPAT_LONGDOUBLE;
@@ -695,5 +702,5 @@
                         return -1; \
                     \
-                    buf[lenCur++] = ch; \
+                    buf[lenCur++] = (char)ch; \
                 }
 

 	  	 
