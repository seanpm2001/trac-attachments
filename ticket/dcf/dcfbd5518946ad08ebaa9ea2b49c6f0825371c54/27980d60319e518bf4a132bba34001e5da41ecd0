diff -rb new/include/wx/gtk/region.h patch/include/wx/gtk/region.h
57a58
>     wxRegion( int n, const wxPoint points[], int fillStyle );
diff -rb new/include/wx/msw/region.h patch/include/wx/msw/region.h
45a46
>     wxRegion( int n, const wxPoint points[], int fillStyle = wxODDEVEN_RULE );
diff -rb new/src/gtk/region.cpp patch/src/gtk/region.cpp
188a189,218
> wxRegion::wxRegion( int n, const wxPoint points[], int fillStyle )
> { 
>     if (n <= 0) return;
> 
>     GdkFillRule fill_rule = GDK_EVEN_ODD_RULE;
> 
>     if ( fillStyle == wxWINDING_RULE )
>         fill_rule = GDK_WINDING_RULE;
>     
>     GdkPoint *gdkpoints = new GdkPoint[n+1];
>     int i;
>     for (i = 0 ; i < n ; i++)
>     {
>         gdkpoints[i].x = points[i].x;
>         gdkpoints[i].y = points[i].y;
>     }
> 
>     m_refData = new wxRegionRefData();
>     
> #ifdef __WXGTK20__
>     GdkRegion* reg = gdk_region_polygon( gdkpoints, n, fill_rule );
>     M_REGIONDATA->m_region = reg;
> #else
>     GdkRegion* reg = gdk_region_polygon( gdkpoints, n, fill_rule );
>     M_REGIONDATA->m_region = reg;
> #endif      
> 
>     delete[] gdkpoints;
> }
> 
diff -rb new/src/msw/region.cpp patch/src/msw/region.cpp
105a106,111
> wxRegion::wxRegion( int n, const wxPoint points[], int fillStyle )
> {
>     m_refData = new wxRegionRefData;
>     M_REGION = ::CreatePolygonRgn( (POINT*) points, n, fillStyle==wxODDEVEN_RULE?ALTERNATE:WINDING);
> }
> 

 	  	 
