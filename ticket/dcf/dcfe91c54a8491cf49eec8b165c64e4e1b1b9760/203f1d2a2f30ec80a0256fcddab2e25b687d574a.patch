Index: src/univ/checkbox.cpp
===================================================================
--- src/univ/checkbox.cpp	(revision 65787)
+++ src/univ/checkbox.cpp	(working copy)
@@ -80,6 +80,7 @@
                         const wxValidator& validator,
                         const wxString &name)
 {
+    style = ValidateStyle( style );
     if ( !wxControl::Create(parent, id, pos, size, style, validator, name) )
         return false;
 
Index: src/gtk/checkbox.cpp
===================================================================
--- src/gtk/checkbox.cpp	(revision 65787)
+++ src/gtk/checkbox.cpp	(working copy)
@@ -105,6 +105,7 @@
                         const wxValidator& validator,
                         const wxString &name )
 {
+    style = ValidateStyle( style );
     if (!PreCreation( parent, pos, size ) ||
         !CreateBase( parent, id, pos, size, style, validator, name ))
     {
@@ -112,11 +113,6 @@
         return false;
     }
 
-    wxASSERT_MSG( (style & wxCHK_ALLOW_3RD_STATE_FOR_USER) == 0 ||
-                  (style & wxCHK_3STATE) != 0,
-                  wxT("Using wxCHK_ALLOW_3RD_STATE_FOR_USER")
-                  wxT(" style flag for a 2-state checkbox is useless") );
-
     if ( style & wxALIGN_RIGHT )
     {
         // VZ: as I don't know a way to create a right aligned checkbox with
Index: src/msw/checkbox.cpp
===================================================================
--- src/msw/checkbox.cpp	(revision 65787)
+++ src/msw/checkbox.cpp	(working copy)
@@ -153,27 +153,19 @@
 {
     Init();
 
+    style = ValidateStyle( style );
     if ( !CreateControl(parent, id, pos, size, style, validator, name) )
         return false;
 
     long msStyle = WS_TABSTOP;
 
     if ( style & wxCHK_3STATE )
-    {
         msStyle |= BS_3STATE;
-    }
     else
-    {
-        wxASSERT_MSG( !Is3rdStateAllowedForUser(),
-            wxT("Using wxCH_ALLOW_3RD_STATE_FOR_USER")
-            wxT(" style flag for a 2-state checkbox is useless") );
         msStyle |= BS_CHECKBOX;
-    }
 
     if ( style & wxALIGN_RIGHT )
-    {
         msStyle |= BS_LEFTTEXT | BS_RIGHT;
-    }
 
     msStyle |= wxMSWButton::GetMultilineStyle(label);
 
Index: src/osx/checkbox_osx.cpp
===================================================================
--- src/osx/checkbox_osx.cpp	(revision 65787)
+++ src/osx/checkbox_osx.cpp	(working copy)
@@ -36,6 +36,7 @@
 
     m_labelOrig = m_label = label ;
 
+    style = ValidateStyle( style );
     m_peer = wxWidgetImpl::CreateCheckBox( this, parent, id, label, pos, size, style, GetExtraStyle() ) ;
 
     MacPostControlCreate(pos, size) ;
Index: tests/controls/checkboxtest.cpp
===================================================================
--- tests/controls/checkboxtest.cpp	(revision 65787)
+++ tests/controls/checkboxtest.cpp	(working copy)
@@ -22,6 +22,16 @@
 
 #include "testableframe.h"
 
+// Except for the style the check box is always created with the same parameters,
+// so use a factory function:
+
+static wxCheckBox *CreateCheckBox( long style )
+{
+    return new wxCheckBox(wxTheApp->GetTopWindow(), wxID_ANY, "Check box",
+            wxDefaultPosition, wxDefaultSize, style );
+}
+
+
 class CheckBoxTestCase : public CppUnit::TestCase
 {
 public:
@@ -35,11 +45,13 @@
         CPPUNIT_TEST( Check );
         CPPUNIT_TEST( ThirdState );
         CPPUNIT_TEST( ThirdStateUser );
+        CPPUNIT_TEST( InvalidStyles );
     CPPUNIT_TEST_SUITE_END();
 
     void Check();
     void ThirdState();
     void ThirdStateUser();
+    void InvalidStyles();
 
     wxCheckBox* m_check;
 
@@ -96,8 +108,7 @@
 {
 #if !defined(__WXMGL__) && !defined(__WXPM__) && !defined(__WXGTK12__)
     wxDELETE(m_check);
-    m_check = new wxCheckBox(wxTheApp->GetTopWindow(), wxID_ANY, "Check box",
-                             wxDefaultPosition, wxDefaultSize, wxCHK_3STATE);
+    m_check = CreateCheckBox(wxCHK_3STATE);
 
     CPPUNIT_ASSERT_EQUAL(wxCHK_UNCHECKED, m_check->Get3StateValue());
     CPPUNIT_ASSERT(m_check->Is3State());
@@ -117,9 +128,7 @@
 {
 #if !defined(__WXMGL__) && !defined(__WXPM__) && !defined(__WXGTK12__)
     wxDELETE(m_check);
-    m_check = new wxCheckBox(wxTheApp->GetTopWindow(), wxID_ANY, "Check box",
-                             wxDefaultPosition, wxDefaultSize,
-                             wxCHK_3STATE | wxCHK_ALLOW_3RD_STATE_FOR_USER);
+    m_check = CreateCheckBox(wxCHK_3STATE | wxCHK_ALLOW_3RD_STATE_FOR_USER);
 
     CPPUNIT_ASSERT_EQUAL(wxCHK_UNCHECKED, m_check->Get3StateValue());
     CPPUNIT_ASSERT(m_check->Is3State());
@@ -135,4 +144,23 @@
 #endif
 }
 
+void CheckBoxTestCase::InvalidStyles()
+{
+    // We only need to test the invalid styles, because the valid styles are being
+    // tested with the other tests:
+
+    wxDELETE( m_check );
+
+    // Take into account the different behaviour for debug/release build:
+
+#if wxDEBUG_LEVEL
+    CPPUNIT_ASSERT_THROW( m_check = CreateCheckBox( wxCHK_2STATE | wxCHK_ALLOW_3RD_STATE_FOR_USER ),
+            TestAssertFailure );
+#else
+    m_check = CreateCheckBox( wxCHK_2STATE | wxCHK_ALLOW_3RD_STATE_FOR_USER );
+    CPPUNIT_ASSERT( !m_check->Is3State() );
+    CPPUNIT_ASSERT( !m_check->Is3rdStateAllowedForUser() );
+#endif
+}
+
 #endif //wxUSE_CHECKBOX
Index: include/wx/checkbox.h
===================================================================
--- include/wx/checkbox.h	(revision 65787)
+++ include/wx/checkbox.h	(working copy)
@@ -129,6 +129,20 @@
         return wxCHK_UNCHECKED;
     }
 
+    static long ValidateStyle( long style )
+    {
+        // Unfortunately because of the way wxCHK_2STATE is defined, it's not possible
+        // to check for the invalid wxCHK_2STATE | wxCHK_3STATE combination.
+
+        if (( style & wxCHK_3STATE ) == 0 && ( style & wxCHK_ALLOW_3RD_STATE_FOR_USER ) != 0 )
+        {
+            wxFAIL_MSG( wxT( "Using wxCHK_ALLOW_3RD_STATE_FOR_USER style flag for a 2-state checkbox is useless" ));
+            // Reset the erroneous flag:
+            style ^= wxCHK_ALLOW_3RD_STATE_FOR_USER;
+        }
+        return style;
+    }
+
 private:
     wxDECLARE_NO_COPY_CLASS(wxCheckBoxBase);
 };
