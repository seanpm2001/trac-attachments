diff -bu1 -r wxWindows/demos/poem/wxpoem.cpp wxWin/demos/poem/wxpoem.cpp
--- wxWindows/demos/poem/wxpoem.cpp	2002-12-22 19:57:17.000000000 +0100
+++ wxWin/demos/poem/wxpoem.cpp	2003-08-27 19:41:29.000000000 +0200
@@ -69,6 +69,6 @@
 
-static char     *poem_buffer;          // Storage for each poem
-static char     line[150];                      // Storage for a line
-static char     title[150];                     // Remember the title
-static char     *search_string = NULL;          // The search string
+static wxChar   *poem_buffer;          // Storage for each poem
+static wxChar   line[150];                      // Storage for a line
+static wxChar   title[150];                     // Remember the title
+static wxChar   *search_string = NULL;          // The search string
 static int      pages[30];                      // For multipage poems -
@@ -90,5 +90,5 @@
 
-static char     *index_filename = NULL;            // Index filename
-static char     *data_filename = NULL;             // Data filename
-static char     error_buf[300];                 // Error message buffer
+static wxChar   *index_filename = NULL;            // Index filename
+static wxChar   *data_filename = NULL;             // Data filename
+static wxChar   error_buf[300];                 // Error message buffer
 static bool     loaded_ok = FALSE;              // Poem loaded ok
@@ -117,8 +117,8 @@
 
-void            PoetryError(char *, char *caption="wxPoem Error");
-void            PoetryNotify(char *Msg, char *caption="wxPoem");
+void            PoetryError(wxChar *, wxChar *caption=_T("wxPoem Error"));
+void            PoetryNotify(wxChar *Msg, wxChar *caption=_T("wxPoem"));
 void            TryLoadIndex();
-bool            LoadPoem(char *, long);
+bool            LoadPoem(wxChar *, long);
 int             GetIndex();
-int             LoadIndex(char *);
+int             LoadIndex(wxChar *);
 bool            Compile(void);
@@ -129,3 +129,3 @@
 #ifdef __WXMSW__
-void            CopyToClipboard(HWND, char *);
+void            CopyToClipboard(HWND, wxChar *);
 #endif
@@ -182,3 +182,3 @@
     int j;
-    char *line_ptr;
+    wxChar *line_ptr;
     int curr_width = 0;
@@ -286,4 +286,4 @@
 
-                strcpy(title, line_ptr);
-                strcat(title, " (cont'd)");
+                wxStrcpy(title, line_ptr);
+                wxStrcat(title, _T(" (cont'd)"));
 
@@ -350,3 +350,3 @@
     {
-       char *cont = "(cont'd)";
+       wxChar *cont = _T("(cont'd)");
 
@@ -508,4 +508,4 @@
   {
-    wxString s = wxGetTextFromUser("Enter search string", "Search", (const char*) search_string);
-    if (s != "")
+    wxString s = wxGetTextFromUser( _T("Enter search string"), _T("Search"), (const wxChar*) search_string);
+    if (s != wxEmptyString)
     {
@@ -533,3 +533,3 @@
       last_poem_start = 0;
-      PoetryNotify("Search string not found.");
+      PoetryNotify(_T("Search string not found."));
     }
@@ -540,5 +540,5 @@
 #ifdef __WXMSW__
-void CopyToClipboard(HWND handle, char *s)
+void CopyToClipboard(HWND handle, wxChar *s)
 {
-  int length = strlen(s);
+  int length = wxStrlen(s);
   HANDLE hGlobalMemory = GlobalAlloc(GHND, (DWORD) length + 1);
@@ -586,7 +586,7 @@
 {
-  poem_buffer = new char[buf_size];
+  poem_buffer = new wxChar[buf_size];
 
-  GreyPen = new wxPen("LIGHT GREY", THICK_LINE_WIDTH, wxSOLID);
-  DarkGreyPen = new wxPen("GREY", THICK_LINE_WIDTH, wxSOLID);
-  WhitePen = new wxPen("WHITE", THICK_LINE_WIDTH, wxSOLID);
+  GreyPen = new wxPen(_T("LIGHT GREY"), THICK_LINE_WIDTH, wxSOLID);
+  DarkGreyPen = new wxPen(_T("GREY"), THICK_LINE_WIDTH, wxSOLID);
+  WhitePen = new wxPen(_T("WHITE"), THICK_LINE_WIDTH, wxSOLID);
 
@@ -594,3 +594,3 @@
   HelpController = new wxHelpController();
-  HelpController->Initialize("wxpoem");
+  HelpController->Initialize(_T("wxpoem"));
 #endif // wxUSE_HELP
@@ -610,6 +610,6 @@
 
-  TheMainWindow = new MainWindow(NULL, 500, "wxPoem", wxPoint(XPos, YPos), wxSize(100, 100), wxCAPTION|wxMINIMIZE_BOX|wxSYSTEM_MENU);
+  TheMainWindow = new MainWindow(NULL, 500, _T("wxPoem"), wxPoint(XPos, YPos), wxSize(100, 100), wxCAPTION|wxMINIMIZE_BOX|wxSYSTEM_MENU);
 
 #ifdef wx_x
-  TheMainWindow->SetIcon(Icon("wxpoem"));
+  TheMainWindow->SetIcon(Icon(_T("wxpoem")));
 #endif
@@ -619,16 +619,16 @@
   popupMenu = new wxMenu;
-  popupMenu->Append(POEM_NEXT, "Next poem/page");
-  popupMenu->Append(POEM_PREVIOUS, "Previous page");
+  popupMenu->Append(POEM_NEXT, _T("Next poem/page"));
+  popupMenu->Append(POEM_PREVIOUS, _T("Previous page"));
   popupMenu->AppendSeparator();
-  popupMenu->Append(POEM_SEARCH, "Search");
-  popupMenu->Append(POEM_NEXT_MATCH, "Next match");
-  popupMenu->Append(POEM_COPY, "Copy to clipboard");
-  popupMenu->Append(POEM_MINIMIZE, "Minimize");
+  popupMenu->Append(POEM_SEARCH, _T("Search"));
+  popupMenu->Append(POEM_NEXT_MATCH, _T("Next match"));
+  popupMenu->Append(POEM_COPY, _T("Copy to clipboard"));
+  popupMenu->Append(POEM_MINIMIZE, _T("Minimize"));
   popupMenu->AppendSeparator();
-  popupMenu->Append(POEM_BIGGER_TEXT, "Bigger text");
-  popupMenu->Append(POEM_SMALLER_TEXT, "Smaller text");
+  popupMenu->Append(POEM_BIGGER_TEXT, _T("Bigger text"));
+  popupMenu->Append(POEM_SMALLER_TEXT, _T("Smaller text"));
   popupMenu->AppendSeparator();
-  popupMenu->Append(POEM_ABOUT, "About wxPoem");
+  popupMenu->Append(POEM_ABOUT, _T("About wxPoem"));
   popupMenu->AppendSeparator();
-  popupMenu->Append(POEM_EXIT, "Exit");
+  popupMenu->Append(POEM_EXIT, _T("Exit"));
 
@@ -641,4 +641,4 @@
   {
-    index_filename = DEFAULT_POETRY_IND;
-    data_filename = DEFAULT_POETRY_DAT;
+    index_filename = _T(DEFAULT_POETRY_IND);
+    data_filename = _T(DEFAULT_POETRY_DAT);
   }
@@ -647,6 +647,6 @@
 #ifdef __WXMSW__
-  Corner1 = new wxIcon("icon_1");
-  Corner2 = new wxIcon("icon_2");
-  Corner3 = new wxIcon("icon_3");
-  Corner4 = new wxIcon("icon_4");
+  Corner1 = new wxIcon(_T("icon_1"));
+  Corner2 = new wxIcon(_T("icon_2"));
+  Corner3 = new wxIcon(_T("icon_3"));
+  Corner4 = new wxIcon(_T("icon_4"));
 #endif
@@ -801,3 +801,3 @@
 // Load index file
-int LoadIndex(char *file_name)
+int LoadIndex(wxChar *file_name)
 {
@@ -807,11 +807,14 @@
     int i = 0;
-    char buf[100];
+    wxChar buf[100];
 
-    if (file_name)
-      sprintf(buf, "%s.idx", file_name);
-    if (! (file_name && (index_file = fopen(buf, "r"))))
+    if (file_name == NULL)
       return 0;
-    else
-    {
-      fscanf(index_file, "%ld", &nitems);
+
+    wxSprintf(buf, _T("%s.idx"), file_name);
+
+    index_file = wxFopen(buf, _T("r"));
+    if (index_file == NULL)
+      return 0;
+
+    wxFscanf(index_file, _T("%ld"), &nitems);
 
@@ -819,5 +822,6 @@
       {
-        fscanf(index_file, "%ld", &data);
+      wxFscanf(index_file, _T("%ld"), &data);
         poem_index[i] = data;
       }
+
       fclose(index_file);
@@ -825,3 +829,2 @@
       return 1;
-    }
 }
@@ -836,3 +839,3 @@
     if ((indexn < 0) || (indexn > nitems))
-    { PoetryError("No such poem!");
+    { PoetryError(_T("No such poem!"));
       return -1;
@@ -847,7 +850,5 @@
 #if wxUSE_RESOURCES
-#if wxUSE_RESOURCES
-  wxGetResource("wxPoem", "FontSize", &pointSize);
-  wxGetResource("wxPoem", "X", &XPos);
-  wxGetResource("wxPoem", "Y", &YPos);
-#endif
+  wxGetResource(_T("wxPoem"), _T("FontSize"), &pointSize);
+  wxGetResource(_T("wxPoem"), _T("X"), &XPos);
+  wxGetResource(_T("wxPoem"), _T("Y"), &YPos);
 #endif
@@ -861,7 +862,5 @@
 #if wxUSE_RESOURCES
-#if wxUSE_RESOURCES
-  wxWriteResource("wxPoem", "FontSize", pointSize);
-  wxWriteResource("wxPoem", "X", XPos);
-  wxWriteResource("wxPoem", "Y", YPos);
-#endif
+  wxWriteResource(_T("wxPoem"), _T("FontSize"), pointSize);
+  wxWriteResource(_T("wxPoem"), _T("X"), XPos);
+  wxWriteResource(_T("wxPoem"), _T("Y"), YPos);
 #endif
@@ -873,3 +872,3 @@
 // file, otherwise use index[index_ptr] to find the correct position.
-bool LoadPoem(char *file_name, long position)
+bool LoadPoem(wxChar *file_name, long position)
 {
@@ -879,3 +878,3 @@
 //    int indexn = 0;
-    char buf[100];
+    wxChar buf[100];
     long data;
@@ -886,8 +885,5 @@
 
-    if (file_name)
-      sprintf(buf, "%s.dat", file_name);
-
-    if (! (file_name && (data_file = fopen(buf, "r"))))
+    if (file_name == NULL)
     {
-      sprintf(error_buf, "Data file %s not found.", buf);
+      wxSprintf(error_buf, _T("Error in Poem loading."));
       PoetryError(error_buf);
@@ -895,4 +891,13 @@
     }
-    else
+
+    wxSprintf(buf, _T("%s.dat"), file_name);
+    data_file = wxFopen(buf, _T("r"));
+
+    if (data_file == NULL)
     {
+      wxSprintf(error_buf, _T("Data file %s not found."), buf);
+      PoetryError(error_buf);
+      return FALSE;
+    }
+
       if (position > -1)
@@ -921,3 +926,3 @@
         {
-           sprintf(error_buf, "%s", "Poetry buffer exceeded.");
+        wxSprintf(error_buf, _T("%s"), _T("Poetry buffer exceeded."));
            PoetryError(error_buf);
@@ -929,3 +934,2 @@
       return TRUE;
-  }
 }
@@ -941,3 +945,3 @@
     int ch = 0;
-    char buf[100];
+    wxChar buf[100];
     long find_start;
@@ -946,3 +950,3 @@
     bool found = FALSE;
-    int search_length = strlen(search_string);
+    int search_length = wxStrlen(search_string);
 
@@ -961,7 +965,8 @@
     if (data_filename)
-      sprintf(buf, "%s.dat", data_filename);
+      wxSprintf(buf, _T("%s.dat"), data_filename);
 
-    if (! (data_filename && (file = fopen(buf, "r"))))
+    file = wxFopen(buf, _T("r"));
+    if (! (data_filename && file))
     {
-      sprintf(error_buf, "Poetry data file %s not found\n", buf);
+      wxSprintf(error_buf, _T("Poetry data file %s not found\n"), buf);
       PoetryError(error_buf);
@@ -1015,3 +1020,3 @@
   {
-      PoetryError("Index file not found; will compile new one", "wxPoem");
+      PoetryError(_T("Index file not found; will compile new one"), _T("wxPoem"));
       index_ok = Compile();
@@ -1021,3 +1026,3 @@
 // Error message
-void PoetryError(char *msg, char *caption)
+void PoetryError(wxChar *msg, wxChar *caption)
 {
@@ -1027,3 +1032,3 @@
 // Notification (change icon to something appropriate!)
-void PoetryNotify(char *Msg, char *caption)
+void PoetryNotify(wxChar *Msg, wxChar *caption)
 {
@@ -1040,10 +1045,11 @@
     int ch = 0;
-    char buf[100];
+    wxChar buf[100];
 
     if (data_filename)
-      sprintf(buf, "%s.dat", data_filename);
+      wxSprintf(buf, _T("%s.dat"), data_filename);
 
-    if (! (data_filename && (file = fopen(buf, "r"))))
+    file = wxFopen(buf, _T("r"));
+    if (! (data_filename && file))
     {
-      sprintf(error_buf, "Poetry data file %s not found\n", buf);
+      wxSprintf(error_buf, _T("Poetry data file %s not found\n"), buf);
       PoetryError(error_buf);
@@ -1075,6 +1081,8 @@
     if (index_filename)
-      sprintf(buf, "%s.idx", index_filename);
-    if (! (data_filename && (file = fopen(buf, "w"))))
+      wxSprintf(buf, _T("%s.idx"), index_filename);
+
+    file = wxFopen(buf, _T("w"));
+    if (! (data_filename && file))
     {
-      sprintf(error_buf, "Poetry index file %s cannot be created\n", buf);
+      wxSprintf(error_buf, _T("Poetry index file %s cannot be created\n"), buf);
       PoetryError(error_buf);
@@ -1083,8 +1091,8 @@
 
-    fprintf(file, "%ld\n\n", nitems);
+    wxFprintf(file, _T("%ld\n\n"), nitems);
     for (j = 0; j < nitems; j++)
-      fprintf(file, "%ld\n", poem_index[j]);
+      wxFprintf(file, _T("%ld\n"), poem_index[j]);
 
     fclose(file);
-    PoetryNotify("Poetry index compiled.");
+    PoetryNotify(_T("Poetry index compiled."));
     return TRUE;
@@ -1145,3 +1153,3 @@
 #if wxUSE_HELP
-       HelpController->LoadFile("wxpoem");
+       HelpController->LoadFile(_T("wxpoem"));
        HelpController->DisplayContents();
@@ -1152,4 +1160,4 @@
      {
-       (void)wxMessageBox("wxPoem Version 1.1\nJulian Smart (c) 1995",
-                          "About wxPoem", wxOK, TheMainWindow);
+       (void)wxMessageBox(_T("wxPoem Version 1.1\nJulian Smart (c) 1995"),
+                          _T("About wxPoem"), wxOK, TheMainWindow);
        break;

 	  	 
