diff -ru wx.org/include/wx/msw/bmpbuttn.h wx.mod/include/wx/msw/bmpbuttn.h
--- wx.org/include/wx/msw/bmpbuttn.h	2004-08-20 05:02:17.000000000 +0200
+++ wx.mod/include/wx/msw/bmpbuttn.h	2004-09-13 00:11:18.000000000 +0200
@@ -47,6 +47,8 @@
                 const wxValidator& validator = wxDefaultValidator,
                 const wxString& name = wxButtonNameStr);
 
+    virtual ~wxBitmapButton();
+
     // Implementation
     virtual void SetDefault();
     virtual bool MSWOnDraw(WXDRAWITEMSTRUCT *item);
@@ -58,6 +60,8 @@
     virtual wxSize DoGetBestSize() const;
 
 private:
+    HBRUSH   m_disabledbrush;
+    wxColour m_bgcol;
+
     DECLARE_DYNAMIC_CLASS_NO_COPY(wxBitmapButton)
 };
 
diff -ru wx.org/include/wx/msw/wx.rc wx.mod/include/wx/msw/wx.rc
--- wx.org/include/wx/msw/wx.rc	2004-07-05 15:53:48.000000000 +0200
+++ wx.mod/include/wx/msw/wx.rc	2004-09-12 23:17:59.000000000 +0200
@@ -101,8 +101,6 @@
 // Bitmaps
 //
 
-wxDISABLE_BUTTON_BITMAP         BITMAP  "wx/msw/disable.bmp"
-
 // For wxContextHelpButton
 csquery                 BITMAP "wx/msw/csquery.bmp"
 
diff -ru wx.org/src/msw/app.cpp wx.mod/src/msw/app.cpp
--- wx.org/src/msw/app.cpp	2004-09-12 05:02:52.000000000 +0200
+++ wx.mod/src/msw/app.cpp	2004-09-13 00:03:14.000000000 +0200
@@ -111,8 +111,6 @@
 const wxChar *wxMDIChildFrameClassName = wxT("wxMDIChildFrameClass");
 const wxChar *wxMDIChildFrameClassNameNoRedraw = wxT("wxMDIChildFrameClassNR");
 
-HBRUSH wxDisableButtonBrush = (HBRUSH) 0;
-
 // ----------------------------------------------------------------------------
 // private functions
 // ----------------------------------------------------------------------------
@@ -325,20 +323,6 @@
 
     RegisterWindowClasses();
 
-#if !defined(__WXMICROWIN__) && !defined(__WXWINCE__)
-    // Create the brush for disabling bitmap buttons
-    LOGBRUSH lb;
-    lb.lbStyle = BS_PATTERN;
-    lb.lbColor = 0;
-    lb.lbHatch = (int)LoadBitmap( wxhInstance, wxT("wxDISABLE_BUTTON_BITMAP") );
-    if ( lb.lbHatch )
-    {
-        wxDisableButtonBrush = ::CreateBrushIndirect( &lb );
-        ::DeleteObject( (HGDIOBJ)lb.lbHatch );
-    }
-    //else: wxWidgets resources are probably not linked in
-#endif // !__WXMICROWIN__ && !__WXWINCE__
-
 #if wxUSE_PENWINDOWS
     wxRegisterPenWin();
 #endif
@@ -512,9 +496,6 @@
     wxCleanUpPenWin();
 #endif
 
-    if ( wxDisableButtonBrush )
-        ::DeleteObject( wxDisableButtonBrush );
-
 #if wxUSE_OLE
 #ifdef __WXWINCE__
     ::CoUninitialize();
diff -ru wx.org/src/msw/bmpbuttn.cpp wx.mod/src/msw/bmpbuttn.cpp
--- wx.org/src/msw/bmpbuttn.cpp	2004-08-20 05:03:00.000000000 +0200
+++ wx.mod/src/msw/bmpbuttn.cpp	2004-09-13 00:52:09.000000000 +0200
@@ -29,6 +29,7 @@
 #endif
 
 #include "wx/msw/private.h"
+#include "wx/image.h"
 
 // ----------------------------------------------------------------------------
 // macros
@@ -118,6 +119,7 @@
 
     m_backgroundColour = parent->GetBackgroundColour();
     m_foregroundColour = parent->GetForegroundColour();
+    m_disabledbrush = (HBRUSH)0; 
     m_windowStyle = style;
 
     if ( style & wxBU_AUTODRAW )
@@ -168,6 +170,11 @@
     return true;
 }
 
+wxBitmapButton::~wxBitmapButton()
+{ 
+    if (m_disabledbrush) ::DeleteObject(m_disabledbrush);
+}
+
 // VZ: should be at the very least less than wxDEFAULT_BUTTON_MARGIN
 #define FOCUS_MARGIN 3
 
@@ -415,11 +422,38 @@
     DrawFocusRect( (HDC) dc, &rect );
 }
 
-extern HBRUSH wxDisableButtonBrush;
 void wxBitmapButton::DrawButtonDisable( WXHDC dc, int left, int top, int right,
     int bottom, bool with_marg )
 {
-    HBRUSH  old = (HBRUSH) SelectObject( (HDC) dc, wxDisableButtonBrush );
+    if (!m_disabledbrush || (m_bgcol != GetBackgroundColour())) {
+        m_bgcol = GetBackgroundColour();
+#if !defined(__WXMICROWIN__) && !defined(__WXWINCE__)
+        wxImage image(2, 2);
+        image.SetRGB(0, 0, 0, 0, 0);
+        image.SetRGB(0, 1, m_bgcol.Red(), m_bgcol.Green(), m_bgcol.Blue());
+        image.SetRGB(1, 0, m_bgcol.Red(), m_bgcol.Green(), m_bgcol.Blue());
+        image.SetRGB(1, 1, 0, 0, 0);
+        wxBitmap bitmap(image);
+        if (bitmap.Ok()) {
+            LOGBRUSH lb;
+            lb.lbStyle = BS_PATTERN;
+            lb.lbColor = 0;
+            lb.lbHatch = (int)bitmap.GetHBITMAP();
+            m_disabledbrush = ::CreateBrushIndirect( & lb );
+        }
+#endif // !__WXMICROWIN__ && !__WXWINCE__
+    }
+
+    HBRUSH  old = (HBRUSH) SelectObject( (HDC) dc, m_disabledbrush );
 
     // ROP for "dest |= pattern" operation -- as it doesn't have a standard
     // name, give it our own

 	  	 
