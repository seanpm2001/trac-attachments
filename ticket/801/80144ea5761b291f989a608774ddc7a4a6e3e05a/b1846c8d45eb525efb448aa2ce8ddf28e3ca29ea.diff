diff --git a/include/wx/msw/button.h b/include/wx/msw/button.h
index 1f5ad27..ee1d197 100644
--- a/include/wx/msw/button.h
+++ b/include/wx/msw/button.h
@@ -88,8 +88,10 @@ protected:
     virtual void DoSetBitmapMargins(wxCoord x, wxCoord y);
     virtual void DoSetBitmapPosition(wxDirection dir);
 
-    // Increases the passed in size if necessary to account for the
-    // button image, if any
+    // Increases the passed in size to account for the button image.
+    //
+    // Should only be called if we do have a button, i.e. if m_imageData is
+    // non-NULL.
     void AdjustForBitmapSize(wxSize& size) const;
 
     class wxButtonImageData *m_imageData;
diff --git a/include/wx/msw/private/button.h b/include/wx/msw/private/button.h
index a6f2e68..a6c9b64 100644
--- a/include/wx/msw/private/button.h
+++ b/include/wx/msw/private/button.h
@@ -47,15 +47,29 @@ enum
     Size_AuthNeeded = 1
 };
 
-// common implementation of wxButton and wxToggleButton::DoGetBestSize()
-// (implemented in src/msw/button.cpp)
-wxSize ComputeBestSize(wxControl *btn, int flags = 0);
+// NB: All the functions below are implemented in src/msw/button.cpp
 
-// compute the button size (as if wxBU_EXACTFIT were specified, i.e. without
+// Compute the button size (as if wxBU_EXACTFIT were specified, i.e. without
 // adjusting it to be of default size if it's smaller) for the given label size
 WXDLLIMPEXP_CORE wxSize
 GetFittingSize(wxWindow *win, const wxSize& sizeLabel, int flags = 0);
 
+// Compute the button size (as if wxBU_EXACTFIT were specified) by computing
+// its label size and then calling GetFittingSize().
+wxSize ComputeBestFittingSize(wxControl *btn, int flags = 0);
+
+// Increase the size passed as parameter to be at least the standard button
+// size if the control doesn't have wxBU_EXACTFIT style and also cache it as
+// the best size and return its value -- this is used in DoGetBestSize()
+// implementation.
+wxSize IncreaseToStdSizeAndCache(wxControl *btn, const wxSize& size);
+
+// helper of wxToggleButton::DoGetBestSize()
+inline wxSize ComputeBestSize(wxControl *btn, int flags = 0)
+{
+    return IncreaseToStdSizeAndCache(btn, ComputeBestFittingSize(btn, flags));
+}
+
 } // namespace wxMSWButton
 
 #endif // _WX_MSW_PRIVATE_BUTTON_H_
diff --git a/src/msw/button.cpp b/src/msw/button.cpp
index 240e2e9..55e6681 100644
--- a/src/msw/button.cpp
+++ b/src/msw/button.cpp
@@ -225,13 +225,13 @@ public:
 
         m_data.himl = GetHimagelistOf(&m_iml);
 
-        // use default margins
+        // no margins by default
         m_data.margin.left =
-        m_data.margin.right = btn->GetCharWidth();
+        m_data.margin.right =
         m_data.margin.top =
-        m_data.margin.bottom = btn->GetCharHeight() / 2;
+        m_data.margin.bottom = 0;
 
-        // and default alignment
+        // use default alignment
         m_data.uAlign = BUTTON_IMAGELIST_ALIGN_LEFT;
 
         UpdateImageInfo();
@@ -397,14 +397,19 @@ wxSize wxMSWButton::GetFittingSize(wxWindow *win,
     return sizeBtn;
 }
 
-wxSize wxMSWButton::ComputeBestSize(wxControl *btn, int flags)
+wxSize wxMSWButton::ComputeBestFittingSize(wxControl *btn, int flags)
 {
     wxClientDC dc(btn);
 
     wxSize sizeBtn;
     dc.GetMultiLineTextExtent(btn->GetLabelText(), &sizeBtn.x, &sizeBtn.y);
 
-    sizeBtn = GetFittingSize(btn, sizeBtn, flags);
+    return GetFittingSize(btn, sizeBtn, flags);
+}
+
+wxSize wxMSWButton::IncreaseToStdSizeAndCache(wxControl *btn, const wxSize& size)
+{
+    wxSize sizeBtn(size);
 
     // all buttons have at least the standard size unless the user explicitly
     // wants them to be of smaller size and used wxBU_EXACTFIT style when
@@ -531,8 +536,7 @@ void wxButton::SetLabel(const wxString& label)
 
 void wxButton::AdjustForBitmapSize(wxSize &size) const
 {
-    if ( !m_imageData )
-        return;
+    wxCHECK_RET( m_imageData, wxT("shouldn't be called if no image") );
 
     // account for the bitmap size
     const wxSize sizeBmp = m_imageData->GetBitmap(State_Normal).GetSize();
@@ -596,6 +600,8 @@ void wxButton::AdjustForBitmapSize(wxSize &size) const
 
 wxSize wxButton::DoGetBestSize() const
 {
+    wxButton * const self = const_cast<wxButton *>(this);
+
     wxSize size;
 
     // account for the text part if we have it or if we don't have any image at
@@ -607,17 +613,13 @@ wxSize wxButton::DoGetBestSize() const
         if ( GetAuthNeeded() )
             flags |= wxMSWButton::Size_AuthNeeded;
 
-        size = wxMSWButton::ComputeBestSize(const_cast<wxButton *>(this), flags);
+        size = wxMSWButton::ComputeBestFittingSize(self, flags);
     }
 
     if ( m_imageData )
-    {
         AdjustForBitmapSize(size);
 
-        CacheBestSize(size);
-    }
-
-    return size;
+    return wxMSWButton::IncreaseToStdSizeAndCache(self, size);
 }
 
 /* static */
