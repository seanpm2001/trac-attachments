Index: dialogs.cpp
===================================================================
--- dialogs.cpp	(revision 71577)
+++ dialogs.cpp	(working copy)
@@ -190,6 +190,7 @@
 
 #if USE_MODAL_PRESENTATION
     EVT_MENU(DIALOGS_MODAL,                         MyFrame::ModalDlg)
+    EVT_MENU(DIALOGS_MODAL2,                        MyFrame::ModalDlg2)
 #endif // USE_MODAL_PRESENTATION
     EVT_MENU(DIALOGS_MODELESS,                      MyFrame::ModelessDlg)
     EVT_MENU(DIALOGS_CENTRE_SCREEN,                 MyFrame::DlgCenteredScreen)
@@ -270,6 +271,16 @@
         EVT_BUTTON(wxID_ANY, MyModalDialog::OnButton)
     END_EVENT_TABLE()
 
+    BEGIN_EVENT_TABLE(MyModal1Dialog, wxDialog)
+        EVT_BUTTON(BTN_GOTO2, MyModal1Dialog::Goto2)
+    END_EVENT_TABLE()
+    BEGIN_EVENT_TABLE(MyModal2Dialog, wxDialog)
+        EVT_BUTTON(BTN_GOTO3, MyModal2Dialog::Goto3)
+    END_EVENT_TABLE()
+	BEGIN_EVENT_TABLE(MyModal3Dialog, wxDialog)
+	END_EVENT_TABLE()
+
+
     BEGIN_EVENT_TABLE(MyModelessDialog, wxDialog)
         EVT_BUTTON(DIALOGS_MODELESS_BTN, MyModelessDialog::OnButton)
         EVT_CLOSE(MyModelessDialog::OnClose)
@@ -497,6 +508,7 @@
     wxMenu *dialogs_menu = new wxMenu;
 #if USE_MODAL_PRESENTATION
     dialogs_menu->Append(DIALOGS_MODAL, wxT("&Modal dialog\tShift-Ctrl-W"));
+    dialogs_menu->Append(DIALOGS_MODAL2, wxT("&Modal dialog 2"));
 #endif // USE_MODAL_PRESENTATION
     dialogs_menu->AppendCheckItem(DIALOGS_MODELESS, wxT("Mode&less dialog\tShift-Ctrl-Z"));
     dialogs_menu->Append(DIALOGS_CENTRE_SCREEN, wxT("Centered on &screen\tShift-Ctrl-1"));
@@ -1622,6 +1634,11 @@
     MyModalDialog dlg(this);
     dlg.ShowModal();
 }
+
+void MyFrame::ModalDlg2(wxCommandEvent& WXUNUSED(event))
+{
+    MyModal1Dialog dlg(this);
+}
 #endif // USE_MODAL_PRESENTATION
 
 void MyFrame::ModelessDlg(wxCommandEvent& event)
@@ -2550,6 +2567,95 @@
     }
 }
 
+/* Modal 2 */
+
+MyModal1Dialog::MyModal1Dialog(wxWindow *parent)
+             : wxDialog(parent, wxID_ANY, wxString(wxT("Modal dialog 1")))
+{
+	fprintf(stderr, "%s\n", __PRETTY_FUNCTION__);
+    wxBoxSizer *sizerTop = new wxBoxSizer(wxHORIZONTAL);
+
+    m_btnOK = new wxButton(this, wxID_OK, wxT("&OK"));
+    m_btnGoTo2 = new wxButton(this, BTN_GOTO2, wxT("&GoTo to 2nd modal"));
+
+    sizerTop->Add(m_btnOK, 0, wxALIGN_CENTER | wxALL, 5);
+    sizerTop->Add(m_btnGoTo2, 0, wxALIGN_CENTER | wxALL, 5);
+
+    SetSizerAndFit(sizerTop);
+
+    m_btnGoTo2->SetFocus();
+    m_btnGoTo2->SetDefault();
+
+    ShowModal();
+}
+
+MyModal1Dialog::~MyModal1Dialog()
+{
+	fprintf(stderr, "%s\n", __PRETTY_FUNCTION__);
+}
+
+void MyModal1Dialog::Goto2(wxCommandEvent& )
+{
+	fprintf(stderr, "%s\n", __PRETTY_FUNCTION__);
+	MyModal2Dialog dlg(this);
+}
+
+MyModal2Dialog::MyModal2Dialog(wxWindow *parent)
+             : wxDialog(parent, wxID_ANY, wxString(wxT("Modal dialog 2")))
+{
+	fprintf(stderr, "%s\n", __PRETTY_FUNCTION__);
+    wxBoxSizer *sizerTop = new wxBoxSizer(wxHORIZONTAL);
+
+    m_btnOK = new wxButton(this, wxID_OK, wxT("&OK"));
+    m_btnGoTo3 = new wxButton(this, BTN_GOTO3, wxT("&GoTo to 3rd modal"));
+
+    sizerTop->Add(m_btnOK, 0, wxALIGN_CENTER | wxALL, 5);
+    sizerTop->Add(m_btnGoTo3, 0, wxALIGN_CENTER | wxALL, 5);
+
+    SetSizerAndFit(sizerTop);
+
+    m_btnGoTo3->SetFocus();
+    m_btnGoTo3->SetDefault();
+
+    ShowModal();
+}
+
+MyModal2Dialog::~MyModal2Dialog()
+{
+	fprintf(stderr, "%s\n", __PRETTY_FUNCTION__);
+}
+
+void MyModal2Dialog::Goto3(wxCommandEvent& )
+{
+	fprintf(stderr, "%s\n", __PRETTY_FUNCTION__);
+	MyModal3Dialog dlg(this);
+}
+
+MyModal3Dialog::MyModal3Dialog(wxWindow *parent)
+             : wxDialog(parent, wxID_ANY, wxString(wxT("Modal dialog 3")))
+{
+	fprintf(stderr, "%s\n", __PRETTY_FUNCTION__);
+    wxBoxSizer *sizerTop = new wxBoxSizer(wxHORIZONTAL);
+
+    m_btnOK = new wxButton(this, wxID_OK, wxT("&OK"));
+    m_btnNothing = new wxButton(this, wxID_ANY, wxT("&Do nothing"));
+
+    sizerTop->Add(m_btnOK, 0, wxALIGN_CENTER | wxALL, 5);
+    sizerTop->Add(m_btnNothing, 0, wxALIGN_CENTER | wxALL, 5);
+
+    SetSizerAndFit(sizerTop);
+
+    m_btnOK->SetFocus();
+    m_btnOK->SetDefault();
+
+    ShowModal();
+}
+
+MyModal3Dialog::~MyModal3Dialog()
+{
+	fprintf(stderr, "%s\n", __PRETTY_FUNCTION__);
+}
+
 #endif // USE_MODAL_PRESENTATION
 
 // ----------------------------------------------------------------------------
Index: dialogs.h
===================================================================
--- dialogs.h	(revision 71577)
+++ dialogs.h	(working copy)
@@ -168,6 +168,48 @@
     DECLARE_EVENT_TABLE()
 };
 
+class MyModal1Dialog : public wxDialog
+{
+public:
+    MyModal1Dialog(wxWindow *parent);
+    ~MyModal1Dialog();
+
+    void Goto2(wxCommandEvent& event);
+
+private:
+    wxButton *m_btnOK,
+             *m_btnGoTo2;
+
+    DECLARE_EVENT_TABLE()
+};
+
+class MyModal2Dialog : public wxDialog
+{
+public:
+    MyModal2Dialog(wxWindow *parent);
+    ~MyModal2Dialog();
+
+    void Goto3(wxCommandEvent& event);
+
+private:
+    wxButton *m_btnOK,
+             *m_btnGoTo3;
+
+    DECLARE_EVENT_TABLE()
+};
+
+class MyModal3Dialog : public wxDialog
+{
+public:
+    MyModal3Dialog(wxWindow *parent);
+    ~MyModal3Dialog();
+
+private:
+    wxButton *m_btnOK,
+             *m_btnNothing;
+
+	DECLARE_EVENT_TABLE();
+};
 #endif // USE_MODAL_PRESENTATION
 
 // A class demonstrating CreateStdDialogButtonSizer()
@@ -422,6 +464,7 @@
 
 #if USE_MODAL_PRESENTATION
     void ModalDlg(wxCommandEvent& event);
+    void ModalDlg2(wxCommandEvent& event);
 #endif // USE_MODAL_PRESENTATION
     void ModelessDlg(wxCommandEvent& event);
     void DlgCenteredScreen(wxCommandEvent& event);
@@ -564,6 +607,7 @@
     DIALOGS_INFOBAR_SIMPLE,
     DIALOGS_INFOBAR_ADVANCED,
     DIALOGS_MODAL,
+    DIALOGS_MODAL2,
     DIALOGS_MODELESS,
     DIALOGS_CENTRE_SCREEN,
     DIALOGS_CENTRE_PARENT,
@@ -590,5 +634,11 @@
     DIALOGS_TEST_DEFAULT_ACTION
 };
 
+enum
+{
+	BTN_GOTO2,
+	BTN_GOTO3,
+};
+
 #endif
 
