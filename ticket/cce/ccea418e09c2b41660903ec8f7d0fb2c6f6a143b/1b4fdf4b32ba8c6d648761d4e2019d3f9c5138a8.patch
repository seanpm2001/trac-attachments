Index: build/bakefiles/files.bkl
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/bakefiles/files.bkl,v
retrieving revision 1.346
diff -u2 -r1.346 build/bakefiles/files.bkl
--- build/bakefiles/files.bkl
+++ build/bakefiles/files.bkl
@@ -324,4 +324,5 @@
     src/common/mstream.cpp
     src/common/object.cpp
+    src/common/platinfo.cpp
     src/common/powercmn.cpp
     src/common/process.cpp
@@ -422,4 +423,5 @@
     wx/object.h
     wx/platform.h
+    wx/platinfo.h
     wx/power.h
     wx/process.h
Index: include/wx/apptrait.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/apptrait.h,v
retrieving revision 1.36
diff -u2 -r1.36 include/wx/apptrait.h
--- include/wx/apptrait.h
+++ include/wx/apptrait.h
@@ -14,4 +14,5 @@
 
 #include "wx/string.h"
+#include "wx/platinfo.h"
 
 class WXDLLIMPEXP_BASE wxObject;
@@ -27,22 +28,4 @@
 class GSocketGUIFunctionsTable;
 
-// ----------------------------------------------------------------------------
-// toolkit information
-// ----------------------------------------------------------------------------
-
-// Information about the toolkit that the app is running under (e.g. wxMSW):
-struct WXDLLIMPEXP_BASE wxToolkitInfo
-{
-    // Short name of the toolkit (e.g. "msw" or "mswuniv"); empty for console:
-    wxString shortName;
-    // Descriptive name of the toolkit, human readable (e.g. "wxMSW" or
-    // "wxMSW/Universal"); "wxBase" for console apps:
-    wxString name;
-    // Version of the underlying toolkit or of the OS for console apps:
-    int versionMajor, versionMinor;
-    // OS mnenomics, e.g. wxGTK or wxMSW:
-    int os;
-};
-
 
 // ----------------------------------------------------------------------------
@@ -128,13 +111,22 @@
 #endif
 
-
-    // return information about what toolkit is running; we need for two things
-    // that are both contained in wxBase:
-    //  - wxGetOsVersion() behaves differently in GUI and non-GUI builds under
-    //    Unix: in the former case it returns the information about the toolkit
-    //    and in the latter -- about the OS, so we need to virtualize it
+    // return information about what toolkit is running; we need for a thing
+    // contained in wxBase:
     //  - wxDynamicLibrary::CanonicalizePluginName() must embed toolkit
     //    signature in DLL name
-    virtual wxToolkitInfo& GetToolkitInfo() = 0;
+    virtual wxPlatformInfo& GetPlatformInfo()
+    {
+        static wxPlatformInfo info;
+
+        // wxPlatformInfo should be able to automatically initialize itself
+        // using wxAppTraitsBase::GetToolkitVersion and other utils functions
+        wxASSERT(info.IsOk());
+        return info;
+    }
+
+    // return information about the (native) toolkit currently used;
+    // returns wxPORT_BASE for console applications and one of the remaining
+    // wxPORT_* values for GUI applications.
+    virtual wxPortId GetToolkitVersion(int *majVer, int *minVer) const = 0;
 };
 
@@ -193,4 +185,15 @@
     virtual void ScheduleForDestroy(wxObject *object);
     virtual void RemoveFromPendingDelete(wxObject *object);
+
+    // the GetToolkitVersion for console application is always the same
+    wxPortId GetToolkitVersion(int *verMaj, int *verMin) const
+    {
+        // no toolkits (wxBase is for console applications without GUI support)
+        // NB: zero means "no toolkit", -1 means "not initialized yet"
+        //     so we must use zero here!
+        if (verMaj) *verMaj = 0;
+        if (verMin) *verMin = 0;
+        return wxPORT_BASE;
+    }
 };
 
@@ -247,10 +250,10 @@
         class wxGUIAppTraits : public wxGUIAppTraitsBase
         {
-            virtual wxToolkitInfo& GetToolkitInfo();
+            virtual wxPlatformInfo& GetPlatformInfo();
         };
     #endif // wxUSE_GUI
     class wxConsoleAppTraits: public wxConsoleAppTraitsBase
     {
-        virtual wxToolkitInfo& GetToolkitInfo();
+        virtual wxPlatformInfo& GetPlatformInfo();
     };
 #endif // platform
Index: include/wx/defs.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/defs.h,v
retrieving revision 1.546
diff -u2 -r1.546 include/wx/defs.h
--- include/wx/defs.h
+++ include/wx/defs.h
@@ -666,66 +666,4 @@
 
 /*  ---------------------------------------------------------------------------- */
-/*  OS mnemonics -- Identify the running OS (useful for Windows) */
-/*  ---------------------------------------------------------------------------- */
-
-/*  Not all platforms are currently available or supported */
-enum
-{
-    wxUNKNOWN_PLATFORM,
-    wxCURSES,                 /*  Text-only CURSES */
-    wxXVIEW_X,                /*  Sun's XView OpenLOOK toolkit */
-    wxMOTIF_X,                /*  OSF Motif 1.x.x */
-    wxCOSE_X,                 /*  OSF Common Desktop Environment */
-    wxNEXTSTEP,               /*  NeXTStep */
-    wxMAC,                    /*  Apple Mac OS 8/9/X with Mac paths */
-    wxMAC_DARWIN,             /*  Apple Mac OS X with Unix paths */
-    wxBEOS,                   /*  BeOS */
-    wxGTK,                    /*  GTK on X */
-    wxGTK_WIN32,              /*  GTK on Win32 */
-    wxGTK_OS2,                /*  GTK on OS/2 */
-    wxGTK_BEOS,               /*  GTK on BeOS */
-    wxGEOS,                   /*  GEOS */
-    wxOS2_PM,                 /*  OS/2 Workplace */
-    wxWINDOWS,                /*  Windows or WfW */
-    wxMICROWINDOWS,           /*  MicroWindows */
-    wxPENWINDOWS,             /*  Windows for Pen Computing */
-    wxWINDOWS_NT,             /*  Windows NT */
-    wxWIN32S,                 /*  Windows 32S API */
-    wxWIN95,                  /*  Windows 95 */
-    wxWIN386,                 /*  Watcom 32-bit supervisor modus */
-    wxWINDOWS_CE,             /*  Windows CE (generic) */
-    wxWINDOWS_POCKETPC,       /*  Windows CE PocketPC */
-    wxWINDOWS_SMARTPHONE,     /*  Windows CE Smartphone */
-    wxMGL_UNIX,               /*  MGL with direct hardware access */
-    wxMGL_X,                  /*  MGL on X */
-    wxMGL_WIN32,              /*  MGL on Win32 */
-    wxMGL_OS2,                /*  MGL on OS/2 */
-    wxMGL_DOS,                /*  MGL on MS-DOS */
-    wxWINDOWS_OS2,            /*  Native OS/2 PM */
-    wxUNIX,                   /*  wxBase under Unix */
-    wxX11,                    /*  Plain X11 and Universal widgets */
-    wxPALMOS,                 /*  PalmOS */
-    wxDOS                     /*  wxBase under MS-DOS */
-};
-
-/* Friendlier platform names */
-enum
-{
-    wxMotif = wxMOTIF_X,
-    wxMac = wxMAC,
-    wxMSW = wxWINDOWS,
-    wxWinCE = wxWINDOWS_CE,
-    wxWinPocketPC = wxWINDOWS_POCKETPC,
-    wxWinSmartPhone = wxWINDOWS_SMARTPHONE,
-    wxWin95= wxWIN95,
-    wxUnix = wxUNIX,                   /*  wxBase under Unix */
-    wxPalmOS = wxPALMOS,               /*  PalmOS */
-    wxOS2 = wxOS2_PM,
-
-    wxMGL = 100,
-    wxCocoa
-};
-
-/*  ---------------------------------------------------------------------------- */
 /*  standard wxWidgets types */
 /*  ---------------------------------------------------------------------------- */
Index: include/wx/utils.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/utils.h,v
retrieving revision 1.135
diff -u2 -r1.135 include/wx/utils.h
--- include/wx/utils.h
+++ include/wx/utils.h
@@ -31,4 +31,7 @@
 #include "wx/longlong.h"
 
+// need for wxOperatingSystemId
+#include "wx/platinfo.h"
+
 #ifdef __WATCOMC__
     #include <direct.h>
@@ -94,6 +97,12 @@
 
 // Get OS version
-WXDLLIMPEXP_BASE int wxGetOsVersion(int *majorVsn = (int *) NULL,
-                               int *minorVsn = (int *) NULL);
+WXDLLIMPEXP_BASE wxOperatingSystemId wxGetOsVersion(int *majorVsn = (int *) NULL,
+                                                    int *minorVsn = (int *) NULL);
+
+// Get platform endianness
+WXDLLIMPEXP_BASE bool wxIsPlatformLittleEndian();
+
+// Get platform architecture
+WXDLLIMPEXP_BASE bool wxIsPlatform64Bit();
 
 // Return a string with the current date/time
Index: include/wx/msw/apptbase.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/apptbase.h,v
retrieving revision 1.7
diff -u2 -r1.7 include/wx/msw/apptbase.h
--- include/wx/msw/apptbase.h
+++ include/wx/msw/apptbase.h
@@ -41,12 +41,4 @@
     // false if and only if we have to exit the application
     virtual bool DoMessageFromThreadWait() = 0;
-
-    // other miscellaneous helpers
-    // ---------------------------
-
-    // under MSW this function returns same version for both console and GUI
-    // applications so we can implement it directly in the base class and only
-    // override it wxGUIAppTraits to fill in toolkit information
-    virtual wxToolkitInfo& GetToolkitInfo();
 };
 
Index: include/wx/msw/apptrait.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/apptrait.h,v
retrieving revision 1.6
diff -u2 -r1.6 include/wx/msw/apptrait.h
--- include/wx/msw/apptrait.h
+++ include/wx/msw/apptrait.h
@@ -37,5 +37,5 @@
 
     virtual bool DoMessageFromThreadWait();
-    virtual wxToolkitInfo& GetToolkitInfo();
+    virtual wxPortId GetToolkitVersion(int *majVer, int *minVer) const;
 };
 
Index: include/wx/os2/apptrait.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/apptrait.h,v
retrieving revision 1.3
diff -u2 -r1.3 include/wx/os2/apptrait.h
--- include/wx/os2/apptrait.h
+++ include/wx/os2/apptrait.h
@@ -20,5 +20,4 @@
 {
 public:
-    virtual wxToolkitInfo& GetToolkitInfo();
 };
 
@@ -28,5 +27,5 @@
 {
 public:
-    virtual wxToolkitInfo& GetToolkitInfo();
+    virtual wxPortId GetToolkitVersion(int *majVer, int *minVer) const;
 
     // wxThread helpers
Index: include/wx/palmos/apptbase.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/apptbase.h,v
retrieving revision 1.3
diff -u2 -r1.3 include/wx/palmos/apptbase.h
--- include/wx/palmos/apptbase.h
+++ include/wx/palmos/apptbase.h
@@ -41,12 +41,4 @@
     // false if and only if we have to exit the application
     virtual bool DoMessageFromThreadWait() = 0;
-
-    // other miscellaneous helpers
-    // ---------------------------
-
-    // under MSW this function returns same version for both console and GUI
-    // applications so we can implement it directly in the base class and only
-    // override it wxGUIAppTraits to fill in toolkit information
-    virtual wxToolkitInfo& GetToolkitInfo();
 };
 
Index: include/wx/palmos/apptrait.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/apptrait.h,v
retrieving revision 1.3
diff -u2 -r1.3 include/wx/palmos/apptrait.h
--- include/wx/palmos/apptrait.h
+++ include/wx/palmos/apptrait.h
@@ -37,5 +37,5 @@
 
     virtual bool DoMessageFromThreadWait();
-    virtual wxToolkitInfo& GetToolkitInfo();
+    virtual wxPortId GetToolkitVersion(int *majVer, int *minVer) const;
 };
 
Index: include/wx/unix/apptrait.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/unix/apptrait.h,v
retrieving revision 1.7
diff -u2 -r1.7 include/wx/unix/apptrait.h
--- include/wx/unix/apptrait.h
+++ include/wx/unix/apptrait.h
@@ -24,6 +24,4 @@
     virtual void DetachWriteFDOfEndProcessPipe(wxExecuteData& execData);
     virtual int WaitForChild(wxExecuteData& execData);
-
-    virtual wxToolkitInfo& GetToolkitInfo();
 };
 
@@ -41,5 +39,5 @@
     virtual wxStandardPathsBase& GetStandardPaths();
 #endif
-    virtual wxToolkitInfo& GetToolkitInfo();
+    virtual wxPortId GetToolkitVersion(int *majVer, int *minVer) const;
 };
 
Index: src/common/dynlib.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/dynlib.cpp,v
retrieving revision 1.115
diff -u2 -r1.115 src/common/dynlib.cpp
--- src/common/dynlib.cpp
+++ src/common/dynlib.cpp
@@ -252,5 +252,5 @@
         wxCHECK_MSG( traits, wxEmptyString,
                      _("can't query for GUI plugins name in console applications") );
-        suffix = traits->GetToolkitInfo().shortName;
+        suffix = traits->GetPlatformInfo().GetPortIdShortName();
     }
 #if wxUSE_UNICODE
Index: src/common/intl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/intl.cpp,v
retrieving revision 1.188
diff -u2 -r1.188 src/common/intl.cpp
--- src/common/intl.cpp
+++ src/common/intl.cpp
@@ -1588,5 +1588,5 @@
       wxAppTraits *traits = wxTheApp->GetTraits();
       if (traits)
-        AddCatalog(traits->GetToolkitInfo().name.BeforeFirst(wxT('/')).MakeLower());
+        AddCatalog(traits->GetPlatformInfo().GetPortIdName().BeforeFirst(wxT('/')).MakeLower());
     }
   }
Index: src/common/utilscmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/utilscmn.cpp,v
retrieving revision 1.165
diff -u2 -r1.165 src/common/utilscmn.cpp
--- src/common/utilscmn.cpp
+++ src/common/utilscmn.cpp
@@ -288,20 +288,18 @@
 }
 
-int wxGetOsVersion(int *verMaj, int *verMin)
+bool wxIsPlatformLittleEndian()
 {
-    // we want this function to work even if there is no wxApp
-    wxConsoleAppTraits traitsConsole;
-    wxAppTraits *traits = wxTheApp ? wxTheApp->GetTraits() : NULL;
-    if ( ! traits )
-        traits = &traitsConsole;
-
-    wxToolkitInfo& info = traits->GetToolkitInfo();
-    if ( verMaj )
-        *verMaj = info.versionMajor;
-    if ( verMin )
-        *verMin = info.versionMinor;
-    return info.os;
+    /* Are we little or big endian?  From Harbison&Steele.  */
+    union
+    {
+        long l;
+        char c[sizeof (long)];
+    } u;
+    u.l = 1;
+
+    return (u.c[sizeof (long) - 1] == 1);
 }
 
+
 /*
  * Class to make it easier to specify platform-dependent values
Index: src/common/wincmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/wincmn.cpp,v
retrieving revision 1.269
diff -u2 -r1.269 src/common/wincmn.cpp
--- src/common/wincmn.cpp
+++ src/common/wincmn.cpp
@@ -84,4 +84,6 @@
 #endif
 
+#include "wx/apptrait.h"        // for wxToolkitId values
+
 // Windows List
 WXDLLIMPEXP_DATA_CORE(wxWindowList) wxTopLevelWindows;
@@ -2166,68 +2168,35 @@
 #if wxUSE_MSGDLG
         // don't translate these strings
-        wxString port;
+        wxString msg, port = wxTheApp->GetTraits()->GetPlatformInfo().GetPortIdName();
 
-#ifdef __WXUNIVERSAL__
-        port = _T("Univ/");
-#endif // __WXUNIVERSAL__
-
-        switch ( wxGetOsVersion() )
-        {
-            case wxMOTIF_X:            port += _T("Motif"); break;
-            case wxMAC:
-            case wxMAC_DARWIN:         port += _T("Mac"); break;
-            case wxBEOS:               port += _T("BeOS"); break;
-            case wxGTK:
-            case wxGTK_WIN32:
-            case wxGTK_OS2:
-            case wxGTK_BEOS:           port += _T("GTK"); break;
-            case wxWINDOWS:
-            case wxPENWINDOWS:
-            case wxWINDOWS_NT:
-            case wxWIN32S:
-            case wxWIN95:
-            case wxWIN386:             port += _T("MS Windows"); break;
-            case wxMGL_UNIX:
-            case wxMGL_X:
-            case wxMGL_WIN32:
-            case wxMGL_OS2:            port += _T("MGL"); break;
-            case wxWINDOWS_OS2:
-            case wxOS2_PM:             port += _T("OS/2"); break;
-            case wxPALMOS:             port += _T("Palm OS"); break;
-            case wxWINDOWS_CE:         port += _T("Windows CE (generic)"); break;
-            case wxWINDOWS_POCKETPC:   port += _T("Windows CE PocketPC"); break;
-            case wxWINDOWS_SMARTPHONE: port += _T("Windows CE Smartphone"); break;
-            default:            port += _T("unknown"); break;
-        }
-
-        wxMessageBox(wxString::Format(
-                                      _T(
-                                        "       wxWidgets Library (%s port)\nVersion %d.%d.%d%s%s, compiled at %s %s%s\n   Copyright (c) 1995-2006 wxWidgets team"
-                                        ),
-                                      port.c_str(),
-                                      wxMAJOR_VERSION,
-                                      wxMINOR_VERSION,
-                                      wxRELEASE_NUMBER,
+        msg.Printf(_T("wxWidgets Library (%s port)\n")
+                   _T("Version %d.%d.%d%s%s, compiled at %s %s%s\n")
+                   _T("Copyright (c) 1995-2006 wxWidgets team"),
+                   port.c_str(),
+                   wxMAJOR_VERSION,
+                   wxMINOR_VERSION,
+                   wxRELEASE_NUMBER,
 #if wxUSE_UNICODE
-                                      L" (Unicode)",
+                   L" (Unicode)",
 #else
-                                      "",
+                   wxEmptyString,
 #endif
 #ifdef __WXDEBUG__
-                                      _T(" Debug build"),
+                   _T(" Debug build"),
 #else
-                                      wxEmptyString,
+                   wxEmptyString,
 #endif
-                                      __TDATE__,
-                                      __TTIME__,
+                   __TDATE__,
+                   __TTIME__,
 #ifdef __WXGTK__
-                                      wxString::Format(_T("\nagainst GTK+ %d.%d.%d. Runtime GTK+ version: %d.%d.%d"), GTK_MAJOR_VERSION, GTK_MINOR_VERSION, GTK_MICRO_VERSION, gtk_major_version, gtk_minor_version, gtk_micro_version).c_str()
+                   wxString::Format(_T("\nagainst GTK+ %d.%d.%d. Runtime GTK+ version: %d.%d.%d"), GTK_MAJOR_VERSION, GTK_MINOR_VERSION, GTK_MICRO_VERSION, gtk_major_version, gtk_minor_version, gtk_micro_version).c_str()
 #else
-                                      ""
+                   wxEmptyString
 #endif
-                                     ),
-                     _T("wxWidgets information"),
-                     wxICON_INFORMATION | wxOK,
-                     (wxWindow *)this);
+                   );
+
+            wxMessageBox(msg, _T("wxWidgets information"),
+                         wxICON_INFORMATION | wxOK,
+                         (wxWindow *)this);
     }
     else
Index: src/generic/combog.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/combog.cpp,v
retrieving revision 1.6
diff -u2 -r1.6 src/generic/combog.cpp
--- src/generic/combog.cpp
+++ src/generic/combog.cpp
@@ -36,4 +36,5 @@
 
 #include "wx/dcbuffer.h"
+#include "wx/apptrait.h"        // for wxToolkitId values
 
 // ----------------------------------------------------------------------------
Index: src/gtk/utilsgtk.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/utilsgtk.cpp,v
retrieving revision 1.71
diff -u2 -r1.71 src/gtk/utilsgtk.cpp
--- src/gtk/utilsgtk.cpp
+++ src/gtk/utilsgtk.cpp
@@ -164,19 +164,4 @@
 }
 
-wxToolkitInfo& wxGUIAppTraits::GetToolkitInfo()
-{
-    static wxToolkitInfo info;
-    info.shortName = _T("gtk2");
-    info.name = _T("wxGTK");
-#ifdef __WXUNIVERSAL__
-    info.shortName << _T("univ");
-    info.name << _T("/wxUniversal");
-#endif
-    info.versionMajor = gtk_major_version;
-    info.versionMinor = gtk_minor_version;
-    info.os = wxGTK;
-    return info;
-}
-
 wxWindow* wxFindWindowAtPoint(const wxPoint& pt)
 {
@@ -260,2 +245,15 @@
     return tag;
 }
+
+
+
+// ----------------------------------------------------------------------------
+// wxPlatformInfo-related
+// ----------------------------------------------------------------------------
+
+wxPortId wxGUIAppTraits::GetToolkitVersion(int *verMaj, int *verMin) const
+{
+    if (verMaj) *verMaj = gtk_major_version;
+    if (verMin) *verMin = gtk_minor_version;
+    return wxPORT_GTK;
+}
Index: src/gtk1/utilsgtk.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk1/utilsgtk.cpp,v
retrieving revision 1.67
diff -u2 -r1.67 src/gtk1/utilsgtk.cpp
--- src/gtk1/utilsgtk.cpp
+++ src/gtk1/utilsgtk.cpp
@@ -130,19 +130,4 @@
 }
 
-wxToolkitInfo& wxGUIAppTraits::GetToolkitInfo()
-{
-    static wxToolkitInfo info;
-    info.shortName = _T("gtk");
-    info.name = _T("wxGTK");
-#ifdef __WXUNIVERSAL__
-    info.shortName << _T("univ");
-    info.name << _T("/wxUniversal");
-#endif
-    info.versionMajor = gtk_major_version;
-    info.versionMinor = gtk_minor_version;
-    info.os = wxGTK;
-    return info;
-}
-
 wxWindow* wxFindWindowAtPoint(const wxPoint& pt)
 {
@@ -198,2 +183,13 @@
     return tag;
 }
+
+// ----------------------------------------------------------------------------
+// wxPlatformInfo-related
+// ----------------------------------------------------------------------------
+
+wxPortId wxGUIAppTraits::GetToolkitVersion(int *verMaj, int *verMin) const
+{
+    if (verMaj) *verMaj = gtk_major_version;
+    if (verMin) *verMin = gtk_minor_version;
+    return wxPORT_GTK;
+}
Index: src/mac/carbon/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/utils.cpp,v
retrieving revision 1.120
diff -u2 -r1.120 src/mac/carbon/utils.cpp
--- src/mac/carbon/utils.cpp
+++ src/mac/carbon/utils.cpp
@@ -73,5 +73,5 @@
 
 // our OS version is the same in non GUI and GUI cases
-static int DoGetOSVersion(int *majorVsn, int *minorVsn)
+wxOperatingSystemId wxGetOsVersion(int *verMaj, int *verMin)
 {
     long theSystem;
@@ -86,12 +86,13 @@
         *majorVsn = (theSystem >> 8);
 
-#ifdef __DARWIN__
-    return wxMAC_DARWIN;
+#if defined( __DARWIN__ )
+    return wxOS_MAC_OSX_DARWIN;
 #else
-    return wxMAC;
+    return wxOS_MAC_OS;
 #endif
 }
 
 
+
 #if wxUSE_BASE
 
@@ -371,13 +372,4 @@
 }
 
-wxToolkitInfo& wxConsoleAppTraits::GetToolkitInfo()
-{
-    static wxToolkitInfo info;
-
-    info.os = DoGetOSVersion(&info.versionMajor, &info.versionMinor);
-    info.name = _T("wxBase");
-
-    return info;
-}
 
 #endif // wxUSE_BASE
@@ -385,18 +377,10 @@
 #if wxUSE_GUI
 
-wxToolkitInfo& wxGUIAppTraits::GetToolkitInfo()
+wxPortId wxGUIAppTraits::GetToolkitVersion(int *verMaj, int *verMin) const
 {
-    static wxToolkitInfo info;
-
-    info.os = DoGetOSVersion(&info.versionMajor, &info.versionMinor);
-    info.shortName = _T("mac");
-    info.name = _T("wxMac");
-
-#ifdef __WXUNIVERSAL__
-    info.shortName << _T("univ");
-    info.name << _T("/wxUniversal");
-#endif
-
-    return info;
+    // FIXME: is it true that under mac the OS version is the same
+    //        of the toolkit version (like on e.g. windows) ?
+    wxGetOsVersion(verMaj, verMin);
+    return wxPORT_MAC;
 }
 
Index: src/mac/classic/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/classic/utils.cpp,v
retrieving revision 1.15
diff -u2 -r1.15 src/mac/classic/utils.cpp
--- src/mac/classic/utils.cpp
+++ src/mac/classic/utils.cpp
@@ -62,21 +62,21 @@
 
 // our OS version is the same in non GUI and GUI cases
-static int DoGetOSVersion(int *majorVsn, int *minorVsn)
+wxOperatingSystemId wxGetOsVersion(int *verMaj, int *verMin)
 {
-    long theSystem ;
+    long theSystem;
 
     // are there x-platform conventions ?
 
-    Gestalt(gestaltSystemVersion, &theSystem) ;
-    if (minorVsn != NULL) {
-        *minorVsn = (theSystem & 0xFF ) ;
-    }
-    if (majorVsn != NULL) {
-        *majorVsn = (theSystem >> 8 ) ;
-    }
-#ifdef __DARWIN__
-    return wxMAC_DARWIN;
+    Gestalt(gestaltSystemVersion, &theSystem);
+    if (minorVsn != NULL)
+        *minorVsn = (theSystem & 0xFF);
+
+    if (majorVsn != NULL)
+        *majorVsn = (theSystem >> 8);
+
+#if defined( __DARWIN__ )
+    return wxOS_MAC_OSX_DARWIN;
 #else
-    return wxMAC;
+    return wxOS_MAC_OS;
 #endif
 }
@@ -225,27 +225,14 @@
 }
 
-wxToolkitInfo& wxConsoleAppTraits::GetToolkitInfo()
-{
-    static wxToolkitInfo info;
-    info.os = DoGetOSVersion(&info.versionMajor, &info.versionMinor);
-    info.name = _T("wxBase");
-    return info;
-}
-
 #endif // wxUSE_BASE
 
 #if wxUSE_GUI
 
-wxToolkitInfo& wxGUIAppTraits::GetToolkitInfo()
+wxPortId wxGUIAppTraits::GetToolkitVersion(int *verMaj, int *verMin) const
 {
-    static wxToolkitInfo info;
-    info.os = DoGetOSVersion(&info.versionMajor, &info.versionMinor);
-    info.shortName = _T("mac");
-    info.name = _T("wxMac");
-#ifdef __WXUNIVERSAL__
-    info.shortName << _T("univ");
-    info.name << _T("/wxUniversal");
-#endif
-    return info;
+    // FIXME: is it true that under mac the OS version is the same
+    //        of the toolkit version (like on e.g. windows) ?
+    wxGetOsVersion(verMaj, verMin);
+    return wxPORT_MAC;
 }
 
Index: src/mgl/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mgl/utils.cpp,v
retrieving revision 1.31
diff -u2 -r1.31 src/mgl/utils.cpp
--- src/mgl/utils.cpp
+++ src/mgl/utils.cpp
@@ -106,52 +106,13 @@
 #if wxUSE_GUI
 
-wxToolkitInfo& wxGUIAppTraits::GetToolkitInfo()
+wxPortId wxGUIAppTraits::GetToolkitVersion(int *verMaj, int *verMin) const
 {
-    static wxToolkitInfo info;
-    info.shortName = _T("mgluniv");
-    info.name = _T("wxMGL");
-    info.versionMajor = MGL_RELEASE_MAJOR;
-    info.versionMinor = MGL_RELEASE_MINOR;
-    info.os = wxGTK;
-#if defined(__UNIX__)
-    info.os = wxMGL_UNIX;
-#elif defined(__OS2__)
-    info.os = wxMGL_OS2;
-#elif defined(__WIN32__)
-    info.os = wxMGL_WIN32;
-#elif defined(__DOS__)
-    info.os = wxMGL_DOS;
-#else
-    #error Platform not supported by wxMGL!
-#endif
-    return info;
+    if (verMaj) *verMaj = MGL_RELEASE_MAJOR;
+    if (verMin) *verMin = MGL_RELEASE_MINOR;
+    return wxPORT_MGL;
 }
 
 #endif
 
-#if 0
-wxToolkitInfo& wxConsoleAppTraits::GetToolkitInfo()
-{
-    static wxToolkitInfo info;
-    info.shortName = _T("mglbase");
-    info.versionMajor = MGL_RELEASE_MAJOR;
-    info.versionMinor = MGL_RELEASE_MINOR;
-    info.name = _T("wxBase");
-    info.os = wxGTK;
-#if defined(__UNIX__)
-    info.os = wxMGL_UNIX;
-#elif defined(__OS2__)
-    info.os = wxMGL_OS2;
-#elif defined(__WIN32__)
-    info.os = wxMGL_WIN32;
-#elif defined(__DOS__)
-    info.os = wxMGL_DOS;
-#else
-    #error Platform not supported by wxMGL!
-#endif
-    return info;
-}
-#endif
-
 void wxGetMousePosition(int* x, int* y)
 {
Index: src/motif/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/utils.cpp,v
retrieving revision 1.68
diff -u2 -r1.68 src/motif/utils.cpp
--- src/motif/utils.cpp
+++ src/motif/utils.cpp
@@ -144,28 +144,13 @@
 #endif
 
-wxToolkitInfo& wxGUIAppTraits::GetToolkitInfo()
+wxPortId wxGUIAppTraits::GetToolkitVersion(int *verMaj, int *verMin) const
 {
-    static wxToolkitInfo info;
-
-    info.shortName = _T("motif");
-    info.name = _T("wxMotif");
-#ifdef __WXUNIVERSAL__
-    info.shortName << _T("univ");
-    info.name << _T("/wxUniversal");
-#endif
-    // FIXME TODO
-    // This code is WRONG!! Does NOT return the
-    // Motif version of the libs but the X protocol
-    // version!
-    Display *display = wxGlobalDisplay();
-    if (display)
-    {
-        info.versionMajor = ProtocolVersion (display);
-        info.versionMinor = ProtocolRevision (display);
-    }
-    info.os = wxMOTIF_X;
-    return info;
+    // XmVERSION and XmREVISION are defined in Xm/Xm.h
+    if (verMaj) *verMaj = XmVERSION;
+    if (verMin) *verMin = XmREVISION;
+    return wxPORT_MOTIF;
 }
 
+
 // ----------------------------------------------------------------------------
 // Reading and writing resources (eg WIN.INI, .Xdefaults)
Index: src/msdos/utilsdos.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msdos/utilsdos.cpp,v
retrieving revision 1.8
diff -u2 -r1.8 src/msdos/utilsdos.cpp
--- src/msdos/utilsdos.cpp
+++ src/msdos/utilsdos.cpp
@@ -468,20 +468,7 @@
 }
 
-//----------------------------------------------------------------------------
-// Traits for console apps
-//----------------------------------------------------------------------------
-
-wxToolkitInfo& wxConsoleAppTraits::GetToolkitInfo()
-{
-    static wxToolkitInfo info;
-    info.versionMajor = _osmajor;
-    info.versionMinor = _osminor;
-    info.name = _T("wxBase");
-    info.os = wxDOS;
-    return info;
-}
 
 //----------------------------------------------------------------------------
-// OS Description
+// OS-related
 //----------------------------------------------------------------------------
 
@@ -491,2 +478,10 @@
     return osname;
 }
+
+wxOperatingSystemId wxGetOsVersion(int *verMaj, int *verMin)
+{
+    if (verMaj) *verMaj = _osmajor;
+    if (verMin) *verMin = _osminor;
+    return wxOS_DOS;
+}
+
Index: src/msw/app.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/app.cpp,v
retrieving revision 1.247
diff -u2 -r1.247 src/msw/app.cpp
--- src/msw/app.cpp
+++ src/msw/app.cpp
@@ -227,18 +227,23 @@
 }
 
-wxToolkitInfo& wxGUIAppTraits::GetToolkitInfo()
+wxPortId wxGUIAppTraits::GetToolkitVersion(int *majVer, int *minVer) const
 {
-    static wxToolkitInfo info;
-    wxToolkitInfo& baseInfo = wxAppTraits::GetToolkitInfo();
-    info.versionMajor = baseInfo.versionMajor;
-    info.versionMinor = baseInfo.versionMinor;
-    info.os = baseInfo.os;
-    info.shortName = _T("msw");
-    info.name = _T("wxMSW");
-#ifdef __WXUNIVERSAL__
-    info.shortName << _T("univ");
-    info.name << _T("/wxUniversal");
+    OSVERSIONINFO info;
+    wxZeroMemory(info);
+
+    // on Windows, the toolkit version is the same of the OS version
+    // as Windows integrates the OS kernel with the GUI toolkit.
+    info.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);
+    if ( ::GetVersionEx(&info) )
+    {
+        if (majVer) *majVer = info.dwMajorVersion;
+        if (minVer) *minVer = info.dwMinorVersion;
+    }
+
+#if defined( __SMARTPHONE__ ) || defined( __POCKETPC__ ) || defined( __WXWINCE__ )
+    return wxPORT_WINCE;
+#else
+    return wxPORT_MSW;
 #endif
-    return info;
 }
 
Index: src/msw/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/utils.cpp,v
retrieving revision 1.189
diff -u2 -r1.189 src/msw/utils.cpp
--- src/msw/utils.cpp
+++ src/msw/utils.cpp
@@ -1163,59 +1163,47 @@
 }
 
-wxToolkitInfo& wxAppTraits::GetToolkitInfo()
+// taken from http://blogs.msdn.com/oldnewthing/archive/2005/02/01/364563.aspx
+bool wxIsPlatform64Bit()
 {
-    // cache the version info, it's not going to change
-    //
-    // NB: this is MT-safe, we may use these static vars from different threads
-    //     but as they always have the same value it doesn't matter
-    static int s_ver = -1,
-               s_major = -1,
-               s_minor = -1;
+#if defined(_WIN64)
+    return true;  // 64-bit programs run only on Win64
+#elif defined(_WIN32)
+    // 32-bit programs run on both 32-bit and 64-bit Windows
+    // so must sniff
+    BOOL f64 = FALSE;
+    return IsWow64Process(GetCurrentProcess(), &f64) && f64;
+#else
+    return false; // Win64 does not support Win16
+#endif
+}
 
-    if ( s_ver == -1 )
-    {
-        OSVERSIONINFO info;
-        wxZeroMemory(info);
+wxOperatingSystemId wxGetOsVersion(int *verMaj, int *verMin)
+{
+    OSVERSIONINFO info;
+    wxZeroMemory(info);
 
-        s_ver = wxWINDOWS;
-        info.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);
-        if ( ::GetVersionEx(&info) )
-        {
-            s_major = info.dwMajorVersion;
-            s_minor = info.dwMinorVersion;
+    info.dwOSVersionInfoSize = sizeof(OSVERSIONINFO);
+    if ( ::GetVersionEx(&info) )
+    {
+        if (verMaj) *verMaj = info.dwMajorVersion;
+        if (verMin) *verMin = info.dwMinorVersion;
+    }
 
-#ifdef __SMARTPHONE__
-            s_ver = wxWINDOWS_SMARTPHONE;
-#elif defined(__POCKETPC__)
-            s_ver = wxWINDOWS_POCKETPC;
+#if defined( __SMARTPHONE__ ) || defined( __POCKETPC__ ) || defined( __WXWINCE__ )
+    return wxOS_WINDOWS_WINCE;
+#elif defined( __WXMICROWIN__ )
+    return wxOS_WINDOWS_MICRO;
 #else
-            switch ( info.dwPlatformId )
-            {
-                case VER_PLATFORM_WIN32s:
-                    s_ver = wxWIN32S;
-                    break;
-
-                case VER_PLATFORM_WIN32_WINDOWS:
-                    s_ver = wxWIN95;
-                    break;
+    switch ( info.dwPlatformId )
+    {
+    case VER_PLATFORM_WIN32_NT:
+        return wxOS_WINDOWS_NT;
 
-                case VER_PLATFORM_WIN32_NT:
-                    s_ver = wxWINDOWS_NT;
-                    break;
-#ifdef __WXWINCE__
-                case VER_PLATFORM_WIN32_CE:
-                    s_ver = wxWINDOWS_CE;
-#endif
-            }
-#endif
-        }
+    case VER_PLATFORM_WIN32_WINDOWS:
+        return wxOS_WINDOWS_9X;
     }
 
-    static wxToolkitInfo info;
-    info.versionMajor = s_major;
-    info.versionMinor = s_minor;
-    info.os = s_ver;
-    info.name = _T("wxBase");
-    return info;
+    return wxOS_UNKNOWN;
+#endif
 }
 
Index: src/os2/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/utils.cpp,v
retrieving revision 1.75
diff -u2 -r1.75 src/os2/utils.cpp
--- src/os2/utils.cpp
+++ src/os2/utils.cpp
@@ -327,5 +327,5 @@
 }
 
-wxToolkitInfo & wxConsoleAppTraits::GetToolkitInfo()
+wxOperatingSystemId wxGetOsVersion(int *verMaj, int *verMin)
 {
     static wxToolkitInfo  vInfo;
@@ -333,5 +333,4 @@
     APIRET                ulrc;
 
-    vInfo.name = _T("wxBase");
     ulrc = ::DosQuerySysInfo( 1L
                              ,QSV_MAX
@@ -339,13 +338,15 @@
                              ,sizeof(ULONG) * QSV_MAX
                             );
+
     if (ulrc == 0L)
     {
-        vInfo.versionMajor = ulSysInfo[QSV_VERSION_MAJOR] / 10;
-        vInfo.versionMinor = ulSysInfo[QSV_VERSION_MINOR];
+        if (verMaj) *verMaj = ulSysInfo[QSV_VERSION_MAJOR] / 10;
+        if (verMin) *verMin = ulSysInfo[QSV_VERSION_MINOR];
     }
-    vInfo.os = wxOS2_PM;
-    return vInfo;
+
+    return wxOS_OS2;
 }
 
+
 // ---------------------------------------------------------------------------
 const wxChar* wxGetHomeDir(
Index: src/os2/utilsgui.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/utilsgui.cpp,v
retrieving revision 1.14
diff -u2 -r1.14 src/os2/utilsgui.cpp
--- src/os2/utilsgui.cpp
+++ src/os2/utilsgui.cpp
@@ -438,30 +438,11 @@
 }
 
-wxToolkitInfo & wxGUIAppTraits::GetToolkitInfo()
+wxPortId wxGUIAppTraits::GetToolkitVersion(int *verMaj, int *verMin) const
 {
-    static wxToolkitInfo vInfo;
-    ULONG                           ulSysInfo[QSV_MAX] = {0};
-    APIRET                          ulrc;
-
-    vInfo.shortName = _T("PM");
-    vInfo.name = _T("wxOS2");
-#ifdef __WXUNIVERSAL__
-    vInfo.shortName << _T("univ");
-    vInfo.name << _T("/wxUniversal");
-#endif
-    ulrc = ::DosQuerySysInfo( 1L
-                             ,QSV_MAX
-                             ,(PVOID)ulSysInfo
-                             ,sizeof(ULONG) * QSV_MAX
-                            );
-    if (ulrc == 0L)
-    {
-        vInfo.versionMajor = ulSysInfo[QSV_VERSION_MAJOR] / 10;
-        vInfo.versionMinor = ulSysInfo[QSV_VERSION_MINOR];
-    }
-    vInfo.os = wxOS2_PM;
-    return vInfo;
+    // TODO: how to get version of PM ?
+    return wxPORT_OS2;
 }
 
+
 // ---------------------------------------------------------------------------
 // window information functions
Index: src/palmos/app.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/palmos/app.cpp,v
retrieving revision 1.7
diff -u2 -r1.7 src/palmos/app.cpp
--- src/palmos/app.cpp
+++ src/palmos/app.cpp
@@ -114,18 +114,8 @@
 }
 
-wxToolkitInfo& wxGUIAppTraits::GetToolkitInfo()
+wxPortId wxGUIAppTraits::GetToolkitVersion(int *majVer, int *minVer) const
 {
-    static wxToolkitInfo info;
-    wxToolkitInfo& baseInfo = wxAppTraits::GetToolkitInfo();
-    info.versionMajor = baseInfo.versionMajor;
-    info.versionMinor = baseInfo.versionMinor;
-    info.os = baseInfo.os;
-    info.shortName = _T("palmos");
-    info.name = _T("wxPalmOS");
-#ifdef __WXUNIVERSAL__
-    info.shortName << _T("univ");
-    info.name << _T("/wxUniversal");
-#endif
-    return info;
+    // TODO: how to get PalmOS GUI system version ?
+    return wxPORT_PALMOS;
 }
 
Index: src/palmos/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/palmos/utils.cpp,v
retrieving revision 1.14
diff -u2 -r1.14 src/palmos/utils.cpp
--- src/palmos/utils.cpp
+++ src/palmos/utils.cpp
@@ -216,10 +216,9 @@
 }
 
-wxToolkitInfo& wxAppTraits::GetToolkitInfo()
+wxOperatingSystemId wxGetOsVersion(int *verMaj, int *verMin)
 {
-    static wxToolkitInfo info;
-    info.os = wxPALMOS;
-    info.name = _T("wxBase");
-    return info;
+    // TODO
+
+    return wxOS_UNKNOWN;
 }
 
Index: src/unix/baseunix.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/baseunix.cpp,v
retrieving revision 1.14
diff -u2 -r1.14 src/unix/baseunix.cpp
--- src/unix/baseunix.cpp
+++ src/unix/baseunix.cpp
@@ -82,44 +82,2 @@
 }
 
-// ----------------------------------------------------------------------------
-// misc other stuff
-// ----------------------------------------------------------------------------
-
-// this is in mac/utils.cpp under Mac
-#if !defined(__WXMAC__)
-
-wxToolkitInfo& wxConsoleAppTraits::GetToolkitInfo()
-{
-    static wxToolkitInfo info;
-    int major, minor;
-
-    FILE *f = popen("uname -r", "r");
-    if (f)
-    {
-        char buf[32];
-        size_t c = fread(buf, 1, sizeof(buf) - 1, f);
-        pclose(f);
-        buf[c] = '\0';
-        if ( sscanf(buf, "%d.%d", &major, &minor) != 2 )
-        {
-            // unrecognized uname string format
-            major =
-            minor = -1;
-        }
-    }
-    else
-    {
-        // failed to run uname
-        major =
-        minor = -1;
-    }
-
-    info.versionMajor = major;
-    info.versionMinor = minor;
-    info.name = _T("wxBase");
-    info.os = wxUNIX;
-
-    return info;
-}
-
-#endif // __WXMAC__
Index: src/unix/utilsunx.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/utilsunx.cpp,v
retrieving revision 1.136
diff -u2 -r1.136 src/unix/utilsunx.cpp
--- src/unix/utilsunx.cpp
+++ src/unix/utilsunx.cpp
@@ -741,4 +741,24 @@
 // ----------------------------------------------------------------------------
 
+// private utility function
+wxString wxUname(const wxString &cmd)
+{
+    FILE *f = popen(cmd.ToAscii(), "r");
+    if (f)
+    {
+        char buf[256];
+        size_t c = fread(buf, 1, sizeof(buf) - 1, f);
+        pclose(f);
+
+        // Trim newline from output.
+        if (c && buf[c - 1] == '\n')
+            --c;
+        buf[c] = '\0';
+        return wxString::FromAscii( buf );
+    }
+    wxFAIL_MSG( _T("uname failed") );
+    return wxEmptyString;
+}
+
 // retrieve either the hostname or FQDN depending on platform (caller must
 // check whether it's one or the other, this is why this function is for
@@ -857,4 +877,47 @@
 }
 
+wxOperatingSystemId wxGetOsVersion(int *verMaj, int *verMin)
+{
+    int major, minor;
+
+    // get version
+    wxString release = wxUname(wxT("uname -r"));
+    if ( !release.empty() && sscanf(release, "%d.%d", &major, &minor) != 2 )
+    {
+        // unrecognized uname string format
+        major =
+        minor = -1;
+    }
+
+    if (verMaj) *verMaj = major;
+    if (verMin) *verMin = minor;
+
+    // try to understand which OS are we running
+    // FIXME: test AIX & HPUX platforms - do they have uname ?
+    wxString kernel = wxUname(wxT("uname -s"));
+    if ( kernel.empty() )
+        kernel = wxUname(wxT("uname -o"));      // try with -o
+
+    // do string -> enum conversion
+    if ( !kernel.empty() )
+        return wxPlatformInfo::GetOperatingSystemId(kernel);
+    return wxOS_UNKNOWN;
+}
+
+bool wxIsPlatform64Bit()
+{
+    wxString machine = wxUname(wxT("uname -m"));
+
+    // NOTE: these tests are not 100% reliable!
+    // FIXME: here we would need a Contains() which is case insensitive
+    return machine.Contains(wxT("AMD64")) ||
+           machine.Contains(wxT("IA64")) ||
+           machine.Contains(wxT("x64")) ||
+           machine.Contains(wxT("X64")) ||
+           machine.Contains(wxT("alpha")) ||
+           machine.Contains(wxT("hppa64")) ||
+           machine.Contains(wxT("ppc64"));
+}
+
 // this function is in mac/utils.cpp for wxMac
 #ifndef __WXMAC__
@@ -862,18 +925,5 @@
 wxString wxGetOsDescription()
 {
-    FILE *f = popen("uname -s -r -m", "r");
-    if (f)
-    {
-        char buf[256];
-        size_t c = fread(buf, 1, sizeof(buf) - 1, f);
-        pclose(f);
-        // Trim newline from output.
-        if (c && buf[c - 1] == '\n')
-            --c;
-        buf[c] = '\0';
-        return wxString::FromAscii( buf );
-    }
-    wxFAIL_MSG( _T("uname failed") );
-    return wxEmptyString;
+    return wxUname(wxT("uname -s -r -m"));
 }
 
Index: src/x11/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/x11/utils.cpp,v
retrieving revision 1.29
diff -u2 -r1.29 src/x11/utils.cpp
--- src/x11/utils.cpp
+++ src/x11/utils.cpp
@@ -154,15 +154,18 @@
 #endif
 
-wxToolkitInfo& wxGUIAppTraits::GetToolkitInfo()
+wxPortId wxGUIAppTraits::GetToolkitVersion(int *verMaj, int *verMin) const
 {
-    static wxToolkitInfo info;
-    info.shortName = _T("x11univ");
-    info.name = _T("wxX11");
-    info.versionMajor = 0;
-    info.versionMinor = 0;
-    info.os = wxX11;
-    return info;
+    // get X protocol version
+    Display *display = wxGlobalDisplay();
+    if (display)
+    {
+        if (verMaj) *verMaj = ProtocolVersion (display);
+        if (verMin) *verMin = ProtocolRevision (display);
+    }
+
+    return wxPORT_X11;
 }
 
+
 // ----------------------------------------------------------------------------
 // display info

 	  	 
