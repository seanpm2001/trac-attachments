--- wxWidgets.orig/samples/combo/combo.cpp	Fri Oct 27 17:19:25 2006
+++ wxWidgets/samples/combo/combo.cpp	Fri Dec  8 18:17:44 2006
@@ -520,12 +520,5 @@
         m_animRect = rect;
         m_animFlags = flags;
-
-        wxScreenDC dc;
-
-        wxBitmap bitmap( rect.width, rect.height, -1 );
-        wxMemoryDC memdc( bitmap );
-        memdc.Blit( 0, 0, rect.width, rect.height, &dc, rect.x, rect.y );
-        memdc.SelectObject(wxNullBitmap); 
-        m_animBackBitmap = bitmap;
+        m_prevW = m_prevH = -1;
 
         m_animTimer.SetOwner( this, wxID_ANY );
@@ -542,6 +535,21 @@
         wxWindow* popup = GetPopupControl()->GetControl();
         wxScreenDC dc;
+        dc.SetPen( *wxBLACK_PEN );
+        dc.SetBrush( *wxTRANSPARENT_BRUSH );
+
+        //
+        // We use inverse drawing logic, so that we can restore the
+        // background by simply drawing second time to the same
+        // position.
+        dc.SetLogicalFunction( wxINVERT );
+
         const wxRect& rect = m_animRect;
 
+        int width = rect.width;
+        int height = rect.height;
+
+        int center_x = rect.x + (width/2);
+        int center_y = rect.y + (height/2);
+
         // Popup was hidden before it was fully shown?
         if ( IsPopupWindowState(Hidden) )
@@ -556,24 +564,20 @@
             if ( pos < CUSTOM_COMBOBOX_ANIMATION_DURATION )
             {
-                //
-                // Actual animation happens here
-                //
-                int width = rect.width;
-                int height = rect.height;
-
-                int center_x = rect.x + (width/2);
-                int center_y = rect.y + (height/2);
-
                 double d_height = (double) height;
 
-                dc.SetPen( *wxBLACK_PEN );
-                dc.SetBrush( *wxTRANSPARENT_BRUSH );
-
                 int w = (((pos*256)/CUSTOM_COMBOBOX_ANIMATION_DURATION)*width)/256;
 
                 double ratio = ((double)w / (double)width);
                 int h = (int)(d_height * ratio);
-                dc.DrawBitmap( m_animBackBitmap, rect.x, rect.y );
+
+                // Erase the previous rectangle
+                if ( m_prevW != -1 )
+                    dc.DrawRectangle( center_x - m_prevW/2, center_y - m_prevH/2, m_prevW, m_prevH );
+
+                // Draw a new rectangle
                 dc.DrawRectangle( center_x - w/2, center_y - h/2, w, h );
+
+                m_prevW = w;
+                m_prevH = h;
             }
             else
@@ -585,5 +589,8 @@
         if ( stopTimer )
         {
-            dc.DrawBitmap( m_animBackBitmap, rect.x, rect.y );
+            // Finally, we need to erase the last rectangle drawn
+            if ( m_prevW != -1 )
+                dc.DrawRectangle( center_x - m_prevW/2, center_y - m_prevH/2, m_prevW, m_prevH );
+
             popup->Move( 0, 0 );
             m_animTimer.Stop();
@@ -598,6 +605,7 @@
     wxTimer     m_animTimer;
     wxRect      m_animRect;
-    wxBitmap    m_animBackBitmap;
     int         m_animFlags;
+    int         m_prevW;
+    int         m_prevH;
 
 private:

 	  	 
