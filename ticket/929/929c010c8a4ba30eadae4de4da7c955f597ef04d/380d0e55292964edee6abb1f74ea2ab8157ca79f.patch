? contrib/include/wx/gizmos/editlbox_new.h
? contrib/src/gizmos/editlbox_new.cpp
Index: contrib/include/wx/gizmos/editlbox.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/contrib/include/wx/gizmos/editlbox.h,v
retrieving revision 1.12
diff -u -t -p -r1.12 editlbox.h
--- contrib/include/wx/gizmos/editlbox.h	2007/02/11 03:13:12	1.12
+++ contrib/include/wx/gizmos/editlbox.h	2007/02/14 12:52:40
@@ -21,6 +21,8 @@ class WXDLLEXPORT wxListEvent;
 #define wxEL_ALLOW_NEW          0x0100
 #define wxEL_ALLOW_EDIT         0x0200
 #define wxEL_ALLOW_DELETE       0x0400
+#define wxEL_NO_ORDER           0x0800
+#define wxEL_NO_UPDOWN          wxEL_NO_ORDER
 
 // This class provides a composite control that lets the
 // user easily enter list of strings
Index: contrib/src/gizmos/editlbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/contrib/src/gizmos/editlbox.cpp,v
retrieving revision 1.24
diff -u -t -p -r1.24 editlbox.cpp
--- contrib/src/gizmos/editlbox.cpp	2007/02/11 03:13:03	1.24
+++ contrib/src/gizmos/editlbox.cpp	2007/02/14 13:06:34
@@ -144,18 +144,21 @@ wxEditableListBox::wxEditableListBox(wxW
         subsizer->Add(m_bDel, 0, wxALIGN_CENTRE_VERTICAL | wxTOP | wxBOTTOM, BTN_BORDER);
     }
 
-    m_bUp = new wxBitmapButton(subp, wxID_ELB_UP, wxBitmap(elup_xpm));
-    subsizer->Add(m_bUp, 0, wxALIGN_CENTRE_VERTICAL | wxTOP | wxBOTTOM, BTN_BORDER);
+    if (!(m_style & wxEL_NO_ORDER))
+    {
+        m_bUp = new wxBitmapButton(subp, wxID_ELB_UP, wxBitmap(elup_xpm));
+        subsizer->Add(m_bUp, 0, wxALIGN_CENTRE_VERTICAL | wxTOP | wxBOTTOM, BTN_BORDER);
+
+        m_bDown = new wxBitmapButton(subp, wxID_ELB_DOWN, wxBitmap(eldown_xpm));
+        subsizer->Add(m_bDown, 0, wxALIGN_CENTRE_VERTICAL | wxTOP | wxBOTTOM, BTN_BORDER);
+    }
 
-    m_bDown = new wxBitmapButton(subp, wxID_ELB_DOWN, wxBitmap(eldown_xpm));
-    subsizer->Add(m_bDown, 0, wxALIGN_CENTRE_VERTICAL | wxTOP | wxBOTTOM, BTN_BORDER);
-
 #if wxUSE_TOOLTIPS
     if ( m_bEdit ) m_bEdit->SetToolTip(_("Edit item"));
     if ( m_bNew ) m_bNew->SetToolTip(_("New item"));
     if ( m_bDel ) m_bDel->SetToolTip(_("Delete item"));
-    m_bUp->SetToolTip(_("Move up"));
-    m_bDown->SetToolTip(_("Move down"));
+    if ( m_bUp ) m_bUp->SetToolTip(_("Move up"));
+    if ( m_bDown ) m_bDown->SetToolTip(_("Move down"));
 #endif
 
     subp->SetSizer(subsizer);
@@ -200,8 +203,12 @@ void wxEditableListBox::GetStrings(wxArr
 void wxEditableListBox::OnItemSelected(wxListEvent& event)
 {
     m_selection = event.GetIndex();
-    m_bUp->Enable(m_selection != 0 && m_selection < m_listCtrl->GetItemCount()-1);
-    m_bDown->Enable(m_selection < m_listCtrl->GetItemCount()-2);
+    if (!(m_style & wxEL_NO_ORDER))
+    {
+        m_bUp->Enable(m_selection != 0 && m_selection < m_listCtrl->GetItemCount()-1);
+        m_bDown->Enable(m_selection < m_listCtrl->GetItemCount()-2);
+    }
+    
     if (m_style & wxEL_ALLOW_EDIT)
         m_bEdit->Enable(m_selection < m_listCtrl->GetItemCount()-1);
     if (m_style & wxEL_ALLOW_DELETE)

 	  	 
