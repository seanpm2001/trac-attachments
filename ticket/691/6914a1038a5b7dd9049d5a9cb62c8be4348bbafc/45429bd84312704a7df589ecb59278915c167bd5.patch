Index: src/common/sckaddr.cpp
===================================================================
--- src/common/sckaddr.cpp	(revision 71783)
+++ src/common/sckaddr.cpp	(working copy)
@@ -47,7 +47,7 @@
 
 #include <errno.h>
 
-#if defined(__UNIX__) && !defined(__CYGWIN__)
+#if defined(__UNIX__) && !defined(__WXMSW__)
     #include <netdb.h>
     #include <arpa/inet.h>
 #endif // __UNIX__
Index: include/wx/msw/missing.h
===================================================================
--- include/wx/msw/missing.h	(revision 71783)
+++ include/wx/msw/missing.h	(working copy)
@@ -521,8 +521,25 @@
 #endif
 
 //Various defines that will be needed by mingw and possibly VC++6
-//Used by the webview library
+//Used by the webview library. Well i686-w64-mingw and x86_64-w64-mingw32
+//in fact define this enum, and define __SHDocVw_LIBRARY_DEFINED__
+//to note that fact... all in exdisp.h
 
+#ifdef __MINGW32__
+
+// Does this include need to be guarded by something that checks if the
+// file is present?
+#include <exdisp.h>
+
+#ifndef __SHDocVw_LIBRARY_DEFINED__
+typedef enum CommandStateChangeConstants {
+    CSC_UPDATECOMMANDS = (int) 0xFFFFFFFF,
+    CSC_NAVIGATEFORWARD = 0x1,
+    CSC_NAVIGATEBACK = 0x2
+} CommandStateChangeConstants;
+#endif
+#endif
+
 #ifndef DISPID_COMMANDSTATECHANGE
 #define DISPID_COMMANDSTATECHANGE 105
 #endif
Index: include/wx/app.h
===================================================================
--- include/wx/app.h	(revision 71783)
+++ include/wx/app.h	(working copy)
@@ -494,7 +494,7 @@
     wxDECLARE_NO_COPY_CLASS(wxAppConsoleBase);
 };
 
-#if defined(__UNIX__) && !defined(__CYGWIN__)
+#if defined(__UNIX__) && !defined(__WXMSW__)
     #include "wx/unix/app.h"
 #else
     // this has to be a class and not a typedef as we forward declare it
Index: include/wx/defs.h
===================================================================
--- include/wx/defs.h	(revision 71783)
+++ include/wx/defs.h	(working copy)
@@ -217,7 +217,7 @@
 
 /* Prevents conflicts between sys/types.h and winsock.h with Cygwin, */
 /* when using Windows sockets. */
-#ifdef __CYGWIN__
+#if defined(__CYGWIN__) && defined(__WXMSW__)
 #define __USE_W32_SOCKETS
 #endif
 
Index: include/wx/private/socket.h
===================================================================
--- include/wx/private/socket.h	(revision 71783)
+++ include/wx/private/socket.h	(working copy)
@@ -51,7 +51,7 @@
    having been defined in sys/types.h" when winsock.h is included later and
    doesn't seem to be necessary anyhow. It's not needed under Mac neither.
  */
-#if !defined(__WXMAC__) && !defined(__CYGWIN__) && !defined(__WXWINCE__)
+#if !defined(__WXMAC__) && !defined(__WXMSW__) && !defined(__WXWINCE__)
 #include <sys/types.h>
 #endif
 
Index: include/wx/evtloop.h
===================================================================
--- include/wx/evtloop.h	(revision 71783)
+++ include/wx/evtloop.h	(working copy)
@@ -17,7 +17,7 @@
 
 // TODO: implement wxEventLoopSource for MSW (it should wrap a HANDLE and be
 //       monitored using MsgWaitForMultipleObjects())
-#if defined(__WXOSX__) || (defined(__UNIX__) && !defined(__CYGWIN__))
+#if defined(__WXOSX__) || (defined(__UNIX__) && !defined(__WXMSW__))
     #define wxUSE_EVENTLOOP_SOURCE 1
 #else
     #define wxUSE_EVENTLOOP_SOURCE 0
@@ -308,7 +308,7 @@
 #endif // wxUSE_GUI
 
 // include the header defining wxConsoleEventLoop for Unix systems
-#if defined(__UNIX__) && !defined(__CYGWIN__)
+#if defined(__UNIX__) && !defined(__WXMSW__)
 #include "wx/unix/evtloop.h"
 #endif
 
