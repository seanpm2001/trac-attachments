Index: include/wx/dataview.h
===================================================================
--- include/wx/dataview.h	(revision 59569)
+++ include/wx/dataview.h	(working copy)
@@ -176,7 +176,7 @@
     virtual wxString GetColumnType( unsigned int col ) const = 0;
 
     // get value into a wxVariant
-    virtual void GetValue( wxVariant &variant,
+    virtual void GetValue( wxVariant* variant,
                            const wxDataViewItem &item, unsigned int col ) const = 0;
 
     // set value, call ValueChanged() afterwards!
@@ -236,7 +236,7 @@
     wxDataViewIndexListModel( unsigned int initial_size = 0 );
     ~wxDataViewIndexListModel();
 
-    virtual void GetValueByRow( wxVariant &variant,
+    virtual void GetValueByRow( wxVariant* variant,
                            unsigned int row, unsigned int col ) const = 0;
 
     virtual bool SetValueByRow( const wxVariant &variant,
@@ -267,7 +267,7 @@
 
     // implement base methods
 
-    virtual void GetValue( wxVariant &variant,
+    virtual void GetValue( wxVariant* variant,
                            const wxDataViewItem &item, unsigned int col ) const;
     virtual bool SetValue( const wxVariant &variant,
                            const wxDataViewItem &item, unsigned int col );
@@ -301,7 +301,7 @@
     wxDataViewVirtualListModel( unsigned int initial_size = 0 );
     ~wxDataViewVirtualListModel();
 
-    virtual void GetValueByRow( wxVariant &variant,
+    virtual void GetValueByRow( wxVariant* variant,
                            unsigned int row, unsigned int col ) const = 0;
 
     virtual bool SetValueByRow( const wxVariant &variant,
@@ -332,7 +332,7 @@
 
     // implement base methods
 
-    virtual void GetValue( wxVariant &variant,
+    virtual void GetValue( wxVariant* variant,
                            const wxDataViewItem &item, unsigned int col ) const;
     virtual bool SetValue( const wxVariant &variant,
                            const wxDataViewItem &item, unsigned int col );
@@ -416,7 +416,7 @@
     // renderer properties:
 
     virtual bool SetValue( const wxVariant& WXUNUSED(value) ) = 0;
-    virtual bool GetValue( wxVariant& WXUNUSED(value) ) const = 0;
+    virtual bool GetValue( wxVariant* WXUNUSED(value) ) const = 0;
 
     wxString GetVariantType() const             { return m_variantType; }
 
@@ -926,7 +926,7 @@
     virtual bool Render( wxRect rect, wxDC *dc, int state );
     virtual wxSize GetSize() const;
     virtual bool SetValue( const wxVariant &value );
-    virtual bool GetValue( wxVariant &value ) const;
+    virtual bool GetValue( wxVariant* value ) const;
 
 private:
     long    m_data;
@@ -951,7 +951,7 @@
     virtual bool Render( wxRect rect, wxDC *dc, int state );
     virtual wxSize GetSize() const;
     virtual bool SetValue( const wxVariant &value );
-    virtual bool GetValue( wxVariant &value ) const;
+    virtual bool GetValue( wxVariant* value ) const;
 
 private:
     wxArrayString m_choices;
@@ -1010,7 +1010,7 @@
 
     virtual wxString GetColumnType( unsigned int col ) const;
 
-    virtual void GetValueByRow( wxVariant &value,
+    virtual void GetValueByRow( wxVariant* value,
                            unsigned int row, unsigned int col ) const;
 
     virtual bool SetValueByRow( const wxVariant &value,
@@ -1080,20 +1080,20 @@
     void SetValue( const wxVariant &value, unsigned int row, unsigned int col )
         { GetStore()->SetValueByRow( value, row, col );
           GetStore()->RowValueChanged( row, col); }
-    void GetValue( wxVariant &value, unsigned int row, unsigned int col )
+    void GetValue( wxVariant* value, unsigned int row, unsigned int col )
         { GetStore()->GetValueByRow( value, row, col ); }
 
     void SetTextValue( const wxString &value, unsigned int row, unsigned int col )
         { GetStore()->SetValueByRow( value, row, col );
           GetStore()->RowValueChanged( row, col); }
     wxString GetTextValue( unsigned int row, unsigned int col ) const
-        { wxVariant value; GetStore()->GetValueByRow( value, row, col ); return value.GetString(); }
+        { wxVariant value; GetStore()->GetValueByRow( &value, row, col ); return value.GetString(); }
 
     void SetToggleValue( bool value, unsigned int row, unsigned int col )
         { GetStore()->SetValueByRow( value, row, col );
           GetStore()->RowValueChanged( row, col); }
     bool GetToggleValue( unsigned int row, unsigned int col ) const
-        { wxVariant value; GetStore()->GetValueByRow( value, row, col ); return value.GetBool(); }
+        { wxVariant value; GetStore()->GetValueByRow( &value, row, col ); return value.GetBool(); }
 
     void OnSize( wxSizeEvent &event );
 
@@ -1220,7 +1220,7 @@
 
     // implement base methods
 
-    virtual void GetValue( wxVariant &variant,
+    virtual void GetValue( wxVariant* variant,
                            const wxDataViewItem &item, unsigned int col ) const;
     virtual bool SetValue( const wxVariant &variant,
                            const wxDataViewItem &item, unsigned int col );
Index: include/wx/generic/dataview.h
===================================================================
--- include/wx/generic/dataview.h	(revision 59569)
+++ include/wx/generic/dataview.h	(working copy)
@@ -128,7 +128,7 @@
                             int align = wxDVR_DEFAULT_ALIGNMENT );
 
     bool SetValue( const wxVariant &value );
-    bool GetValue( wxVariant &value ) const;
+    bool GetValue( wxVariant* value ) const;
 
     bool Render( wxRect cell, wxDC *dc, int state );
     wxSize GetSize() const;
@@ -175,7 +175,7 @@
                               int align = wxDVR_DEFAULT_ALIGNMENT );
 
     bool SetValue( const wxVariant &value );
-    bool GetValue( wxVariant &value ) const;
+    bool GetValue( wxVariant* value ) const;
 
     bool Render( wxRect cell, wxDC *dc, int state );
     wxSize GetSize() const;
@@ -200,7 +200,7 @@
                               int align = wxDVR_DEFAULT_ALIGNMENT );
 
     bool SetValue( const wxVariant &value );
-    bool GetValue( wxVariant &value ) const;
+    bool GetValue( wxVariant* value ) const;
 
     bool Render( wxRect cell, wxDC *dc, int state );
     bool Activate( wxRect cell, wxDataViewModel *model, const wxDataViewItem & item,
@@ -228,7 +228,7 @@
     virtual ~wxDataViewProgressRenderer();
 
     bool SetValue( const wxVariant &value );
-    bool GetValue( wxVariant& value ) const;
+    bool GetValue( wxVariant* value ) const;
 
     virtual bool Render( wxRect cell, wxDC *dc, int state );
     virtual wxSize GetSize() const;
@@ -254,7 +254,7 @@
     virtual ~wxDataViewIconTextRenderer();
 
     bool SetValue( const wxVariant &value );
-    bool GetValue( wxVariant &value ) const;
+    bool GetValue( wxVariant* value ) const;
 
     virtual bool Render( wxRect cell, wxDC *dc, int state );
     virtual wxSize GetSize() const;
@@ -283,7 +283,7 @@
                             int align = wxDVR_DEFAULT_ALIGNMENT );
 
     bool SetValue( const wxVariant &value );
-    bool GetValue( wxVariant& value ) const;
+    bool GetValue( wxVariant* value ) const;
 
     virtual bool Render( wxRect cell, wxDC *dc, int state );
     virtual wxSize GetSize() const;
Index: samples/dataview/dataview.cpp
===================================================================
--- samples/dataview/dataview.cpp	(revision 59569)
+++ samples/dataview/dataview.cpp	(working copy)
@@ -189,7 +189,7 @@
         return true;
     }
 
-    virtual bool GetValue( wxVariant &WXUNUSED(value) ) const { return true; }
+    virtual bool GetValue( wxVariant* WXUNUSED(value) ) const { return true; }
 
 private:
     long m_height;
Index: samples/dataview/mymodels.cpp
===================================================================
--- samples/dataview/mymodels.cpp	(revision 59569)
+++ samples/dataview/mymodels.cpp	(working copy)
@@ -164,8 +164,8 @@
     if (IsContainer(item1) && IsContainer(item2))
     {
         wxVariant value1, value2;
-        GetValue( value1, item1, 0 );
-        GetValue( value2, item2, 0 );
+        GetValue( &value1, item1, 0 );
+        GetValue( &value2, item2, 0 );
 
         wxString str1 = value1.GetString();
         wxString str2 = value2.GetString();
@@ -182,7 +182,7 @@
     return wxDataViewModel::Compare( item1, item2, column, ascending );
 }
 
-void MyMusicTreeModel::GetValue( wxVariant &variant,
+void MyMusicTreeModel::GetValue( wxVariant* variant,
                                  const wxDataViewItem &item, unsigned int col ) const
 {
     wxASSERT(item.IsOk());
@@ -191,30 +191,30 @@
     switch (col)
     {
     case 0:
-        variant = node->m_title;
+        *variant = node->m_title;
         break;
     case 1:
-        variant = node->m_artist;
+        *variant = node->m_artist;
         break;
     case 2:
-        variant = (long) node->m_year;
+        *variant = (long) node->m_year;
         break;
     case 3:
-        variant = node->m_quality;
+        *variant = node->m_quality;
         break;
     case 4:
         // wxMac doesn't conceal the popularity progress renderer, return 0 for containers
         if (IsContainer(item))
-            variant = (long) 0;
+            *variant = (long) 0;
         else
-            variant = (long) 80;  // all music is very 80% popular
+            *variant = (long) 80;  // all music is very 80% popular
         break;
     case 5:
         // Make size of red square depend on year
         if (GetYear(item) < 1900)
-            variant = (long) 35;
+            *variant = (long) 35;
         else
-            variant = (long) 25;
+            *variant = (long) 25;
         break;
 
     default:
@@ -401,27 +401,27 @@
     Reset( m_array.GetCount() + m_virtualItems );
 }
 
-void MyListModel::GetValueByRow( wxVariant &variant,
+void MyListModel::GetValueByRow( wxVariant* variant,
                                  unsigned int row, unsigned int col ) const
 {
     if (col==0)
     {
         if (row >= m_array.GetCount())
-            variant = wxString::Format( "virtual row %d", row );
+            *variant = wxString::Format( "virtual row %d", row );
         else
-            variant = m_array[ row ];
+            *variant = m_array[ row ];
     }
     else if (col==1)
     {
         wxDataViewIconText data( "test", m_icon[ row%2 ] );
-        variant << data;
+        *variant << data;
     }
     else if (col==2)
     {
         if (row >= m_array.GetCount())
-            variant = "plain";
+            *variant = "plain";
         else
-            variant = "blue/green/red";
+            *variant = "blue/green/red";
     }
 }
 
Index: samples/dataview/mymodels.h
===================================================================
--- samples/dataview/mymodels.h	(revision 59569)
+++ samples/dataview/mymodels.h	(working copy)
@@ -158,7 +158,7 @@
         return wxT("string");
     }
 
-    virtual void GetValue( wxVariant &variant,
+    virtual void GetValue( wxVariant* variant,
                            const wxDataViewItem &item, unsigned int col ) const;
     virtual bool SetValue( const wxVariant &variant,
                            const wxDataViewItem &item, unsigned int col );
@@ -218,7 +218,7 @@
         return m_array.GetCount();
     }
 
-    virtual void GetValueByRow( wxVariant &variant,
+    virtual void GetValueByRow( wxVariant* variant,
                                 unsigned int row, unsigned int col ) const;
     virtual bool GetAttrByRow( unsigned int row, unsigned int col, wxDataViewItemAttr &attr );
     virtual bool SetValueByRow( const wxVariant &variant,
Index: src/common/datavcmn.cpp
===================================================================
--- src/common/datavcmn.cpp	(revision 59569)
+++ src/common/datavcmn.cpp	(working copy)
@@ -245,8 +245,8 @@
         return -1;
 
     wxVariant value1,value2;
-    GetValue( value1, item1, column );
-    GetValue( value2, item2, column );
+    GetValue( &value1, item1, column );
+    GetValue( &value2, item2, column );
 
     if (!ascending)
     {
@@ -451,7 +451,7 @@
     return GetRow(item2) - GetRow(item1);
 }
 
-void wxDataViewIndexListModel::GetValue( wxVariant &variant,
+void wxDataViewIndexListModel::GetValue( wxVariant* variant,
                            const wxDataViewItem &item, unsigned int col ) const
 {
     GetValueByRow( variant, GetRow(item), col );
@@ -598,7 +598,7 @@
        return pos2 - pos1;
 }
 
-void wxDataViewVirtualListModel::GetValue( wxVariant &variant,
+void wxDataViewVirtualListModel::GetValue( wxVariant* variant,
                            const wxDataViewItem &item, unsigned int col ) const
 {
     GetValueByRow( variant, GetRow(item), col );
@@ -692,7 +692,7 @@
 
     unsigned int col = GetOwner()->GetModelColumn();
     wxVariant value;
-    GetOwner()->GetOwner()->GetModel()->GetValue( value, item, col );
+    GetOwner()->GetOwner()->GetModel()->GetValue( &value, item, col );
 
     m_editorCtrl = CreateEditorCtrl( GetOwner()->GetOwner()->GetMainWindow(), labelRect, value );
     (void) new wxKillRef( m_editorCtrl.get() );
@@ -1295,9 +1295,9 @@
     return true;
 }
 
-bool wxDataViewSpinRenderer::GetValue( wxVariant &value ) const
+bool wxDataViewSpinRenderer::GetValue( wxVariant* value ) const
 {
-    value = m_data;
+    *value = m_data;
     return true;
 }
 
@@ -1351,9 +1351,9 @@
     return true;
 }
 
-bool wxDataViewChoiceRenderer::GetValue( wxVariant &value ) const
+bool wxDataViewChoiceRenderer::GetValue( wxVariant* value ) const
 {
-    value = m_data;
+    *value = m_data;
     return true;
 }
 
@@ -1452,10 +1452,10 @@
     Reset( 0 );
 }
 
-void wxDataViewListStore::GetValueByRow( wxVariant &value, unsigned int row, unsigned int col ) const
+void wxDataViewListStore::GetValueByRow( wxVariant* value, unsigned int row, unsigned int col ) const
 {
     wxDataViewListStoreLine *line = m_data[row];
-    value = line->m_values[col];
+    *value = line->m_values[col];
 }
 
 bool wxDataViewListStore::SetValueByRow( const wxVariant &value, unsigned int row, unsigned int col )
@@ -1863,7 +1863,7 @@
 }
 
 void
-wxDataViewTreeStore::GetValue(wxVariant &variant,
+wxDataViewTreeStore::GetValue(wxVariant* variant,
                               const wxDataViewItem &item,
                               unsigned int WXUNUSED(col)) const
 {
@@ -1882,7 +1882,7 @@
 
     wxDataViewIconText data( node->GetText(), icon );
 
-    variant << data;
+    *variant << data;
 }
 
 bool
Index: src/generic/datavgen.cpp
===================================================================
--- src/generic/datavgen.cpp	(revision 59569)
+++ src/generic/datavgen.cpp	(working copy)
@@ -703,7 +703,7 @@
     return true;
 }
 
-bool wxDataViewTextRenderer::GetValue( wxVariant& WXUNUSED(value) ) const
+bool wxDataViewTextRenderer::GetValue( wxVariant* WXUNUSED(value) ) const
 {
     return false;
 }
@@ -818,7 +818,7 @@
     return true;
 }
 
-bool wxDataViewBitmapRenderer::GetValue( wxVariant& WXUNUSED(value) ) const
+bool wxDataViewBitmapRenderer::GetValue( wxVariant* WXUNUSED(value) ) const
 {
     return false;
 }
@@ -863,7 +863,7 @@
     return true;
 }
 
-bool wxDataViewToggleRenderer::GetValue( wxVariant &WXUNUSED(value) ) const
+bool wxDataViewToggleRenderer::GetValue( wxVariant* WXUNUSED(value) ) const
 {
     return false;
 }
@@ -931,9 +931,9 @@
     return true;
 }
 
-bool wxDataViewProgressRenderer::GetValue( wxVariant &value ) const
+bool wxDataViewProgressRenderer::GetValue( wxVariant* value ) const
 {
-    value = (long) m_value;
+    *value = (long) m_value;
     return true;
 }
 
@@ -1029,9 +1029,9 @@
     return true;
 }
 
-bool wxDataViewDateRenderer::GetValue( wxVariant &value ) const
+bool wxDataViewDateRenderer::GetValue( wxVariant* value ) const
 {
-    value = m_date;
+    *value = m_date;
     return true;
 }
 
@@ -1055,7 +1055,7 @@
                                     const wxDataViewItem & item, unsigned int col )
 {
     wxVariant variant;
-    model->GetValue( variant, item, col );
+    model->GetValue( &variant, item, col );
     wxDateTime value = variant.GetDateTime();
 
 #if wxUSE_DATE_RENDERER_POPUP
@@ -1095,7 +1095,7 @@
     return true;
 }
 
-bool wxDataViewIconTextRenderer::GetValue( wxVariant& WXUNUSED(value) ) const
+bool wxDataViewIconTextRenderer::GetValue( wxVariant* WXUNUSED(value) ) const
 {
     return false;
 }
@@ -1587,7 +1587,7 @@
 
         wxVariant value;
         wxDataViewItem item = GetItemByRow( row );
-        model->GetValue( value, item, column->GetModelColumn());
+        model->GetValue( &value, item, column->GetModelColumn());
         cell->SetValue( value );
 
         if (cell->GetWantsAttr())
@@ -1811,7 +1811,7 @@
                 dataitem = wxDataViewItem( wxUIntToPtr(item) );
             }
 
-            model->GetValue( value, dataitem, col->GetModelColumn());
+            model->GetValue( &value, dataitem, col->GetModelColumn());
             cell->SetValue( value );
 
             if (cell->GetWantsAttr())
@@ -2606,7 +2606,7 @@
                     continue;      // skip it!
 
                 wxVariant value;
-                model->GetValue( value, item, column->GetModelColumn() );
+                model->GetValue( &value, item, column->GetModelColumn() );
 
                 wxDataViewRenderer *renderer =
                     const_cast<wxDataViewRenderer*>(column->GetRenderer());
@@ -2669,7 +2669,7 @@
                 continue;      // skip it!
 
             wxVariant value;
-            model->GetValue( value, item, column->GetModelColumn() );
+            model->GetValue( &value, item, column->GetModelColumn() );
 
             wxDataViewRenderer *renderer =
                 const_cast<wxDataViewRenderer*>(column->GetRenderer());
@@ -2722,7 +2722,7 @@
                 continue;      // skip it!
 
             wxVariant value;
-            model->GetValue( value, item, column->GetModelColumn() );
+            model->GetValue( &value, item, column->GetModelColumn() );
 
             wxDataViewRenderer *renderer =
                 const_cast<wxDataViewRenderer*>(column->GetRenderer());
@@ -3686,7 +3686,7 @@
             if ((!ignore_other_columns) && (cell->GetMode() == wxDATAVIEW_CELL_ACTIVATABLE))
             {
                 wxVariant value;
-                model->GetValue( value, item, col->GetModelColumn() );
+                model->GetValue( &value, item, col->GetModelColumn() );
                 cell->SetValue( value );
                 wxRect cell_rect( xpos, GetLineStart( current ),
                                 col->GetWidth(), GetLineHeight( current ) );
@@ -3761,7 +3761,7 @@
         }
 
         wxVariant value;
-        model->GetValue( value, item, col->GetModelColumn() );
+        model->GetValue( &value, item, col->GetModelColumn() );
         wxWindow *parent = GetParent();
         wxDataViewEvent le(wxEVT_COMMAND_DATAVIEW_ITEM_CONTEXT_MENU, parent->GetId());
         le.SetItem( item );
@@ -3859,7 +3859,7 @@
         {
             // notify cell about right click
             wxVariant value;
-            model->GetValue( value, item, col->GetModelColumn() );
+            model->GetValue( &value, item, col->GetModelColumn() );
             cell->SetValue( value );
             wxRect cell_rect( xpos, GetLineStart( current ),
                               col->GetWidth(), GetLineHeight( current ) );
Index: src/gtk/dataview.cpp
===================================================================
--- src/gtk/dataview.cpp	(revision 59569)
+++ src/gtk/dataview.cpp	(working copy)
@@ -585,7 +585,7 @@
         wxVariant variant;
         g_value_init( value, G_TYPE_STRING );
         wxDataViewItem item( (void*) iter->user_data );
-        model->GetValue( variant, item, (unsigned int) column );
+        model->GetValue( &variant, item, (unsigned int) column );
 
         g_value_set_string( value, variant.GetString().utf8_str() );
     }
@@ -1766,7 +1766,7 @@
     return true;
 }
 
-bool wxDataViewTextRenderer::GetValue( wxVariant &value ) const
+bool wxDataViewTextRenderer::GetValue( wxVariant* value ) const
 {
     GValue gvalue = { 0, };
     g_value_init( &gvalue, G_TYPE_STRING );
@@ -1774,7 +1774,7 @@
     wxString tmp = wxGTK_CONV_BACK_FONT( g_value_get_string( &gvalue ), const_cast<wxDataViewTextRenderer*>(this)->GetOwner()->GetOwner()->GetFont() );
     g_value_unset( &gvalue );
 
-    value = tmp;
+    *value = tmp;
 
     return true;
 }
@@ -1869,7 +1869,7 @@
     return false;
 }
 
-bool wxDataViewBitmapRenderer::GetValue( wxVariant &WXUNUSED(value) ) const
+bool wxDataViewBitmapRenderer::GetValue( wxVariant* WXUNUSED(value) ) const
 {
     return false;
 }
@@ -1954,7 +1954,7 @@
     return true;
 }
 
-bool wxDataViewToggleRenderer::GetValue( wxVariant &value ) const
+bool wxDataViewToggleRenderer::GetValue( wxVariant* value ) const
 {
     GValue gvalue = { 0, };
     g_value_init( &gvalue, G_TYPE_BOOLEAN );
@@ -1962,7 +1962,7 @@
     bool tmp = g_value_get_boolean( &gvalue );
     g_value_unset( &gvalue );
 
-    value = tmp;
+    *value = tmp;
 
     return true;
 }
@@ -2161,7 +2161,7 @@
     return true;
 }
 
-bool wxDataViewProgressRenderer::GetValue( wxVariant &WXUNUSED(value) ) const
+bool wxDataViewProgressRenderer::GetValue( wxVariant* WXUNUSED(value) ) const
 {
     return false;
 }
@@ -2263,7 +2263,7 @@
     return true;
 }
 
-bool wxDataViewChoiceRenderer::GetValue( wxVariant &value ) const
+bool wxDataViewChoiceRenderer::GetValue( wxVariant* value ) const
 {
 #ifdef __WXGTK26__
     if (!gtk_check_version(2,6,0))
@@ -2274,14 +2274,14 @@
         wxString temp = wxGTK_CONV_BACK_FONT( g_value_get_string( &gvalue ),
                 const_cast<wxDataViewChoiceRenderer*>(this)->GetOwner()->GetOwner()->GetFont() );
         g_value_unset( &gvalue );
-        value = temp;
+        *value = temp;
 
         //wxPrintf( "temp %s\n", temp );
         // TODO: remove this code
     }
     else
 #endif
-        value = m_data;
+        *value = m_data;
 
     return true;
 }
@@ -2373,7 +2373,7 @@
     return true;
 }
 
-bool wxDataViewDateRenderer::GetValue( wxVariant &WXUNUSED(value) ) const
+bool wxDataViewDateRenderer::GetValue( wxVariant* WXUNUSED(value) ) const
 {
     return false;
 }
@@ -2398,7 +2398,7 @@
                                        const wxDataViewItem &item, unsigned int col )
 {
     wxVariant variant;
-    model->GetValue( variant, item, col );
+    model->GetValue( &variant, item, col );
     wxDateTime value = variant.GetDateTime();
 
     wxDataViewDateRendererPopupTransient *popup = new wxDataViewDateRendererPopupTransient(
@@ -2436,7 +2436,7 @@
     return true;
 }
 
-bool wxDataViewIconTextRenderer::GetValue( wxVariant &WXUNUSED(value) ) const
+bool wxDataViewIconTextRenderer::GetValue( wxVariant* WXUNUSED(value) ) const
 {
     return false;
 }
@@ -2579,7 +2579,7 @@
     }
 
     wxVariant value;
-    wx_model->GetValue( value, item, cell->GetOwner()->GetModelColumn() );
+    wx_model->GetValue( &value, item, cell->GetOwner()->GetModelColumn() );
 
     if (value.GetType() != cell->GetVariantType())
         wxLogError( wxT("Wrong type, required: %s but: %s"),
Index: src/osx/carbon/dataview.cpp
===================================================================
--- src/osx/carbon/dataview.cpp	(revision 59569)
+++ src/osx/carbon/dataview.cpp	(working copy)
@@ -226,7 +226,7 @@
             if (renderer)
             {
                 wxVariant value;
-                model->GetValue( value, item, column->GetModelColumn() );
+                model->GetValue( &value, item, column->GetModelColumn() );
                 renderer->SetValue( value );
                 height = wxMax( height, renderer->GetSize().y );
             }
@@ -286,7 +286,7 @@
                 if (renderer)
                 {
                     wxVariant value;
-                    model->GetValue( value, item, column->GetModelColumn() );
+                    model->GetValue( &value, item, column->GetModelColumn() );
                     renderer->SetValue( value );
                     height = wxMax( height, renderer->GetSize().y );
                 }
