Index: include/wx/msw/toolbar.h
===================================================================
--- include/wx/msw/toolbar.h	(revision 71335)
+++ include/wx/msw/toolbar.h	(working copy)
@@ -67,6 +67,7 @@
 
     void OnMouseEvent(wxMouseEvent& event);
     void OnSysColourChanged(wxSysColourChangedEvent& event);
+    void OnEraseBackground(wxEraseEvent& event);
 
     void SetFocus() {}
 
Index: src/msw/toolbar.cpp
===================================================================
--- src/msw/toolbar.cpp	(revision 71335)
+++ src/msw/toolbar.cpp	(working copy)
@@ -127,6 +127,7 @@
 BEGIN_EVENT_TABLE(wxToolBar, wxToolBarBase)
     EVT_MOUSE_EVENTS(wxToolBar::OnMouseEvent)
     EVT_SYS_COLOUR_CHANGED(wxToolBar::OnSysColourChanged)
+    EVT_ERASE_BACKGROUND(wxToolBar::OnEraseBackground)
 END_EVENT_TABLE()
 
 // ----------------------------------------------------------------------------
@@ -340,7 +341,10 @@
     // in WM_ERASEBKGND too (by default this won't be done but if the toolbar
     // has a non default background colour, then it would be used in both
     // places resulting in flicker)
-    SetBackgroundStyle(wxBG_STYLE_PAINT);
+    if (wxApp::GetComCtl32Version() >= 600)
+    {
+        SetBackgroundStyle(wxBG_STYLE_PAINT);
+    }
 
     return true;
 }
@@ -1679,6 +1683,14 @@
     }
 }
 
+// This handler is required for comctl32 < 6.0 to allow the toolbar to be
+// set to a non-default colour: for example, when it must blend in with a
+// notebook page.
+void wxToolBar::OnEraseBackground(wxEraseEvent& event)
+{
+    MSWDoEraseBackground(event.GetDC()->GetHDC());
+}
+
 bool wxToolBar::HandleSize(WXWPARAM WXUNUSED(wParam), WXLPARAM lParam)
 {
     // wait until we have some tools
