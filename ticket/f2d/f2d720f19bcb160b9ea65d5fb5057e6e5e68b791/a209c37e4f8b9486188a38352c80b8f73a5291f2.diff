diff --git a/include/wx/filename.h b/include/wx/filename.h
index b351bf4..1e421bf 100644
--- a/include/wx/filename.h
+++ b/include/wx/filename.h
@@ -108,6 +108,21 @@ enum
     wxPATH_RMDIR_RECURSIVE  = 0x0002   // delete all recursively (dangerous!)
 };
 
+// Flags for XXXExists() and wxFileSystemObjectExists()
+enum wxFSItem
+{
+    wxFSItem_File     = 1,        // file existence
+    wxFSItem_Dir      = 2,        // directory existence
+    wxFSItem_Symlink  = 4,        // symbolic link existence
+    wxFSItem_Other    = 8,        // existence of something else, e.g.
+                                      // device, socket, FIFO under Unix
+    wxFSItem_Any      = 15,       // existence of anything at all
+
+    wxFSItem_DontFollowLink = 16  // If the path is a symlink,
+                                      // don't dereference it
+};
+
+
 #if wxUSE_LONGLONG
 // error code of wxFileName::GetSize()
 extern WXDLLIMPEXP_DATA_BASE(const wxULongLong) wxInvalidSize;
@@ -132,13 +147,13 @@ public:
         // is contructed (the name will be empty), otherwise a file name and
         // extension are extracted from it
     wxFileName( const wxString& fullpath, wxPathFormat format = wxPATH_NATIVE )
-        { Assign( fullpath, format ); }
+        { Assign( fullpath, format ); m_dontFollowLinks = false; }
 
         // from a directory name and a file name
     wxFileName(const wxString& path,
                const wxString& name,
                wxPathFormat format = wxPATH_NATIVE)
-        { Assign(path, name, format); }
+        { Assign(path, name, format); m_dontFollowLinks = false; }
 
         // from a volume, directory name, file base name and extension
     wxFileName(const wxString& volume,
@@ -146,14 +161,14 @@ public:
                const wxString& name,
                const wxString& ext,
                wxPathFormat format = wxPATH_NATIVE)
-        { Assign(volume, path, name, ext, format); }
+        { Assign(volume, path, name, ext, format); m_dontFollowLinks = false; }
 
         // from a directory name, file base name and extension
     wxFileName(const wxString& path,
                const wxString& name,
                const wxString& ext,
                wxPathFormat format = wxPATH_NATIVE)
-        { Assign(path, name, ext, format); }
+        { Assign(path, name, ext, format); m_dontFollowLinks = false; }
 
         // the same for delayed initialization
 
@@ -193,7 +208,7 @@ public:
         { if (this != &filename) Assign(filename); return *this; }
 
     wxFileName& operator=(const wxString& filename)
-        { Assign(filename); return *this; }
+        { Assign(filename);  m_dontFollowLinks = false; return *this; }
 
         // reset all components to default, uninitialized state
     void Clear();
@@ -216,16 +231,24 @@ public:
 
         // does the file with this name exist?
     bool FileExists() const;
-    static bool FileExists( const wxString &file );
+        // does a file with this path exist?
+        // if flags & wxFSItem_DontFollowLink, don't dereference any symlink
+    static bool FileExists(const wxString& path, int flags = 0);
 
         // does the directory with this name exist?
     bool DirExists() const;
-    static bool DirExists( const wxString &dir );
+        // does a directory with this path exist?
+        // if flags & wxFSItem_DontFollowLink, don't dereference any symlink
+    static bool DirExists(const wxString& path, int flags = 0);
 
         // does anything at all with this name (i.e. file, directory or some
         // other file system object such as a device, socket, ...) exist?
-    bool Exists() const { return Exists(GetFullPath()); }
-    static bool Exists(const wxString& path);
+    bool Exists() const { return Exists(GetFullPath(),
+                            ShouldFollowLink() ? 0 : wxFSItem_DontFollowLink); }
+    
+        // does anything at all exist with this path?
+        // if flags & wxFSItem_DontFollowLink, don't dereference any symlink
+    static bool Exists(const wxString& path, int flags = 0);
 
 
         // checks on most common flags for files/directories;
@@ -367,6 +390,23 @@ public:
         { return Normalize(wxPATH_NORM_DOTS | wxPATH_NORM_ABSOLUTE |
                            wxPATH_NORM_TILDE, cwd, format); }
 
+    // If the path is a symbolic link (Unix-only), indicate that all
+    // filesystem operations on this path should be performed on the link
+    // itself and not on the file it points to, as is the case by default.
+    //
+    // No effect if this is not a symbolic link.
+    void DontFollowLink(bool dontFollow)
+    {
+        m_dontFollowLinks = dontFollow;
+    }
+
+    // If the path is a symbolic link (Unix-only), returns whether various
+    // file operations should act on the link itself, or on its target.
+    bool ShouldFollowLink() const
+    {
+        return !m_dontFollowLinks;
+    }
+
 #if defined(__WIN32__) && !defined(__WXWINCE__) && wxUSE_OLE
         // if the path is a shortcut, return the target and optionally,
         // the arguments
@@ -606,6 +646,10 @@ private:
     // the difference is important as file with name "foo" and without
     // extension has full name "foo" while with empty extension it is "foo."
     bool            m_hasExt;
+
+    // Should symlinks be dereferenced?
+    // See DontFollowLink() and ShouldFollowLink()
+    bool            m_dontFollowLinks;
 };
 
 #endif // _WX_FILENAME_H_
diff --git a/interface/wx/filename.h b/interface/wx/filename.h
index 0c8171b..14fbd14 100644
--- a/interface/wx/filename.h
+++ b/interface/wx/filename.h
@@ -91,6 +91,19 @@ enum
 };
 
 /**
+    Flags used in e.g.\ FileExists(), and internally in wxFileSystemObjectExists()
+ */
+enum wxFSItem
+{
+    wxFSItem_File     = 1,        //!< file existence
+    wxFSItem_Dir      = 2,        //!< directory existence
+    wxFSItem_Symlink  = 4,        //!< symbolic link existence
+    wxFSItem_Other    = 8,        //!< existence of something else, e.g. device, socket, FIFO under Unix
+    wxFSItem_Any      = 15,       //!< existence of anything at all
+    wxFSItem_DontFollowLink = 16  //!< If the path is a symlink, don't dereference it
+};
+
+/**
     The return value of wxFileName::GetSize() in case of error.
 */
 wxULongLong wxInvalidSize;
@@ -472,10 +485,12 @@ public:
 
     /**
         Returns @true if the directory with name @a dir exists.
+        Don't dereference @a dir if it is a symbolic link and @a flags contains
+        wxFSItem_DontFollowLink.
 
         @see FileExists(), Exists()
     */
-    static bool DirExists(const wxString& dir);
+    static bool DirExists(const wxString& dir, int flags = 0);
 
     /**
         Returns the object corresponding to the directory with the given name.
@@ -483,8 +498,22 @@ public:
     */
     static wxFileName DirName(const wxString& dir,
                               wxPathFormat format = wxPATH_NATIVE);
+ 
+   /**
+        Sets whether this symbolic link should be dereferenced.
+        
+        If the contained path is a symbolic link (Unix-only) and @ dontFollow is true,
+        all filesystem operations on this path should be performed on the link itself,
+        not on the file it points to, as is the default behaviour.
+        
+        No effect if the path is not a symbolic link.
+        
+        @see ShouldFollowLink()
+        @since 2.9.5
+    */
+    void DontFollowLink(bool dontFollow);
 
-    /**
+     /**
         Calls the static overload of this function with the full path of this
         object.
 
@@ -496,6 +525,9 @@ public:
         Returns @true if either a file or a directory or something else with
         this name exists in the file system.
 
+        Don't dereference @a path if it is a symbolic link  and @a flags
+        contains wxFSItem_DontFollowLink.
+
         This method is equivalent to @code FileExists() || DirExists() @endcode
         under most systems but under Unix it also returns true if the file
         identifies a special file system object such as a device, a socket or a
@@ -505,7 +537,7 @@ public:
 
         @see FileExists(), DirExists()
      */
-    static bool Exists(const wxString& path);
+    static bool Exists(const wxString& path, int flags = 0);
 
     /**
         Returns @true if the file with this name exists.
@@ -516,10 +548,12 @@ public:
 
     /**
         Returns @true if the file with name @a file exists.
+        Don't dereference @a file if it is a symbolic link and @a flags contains
+        wxFSItem_DontFollowLink.
 
         @see DirExists(), Exists()
     */
-    static bool FileExists(const wxString& file);
+    static bool FileExists(const wxString& file, int flags = 0);
 
     /**
         Returns the file name object corresponding to the given @e file. This
@@ -1206,6 +1240,15 @@ public:
     */
     void SetVolume(const wxString& volume);
 
+   /**
+        If the path is a symbolic link (Unix-only), returns whether various
+        file operations should act on the link itself, or on its target.
+        
+        @see DontFollowLink()
+        @since 2.9.5
+    */
+    bool ShouldFollowLink() const;
+
     //@{
     /**
         This function splits a full file name into components: the volume (with the
diff --git a/src/common/filename.cpp b/src/common/filename.cpp
index 9d712ce..dd1f080 100644
--- a/src/common/filename.cpp
+++ b/src/common/filename.cpp
@@ -357,6 +357,7 @@ void wxFileName::Assign( const wxFileName &filepath )
     m_ext = filepath.GetExt();
     m_relative = filepath.m_relative;
     m_hasExt = filepath.m_hasExt;
+    m_dontFollowLinks = filepath.m_dontFollowLinks;
 }
 
 void wxFileName::Assign(const wxString& volume,
@@ -566,6 +567,8 @@ void wxFileName::Clear()
 
     // nor any extension
     m_hasExt = false;
+
+    m_dontFollowLinks = false;
 }
 
 /* static */
@@ -589,16 +592,6 @@ wxFileName wxFileName::DirName(const wxString& dir, wxPathFormat format)
 namespace
 {
 
-// Flags for wxFileSystemObjectExists() asking it to check for:
-enum
-{
-    wxFileSystemObject_File  = 1,   // file existence
-    wxFileSystemObject_Dir   = 2,   // directory existence
-    wxFileSystemObject_Other = 4,   // existence of something else, e.g.
-                                    // device, socket, FIFO under Unix
-    wxFileSystemObject_Any   = 7    // existence of anything at all
-};
-
 #if defined(__WINDOWS__) && !defined(__WXMICROWIN__)
 
 void RemoveTrailingSeparatorsFromPath(wxString& strPath)
@@ -627,8 +620,9 @@ bool wxFileSystemObjectExists(const wxString& path, int flags)
 {
     // Should the existence of file/directory with this name be accepted, i.e.
     // result in the true return value from this function?
-    const bool acceptFile = (flags & wxFileSystemObject_File) != 0;
-    const bool acceptDir  = (flags & wxFileSystemObject_Dir) != 0;
+    const bool acceptFile     = (flags & wxFSItem_File) != 0;
+    const bool acceptDir      = (flags & wxFSItem_Dir) != 0;
+    const bool acceptSymlink  = (flags & wxFSItem_Symlink) != 0;
 
     wxString strPath(path);
 
@@ -676,22 +670,33 @@ bool wxFileSystemObjectExists(const wxString& path, int flags)
     // We consider that the path must exist if we get a sharing violation for
     // it but we don't know what is it in this case.
     if ( rc == ERROR_SHARING_VIOLATION )
-        return flags & wxFileSystemObject_Other;
+        return flags & wxFSItem_Other;
 
     // Any other error (usually ERROR_PATH_NOT_FOUND), means there is nothing
     // there.
     return false;
 #else // Non-MSW, non-OS/2
     wxStructStat st;
-    if ( wxStat(strPath, &st) != 0 )
+    int ret;
+    if (flags & wxFSItem_DontFollowLink)
+    {
+        ret = wxLstat(strPath, &st);
+    }
+    else
+    {
+        ret = wxStat(strPath, &st);
+    } 
+    if (ret != 0)
         return false;
 
     if ( S_ISREG(st.st_mode) )
         return acceptFile;
     if ( S_ISDIR(st.st_mode) )
         return acceptDir;
+    if ( S_ISLNK(st.st_mode) )
+        return acceptSymlink;
 
-    return flags & wxFileSystemObject_Other;
+    return flags & wxFSItem_Other;
 #endif // Platforms
 }
 
@@ -699,30 +704,32 @@ bool wxFileSystemObjectExists(const wxString& path, int flags)
 
 bool wxFileName::FileExists() const
 {
-    return wxFileName::FileExists( GetFullPath() );
+    return FileExists(GetFullPath(),
+                        ShouldFollowLink() ? 0 : wxFSItem_DontFollowLink);
 }
 
 /* static */
-bool wxFileName::FileExists( const wxString &filePath )
+bool wxFileName::FileExists(const wxString& filePath, int flags /*= 0*/)
 {
-    return wxFileSystemObjectExists(filePath, wxFileSystemObject_File);
+    return wxFileSystemObjectExists(filePath, flags | wxFSItem_File);
 }
 
 bool wxFileName::DirExists() const
 {
-    return wxFileName::DirExists( GetPath() );
+    return DirExists(GetFullPath(),
+                        ShouldFollowLink() ? 0 : wxFSItem_DontFollowLink);
 }
 
 /* static */
-bool wxFileName::DirExists( const wxString &dirPath )
+bool wxFileName::DirExists(const wxString& dirPath, int flags /*= 0*/)
 {
-    return wxFileSystemObjectExists(dirPath, wxFileSystemObject_Dir);
+    return wxFileSystemObjectExists(dirPath, flags | wxFSItem_Dir);
 }
 
 /* static */
-bool wxFileName::Exists(const wxString& path)
+bool wxFileName::Exists(const wxString& path, int flags /*= 0*/)
 {
-    return wxFileSystemObjectExists(path, wxFileSystemObject_Any);
+    return wxFileSystemObjectExists(path, flags | wxFSItem_Any);
 }
 
 // ----------------------------------------------------------------------------
@@ -1779,8 +1786,9 @@ bool wxFileName::SameAs(const wxFileName& filepath, wxPathFormat format) const
 
 #if defined(__UNIX__)
     wxStructStat st1, st2;
-    if ( wxStat(fn1.GetFullPath(), &st1) == 0 &&
-            wxStat(fn2.GetFullPath(), &st2) == 0 )
+    int ret = fn1.ShouldFollowLink() ? wxStat(fn1.GetFullPath(), &st1)
+                                     : wxLstat(fn1.GetFullPath(), &st1);
+    if (ret == 0 && wxStat(fn2.GetFullPath(), &st2) == 0)
     {
         if ( st1.st_ino == st2.st_ino && st1.st_dev == st2.st_dev )
             return true;
@@ -2647,7 +2655,9 @@ bool wxFileName::GetTimes(wxDateTime *dtAccess,
 #elif defined(__UNIX_LIKE__) || defined(__WXMAC__) || defined(__OS2__) || (defined(__DOS__) && defined(__WATCOMC__))
     // no need to test for IsDir() here
     wxStructStat stBuf;
-    if ( wxStat( GetFullPath(), &stBuf) == 0 )
+    int ret = ShouldFollowLink() ? wxStat(GetFullPath(), &stBuf)
+                                 : wxLstat(GetFullPath(), &stBuf);
+    if (ret == 0)
     {
         // Android defines st_*time fields as unsigned long, but time_t as long,
         // hence the static_casts.
diff --git a/src/unix/dir.cpp b/src/unix/dir.cpp
index f274a20..c1af1e8 100644
--- a/src/unix/dir.cpp
+++ b/src/unix/dir.cpp
@@ -31,6 +31,7 @@
 
 #include "wx/dir.h"
 #include "wx/filefn.h"          // for wxMatchWild
+#include "wx/filename.h"
 
 #include <sys/types.h>
 #include <sys/stat.h>
@@ -149,13 +150,18 @@ bool wxDirData::Read(wxString *filename)
             break;
         }
 
-        // check the type now
-        if ( !(m_flags & wxDIR_FILES) && !wxDir::Exists(path + de_d_name) )
+        // check the type now. 
+        // NB don't use wxDir::Exists in case of a symlink-to-dir
+        if ( !(m_flags & wxDIR_FILES) && 
+                            !wxFileName::DirExists(path + de_d_name,
+                                                   wxFSItem_DontFollowLink) )
         {
             // it's a file, but we don't want them
             continue;
         }
-        else if ( !(m_flags & wxDIR_DIRS) && wxDir::Exists(path + de_d_name) )
+        else if ( !(m_flags & wxDIR_DIRS) && 
+                             wxFileName::DirExists(path + de_d_name,
+                                                   wxFSItem_DontFollowLink) )
         {
             // it's a dir, and we don't want it
             continue;
