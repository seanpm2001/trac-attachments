Index: samples/minimal/minimal.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWindows/samples/minimal/minimal.cpp,v
retrieving revision 1.76
diff -u -2 -r1.76 minimal.cpp
--- samples/minimal/minimal.cpp	2006/12/11 09:33:34	1.76
+++ samples/minimal/minimal.cpp	2007/05/09 18:39:47
@@ -184,6 +184,103 @@
 }
 
+class AddDialog: public wxDialog {
+public:
+    // begin wxGlade: AddDialog::ids
+    // end wxGlade
+
+    AddDialog();
+	
+private:
+    // begin wxGlade: AddDialog::methods
+    void set_properties();
+    void do_layout();
+    // end wxGlade
+
+protected:
+    // begin wxGlade: AddDialog::attributes
+    wxStaticText* label_3;
+    wxTextCtrl* TextBoxN;
+    wxStaticText* label_4;
+    wxTextCtrl* TextBoxS;
+    wxStaticText* label_5;
+    wxChoice* ChoiceS;
+    wxStaticText* label_1;
+    wxListBox* ListNameSub;
+    // end wxGlade
+};
+
+AddDialog::AddDialog()
+: wxDialog(NULL, -1, _T("test"), wxDefaultPosition, wxDefaultSize,
+             wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER)
+{
+    // begin wxGlade: AddDialog::AddDialog
+    label_3 = new wxStaticText(this, -1, _("1"));
+    TextBoxN = new wxTextCtrl(this, -1, wxT(""));
+    label_4 = new wxStaticText(this, -1, _("2"));
+    TextBoxS = new wxTextCtrl(this, -1, wxT(""));
+    label_5 = new wxStaticText(this, -1, _("3"));
+    const wxString ChoiceStatus_choices[] = {
+        _("1"),
+        _("2"),
+        _("3"),
+        _("4"),
+        _("5"),
+        _("6"),
+        _("7"),
+        _("8"),
+        _("9")
+    };
+    ChoiceS = new wxChoice(this, -1, wxDefaultPosition, wxDefaultSize, 9, ChoiceStatus_choices, 0);
+    label_1 = new wxStaticText(this, -1, _("4"));
+    const wxString ListNameSub_choices[] = {
+        _T("First"),
+        _T("Second"),
+    };
+    ListNameSub = new wxListBox(this, -1, wxDefaultPosition, wxDefaultSize, 0, ListNameSub_choices, wxLB_SINGLE);
+
+//    set_properties();
+    do_layout();
+    // end wxGlade
+}
+
+void AddDialog::do_layout()
+{
+    // begin wxGlade: AddDialog::do_layout
+    wxBoxSizer* sizer_3 = new wxBoxSizer(wxVERTICAL);
+    wxBoxSizer* sizer_4 = new wxBoxSizer(wxHORIZONTAL);
+    wxBoxSizer* sizer_5 = new wxBoxSizer(wxVERTICAL);
+    wxBoxSizer* sizer_okcan = new wxBoxSizer(wxHORIZONTAL);
+    wxBoxSizer* sizer_1 = new wxBoxSizer(wxHORIZONTAL);
+    wxFlexGridSizer* grid_sizer_1 = new wxFlexGridSizer(3, 2, 3, 10);
+    sizer_3->Add(20, 10, 0, wxFIXED_MINSIZE, 0);
+    sizer_4->Add(10, 20, 0, wxADJUST_MINSIZE, 0);
+    grid_sizer_1->Add(label_3, 0, wxFIXED_MINSIZE, 0);
+    grid_sizer_1->Add(TextBoxN, 0, wxEXPAND|wxFIXED_MINSIZE, 0);
+    grid_sizer_1->Add(label_4, 0, wxFIXED_MINSIZE, 0);
+    grid_sizer_1->Add(TextBoxS, 0, wxEXPAND|wxFIXED_MINSIZE, 0);
+    grid_sizer_1->Add(label_5, 0, wxFIXED_MINSIZE, 0);
+    grid_sizer_1->Add(ChoiceS, 0, wxEXPAND|wxFIXED_MINSIZE, 0);
+    grid_sizer_1->AddGrowableCol(1);
+    sizer_1->Add(grid_sizer_1, 1, wxEXPAND, 0);
+    sizer_5->Add(sizer_1, 1, wxEXPAND|wxALIGN_CENTER_HORIZONTAL, 0);
+    sizer_5->Add(20, 20, 0, wxFIXED_MINSIZE, 0);
+    sizer_5->Add(label_1, 0, wxALIGN_CENTER_HORIZONTAL|wxFIXED_MINSIZE, 0);
+    sizer_5->Add(ListNameSub, 1, wxEXPAND|wxFIXED_MINSIZE, 0);
+    sizer_5->Add(20, 10, 0, wxFIXED_MINSIZE, 0);
+    sizer_5->Add(sizer_okcan, 0, wxALIGN_CENTER_HORIZONTAL, 0);
+    sizer_4->Add(sizer_5, 1, wxEXPAND, 0);
+    sizer_4->Add(10, 20, 0, wxADJUST_MINSIZE, 0);
+    sizer_3->Add(sizer_4, 1, wxEXPAND, 0);
+    sizer_3->Add(20, 10, 0, wxADJUST_MINSIZE, 0);
+    SetAutoLayout(true);
+    SetSizer(sizer_3);
+    Layout();
+    // end wxGlade
+    sizer_okcan->Add(CreateButtonSizer(wxOK | wxCANCEL));
+}
+
 void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
 {
+#if 0
     wxMessageBox(wxString::Format(
                     _T("Welcome to %s!\n")
@@ -197,3 +294,7 @@
                  wxOK | wxICON_INFORMATION,
                  this);
+#else
+    AddDialog d;
+    d.ShowModal();
+#endif
 }

 	  	 
