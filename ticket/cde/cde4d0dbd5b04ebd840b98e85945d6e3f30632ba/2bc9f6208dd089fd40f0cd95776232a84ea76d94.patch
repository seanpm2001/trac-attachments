Index: auibook.cpp
===================================================================
--- auibook.cpp	(revision 54059)
+++ auibook.cpp	(working copy)
@@ -3150,6 +3150,7 @@
     {
         // delete the child frame with pending delete, as is
         // customary with frame windows
+		wnd->Close();
         if (!wxPendingDelete.Member(wnd))
             wxPendingDelete.Append(wnd);
     }
@@ -4260,7 +4261,9 @@
             // ask owner if it's ok to close the tab
             wxAuiNotebookEvent e(wxEVT_COMMAND_AUINOTEBOOK_PAGE_CLOSE, m_windowId);
             e.SetSelection(m_tabs.GetIdxFromWindow(close_wnd));
-            const int idx = m_tabs.GetIdxFromWindow(close_wnd);
+            int idx = m_tabs.GetIdxFromWindow(close_wnd);
+			if(idx == -1) idx = selection;
+			
             e.SetSelection(idx);
             e.SetOldSelection(evt.GetSelection());
             e.SetEventObject(this);
@@ -4268,21 +4271,9 @@
             if (!e.IsAllowed())
                 return;
 
+            wxCHECK_RET(idx != wxNOT_FOUND, _T("no page to delete?") );
+            DeletePage(idx);
 
-#if wxUSE_MDI
-            if (close_wnd->IsKindOf(CLASSINFO(wxAuiMDIChildFrame)))
-            {
-                close_wnd->Close();
-            }
-            else
-#endif
-            {
-                int main_idx = m_tabs.GetIdxFromWindow(close_wnd);
-                wxCHECK_RET( main_idx != wxNOT_FOUND, _T("no page to delete?") );
-
-                DeletePage(main_idx);
-            }
-
             // notify owner that the tab has been closed
             wxAuiNotebookEvent e2(wxEVT_COMMAND_AUINOTEBOOK_PAGE_CLOSED, m_windowId);
             e2.SetSelection(idx);
