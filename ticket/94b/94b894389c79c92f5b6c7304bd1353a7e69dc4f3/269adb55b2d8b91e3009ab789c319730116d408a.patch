--- wxWidgets.orig/include/wx/msw/radiobox.h	Sun Dec 11 21:42:07 2005
+++ wxWidgets/include/wx/msw/radiobox.h	Sun Dec 11 21:43:56 2005

@@ -124,4 +124,6 @@
     int GetNumHor() const;
 
+    void OnSetFocus(wxFocusEvent& event);
+
 protected:
     // common part of all ctors
@@ -152,4 +154,5 @@
 #endif // __WXWINCE__
 
+    void SetFocusToChild();
 
     // the buttons we contain
@@ -169,4 +172,5 @@
 
 private:
+    DECLARE_EVENT_TABLE()
     DECLARE_DYNAMIC_CLASS(wxRadioBox)
     DECLARE_NO_COPY_CLASS(wxRadioBox)

--- wxWidgets.orig/src/msw/radiobox.cpp	Sun Dec 11 21:42:07 2005
+++ wxWidgets/src/msw/radiobox.cpp	Sun Dec 11 21:43:56 2005

@@ -98,4 +98,8 @@
 #endif
 
+BEGIN_EVENT_TABLE(wxRadioBox, wxControl)
+    EVT_SET_FOCUS(wxRadioBox::OnSetFocus)
+END_EVENT_TABLE()
+
 /*
     selection
@@ -362,4 +366,9 @@
 }
 
+void wxRadioBox::OnSetFocus(wxFocusEvent& event)
+{
+    SetFocusToChild();
+}
+
 void wxRadioBox::SetString(int item, const wxString& label)
 {
@@ -399,10 +408,5 @@
 void wxRadioBox::SetFocus()
 {
-    if ( GetCount() > 0 )
-    {
-        ::SetFocus((*m_radioButtons)[m_selectedButton == wxNOT_FOUND
-                                        ? 0
-                                        : m_selectedButton]);
-    }
+    SetFocusToChild();
 }
 
@@ -866,4 +870,15 @@
 }
 
+void wxRadioBox::SetFocusToChild()
+{
+    if ( GetCount() > 0 )
+    {
+        ::SetFocus((*m_radioButtons)[m_selectedButton == wxNOT_FOUND
+                                        ? 0
+                                        : m_selectedButton]);
+    }
+}
+
+
 #endif // wxUSE_RADIOBOX
 

 	  	 
