diff -bru wxWidgets.orig/src/gtk/assertdlg_gtk.cpp wxWidgets.patched/src/gtk/assertdlg_gtk.cpp
--- wxWidgets.orig/src/gtk/assertdlg_gtk.cpp    2015-08-15 01:23:05.637698252 -0400
+++ wxWidgets.patched/src/gtk/assertdlg_gtk.cpp 2015-08-16 13:13:29.799674257 -0400
@@ -42,8 +42,13 @@
     gtk_widget_set_can_default(button, true);
 
     /* add a stock icon inside it */
+    if( gtk_check_version( 3, 10, 0 ) )
+    {
+        wxGCC_WARNING_SUPPRESS(deprecated-declarations);
     GtkWidget *image = gtk_image_new_from_stock (stock, GTK_ICON_SIZE_BUTTON);
+        wxGCC_WARNING_RESTORE();
     gtk_button_set_image (GTK_BUTTON (button), image);
+    }
 
     /* add to the given (container) widget */
     if (box)
@@ -97,7 +102,14 @@
     /* create the tree view */
     treeview = gtk_tree_view_new_with_model (GTK_TREE_MODEL(store));
     g_object_unref (store);
+#if !GTK_CHECK_VERSION( 3, 14, 0 )
+    if( gtk_check_version( 3, 14, 0 ) )
+    {
+        wxGCC_WARNING_SUPPRESS(deprecated-declarations);
     gtk_tree_view_set_rules_hint (GTK_TREE_VIEW (treeview), TRUE);
+        wxGCC_WARNING_RESTORE();
+    }
+#endif
 
     /* append columns */
     gtk_assert_dialog_append_text_column(treeview, "#", STACKFRAME_LEVEL_COLIDX);
@@ -151,13 +163,24 @@
 static void gtk_assert_dialog_save_backtrace_callback(GtkWidget*, GtkAssertDialog* dlg)
 {
     GtkWidget *dialog;
-
+#if GTK_CHECK_VERSION( 3, 10, 0 )
+    if( !gtk_check_version( 3, 10, 0 ) )
+        dialog = gtk_file_chooser_dialog_new ("Save assert info to file", GTK_WINDOW(dlg),
+                                          GTK_FILE_CHOOSER_ACTION_SAVE,
+                                          "_Cancel", GTK_RESPONSE_CANCEL,
+                                          "_Save", GTK_RESPONSE_ACCEPT,
+                                          NULL);
+    else
+#endif
+    {
+        wxGCC_WARNING_SUPPRESS(deprecated-declarations);
     dialog = gtk_file_chooser_dialog_new ("Save assert info to file", GTK_WINDOW(dlg),
                                           GTK_FILE_CHOOSER_ACTION_SAVE,
                                           GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL,
                                           GTK_STOCK_SAVE, GTK_RESPONSE_ACCEPT,
                                           NULL);
-
+        wxGCC_WARNING_RESTORE();
+    }
     if (gtk_dialog_run (GTK_DIALOG (dialog)) == GTK_RESPONSE_ACCEPT)
     {
         char *filename, *msg, *backtrace;
@@ -263,7 +286,7 @@
 static void gtk_assert_dialog_init(GTypeInstance* instance, void*)
 {
     GtkAssertDialog* dlg = GTK_ASSERT_DIALOG(instance);
-    GtkWidget *continuebtn;
+    GtkWidget *continuebtn, *stopbtn;
 
     {
         GtkWidget *vbox, *hbox, *image;
@@ -280,9 +303,17 @@
         gtk_box_pack_start (GTK_BOX(vbox), hbox, FALSE, FALSE, 0);
 
         /* icon */
+#if GTK_CHECK_VERSION( 3, 10, 0)
+        if( !gtk_check_version( 3, 10, 0 ) )
+            image = gtk_image_new_from_icon_name( "dialog-error", GTK_ICON_SIZE_DIALOG );
+        else
+#endif
+        {
+            wxGCC_WARNING_SUPPRESS(deprecated-declarations);
         image = gtk_image_new_from_stock (GTK_STOCK_DIALOG_ERROR, GTK_ICON_SIZE_DIALOG);
-        gtk_box_pack_start (GTK_BOX(hbox), image, FALSE, FALSE, 12);
-
+            wxGCC_WARNING_RESTORE();
+        }
+        gtk_box_pack_start (GTK_BOX(hbox), image, FALSE, FALSE, 12 );
         {
             GtkWidget *vbox2, *info;
 
@@ -336,13 +367,42 @@
         gtk_button_box_set_layout (GTK_BUTTON_BOX(hbox), GTK_BUTTONBOX_END);
 
         /* add the buttons */
+#if GTK_CHECK_VERSION( 3, 10, 0 )
+        if( !gtk_check_version( 3, 10, 0 ) )
+        {
+            button = gtk_button_new_with_mnemonic( "Save to _file" );
+            gtk_button_set_always_show_image( GTK_BUTTON( button ), TRUE );
+            GtkWidget *image = gtk_image_new_from_icon_name( "document-save", GTK_ICON_SIZE_BUTTON );
+            gtk_button_set_image( GTK_BUTTON( button ), image );
+            gtk_box_pack_end (GTK_BOX(hbox), button, FALSE, TRUE, 8);
+        }
+        else
+#endif
+       {
+            wxGCC_WARNING_SUPPRESS(deprecated-declarations);
         button = gtk_assert_dialog_add_button_to (GTK_BOX(hbox), "Save to _file",
                                                 GTK_STOCK_SAVE);
+            wxGCC_WARNING_RESTORE();
+       }
         g_signal_connect (button, "clicked",
                             G_CALLBACK(gtk_assert_dialog_save_backtrace_callback), dlg);
-
+#if GTK_CHECK_VERSION( 3, 10, 0 )
+        if( !gtk_check_version( 3, 10, 0 ) )
+        {
+            button = gtk_button_new_with_mnemonic( "Copy to clip_board" );
+            gtk_button_set_always_show_image( GTK_BUTTON( button ), TRUE );
+            GtkWidget *image = gtk_image_new_from_icon_name( "edit-copy", GTK_ICON_SIZE_BUTTON );
+            gtk_button_set_image( GTK_BUTTON( button ), image );
+            gtk_box_pack_end (GTK_BOX(hbox), button, FALSE, TRUE, 8);
+        }
+        else
+#endif
+       {
+            wxGCC_WARNING_SUPPRESS(deprecated-declarations);
         button = gtk_assert_dialog_add_button_to (GTK_BOX(hbox), "Copy to clip_board",
                                                   GTK_STOCK_COPY);
+            wxGCC_WARNING_RESTORE();
+        }
         g_signal_connect (button, "clicked", G_CALLBACK(gtk_assert_dialog_copy_callback), dlg);
     }
 #endif // wxUSE_STACKWALKER
@@ -350,13 +410,53 @@
     /* add the checkbutton */
     dlg->shownexttime = gtk_check_button_new_with_mnemonic("Show this _dialog the next time");
     gtk_toggle_button_set_active (GTK_TOGGLE_BUTTON(dlg->shownexttime), TRUE);
+#if GTK_CHECK_VERSION( 3, 12, 0 )
+    if( !gtk_check_version( 3, 12, 0 ) )
+        gtk_dialog_add_action_widget( GTK_DIALOG( dlg ), dlg->shownexttime, 0 );
+    else
+#endif
+    {
+        wxGCC_WARNING_SUPPRESS(deprecated-declarations);
     gtk_box_pack_end(GTK_BOX(gtk_dialog_get_action_area(GTK_DIALOG(dlg))), dlg->shownexttime, false, true, 8);
+        wxGCC_WARNING_RESTORE();
+    }
 
     /* add the stop button */
-    gtk_assert_dialog_add_button (dlg, "_Stop", GTK_STOCK_QUIT, GTK_ASSERT_DIALOG_STOP);
+#if GTK_CHECK_VERSION( 3, 10, 0 )
+    if( !gtk_check_version( 3, 10, 0 ) )
+    {
+        stopbtn = gtk_button_new_with_mnemonic( "_Stop" );
+        gtk_button_set_always_show_image( GTK_BUTTON( stopbtn ), TRUE );
+        GtkWidget *image = gtk_image_new_from_icon_name( "application-exit", GTK_ICON_SIZE_BUTTON );
+        gtk_button_set_image( GTK_BUTTON( stopbtn ), image );
+        gtk_dialog_add_action_widget( GTK_DIALOG( dlg ), stopbtn, GTK_ASSERT_DIALOG_STOP );
+    }
+    else
+#endif
+    {
+        wxGCC_WARNING_SUPPRESS(deprecated-declarations);
+        stopbtn = gtk_assert_dialog_add_button (dlg, "_Stop", GTK_STOCK_QUIT, GTK_ASSERT_DIALOG_STOP);
+        wxGCC_WARNING_RESTORE();
+    }
 
     /* add the continue button */
+#if GTK_CHECK_VERSION( 3, 10, 0 )
+    if( !gtk_check_version( 3, 10, 0 ) )
+    {
+        continuebtn = gtk_button_new_with_mnemonic( "_Continue" );
+       gtk_button_set_always_show_image( GTK_BUTTON( continuebtn ), TRUE );
+        GtkWidget *image = gtk_image_new_from_icon_name( "emblem-default", GTK_ICON_SIZE_BUTTON );
+        gtk_button_set_image( GTK_BUTTON( continuebtn ), image );
+        gtk_dialog_add_action_widget (GTK_DIALOG (dlg), continuebtn, GTK_ASSERT_DIALOG_CONTINUE);
+        gtk_widget_set_can_default( continuebtn, TRUE );
+    }
+    else
+#endif
+    {
+        wxGCC_WARNING_SUPPRESS(deprecated-declarations);
     continuebtn = gtk_assert_dialog_add_button (dlg, "_Continue", GTK_STOCK_YES, GTK_ASSERT_DIALOG_CONTINUE);
+        wxGCC_WARNING_RESTORE();
+    }
     gtk_dialog_set_default_response (GTK_DIALOG (dlg), GTK_ASSERT_DIALOG_CONTINUE);
     g_signal_connect (continuebtn, "clicked", G_CALLBACK(gtk_assert_dialog_continue_callback), dlg);
 
