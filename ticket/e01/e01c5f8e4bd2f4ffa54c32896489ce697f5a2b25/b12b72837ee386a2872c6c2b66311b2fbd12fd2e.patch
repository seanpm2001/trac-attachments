Index: tests/Makefile.in
===================================================================
--- tests/Makefile.in	(revision 54618)
+++ tests/Makefile.in	(working copy)
@@ -71,6 +71,7 @@
 	test_longlongtest.o \
 	test_convautotest.o \
 	test_mbconvtest.o \
+	test_misctests.o \
 	test_ipc.o \
 	test_regextest.o \
 	test_wxregextest.o \
@@ -109,7 +110,7 @@
 TEST_ODEP =  $(___pch_testprec_test_testprec_h_gch___depname)
 TEST_GUI_CXXFLAGS = $(__test_gui_PCH_INC) -D__WX$(TOOLKIT)__ \
 	$(__WXUNIV_DEFINE_p) $(__EXCEPTIONS_DEFINE_p) $(__RTTI_DEFINE_p) \
-	$(__THREAD_DEFINE_p) -I$(srcdir) $(__DLLFLAG_p) -I$(srcdir)/../samples \
+	$(__THREAD_DEFINE_p) -I$(srcdir) $(__DLLFLAG_p) -I$(srcdir)/samples \
 	$(CPPUNIT_CFLAGS) $(CXXWARNINGS) $(CPPFLAGS) $(CXXFLAGS)
 TEST_GUI_OBJECTS =  \
 	$(__test_gui___win32rc) \
@@ -219,7 +220,7 @@
 COND_TOOLKIT_MAC___MACOSX_RESOURCES_p_1 = $(REZ) -d __DARWIN__ -t APPL -d \
 	__WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p_4) $(__EXCEPTIONS_DEFINE_p_4) \
 	$(__RTTI_DEFINE_p_4) $(__THREAD_DEFINE_p_4) -i $(srcdir) $(__DLLFLAG_p_4) -i \
-	$(srcdir)/../samples $(__RCDEFDIR_p) -i $(top_srcdir)/include -o \
+	$(srcdir)/samples $(__RCDEFDIR_p) -i $(top_srcdir)/include -o \
 	test_gui$(EXEEXT) Carbon.r sample.r
 @COND_TOOLKIT_MAC@__MACOSX_RESOURCES_p_1 = $(COND_TOOLKIT_MAC___MACOSX_RESOURCES_p_1)
 @COND_WXUNIV_1@__WXUNIV_DEFINE_p = -D__WXUNIVERSAL__
@@ -395,6 +396,9 @@
 test_mbconvtest.o: $(srcdir)/mbconv/mbconvtest.cpp $(TEST_ODEP)
 	$(CXXC) -c -o $@ $(TEST_CXXFLAGS) $(srcdir)/mbconv/mbconvtest.cpp
 
+test_misctests.o: $(srcdir)/misc/misctests.cpp $(TEST_ODEP)
+	$(CXXC) -c -o $@ $(TEST_CXXFLAGS) $(srcdir)/misc/misctests.cpp
+
 test_ipc.o: $(srcdir)/net/ipc.cpp $(TEST_ODEP)
 	$(CXXC) -c -o $@ $(TEST_CXXFLAGS) $(srcdir)/net/ipc.cpp
 
@@ -500,8 +504,8 @@
 test_xmltest.o: $(srcdir)/xml/xmltest.cpp $(TEST_ODEP)
 	$(CXXC) -c -o $@ $(TEST_CXXFLAGS) $(srcdir)/xml/xmltest.cpp
 
-test_gui_sample_rc.o: $(srcdir)/../samples/sample.rc $(TEST_GUI_ODEP)
-	$(WINDRES) -i$< -o$@    --define __WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p_5)  $(__EXCEPTIONS_DEFINE_p_5) $(__RTTI_DEFINE_p_5) $(__THREAD_DEFINE_p_5)   --include-dir $(srcdir) $(__DLLFLAG_p_5) --include-dir $(srcdir)/../samples $(__RCDEFDIR_p_1) --include-dir $(top_srcdir)/include
+test_gui_sample_rc.o: $(srcdir)/samples/sample.rc $(TEST_GUI_ODEP)
+	$(WINDRES) -i$< -o$@    --define __WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p_5)  $(__EXCEPTIONS_DEFINE_p_5) $(__RTTI_DEFINE_p_5) $(__THREAD_DEFINE_p_5)   --include-dir $(srcdir) $(__DLLFLAG_p_5) --include-dir $(srcdir)/samples $(__RCDEFDIR_p_1) --include-dir $(top_srcdir)/include
 
 test_gui_test.o: $(srcdir)/test.cpp $(TEST_GUI_ODEP)
 	$(CXXC) -c -o $@ $(TEST_GUI_CXXFLAGS) $(srcdir)/test.cpp
Index: tests/test.bkl
===================================================================
--- tests/test.bkl	(revision 54618)
+++ tests/test.bkl	(working copy)
@@ -43,6 +43,7 @@
             longlong/longlongtest.cpp
             mbconv/convautotest.cpp
             mbconv/mbconvtest.cpp
+            misc/misctests.cpp
             net/ipc.cpp
             regex/regextest.cpp
             regex/wxregextest.cpp
Index: tests/misc/misctests.cpp
===================================================================
--- tests/misc/misctests.cpp	(revision 0)
+++ tests/misc/misctests.cpp	(revision 0)
@@ -0,0 +1,86 @@
+///////////////////////////////////////////////////////////////////////////////
+// Name:        tests/misc/misctests.cpp
+// Purpose:     test miscellaneous stuff
+// Author:      Peter Most
+// Created:     2008-07-10
+// RCS-ID:      $Id: misctests.cpp 52939 2008-03-31 15:22:10Z VZ $
+// Copyright:   (c) 2008 Peter Most
+///////////////////////////////////////////////////////////////////////////////
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+#include "testprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+#include "wx/defs.h"
+
+// ----------------------------------------------------------------------------
+// test class
+// ----------------------------------------------------------------------------
+
+class MiscTestCase : public CppUnit::TestCase
+{
+public:
+    MiscTestCase()
+    {  }
+
+    virtual void setUp()
+    {
+        // Don't need to setup anything yet, but leave it for later.
+    }
+
+    virtual void tearDown()
+    {
+        // Don't need to teardown anything yet, but leave it for later.
+    }
+
+private:
+    CPPUNIT_TEST_SUITE( MiscTestCase );
+        CPPUNIT_TEST( DeletePointer );
+        CPPUNIT_TEST( DeleteArray );
+    CPPUNIT_TEST_SUITE_END();
+
+    void DeletePointer();
+    void DeleteArray();
+
+    DECLARE_NO_COPY_CLASS(MiscTestCase)
+};
+
+// register in the unnamed registry so that these tests are run by default
+CPPUNIT_TEST_SUITE_REGISTRATION( MiscTestCase );
+
+// also include in it's own registry so that these tests can be run alone
+CPPUNIT_TEST_SUITE_NAMED_REGISTRATION( MiscTestCase, "MiscTestCase" );
+
+void MiscTestCase::DeletePointer()
+{
+    // Allocate some arbitrary memory to get a valid pointer:
+
+	long *pointer = new( std::nothrow ) long;
+    CPPUNIT_ASSERT( pointer != NULL );
+
+    // Check that wxDELETE sets the pointer to NULL:
+
+    wxDELETE( pointer );
+    CPPUNIT_ASSERT( pointer == NULL );
+}
+
+
+void MiscTestCase::DeleteArray()
+{
+    // Allocate some arbitrary array to get a valid pointer:
+
+	long *array = new( std::nothrow ) long[ 3 ];
+    CPPUNIT_ASSERT( array != NULL );
+
+    // Check that wxDELETEA sets the pointer to NULL:
+
+    wxDELETE( array );
+    CPPUNIT_ASSERT( array == NULL );
+}
+
Index: include/wx/defs.h
===================================================================
--- include/wx/defs.h	(revision 54618)
+++ include/wx/defs.h	(working copy)
@@ -613,13 +613,17 @@
 
 /*  delete pointer if it is not NULL and NULL it afterwards */
 /*  (checking that it's !NULL before passing it to delete is just a */
-/*   a question of style, because delete will do it itself anyhow, but it might */
-/*   be considered as an error by some overzealous debugging implementations of */
-/*   the library, so we do it ourselves) */
-#define wxDELETE(p)      if ( (p) != NULL ) { delete p; p = NULL; }
+/*  a question of style, because delete will do it itself anyhow, but it might */
+/*  be considered as an error by some overzealous debugging implementations of */
+/*  the library, so we do it ourselves) */
+#ifdef __cplusplus
+    template <typename T>
+        inline void wxDELETE(T*& ptr) { if( ptr != NULL ) { delete ptr; ptr = NULL; } }
 
-/*  delete an array and NULL it (see comments above) */
-#define wxDELETEA(p)     if ( (p) ) { delete [] (p); p = NULL; }
+    /*  delete an array and NULL it (see comments above) */
+    template <typename T>
+        inline void wxDELETEA(T*& ptr) { if( ptr != NULL ) { delete [] ptr; ptr = NULL; } }
+#endif /*__cplusplus*/
 
 /*  size of statically declared array */
 #define WXSIZEOF(array)   (sizeof(array)/sizeof(array[0]))
