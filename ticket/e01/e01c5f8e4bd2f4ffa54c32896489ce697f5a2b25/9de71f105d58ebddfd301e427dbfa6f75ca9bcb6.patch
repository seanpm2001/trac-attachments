Index: dialogs/dialogs.cpp
===================================================================
--- dialogs/dialogs.cpp	(revision 64622)
+++ dialogs/dialogs.cpp	(working copy)
@@ -1949,8 +1949,7 @@
 {
     if ( m_dlgReplace )
     {
-        delete m_dlgReplace;
-        m_dlgReplace = NULL;
+        wxDELETE(m_dlgReplace);
     }
     else
     {
@@ -1970,8 +1969,7 @@
 {
     if ( m_dlgFind )
     {
-        delete m_dlgFind;
-        m_dlgFind = NULL;
+        wxDELETE(m_dlgFind);
     }
     else
     {
@@ -2147,9 +2145,7 @@
 {
     if ( event.GetEventObject() == m_btnDelete )
     {
-        delete m_btnModal;
-        m_btnModal = NULL;
-
+        wxDELETE(m_btnModal);
         m_btnDelete->Disable();
     }
     else if ( event.GetEventObject() == m_btnModal )
Index: docview/view.cpp
===================================================================
--- docview/view.cpp	(revision 64622)
+++ docview/view.cpp	(working copy)
@@ -265,8 +265,7 @@
             doc->Modify(true);
         }
 
-        delete m_currentSegment;
-        m_currentSegment = NULL;
+        wxDELETE(m_currentSegment);
     }
 
     // is this the start of a new segment?
Index: dragimag/dragimag.cpp
===================================================================
--- dragimag/dragimag.cpp	(revision 64622)
+++ dragimag/dragimag.cpp	(working copy)
@@ -135,8 +135,7 @@
 
         m_dragImage->Hide();
         m_dragImage->EndDrag();
-        delete m_dragImage;
-        m_dragImage = NULL;
+        wxDELETE(m_dragImage);
 
         m_draggedShape->SetShow(true);
 
@@ -203,8 +202,7 @@
 
             if (!m_dragImage->BeginDrag(beginDragHotSpot, this, fullScreen))
             {
-                delete m_dragImage;
-                m_dragImage = (wxDragImage*) NULL;
+                wxDELETE(m_dragImage);
                 m_dragMode = TEST_DRAG_NONE;
 
             } else
Index: drawing/drawing.cpp
===================================================================
--- drawing/drawing.cpp	(revision 64622)
+++ drawing/drawing.cpp	(working copy)
@@ -366,21 +366,13 @@
 
 void MyApp::DeleteBitmaps()
 {
-    delete gs_bmpNoMask;
-    delete gs_bmpWithColMask;
-    delete gs_bmpMask;
-    delete gs_bmpWithMask;
-    delete gs_bmp4;
-    delete gs_bmp4_mono;
-    delete gs_bmp36;
-
-    gs_bmpNoMask = NULL;
-    gs_bmpWithColMask = NULL;
-    gs_bmpMask = NULL;
-    gs_bmpWithMask = NULL;
-    gs_bmp4 = NULL;
-    gs_bmp4_mono = NULL;
-    gs_bmp36 = NULL;
+    wxDELETE(gs_bmpNoMask);
+    wxDELETE(gs_bmpWithColMask);
+    wxDELETE(gs_bmpMask);
+    wxDELETE(gs_bmpWithMask);
+    wxDELETE(gs_bmp4);
+    wxDELETE(gs_bmp4_mono);
+    wxDELETE(gs_bmp36);
 }
 
 // ----------------------------------------------------------------------------
Index: exec/exec.cpp
===================================================================
--- exec/exec.cpp	(revision 64622)
+++ exec/exec.cpp	(working copy)
@@ -1370,8 +1370,7 @@
 {
     DoGet();
 
-    delete m_process;
-    m_process = NULL;
+    wxDELETE(m_process);
 
     wxLogWarning(wxT("The other process has terminated, closing"));
 
Index: fswatcher/fswatcher.cpp
===================================================================
--- fswatcher/fswatcher.cpp	(revision 64622)
+++ fswatcher/fswatcher.cpp	(working copy)
@@ -279,8 +279,7 @@
     {
         wxCHECK_RET(m_watcher, "Watcher not initialized");
         m_filesList->DeleteAllItems();
-        delete m_watcher;
-        m_watcher = NULL;
+        wxDELETE(m_watcher);
     }
 }
 
Index: html/printing/printing.cpp
===================================================================
--- html/printing/printing.cpp	(revision 64622)
+++ html/printing/printing.cpp	(working copy)
@@ -223,8 +223,7 @@
 // frame destructor
 MyFrame::~MyFrame()
 {
-    delete m_Prn;
-    m_Prn = (wxHtmlEasyPrinting *) NULL;
+    wxDELETE(m_Prn);
 }
 
 
Index: ipc/baseclient.cpp
===================================================================
--- ipc/baseclient.cpp	(revision 64622)
+++ ipc/baseclient.cpp	(working copy)
@@ -184,8 +184,7 @@
     if (m_connection)
     {
         m_connection->Disconnect();
-        delete m_connection;
-        m_connection = NULL;
+        wxDELETE(m_connection);
         wxLogMessage("Client disconnected from server");
     }
     wxGetApp().ExitMainLoop();
Index: ipc/baseserver.cpp
===================================================================
--- ipc/baseserver.cpp	(revision 64622)
+++ ipc/baseserver.cpp	(working copy)
@@ -211,8 +211,7 @@
     if ( m_connection )
     {
         m_connection->Disconnect();
-        delete m_connection;
-        m_connection = NULL;
+        wxDELETE(m_connection);
         wxLogMessage("Disconnected client");
     }
 }
Index: ipc/client.cpp
===================================================================
--- ipc/client.cpp	(revision 64622)
+++ ipc/client.cpp	(working copy)
@@ -234,8 +234,7 @@
 {
     if (m_client)
     {
-        delete m_client;
-        m_client = NULL;
+        wxDELETE(m_client);
     }
     event.Skip();
 }
@@ -261,8 +260,7 @@
 
     if (!retval)
     {
-        delete m_client;
-        m_client = NULL;
+        wxDELETE(m_client);
     }
     EnableControls();
 }
@@ -316,8 +314,7 @@
 
 void MyFrame::Disconnect()
 {
-    delete m_client;
-    m_client = NULL;
+    wxDELETE(m_client);
     EnableControls();
 }
 
@@ -399,8 +396,7 @@
     if (m_connection)
     {
         m_connection->Disconnect();
-        delete m_connection;
-        m_connection = NULL;
+        wxDELETE(m_connection);
         wxGetApp().GetFrame()->EnableControls();
         wxLogMessage(wxT("Client disconnected from server"));
     }
Index: ipc/server.cpp
===================================================================
--- ipc/server.cpp	(revision 64622)
+++ ipc/server.cpp	(working copy)
@@ -160,11 +160,7 @@
 
 void MyFrame::OnClose(wxCloseEvent& event)
 {
-    if (m_server)
-    {
-        delete m_server;
-        m_server = NULL;
-    }
+    wxDELETE(m_server);
     event.Skip();
 }
 
@@ -185,8 +181,7 @@
     else
     {
         wxLogMessage("Server %s failed to start", servername);
-        delete m_server;
-        m_server = NULL;
+        wxDELETE(m_server);
     }
     UpdateUI();
 }
@@ -262,8 +257,7 @@
 {
     if ( m_connection )
     {
-        delete m_connection;
-        m_connection = NULL;
+        wxDELETE(m_connection);
         wxGetApp().GetFrame()->UpdateUI();
         wxLogMessage("Disconnected client");
     }
Index: propgrid/propgrid.cpp
===================================================================
--- propgrid/propgrid.cpp	(revision 64622)
+++ propgrid/propgrid.cpp	(working copy)
@@ -264,11 +264,7 @@
 wxAdvImageFileProperty::~wxAdvImageFileProperty ()
 {
     // Delete old image
-    if ( m_pImage )
-    {
-        delete m_pImage;
-        m_pImage = (wxImage*) NULL;
-    }
+    wxDELETE(m_pImage);
 }
 
 void wxAdvImageFileProperty::OnSetValue()
@@ -276,11 +272,7 @@
     wxFileProperty::OnSetValue();
 
     // Delete old image
-    if ( m_pImage )
-    {
-        delete m_pImage;
-        m_pImage = (wxImage*) NULL;
-    }
+    wxDELETE(m_pImage);
 
     wxString imagename = GetValueAsString(0);
 
@@ -398,11 +390,7 @@
 
         }
 
-        if ( m_pImage )
-        {
-            delete m_pImage;
-            m_pImage = (wxImage*) NULL;
-        }
+        wxDELETE(m_pImage);
     }
 }
 
Index: regtest/regtest.cpp
===================================================================
--- regtest/regtest.cpp	(revision 64622)
+++ regtest/regtest.cpp	(working copy)
@@ -1031,8 +1031,7 @@
 {
     DestroyChildren();
 
-    delete m_pKey;
-    m_pKey = NULL;
+    wxDELETE(m_pKey);
 }
 
 void RegTreeCtrl::TreeNode::Refresh()
Index: sockets/baseserver.cpp
===================================================================
--- sockets/baseserver.cpp	(revision 64622)
+++ sockets/baseserver.cpp	(working copy)
@@ -650,8 +650,7 @@
         if (m_size == m_infill)
         {
             m_signature[0] = m_signature[1] = 0x0;
-            delete [] m_inbuf;
-            m_inbuf = NULL;
+            wxDELETEA(m_inbuf);
             m_infill = 0;
             return;
         }
@@ -713,8 +712,7 @@
     {
         if (m_written == m_size)
         {
-            delete [] m_outbuf;
-            m_outbuf = NULL;
+            wxDELETEA(m_outbuf);
             m_outfill = 0;
             LogWorker( "All data written");
             return;
Index: sound/sound.cpp
===================================================================
--- sound/sound.cpp	(revision 64622)
+++ sound/sound.cpp	(working copy)
@@ -1002,8 +1002,7 @@
 #endif // __WXMSW__
         m_useMemory = false;
 
-        delete m_sound;
-        m_sound = NULL;
+        wxDELETE(m_sound);
         NotifyUsingFile(m_soundFile);
     }
 #endif // wxUSE_FILEDLG
@@ -1026,8 +1025,7 @@
     m_soundFile.clear();
     m_useMemory = false;
 
-    delete m_sound;
-    m_sound = NULL;
+    wxDELETE(m_sound);
 
     NotifyUsingFile(wxT("Windows WAV resource"));
 }
Index: stc/stctest.cpp
===================================================================
--- stc/stctest.cpp	(revision 64622)
+++ stc/stctest.cpp	(working copy)
@@ -683,17 +683,13 @@
 }
 
 AppAbout::~AppAbout () {
-    if (m_timer)  {
-        delete m_timer;
-        m_timer = NULL;
-    }
+    wxDELETE(m_timer);
 }
 
 //----------------------------------------------------------------------------
 // event handlers
 void AppAbout::OnTimerEvent (wxTimerEvent &WXUNUSED(event)) {
-    if (m_timer) delete m_timer;
-    m_timer = NULL;
+    wxDELETE(m_timer);
     EndModal (wxID_OK);
 }
 
Index: toolbar/toolbar.cpp
===================================================================
--- toolbar/toolbar.cpp	(revision 64622)
+++ toolbar/toolbar.cpp	(working copy)
@@ -725,8 +725,7 @@
 {
     if ( m_tbar )
     {
-        delete m_tbar;
-        m_tbar = NULL;
+        wxDELETE(m_tbar);
     }
     else
     {
Index: widgets/gauge.cpp
===================================================================
--- widgets/gauge.cpp	(revision 64622)
+++ widgets/gauge.cpp	(working copy)
@@ -335,8 +335,7 @@
     wxCHECK_RET( m_timer, wxT("shouldn't be called") );
 
     m_timer->Stop();
-    delete m_timer;
-    m_timer = NULL;
+    wxDELETE(m_timer);
 
     if (clicked->GetId() == GaugePage_Progress)
     {
Index: widgets/notebook.cpp
===================================================================
--- widgets/notebook.cpp	(revision 64622)
+++ widgets/notebook.cpp	(working copy)
@@ -335,11 +335,7 @@
     }
     else // no images
     {
-        if ( m_imageList )
-        {
-            delete m_imageList;
-            m_imageList = NULL;
-        }
+        wxDELETE(m_imageList);
     }
 
     // because of the bug in wxMSW we can't use SetImageList(NULL) - although
Index: widgets/statbmp.cpp
===================================================================
--- widgets/statbmp.cpp	(revision 64622)
+++ widgets/statbmp.cpp	(working copy)
@@ -115,8 +115,7 @@
 
 void StatBmpWidgetsPage::RecreateWidget()
 {
-    delete m_statbmp;
-    m_statbmp = NULL;
+    wxDELETE(m_statbmp);
 
     wxString filepath = m_filepicker->GetPath();
     if ( filepath.empty() )
