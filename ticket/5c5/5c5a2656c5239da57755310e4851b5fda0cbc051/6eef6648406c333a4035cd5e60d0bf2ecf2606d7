Index: bitmap.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/bitmap.tex,v
retrieving revision 1.18.2.2
diff -c -r1.18.2.2 bitmap.tex
*** bitmap.tex	2000/07/04 06:54:55	1.18.2.2
--- bitmap.tex	2000/12/19 20:10:05
***************
*** 164,169 ****
--- 164,177 ----
  \end{twocollist}}
  }
  
+ \perlnote{Constructors supported by wxPerl are:\par
+ \begin{itemize}
+ \item{Wx::Bitmap->new( width, height, depth = -1 )}
+ \item{Wx::Bitmap->new( name, type )}
+ \item{Wx::Bitmap->new( icon )}
+ \end{itemize}
+ }
+ 
  \membersection{wxBitmap::\destruct{wxBitmap}}
  
  \func{}{\destruct{wxBitmap}}{\void}
Index: checklst.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/checklst.tex,v
retrieving revision 1.6
diff -c -r1.6 checklst.tex
*** checklst.tex	1999/12/25 20:34:40	1.6
--- checklst.tex	2000/12/19 20:10:05
***************
*** 76,81 ****
--- 76,84 ----
  and {\tt choices} arguments are to a single argument, which is
  a list of strings.}
  
+ \perlnote{In wxPerl there is just an array reference in place of {\tt n}
+ and {\tt choices}.}
+ 
  \membersection{wxCheckListBox::\destruct{wxCheckListBox}}
  
  \func{void}{\destruct{wxCheckListBox}}{\void}
Index: choice.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/choice.tex,v
retrieving revision 1.8
diff -c -r1.8 choice.tex
*** choice.tex	1999/12/25 20:34:40	1.8
--- choice.tex	2000/12/19 20:10:05
***************
*** 78,83 ****
--- 78,86 ----
  and {\tt choices} arguments are to a single argument, which is
  a list of strings.}
  
+ \perlnote{In wxPerl there is just an array reference in place of {\tt n}
+ and {\tt choices}.}
+ 
  \membersection{wxChoice::\destruct{wxChoice}}
  
  \func{}{\destruct{wxChoice}}{\void}
Index: combobox.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/combobox.tex,v
retrieving revision 1.11.2.2
diff -c -r1.11.2.2 combobox.tex
*** combobox.tex	2000/08/01 10:51:14	1.11.2.2
--- combobox.tex	2000/12/19 20:10:05
***************
*** 90,95 ****
--- 90,97 ----
  and {\tt choices} arguments are to a single argument, which is
  a list of strings.}
  
+ \perlnote{In wxPerl there is just an array reference in place of {\tt n}
+ and {\tt choices}.}
  
  \membersection{wxComboBox::\destruct{wxComboBox}}
  
Index: cursor.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/cursor.tex,v
retrieving revision 1.8.2.1
diff -c -r1.8.2.1 cursor.tex
*** cursor.tex	2000/04/27 14:32:59	1.8.2.1
--- cursor.tex	2000/12/19 20:10:06
***************
*** 148,153 ****
--- 148,160 ----
  \end{twocollist}}
  }
  
+ \perlnote{Contructors supported by wxPerl are:\par
+ \begin{itemize}
+ \item{Wx::Cursor->new( name, type, hotSpotX = 0, hotSpotY = 0 )}
+ \item{Wx::Cursor->new( id )}
+ \end{itemize}
+ }
+ 
  \membersection{wxCursor::\destruct{wxCursor}}
  
  \func{}{\destruct{wxCursor}}{\void}
Index: dc.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/dc.tex,v
retrieving revision 1.21.2.6
diff -c -r1.21.2.6 dc.tex
*** dc.tex	2000/09/01 16:49:22	1.21.2.6
--- dc.tex	2000/12/19 20:10:08
***************
*** 433,438 ****
--- 433,441 ----
  \pythonnote{No arguments are required and the four values defining the
  rectangle are returned as a tuple.}
  
+ \perlnote{This method takes no arguments and returns a four element list
+ {\tt ( \$x, \$y, \$width, \$height )}}
+ 
  \membersection{wxDC::GetFont}\label{wxdcgetfont}
  
  \func{wxFont\&}{GetFont}{\void}
***************
*** 478,483 ****
--- 481,489 ----
  \pythonnote{For wxPython the wxColour value is returned and is not
  required as a parameter.}
  
+ \perlnote{This method only takes the parameters {\tt x} and {\tt y} and returns
+ a Wx::Colour value}
+ 
  \membersection{wxDC::GetSize}\label{wxdcgetsize}
  
  \func{void}{GetSize}{\param{wxCoord *}{width}, \param{wxCoord *}{height}}
***************
*** 508,513 ****
--- 514,527 ----
  \end{twocollist}}
  }
  
+ \perlnote{In place of a single overloaded method, wxPerl uses:\par
+ \indented{2cm}{\begin{twocollist}
+ \twocolitem{{\bf GetSize()}}{Returns a Wx::Size}
+ \twocolitem{{\bf GetSizeWH()}}{Returns a 2-element list
+   {\tt ( \$width, \$height )}}
+ \end{twocollist}
+ }}
+ 
  \membersection{wxDC::GetTextBackground}\label{wxdcgettextbackground}
  
  \func{wxColour\&}{GetTextBackground}{\void}
***************
*** 543,548 ****
--- 557,567 ----
  \end{twocollist}}
  }
  
+ \perlnote{In wxPerl this method is implemented as 
+   {\bf GetTextExtent( string, font = undef )} returning a four element
+   array {\tt ( \$width, \$height, \$descent, \$externalLeading )}
+ }
+ 
  \membersection{wxDC::GetTextForeground}\label{wxdcgettextforeground}
  
  \func{wxColour\&}{GetTextForeground}{\void}
***************
*** 558,563 ****
--- 577,584 ----
  
  Gets the current user scale factor (set by \helpref{SetUserScale}{wxdcsetuserscale}).
  
+ \perlnote{In wxPerl this method takes no arguments and returna a two element
+  array {\tt ( \$x, \$y )}}
  
  \membersection{wxDC::LogicalToDeviceX}\label{wxdclogicaltodevicex}
  
Index: frame.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/frame.tex,v
retrieving revision 1.15.2.2
diff -c -r1.15.2.2 frame.tex
*** frame.tex	2000/06/03 13:03:13	1.15.2.2
--- frame.tex	2000/12/19 20:10:10
***************
*** 531,536 ****
--- 531,538 ----
  \pythonnote{Only a single parameter is required, a Python list of
  integers.}
  
+ \perlnote{In wxPerl this method takes the widths as parameters.}
+ 
  \membersection{wxFrame::SetToolBar}\label{wxframesettoolbar}
  
  \func{void}{SetToolBar}{\param{wxToolBar*}{ toolBar}}
Index: icon.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/icon.tex,v
retrieving revision 1.9
diff -c -r1.9 icon.tex
*** icon.tex	2000/03/15 00:21:45	1.9
--- icon.tex	2000/12/19 20:10:11
***************
*** 183,188 ****
--- 183,195 ----
  
  \helpref{wxIcon::LoadFile}{wxiconloadfile}
  
+ \perlnote{Constructors supported by wxPerl are:\par
+ \begin{itemize}
+ \item{Wx::Icon->new( width, height, depth = -1 )}
+ \item{Wx::Icon->new( name, type, desiredWidth = -1, desiredHeight = -1 )}
+ \end{itemize}
+ }
+ 
  \membersection{wxIcon::\destruct{wxIcon}}
  
  \func{}{\destruct{wxIcon}}{\void}
Index: image.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/image.tex,v
retrieving revision 1.34.2.6
diff -c -r1.34.2.6 image.tex
*** image.tex	2000/08/02 06:35:18	1.34.2.6
--- image.tex	2000/12/19 20:10:12
***************
*** 145,150 ****
--- 145,159 ----
  \end{twocollist}}
  }
  
+ \perlnote{Constructors supported by wxPerl are:\par
+ \begin{itemize}
+ \item{Wx::Image->new( bitmap )}
+ \item{Wx::Image->new( width, height )}
+ \item{Wx::Image->new( name, type )}
+ \item{Wx::Image->new( name, mimetype )}
+ \end{itemize}
+ }
+ 
  \membersection{wxImage::\destruct{wxImage}}
  
  \func{}{\destruct{wxImage}}{\void}
***************
*** 432,437 ****
--- 441,453 ----
  \end{twocollist}}
  }
  
+ \perlnote{Methods supported by wxPerl are:\par
+ \begin{itemize}
+ \item{\$bitmap->LoadFile( name, type )}
+ \item{\$bitmap->LoadFile( name, mimetype )}
+ \end{itemize}
+ }
+ 
  
  \membersection{wxImage::Ok}\label{wximageok}
  
***************
*** 508,513 ****
--- 524,536 ----
  \twocolitem{{\bf SaveMimeFile(filename, mimetype)}}{Saves the image using the given
  mimetype to the named file}
  \end{twocollist}}
+ }
+ 
+ \perlnote{Methods supported by wxPerl are:\par
+ \begin{itemize}
+ \item{\$bitmap->SaveFile( name, type )}
+ \item{\$bitmap->SaveFile( name, mimetype )}
+ \end{itemize}
  }
  
  \membersection{wxImage::Mirror}\label{wximagemirror}
Index: layout.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/layout.tex,v
retrieving revision 1.2
diff -c -r1.2 layout.tex
*** layout.tex	1999/02/15 20:40:43	1.2
--- layout.tex	2000/12/19 20:10:12
***************
*** 26,31 ****
--- 26,39 ----
  have take a default size. If the constraint is wxAsIs, the dimension will
  not be changed.
  
+ \perlnote{In wxPerl the constraints are accessed as
+ \begin{verbatim}
+   my( \$constraint ) = Wx::LayoutConstraints->new();
+   \$constraint->centreX->AsIs();
+   \$constraint->centreY->Unconstrained();
+ \end{verbatim}
+ }
+ 
  \wxheading{Derived from}
  
  \helpref{wxObject}{wxobject}
Index: listbox.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/listbox.tex,v
retrieving revision 1.16
diff -c -r1.16 listbox.tex
*** listbox.tex	1999/12/25 20:34:46	1.16
--- listbox.tex	2000/12/19 20:10:13
***************
*** 100,107 ****
  and {\tt choices} arguments are to a single argument, which is
  a list of strings.}
  
  
- 
  \membersection{wxListBox::\destruct{wxListBox}}
  
  \func{void}{\destruct{wxListBox}}{\void}
--- 100,108 ----
  and {\tt choices} arguments are to a single argument, which is
  a list of strings.}
  
+ \perlnote{In wxPerl there is just an array reference in place of {\tt n}
+ and {\tt choices}.}
  
  \membersection{wxListBox::\destruct{wxListBox}}
  
  \func{void}{\destruct{wxListBox}}{\void}
***************
*** 240,245 ****
--- 241,249 ----
  \pythonnote{The wxPython version of this method takes no parameters
  and returns a tuple of the selected items.}
  
+ \perlnote{In wxPerl this method takes no parameters and returna the
+ selected items as a list.}
+ 
  \membersection{wxListBox::GetString}\label{wxlistboxgetstring}
  
  \constfunc{wxString}{GetString}{\param{int}{ n}}
***************
*** 285,290 ****
--- 289,297 ----
  
  \pythonnote{The first two parameters are collapsed into a single
  parameter for wxPython, which is a list of strings.}
+ 
+ \perlnote{In wxPerl there is just an array reference in place of {\tt nItems}
+ and {\tt items}.}
  
  \membersection{wxListBox::Number}\label{wxlistboxnumber}
  
Index: locale.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/locale.tex,v
retrieving revision 1.5.2.3
diff -c -r1.5.2.3 locale.tex
*** locale.tex	2000/08/10 14:40:05	1.5.2.3
--- locale.tex	2000/12/19 20:10:14
***************
*** 6,11 ****
--- 6,24 ----
  In wxWindows this class manages message catalogs which contain the translations
  of the strings used to the current language.
  
+ \perlnote{In wxPerl the {\tt Wx} module exports a '_' function
+ that corresponds to the '_' C++ macro.
+ \begin{verbatim}
+   use Wx qw(_);
+ 
+   # ....
+ 
+   print _( ``Panic!'' );
+ 
+   my( \$button ) = Wx::Button->new( \$window, -1, _( ``Label'' ) );
+ \end{verbatim}
+ }
+ 
  \wxheading{Derived from}
  
  No base class
Index: mask.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/mask.tex,v
retrieving revision 1.6
diff -c -r1.6 mask.tex
*** mask.tex	1999/12/25 20:34:47	1.6
--- mask.tex	2000/12/19 20:10:14
***************
*** 1,87 ****
! \section{\class{wxMask}}\label{wxmask}
! 
! This class encapsulates a monochrome mask bitmap, where the masked area is black and
! the unmasked area is white.
! 
! \wxheading{Derived from}
! 
! \helpref{wxObject}{wxobject}
! 
! \wxheading{Include files}
! 
! <wx/bitmap.h>
! 
! \wxheading{Remarks}
! 
! A mask may be associated with a \helpref{wxBitmap}{wxbitmap}. It is used in \helpref{wxDC::Blit}{wxdcblit} when
! the source device context is a \helpref{wxMemoryDC}{wxmemorydc} with wxBitmap selected into it that
! contains a mask.
! 
! \wxheading{See also}
! 
! \helpref{wxBitmap}{wxbitmap}, \helpref{wxDC::Blit}{wxdcblit}, \helpref{wxMemoryDC}{wxmemorydc}
! 
! \latexignore{\rtfignore{\wxheading{Members}}}
! 
! \membersection{wxMask::wxMask}\label{wxmaskconstr}
! 
! \func{}{wxMask}{\void}
! 
! Default constructor.
! 
! \func{}{wxMask}{\param{const wxBitmap\& }{bitmap}}
! 
! Constructs a mask from a monochrome bitmap.
! 
! \pythonnote{This is the default constructor for wxMask in wxPython.}
! 
! \func{}{wxMask}{\param{const wxBitmap\& }{bitmap}, \param{const wxColour\& }{colour}}
! 
! Constructs a mask from a bitmap and a colour that indicates the background.
! 
! \pythonnote{wxPython has an alternate wxMask constructor matching this
! form called {\tt wxMaskColour}.}
! 
! \func{}{wxMask}{\param{const wxBitmap\& }{bitmap}, \param{int}{ index}}
! 
! Constructs a mask from a bitmap and a palette index that indicates the background. Not
! yet implemented for GTK.
! 
! \wxheading{Parameters}
! 
! \docparam{bitmap}{A valid bitmap.}
! 
! \docparam{colour}{A colour specifying the transparency RGB values.}
! 
! \docparam{index}{Index into a palette, specifying the transparency colour.}
! 
! \membersection{wxMask::\destruct{wxMask}}
! 
! \func{}{\destruct{wxMask}}{\void}
! 
! Destroys the wxMask object and the underlying bitmap data.
! 
! \membersection{wxMask::Create}\label{wxmaskcreate}
! 
! \func{bool}{Create}{\param{const wxBitmap\& }{bitmap}}
! 
! Constructs a mask from a monochrome bitmap.
! 
! \func{bool}{Create}{\param{const wxBitmap\& }{bitmap}, \param{const wxColour\& }{colour}}
! 
! Constructs a mask from a bitmap and a colour that indicates the background.
! 
! \func{bool}{Create}{\param{const wxBitmap\& }{bitmap}, \param{int}{ index}}
! 
! Constructs a mask from a bitmap and a palette index that indicates the background. Not
! yet implemented for GTK.
! 
! \wxheading{Parameters}
! 
! \docparam{bitmap}{A valid bitmap.}
! 
! \docparam{colour}{A colour specifying the transparency RGB values.}
! 
! \docparam{index}{Index into a palette, specifying the transparency colour.}
! 
! 
--- 1,87 ----
! \section{\class{wxMask}}\label{wxmask}
! 
! This class encapsulates a monochrome mask bitmap, where the masked area is black and
! the unmasked area is white.
! 
! \wxheading{Derived from}
! 
! \helpref{wxObject}{wxobject}
! 
! \wxheading{Include files}
! 
! <wx/bitmap.h>
! 
! \wxheading{Remarks}
! 
! A mask may be associated with a \helpref{wxBitmap}{wxbitmap}. It is used in \helpref{wxDC::Blit}{wxdcblit} when
! the source device context is a \helpref{wxMemoryDC}{wxmemorydc} with wxBitmap selected into it that
! contains a mask.
! 
! \wxheading{See also}
! 
! \helpref{wxBitmap}{wxbitmap}, \helpref{wxDC::Blit}{wxdcblit}, \helpref{wxMemoryDC}{wxmemorydc}
! 
! \latexignore{\rtfignore{\wxheading{Members}}}
! 
! \membersection{wxMask::wxMask}\label{wxmaskconstr}
! 
! \func{}{wxMask}{\void}
! 
! Default constructor.
! 
! \func{}{wxMask}{\param{const \helpref{wxBitmap}{wxbitmap}\& }{bitmap}}
! 
! Constructs a mask from a monochrome bitmap.
! 
! \pythonnote{This is the default constructor for wxMask in wxPython.}
! 
! \func{}{wxMask}{\param{const \helpref{wxBitmap}{wxbitmap}\& }{bitmap}, \param{const \helpref{wxColour}{wxcolour}\& }{colour}}
! 
! Constructs a mask from a bitmap and a colour that indicates the background.
! 
! \pythonnote{wxPython has an alternate wxMask constructor matching this
! form called {\tt wxMaskColour}.}
! 
! \func{}{wxMask}{\param{const wxBitmap\& }{bitmap}, \param{int}{ index}}
! 
! Constructs a mask from a bitmap and a palette index that indicates the background. Not
! yet implemented for GTK.
! 
! \wxheading{Parameters}
! 
! \docparam{bitmap}{A valid bitmap.}
! 
! \docparam{colour}{A colour specifying the transparency RGB values.}
! 
! \docparam{index}{Index into a palette, specifying the transparency colour.}
! 
! \membersection{wxMask::\destruct{wxMask}}
! 
! \func{}{\destruct{wxMask}}{\void}
! 
! Destroys the wxMask object and the underlying bitmap data.
! 
! \membersection{wxMask::Create}\label{wxmaskcreate}
! 
! \func{bool}{Create}{\param{const wxBitmap\& }{bitmap}}
! 
! Constructs a mask from a monochrome bitmap.
! 
! \func{bool}{Create}{\param{const wxBitmap\& }{bitmap}, \param{const wxColour\& }{colour}}
! 
! Constructs a mask from a bitmap and a colour that indicates the background.
! 
! \func{bool}{Create}{\param{const wxBitmap\& }{bitmap}, \param{int}{ index}}
! 
! Constructs a mask from a bitmap and a palette index that indicates the background. Not
! yet implemented for GTK.
! 
! \wxheading{Parameters}
! 
! \docparam{bitmap}{A valid bitmap.}
! 
! \docparam{colour}{A colour specifying the transparency RGB values.}
! 
! \docparam{index}{Index into a palette, specifying the transparency colour.}
! 
! 
Index: menu.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/menu.tex,v
retrieving revision 1.26.2.1
diff -c -r1.26.2.1 menu.tex
*** menu.tex	2000/03/21 19:18:09	1.26.2.1
--- menu.tex	2000/12/19 20:10:15
***************
*** 234,239 ****
--- 234,243 ----
  Finds the menu item object associated with the given menu item identifier and,
  optionally, the (sub)menu it belongs to.
  
+ \perlnote{In wxPerl this method takes just the {\tt id} parameter;
+ in scalar context it returns the associated {\tt Wx::MenuItem}, in list
+ context it returns a two element list ( item, submenu )}
+ 
  \wxheading{Parameters}
  
  \docparam{itemString}{Menu item string to find.}
***************
*** 506,511 ****
--- 510,518 ----
  
  \pythonnote{Only the default constructor is supported in wxPython.
  Use wxMenuBar.Append instead.}
+ 
+ \perlnote{wxPerl only supports the first contructor: 
+ use {\tt Append} instead.}
  
  \membersection{wxMenuBar::\destruct{wxMenuBar}}
  
Index: pen.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/pen.tex,v
retrieving revision 1.9
diff -c -r1.9 pen.tex
*** pen.tex	1999/07/27 21:46:33	1.9
--- pen.tex	2000/12/19 20:10:17
***************
*** 130,135 ****
--- 130,143 ----
  \helpref{wxPen::SetStyle}{wxpensetstyle}, \helpref{wxPen::SetColour}{wxpensetcolour},\rtfsp
  \helpref{wxPen::SetWidth}{wxpensetwidth}, \helpref{wxPen::SetStipple}{wxpensetstipple}
  
+ \perlnote{Constructors supported by wxPerl are:\par
+ \begin{itemize}
+ \item{Wx::Pen->new( colour, width, style )}
+ \item{Wx::Pen->new( colourName, width, style )}
+ \item{Wx::Pen->new( stipple, width )}
+ \end{itemize}
+ }
+ 
  \membersection{wxPen::\destruct{wxPen}}
  
  \func{}{\destruct{wxPen}}{\void}
Index: radiobox.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/radiobox.tex,v
retrieving revision 1.9
diff -c -r1.9 radiobox.tex
*** radiobox.tex	1999/12/25 20:34:50	1.9
--- radiobox.tex	2000/12/19 20:10:17
***************
*** 90,95 ****
--- 90,97 ----
  and {\tt choices} arguments are to a single argument, which is
  a list of strings.}
  
+ \perlnote{In wxPerl there is just an array reference in place of {\tt n}
+ and {\tt choices}.}
  
  \membersection{wxRadioBox::\destruct{wxRadioBox}}
  
Index: scrolwin.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/scrolwin.tex,v
retrieving revision 1.13.2.1
diff -c -r1.13.2.1 scrolwin.tex
*** scrolwin.tex	2000/04/27 14:32:59	1.13.2.1
--- scrolwin.tex	2000/12/19 20:10:18
***************
*** 121,126 ****
--- 121,129 ----
  \pythonnote{The wxPython version of this methods accepts only two
  parameters and returns xx and yy as a tuple of values.}
  
+ \perlnote{In wxPerl this method takes two parameters and returns a
+ 2-element list {\tt ( xx, yy )}.}
+ 
  \membersection{wxScrolledWindow::CalcUnscrolledPosition}\label{wxscrolledwindowcalcunscrolledposition}
  
  \constfunc{void}{CalcUnscrolledPosition}{
***************
*** 141,146 ****
--- 144,152 ----
  \pythonnote{The wxPython version of this methods accepts only two
  parameters and returns xx and yy as a tuple of values.}
  
+ \perlnote{In wxPerl this method takes two parameters and returns a
+ 2-element list {\tt ( xx, yy )}.}
+ 
  \membersection{wxScrolledWindow::Create}\label{wxscrolledwindowcreate}
  
  \func{bool}{Create}{\param{wxWindow*}{ parent}, \param{wxWindowID }{id = -1},\rtfsp
***************
*** 196,201 ****
--- 202,209 ----
  \pythonnote{The wxPython version of this methods accepts no
  parameters and returns a tuple of values for xUnit and yUnit.}
  
+ \perlnote{In wxPerl this method takes no parameters and returns a
+ 2-element list {\tt ( xUnit, yUnit )}.}
  
  \membersection{wxScrolledWindow::GetVirtualSize}\label{wxscrolledwindowgetvirtualsize}
  
***************
*** 224,229 ****
--- 232,240 ----
  \pythonnote{The wxPython version of this methods accepts no
  parameters and returns a tuple of values for x and y.}
  
+ \perlnote{In wxPerl this method takes no parameters and returns a
+ 2-element list {\tt ( x, y )}.}
+ 
  \membersection{wxScrolledWindow::IsRetained}\label{wxscrolledwindowisretained}
  
  \constfunc{bool}{IsRetained}{\void}
***************
*** 382,384 ****
--- 393,397 ----
  \pythonnote{The wxPython version of this methods accepts no
  parameters and returns a tuple of values for x and y.}
  
+ \perlnote{In wxPerl this method takes no parameters and returns a
+ 2-element list {\tt ( x, y )}.}
Index: statusbr.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/statusbr.tex,v
retrieving revision 1.7.2.1
diff -c -r1.7.2.1 statusbr.tex
*** statusbr.tex	2000/05/24 17:30:38	1.7.2.1
--- statusbr.tex	2000/12/19 20:10:19
***************
*** 207,212 ****
--- 207,215 ----
  \pythonnote{Only the first parameter is accepted.  Use SetStatusWidths
  to set the widths of the fields.}
  
+ \perlnote{In wxPerl this function acceps only the {\tt n} parameter.
+ Use SetStatusWidths to set the field widths.}
+ 
  \wxheading{Parameters}
  
  \docparam{number}{The number of fields.}
***************
*** 265,269 ****
  
  \pythonnote{Only a single parameter is required, a Python list of
  integers.}
- 
  
--- 268,272 ----
  
  \pythonnote{Only a single parameter is required, a Python list of
  integers.}
  
+ \perlnote{In wxPerl this method takes as parameters the field widths.}
Index: tex2rtf.ini
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/tex2rtf.ini,v
retrieving revision 1.10
diff -c -r1.10 tex2rtf.ini
*** tex2rtf.ini	1999/09/30 07:13:39	1.10
--- tex2rtf.ini	2000/12/19 20:10:19
***************
*** 36,40 ****
  \bftt [1] {\bf{\tt{#1}}}
  \pythonnote [1] {{\bf \fcol{blue}{wxPython note:}} #1}
  %\pythonnote [1] {}
! 
  
--- 36,40 ----
  \bftt [1] {\bf{\tt{#1}}}
  \pythonnote [1] {{\bf \fcol{blue}{wxPython note:}} #1}
  %\pythonnote [1] {}
! \perlnote [1] {{\bf \fcol{blue}{wxPerl note:}} #1}
  
Index: texhelp.sty
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/texhelp.sty,v
retrieving revision 1.3
diff -c -r1.3 texhelp.sty
*** texhelp.sty	1999/01/29 22:05:00	1.3
--- texhelp.sty	2000/12/19 20:10:20
***************
*** 103,108 ****
--- 103,109 ----
  % pythonnote: A note about the wxpython interface.
  %\newcommand{\pythonnote}[1]{{\bf wxPython note: }#1}
  \newcommand{\pythonnote}[1]{{}}
+ \newcommand{\perlnote}[1]{{}}
  
  % =================== Hypertext facilities ===================
  %
Index: text.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/text.tex,v
retrieving revision 1.19.2.2
diff -c -r1.19.2.2 text.tex
*** text.tex	2000/11/10 15:04:50	1.19.2.2
--- text.tex	2000/12/19 20:10:21
***************
*** 317,322 ****
--- 317,325 ----
  \pythonnote{The wxPython version of this method returns a tuple
  consisting of the from and to values.}
  
+ \perlnote{In wxPerl this method takes no parameter and returns a
+ 2-element list {\tt ( from, to )}.}
+ 
  \membersection{wxTextCtrl::GetValue}\label{wxtextctrlgetvalue}
  
  \constfunc{wxString}{GetValue}{\void}
***************
*** 424,429 ****
--- 427,435 ----
  \pythonnote{In Python, PositionToXY() returns a tuple containing the x and
  y values, so (x,y) = PositionToXY() is equivalent to the call described
  above.}
+ 
+ \perlnote{In wxPerl this method only takes the {\tt pos} parameter, and
+ returns a 2-element list {\tt ( x, y )}.}
  
  \membersection{wxTextCtrl::Redo}\label{wxtextctrlredo}
  
Index: window.tex
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/docs/latex/wx/window.tex,v
retrieving revision 1.67.2.7
diff -c -r1.67.2.7 window.tex
*** window.tex	2000/08/20 19:55:34	1.67.2.7
--- window.tex	2000/12/19 20:10:26
***************
*** 224,229 ****
--- 224,232 ----
  
  \constfunc{virtual void}{ClientToScreen}{\param{int* }{x}, \param{int* }{y}}
  
+ \perlnote{In wxPerl this method returns a 2-element list intead of
+ modifying its parameters.}
+ 
  \constfunc{virtual wxPoint}{ClientToScreen}{\param{const wxPoint\&}{ pt}}
  
  Converts to screen coordinates from coordinates relative to this window.
***************
*** 244,250 ****
  \end{twocollist}}
  }
  
- 
  \membersection{wxWindow::Close}\label{wxwindowclose}
  
  \func{virtual bool}{Close}{\param{bool}{ force = FALSE}}
--- 247,252 ----
***************
*** 509,514 ****
--- 511,519 ----
  
  \constfunc{virtual void}{GetClientSize}{\param{int* }{width}, \param{int* }{height}}
  
+ \perlnote{In wxPerl this method takes no parameter and returns 
+ a 2-element list {\tt ( width, height )}.}
+ 
  \constfunc{virtual wxSize}{GetClientSize}{\void}
  
  This gets the size of the window `client area' in pixels.  The client area is the
***************
*** 684,689 ****
--- 689,703 ----
  \end{twocollist}}
  }
  
+ \perlnote{In wxPerl there are two methods instead of a single overloaded
+ method:\par
+ \indented{2cm}{\begin{twocollist}
+ \twocolitem{{\bf GetPosition()}}{Returns a Wx::Point}
+ \twocolitem{{\bf GetPositionXY()}}{Returns a 2-element list
+  {\tt ( x, y )}}
+ \end{twocollist}
+ }}
+ 
  \membersection{wxWindow::GetRect}\label{wxwindowgetrect}
  
  \constfunc{virtual wxRect}{GetRect}{\void}
***************
*** 742,747 ****
--- 756,770 ----
  \end{twocollist}}
  }
  
+ \perlnote{In wxPerl there are two methods instead of a single overloaded
+ method:\par
+ \indented{2cm}{\begin{twocollist}
+ \twocolitem{{\bf GetSize()}}{Returns a Wx::Size}
+ \twocolitem{{\bf GetSizeWH()}}{Returns a 2-element list
+  {\tt ( width, height )}}
+ \end{twocollist}
+ }}
+ 
  \membersection{wxWindow::GetTextExtent}
  
  \constfunc{virtual void}{GetTextExtent}{\param{const wxString\& }{string}, \param{int* }{x}, \param{int* }{y},
***************
*** 777,782 ****
--- 800,808 ----
  \end{twocollist}}
  }
  
+ \perlnote{In wxPerl this method takes only the {\tt string} and optionally
+  {\tt font} parameters, and returns a 4-element list
+  {\tt ( x, y, descent, externalLeading )}.}
  
  \membersection{wxWindow::GetTitle}\label{wxwindowgettitle}
  

 	  	 
