? mypatch.patch
? untransformedDrawing.patch
Index: include/wx/dc.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/include/wx/dc.h,v
retrieving revision 1.69
diff -b -u -2 -r1.69 dc.h
--- include/wx/dc.h	2005/06/26 15:46:07	1.69
+++ include/wx/dc.h	2005/06/29 15:04:44
@@ -200,4 +200,7 @@
         { DoDrawPoint(pt.x, pt.y); }
 
+    void DrawLines_untransformed(int n, wxPoint points[])
+    { DoDrawLines_untransformed(n,points); }
+
     void DrawLines(int n, wxPoint points[],
                    wxCoord xoffset = 0, wxCoord yoffset = 0)
@@ -206,4 +209,7 @@
                    wxCoord xoffset = 0, wxCoord yoffset = 0);
 
+    void DrawPolygon_untransformed(int n, wxPoint points[])
+        { DoDrawPolygon_untransformed(n, points); }
+
     void DrawPolygon(int n, wxPoint points[],
                      wxCoord xoffset = 0, wxCoord yoffset = 0,
@@ -686,6 +692,13 @@
     virtual void DoGetSizeMM(int* width, int* height) const = 0;
 
+    virtual void DoDrawLines_untransformed(const int& n, wxPoint points[])
+    { DoDrawLines(n,points,0,0); }
+
     virtual void DoDrawLines(int n, wxPoint points[],
                              wxCoord xoffset, wxCoord yoffset) = 0;
+
+    virtual void DoDrawPolygon_untransformed(const int& n, wxPoint points[] )
+    { DoDrawPolygon(n,points,0,0); }
+
     virtual void DoDrawPolygon(int n, wxPoint points[],
                                wxCoord xoffset, wxCoord yoffset,
Index: include/wx/defs.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/include/wx/defs.h,v
retrieving revision 1.502
diff -b -u -2 -r1.502 defs.h
--- include/wx/defs.h	2005/06/10 17:53:06	1.502
+++ include/wx/defs.h	2005/06/29 15:04:50
@@ -2682,4 +2682,5 @@
 typedef struct _GdkAtom        *GdkAtom;
 typedef struct _GdkDrawable     GdkWindow;
+typedef struct _GdkPoint	    GdkPoint;
 typedef struct _GdkDrawable     GdkBitmap;
 typedef struct _GdkDrawable     GdkPixmap;
Index: include/wx/gtk/dcclient.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/include/wx/gtk/dcclient.h,v
retrieving revision 1.38
diff -b -u -2 -r1.38 dcclient.h
--- include/wx/gtk/dcclient.h	2004/12/16 21:23:58	1.38
+++ include/wx/gtk/dcclient.h	2005/06/29 15:04:51
@@ -41,4 +41,7 @@
     virtual bool CanGetTextExtent() const { return true; }
 
+private:
+    inline void DoDrawGdkPolygon(const int& n, GdkPoint* gdkpoints) const;
+
 protected:
     virtual void DoGetSize(int *width, int *height) const;
@@ -56,4 +59,7 @@
     virtual void DoDrawLines(int n, wxPoint points[],
                              wxCoord xoffset, wxCoord yoffset);
+    void DoDrawLines_untransformed( const int& n, wxPoint points[] );
+
+    virtual void DoDrawPolygon_untransformed(const int& n, wxPoint points[]);
     virtual void DoDrawPolygon(int n, wxPoint points[],
                                wxCoord xoffset, wxCoord yoffset,
Index: src/gtk/dcclient.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/src/gtk/dcclient.cpp,v
retrieving revision 1.201
diff -b -u -2 -r1.201 dcclient.cpp
--- src/gtk/dcclient.cpp	2005/06/14 13:00:42	1.201
+++ src/gtk/dcclient.cpp	2005/06/29 15:05:07
@@ -685,4 +685,26 @@
 }
 
+void wxWindowDC::DoDrawLines_untransformed( const int& n, wxPoint points[] )
+{
+    wxCHECK_RET( Ok(), wxT("invalid window dc") );
+
+    if (m_pen.GetStyle() == wxTRANSPARENT)
+        return;
+
+    if (n <= 0)
+        return;
+
+    GdkPoint* gpts = reinterpret_cast<GdkPoint*> (points);
+
+    for (int i = 0; i < n; ++i)
+    {
+        CalcBoundingBox( points[i].x, points[i].y );
+    }
+
+    if (m_window)
+        gdk_draw_lines( m_window, m_penGC, gpts, n);
+}
+
+
 void wxWindowDC::DoDrawLines( int n, wxPoint points[], wxCoord xoffset, wxCoord yoffset )
 {
@@ -716,22 +738,11 @@
 }
 
-void wxWindowDC::DoDrawPolygon( int n, wxPoint points[], wxCoord xoffset, wxCoord yoffset, int WXUNUSED(fillStyle) )
+inline void wxWindowDC::DoDrawGdkPolygon(const int& n, GdkPoint* gdkpoints) const
 {
-    wxCHECK_RET( Ok(), wxT("invalid window dc") );
-
-    if (n <= 0) return;
-
-    GdkPoint *gdkpoints = new GdkPoint[n+1];
-    int i;
-    for (i = 0 ; i < n ; i++)
-    {
-        gdkpoints[i].x = XLOG2DEV(points[i].x + xoffset);
-        gdkpoints[i].y = YLOG2DEV(points[i].y + yoffset);
-
-        CalcBoundingBox( points[i].x + xoffset, points[i].y + yoffset );
-    }
-
-    if (m_window)
-    {
+    //most common use (I think)
+    if ((m_brush.GetStyle() == wxSOLID)){
+        gdk_draw_polygon( m_window, m_brushGC, TRUE, gdkpoints, n );
+    } else
+    //everything else worth drawing
         if (m_brush.GetStyle() != wxTRANSPARENT)
         {
@@ -785,7 +796,46 @@
 
         }
+}
+
+void wxWindowDC::DoDrawPolygon( int n, wxPoint points[], wxCoord xoffset, wxCoord yoffset, int WXUNUSED(fillStyle) )
+{
+    wxCHECK_RET( Ok(), wxT("invalid window dc") );
+
+    if (n <= 0) return;
+
+    GdkPoint *gdkpoints = new GdkPoint[n+1];
+    int i;
+    for (i = 0 ; i < n ; i++)
+    {
+        gdkpoints[i].x = XLOG2DEV(points[i].x + xoffset);
+        gdkpoints[i].y = YLOG2DEV(points[i].y + yoffset);
+
+        CalcBoundingBox( points[i].x + xoffset, points[i].y + yoffset );
     }
 
+    if (m_window)
+        DoDrawGdkPolygon(n,gdkpoints);
+
     delete[] gdkpoints;
+}
+
+
+void wxWindowDC::DoDrawPolygon_untransformed(const int& n, wxPoint points[] )
+{
+    wxCHECK_RET( Ok(), wxT("invalid window dc") );
+
+    if (n <= 0) return;
+
+    //FIXME: Keep an eye on that in future versions, today this works fine
+    //and *definitely* improves performance
+    GdkPoint *gdkpoints = reinterpret_cast<GdkPoint*> (points);
+    int i;
+    for (i = 0 ; i < n ; ++i)
+    {
+        CalcBoundingBox( points[i].x, points[i].y );
+    }
+
+    if (m_window)
+        DoDrawGdkPolygon(n,gdkpoints);
 }
 

 	  	 
