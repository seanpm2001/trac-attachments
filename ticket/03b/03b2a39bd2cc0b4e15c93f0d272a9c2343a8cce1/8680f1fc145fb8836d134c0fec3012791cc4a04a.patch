diff -uNr wxWidgets-2.9.3-rc1/Include/wx/osx/carbon/dataview.h wxWidgetsProject/Include/wx/osx/carbon/dataview.h
--- wxWidgets-2.9.3-rc1/Include/wx/osx/carbon/dataview.h	2011-12-02 14:25:16.000000000 +0100
+++ wxWidgetsProject/Include/wx/osx/carbon/dataview.h	2011-12-04 19:16:01.000000000 +0100
@@ -164,7 +164,7 @@
   OSStatus GetDefaultRowHeight  (UInt16 * height ) const;
   OSStatus GetHeaderButtonHeight(UInt16 *height );
   OSStatus GetPartBounds        (DataBrowserItemID item, DataBrowserPropertyID property, DataBrowserPropertyPart part, Rect* bounds);
-  OSStatus GetRowHeight         (DataBrowserItemID item , UInt16 *height) const;
+  OSStatus GetItemRowHeight     (DataBrowserItemID item , UInt16 *height) const;
   OSStatus GetScrollPosition    (UInt32* top, UInt32 *left) const;
 
 #if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_4
@@ -424,8 +429,9 @@
  // other methods (inherited from wxDataViewWidgetImpl)
  //
   virtual void DoSetIndent (int indent);
+  virtual int  GetRowHeight(wxDataViewItem const& item) const;
   virtual void HitTest     (wxPoint const& point, wxDataViewItem& item, wxDataViewColumn*& columnPtr) const;
-  virtual void SetRowHeight(wxDataViewItem const& item, unsigned int height);
+  virtual bool SetRowHeight(wxDataViewItem const& item, int height);
   virtual void OnSize      ();
 
   virtual void StartEditor( const wxDataViewItem & item, unsigned int column );
diff -uNr wxWidgets-2.9.3-rc1/Include/wx/osx/carbon/private.h wxWidgetsProject/Include/wx/osx/carbon/private.h
--- wxWidgets-2.9.3-rc1/Include/wx/osx/carbon/private.h	2011-12-02 14:25:16.000000000 +0100
+++ wxWidgetsProject/Include/wx/osx/carbon/private.h	2011-12-04 17:46:49.000000000 +0100
@@ -21,6 +21,12 @@
 
 #if wxUSE_GUI
 
+#if wxOSX_USE_IPHONE
+#include <CoreGraphics/CoreGraphics.h>
+#else
+#include <ApplicationServices/ApplicationServices.h>
+#endif
+
 #include "wx/osx/uma.h"
 
 #include "wx/listbox.h"
diff -uNr wxWidgets-2.9.3-rc1/Include/wx/osx/cocoa/dataview.h wxWidgetsProject/Include/wx/osx/cocoa/dataview.h
--- wxWidgets-2.9.3-rc1/Include/wx/osx/cocoa/dataview.h	2011-12-02 14:25:16.000000000 +0100
+++ wxWidgetsProject/Include/wx/osx/cocoa/dataview.h	2011-12-04 17:15:54.000000000 +0100
@@ -492,10 +492,11 @@
     // other methods (inherited from wxDataViewWidgetImpl)
     //
     virtual void DoSetIndent(int indent);
+    virtual int GetRowHeight(wxDataViewItem const& item) const;
     virtual void HitTest(const wxPoint& point,
                          wxDataViewItem& item,
                          wxDataViewColumn*& columnPtr) const;
-    virtual void SetRowHeight(const wxDataViewItem& item, unsigned int height);
+    virtual bool SetRowHeight(const wxDataViewItem& item, int height);
     virtual void OnSize();
     
     virtual void StartEditor( const wxDataViewItem & item, unsigned int column );
diff -uNr wxWidgets-2.9.3-rc1/Include/wx/osx/core/dataview.h wxWidgetsProject/Include/wx/osx/core/dataview.h
--- wxWidgets-2.9.3-rc1/Include/wx/osx/core/dataview.h	2011-12-02 14:25:16.000000000 +0100
+++ wxWidgetsProject/Include/wx/osx/core/dataview.h	2011-12-04 17:16:21.000000000 +0100
@@ -107,8 +107,9 @@
  // other methods
  //
   virtual void DoSetIndent (int indent)                                                                     = 0; // sets the indention in the native control
+  virtual int  GetRowHeight(wxDataViewItem const& item) const                                               = 0; // returns the row height
   virtual void HitTest     (wxPoint const& point, wxDataViewItem& item, wxDataViewColumn*& columnPtr) const = 0; // return the item and column pointer that contains with the passed point
-  virtual void SetRowHeight(wxDataViewItem const& item, unsigned int height)                                = 0; // sets the height of the row containg the passed item in the native control
+  virtual bool SetRowHeight(wxDataViewItem const& item, int height)                                         = 0; // sets the height of the row containg the passed item in the native control
   virtual void OnSize      (void)                                                                           = 0; // updates the layout of the native control after a size event
   virtual void StartEditor( const wxDataViewItem & item, unsigned int column )                              = 0; // starts editing the passed in item and column
 };
diff -uNr wxWidgets-2.9.3-rc1/Include/wx/osx/dataview.h wxWidgetsProject/Include/wx/osx/dataview.h
--- wxWidgets-2.9.3-rc1/Include/wx/osx/dataview.h	2011-12-02 14:25:16.000000000 +0100
+++ wxWidgetsProject/Include/wx/osx/dataview.h	2011-12-04 18:56:43.000000000 +0100
@@ -173,8 +173,14 @@
   virtual void Expand(const wxDataViewItem& item);
   virtual bool IsExpanded(const wxDataViewItem & item) const;
 
   virtual unsigned int GetCount() const;
   virtual wxRect GetItemRect(const wxDataViewItem& item, const wxDataViewColumn* columnPtr) const;
+  virtual int GetRowHeight(wxDataViewItem const& item) const;
   virtual int GetSelectedItemsCount() const;
   virtual int GetSelections(wxDataViewItemArray& sel) const;
 
diff -uNr wxWidgets-2.9.3-rc1/src/osx/carbon/dataview.cpp wxWidgetsProject/src/osx/carbon/dataview.cpp
--- wxWidgets-2.9.3-rc1/src/osx/carbon/dataview.cpp	2011-12-02 14:25:16.000000000 +0100
+++ wxWidgetsProject/src/osx/carbon/dataview.cpp	2011-12-04 19:15:58.000000000 +0100
@@ -484,14 +484,14 @@
   return ::GetDataBrowserListViewHeaderBtnHeight(m_controlRef,height);
 }
 
-OSStatus wxMacDataBrowserTableViewControl::GetPartBounds(DataBrowserItemID item, DataBrowserPropertyID propertyID, DataBrowserPropertyPart part, Rect* bounds)
+OSStatus wxMacDataBrowserTableViewControl::GetItemRowHeight(DataBrowserItemID item, UInt16* height) const
 {
-  return ::GetDataBrowserItemPartBounds(m_controlRef,item,propertyID,part,bounds);
+  return ::GetDataBrowserTableViewItemRowHeight(m_controlRef,item,height);
 }
 
-OSStatus wxMacDataBrowserTableViewControl::GetRowHeight(DataBrowserItemID item, UInt16* height) const
+OSStatus wxMacDataBrowserTableViewControl::GetPartBounds(DataBrowserItemID item, DataBrowserPropertyID propertyID, DataBrowserPropertyPart part, Rect* bounds)
 {
-  return ::GetDataBrowserTableViewItemRowHeight(m_controlRef,item,height);
+  return ::GetDataBrowserItemPartBounds(m_controlRef,item,propertyID,part,bounds);
 }
 
 OSStatus wxMacDataBrowserTableViewControl::GetScrollPosition( UInt32 *top , UInt32 *left ) const
@@ -1218,6 +1291,20 @@
 //
 // other methods (inherited from wxDataViewWidgetImpl)
 //
+void wxMacDataViewDataBrowserListViewControl::DoSetIndent(int indent)
+{
+  SetIndent(static_cast<float>(indent));
+}
+
+int wxMacDataViewDataBrowserListViewControl::GetRowHeight(wxDataViewItem const& item) const
+{
+  UInt16 height;
+
+
+  wxCHECK_MSG(GetItemRowHeight(reinterpret_cast<DataBrowserItemID>(item.GetID()),&height) == noErr,0,_("Could not determine row height"));
+  return static_cast<int>(height);
+}
+
 void
 wxMacDataViewDataBrowserListViewControl::HitTest(const wxPoint& WXUNUSED(point),
                                                  wxDataViewItem& item,
@@ -1228,14 +1315,9 @@
   columnPtr = NULL;
 }
 
-void wxMacDataViewDataBrowserListViewControl::DoSetIndent(int indent)
-{
-  SetIndent(static_cast<float>(indent));
-}
-
-void wxMacDataViewDataBrowserListViewControl::SetRowHeight(wxDataViewItem const& item, unsigned int height)
+bool wxMacDataViewDataBrowserListViewControl::SetRowHeight(wxDataViewItem const& item, int height)
 {
-  SetItemRowHeight(reinterpret_cast<DataBrowserItemID>(item.GetID()),static_cast<UInt16>(height));
+  return (SetItemRowHeight(reinterpret_cast<DataBrowserItemID>(item.GetID()),static_cast<UInt16>(height)) == noErr);
 }
 
 void wxMacDataViewDataBrowserListViewControl::OnSize()
diff -uNr wxWidgets-2.9.3-rc1/src/osx/cocoa/dataview.mm wxWidgetsProject/src/osx/cocoa/dataview.mm
--- wxWidgets-2.9.3-rc1/src/osx/cocoa/dataview.mm	2011-12-02 14:25:16.000000000 +0100
+++ wxWidgetsProject/src/osx/cocoa/dataview.mm	2011-12-04 17:15:54.000000000 +0100
@@ -1,3 +1,4 @@
+
 ///////////////////////////////////////////////////////////////////////////////
 // Name:        src/osx/cocoa/dataview.mm
 // Purpose:     wxDataView
@@ -664,7 +665,7 @@
 
     wxCHECK_MSG( model, nil, "Valid model in data source does not exist." );
 
-    wxDataViewColumn* col(static_cast<wxDataViewColumn*>([[tableColumn identifier] pointer]));
+    wxDataViewColumn* col(static_cast<wxDataViewColumn*>([(wxPointerObject*)[tableColumn identifier] pointer]));
     const unsigned colIdx = col->GetModelColumn();
 
     wxDataViewItem dataViewItem(wxDataViewItemFromItem(item));
@@ -687,7 +688,7 @@
 {
     wxUnusedVar(outlineView);
 
-    wxDataViewColumn* col(static_cast<wxDataViewColumn*>([[tableColumn identifier] pointer]));
+    wxDataViewColumn* col(static_cast<wxDataViewColumn*>([(wxPointerObject*)[tableColumn identifier] pointer]));
 
     col->GetRenderer()->
         OSXOnCellChanged(object, wxDataViewItemFromItem(item), col->GetModelColumn());
@@ -1624,7 +1625,7 @@
 //
 -(void) outlineView:(NSOutlineView*)outlineView mouseDownInHeaderOfTableColumn:(NSTableColumn*)tableColumn
 {
-    wxDataViewColumn* const col(static_cast<wxDataViewColumn*>([[tableColumn identifier] pointer]));
+    wxDataViewColumn* const col(static_cast<wxDataViewColumn*>([(wxPointerObject*)[tableColumn identifier] pointer]));
 
     wxDataViewCtrl* const dvc = implementation->GetDataViewCtrl();
 
@@ -1719,11 +1720,7 @@
     wxDataViewCtrl * const dvc = implementation->GetDataViewCtrl();
     wxDataViewModel * const model = dvc->GetModel();
 
-    wxDataViewColumn * const
-        dvCol(static_cast<wxDataViewColumn*>(
-                    [[tableColumn identifier] pointer]
-                    )
-             );
+    wxDataViewColumn* const dvCol(static_cast<wxDataViewColumn*>([(wxPointerObject*)[tableColumn identifier] pointer]));
     const unsigned colIdx = dvCol->GetModelColumn();
 
     wxDataViewItem dvItem(wxDataViewItemFromItem(item));
@@ -1760,7 +1757,7 @@
 {
     int const newColumnPosition = [[[notification userInfo] objectForKey:@"NSNewColumn"] intValue];
 
-    wxDataViewColumn* const col(static_cast<wxDataViewColumn*>([[[[self tableColumns] objectAtIndex:newColumnPosition] identifier] pointer]));
+    wxDataViewColumn* const col(static_cast<wxDataViewColumn*>([(wxPointerObject*)[[[self tableColumns] objectAtIndex:newColumnPosition] identifier] pointer]));
 
     wxDataViewCtrl* const dvc = implementation->GetDataViewCtrl();
 
@@ -1829,7 +1826,7 @@
 
     wxDataViewColumn* const col =
         static_cast<wxDataViewColumn*>(
-                [[[[self tableColumns] objectAtIndex:currentlyEditedColumn] identifier] pointer]);
+                [(wxPointerObject*)[[[self tableColumns] objectAtIndex:currentlyEditedColumn] identifier] pointer]);
 
     wxDataViewCtrl* const dvc = implementation->GetDataViewCtrl();
 
@@ -1867,7 +1864,7 @@
     {
         wxDataViewColumn* const col =
             static_cast<wxDataViewColumn*>(
-                    [[[[self tableColumns] objectAtIndex:currentlyEditedColumn] identifier] pointer]);
+                    [(wxPointerObject*)[[[self tableColumns] objectAtIndex:currentlyEditedColumn] identifier] pointer]);
 
         wxDataViewCtrl* const dvc = implementation->GetDataViewCtrl();
 
@@ -1979,7 +1976,7 @@
 
 wxDataViewColumn* wxCocoaDataViewControl::GetColumn(unsigned int pos) const
 {
-    return static_cast<wxDataViewColumn*>([[[[m_OutlineView tableColumns] objectAtIndex:pos] identifier] pointer]);
+    return static_cast<wxDataViewColumn*>([(wxPointerObject*)[[[m_OutlineView tableColumns] objectAtIndex:pos] identifier] pointer]);
 }
 
 int wxCocoaDataViewControl::GetColumnPosition(const wxDataViewColumn *columnPtr) const
@@ -2328,7 +2325,7 @@
 
     for (UInt32 i=0; i<noOfColumns; ++i)
         if ([[columns objectAtIndex:i] sortDescriptorPrototype] != nil)
-            return static_cast<wxDataViewColumn*>([[[columns objectAtIndex:i] identifier] pointer]);
+            return static_cast<wxDataViewColumn*>([(wxPointerObject*)[[columns objectAtIndex:i] identifier] pointer]);
     return NULL;
 }
 
@@ -2351,6 +2348,11 @@
     [m_OutlineView setIndentationPerLevel:static_cast<CGFloat>(indent)];
 }
 
+int wxCocoaDataViewControl::GetRowHeight(wxDataViewItem const& WXUNUSED(item)) const
+{
+  return static_cast<int>([m_OutlineView rowHeight]);
+}
+
 void wxCocoaDataViewControl::HitTest(const wxPoint& point, wxDataViewItem& item, wxDataViewColumn*& columnPtr) const
 {
     NSPoint const nativePoint = wxToNSPoint((NSScrollView*) GetWXWidget(),point);
@@ -2363,7 +2365,7 @@
     indexRow    = [m_OutlineView rowAtPoint:   nativePoint];
     if ((indexColumn >= 0) && (indexRow >= 0))
     {
-        columnPtr = static_cast<wxDataViewColumn*>([[[[m_OutlineView tableColumns] objectAtIndex:indexColumn] identifier] pointer]);
+        columnPtr = static_cast<wxDataViewColumn*>([(wxPointerObject*)[[[m_OutlineView tableColumns] objectAtIndex:indexColumn] identifier] pointer]);
         item      = wxDataViewItem([[m_OutlineView itemAtRow:indexRow] pointer]);
     }
     else
@@ -2373,9 +2375,10 @@
     }
 }
 
-void wxCocoaDataViewControl::SetRowHeight(const wxDataViewItem& WXUNUSED(item), unsigned int WXUNUSED(height))
-    // Not supported by the native control
+bool wxCocoaDataViewControl::SetRowHeight(const wxDataViewItem& WXUNUSED(item), int WXUNUSED(height))
+    // Not supported by the native control; setting the row height is only supported from 10.6 and higher and uses a callback mechanism
 {
+  return false;
 }
 
 void wxCocoaDataViewControl::OnSize()
diff -uNr wxWidgets-2.9.3-rc1/src/osx/dataview_osx.cpp wxWidgetsProject/src/osx/dataview_osx.cpp
--- wxWidgets-2.9.3-rc1/src/osx/dataview_osx.cpp	2011-12-02 14:25:16.000000000 +0100
+++ wxWidgetsProject/src/osx/dataview_osx.cpp	2011-12-04 19:03:33.000000000 +0100
@@ -20,6 +20,9 @@
     #include "wx/dcclient.h"
     #include "wx/icon.h"
 #endif
+#if (defined(wxOSX_USE_CARBON) && (wxOSX_USE_CARBON != 0))
+#include "wx/osx/carbon/dataview.h"
+#endif
 
 #include "wx/osx/core/dataview.h"
 #include "wx/osx/private.h"
@@ -535,6 +538,11 @@
     return wxRect();
 }
 
+int wxDataViewCtrl::GetRowHeight(wxDataViewItem const& item) const
+{
+  return GetDataViewPeer()->GetRowHeight(item);
+}
+
 int wxDataViewCtrl::GetSelectedItemsCount() const
 {
   return GetDataViewPeer()->GetSelectedItemsCount();
@@ -706,12 +714,12 @@
 {
     event.Skip();
 
+#if (defined(wxOSX_USE_CARBON) && (wxOSX_USE_CARBON != 0))
     if (GetModel() == NULL)
         return;
 
-#if 0
     // Doesn't compile anymore
-    wxMacDataViewDataBrowserListViewControlPointer MacDataViewListCtrlPtr(dynamic_cast<wxMacDataViewDataBrowserListViewControlPointer>(m_peer));
+    wxMacDataViewDataBrowserListViewControlPointer MacDataViewListCtrlPtr(dynamic_cast<wxMacDataViewDataBrowserListViewControlPointer>(this->GetPeer()));
 
     int NoOfChildren;
     wxDataViewItemArray items;
@@ -736,7 +744,7 @@
 
            Rect itemrect;
            ::GetDataBrowserItemPartBounds( MacDataViewListCtrlPtr->GetControlRef(),
-              reinterpret_cast<DataBrowserItemID>(firstChild.GetID()), column->GetPropertyID(),
+              reinterpret_cast<DataBrowserItemID>(firstChild.GetID()), column->GetNativeData()->GetPropertyID(),
               kDataBrowserPropertyEnclosingPart, &itemrect );
 
            if (abs( event.GetX() - itemrect.right) < 3)
@@ -750,7 +758,6 @@
        }
 
     }
-
     SetCursor( *wxSTANDARD_CURSOR );
 #endif
 }
