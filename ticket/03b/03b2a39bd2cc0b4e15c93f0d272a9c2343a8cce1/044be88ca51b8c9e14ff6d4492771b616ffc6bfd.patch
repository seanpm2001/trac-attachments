diff -uNr wxWidgets-trunk/include/wx/dataview.h wxWidgetsProject/include/wx/dataview.h
--- wxWidgets-trunk/include/wx/dataview.h	2011-08-22 14:41:19.000000000 +0200
+++ wxWidgetsProject/include/wx/dataview.h	2011-12-04 22:59:28.000000000 +0100
@@ -657,6 +657,11 @@
     int GetIndent() const
         { return m_indent; }
 
+    virtual wxDataViewItem GetFirst(void) const = 0;
+    virtual wxDataViewItem GetLast (void) const = 0;
+    virtual wxDataViewItem GetNext (wxDataViewItem const& item) const = 0;
+    virtual wxDataViewItem GetPrev (wxDataViewItem const& item) const = 0;
+
     // Current item is the one used by the keyboard navigation, it is the same
     // as the (unique) selected item in single selection mode so these
     // functions are mostly useful for controls with wxDV_MULTIPLE style.
@@ -691,6 +696,7 @@
     virtual void HitTest( const wxPoint & point, wxDataViewItem &item, wxDataViewColumn* &column ) const = 0;
     virtual wxRect GetItemRect( const wxDataViewItem & item, const wxDataViewColumn *column = NULL ) const = 0;
 
+    virtual int GetRowHeight(wxDataViewItem const& item) const {return 0;}
     virtual bool SetRowHeight( int WXUNUSED(rowHeight) ) { return false; }
 
     virtual void StartEditor( const wxDataViewItem & WXUNUSED(item),
diff -uNr wxWidgets-trunk/include/wx/osx/carbon/dataview.h wxWidgetsProject/include/wx/osx/carbon/dataview.h
--- wxWidgets-trunk/include/wx/osx/carbon/dataview.h	2011-08-22 14:41:19.000000000 +0200
+++ wxWidgetsProject/include/wx/osx/carbon/dataview.h	2011-12-11 12:07:53.000000000 +0100
@@ -164,7 +164,8 @@
   OSStatus GetDefaultRowHeight  (UInt16 * height ) const;
   OSStatus GetHeaderButtonHeight(UInt16 *height );
   OSStatus GetPartBounds        (DataBrowserItemID item, DataBrowserPropertyID property, DataBrowserPropertyPart part, Rect* bounds);
-  OSStatus GetRowHeight         (DataBrowserItemID item , UInt16 *height) const;
+  OSStatus GetItemRowHeight     (DataBrowserItemID item , UInt16 *height) const;
+  OSStatus GetRowHeight         (UInt16 *height) const;
   OSStatus GetScrollPosition    (UInt32* top, UInt32 *left) const;
 
 #if MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_4
@@ -178,6 +179,7 @@
   OSStatus SetHiliteStyle(DataBrowserTableViewHiliteStyle hiliteStyle);
   OSStatus SetIndent(float Indent);
   OSStatus SetItemRowHeight( DataBrowserItemID item , UInt16 height);
+  OSStatus SetRowHeight(UInt16 height);
   OSStatus SetScrollPosition( UInt32 top , UInt32 left );
 
 //
@@ -396,6 +398,11 @@
   virtual bool         Update       (wxDataViewItem const& parent, wxDataViewItem const& item);
   virtual bool         Update       (wxDataViewItem const& parent, wxDataViewItemArray const& items);
 
+  virtual wxDataViewItem GetFirst(void) const;
+  virtual wxDataViewItem GetLast (void) const;
+  virtual wxDataViewItem GetNext (wxDataViewItem const& item) const;
+  virtual wxDataViewItem GetPrev (wxDataViewItem const& item) const;
+
  //
  // model related methods
  //
@@ -424,8 +431,11 @@
  // other methods (inherited from wxDataViewWidgetImpl)
  //
   virtual void DoSetIndent (int indent);
+  virtual int  GetRowHeight(wxDataViewItem const& item) const;
+  virtual int  GetRowHeight(void) const;
   virtual void HitTest     (wxPoint const& point, wxDataViewItem& item, wxDataViewColumn*& columnPtr) const;
-  virtual void SetRowHeight(wxDataViewItem const& item, unsigned int height);
+  virtual bool SetRowHeight(wxDataViewItem const& item, int height);
+  virtual bool SetRowHeight(int rowHeight);
   virtual void OnSize      ();
 
   virtual void StartEditor( const wxDataViewItem & item, unsigned int column );
diff -uNr wxWidgets-trunk/include/wx/osx/cocoa/dataview.h wxWidgetsProject/include/wx/osx/cocoa/dataview.h
--- wxWidgets-trunk/include/wx/osx/cocoa/dataview.h	2011-08-22 14:41:19.000000000 +0200
+++ wxWidgetsProject/include/wx/osx/cocoa/dataview.h	2011-12-11 12:11:37.000000000 +0100
@@ -466,6 +466,11 @@
     virtual bool Update(const wxDataViewItem& parent,
                         const wxDataViewItemArray& items);
 
+    virtual wxDataViewItem GetFirst(void) const;
+    virtual wxDataViewItem GetLast (void) const;
+    virtual wxDataViewItem GetNext (wxDataViewItem const& item) const;
+    virtual wxDataViewItem GetPrev (wxDataViewItem const& item) const;
+
     // model related methods
     virtual bool AssociateModel(wxDataViewModel* model);
 
@@ -492,10 +497,13 @@
     // other methods (inherited from wxDataViewWidgetImpl)
     //
     virtual void DoSetIndent(int indent);
+    virtual int GetRowHeight(void) const;
+    virtual int GetRowHeight(wxDataViewItem const& item) const;
     virtual void HitTest(const wxPoint& point,
                          wxDataViewItem& item,
                          wxDataViewColumn*& columnPtr) const;
-    virtual void SetRowHeight(const wxDataViewItem& item, unsigned int height);
+    virtual bool SetRowHeight(int rowHeight);
+    virtual bool SetRowHeight(const wxDataViewItem& item, int height);
     virtual void OnSize();
     
     virtual void StartEditor( const wxDataViewItem & item, unsigned int column );
diff -uNr wxWidgets-trunk/include/wx/osx/core/dataview.h wxWidgetsProject/include/wx/osx/core/dataview.h
--- wxWidgets-trunk/include/wx/osx/core/dataview.h	2011-08-22 14:41:19.000000000 +0200
+++ wxWidgetsProject/include/wx/osx/core/dataview.h	2011-12-11 12:09:41.000000000 +0100
@@ -78,6 +78,11 @@
   virtual bool         Update       (wxDataViewItem const& parent, wxDataViewItem const& item)       = 0; // updates the passed item in the native control
   virtual bool         Update       (wxDataViewItem const& parent, wxDataViewItemArray const& items) = 0; // updates the passed items in the native control
 
+  virtual wxDataViewItem GetFirst(void) const = 0;
+  virtual wxDataViewItem GetLast (void) const = 0;
+  virtual wxDataViewItem GetNext (wxDataViewItem const& item) const = 0;
+  virtual wxDataViewItem GetPrev (wxDataViewItem const& item) const = 0;
+
  //
  // model related methods
  //
@@ -107,8 +112,11 @@
  // other methods
  //
   virtual void DoSetIndent (int indent)                                                                     = 0; // sets the indention in the native control
+  virtual int  GetRowHeight(void) const                                                                     = 0; // returns the row height
+  virtual int  GetRowHeight(wxDataViewItem const& item) const                                               = 0; // returns the row height
   virtual void HitTest     (wxPoint const& point, wxDataViewItem& item, wxDataViewColumn*& columnPtr) const = 0; // return the item and column pointer that contains with the passed point
-  virtual void SetRowHeight(wxDataViewItem const& item, unsigned int height)                                = 0; // sets the height of the row containg the passed item in the native control
+  virtual bool SetRowHeight(int rowHeight)                                                                  = 0; // sets the height for all rows
+  virtual bool SetRowHeight(wxDataViewItem const& item, int height)                                         = 0; // sets the height of the row containg the passed item in the native control
   virtual void OnSize      (void)                                                                           = 0; // updates the layout of the native control after a size event
   virtual void StartEditor( const wxDataViewItem & item, unsigned int column )                              = 0; // starts editing the passed in item and column
 };
diff -uNr wxWidgets-trunk/include/wx/osx/dataview.h wxWidgetsProject/include/wx/osx/dataview.h
--- wxWidgets-trunk/include/wx/osx/dataview.h	2011-09-21 17:07:46.000000000 +0200
+++ wxWidgetsProject/include/wx/osx/dataview.h	2011-12-11 12:11:37.000000000 +0100
@@ -173,8 +173,14 @@
   virtual void Expand(const wxDataViewItem& item);
   virtual bool IsExpanded(const wxDataViewItem & item) const;
 
+  virtual wxDataViewItem GetFirst(void) const;
+  virtual wxDataViewItem GetLast (void) const;
+  virtual wxDataViewItem GetNext (wxDataViewItem const& item) const;
+  virtual wxDataViewItem GetPrev (wxDataViewItem const& item) const;
+
   virtual unsigned int GetCount() const;
   virtual wxRect GetItemRect(const wxDataViewItem& item, const wxDataViewColumn* columnPtr) const;
+  virtual int GetRowHeight(wxDataViewItem const& item) const;
   virtual int GetSelectedItemsCount() const;
   virtual int GetSelections(wxDataViewItemArray& sel) const;
 
@@ -184,6 +190,7 @@
 
   virtual void SelectAll();
   virtual void Select(const wxDataViewItem& item);
+  virtual bool SetRowHeight(int rowHeight);
   virtual void SetSelections(const wxDataViewItemArray& sel);
 
   virtual void Unselect(const wxDataViewItem& item);
diff -uNr wxWidgets-trunk/src/osx/carbon/dataview.cpp wxWidgetsProject/src/osx/carbon/dataview.cpp
--- wxWidgets-trunk/src/osx/carbon/dataview.cpp	2011-09-21 17:07:46.000000000 +0200
+++ wxWidgetsProject/src/osx/carbon/dataview.cpp	2011-12-11 12:21:19.000000000 +0100
@@ -484,14 +484,19 @@
   return ::GetDataBrowserListViewHeaderBtnHeight(m_controlRef,height);
 }
 
+OSStatus wxMacDataBrowserTableViewControl::GetItemRowHeight(DataBrowserItemID item, UInt16* height) const
+{
+  return ::GetDataBrowserTableViewItemRowHeight(m_controlRef,item,height);
+}
+
 OSStatus wxMacDataBrowserTableViewControl::GetPartBounds(DataBrowserItemID item, DataBrowserPropertyID propertyID, DataBrowserPropertyPart part, Rect* bounds)
 {
   return ::GetDataBrowserItemPartBounds(m_controlRef,item,propertyID,part,bounds);
 }
 
-OSStatus wxMacDataBrowserTableViewControl::GetRowHeight(DataBrowserItemID item, UInt16* height) const
+OSStatus wxMacDataBrowserTableViewControl::GetRowHeight(UInt16* height) const
 {
-  return ::GetDataBrowserTableViewItemRowHeight(m_controlRef,item,height);
+  return ::GetDataBrowserTableViewRowHeight(m_controlRef,height);
 }
 
 OSStatus wxMacDataBrowserTableViewControl::GetScrollPosition( UInt32 *top , UInt32 *left ) const
@@ -544,6 +549,11 @@
   return ::SetDataBrowserTableViewItemRowHeight(m_controlRef,item,height);
 }
 
+OSStatus wxMacDataBrowserTableViewControl::SetRowHeight(UInt16 height)
+{
+  return ::SetDataBrowserTableViewRowHeight(m_controlRef,height);
+}
+
 OSStatus wxMacDataBrowserTableViewControl::SetScrollPosition(UInt32 top, UInt32 left)
 {
   return ::SetDataBrowserScrollPosition(m_controlRef,top,left);
@@ -977,6 +987,79 @@
   return noOfItems;
 }
 
+wxDataViewItem wxMacDataViewDataBrowserListViewControl::GetFirst(void) const
+{
+  if (this->GetCount() > 0)
+  {
+   // variable definitions and initialization:
+    DataBrowserItemID itemID;
+
+    wxCHECK_MSG(this->GetItemID(0,&itemID) == noErr,wxDataViewItem(),_("Could not get first item"));
+    return wxDataViewItem(reinterpret_cast<void*>(itemID));
+  } /* if */
+  else
+    return wxDataViewItem();
+} /* wxMacDataViewDataBrowserListViewControl::GetFirst(void) const */
+
+wxDataViewItem wxMacDataViewDataBrowserListViewControl::GetLast(void) const
+{
+  unsigned int const noOfItems = this->GetCount();
+
+
+  if (noOfItems > 0)
+  {
+   // variable definitions and initialization:
+    DataBrowserItemID itemID;
+
+    wxCHECK_MSG(this->GetItemID(noOfItems-1,&itemID) == noErr,wxDataViewItem(),_("Could not get last item"));
+    return wxDataViewItem(reinterpret_cast<void*>(itemID));
+  } /* if */
+  else
+    return wxDataViewItem();
+} /* wxMacDataViewDataBrowserListViewControl::GetLast(void) const */
+
+wxDataViewItem wxMacDataViewDataBrowserListViewControl::GetNext(wxDataViewItem const& item) const
+{
+  if (item.IsOk())
+  {
+   // variable definitions and initialization:
+    DataBrowserItemID            itemID(reinterpret_cast<DataBrowserItemID>(item.GetID()));
+    DataBrowserTableViewRowIndex rowIndex;
+    
+    wxCHECK_MSG(this->GetItemRow(itemID,&rowIndex) == noErr,wxDataViewItem(),_("Could not get row index of item"));
+    if (rowIndex+1 < this->GetCount())
+    {
+      wxCHECK_MSG(this->GetItemID(rowIndex+1,&itemID) == noErr,wxDataViewItem(),_("Could not get next item"));
+      return wxDataViewItem(reinterpret_cast<void*>(itemID));
+    } /* if */
+    else
+      return wxDataViewItem();
+  } /* if */
+  else
+    return wxDataViewItem();
+} /* wxMacDataViewDataBrowserListViewControl::GetNext(wxDataViewItem const&) const */
+
+wxDataViewItem wxMacDataViewDataBrowserListViewControl::GetPrev(wxDataViewItem const& item) const
+{
+  if (item.IsOk())
+  {
+   // variable definitions and initialization:
+    DataBrowserItemID            itemID(reinterpret_cast<DataBrowserItemID>(item.GetID()));
+    DataBrowserTableViewRowIndex rowIndex;
+    
+    wxCHECK_MSG(this->GetItemRow(itemID,&rowIndex) == noErr,wxDataViewItem(),_("Could not get row index of item"));
+    if (rowIndex > 0)
+    {
+      wxCHECK_MSG(this->GetItemID(rowIndex-1,&itemID) == noErr,wxDataViewItem(),_("Could not get previous item"));
+      return wxDataViewItem(reinterpret_cast<void*>(itemID));
+    } /* if */
+    else
+      return wxDataViewItem();
+  } /* if */
+  else
+    return wxDataViewItem();
+} /* wxMacDataViewDataBrowserListViewControl::GetPrev(wxDataViewItem const&) const */
+
 wxRect wxMacDataViewDataBrowserListViewControl::GetRectangle(wxDataViewItem const& item, wxDataViewColumn const* columnPtr)
 {
   Rect MacRectangle;
@@ -1218,6 +1301,29 @@
 //
 // other methods (inherited from wxDataViewWidgetImpl)
 //
+void wxMacDataViewDataBrowserListViewControl::DoSetIndent(int indent)
+{
+  SetIndent(static_cast<float>(indent));
+}
+
+int wxMacDataViewDataBrowserListViewControl::GetRowHeight(wxDataViewItem const& item) const
+{
+  UInt16 height;
+
+
+  wxCHECK_MSG(GetItemRowHeight(reinterpret_cast<DataBrowserItemID>(item.GetID()),&height) == noErr,0,_("Could not determine row height"));
+  return static_cast<int>(height);
+}
+
+int wxMacDataViewDataBrowserListViewControl::GetRowHeight(void) const
+{
+  UInt16 height;
+  
+  
+  wxCHECK_MSG(this->wxMacDataBrowserTableViewControl::GetRowHeight(&height) == noErr,0,_("Could not determine row height"));
+  return static_cast<int>(height);
+}
+
 void
 wxMacDataViewDataBrowserListViewControl::HitTest(const wxPoint& WXUNUSED(point),
                                                  wxDataViewItem& item,
@@ -1228,14 +1334,14 @@
   columnPtr = NULL;
 }
 
-void wxMacDataViewDataBrowserListViewControl::DoSetIndent(int indent)
+bool wxMacDataViewDataBrowserListViewControl::SetRowHeight(int height)
 {
-  SetIndent(static_cast<float>(indent));
+  return (SetRowHeight(static_cast<UInt16>(height)) == noErr);
 }
 
-void wxMacDataViewDataBrowserListViewControl::SetRowHeight(wxDataViewItem const& item, unsigned int height)
+bool wxMacDataViewDataBrowserListViewControl::SetRowHeight(wxDataViewItem const& item, int height)
 {
-  SetItemRowHeight(reinterpret_cast<DataBrowserItemID>(item.GetID()),static_cast<UInt16>(height));
+  return (SetItemRowHeight(reinterpret_cast<DataBrowserItemID>(item.GetID()),static_cast<UInt16>(height)) == noErr);
 }
 
 void wxMacDataViewDataBrowserListViewControl::OnSize()
diff -uNr wxWidgets-trunk/src/osx/cocoa/dataview.mm wxWidgetsProject/src/osx/cocoa/dataview.mm
--- wxWidgets-trunk/src/osx/cocoa/dataview.mm	2011-12-04 20:23:42.000000000 +0100
+++ wxWidgetsProject/src/osx/cocoa/dataview.mm	2011-12-11 15:29:01.000000000 +0100
@@ -1,3 +1,4 @@
+
 ///////////////////////////////////////////////////////////////////////////////
 // Name:        src/osx/cocoa/dataview.mm
 // Purpose:     wxDataView
@@ -168,13 +169,7 @@
     // or progress cells in the columns using the corresponding types even for
     // the container rows which is wrong
 
-    // half of the problem is just finding the objects we need from the column
-    // pointer which is itself stashed inside wxPointerObject which we use as
-    // our identifier
-    const wxDataViewColumn * const
-        dvCol = static_cast<wxDataViewColumn *>(
-                    [(wxPointerObject *)[self identifier] pointer]
-                );
+    const wxDataViewColumn * const dvCol = reinterpret_cast<wxDataViewColumn*>([(NSString*)[self identifier] integerValue]);
 
     const wxDataViewCtrl * const dvc = dvCol->GetOwner();
     const wxCocoaDataViewControl * const
@@ -311,16 +306,11 @@
 
 NSTableColumn* CreateNativeColumn(const wxDataViewColumn *column)
 {
-    wxDataViewRenderer * const renderer = column->GetRenderer();
+    wxDataViewRenderer* const renderer = column->GetRenderer();
 
     wxCHECK_MSG( renderer, NULL, "column should have a renderer" );
 
-    wxDVCNSTableColumn * const nativeColumn(
-        [[wxDVCNSTableColumn alloc] initWithIdentifier:
-            [[[wxPointerObject alloc] initWithPointer:
-                const_cast<wxDataViewColumn*>(column)]
-             autorelease]]
-    );
+    wxDVCNSTableColumn* const nativeColumn = [[wxDVCNSTableColumn alloc] initWithIdentifier:[NSString stringWithFormat:@"%lu",reinterpret_cast<NSUInteger>(column)]];
 
     // setting the size related parameters:
     int resizingMask;
@@ -664,7 +654,7 @@
 
     wxCHECK_MSG( model, nil, "Valid model in data source does not exist." );
 
-    wxDataViewColumn* col(static_cast<wxDataViewColumn*>([(wxPointerObject*)[tableColumn identifier] pointer]));
+    wxDataViewColumn* col(reinterpret_cast<wxDataViewColumn*>([(NSString*)[tableColumn identifier] integerValue]));
     const unsigned colIdx = col->GetModelColumn();
 
     wxDataViewItem dataViewItem(wxDataViewItemFromItem(item));
@@ -687,7 +677,7 @@
 {
     wxUnusedVar(outlineView);
 
-    wxDataViewColumn* col(static_cast<wxDataViewColumn*>([(wxPointerObject*)[tableColumn identifier] pointer]));
+    wxDataViewColumn* col(reinterpret_cast<wxDataViewColumn*>([(NSString*)[tableColumn identifier] integerValue]));
 
     col->GetRenderer()->
         OSXOnCellChanged(object, wxDataViewItemFromItem(item), col->GetModelColumn());
@@ -1624,7 +1614,7 @@
 //
 -(void) outlineView:(NSOutlineView*)outlineView mouseDownInHeaderOfTableColumn:(NSTableColumn*)tableColumn
 {
-    wxDataViewColumn* const col(static_cast<wxDataViewColumn*>([(wxPointerObject*)[tableColumn identifier] pointer]));
+    wxDataViewColumn* const col(reinterpret_cast<wxDataViewColumn*>([(NSString*)[tableColumn identifier] integerValue]));
 
     wxDataViewCtrl* const dvc = implementation->GetDataViewCtrl();
 
@@ -1719,7 +1709,7 @@
     wxDataViewCtrl * const dvc = implementation->GetDataViewCtrl();
     wxDataViewModel * const model = dvc->GetModel();
 
-    wxDataViewColumn* const dvCol(static_cast<wxDataViewColumn*>([(wxPointerObject*)[tableColumn identifier] pointer]));
+    wxDataViewColumn* const dvCol(reinterpret_cast<wxDataViewColumn*>([(NSString*)[tableColumn identifier] integerValue]));
     const unsigned colIdx = dvCol->GetModelColumn();
 
     wxDataViewItem dvItem(wxDataViewItemFromItem(item));
@@ -1756,7 +1746,7 @@
 {
     int const newColumnPosition = [[[notification userInfo] objectForKey:@"NSNewColumn"] intValue];
 
-    wxDataViewColumn* const col(static_cast<wxDataViewColumn*>([(wxPointerObject*)[[[self tableColumns] objectAtIndex:newColumnPosition] identifier] pointer]));
+    wxDataViewColumn* const col(reinterpret_cast<wxDataViewColumn*>([(NSString*)[[[self tableColumns] objectAtIndex:newColumnPosition] identifier] integerValue]));
 
     wxDataViewCtrl* const dvc = implementation->GetDataViewCtrl();
 
@@ -1965,7 +1961,7 @@
         [m_OutlineView setOutlineTableColumn:nil]; // due to a bug this does not work
     [m_OutlineView removeTableColumn:columnPtr->GetNativeData()->GetNativeColumnPtr()]; // due to a confirmed bug #6555162 the deletion does not work for
     // outline table columns (... and there is no workaround)
-    return (([m_OutlineView columnWithIdentifier:[[[wxPointerObject alloc] initWithPointer:columnPtr] autorelease]]) == -1);
+    return ([m_OutlineView columnWithIdentifier:[NSString stringWithFormat:@"%lu",reinterpret_cast<NSUInteger>(columnPtr)]] == -1);
 }
 
 void wxCocoaDataViewControl::DoSetExpanderColumn(const wxDataViewColumn *columnPtr)
@@ -1975,12 +1971,12 @@
 
 wxDataViewColumn* wxCocoaDataViewControl::GetColumn(unsigned int pos) const
 {
-    return static_cast<wxDataViewColumn*>([(wxPointerObject*)[[[m_OutlineView tableColumns] objectAtIndex:pos] identifier] pointer]);
+    return reinterpret_cast<wxDataViewColumn*>([(NSString*)[[[m_OutlineView tableColumns] objectAtIndex:pos] identifier] integerValue]);
 }
 
 int wxCocoaDataViewControl::GetColumnPosition(const wxDataViewColumn *columnPtr) const
 {
-    return [m_OutlineView columnWithIdentifier:[[[wxPointerObject alloc] initWithPointer:const_cast<wxDataViewColumn*>(columnPtr)] autorelease]];
+    return [m_OutlineView columnWithIdentifier:[NSString stringWithFormat:@"%lu",reinterpret_cast<NSUInteger>(columnPtr)]];
 }
 
 bool wxCocoaDataViewControl::InsertColumn(unsigned int pos, wxDataViewColumn* columnPtr)
@@ -2224,6 +2220,50 @@
     return true;
 }
 
+wxDataViewItem wxCocoaDataViewControl::GetFirst(void) const
+{
+  return wxDataViewItem([[m_OutlineView itemAtRow:0] pointer]);
+}
+
+wxDataViewItem wxCocoaDataViewControl::GetLast(void) const
+{
+  return wxDataViewItem([[m_OutlineView itemAtRow:[m_OutlineView numberOfRows]-1] pointer]);
+}
+
+wxDataViewItem wxCocoaDataViewControl::GetNext(wxDataViewItem const& item) const
+{
+  if (item.IsOk())
+  {
+   // variable definitions and initialization:
+    NSInteger rowIndex([m_OutlineView rowForItem:[[[wxPointerObject alloc] initWithPointer:item.GetID()] autorelease]]);
+    
+    wxCHECK_MSG(rowIndex >= 0,wxDataViewItem(),_("Item not part of data view"));
+    if (rowIndex+1 < [m_OutlineView numberOfRows])
+      return wxDataViewItem([[m_OutlineView itemAtRow:rowIndex+1] pointer]);
+    else
+      return wxDataViewItem();
+  } /* if */
+  else
+    return wxDataViewItem();
+}
+
+wxDataViewItem wxCocoaDataViewControl::GetPrev(wxDataViewItem const& item) const
+{
+  if (item.IsOk())
+  {
+   // variable definitions and initialization:
+    NSInteger rowIndex([m_OutlineView rowForItem:[[[wxPointerObject alloc] initWithPointer:item.GetID()] autorelease]]);
+    
+    wxCHECK_MSG(rowIndex >= 0,wxDataViewItem(),_("Item not part of data view"));
+    if (rowIndex-1 >= 0)
+      return wxDataViewItem([[m_OutlineView itemAtRow:rowIndex-1] pointer]);
+    else
+      return wxDataViewItem();
+  } /* if */
+  else
+    return wxDataViewItem();
+}
+
 //
 // model related methods
 //
@@ -2324,7 +2364,7 @@
 
     for (UInt32 i=0; i<noOfColumns; ++i)
         if ([[columns objectAtIndex:i] sortDescriptorPrototype] != nil)
-            return static_cast<wxDataViewColumn*>([(wxPointerObject*)[[columns objectAtIndex:i] identifier] pointer]);
+            return reinterpret_cast<wxDataViewColumn*>([(NSString*)[[[m_OutlineView tableColumns] objectAtIndex:i] identifier] integerValue]);
     return NULL;
 }
 
@@ -2347,6 +2387,16 @@
     [m_OutlineView setIndentationPerLevel:static_cast<CGFloat>(indent)];
 }
 
+int wxCocoaDataViewControl::GetRowHeight(void) const
+{
+  return static_cast<int>([m_OutlineView rowHeight]);
+}
+
+int wxCocoaDataViewControl::GetRowHeight(wxDataViewItem const& WXUNUSED(item)) const
+{
+  return static_cast<int>([m_OutlineView rowHeight]);
+}
+
 void wxCocoaDataViewControl::HitTest(const wxPoint& point, wxDataViewItem& item, wxDataViewColumn*& columnPtr) const
 {
     NSPoint const nativePoint = wxToNSPoint((NSScrollView*) GetWXWidget(),point);
@@ -2359,7 +2409,7 @@
     indexRow    = [m_OutlineView rowAtPoint:   nativePoint];
     if ((indexColumn >= 0) && (indexRow >= 0))
     {
-        columnPtr = static_cast<wxDataViewColumn*>([(wxPointerObject*)[[[m_OutlineView tableColumns] objectAtIndex:indexColumn] identifier] pointer]);
+        columnPtr = this->GetColumn(indexColumn);
         item      = wxDataViewItem([[m_OutlineView itemAtRow:indexRow] pointer]);
     }
     else
@@ -2369,9 +2419,16 @@
     }
 }
 
-void wxCocoaDataViewControl::SetRowHeight(const wxDataViewItem& WXUNUSED(item), unsigned int WXUNUSED(height))
-    // Not supported by the native control
+bool wxCocoaDataViewControl::SetRowHeight(int height)
+{
+  [m_OutlineView setRowHeight:static_cast<CGFloat>(height)];
+  return true;
+}
+
+bool wxCocoaDataViewControl::SetRowHeight(const wxDataViewItem& WXUNUSED(item), int WXUNUSED(height))
+    // Not supported by the native control; setting the row height is only supported from 10.6 and higher and uses a callback mechanism
 {
+  return false;
 }
 
 void wxCocoaDataViewControl::OnSize()
diff -uNr wxWidgets-trunk/src/osx/dataview_osx.cpp wxWidgetsProject/src/osx/dataview_osx.cpp
--- wxWidgets-trunk/src/osx/dataview_osx.cpp	2011-12-05 00:57:32.000000000 +0100
+++ wxWidgetsProject/src/osx/dataview_osx.cpp	2011-12-11 12:12:26.000000000 +0100
@@ -20,7 +20,7 @@
     #include "wx/dcclient.h"
     #include "wx/icon.h"
 #endif
-#if wxOSX_USE_CARBON
+#if (defined(wxOSX_USE_CARBON) && (wxOSX_USE_CARBON != 0))
 #include "wx/osx/carbon/dataview.h"
 #endif
 
@@ -530,6 +530,11 @@
     GetDataViewPeer()->SetCurrentItem(item);
 }
 
+wxDataViewItem wxDataViewCtrl::GetFirst(void) const
+{
+  return GetDataViewPeer()->GetFirst();
+}
+
 wxRect wxDataViewCtrl::GetItemRect(wxDataViewItem const& item, wxDataViewColumn const* columnPtr) const
 {
   if (item.IsOk() && (columnPtr != NULL))
@@ -538,6 +543,26 @@
     return wxRect();
 }
 
+wxDataViewItem wxDataViewCtrl::GetLast(void) const
+{
+  return GetDataViewPeer()->GetLast();
+}
+
+wxDataViewItem wxDataViewCtrl::GetNext(wxDataViewItem const& item) const
+{
+  return GetDataViewPeer()->GetNext(item);
+}
+
+wxDataViewItem wxDataViewCtrl::GetPrev(wxDataViewItem const& item) const
+{
+  return GetDataViewPeer()->GetPrev(item);
+}
+
+int wxDataViewCtrl::GetRowHeight(wxDataViewItem const& item) const
+{
+  return GetDataViewPeer()->GetRowHeight(item);
+}
+
 int wxDataViewCtrl::GetSelectedItemsCount() const
 {
   return GetDataViewPeer()->GetSelectedItemsCount();
@@ -572,6 +597,11 @@
   GetDataViewPeer()->SelectAll();
 }
 
+bool wxDataViewCtrl::SetRowHeight(int rowHeight)
+{
+  return this->GetDataViewPeer()->SetRowHeight(rowHeight);
+}
+
 void wxDataViewCtrl::SetSelections(wxDataViewItemArray const& sel)
 {
     size_t const noOfSelections = sel.GetCount();
@@ -709,11 +739,12 @@
 {
     event.Skip();
 
-#if wxOSX_USE_CARBON
+#if (defined(wxOSX_USE_CARBON) && (wxOSX_USE_CARBON != 0))
     if (GetModel() == NULL)
         return;
 
-    wxMacDataViewDataBrowserListViewControlPointer MacDataViewListCtrlPtr(dynamic_cast<wxMacDataViewDataBrowserListViewControlPointer>(GetPeer()));
+    // Doesn't compile anymore
+    wxMacDataViewDataBrowserListViewControlPointer MacDataViewListCtrlPtr(dynamic_cast<wxMacDataViewDataBrowserListViewControlPointer>(this->GetPeer()));
 
     int NoOfChildren;
     wxDataViewItemArray items;
