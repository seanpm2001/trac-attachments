Index: include/wx/msw/listctrl.h
===================================================================
--- include/wx/msw/listctrl.h	(revision 58218)
+++ include/wx/msw/listctrl.h	(working copy)
@@ -14,6 +14,7 @@
 
 #include "wx/textctrl.h"
 #include "wx/dynarray.h"
+#include "wx/vector.h"
 
 class WXDLLIMPEXP_FWD_CORE wxImageList;
 
@@ -74,7 +75,7 @@
 
 
  */
-
+class wxListItemInternalData;
 class WXDLLIMPEXP_CORE wxListCtrl: public wxControl
 {
 public:
@@ -418,7 +419,8 @@
     long              m_count;      // Keep track of item count to save calls to
                                     // ListView_GetItemCount
     bool              m_ignoreChangeMessages;
-
+    wxVector<wxListItemInternalData*>   
+                      m_internalItemsList; // contain pointers to wxListItemInternalData assigned only
     // true if we have any internal data (user data & attributes)
     bool m_AnyInternalData;
 
Index: src/msw/listctrl.cpp
===================================================================
--- src/msw/listctrl.cpp	(revision 58218)
+++ src/msw/listctrl.cpp	(working copy)
@@ -503,6 +503,7 @@
 
 void wxListCtrl::FreeAllInternalData()
 {
+    m_internalItemsList.clear();
     if (m_AnyInternalData)
     {
         int n = GetItemCount();
@@ -891,6 +892,7 @@
             // need to set it
             m_AnyInternalData = true;
             data = new wxListItemInternalData();
+            m_internalItemsList.push_back(data);
             item.lParam = (LPARAM) data;
             item.mask |= LVIF_PARAM;
         };
@@ -1618,17 +1620,20 @@
 //        in a wxListItemInternalData structure refernced by the actual lParam
 long wxListCtrl::FindItem(long start, wxUIntPtr data)
 {
-    long  idx = start + 1;
-    long count = GetItemCount();
-
-    while (idx < count)
-    {
-        if (GetItemData(idx) == data)
-            return idx;
-        idx++;
-    };
-
-    return -1;
+    int idx=-1;
+    if (start+1 < GetItemCount())
+        for (wxVector<wxListItemInternalData*>::iterator 
+            node = m_internalItemsList.begin();node!=m_internalItemsList.end();node++)
+            if (((wxListItemInternalData*)*node)->lParam==(LPARAM)data){
+                LV_FINDINFO findInfo;
+                findInfo.flags = LVFI_PARAM;
+                findInfo.lParam = (LPARAM)*node;
+                int result = ListView_FindItem(GetHwnd(), (int) start, &findInfo);
+                if (result>=0)
+                    //if first set it or get with minimal id
+                    idx=idx==-1?result:wxMin(idx,result);
+            }
+    return idx;
 }
 
 // Find an item nearest this position in the specified direction, starting from
@@ -1732,6 +1737,7 @@
 
         // internal stucture that manages data
         wxListItemInternalData *data = new wxListItemInternalData();
+        m_internalItemsList.push_back(data);
         item.lParam = (LPARAM) data;
 
         if (info.m_mask & wxLIST_MASK_DATA)
@@ -2208,6 +2214,16 @@
                 eventType = wxEVT_COMMAND_LIST_DELETE_ITEM;
                 event.m_itemIndex = iItem;
                 // delete the assoicated internal data
+                { 
+                    wxListItemInternalData *data = wxGetInternalData(this, iItem);
+                    if (data) 
+                        for (wxVector<wxListItemInternalData*>::iterator 
+                            node = m_internalItemsList.begin();node!=m_internalItemsList.end();node++)
+                            if (((wxListItemInternalData*)*node)==data){
+                                m_internalItemsList.erase(node);
+                                break;
+                            }
+                }
                 wxDeleteInternalData(this, iItem);
                 break;
 
