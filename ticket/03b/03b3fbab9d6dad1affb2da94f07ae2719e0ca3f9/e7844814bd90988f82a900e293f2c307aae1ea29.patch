Index: include/wx/msw/listctrl.h
===================================================================
--- include/wx/msw/listctrl.h	(revision 57619)
+++ include/wx/msw/listctrl.h	(working copy)
@@ -418,7 +418,7 @@
     long              m_count;      // Keep track of item count to save calls to
                                     // ListView_GetItemCount
     bool              m_ignoreChangeMessages;
-
+    wxList *          m_internalItemsList; // contain pointers to wxListItemInternalData assigned only
     // true if we have any internal data (user data & attributes)
     bool m_AnyInternalData;
 
Index: src/msw/listctrl.cpp
===================================================================
--- src/msw/listctrl.cpp	(revision 57619)
+++ src/msw/listctrl.cpp	(working copy)
@@ -339,6 +339,7 @@
     m_colCount = 0;
     m_count = 0;
     m_ignoreChangeMessages = false;
+	m_internalItemsList = NULL;
     m_textCtrl = NULL;
     m_AnyInternalData = false;
     m_hasAnyAttr = false;
@@ -503,6 +504,8 @@
 
 void wxListCtrl::FreeAllInternalData()
 {
+    if (m_internalItemsList)
+		m_internalItemsList->Clear();
     if (m_AnyInternalData)
     {
         int n = GetItemCount();
@@ -539,6 +542,7 @@
         delete m_imageListSmall;
     if (m_ownsImageListState)
         delete m_imageListState;
+    delete m_internalItemsList;
 }
 
 // ----------------------------------------------------------------------------
@@ -891,6 +895,9 @@
             // need to set it
             m_AnyInternalData = true;
             data = new wxListItemInternalData();
+            if (!m_internalItemsList)
+                m_internalItemsList = new wxList;
+            m_internalItemsList->Append((wxObject*)data);
             item.lParam = (LPARAM) data;
             item.mask |= LVIF_PARAM;
         };
@@ -1614,17 +1621,20 @@
 //        in a wxListItemInternalData structure refernced by the actual lParam
 long wxListCtrl::FindItem(long start, wxUIntPtr data)
 {
-    long  idx = start + 1;
-    long count = GetItemCount();
-
-    while (idx < count)
-    {
-        if (GetItemData(idx) == data)
-            return idx;
-        idx++;
-    };
-
-    return -1;
+    int idx=-1;
+    if (m_internalItemsList && start+1 < GetItemCount())
+        for (wxList::compatibility_iterator node = m_internalItemsList->GetFirst();node;node = node->GetNext())
+            if (((wxListItemInternalData*)node->GetData())->lParam==(LPARAM)data)
+            {
+                LV_FINDINFO findInfo;
+                findInfo.flags = LVFI_PARAM;
+                findInfo.lParam = (LPARAM)node->GetData();
+                int result = ListView_FindItem(GetHwnd(), (int) start, &findInfo);
+                if (result>=0)
+                    //if first set it or get with minimal id
+					idx=idx==-1?result:wxMin(idx,result);
+            }
+    return idx;
 }
 
 // Find an item nearest this position in the specified direction, starting from
@@ -1728,6 +1738,9 @@
 
         // internal stucture that manages data
         wxListItemInternalData *data = new wxListItemInternalData();
+        if (!m_internalItemsList)
+            m_internalItemsList = new wxList;
+        m_internalItemsList->Append((wxObject*)data);
         item.lParam = (LPARAM) data;
 
         if (info.m_mask & wxLIST_MASK_DATA)
@@ -2204,6 +2217,11 @@
                 eventType = wxEVT_COMMAND_LIST_DELETE_ITEM;
                 event.m_itemIndex = iItem;
                 // delete the assoicated internal data
+                { 
+                    wxListItemInternalData *data = wxGetInternalData(this, iItem);
+                    if (data) 
+                        m_internalItemsList->DeleteObject((wxObject*)data); 
+                } 
                 wxDeleteInternalData(this, iItem);
                 break;
 
