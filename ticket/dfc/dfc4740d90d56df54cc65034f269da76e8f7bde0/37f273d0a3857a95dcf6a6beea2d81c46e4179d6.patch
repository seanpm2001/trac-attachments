--- wxWidgets-2.9.1/src/common/imagtiff.cpp	2010-07-18 06:39:20.000000000 -0700
+++ wxWidgets-2.9.1/src/common/imagtiff.cpp	2011-03-05 16:12:48.773887273 -0800
@@ -391,40 +391,59 @@
             alpha -= 2*w;
     }
 
-    // set the image resolution if it's available
+
+    uint16 spp, bpp, compression;
+    // by loading these here, a written tiff should be as efficient as the original (unless changed by app)
+    // also app can detect monochrome data this way
+    // to be a proper tiff reader, honor specification defaults here so apps don't need to
+    TIFFGetFieldDefaulted(tif, TIFFTAG_SAMPLESPERPIXEL, &spp);
+    TIFFGetFieldDefaulted(tif, TIFFTAG_BITSPERSAMPLE, &bpp);
+    TIFFGetFieldDefaulted(tif, TIFFTAG_COMPRESSION, &compression);
+    image->SetOption(wxIMAGE_OPTION_SAMPLESPERPIXEL, spp);
+    image->SetOption(wxIMAGE_OPTION_BITSPERSAMPLE, bpp);
+    image->SetOption(wxIMAGE_OPTION_COMPRESSION, compression);
+
+    // set the resolution unit
+    wxImageResolution res;
     uint16 tiffRes;
-    if ( TIFFGetField(tif, TIFFTAG_RESOLUTIONUNIT, &tiffRes) )
+    TIFFGetFieldDefaulted ( tif, TIFFTAG_RESOLUTIONUNIT, &tiffRes);
+    switch ( tiffRes )
     {
-        wxImageResolution res;
-        switch ( tiffRes )
-        {
-            default:
-                wxLogWarning(_("Unknown TIFF resolution unit %d ignored"),
-                             tiffRes);
-                // fall through
-
-            case RESUNIT_NONE:
-                res = wxIMAGE_RESOLUTION_NONE;
-                break;
-
-            case RESUNIT_INCH:
-                res = wxIMAGE_RESOLUTION_INCHES;
-                break;
-
-            case RESUNIT_CENTIMETER:
-                res = wxIMAGE_RESOLUTION_CM;
-                break;
-        }
+        default:
+            wxLogWarning(_("Unknown TIFF resolution unit %d ignored"),
+                    tiffRes);
+            // fall through
+        case RESUNIT_NONE:
+            res = wxIMAGE_RESOLUTION_NONE;
+            break;
+        case RESUNIT_INCH:
+            res = wxIMAGE_RESOLUTION_INCHES;
+            break;
+        case RESUNIT_CENTIMETER:
+            res = wxIMAGE_RESOLUTION_CM;
+            break;
+    }
+    image->SetOption(wxIMAGE_OPTION_RESOLUTIONUNIT, res);
 
-        if ( res != wxIMAGE_RESOLUTION_NONE )
-        {
-            float xres, yres;
-            if ( TIFFGetField(tif, TIFFTAG_XRESOLUTION, &xres) )
-                image->SetOption(wxIMAGE_OPTION_RESOLUTIONX, wxRound(xres));
 
-            if ( TIFFGetField(tif, TIFFTAG_YRESOLUTION, &yres) )
-                image->SetOption(wxIMAGE_OPTION_RESOLUTIONY, wxRound(yres));
-        }
+    // set the image resolution if it's available
+     // resolution tag is not dependant on RESOLUTIONUNIT != RESUNIT_NONE (according to tiff spec)
+    wxString string;
+    float xres, yres;
+    if ( TIFFGetField(tif, TIFFTAG_XRESOLUTION, &xres) )
+    {
+        // use string value to not loose precision
+        // rounding to int as cm and then converting to inch may
+        // result in whole integer rounding error, eg. 201 instead of 200 dpi
+        // (the reason they are stored as float in the tiff file)
+        // if an app wants an int, GetOptionInt will convert and round down for them
+        string.Printf ( _("%.3f"), ( double ) xres );
+        image->SetOption(wxIMAGE_OPTION_RESOLUTIONX, string );
+    }
+    if ( TIFFGetField(tif, TIFFTAG_YRESOLUTION, &yres) )
+    {
+        string.Printf ( _("%.3f"), ( double ) yres );
+        image->SetOption(wxIMAGE_OPTION_RESOLUTIONY, string );
     }
 
 
