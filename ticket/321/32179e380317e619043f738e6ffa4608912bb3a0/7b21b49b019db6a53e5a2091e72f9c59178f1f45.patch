From f7f6783437ced7892557b071a6c9d0cd3aa8b47b Mon Sep 17 00:00:00 2001
From: Martin Koegler <martin.koegler@chello.at>
Date: Sat, 26 Nov 2016 13:44:04 +0100
Subject: [PATCH] Add support for XDG cache/config dir to
 wxStandardPaths::GetUserDir

---
 include/wx/stdpaths.h        |  2 ++
 interface/wx/stdpaths.h      | 20 ++++++++++++++++++++
 src/msw/stdpaths.cpp         |  6 ++++++
 src/osx/cocoa/stdpaths.mm    |  5 +++++
 src/unix/stdpaths.cpp        | 10 ++++++++++
 tests/interactive/output.cpp |  2 ++
 6 files changed, 45 insertions(+)

diff --git a/include/wx/stdpaths.h b/include/wx/stdpaths.h
index 5528626..80207d2 100644
--- a/include/wx/stdpaths.h
+++ b/include/wx/stdpaths.h
@@ -51,6 +51,8 @@ public:
 
     enum Dir
     {
+        Dir_Cache,
+        Dir_Config,
         Dir_Documents,
         Dir_Desktop,
         Dir_Downloads,
diff --git a/interface/wx/stdpaths.h b/interface/wx/stdpaths.h
index 8082ff5..d638555 100644
--- a/interface/wx/stdpaths.h
+++ b/interface/wx/stdpaths.h
@@ -70,6 +70,26 @@ public:
     enum Dir
     {
         /**
+            Directory for caching files.
+
+            Example return values:
+            - Unix: @c ~/.cache
+            - Windows: @c "C:\Users\username\AppData\Local"
+            - Mac: @c ~/Library/Caches
+        */
+        Dir_Cache,
+
+        /**
+            Directory for user specifc configuration files
+
+            Example return values:
+            - Unix: @c ~/.config
+            - Windows: @c "C:\Users\username\AppData\Roaming" or "C:\Documents and Settings\username\Application Data"
+            - Mac: @c ~/Library/Preferences
+        */
+        Dir_Config,
+
+        /**
             Directory containing user documents.
 
             Example return values:
diff --git a/src/msw/stdpaths.cpp b/src/msw/stdpaths.cpp
index d327470..4655a36 100644
--- a/src/msw/stdpaths.cpp
+++ b/src/msw/stdpaths.cpp
@@ -223,6 +223,12 @@ wxString wxStandardPaths::GetUserDir(Dir userDir) const
     int csidl;
     switch (userDir)
     {
+        case Dir_Cache:
+            csidl = CSIDL_LOCAL_APPDATA;
+            break;
+        case Dir_Config:
+            csidl = CSIDL_APPDATA;
+            break;
         case Dir_Desktop:
             csidl = CSIDL_DESKTOPDIRECTORY;
             break;
diff --git a/src/osx/cocoa/stdpaths.mm b/src/osx/cocoa/stdpaths.mm
index d81ef14..2aa0793 100644
--- a/src/osx/cocoa/stdpaths.mm
+++ b/src/osx/cocoa/stdpaths.mm
@@ -103,6 +103,11 @@ wxString wxStandardPaths::GetUserDir(Dir userDir) const
     NSSearchPathDirectory dirType;
     switch (userDir)
     {
+        case Dir_Cache:
+            dirType = NSCachesDirectory;
+            break;
+        case Dir_Config:
+            return GetUserConfigDir();
         case Dir_Desktop:
             dirType = NSDesktopDirectory;
             break;
diff --git a/src/unix/stdpaths.cpp b/src/unix/stdpaths.cpp
index 2880ff9..c53c95a 100644
--- a/src/unix/stdpaths.cpp
+++ b/src/unix/stdpaths.cpp
@@ -238,11 +238,21 @@ wxString wxStandardPaths::GetUserDir(Dir userDir) const
     {
         wxLogNull logNull;
         wxString homeDir = wxFileName::GetHomeDir();
+        if (userDir == Dir_Cache)
+        {
+           if (wxGetenv(wxT("XDG_CACHE_HOME")))
+              return wxGetenv(wxT("XDG_CACHE_HOME"));
+           else
+              return homeDir + wxT("/.cache");
+        }
+
         wxString configPath;
         if (wxGetenv(wxT("XDG_CONFIG_HOME")))
             configPath = wxGetenv(wxT("XDG_CONFIG_HOME"));
         else
             configPath = homeDir + wxT("/.config");
+	if (userDir == Dir_Config)
+            return configPath;
         wxString dirsFile = configPath + wxT("/user-dirs.dirs");
         if (wxFileExists(dirsFile))
         {
diff --git a/tests/interactive/output.cpp b/tests/interactive/output.cpp
index 7c656ae..b10e713 100644
--- a/tests/interactive/output.cpp
+++ b/tests/interactive/output.cpp
@@ -404,6 +404,8 @@ void InteractiveOutputTestCase::TestStandardPaths()
     wxPrintf(wxT("Data dir (user):\t%s\n"), stdp.GetUserDataDir().c_str());
     wxPrintf(wxT("Data dir (user local):\t%s\n"), stdp.GetUserLocalDataDir().c_str());
     wxPrintf(wxT("Documents dir:\t\t%s\n"), stdp.GetDocumentsDir().c_str());
+    wxPrintf(wxT("Cache dir:\t\t%s\n"), stdp.GetUserDir(wxStandardPaths::Dir_Cache).c_str());
+    wxPrintf(wxT("Config dir:\t\t%s\n"), stdp.GetUserDir(wxStandardPaths::Dir_Config).c_str());
     wxPrintf(wxT("Desktop dir:\t\t%s\n"), stdp.GetUserDir(wxStandardPaths::Dir_Desktop).c_str());
     wxPrintf(wxT("Downloads dir:\t\t%s\n"), stdp.GetUserDir(wxStandardPaths::Dir_Downloads).c_str());
     wxPrintf(wxT("Music dir:\t\t%s\n"), stdp.GetUserDir(wxStandardPaths::Dir_Music).c_str());
-- 
2.1.4

