From c5ada0b8bb7d846e9dc92725f63314ad875104ad Mon Sep 17 00:00:00 2001
From: Martin Koegler <martin.koegler@chello.at>
Date: Sun, 27 Nov 2016 14:31:02 +0100
Subject: [PATCH 2/2] Refactor config filename generation

---
 include/wx/fileconf.h           |  4 ---
 include/wx/msw/stdpaths.h       |  2 ++
 include/wx/osx/cocoa/stdpaths.h |  2 ++
 include/wx/stdpaths.h           | 14 +++++++++
 include/wx/unix/stdpaths.h      |  2 ++
 interface/wx/stdpaths.h         | 20 +++++++++++++
 src/common/fileconf.cpp         | 64 +++--------------------------------------
 src/msw/stdpaths.cpp            | 15 ++++++++++
 src/osx/cocoa/stdpaths.mm       | 15 ++++++++++
 src/unix/stdpaths.cpp           | 17 +++++++++++
 10 files changed, 91 insertions(+), 64 deletions(-)

diff --git a/include/wx/fileconf.h b/include/wx/fileconf.h
index a15468c..f354e8b 100644
--- a/include/wx/fileconf.h
+++ b/include/wx/fileconf.h
@@ -204,10 +204,6 @@ protected:
 #endif // wxUSE_BASE64
 
 private:
-  // GetXXXFileName helpers: return ('/' terminated) directory names
-  static wxString GetGlobalDir();
-  static wxString GetLocalDir(int style = 0);
-
   // common part of all ctors (assumes that m_str{Local|Global}File are already
   // initialized
   void Init();
diff --git a/include/wx/msw/stdpaths.h b/include/wx/msw/stdpaths.h
index e9e1e8b..8a6ad3f 100644
--- a/include/wx/msw/stdpaths.h
+++ b/include/wx/msw/stdpaths.h
@@ -29,6 +29,8 @@ public:
     virtual wxString GetUserLocalDataDir() const wxOVERRIDE;
     virtual wxString GetPluginsDir() const wxOVERRIDE;
     virtual wxString GetUserDir(Dir userDir) const wxOVERRIDE;
+    virtual wxFileName GetGlobalConfigFilename(const wxString& szFile) const wxOVERRIDE;
+    virtual wxFileName GetLocalConfigFilename(const wxString& szFile, bool useSubdir) const wxOVERRIDE;
 
 
     // MSW-specific methods
diff --git a/include/wx/osx/cocoa/stdpaths.h b/include/wx/osx/cocoa/stdpaths.h
index 59c33f2..b5fbdb4 100644
--- a/include/wx/osx/cocoa/stdpaths.h
+++ b/include/wx/osx/cocoa/stdpaths.h
@@ -32,6 +32,8 @@ public:
     GetLocalizedResourcesDir(const wxString& lang,
                              ResourceCat category = ResourceCat_None) const wxOVERRIDE;
     virtual wxString GetUserDir(Dir userDir) const wxOVERRIDE;
+    virtual wxFileName GetGlobalConfigFilename(const wxString& szFile) const wxOVERRIDE;
+    virtual wxFileName GetLocalConfigFilename(const wxString& szFile, bool useSubdir) const wxOVERRIDE;
 
 protected:
     // Ctor is protected, use wxStandardPaths::Get() instead of instantiating
diff --git a/include/wx/stdpaths.h b/include/wx/stdpaths.h
index 684d508..3c50040 100644
--- a/include/wx/stdpaths.h
+++ b/include/wx/stdpaths.h
@@ -16,6 +16,7 @@
 #include "wx/string.h"
 #include "wx/filefn.h"
 
+class WXDLLIMPEXP_FWD_BASE wxFileName;
 class WXDLLIMPEXP_FWD_BASE wxStandardPaths;
 
 // ----------------------------------------------------------------------------
@@ -155,6 +156,19 @@ public:
 
     virtual wxString GetUserDir(Dir userDir) const;
 
+    // construct the "standard" full name for global (system-wide) and
+    // local (user-specific) config files from the base file name.
+    //
+    // the following are the filenames returned by this functions:
+    //            global                local
+    // Unix   /etc/file.ext           ~/.file
+    // Win    %windir%\file.ext   %USERPROFILE%\file.ext
+    //
+    // where file is the basename of szFile, ext is its extension
+    // or .conf (Unix) or .ini (Win) if it has none
+    virtual wxFileName GetGlobalConfigFilename(const wxString& szFile) const = 0;
+    virtual wxFileName GetLocalConfigFilename(const wxString& szFile, bool useSubdir) const = 0;
+
     // virtual dtor for the base class
     virtual ~wxStandardPathsBase();
 
diff --git a/include/wx/unix/stdpaths.h b/include/wx/unix/stdpaths.h
index 74f9153..451d70d 100644
--- a/include/wx/unix/stdpaths.h
+++ b/include/wx/unix/stdpaths.h
@@ -49,6 +49,8 @@ public:
 #ifndef __VMS
     virtual wxString GetUserDir(Dir userDir) const wxOVERRIDE;
 #endif
+    virtual wxFileName GetGlobalConfigFilename(const wxString& szFile) const wxOVERRIDE;
+    virtual wxFileName GetLocalConfigFilename(const wxString& szFile, bool useSubdir) const wxOVERRIDE;
 
 protected:
     // Ctor is protected, use wxStandardPaths::Get() instead of instantiating
diff --git a/interface/wx/stdpaths.h b/interface/wx/stdpaths.h
index 9a1f3cb..10bdbda 100644
--- a/interface/wx/stdpaths.h
+++ b/interface/wx/stdpaths.h
@@ -444,6 +444,26 @@ public:
     */
     void UseAppInfo(int info);
 
+    /**
+        Return the full path to the file which would be used by wxFileConfig as global,
+        system-wide, file if it were constructed with @a basename as "global filename"
+        parameter in the constructor.
+
+        Notice that this function cannot be used if @a basename is already a full path name.
+    */
+    wxFileName GetGlobalConfigFilename(const wxString& basename);
+
+    /**
+        Return the full path to the file which would be used by wxFileConfig as local,
+        user-specific, file if it were constructed with @a basename as "local filename"
+        parameter in the constructor.
+
+        @a useSubdir specified, if the configuration file is put into a application specific subdirectory.
+
+        Notice that this function cannot be used if @a basename is already a full path name.
+    */
+    wxFileName GetLocalConfigFilename(const wxString& basename, bool useSubdir);
+
 protected:
     /**
         Protected default constructor.
diff --git a/src/common/fileconf.cpp b/src/common/fileconf.cpp
index c87bcf8..ddfbfc5 100644
--- a/src/common/fileconf.cpp
+++ b/src/common/fileconf.cpp
@@ -247,70 +247,14 @@ public:
 // static functions
 // ----------------------------------------------------------------------------
 
-// this function modifies in place the given wxFileName object if it doesn't
-// already have an extension
-//
-// note that it's slightly misnamed under Mac as there it doesn't add an
-// extension but modifies the file name instead, so you shouldn't suppose that
-// fn.HasExt() is true after it returns
-static void AddConfFileExtIfNeeded(wxFileName& fn)
-{
-    if ( !fn.HasExt() )
-    {
-#if defined( __WXMAC__ )
-        fn.SetName(fn.GetName() + wxT(" Preferences"));
-#elif defined( __UNIX__ )
-        fn.SetExt(wxT("conf"));
-#else   // Windows
-        fn.SetExt(wxT("ini"));
-#endif  // UNIX/Win
-    }
-}
-
-wxString wxFileConfig::GetGlobalDir()
-{
-    return wxStandardPaths::Get().GetConfigDir();
-}
-
-wxString wxFileConfig::GetLocalDir(int style)
-{
-    wxUnusedVar(style);
-
-    wxStandardPathsBase& stdp = wxStandardPaths::Get();
-
-    // it so happens that user data directory is a subdirectory of user config
-    // directory on all supported platforms, which explains why we use it here
-    return style & wxCONFIG_USE_SUBDIR ? stdp.GetUserDataDir()
-                                       : stdp.GetUserConfigDir();
-}
-
 wxFileName wxFileConfig::GetGlobalFile(const wxString& szFile)
 {
-    wxFileName fn(GetGlobalDir(), szFile);
-
-    AddConfFileExtIfNeeded(fn);
-
-    return fn;
+    return wxStandardPaths::Get().GetGlobalConfigFilename(szFile);
 }
 
 wxFileName wxFileConfig::GetLocalFile(const wxString& szFile, int style)
 {
-    wxFileName fn(GetLocalDir(style), szFile);
-
-#if defined( __UNIX__ ) && !defined( __WXMAC__ )
-    if ( !(style & wxCONFIG_USE_SUBDIR) )
-    {
-        // dot-files under Unix start with, well, a dot (but OTOH they usually
-        // don't have any specific extension)
-        fn.SetName(wxT('.') + fn.GetName());
-    }
-    else // we do append ".conf" extension to config files in subdirectories
-#endif // defined( __UNIX__ ) && !defined( __WXMAC__ )
-    {
-        AddConfFileExtIfNeeded(fn);
-    }
-
-    return fn;
+    return wxStandardPaths::Get().GetLocalConfigFilename(szFile, style & wxCONFIG_USE_SUBDIR);
 }
 
 // ----------------------------------------------------------------------------
@@ -403,10 +347,10 @@ wxFileConfig::wxFileConfig(const wxString& appName, const wxString& vendorName,
     if ( !(style & wxCONFIG_USE_RELATIVE_PATH) )
     {
         if ( m_fnLocalFile.IsOk() )
-            m_fnLocalFile.MakeAbsolute(GetLocalDir(style));
+            m_fnLocalFile.MakeAbsolute(GetLocalFile(wxEmptyString, style).GetPath());
 
         if ( m_fnGlobalFile.IsOk() )
-            m_fnGlobalFile.MakeAbsolute(GetGlobalDir());
+            m_fnGlobalFile.MakeAbsolute(GetGlobalFile(wxEmptyString).GetPath());
     }
 
     SetUmask(-1);
diff --git a/src/msw/stdpaths.cpp b/src/msw/stdpaths.cpp
index 29aa6b9..4df1386 100644
--- a/src/msw/stdpaths.cpp
+++ b/src/msw/stdpaths.cpp
@@ -369,6 +369,21 @@ wxString wxStandardPaths::GetPluginsDir() const
     return GetAppDir();
 }
 
+
+wxFileName wxStandardPaths::GetGlobalConfigFilename(const wxString& szFile) const
+{
+    wxFileName fn(GetConfigDir(), szFile);
+    fn.SetExt(wxT("ini"));
+    return fn;
+}
+
+wxFileName wxStandardPaths::GetLocalConfigFilename(const wxString& szFile, bool useSubdir) const
+{
+    wxFileName fn(useSubdir ? GetUserDataDir() : GetUserConfigDir(), szFile);
+    fn.SetExt(wxT("ini"));
+    return fn;
+}
+
 // ============================================================================
 // wxStandardPathsWin16 implementation
 // ============================================================================
diff --git a/src/osx/cocoa/stdpaths.mm b/src/osx/cocoa/stdpaths.mm
index a8b8323..5f213a1 100644
--- a/src/osx/cocoa/stdpaths.mm
+++ b/src/osx/cocoa/stdpaths.mm
@@ -19,6 +19,7 @@
 
 #if wxUSE_STDPATHS
 
+#include "wx/filename.h"
 #include "wx/stdpaths.h"
 #include "wx/osx/private.h"
 #include "wx/osx/core/cfstring.h"
@@ -129,4 +130,18 @@ wxString wxStandardPaths::GetUserDir(Dir userDir) const
     return GetFMDirectory(dirType, NSUserDomainMask);
 }
 
+wxFileName wxStandardPaths::GetGlobalConfigFilename(const wxString& szFile) const
+{
+    wxFileName fn(GetConfigDir(), szFile);
+    fn.SetName(fn.GetName() + wxT(" Preferences"));
+    return fn;
+}
+
+wxFileName wxStandardPaths::GetLocalConfigFilename(const wxString& szFile, bool useSubdir) const
+{
+    wxFileName fn(useSubdir ? GetUserDataDir() : GetUserConfigDir(), szFile);
+    fn.SetName(fn.GetName() + wxT(" Preferences"));
+    return fn;
+}
+
 #endif // wxUSE_STDPATHS
diff --git a/src/unix/stdpaths.cpp b/src/unix/stdpaths.cpp
index 5f61f19..c910ba7 100644
--- a/src/unix/stdpaths.cpp
+++ b/src/unix/stdpaths.cpp
@@ -308,4 +308,21 @@ wxString wxStandardPaths::GetUserDir(Dir userDir) const
 
 #endif // __VMS/!__VMS
 
+wxFileName wxStandardPaths::GetGlobalConfigFilename(const wxString& szFile) const
+{
+    wxFileName fn(GetConfigDir(), szFile);;
+    fn.SetExt(wxT("conf"));
+    return fn;
+}
+
+wxFileName wxStandardPaths::GetLocalConfigFilename(const wxString& szFile, bool useSubdir) const
+{
+    wxFileName fn(useSubdir ? GetUserDataDir() : GetUserConfigDir(), szFile);
+    if (useSubdir)
+        fn.SetExt(wxT("conf"));
+    else
+        fn.SetName(wxT('.') + fn.GetName());
+    return fn;
+}
+
 #endif // wxUSE_STDPATHS
-- 
2.1.4

