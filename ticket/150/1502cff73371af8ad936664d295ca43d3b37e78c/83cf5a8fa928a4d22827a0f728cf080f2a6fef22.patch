Index: samples/docview/doc.cpp
===================================================================
--- samples/docview/doc.cpp	(revision 56315)
+++ samples/docview/doc.cpp	(working copy)
@@ -159,42 +159,48 @@
 }
 
 // ----------------------------------------------------------------------------
-// TextEditDocument implementation
+// wxTextDocument: wxDocument and wxTextCtrl married
 // ----------------------------------------------------------------------------
 
-IMPLEMENT_DYNAMIC_CLASS(TextEditDocument, wxDocument)
+IMPLEMENT_CLASS(wxTextDocument, wxDocument)
 
 // Since text windows have their own method for saving to/loading from files,
 // we override DoSave/OpenDocument instead of Save/LoadObject
-bool TextEditDocument::DoSaveDocument(const wxString& filename)
+bool wxTextDocument::DoSaveDocument(const wxString& filename)
 {
-    return GetFirstView()->GetText()->SaveFile(filename);
+    return GetTextCtrl()->SaveFile(filename);
 }
 
-bool TextEditDocument::DoOpenDocument(const wxString& filename)
+bool wxTextDocument::DoOpenDocument(const wxString& filename)
 {
-    return GetFirstView()->GetText()->LoadFile(filename);
+    return GetTextCtrl()->LoadFile(filename);
 }
 
-bool TextEditDocument::IsModified() const
+bool wxTextDocument::IsModified() const
 {
-    TextEditView* view = GetFirstView();
-    return wxDocument::IsModified() || (view && view->GetText()->IsModified());
+    wxTextCtrl* wnd = GetTextCtrl();
+    return wxDocument::IsModified() || (wnd && wnd->IsModified());
 }
 
-void TextEditDocument::Modify(bool modified)
+void wxTextDocument::Modify(bool modified)
 {
-    TextEditView* view = GetFirstView();
-
     wxDocument::Modify(modified);
 
-    if ( !modified && view && view->GetText() )
-        view->GetText()->DiscardEdits();
+    wxTextCtrl* wnd = GetTextCtrl();
+    if (wnd && !modified)
+    {
+        wnd->DiscardEdits();
+    }
 }
 
-TextEditView* TextEditDocument::GetFirstView() const
+// ----------------------------------------------------------------------------
+// TextEditDocument implementation
+// ----------------------------------------------------------------------------
+
+IMPLEMENT_DYNAMIC_CLASS(TextEditDocument, wxDocument)
+
+wxTextCtrl* TextEditDocument::GetTextCtrl() const
 {
-    wxView* view = wxDocument::GetFirstView();
-    return view ? wxStaticCast(view, TextEditView) : NULL;
+    wxView* view = GetFirstView();
+    return view ? wxStaticCast(view, TextEditView)->GetText() : NULL;
 }
-
Index: samples/docview/doc.h
===================================================================
--- samples/docview/doc.h	(revision 56315)
+++ samples/docview/doc.h	(working copy)
@@ -157,21 +157,36 @@
 
 
 // ----------------------------------------------------------------------------
-// A simple text document class
+// wxTextDocument: wxDocument and wxTextCtrl married
 // ----------------------------------------------------------------------------
 
-class TextEditView;
-class TextEditDocument : public wxDocument
+class wxTextDocument : public wxDocument
 {
 public:
-    TextEditDocument() : wxDocument() { }
-    TextEditView *GetFirstView() const;
+    wxTextDocument() : wxDocument() { }
+    virtual wxTextCtrl* GetTextCtrl() const = 0;
 
-    virtual bool DoSaveDocument(const wxString& filename);
-    virtual bool DoOpenDocument(const wxString& filename);
     virtual bool IsModified() const;
     virtual void Modify(bool mod);
 
+protected:
+    virtual bool DoSaveDocument(const wxString& filename);
+    virtual bool DoOpenDocument(const wxString& filename);
+
+    DECLARE_NO_COPY_CLASS(wxTextDocument)
+    DECLARE_CLASS(wxTextDocument)
+};
+
+// ----------------------------------------------------------------------------
+// A very simple text document class
+// ----------------------------------------------------------------------------
+
+class TextEditDocument : public wxTextDocument
+{
+public:
+    TextEditDocument() : wxTextDocument() { }
+    virtual wxTextCtrl* GetTextCtrl() const;
+
     DECLARE_NO_COPY_CLASS(TextEditDocument)
     DECLARE_DYNAMIC_CLASS(TextEditDocument)
 };
