Index: samples/widgets/slider.cpp
===================================================================
--- samples/widgets/slider.cpp	(revision 62804)
+++ samples/widgets/slider.cpp	(working copy)
@@ -255,22 +255,21 @@
     wxSizer *sizerTop = new wxBoxSizer(wxHORIZONTAL);
 
     // left pane
-    wxStaticBox *box = new wxStaticBox(this, wxID_ANY, wxT("&Set style"));
+    wxStaticBox *box = new wxStaticBox(this, wxID_ANY, Right("&Set style"));
     wxSizer *sizerLeft = new wxStaticBoxSizer(box, wxVERTICAL);
 
     m_chkInverse = CreateCheckBoxAndAddToSizer(sizerLeft, wxT("&Inverse"));
     m_chkTicks = CreateCheckBoxAndAddToSizer(sizerLeft, wxT("Show &ticks"));
-    m_chkMinMaxLabels = CreateCheckBoxAndAddToSizer(sizerLeft, wxT("Show min/max &labels"));
-    m_chkValueLabel = CreateCheckBoxAndAddToSizer(sizerLeft, wxT("Show &value label"));
+    m_chkMinMaxLabels = CreateCheckBoxAndAddToSizer(sizerLeft, wxT("Show &labels"));
+    m_chkValueLabel = CreateCheckBoxAndAddToSizer(sizerLeft, wxT("Show value"));
     static const wxString sides[] =
     {
-        wxT("default"),
         wxT("top"),
         wxT("bottom"),
         wxT("left"),
         wxT("right"),
     };
-    m_radioSides = new wxRadioBox(this, SliderPage_RadioSides, wxT("&Label position"),
+    m_radioSides = new wxRadioBox(this, SliderPage_RadioSides, wxT("&Ticks/Value"),
                                  wxDefaultPosition, wxDefaultSize,
                                  WXSIZEOF(sides), sides,
                                  1, wxRA_SPECIFY_COLS);
@@ -375,11 +374,11 @@
 {
     m_chkInverse->SetValue(false);
     m_chkTicks->SetValue(true);
-    m_chkValueLabel->SetValue(true);
     m_chkMinMaxLabels->SetValue(true);
+    m_chkValueLabel->SetValue(true);
     m_chkBothSides->SetValue(false);
 
-    m_radioSides->SetSelection(SliderTicks_None);
+    m_radioSides->SetSelection(SliderTicks_Top);
 }
 
 void SliderWidgetsPage::CreateSlider()
@@ -406,28 +405,22 @@
         flags |= wxSL_AUTOTICKS;
     }
 
-    // notice that the style names refer to the _ticks_ positions while we want
-    // to allow the user to select the label(s) positions and the labels are on
-    // the opposite side from the ticks, hence the apparent reversal below
     switch ( m_radioSides->GetSelection() )
     {
-        case SliderTicks_None:
-            break;
-
         case SliderTicks_Top:
-            flags |= wxSL_BOTTOM;
+            flags |= wxSL_TOP;
             break;
 
         case SliderTicks_Left:
-            flags |= wxSL_RIGHT | wxSL_VERTICAL;
+            flags |= wxSL_LEFT;
             break;
 
         case SliderTicks_Bottom:
-            flags |= wxSL_TOP;
+            flags |= wxSL_BOTTOM;
             break;
 
         case SliderTicks_Right:
-            flags |= wxSL_LEFT | wxSL_VERTICAL;
+            flags |= wxSL_RIGHT;
             break;
 
         default:
@@ -662,10 +655,9 @@
 {
     event.Enable( m_chkInverse->GetValue() ||
                   !m_chkTicks->GetValue() ||
-                  !m_chkValueLabel->GetValue() ||
                   !m_chkMinMaxLabels->GetValue() ||
                   m_chkBothSides->GetValue() ||
-                  m_radioSides->GetSelection() != SliderTicks_None );
+                  m_radioSides->GetSelection() != SliderTicks_Top );
 }
 
 void SliderWidgetsPage::OnCheckOrRadioBox(wxCommandEvent& WXUNUSED(event))
@@ -680,7 +672,7 @@
 
 void SliderWidgetsPage::OnUpdateUIRadioSides(wxUpdateUIEvent& event)
 {
-    event.Enable( m_chkValueLabel->GetValue() || m_chkTicks->GetValue() );
+    event.Enable( m_chkMinMaxLabels->GetValue() || m_chkTicks->GetValue() );
 }
 
 void SliderWidgetsPage::OnUpdateUIBothSides(wxUpdateUIEvent& event)
