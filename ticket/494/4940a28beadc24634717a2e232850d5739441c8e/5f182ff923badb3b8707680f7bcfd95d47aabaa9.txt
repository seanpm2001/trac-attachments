diff -rbu2 wxMSW-2.2.9/include/wx/gsocket.h wxMSW-2.2.9-CWMods/include/wx/gsocket.h
--- wxMSW-2.2.9/include/wx/gsocket.h	Thu Mar 16 21:55:56 2000
+++ wxMSW-2.2.9-CWMods/include/wx/gsocket.h	Mon Mar 11 21:17:56 2002
@@ -308,5 +308,5 @@
 
 #ifdef __cplusplus
-};
+}                                 // IMT delete extra semi-colon
 #endif /* __cplusplus */
 
diff -rbu2 wxMSW-2.2.9/include/wx/memory.h wxMSW-2.2.9-CWMods/include/wx/memory.h
--- wxMSW-2.2.9/include/wx/memory.h	Thu Feb 24 15:04:20 2000
+++ wxMSW-2.2.9-CWMods/include/wx/memory.h	Mon Mar 11 21:21:20 2002
@@ -81,6 +81,6 @@
 #endif
 
-// VC++ 6.0
-#if defined(__VISUALC__) && (__VISUALC__ >= 1200)
+// VC++ 6.0        or MWERKS CW Pro6 and later                                                                // IMT
+#if (defined(__VISUALC__) && (__VISUALC__ >= 1200)) || (defined(__MWERKS__) && (__MWERKS__ >= 0x2400))    // IMT
     WXDLLEXPORT void operator delete(void *buf, wxChar*, int);
     WXDLLEXPORT void operator delete[](void *buf, wxChar*, int);
diff -rbu2 wxMSW-2.2.9/include/wx/msw/colordlg.h wxMSW-2.2.9-CWMods/include/wx/msw/colordlg.h
--- wxMSW-2.2.9/include/wx/msw/colordlg.h	Sun Jun 18 21:31:34 2000
+++ wxMSW-2.2.9-CWMods/include/wx/msw/colordlg.h	Mon Mar 11 21:20:44 2002
@@ -37,5 +37,5 @@
     // override some base class virtuals
     virtual void SetTitle(const wxString& title);
-    virtual wxString GetTitle();
+    virtual wxString GetTitle() const;                    //IMT 
 
     virtual int ShowModal();
diff -rbu2 wxMSW-2.2.9/include/wx/msw/ole/oleutils.h wxMSW-2.2.9-CWMods/include/wx/msw/ole/oleutils.h
--- wxMSW-2.2.9/include/wx/msw/ole/oleutils.h	Thu Feb 08 11:16:08 2001
+++ wxMSW-2.2.9-CWMods/include/wx/msw/ole/oleutils.h	Mon Mar 11 21:26:08 2002
@@ -127,5 +127,6 @@
 //     as is. Please note, though, that tracing OLE interface calls may be
 //     incredibly useful when debugging OLE programs.
-#if defined(__WXDEBUG__) && defined(__VISUALC__) && (__VISUALC__ >= 1000)
+//#if defined(__WXDEBUG__) && defined(__VISUALC__) && (__VISUALC__ >= 1000)            // IMT
+#if defined(__WXDEBUG__) && ( ( defined(__VISUALC__) && (__VISUALC__ >= 1000) ) || defined(__MWERKS__) )    // IMT
 // ----------------------------------------------------------------------------
 // All OLE specific log functions have DebugTrace level (as LogTrace)
diff -rbu2 wxMSW-2.2.9/include/wx/object.h wxMSW-2.2.9-CWMods/include/wx/object.h
--- wxMSW-2.2.9/include/wx/object.h	Sun Apr 16 23:58:52 2000
+++ wxMSW-2.2.9-CWMods/include/wx/object.h	Mon Mar 11 21:21:44 2002
@@ -114,12 +114,14 @@
 //////
 
-// Single inheritance with one base class
+// Single inheritance with one base class                // IMT Add prototype
 #define IMPLEMENT_DYNAMIC_CLASS(name, basename) \
+wxObject* WXDLLEXPORT_CTORFN wxConstructorFor##name(void); \
 wxObject* WXDLLEXPORT_CTORFN wxConstructorFor##name(void) \
    { return new name; }\
  wxClassInfo name::sm_class##name((wxChar *) wxT(#name), (wxChar *) wxT(#basename), (wxChar *) NULL, (int) sizeof(name), (wxObjectConstructorFn) wxConstructorFor##name);
 
-// Multiple inheritance with two base classes
+// Multiple inheritance with two base classes            // IMT Add prototype
 #define IMPLEMENT_DYNAMIC_CLASS2(name, basename1, basename2) \
+wxObject* WXDLLEXPORT_CTORFN wxConstructorFor##name(void); \
 wxObject* WXDLLEXPORT_CTORFN wxConstructorFor##name(void) \
    { return new name; }\
@@ -213,5 +215,19 @@
   bool IsKindOf(wxClassInfo *info) const;
 
-#if defined(__WXDEBUG__) && wxUSE_MEMORY_TRACING
+#if defined(__WXDEBUG__) && wxUSE_MEMORY_TRACING // [
+
+#if defined(__MWERKS__)
+
+  void * operator new (size_t size, wxChar * fileName = NULL, int lineNum = 0);
+  void * operator new[] (size_t size, wxChar * fileName = NULL, int lineNum = 0);
+  void operator delete (void * buf);
+  void operator delete[] (void * buf);
+  #if __MWERKS__ >= 0x2400
+    void operator delete(void *buf, wxChar*, int);
+    void operator delete[](void *buf, wxChar*, int);
+  #endif
+    
+#else    // else !MWERKS
+
   void * operator new (size_t size, wxChar * fileName = NULL, int lineNum = 0);
   void operator delete (void * buf);
@@ -223,16 +239,14 @@
 
     // Causes problems for VC++
-#if wxUSE_ARRAY_MEMORY_OPERATORS && !defined(__VISUALC__) && !defined( __MWERKS__)
+#if wxUSE_ARRAY_MEMORY_OPERATORS && !defined(__VISUALC__) /* && !defined( __MWERKS__) */        // IMT
   void * operator new[] (size_t size, wxChar * fileName = NULL, int lineNum = 0);
   void operator delete[] (void * buf);
 #endif
 
-#ifdef __MWERKS__
-  void * operator new[] (size_t size, wxChar * fileName , int lineNum = 0);
-  void * operator new[] (size_t size) { return operator new[] ( size , NULL , 0 ) ; }
-  void operator delete[] (void * buf);
-#endif
+// IMT deleted old MWERKS conditional
+
+#endif    // MWERKS else case
 
-#endif // Debug & memory tracing
+#endif // ] Debug & memory tracing
 
 #if wxUSE_STD_IOSTREAM && (defined(__WXDEBUG__) || wxUSE_DEBUG_CONTEXT)
diff -rbu2 wxMSW-2.2.9/include/wx/wx_cw_cm.h wxMSW-2.2.9-CWMods/include/wx/wx_cw_cm.h
--- wxMSW-2.2.9/include/wx/wx_cw_cm.h	Fri Nov 05 09:15:42 1999
+++ wxMSW-2.2.9-CWMods/include/wx/wx_cw_cm.h	Mon Mar 11 21:23:20 2002
@@ -25,4 +25,5 @@
     #define __WINDOWS__
     #define __WIN95__
+    #define __WIN32__                        // IMT
     #define STRICT
     #define NOMINMAX
@@ -38,5 +39,5 @@
     #include <ansi_parms.h>
     #ifdef __MWERKS__
-    #if defined( __MSL__ ) && __MSL__ >= 0x5012
+    #if defined( __MSL__ ) && __MSL__ >= 0x5012 && __MSL__ < 0x7001
 			#define	fileno	_fileno
 			#define	fdopen	_fdopen
@@ -60,5 +61,7 @@
 	int	isascii( int c ) ;
 #ifdef __cplusplus
-} ;
+}                                 // IMT (Delete extra semi-colon)
 #endif
+
+
 
diff -rbu2 wxMSW-2.2.9/include/wx/wxprec.h wxMSW-2.2.9-CWMods/include/wx/wxprec.h
--- wxMSW-2.2.9/include/wx/wxprec.h	Sat Apr 01 23:19:12 2000
+++ wxMSW-2.2.9-CWMods/include/wx/wxprec.h	Mon Jan 28 06:43:36 2002
@@ -15,5 +15,5 @@
 // check if to use precompiled headers: do it for most Windows compilers unless
 // explicitly disabled by defining NOPCH
-#if ((defined(__BORLANDC__) || defined(__VISUALC__) || defined(__WATCOMC__)) && defined(__WXMSW__)) || defined(__VISAGECPP__)
+#if ((defined(__BORLANDC__) || defined(__VISUALC__) || defined(__WATCOMC__)) && defined(__WXMSW__)) || defined(__VISAGECPP__) || defined(__MWERKS__)  // IMT
     #if !defined(NOPCH)
         #define WX_PRECOMP
diff -rbu2 wxMSW-2.2.9/src/common/file.cpp wxMSW-2.2.9-CWMods/src/common/file.cpp
--- wxMSW-2.2.9/src/common/file.cpp	Thu Apr 12 22:05:38 2001
+++ wxMSW-2.2.9-CWMods/src/common/file.cpp	Mon Jan 28 08:51:16 2002
@@ -82,5 +82,7 @@
 #include  <fcntl.h>       // O_RDONLY &c
 
-#ifndef __MWERKS__
+#ifdef __MWERKS__				// IMT
+	#include <stat.h>
+#else
     #include  <sys/types.h>   // needed for stat
     #include  <sys/stat.h>    // stat
@@ -297,5 +299,9 @@
     // have to use scope resolution for the same reason as above
 #ifdef __MWERKS__
-    int iRc = ::write(m_fd, (const char *) pBuf, nCount);
+	#if __MWERKS__ >= 0x2400											// IMT
+    	int iRc = ::write(m_fd, const_cast<void*>( pBuf ), nCount);
+	#else
+    	int iRc = ::write(m_fd, (const char*) pBuf, nCount);
+    #endif
 #else
     int iRc = ::wxWrite(m_fd, pBuf, nCount);
diff -rbu2 wxMSW-2.2.9/src/common/imagjpeg.cpp wxMSW-2.2.9-CWMods/src/common/imagjpeg.cpp
--- wxMSW-2.2.9/src/common/imagjpeg.cpp	Wed Dec 05 09:31:36 2001
+++ wxMSW-2.2.9-CWMods/src/common/imagjpeg.cpp	Mon Jan 28 08:54:58 2002
@@ -30,5 +30,5 @@
 extern "C"
 {
-#ifdef __WATCOMC__
+#if defined(__WATCOMC__) || defined(__MWERKS__)		// IMT (comes from Win SDK file and redefinition is an error in CW6)
     #define HAVE_BOOLEAN
 #endif
Only in wxMSW-2.2.9-CWMods/src/common: lex_yy.c
diff -rbu2 wxMSW-2.2.9/src/common/longlong.cpp wxMSW-2.2.9-CWMods/src/common/longlong.cpp
--- wxMSW-2.2.9/src/common/longlong.cpp	Mon Feb 21 13:17:48 2000
+++ wxMSW-2.2.9-CWMods/src/common/longlong.cpp	Mon Jan 28 08:56:30 2002
@@ -29,5 +29,9 @@
 #include "wx/longlong.h"
 
+#ifdef __MWERKS__ 			// IMT (memset() according to standard lives in <string.h>)
+#include <string.h>		// for memset()
+#else
 #include <memory.h>     // for memset()
+#endif 
 #include <math.h>       // for fabs()
 
diff -rbu2 wxMSW-2.2.9/src/common/memory.cpp wxMSW-2.2.9-CWMods/src/common/memory.cpp
--- wxMSW-2.2.9/src/common/memory.cpp	Tue Apr 25 06:03:12 2000
+++ wxMSW-2.2.9-CWMods/src/common/memory.cpp	Mon Jan 28 08:57:38 2002
@@ -1020,6 +1020,6 @@
 #endif
 
-// VC++ 6.0
-#if defined(__VISUALC__) && (__VISUALC__ >= 1200)
+// VC++ 6.0	or MWERKS CW Pro6																			// IMT
+#if (defined(__VISUALC__) && (__VISUALC__ >= 1200)) || (defined(__MWERKS__) && (__MWERKS__ >= 0x2400))	// IMT
 void operator delete(void* pData, wxChar* /* fileName */, int /* lineNum */)
 {
diff -rbu2 wxMSW-2.2.9/src/common/object.cpp wxMSW-2.2.9-CWMods/src/common/object.cpp
--- wxMSW-2.2.9/src/common/object.cpp	Fri Jun 02 20:59:50 2000
+++ wxMSW-2.2.9-CWMods/src/common/object.cpp	Mon Jan 28 08:59:02 2002
@@ -141,6 +141,14 @@
 #endif
 
+// MW CW Pro 6
+#if defined(__MWERKS__) && (__MWERKS__ >= 0x2400)					// IMT
+void wxObject::operator delete(void* buf, wxChar* /* fileName */, int /* lineNum */)
+{
+	wxDebugFree(buf);												// IMT note different implementation than the above
+}
+#endif
+
 // Cause problems for VC++ - crashes
-#if (!defined(__VISUALC__) && wxUSE_ARRAY_MEMORY_OPERATORS ) || defined(__MWERKS__)
+#if (wxUSE_ARRAY_MEMORY_OPERATORS && !defined(__VISUALC__) ) 		// IMT 
 void * wxObject::operator new[] (size_t size, wxChar * fileName, int lineNum)
 {
@@ -152,5 +160,13 @@
     wxDebugFree(buf, TRUE);
 }
-#endif
+
+#if defined(__MWERKS__) && (__MWERKS__ >= 0x2400)					// IMT
+void wxObject::operator delete[] (void * buf, wxChar* /* fileName */, int /* lineNum */)
+{
+    wxDebugFree(buf, TRUE);
+}
+#endif // MWERKS
+
+#endif	// wxUSE_ARRAY_MEMORY_OPERATORS && !defined(__VISUALC__)
 
 #endif
diff -rbu2 wxMSW-2.2.9/src/common/sizer.cpp wxMSW-2.2.9-CWMods/src/common/sizer.cpp
--- wxMSW-2.2.9/src/common/sizer.cpp	Mon May 14 17:50:30 2001
+++ wxMSW-2.2.9-CWMods/src/common/sizer.cpp	Mon Jan 28 08:59:44 2002
@@ -28,12 +28,13 @@
 //---------------------------------------------------------------------------
 
-IMPLEMENT_ABSTRACT_CLASS(wxSizerItem, wxObject);
-IMPLEMENT_ABSTRACT_CLASS(wxSizer, wxObject);
-IMPLEMENT_ABSTRACT_CLASS(wxGridSizer, wxSizer);
-IMPLEMENT_ABSTRACT_CLASS(wxFlexGridSizer, wxGridSizer);
-IMPLEMENT_ABSTRACT_CLASS(wxBoxSizer, wxSizer);
-IMPLEMENT_ABSTRACT_CLASS(wxStaticBoxSizer, wxBoxSizer);
+// IMT Get rid of excess semi-colons
+IMPLEMENT_ABSTRACT_CLASS(wxSizerItem, wxObject)
+IMPLEMENT_ABSTRACT_CLASS(wxSizer, wxObject)
+IMPLEMENT_ABSTRACT_CLASS(wxGridSizer, wxSizer)
+IMPLEMENT_ABSTRACT_CLASS(wxFlexGridSizer, wxGridSizer)
+IMPLEMENT_ABSTRACT_CLASS(wxBoxSizer, wxSizer)
+IMPLEMENT_ABSTRACT_CLASS(wxStaticBoxSizer, wxBoxSizer)
 #if wxUSE_NOTEBOOK
-IMPLEMENT_ABSTRACT_CLASS(wxNotebookSizer, wxSizer);
+IMPLEMENT_ABSTRACT_CLASS(wxNotebookSizer, wxSizer)
 #endif
 
diff -rbu2 wxMSW-2.2.9/src/common/timercmn.cpp wxMSW-2.2.9-CWMods/src/common/timercmn.cpp
--- wxMSW-2.2.9/src/common/timercmn.cpp	Wed Jul 26 20:05:34 2000
+++ wxMSW-2.2.9-CWMods/src/common/timercmn.cpp	Mon Jan 28 09:01:00 2002
@@ -51,5 +51,7 @@
 
 #if defined(__WIN32__) && !defined(HAVE_FTIME)
+	#if !defined(__MWERKS__)					// IMT MWERKS does not provide ftime() in the MSL
     #define HAVE_FTIME
+    #endif
 #endif
 
Only in wxMSW-2.2.9-CWMods/src/common: y_tab.c
diff -rbu2 wxMSW-2.2.9/src/jpeg/jinclude.h wxMSW-2.2.9-CWMods/src/jpeg/jinclude.h
--- wxMSW-2.2.9/src/jpeg/jinclude.h	Mon Apr 19 15:13:32 1999
+++ wxMSW-2.2.9-CWMods/src/jpeg/jinclude.h	Mon Jan 28 09:03:18 2002
@@ -18,5 +18,10 @@
 /* Include auto-config file to find out which system include files we need. */
 
+#if defined(__MWERKS__)					// IMT 
+#include "jconfig.h"
+#else
 #include "../src/jpeg/jconfig.h"		/* auto configuration options */
+#endif
+
 #define JCONFIG_INCLUDED	/* so that jpeglib.h doesn't do it again */
 
diff -rbu2 wxMSW-2.2.9/src/jpeg/jmorecfg.h wxMSW-2.2.9-CWMods/src/jpeg/jmorecfg.h
--- wxMSW-2.2.9/src/jpeg/jmorecfg.h	Fri Aug 31 23:11:22 2001
+++ wxMSW-2.2.9-CWMods/src/jpeg/jmorecfg.h	Mon Jan 28 09:21:42 2002
@@ -173,5 +173,5 @@
       wxCHECK_W32API_VERSION( 0, 5 ) || \
       ((defined(__MINGW32__) || defined(__CYGWIN__)) \
-       && ((__GNUC__>2) || ((__GNUC__==2) && (__GNUC_MINOR__>95))))
+       && ((__GNUC__>2) || ((__GNUC__==2) && (__GNUC_MINOR__>95)))) || defined(__MWERKS__)       // IMT
 
 /* INT32 is defined in windows.h  for these compilers */
Only in wxMSW-2.2.9-CWMods/src/jpeg: jpeg_CW_Prefix.h
diff -rbu2 wxMSW-2.2.9/src/msw/colordlg.cpp wxMSW-2.2.9-CWMods/src/msw/colordlg.cpp
--- wxMSW-2.2.9/src/msw/colordlg.cpp	Mon Feb 12 20:29:36 2001
+++ wxMSW-2.2.9-CWMods/src/msw/colordlg.cpp	Mon Mar 11 21:24:42 2002
@@ -165,5 +165,5 @@
 }
 
-wxString wxColourDialog::GetTitle()
+wxString wxColourDialog::GetTitle() const                // IMT
 {
     return m_title;
diff -rbu2 wxMSW-2.2.9/src/msw/ole/oleutils.cpp wxMSW-2.2.9-CWMods/src/msw/ole/oleutils.cpp
--- wxMSW-2.2.9/src/msw/ole/oleutils.cpp	Wed May 03 11:06:58 2000
+++ wxMSW-2.2.9-CWMods/src/msw/ole/oleutils.cpp	Mon Mar 11 21:26:06 2002
@@ -63,5 +63,7 @@
 // ----------------------------------------------------------------------------
 
-#if defined(__WXDEBUG__) && defined(__VISUALC__) && (__VISUALC__ > 1000)
+#if defined(__WXDEBUG__) && ( ( defined(__VISUALC__) && (__VISUALC__ > 1000) ) || defined(__MWERKS__) ) //IMT
+
 static wxString GetIidName(REFIID riid)
 {
@@ -80,5 +82,6 @@
     ADD_KNOWN_IID(BindCtx),
     ADD_KNOWN_IID(ClassFactory),
-#if !defined( __VISUALC__) || (__VISUALC__!=1010) 
+#if ( !defined( __VISUALC__) || (__VISUALC__!=1010) ) && !defined( __MWERKS__)
     ADD_KNOWN_IID(ContinueCallback),
     ADD_KNOWN_IID(EnumOleDocumentViews),
@@ -173,5 +176,8 @@
 void wxLogQueryInterface(const wxChar *szInterface, REFIID riid)
 {
-  wxLogTrace(wxT("%s::QueryInterface (iid = %s)"),
+  wxLogTrace(wxTRACE_OleCalls, wxT("%s::QueryInterface (iid = %s)"),  // IMT bug in original
              szInterface, GetIidName(riid).c_str());
 }
@@ -179,10 +185,14 @@
 void wxLogAddRef(const wxChar *szInterface, ULONG cRef)
 {
-  wxLogTrace(wxT("After %s::AddRef: m_cRef = %d"), szInterface, cRef + 1);
+  wxLogTrace(wxTRACE_OleCalls, wxT("After %s::AddRef: m_cRef = %d"), szInterface, cRef + 1);  // IMT bug in original
 }
 
 void wxLogRelease(const wxChar *szInterface, ULONG cRef)
 {
-  wxLogTrace(wxT("After %s::Release: m_cRef = %d"), szInterface, cRef - 1);
+  wxLogTrace(wxTRACE_OleCalls, wxT("After %s::Release: m_cRef = %d"), szInterface, cRef - 1);  // IMT bug in original
 }
 
diff -rbu2 wxMSW-2.2.9/src/msw/statbr95.cpp wxMSW-2.2.9-CWMods/src/msw/statbr95.cpp
--- wxMSW-2.2.9/src/msw/statbr95.cpp	Thu Apr 27 17:41:30 2000
+++ wxMSW-2.2.9-CWMods/src/msw/statbr95.cpp	Mon Mar 11 21:27:08 2002
@@ -45,5 +45,5 @@
 // ----------------------------------------------------------------------------
 
-IMPLEMENT_DYNAMIC_CLASS(wxStatusBar95, wxWindow);
+IMPLEMENT_DYNAMIC_CLASS(wxStatusBar95, wxWindow)            // IMT drop extra semi-colon
 IMPLEMENT_DYNAMIC_CLASS(wxStatusBar, wxStatusBar95)
 
diff -rbu2 wxMSW-2.2.9/src/msw/tbar95.cpp wxMSW-2.2.9-CWMods/src/msw/tbar95.cpp
--- wxMSW-2.2.9/src/msw/tbar95.cpp	Mon Dec 17 08:48:06 2001
+++ wxMSW-2.2.9-CWMods/src/msw/tbar95.cpp	Mon Mar 11 21:27:20 2002
@@ -25,4 +25,14 @@
 #include "wx/wxprec.h"
 
+#if defined(__MWERKS__) && __MWERKS__ >= 0x2400        // IMT don't quite understand why max isn't defined...
+    template <class T>
+    inline
+    const T&
+    max(const T& a, const T& b)
+    {
+        return a < b ? b : a;
+    }
+#endif
+
 #ifdef __BORLANDC__
     #pragma hdrstop
diff -rbu2 wxMSW-2.2.9/src/msw/thread.cpp wxMSW-2.2.9-CWMods/src/msw/thread.cpp
--- wxMSW-2.2.9/src/msw/thread.cpp	Tue Nov 21 17:22:04 2000
+++ wxMSW-2.2.9-CWMods/src/msw/thread.cpp	Mon Mar 11 21:27:30 2002
@@ -48,5 +48,6 @@
 #if defined(__VISUALC__) || \
     (defined(__BORLANDC__) && (__BORLANDC__ >= 0x500)) || \
-    (defined(__GNUG__) && defined(__MSVCRT__))
+    (defined(__GNUG__) && defined(__MSVCRT__))  || \
+    (defined(__MWERKS__))                        // IMT adapt to CodeWarrior
 
 #if defined(__BORLANDC__) && !defined(__MT__)
@@ -494,5 +495,6 @@
 #if defined(__VISUALC__) || \
     (defined(__BORLANDC__) && (__BORLANDC__ >= 0x500)) || \
-    (defined(__GNUG__) && defined(__MSVCRT__))
+    (defined(__GNUG__) && defined(__MSVCRT__)) || \
+    defined( __MWERKS__ )                                        // IMT Adapt to CodeWarrior
     typedef unsigned (__stdcall *RtlThreadStart)(void *);
 
diff -rbu2 wxMSW-2.2.9/src/tiff/tiffcomp.h wxMSW-2.2.9-CWMods/src/tiff/tiffcomp.h
--- wxMSW-2.2.9/src/tiff/tiffcomp.h	Sun Jan 09 13:09:30 2000
+++ wxMSW-2.2.9-CWMods/src/tiff/tiffcomp.h	Mon Jan 28 09:14:26 2002
@@ -82,5 +82,9 @@
 #if defined(__MWERKS__) || defined(THINK_C) || defined(__PPCC__) || defined(__SC__) || defined(__MRC__)
 #include <stdlib.h>
-#define	BSDTYPES
+	#if defined(_WINSOCKAPI_)					// IMT winsock.h already defines BSD typedefs
+		// Don't need BSD types -- do nothing
+	#else
+		#define	BSDTYPES
+	#endif
 #define	HAVE_UNISTD_H	0
 #elif defined(_WINDOWS) || defined(__WIN32__) || defined(_Windows)
diff -rbu2 wxMSW-2.2.9/src/xpm/XpmI.h wxMSW-2.2.9-CWMods/src/xpm/XpmI.h
--- wxMSW-2.2.9/src/xpm/XpmI.h	Fri Mar 31 18:02:44 2000
+++ wxMSW-2.2.9-CWMods/src/xpm/XpmI.h	Mon Jan 28 09:15:58 2002
@@ -46,5 +46,5 @@
 
 // Added by JACS for some compilers (no popen/pclose functions)
-#if defined(__WATCOMC__) || (!defined(WIN32) && defined(_MSC_VER)) || (!defined(WIN32) && defined(__BORLANDC__))
+#if defined(__WATCOMC__) || (!defined(WIN32) && defined(_MSC_VER)) || (!defined(WIN32) && defined(__BORLANDC__)) || defined(__MWERKS__)		// IMT
 #define NO_ZPIPE
 #endif

 	  	 
