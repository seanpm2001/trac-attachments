Index: samples/minimal/minimal.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/minimal/minimal.cpp,v
retrieving revision 1.71
diff -u -r1.71 minimal.cpp
--- samples/minimal/minimal.cpp	2006/06/29 13:47:45	1.71
+++ samples/minimal/minimal.cpp	2006/11/01 03:49:18
@@ -30,6 +30,7 @@
     #include "wx/wx.h"
 #endif
 
+#include "wx/spinctrl.h"
 // ----------------------------------------------------------------------------
 // resources
 // ----------------------------------------------------------------------------
@@ -172,6 +173,8 @@
     CreateStatusBar(2);
     SetStatusText(_T("Welcome to wxWidgets!"));
 #endif // wxUSE_STATUSBAR
+
+    wxSpinCtrl* ourControl = new wxSpinCtrl( this, wxID_ANY, _T("99"), wxDefaultPosition, wxDefaultSize );
 }
 
 
Index: src/mac/carbon/spinctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/spinctrl.cpp,v
retrieving revision 1.28
diff -u -r1.28 spinctrl.cpp
--- src/mac/carbon/spinctrl.cpp	2006/10/31 08:49:46	1.28
+++ src/mac/carbon/spinctrl.cpp	2006/11/01 03:49:22
@@ -20,7 +20,7 @@
 #endif
 
 #include "wx/spinbutt.h"
-
+#include "wx/valtext.h"
 // ----------------------------------------------------------------------------
 // constants
 // ----------------------------------------------------------------------------
@@ -122,15 +122,45 @@
         event.Skip();
     }
 
+    void OnKeyDown(wxKeyEvent& event)
+    {
+        //check range before we go any further. Ryan Wilcox 10/24/06
+        wxChar theKey;
+        wxString ourValue = GetValue();
+        
+        #if wxUSE_UNICODE
+            theKey = event.GetUnicodeKey();
+        #else
+            theKey =  event.GetKeyCode();
+        #endif
+        
+        if ( wxIsdigit(theKey) )
+        {
+            ourValue << theKey;
+            long willBeValue;
+            ourValue.ToLong(&willBeValue);
+        
+            if ( (willBeValue > m_spin->GetMax()) || (willBeValue < m_spin->GetMin()) )
+            {
+                wxBell();
+                return; //yikes too big or too small!!
+            }
+        }
+        
+        event.Skip();
+    }
+    
+
 private:
     wxSpinCtrl *m_spin;
-
+	
     DECLARE_EVENT_TABLE()
 };
 
 BEGIN_EVENT_TABLE(wxSpinCtrlText, wxTextCtrl)
     EVT_TEXT(wxID_ANY, wxSpinCtrlText::OnTextChange)
     EVT_KILL_FOCUS( wxSpinCtrlText::OnKillFocus)
+	EVT_KEY_DOWN(wxSpinCtrlText::OnKeyDown)
 END_EVENT_TABLE()
 
 // ----------------------------------------------------------------------------
@@ -242,7 +272,11 @@
     m_btn->SetValue(initial);
     // make it different
     m_oldValue = GetMin()-1;
-
+    
+    
+    m_text->SetValidator( wxTextValidator(wxFILTER_NUMERIC) );
+    //don't let users type in non-numerics. Ryan Wilcox 10/24/06
+    
     if ( size.x == wxDefaultCoord ){
         csize.x = m_text->GetSize().x + MARGIN + m_btn->GetSize().x ;
     }

 	  	 
