Index: agw/aui/tabart.py
===================================================================
--- agw/aui/tabart.py	(revision 63304)
+++ agw/aui/tabart.py	(working copy)
@@ -878,6 +878,7 @@
         useImages = self.GetFlags() & AUI_NB_USE_IMAGES_DROPDOWN
         menuPopup = wx.Menu()
 
+        longest = 0
         for i, page in enumerate(pages):
         
             caption = page.caption
@@ -887,6 +888,11 @@
             if caption == "":
                 caption = " "
 
+            # Save longest caption width for calculating menu width with
+            width = wnd.GetTextExtent(caption)[0]
+            if width > longest:
+                longest = width
+
             if useImages:
                 menuItem = wx.MenuItem(menuPopup, 1000+i, caption)
                 if page.bitmap:
@@ -904,14 +910,24 @@
         
             menuPopup.Check(1000+active_idx, True)
         
-        # find out where to put the popup menu of window items
-        pt = wx.GetMousePosition()
-        pt = wnd.ScreenToClient(pt)
-
         # find out the screen coordinate at the bottom of the tab ctrl
         cli_rect = wnd.GetClientRect()
-        pt.y = cli_rect.y + cli_rect.height
 
+        # Calculate the approximate size of the popupmenu for setting the
+        # position of the menu when its shown.
+        # Account for extra padding on left/right of text on mac menus
+        if wx.Platform in ['__WXMAC__', '__WXMSW__']:
+            longest += 32
+
+        # Bitmap/Checkmark width + padding
+        longest += 20
+
+        if self.GetFlags() & AUI_NB_CLOSE_BUTTON:
+            longest += 16
+
+        pt = wx.Point(cli_rect.x + cli_rect.GetWidth() - longest,
+                     cli_rect.y + cli_rect.height)
+
         cc = AuiCommandCapture()
         wnd.PushEventHandler(cc)
         wnd.PopupMenu(menuPopup, pt)
