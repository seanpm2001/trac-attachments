Index: include/wx/utils.h
===================================================================
--- include/wx/utils.h	(revision 54661)
+++ include/wx/utils.h	(working copy)
@@ -419,6 +419,9 @@
 
 enum wxShutdownFlags
 {
+#ifdef __WXMSW__
+    wxSHUTDOWN_LOGOFF,      // close session
+#endif
     wxSHUTDOWN_POWEROFF,    // power off the computer
     wxSHUTDOWN_REBOOT       // shutdown and reboot
 };
Index: interface/wx/utils.h
===================================================================
--- interface/wx/utils.h	(revision 54661)
+++ interface/wx/utils.h	(working copy)
@@ -952,11 +952,12 @@
           is only implemented under Unix and Win32.
 
     @param flags
-        Either wxSHUTDOWN_POWEROFF or wxSHUTDOWN_REBOOT
+        wxSHUTDOWN_POWEROFF, wxSHUTDOWN_REBOOT or wxSHUTDOWN_LOGOFF (MSW only)
 
     @return @true on success, @false if an error occurred.
 
     @header{wx/utils.h}
+    @since wxSHUTDOWN_LOGOFF since 2.9
 */
 bool wxShutdown(wxShutdownFlags flags);
 
Index: src/msw/utils.cpp
===================================================================
--- src/msw/utils.cpp	(revision 54661)
+++ src/msw/utils.cpp	(working copy)
@@ -990,27 +990,34 @@
 
     if ( bOK )
     {
-        UINT flags = EWX_SHUTDOWN | EWX_FORCE;
+        UINT flags = 0;
         switch ( wFlags )
         {
             case wxSHUTDOWN_POWEROFF:
-                flags |= EWX_POWEROFF;
+                flags = EWX_POWEROFF;
                 break;
 
             case wxSHUTDOWN_REBOOT:
-                flags |= EWX_REBOOT;
+                flags = EWX_REBOOT;
                 break;
 
+            case wxSHUTDOWN_LOGOFF:
+                flags = EWX_LOGOFF;
+                break;
+
             default:
                 wxFAIL_MSG( _T("unknown wxShutdown() flag") );
                 return false;
         }
 
+        // Force is to be used in 'emergencies' only according to doc
+        //if (force) flags |= EWX_FORCE;
+
         bOK = ::ExitWindowsEx(flags, 0) != 0;
     }
 
     return bOK;
-#endif // Win32/16
+#endif
 }
 
 // ----------------------------------------------------------------------------
