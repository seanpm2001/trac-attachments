Index: src/common/datetime.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/datetime.cpp,v
retrieving revision 1.80
diff -b -u -2 -r1.80 datetime.cpp
--- src/common/datetime.cpp	2003/06/14 13:23:56	1.80
+++ src/common/datetime.cpp	2003/06/21 07:48:58
@@ -835,12 +835,27 @@
     tm tm;
     InitTm(tm);
+    char buffer[64];
+    // @Note: Do not call 'CallStrftime' here! CallStrftime checks the return code
+    // and causes an assertion failed if the buffer is to small (which is good) - OR -
+    // if strftime does not return anything because the format string is invalid - OR -
+    // if there are no 'am' / 'pm' tokens defined for the current locale (which is not good).
+    // wxDateTime::ParseTime will try several different formats to parse the time.
+    // As a result, GetAmPmStrings might get called, even if the current locale
+    // does not define any 'am' / 'pm' tokens. In this case, wxStrftime would
+    // assert, even though it is a perfectly legal use.
     if ( am )
     {
-        *am = CallStrftime(_T("%p"), &tm);
+        if (wxStrftime(buffer, sizeof buffer, _T("%p"), &tm) > 0)
+            *am = wxString(buffer);
+        else
+            *am = wxString();
     }
     if ( pm )
     {
         tm.tm_hour = 13;
-        *pm = CallStrftime(_T("%p"), &tm);
+        if (wxStrftime(buffer, sizeof buffer, _T("%p"), &tm) > 0)
+            *pm = wxString(buffer);
+        else
+            *pm = wxString();
     }
 }
@@ -2861,4 +2876,6 @@
 
                     GetAmPmStrings(&am, &pm);
+                    if (am.IsEmpty() && pm.IsEmpty())
+                        return (wxChar *)NULL;  // no am/pm strings defined
                     if ( token.CmpNoCase(pm) == 0 )
                     {

 	  	 
