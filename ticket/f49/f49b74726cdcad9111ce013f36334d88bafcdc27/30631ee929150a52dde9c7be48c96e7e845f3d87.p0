--- src/common/wincmn-o1.cpp	2007-11-23 17:22:08.000000000 +0100
+++ src/common/wincmn.cpp	2007-11-23 17:25:43.000000000 +0100
@@ -316,6 +316,10 @@
     // we weren't a dialog class
     wxTopLevelWindows.DeleteObject((wxWindow*)this);
 
+    // If we have a popup menu open at this time, disassociate from it
+    if( ms_popupCurrent && ms_popupCurrent->GetInvokingWindow()==this )
+        ms_popupCurrent->SetInvokingWindow(NULL);
+
     wxASSERT_MSG( GetChildren().GetCount() == 0, wxT("children not destroyed") );
 
     // notify the parent about this window destruction
@@ -2241,6 +2245,9 @@
 
 #if wxUSE_MENUS
 
+// Currently active popup menu
+wxMenu *wxWindowBase::ms_popupCurrent;
+
 // PopupMenuGetId functionality
 // Support for retrieveing the ID of a selected menu item directly.
 // Needs two globals vars and an event handler to operate
--- include/wx/window-o2.h	2007-11-23 17:27:14.000000000 +0100
+++ include/wx/window.h	2007-11-23 17:27:31.000000000 +0100
@@ -997,9 +997,9 @@
 
 #if wxUSE_MENUS
     bool PopupMenu(wxMenu *menu, const wxPoint& pos = wxDefaultPosition)
-        { return DoPopupMenu(menu, pos.x, pos.y); }
+        { ms_popupCurrent=menu; bool rv=DoPopupMenu(menu, pos.x, pos.y); ms_popupCurrent=NULL; return rv; }
     bool PopupMenu(wxMenu *menu, int x, int y)
-        { return DoPopupMenu(menu, x, y); }
+        { ms_popupCurrent=menu; bool rv=DoPopupMenu(menu, x, y); ms_popupCurrent=NULL; return rv; }
     int PopupMenuGetId( wxMenu *menu, const wxPoint& pt=wxDefaultPosition, bool skip_evt_handlers=false );
 #endif // wxUSE_MENUS
 
@@ -1523,6 +1523,8 @@
     static bool ms_winCaptureChanging;
 
 #if wxUSE_MENUS
+    // Keeps track of shown popup menu (coordinate window and menu destruction)
+    static wxMenu* ms_popupCurrent;
     // Id selected in PopupMenuGetId()
     static int     ms_popupIdSelected;      
     // Set to true if skip event handler in PopupMenuGetId()

 	  	 
