--- C:\Users\nmccorkx\Portable_Python_2.7.5.1_gtk\App\Lib\site-packages\wx-3.0-msw\wx\lib\agw\ultimatelistctrl.py	2014-06-24 15:47:11.000000000 -0700
+++ C:\Users\nmccorkx\Downloads\ultimatelistctrl.py	2014-06-24 10:51:59.000000000 -0700
@@ -4449,13 +4449,12 @@
          the drawing.     
         """
 
         attr = self.GetAttr()
 
         useGradient, gradientStyle = self._owner._usegradients, self._owner._gradientstyle
-        highlightedtextcolour = self._owner._highlightedtextcolour
         useVista = self._owner._vistaselection
         hasFocus = self._owner._hasFocus
         borderOnly = self._owner.HasAGWFlag(ULC_BORDER_SELECT)
         nofullRow = self._owner.HasAGWFlag(ULC_NO_FULL_ROW_SELECT)
         
         drawn = False
@@ -4479,13 +4478,13 @@
 
         else:
 
             paintRect = wx.Rect(*rectHL)            
         
         if self.SetAttributes(dc, attr, highlighted) and enabled:
-
+            
             drawn = True
                                 
             if not borderOnly:
             
                 if useGradient:
                     if gradientStyle == 0:
@@ -4513,13 +4512,12 @@
     
             if borderOnly:
 
                 dc.SetBrush(wx.WHITE_BRUSH)
                 dc.SetPen(wx.TRANSPARENT_PEN)
                 dc.DrawRectangleRect(paintRect)
-            
 
         x = rect.x + HEADER_OFFSET_X
         y = rect.y
         height = rect.height
         boldFont = wx.SystemSettings.GetFont(wx.SYS_DEFAULT_GUI_FONT)
         boldFont.SetWeight(wx.BOLD)
@@ -4602,14 +4600,12 @@
                     dc.SetTextForeground(self._owner.GetDisabledTextColour())
                 else:
                     if coloured:
                         dc.SetTextForeground(item.GetColour())
                     elif useVista and drawn:
                         dc.SetTextForeground(wx.BLACK)
-                    if highlightedtextcolour and current:
-                        dc.SetTextForeground(highlightedtextcolour)
 
                 if item.IsHyperText():
                     dc.SetFont(self._owner.GetHyperTextFont())
                     if item.GetVisited():
                         dc.SetTextForeground(self._owner.GetHyperTextVisitedColour())
                     else:
@@ -6025,13 +6021,13 @@
         # allows to minimize the number of repaintings when a lot of items are
         # being added. The real repainting occurs only after the next OnIdle()
         # call
         self._dirty = False
         self._parent = parent
         self.Init()
-        
+
         self._highlightBrush = wx.Brush(wx.SystemSettings.GetColour(wx.SYS_COLOUR_HIGHLIGHT), wx.SOLID)
         
         btnshadow = wx.SystemSettings_GetColour(wx.SYS_COLOUR_BTNSHADOW)
         self._highlightUnfocusedBrush = wx.Brush(btnshadow, wx.SOLID)
         r, g, b = btnshadow.Red(), btnshadow.Green(), btnshadow.Blue()
         backcolour = (max((r >> 1) - 20, 0),
@@ -6111,20 +6107,16 @@
         self._usegradients = False
         self._gradientstyle = 1   # Vertical Gradient
 
         # Vista Selection Styles
         self._vistaselection = False
 
-        # Selected/highlighted item text color. Leave unset for ForegroundColor to always apply, even for selected item
-        self._highlightedtextcolour = None
-
         self.SetImageListCheck(16, 16)        
         
         # Disabled items colour        
         self._disabledColour = wx.Colour(180, 180, 180)
-
 
         # Hyperlinks things
         normalFont = wx.SystemSettings_GetFont(wx.SYS_DEFAULT_GUI_FONT)
         self._hypertextfont = wx.Font(normalFont.GetPointSize(), normalFont.GetFamily(),
                                       normalFont.GetStyle(), wx.NORMAL, True,
                                       normalFont.GetFaceName(), normalFont.GetEncoding())
@@ -10695,36 +10687,12 @@
 
         self._usegradients = False
         self._vistaselection = enable
         self.RefreshSelected()
 
 
-    def SetSelectedTextColour(self, colour=None):
-        """
-        Sets the colour of text applied to an item when it is selected. 
-        If this method is not called, text color of selected items will be
-        the system value wx.SYS_COLOUR_HIGHLIGHTTEXT, or the color set on 
-        the item with SetTextColour.
-
-        :param `colour`: if not ``None``, a valid :class:`Colour` instance. Otherwise,
-         the colour is taken from the system value ``wx.SYS_COLOUR_HIGHLIGHTTEXT``.
-        """
-        
-        if colour is None:
-            colour = wx.SystemSettings_GetColour(wx.SYS_COLOUR_HIGHLIGHTTEXT)
-
-        self._highlightedtextcolour = colour
-        if self._usegradients:
-            self.RefreshSelected()
-
-    def GetSelectedTextColour(self):
-        """ Returns the colour applied to text when an item is selected. """
-        
-        return self._highlightedtextcolour
-
-
     def SetBackgroundImage(self, image):
         """
         Sets the :class:`UltimateListCtrl` background image.
 
         :param `image`: if not ``None``, an instance of :class:`Bitmap`.
 
@@ -10930,13 +10898,13 @@
 
         self._agwStyle = agwStyle
         if style & wx.SUNKEN_BORDER:
             style -= wx.SUNKEN_BORDER
             
         self._mainWin = UltimateListMainWindow(self, wx.ID_ANY, wx.Point(0, 0), wx.DefaultSize, style, agwStyle)
-        
+
         sizer = wx.BoxSizer(wx.VERTICAL)
         sizer.Add(self._mainWin, 1, wx.GROW)
         self.SetSizer(sizer)
 
         self.Bind(wx.EVT_SIZE, self.OnSize)
         self.Bind(wx.EVT_SET_FOCUS, self.OnSetFocus)
@@ -13236,32 +13204,12 @@
          enabled.
         """
 
         self._mainWin.EnableSelectionVista(enable)
 
 
-    def SetSelectedTextColour(self, colour=None):
-        """
-        Sets the colour of text applied to an item when it is selected. 
-        If this method is not called, text color of selected items will be
-        the system value wx.SYS_COLOUR_HIGHLIGHTTEXT, or the color set on 
-        the item with SetTextColour.
-
-        :param `colour`: if not ``None``, a valid :class:`Colour` instance. Otherwise,
-         the colour is taken from the system value ``wx.SYS_COLOUR_HIGHLIGHTTEXT``.
-        """
-        
-        self._mainWin.SetSelectedTextColour(colour)
-
-
-    def GetSelectedTextColour(self):
-        """ Returns the colour applied to text when an item is selected. """
-        
-        return self._mainWin.GetSelectedTextColour()
-
-
     def SetBackgroundImage(self, image=None):
         """
         Sets the :class:`UltimateListCtrl` background image.
 
         :param `image`: if not ``None``, an instance of :class:`Bitmap`.
 
