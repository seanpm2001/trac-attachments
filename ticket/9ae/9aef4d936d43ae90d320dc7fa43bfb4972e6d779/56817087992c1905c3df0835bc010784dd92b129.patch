Index: src/common/datstrm.cpp
===================================================================
--- src/common/datstrm.cpp	(revision 73107)
+++ src/common/datstrm.cpp	(working copy)
@@ -114,11 +114,10 @@
     if ( len > 0 )
     {
 #if wxUSE_UNICODE
-        wxCharBuffer tmp(len + 1);
+        wxCharBuffer tmp(len);
         if ( tmp )
         {
             m_input->Read(tmp.data(), len);
-            tmp.data()[len] = '\0';
             ret = m_conv->cMB2WX(tmp.data());
         }
 #else
Index: src/common/ffile.cpp
===================================================================
--- src/common/ffile.cpp	(revision 73107)
+++ src/common/ffile.cpp	(working copy)
@@ -102,7 +102,7 @@
 
     clearerr(m_fp);
 
-    wxCharBuffer buf(length + 1);
+    wxCharBuffer buf(length);
 
     // note that real length may be less than file length for text files with DOS EOLs
     // ('\r's get dropped by CRT when reading which means that we have
Index: src/common/strconv.cpp
===================================================================
--- src/common/strconv.cpp	(revision 73107)
+++ src/common/strconv.cpp	(working copy)
@@ -460,7 +460,6 @@
         // because we want the buffer to always be NUL-terminated, even if the
         // input isn't (as otherwise the caller has no way to know its length)
         wxWCharBuffer wbuf(dstLen);
-        wbuf.data()[dstLen] = L'\0';
         if ( ToWChar(wbuf.data(), dstLen, inBuff, inLen) != wxCONV_FAILED )
         {
             if ( outLen )
Index: src/html/htmlfilt.cpp
===================================================================
--- src/html/htmlfilt.cpp	(revision 73107)
+++ src/html/htmlfilt.cpp	(working copy)
@@ -154,9 +154,8 @@
     else
     {
         size_t size = s->GetSize();
-        wxCharBuffer buf( size+1 );
+        wxCharBuffer buf( size );
         s->Read( buf.data(), size );
-        *(buf.data() + size) = 0;
         wxString tmpdoc( buf, wxConvISO8859_1);
 
         wxString charset = wxHtmlParser::ExtractCharsetInformation(tmpdoc);
