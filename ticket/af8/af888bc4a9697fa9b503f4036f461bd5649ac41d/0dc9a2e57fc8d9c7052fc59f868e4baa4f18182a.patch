--- C:\dev\sdk\wxWidgets-2.6.3\src\common\image.2.0.45.cpp	2006-10-27 11:52:21.000 +0200
+++ C:\dev\sdk\wxWidgets-2.6.3\src\common\image.cpp	2006-10-26 00:29:40.000 +0200
@@ -706,41 +706,72 @@
     if (width < 1) return;
     if (height < 1) return;
 
-    if ((!HasMask() && !image.HasMask()) ||
+    width *= 3;
+    unsigned char* source_data = image.GetData() + xx*3 + yy*3*image.GetWidth();
+    int source_step = image.GetWidth()*3;
+
+    unsigned char* target_data = GetData() + (x+xx)*3 + (y+yy)*3*M_IMGDATA->m_width;
+    int target_step = M_IMGDATA->m_width*3;
+
+	if (image.HasAlpha())
+	{
+		unsigned char* source_alpha = image.GetAlpha() + (x+xx) + (y+yy)*image.GetWidth();
+		unsigned char* target_alpha = GetAlpha() + (x+xx) + (y+yy)*M_IMGDATA->m_width;
+		int source_alpha_step = image.GetWidth();
+		int target_alpha_step = GetWidth();
+
+		// upgrade to alpha (if no alpha and no mask, loose mask)
+		if (HasMask()) 
+			InitAlpha();
+
+		bool hasAlpha = HasAlpha();
+
+		for (int j = 0; j < height; j++)
+        {
+            unsigned char *target_alpha_i = target_alpha;
+			unsigned char *source_alpha_i = source_alpha;
+            			
+            for (int i = 0; i < width; i+=3)
+            {
+                unsigned char *target_rgb = target_data+i;
+                unsigned char *source_rgb = source_data+i;
+
+				target_rgb[0] = (((int)source_rgb[0] * *source_alpha_i + (255 - *source_alpha_i)*(int)target_rgb[0])/255);
+				target_rgb[1] = (((int)source_rgb[1] * *source_alpha_i + (255 - *source_alpha_i)*(int)target_rgb[1])/255);
+				target_rgb[2] = (((int)source_rgb[2] * *source_alpha_i + (255 - *source_alpha_i)*(int)target_rgb[2])/255);
+
+                if (hasAlpha)
+					*target_alpha_i = (((int)*source_alpha_i * *source_alpha_i + (255 - *source_alpha_i)*(int)*target_alpha_i)/255);
+
+				++target_alpha_i;
+				++source_alpha_i;
+            }
+            source_data += source_step;
+            target_data += target_step;
+			source_alpha += source_alpha_step;
+			target_alpha += target_alpha_step;
+        }
+	}
+    else if ((!HasMask() && !image.HasMask()) ||
         (HasMask() && !image.HasMask()) ||
        ((HasMask() && image.HasMask() &&
          (GetMaskRed()==image.GetMaskRed()) &&
          (GetMaskGreen()==image.GetMaskGreen()) &&
          (GetMaskBlue()==image.GetMaskBlue()))))
     {
-        width *= 3;
-        unsigned char* source_data = image.GetData() + xx*3 + yy*3*image.GetWidth();
-        int source_step = image.GetWidth()*3;
-
-        unsigned char* target_data = GetData() + (x+xx)*3 + (y+yy)*3*M_IMGDATA->m_width;
-        int target_step = M_IMGDATA->m_width*3;
         for (int j = 0; j < height; j++)
         {
             memcpy( target_data, source_data, width );
             source_data += source_step;
             target_data += target_step;
         }
-        return;
     }
-
-    if (!HasMask() && image.HasMask())
+    else if (!HasMask() && image.HasMask())
     {
         unsigned char r = image.GetMaskRed();
         unsigned char g = image.GetMaskGreen();
         unsigned char b = image.GetMaskBlue();
 
-        width *= 3;
-        unsigned char* source_data = image.GetData() + xx*3 + yy*3*image.GetWidth();
-        int source_step = image.GetWidth()*3;
-
-        unsigned char* target_data = GetData() + (x+xx)*3 + (y+yy)*3*M_IMGDATA->m_width;
-        int target_step = M_IMGDATA->m_width*3;
-
         for (int j = 0; j < height; j++)
         {
             for (int i = 0; i < width; i+=3)


 	  	 
