Index: samples/dataview/dataview.cpp
===================================================================
--- samples/dataview/dataview.cpp	(revision 76293)
+++ samples/dataview/dataview.cpp	(working copy)
@@ -624,34 +624,13 @@
             m_list_model = new MyListModel;
             m_ctrl[1]->AssociateModel( m_list_model.get() );
 
-            // the various columns
-            m_ctrl[1]->AppendTextColumn("editable string",
-                                        MyListModel::Col_EditableText,
-                                        wxDATAVIEW_CELL_EDITABLE,
-                                        wxCOL_WIDTH_AUTOSIZE,
-                                        wxALIGN_NOT,
-                                        wxDATAVIEW_COL_SORTABLE);
-            m_ctrl[1]->AppendIconTextColumn("icon",
-                                            MyListModel::Col_IconText,
-                                            wxDATAVIEW_CELL_EDITABLE,
-                                            wxCOL_WIDTH_AUTOSIZE,
-                                            wxALIGN_NOT,
-                                            wxDATAVIEW_COL_REORDERABLE | wxDATAVIEW_COL_SORTABLE);
-
-            m_attributes =
-                new wxDataViewColumn("attributes",
-                                     new wxDataViewTextRenderer,
-                                     MyListModel::Col_TextWithAttr,
-                                     wxCOL_WIDTH_AUTOSIZE,
-                                     wxALIGN_RIGHT,
-                                     wxDATAVIEW_COL_REORDERABLE | wxDATAVIEW_COL_RESIZABLE | wxDATAVIEW_COL_SORTABLE);
-            m_ctrl[1]->AppendColumn( m_attributes );
-
-            m_ctrl[1]->AppendColumn(
-                new wxDataViewColumn("custom renderer",
-                                     new MyCustomRenderer,
-                                     MyListModel::Col_Custom)
-            );
+            unsigned int col_count = m_list_model.get()->GetColumnCount();
+            for (unsigned int i = 0; i < col_count; i++)
+                m_ctrl[1]->AppendTextColumn(wxString::Format(wxT("%d"), (int)i), i, wxDATAVIEW_CELL_INERT
+                    , 150 // if commenting out this line, the header displays ok
+                    );
+            wxDataViewItem item = m_list_model.get()->GetItem(0);
+            m_ctrl[1]->EnsureVisible(item, m_ctrl[1]->GetColumn(col_count-1));
         }
         break;
 
Index: samples/dataview/mymodels.cpp
===================================================================
--- samples/dataview/mymodels.cpp	(revision 76293)
+++ samples/dataview/mymodels.cpp	(working copy)
@@ -317,6 +317,7 @@
 // MyListModel
 // ----------------------------------------------------------------------------
 
+/*
 static int my_sort_reverse( int *v1, int *v2 )
 {
    return *v2-*v1;
@@ -535,8 +536,8 @@
 
     return false;
 }
+*/
 
-
 // ----------------------------------------------------------------------------
 // MyListStoreDerivedModel
 // ----------------------------------------------------------------------------
Index: samples/dataview/mymodels.h
===================================================================
--- samples/dataview/mymodels.h	(revision 76293)
+++ samples/dataview/mymodels.h	(working copy)
@@ -186,7 +186,7 @@
 // ----------------------------------------------------------------------------
 // MyListModel
 // ----------------------------------------------------------------------------
-
+/*
 class MyListModel: public wxDataViewVirtualListModel
 {
 public:
@@ -236,7 +236,51 @@
     wxArrayString    m_iconColValues;
     wxIcon           m_icon[2];
 };
+*/
+class MyListModel : public wxDataViewVirtualListModel
+{
+public:
+    enum
+    {
+        Col_Max = 250
+    };
 
+    MyListModel() {}
+
+    void Prepend( const wxString &) {}
+    void DeleteItem( const wxDataViewItem &) {}
+    void DeleteItems( const wxDataViewItemArray &) {}
+    void AddMany() {}
+
+    virtual unsigned int GetColumnCount() const wxOVERRIDE
+    {
+        return Col_Max;
+    }
+
+    virtual unsigned int GetCount() const
+    {
+        return 1;
+    }
+
+    virtual wxString GetColumnType( unsigned int /*col*/ ) const wxOVERRIDE
+    {
+        return wxT("string");
+    }
+
+    virtual void GetValueByRow( wxVariant &variant,
+                                unsigned int row, unsigned int col ) const wxOVERRIDE
+    {
+        variant = wxT("item");
+    }
+
+    virtual bool SetValueByRow( const wxVariant &variant,
+                                unsigned int row, unsigned int col ) wxOVERRIDE
+    {
+        return false;
+    }
+};
+
+
 // ----------------------------------------------------------------------------
 // MyListStoreDerivedModel
 // ----------------------------------------------------------------------------
