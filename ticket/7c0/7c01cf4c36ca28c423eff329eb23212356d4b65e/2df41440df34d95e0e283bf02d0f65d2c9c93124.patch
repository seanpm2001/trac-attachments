Index: include/wx/vector.h
===================================================================
--- include/wx/vector.h	(revision 63822)
+++ include/wx/vector.h	(working copy)
@@ -18,6 +18,11 @@
 
 #include <vector>
 #define wxVector std::vector
+template<typename T>
+inline void wxVectorSort(wxVector<T>& v)
+{
+    std::sort(v.begin(), v.end());
+}
 
 #else // !wxUSE_STL
 
@@ -437,6 +442,40 @@
 }
 #endif // WXWIN_COMPATIBILITY_2_8
 
+
+
+namespace wxPrivate
+{
+    // This function is a helper for the wxVectorSort function, and should
+    // not be used directly in user's code.
+
+template<typename T>
+int wxVectorSort_compare(const void* pitem1, const void* pitem2, const void* )
+{
+    const T& item1 = *reinterpret_cast<const T*>(pitem1);
+    const T& item2 = *reinterpret_cast<const T*>(pitem2);
+
+    if (item1 < item2)
+        return -1;
+    else if (item2 < item1)
+        return 1;
+    else
+        return 0;
+}
+
+}  // namespace wxPrivate
+
+
+
+template<typename T>
+void wxVectorSort(wxVector<T>& v)
+{
+    wxQsort(v.begin(), v.size(), sizeof(T),
+            wxPrivate::wxVectorSort_compare<T>, NULL);
+}
+
+
+
 #endif // wxUSE_STL/!wxUSE_STL
 
 #if WXWIN_COMPATIBILITY_2_8
Index: interface/wx/vector.h
===================================================================
--- interface/wx/vector.h	(revision 63822)
+++ interface/wx/vector.h	(working copy)
@@ -20,7 +20,7 @@
     @nolibrary
     @category{containers}
 
-    @see @ref overview_container, wxList<T>, wxArray<T>
+    @see @ref overview_container, wxList<T>, wxArray<T>, wxVectorSort<T>
 */
 template<typename T>
 class wxVector<T>
@@ -237,3 +237,19 @@
     size_type size() const;
 };
 
+
+/**
+   Sort the contents of a @c wxVector<T>.  In a STL build this function will
+   be defined as a thin wrapper around std::sort.  To be sortable the
+   contained type must support the less-than operator.
+
+   @code
+   wxVector<SomeClass> v;
+   ... // items are added to the vector v...
+   wxVectorSort(v);
+   @endcode
+      
+   @see wxVector<T>
+*/
+template<typename T>
+void wxVectorSort(wxVector<T>& v);
