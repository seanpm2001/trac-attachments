Index: interface/wx/filectrl.h
===================================================================
--- interface/wx/filectrl.h	(revision 64416)
+++ interface/wx/filectrl.h	(working copy)
@@ -37,6 +37,8 @@
         The user changed the current selection(by selecting or deselecting a file)
     @event{EVT_FILECTRL_FOLDERCHANGED(id, func)}
         The current folder of the file control has been changed
+    @event{EVT_FILECTRL_FILTERCHANGED(id, func)}
+        The current file filter of the file control has been changed
     @endEventTable
 
     @library{wxbase}
@@ -195,6 +197,8 @@
         The user changed the current selection(by selecting or deselecting a file)
     @event{EVT_FILECTRL_FOLDERCHANGED(id, func)}
         The current folder of the file control has been changed
+    @event{EVT_FILECTRL_FILTERCHANGED(id, func)}
+        The current file filter of the file control has been changed
     @endEventTable
 
     @library{wxbase}
@@ -230,6 +234,14 @@
     wxArrayString GetFiles() const;
 
     /**
+        Returns the current file filter index.
+
+        In case of a @b EVT_FILECTRL_FILTERCHANGED, this method returns the new
+        file filter index.
+    */
+    int GetFilterIndex() const;
+
+    /**
         Sets the files changed by this event.
     */
     void SetFiles(const wxArrayString& files);
@@ -239,5 +251,10 @@
         Sets the directory of this event.
     */
     void SetDirectory( const wxString &directory );
+
+    /**
+        Sets the filter index changed by this event.
+    */
+    void SetFilterIndex(int index);
 };
 
Index: include/wx/filectrl.h
===================================================================
--- include/wx/filectrl.h	(revision 64416)
+++ include/wx/filectrl.h	(working copy)
@@ -63,6 +63,7 @@
     virtual void ShowHidden(bool show) = 0;
 };
 
+void GenerateFilterChangedEvent( wxFileCtrlBase *fileCtrl, wxWindow *wnd );
 void GenerateFolderChangedEvent( wxFileCtrlBase *fileCtrl, wxWindow *wnd );
 void GenerateSelectionChangedEvent( wxFileCtrlBase *fileCtrl, wxWindow *wnd );
 void GenerateFileActivatedEvent( wxFileCtrlBase *fileCtrl, wxWindow *wnd, const wxString filename = wxEmptyString );
@@ -76,6 +77,8 @@
 #endif
 
 // Some documentation
+// On wxEVT_FILECTRL_FILTERCHANGED, only the value returned by GetFilterIndex is
+// valid and it represents the (new) current filter index for the wxFileCtrl.
 // On wxEVT_FILECTRL_FOLDERCHANGED, only the value returned by GetDirectory is
 // valid and it represents the (new) current directory for the wxFileCtrl.
 // On wxEVT_FILECTRL_FILEACTIVATED, GetDirectory returns the current directory
@@ -100,13 +103,16 @@
 
     void SetFiles( const wxArrayString &files ) { m_files = files; }
     void SetDirectory( const wxString &directory ) { m_directory = directory; }
+    void SetFilterIndex( int filterIndex ) { m_filterIndex = filterIndex; }
 
     wxArrayString GetFiles() const { return m_files; }
     wxString GetDirectory() const { return m_directory; }
+    int GetFilterIndex() const { return m_filterIndex; }
 
     wxString GetFile() const;
 
 protected:
+    int m_filterIndex;
     wxString m_directory;
     wxArrayString m_files;
 
@@ -118,6 +124,7 @@
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_FILECTRL_SELECTIONCHANGED, wxFileCtrlEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_FILECTRL_FILEACTIVATED, wxFileCtrlEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_FILECTRL_FOLDERCHANGED, wxFileCtrlEvent );
+wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_CORE, wxEVT_FILECTRL_FILTERCHANGED, wxFileCtrlEvent );
 
 #define wxFileCtrlEventHandler(func) \
     wxEVENT_HANDLER_CAST( wxFileCtrlEventFunction, func )
@@ -131,6 +138,9 @@
 #define EVT_FILECTRL_FOLDERCHANGED(id, fn) \
     wx__DECLARE_EVT1(wxEVT_FILECTRL_FOLDERCHANGED, id, wxFileCtrlEventHandler(fn))
 
+#define EVT_FILECTRL_FILTERCHANGED(id, fn) \
+    wx__DECLARE_EVT1(wxEVT_FILECTRL_FILTERCHANGED, id, wxFileCtrlEventHandler(fn))
+
 #endif // wxUSE_FILECTRL
 
 #endif // _WX_FILECTRL_H_BASE_
Index: src/common/filectrlcmn.cpp
===================================================================
--- src/common/filectrlcmn.cpp	(revision 64416)
+++ src/common/filectrlcmn.cpp	(working copy)
@@ -28,11 +28,21 @@
 wxDEFINE_EVENT( wxEVT_FILECTRL_SELECTIONCHANGED, wxFileCtrlEvent );
 wxDEFINE_EVENT( wxEVT_FILECTRL_FILEACTIVATED, wxFileCtrlEvent );
 wxDEFINE_EVENT( wxEVT_FILECTRL_FOLDERCHANGED, wxFileCtrlEvent );
+wxDEFINE_EVENT( wxEVT_FILECTRL_FILTERCHANGED, wxFileCtrlEvent );
 
 IMPLEMENT_DYNAMIC_CLASS( wxFileCtrlEvent, wxCommandEvent )
 
 // some helper functions
 
+void GenerateFilterChangedEvent( wxFileCtrlBase *fileCtrl, wxWindow *wnd )
+{
+    wxFileCtrlEvent event( wxEVT_FILECTRL_FILTERCHANGED, wnd, wnd->GetId() );
+
+    event.SetFilterIndex( fileCtrl->GetFilterIndex() );
+
+    wnd->GetEventHandler()->ProcessEvent( event );
+}
+
 void GenerateFolderChangedEvent( wxFileCtrlBase *fileCtrl, wxWindow *wnd )
 {
     wxFileCtrlEvent event( wxEVT_FILECTRL_FOLDERCHANGED, wnd, wnd->GetId() );
Index: include/wx/gtk/filectrl.h
===================================================================
--- include/wx/gtk/filectrl.h	(revision 64416)
+++ include/wx/gtk/filectrl.h	(working copy)
@@ -32,7 +32,7 @@
 class WXDLLIMPEXP_CORE wxGtkFileChooser
 {
 public:
-    wxGtkFileChooser() {}
+    wxGtkFileChooser() { m_internalEvent = false; }
 
     void SetWidget(GtkFileChooser *w);
 
@@ -48,6 +48,9 @@
     void SetWildcard( const wxString& wildCard );
     void SetFilterIndex( int filterIndex );
 
+    bool HasFilterChoice() const;
+    bool InternalEvent() const { return m_internalEvent; }
+
     wxString GetCurrentWildCard() const
        { return m_wildcards[GetFilterIndex()]; }
 
@@ -56,6 +59,7 @@
     // First wildcard in filter, to be used when the user
     // saves a file without giving an extension.
     wxArrayString   m_wildcards;
+    bool            m_internalEvent;
 };
 
 #if wxUSE_FILECTRL
@@ -110,6 +114,9 @@
     virtual bool HasMultipleFileSelection() const { return HasFlag( wxFC_MULTIPLE ); }
     virtual void ShowHidden(bool show);
 
+    virtual bool HasFilterChoice() const;
+    virtual bool InternalEvent() const { return m_fc.InternalEvent(); }
+
     bool    m_checkNextSelEvent;
     bool    m_ignoreNextFolderChangeEvent;
 
Index: src/gtk/filectrl.cpp
===================================================================
--- src/gtk/filectrl.cpp	(revision 64416)
+++ src/gtk/filectrl.cpp	(working copy)
@@ -126,16 +126,19 @@
         GSList* ifilters = gtk_file_chooser_list_filters( chooser );
         GSList* filters = ifilters;
 
+        m_internalEvent = true;
         while ( ifilters )
         {
             gtk_file_chooser_remove_filter( chooser, GTK_FILE_FILTER( ifilters->data ) );
             ifilters = ifilters->next;
         }
         g_slist_free( filters );
+        m_internalEvent = false;
 
         if (!wildCard.empty())
         {
             // add parsed to GtkChooser
+            m_internalEvent = true;
             for ( size_t n = 0; n < wildFilters.GetCount(); ++n )
             {
                 GtkFileFilter* filter = gtk_file_filter_new();
@@ -157,6 +160,7 @@
 
                 gtk_file_chooser_add_filter( chooser, filter );
             }
+            m_internalEvent = false;
 
             // Reset the filter index
             SetFilterIndex( 0 );
@@ -201,6 +205,17 @@
         return index;
 }
 
+bool wxGtkFileChooser::HasFilterChoice() const
+{
+    GtkFileChooser *chooser = m_widget;
+    GtkFileFilter *filter = gtk_file_chooser_get_filter( chooser );
+
+    if( filter )
+        return true;
+    else
+        return false;
+}
+
 //-----------------------------------------------------------------------------
 // end wxGtkFileChooser Implementation
 //-----------------------------------------------------------------------------
@@ -257,6 +272,20 @@
     }
 }
 
+extern "C"
+{
+    static void
+    gtkfilechooserwidget_notify_callback( GObject *WXUNUSED( gobject ), GParamSpec *arg1, wxGtkFileCtrl *fileCtrl )
+    {
+        const char *name = g_param_spec_get_name (arg1);
+        if ( strcmp( name, "filter" ) == 0 &&
+             fileCtrl->HasFilterChoice() && !fileCtrl->InternalEvent() )
+        {
+            GenerateFilterChangedEvent( fileCtrl, fileCtrl );
+        }
+    }
+}
+
 // wxGtkFileCtrl implementation
 
 IMPLEMENT_DYNAMIC_CLASS( wxGtkFileCtrl, wxControl )
@@ -311,6 +340,10 @@
                        G_CALLBACK ( gtkfilechooserwidget_selection_changed_callback ),
                        this );
 
+    g_signal_connect ( m_fcWidget, "notify",
+                       G_CALLBACK ( gtkfilechooserwidget_notify_callback ),
+                       this );
+
     m_fc.SetWidget( m_fcWidget );
 
     if ( style & wxFC_MULTIPLE )
@@ -426,6 +459,11 @@
     g_object_set (G_OBJECT (m_fcWidget), "show-hidden", show, NULL);
 }
 
+bool wxGtkFileCtrl::HasFilterChoice() const
+{
+    return m_fc.HasFilterChoice();
+}
+
 #endif // wxUSE_FILECTRL
 
 #endif // wxUSE_FILECTRL && !defined(__WXUNIVERSAL__)
Index: src/generic/filectrlg.cpp
===================================================================
--- src/generic/filectrlg.cpp	(revision 64416)
+++ src/generic/filectrlg.cpp	(working copy)
@@ -1184,6 +1184,8 @@
     {
         m_filterExtension.clear();
     }
+
+    GenerateFilterChangedEvent( this, this );
 }
 
 void wxGenericFileCtrl::SetWildcard( const wxString& wildCard )
Index: samples/widgets/filectrl.cpp
===================================================================
--- samples/widgets/filectrl.cpp	(revision 64416)
+++ samples/widgets/filectrl.cpp	(working copy)
@@ -130,6 +130,7 @@
     EVT_CHECKBOX( wxID_ANY, FileCtrlWidgetsPage::OnCheckBox )
     EVT_RADIOBOX( wxID_ANY, FileCtrlWidgetsPage::OnRadioBox )
 
+    EVT_FILECTRL_FILTERCHANGED( wxID_ANY, FileCtrlWidgetsPage::OnFileCtrl )
     EVT_FILECTRL_FOLDERCHANGED( wxID_ANY, FileCtrlWidgetsPage::OnFileCtrl )
     EVT_FILECTRL_SELECTIONCHANGED( wxID_ANY, FileCtrlWidgetsPage::OnFileCtrl )
     EVT_FILECTRL_FILEACTIVATED( wxID_ANY, FileCtrlWidgetsPage::OnFileCtrl )
@@ -317,6 +318,10 @@
     {
         wxLogMessage("Selection changed event: %s", wxJoin(event.GetFiles(), ' '));
     }
+    else if ( event.GetEventType() == wxEVT_FILECTRL_FILTERCHANGED )
+    {
+        wxLogMessage("Filter changed event: %s", wxJoin(event.GetFiles(), ' '));
+    }
 }
 
 #endif // wxUSE_FILECTRL
