--- wxGTK-2.8.0-rc1/src/gtk/dcclient.cpp~	2006-11-13 02:58:13.000000000 -0800
+++ wxGTK-2.8.0-rc1/src/gtk/dcclient.cpp	2006-12-01 13:47:20.000000000 -0800
@@ -1065,6 +1065,17 @@
     DoDrawBitmap( (const wxBitmap&)icon, x, y, true );
 }
 
+// Remove transparency information from bitmap.
+static wxBitmap RemoveAlpha(const wxBitmap& bitmap)
+{
+    wxImage image = bitmap.ConvertToImage();
+    wxImage imageNoAlpha(image.GetWidth(), image.GetHeight());
+    memcpy(imageNoAlpha.GetData(), image.GetData(),
+           3*image.GetWidth()*image.GetHeight());
+    wxBitmap out(imageNoAlpha);
+    return out;
+}
+
 void wxWindowDC::DoDrawBitmap( const wxBitmap &bitmap,
                                wxCoord x, wxCoord y,
                                bool useMask )
@@ -1107,6 +1118,10 @@
     if ((w != ww) || (h != hh))
         use_bitmap = use_bitmap.Rescale( 0, 0, ww, hh, ww, hh );
 
+    // If the bitmap has transparency, remove alpha if we ignore the mask
+    if (! useMask && use_bitmap.GetDepth() == 32)
+        use_bitmap = RemoveAlpha(use_bitmap);
+
 #if !GTK_CHECK_VERSION(2,2,0)
     // NB: We can't render pixbufs with GTK+ < 2.2, we need to use pixmaps code.
     //     Pixbufs-based bitmaps with alpha channel don't have a mask, so we
@@ -1327,6 +1342,10 @@
             use_bitmap = selected.Rescale(cx-xx,cy-yy,cw,ch,bm_ww,bm_hh);
         }
 
+        // If the bitmap has transparency, remove alpha if we ignore the mask
+        if (! useMask && use_bitmap.GetDepth() == 32)
+            use_bitmap = RemoveAlpha(use_bitmap);
+
         // apply mask if any
         GdkBitmap *mask = (GdkBitmap *) NULL;
         if (useMask && use_bitmap.GetMask())

 	  	 
