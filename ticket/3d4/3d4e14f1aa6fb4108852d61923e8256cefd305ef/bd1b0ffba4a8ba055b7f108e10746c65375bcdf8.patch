Index: src/aui/auibar.cpp
===================================================================
--- src/aui/auibar.cpp	(revision 59447)
+++ src/aui/auibar.cpp	(working copy)
@@ -227,18 +227,32 @@
     m_text_orientation = orientation;
 }
 
-void wxAuiDefaultToolBarArt::DrawBackground(
-                                    wxDC& dc,
-                                    wxWindow* WXUNUSED(wnd),
-                                    const wxRect& _rect)
+void wxAuiDefaultToolBarArt::DrawBackground(wxDC& dc,
+                                            wxWindow* WXUNUSED(wnd),
+                                            const wxRect& _rect)
 {
     wxRect rect = _rect;
+
     rect.height++;
+
     wxColour start_colour = wxAuiStepColour(m_base_colour, 150);
     wxColour end_colour = wxAuiStepColour(m_base_colour, 90);
+
     dc.GradientFillLinear(rect, start_colour, end_colour, wxSOUTH);
 }
 
+void wxAuiDefaultToolBarArt::DrawPlainBackground(wxDC& dc,
+                                                 wxWindow* WXUNUSED(wnd),
+                                                 const wxRect& _rect)
+{
+    wxRect rect = _rect;
+    rect.height++;
+
+    dc.SetBrush(wxSystemSettings::GetColour(wxSYS_COLOUR_3DFACE));
+
+    dc.DrawRectangle(rect.GetX() - 1, rect.GetY() - 1, rect.GetWidth() + 2, rect.GetHeight() + 1);
+}
+
 void wxAuiDefaultToolBarArt::DrawLabel(
                                     wxDC& dc,
                                     wxWindow* WXUNUSED(wnd),
@@ -2130,14 +2144,16 @@
     wxBufferedPaintDC dc(this);
     wxRect cli_rect(wxPoint(0,0), GetClientSize());
 
+    bool horizontal = true;
 
-    bool horizontal = true;
     if (m_style & wxAUI_TB_VERTICAL)
         horizontal = false;
 
+    if (m_style & wxAUI_TB_PLAIN_BACKGROUND)
+        m_art->DrawPlainBackground(dc, this, cli_rect);
+    else
+        m_art->DrawBackground(dc, this, cli_rect);
 
-    m_art->DrawBackground(dc, this, cli_rect);
-
     int gripper_size = m_art->GetElementSize(wxAUI_TBART_GRIPPER_SIZE);
     int dropdown_size = m_art->GetElementSize(wxAUI_TBART_OVERFLOW_SIZE);
 
Index: include/wx/aui/auibar.h
===================================================================
--- include/wx/aui/auibar.h	(revision 59447)
+++ include/wx/aui/auibar.h	(working copy)
@@ -24,13 +24,14 @@
 
 enum wxAuiToolBarStyle
 {
-    wxAUI_TB_TEXT          = 1 << 0,
-    wxAUI_TB_NO_TOOLTIPS   = 1 << 1,
-    wxAUI_TB_NO_AUTORESIZE = 1 << 2,
-    wxAUI_TB_GRIPPER       = 1 << 3,
-    wxAUI_TB_OVERFLOW      = 1 << 4,
-    wxAUI_TB_VERTICAL      = 1 << 5,
-    wxAUI_TB_HORZ_LAYOUT   = 1 << 6,
+    wxAUI_TB_TEXT             = 1 << 0,
+    wxAUI_TB_NO_TOOLTIPS      = 1 << 1,
+    wxAUI_TB_NO_AUTORESIZE    = 1 << 2,
+    wxAUI_TB_GRIPPER          = 1 << 3,
+    wxAUI_TB_OVERFLOW         = 1 << 4,
+    wxAUI_TB_VERTICAL         = 1 << 5,
+    wxAUI_TB_HORZ_LAYOUT      = 1 << 6,
+    wxAUI_TB_PLAIN_BACKGROUND = 1 << 7,
     wxAUI_TB_HORZ_TEXT     = (wxAUI_TB_HORZ_LAYOUT | wxAUI_TB_TEXT),
     wxAUI_TB_DEFAULT_STYLE = 0
 };
@@ -252,11 +253,14 @@
     virtual void SetFont(const wxFont& font) = 0;
     virtual void SetTextOrientation(int orientation) = 0;
 
-    virtual void DrawBackground(
-                         wxDC& dc,
-                         wxWindow* wnd,
-                         const wxRect& rect) = 0;
+    virtual void DrawBackground(wxDC& dc,
+                                wxWindow* wnd,
+                                const wxRect& rect) = 0;
 
+    virtual void DrawPlainBackground(wxDC& dc,
+                                     wxWindow* wnd,
+                                     const wxRect& rect) = 0;
+
     virtual void DrawLabel(
                          wxDC& dc,
                          wxWindow* wnd,
@@ -335,6 +339,10 @@
                 wxWindow* wnd,
                 const wxRect& rect);
 
+    virtual void DrawPlainBackground(wxDC& dc,
+                                     wxWindow* wnd,
+                                     const wxRect& rect);
+
     virtual void DrawLabel(
                 wxDC& dc,
                 wxWindow* wnd,
