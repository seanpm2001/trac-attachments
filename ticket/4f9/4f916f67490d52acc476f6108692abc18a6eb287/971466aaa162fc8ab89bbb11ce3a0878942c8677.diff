Index: include/wx/msw/private.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/private.h,v
retrieving revision 1.151
diff --unified -r1.151 private.h
--- include/wx/msw/private.h	2006/02/08 22:32:42	1.151
+++ include/wx/msw/private.h	2006/02/14 20:11:10
@@ -896,9 +896,9 @@
 
 // note that the casts to LONG_PTR here are required even on 32-bit machines
 // for the 64-bit warning mode of later versions of MSVC (C4311/4312)
-inline void *wxGetWindowProc(HWND hwnd)
+inline WNDPROC wxGetWindowProc(HWND hwnd)
 {
-    return (void *)(LONG_PTR)::GetWindowLong(hwnd, GWL_WNDPROC);
+    return (WNDPROC)(LONG_PTR)::GetWindowLong(hwnd, GWL_WNDPROC);
 }
 
 inline void *wxGetWindowUserData(HWND hwnd)
Index: src/msw/fdrepdlg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/fdrepdlg.cpp,v
retrieving revision 1.24
diff --unified -r1.24 fdrepdlg.cpp
--- src/msw/fdrepdlg.cpp	2006/02/13 14:58:21	1.24
+++ src/msw/fdrepdlg.cpp	2006/02/15 00:14:20
@@ -38,8 +38,8 @@
 // functions prototypes
 // ----------------------------------------------------------------------------
 
-LRESULT APIENTRY wxFindReplaceWindowProc(HWND hwnd, WXUINT nMsg,
-                                       WPARAM wParam, LPARAM lParam);
+LRESULT CALLBACK wxFindReplaceWindowProc(HWND hwnd, WXUINT nMsg,
+                                         WPARAM wParam, LPARAM lParam);
 
 UINT_PTR CALLBACK wxFindReplaceDialogHookProc(HWND hwnd,
                                               UINT uiMsg,
@@ -190,7 +190,7 @@
 
     // check that we don't subclass the parent twice: this would be a bad idea
     // as then we'd have infinite recursion in wxFindReplaceWindowProc
-    wxCHECK_RET( wxGetWindowProc(hwnd) != (void *)wxFindReplaceWindowProc,
+    wxCHECK_RET( wxGetWindowProc(hwnd) != &wxFindReplaceWindowProc,
                  _T("can't have more than one find dialog currently") );
 
     // set the new one and save the old as user data to allow access to it
@@ -216,7 +216,7 @@
 // Window Proc for handling RegisterWindowMessage(FINDMSGSTRING)
 // ----------------------------------------------------------------------------
 
-LRESULT APIENTRY wxFindReplaceWindowProc(HWND hwnd, WXUINT nMsg,
+LRESULT CALLBACK wxFindReplaceWindowProc(HWND hwnd, WXUINT nMsg,
                                          WPARAM wParam, LPARAM lParam)
 {
 #if wxUSE_UNICODE_MSLU

 	  	 
