Index: include/wx/dbtable.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dbtable.h,v
retrieving revision 1.49
diff -u -r1.49 dbtable.h
--- include/wx/dbtable.h	2007/03/07 11:34:20	1.49
+++ include/wx/dbtable.h	2007/05/14 08:11:49
@@ -55,8 +55,9 @@
     bool    Updateable;                         // Specifies whether this column is updateable
     bool    InsertAllowed;                      // Specifies whether this column should be included in an INSERT statement
     bool    DerivedCol;                         // Specifies whether this column is a derived value
-    SQLLEN  CbValue;                            // Internal use only!!!
+    SQLLEN  CbValue;                            // Internal use only!!! For parameter bindings
     bool    Null;                               // NOT FULLY IMPLEMENTED - Allows NULL values in Inserts and Updates
+    SQLLEN  CbValueCol;                         // Internal use only!!! For column bindings
 
     wxDbColDef();
 
Index: src/common/dbtable.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/dbtable.cpp,v
retrieving revision 1.121
diff -u -r1.121 dbtable.cpp
--- src/common/dbtable.cpp	2007/04/11 13:13:10	1.121
+++ src/common/dbtable.cpp	2007/05/14 08:11:58
@@ -87,6 +87,7 @@
     DerivedCol      = false;
     CbValue         = 0;
     Null            = false;
+    CbValueCol      = 0;
 
     return true;
 }  // wxDbColDef::Initialize()
@@ -552,7 +553,7 @@
     for (i = 0; i < m_numCols; i++)
     {
         if (SQLBindCol(cursor, (UWORD)(i+1), colDefs[i].SqlCtype, (UCHAR*) colDefs[i].PtrDataObj,
-                       colDefs[i].SzDataObj, &colDefs[i].CbValue ) != SQL_SUCCESS)
+                       colDefs[i].SzDataObj, &colDefs[i].CbValueCol ) != SQL_SUCCESS)
           return (pDb->DispAllErrors(henv, hdbc, cursor));
     }
 
@@ -586,7 +587,7 @@
             // of each column just read in.
             int i;
             for (i = 0; i < m_numCols; i++)
-                colDefs[i].Null = (colDefs[i].CbValue == SQL_NULL_DATA);
+                colDefs[i].Null = (colDefs[i].CbValueCol == SQL_NULL_DATA);
         }
     }
     else
@@ -606,7 +607,7 @@
             // of each column just read in.
             int i;
             for (i = 0; i < m_numCols; i++)
-                colDefs[i].Null = (colDefs[i].CbValue == SQL_NULL_DATA);
+                colDefs[i].Null = (colDefs[i].CbValueCol == SQL_NULL_DATA);
         }
     }
 

 	  	 
