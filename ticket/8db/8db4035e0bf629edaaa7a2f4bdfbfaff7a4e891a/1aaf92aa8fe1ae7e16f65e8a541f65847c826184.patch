Index: src/msw/evtloop.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/evtloop.cpp,v
retrieving revision 1.34
diff -u -r1.34 evtloop.cpp
--- src/msw/evtloop.cpp	2005/09/25 11:14:10	1.34
+++ src/msw/evtloop.cpp	2005/11/14 15:42:50
@@ -209,6 +209,34 @@
 }
 
 // ----------------------------------------------------------------------------
+// Console handler routine
+//
+// this is called in certain (usually one-time) events from the console
+// for example, when exiting. We try to clean up everything here
+// as best we can.
+// ----------------------------------------------------------------------------
+
+BOOL WINAPI wxHandlerRoutine(DWORD WXUNUSED(dwCtrlType))
+{
+    // --dwControlType--
+    // 1 == Ctrl+C
+    // 2 == Ctrl+Break
+    // 3 == Normal Close
+    // 4 == Logoff
+    // 5 == Shutdown
+
+    //exit (FIXME: This may not be the eventloop we want)
+    wxEventLoopBase* pEventLoop = wxEventLoopBase::GetActive();
+    if(pEventLoop)
+    {
+        pEventLoop->Exit(0);
+    }
+
+    //true == process here ... false == process elsewhere (I.E. Hard Quit)
+    return true;
+}
+
+// ----------------------------------------------------------------------------
 // wxEventLoop running and exiting
 // ----------------------------------------------------------------------------
 
@@ -217,10 +245,17 @@
     return ms_activeLoop == this;
 }
 
+
+
 int wxEventLoop::Run()
 {
     // event loops are not recursive, you need to create another loop!
     wxCHECK_MSG( !IsRunning(), -1, _T("can't reenter a message loop") );
+
+    // If the user creates a console in windows mode through
+    // AllocConsole() we handle the closing of it through a callback above
+    // TRUE == add, FALSE == remove for 2nd param ( failure == 0)
+    ::SetConsoleCtrlHandler(wxHandlerRoutine, TRUE); 
 
     // ProcessIdle() and Dispatch() below may throw so the code here should
     // be exception-safe, hence we must use local objects for all actions we

 	  	 
