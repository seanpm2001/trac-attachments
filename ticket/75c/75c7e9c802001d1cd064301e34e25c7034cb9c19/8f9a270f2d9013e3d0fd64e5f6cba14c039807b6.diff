Index: src/gtk/gsockgtk.cpp
===================================================================
--- src/gtk/gsockgtk.cpp	(revision 67248)
+++ src/gtk/gsockgtk.cpp	(working copy)
@@ -42,6 +42,13 @@
 }
 }
 
+typedef struct {
+#if wxUSE_THREADS
+  wxMutex*	m_mutex;
+#endif
+  gint m_id[2];
+} GSocketGTKMutexProtected;
+
 bool GSocketGUIFunctionsTableConcrete::CanUseEventLoop()
 {   return true; }
 
@@ -56,25 +63,37 @@
 
 bool GSocketGUIFunctionsTableConcrete::Init_Socket(GSocket *socket)
 {
-  gint *m_id;
+  socket->m_gui_dependent = (char *)malloc(sizeof(GSocketGTKMutexProtected));
 
-  socket->m_gui_dependent = (char *)malloc(sizeof(gint)*2);
-  m_id = (gint *)(socket->m_gui_dependent);
+  GSocketGTKMutexProtected* guispecific = (GSocketGTKMutexProtected*)socket->m_gui_dependent;
 
-  m_id[0] = -1;
-  m_id[1] = -1;
+#if wxUSE_THREADS
+  guispecific->m_mutex = new wxMutex(wxMUTEX_RECURSIVE);
+#endif
 
+  guispecific->m_id[0] = -1;
+  guispecific->m_id[1] = -1;
+
   return TRUE;
 }
 
 void GSocketGUIFunctionsTableConcrete::Destroy_Socket(GSocket *socket)
 {
-  free(socket->m_gui_dependent);
+  GSocketGTKMutexProtected* guispecific = (GSocketGTKMutexProtected*)socket->m_gui_dependent;
+
+#if wxUSE_THREADS
+  delete guispecific->m_mutex;
+#endif
+
+  free(guispecific);
 }
 
 void GSocketGUIFunctionsTableConcrete::Install_Callback(GSocket *socket, GSocketEvent event)
 {
-  gint *m_id = (gint *)(socket->m_gui_dependent);
+  GSocketGTKMutexProtected* guispecific = (GSocketGTKMutexProtected*)socket->m_gui_dependent;
+
+  assert(guispecific != NULL);
+
   int c;
 
   if (socket->m_fd == -1)
@@ -89,21 +108,40 @@
     default: return;
   }
 
-  if (m_id[c] != -1)
-    gdk_input_remove(m_id[c]);
+#if wxUSE_THREADS
+  guispecific->m_mutex->Lock();
+#endif
+  gint current_id = guispecific->m_id[c];
+  guispecific->m_id[c] = -1;
+#if wxUSE_THREADS
+  guispecific->m_mutex->Unlock();
+#endif
 
-  m_id[c] = gdk_input_add(socket->m_fd,
+  if (current_id != -1) {
+    gdk_input_remove(current_id);
+  }
+
+  current_id  = gdk_input_add(socket->m_fd,
                           (c ? GDK_INPUT_WRITE : GDK_INPUT_READ),
                           _GSocket_GDK_Input,
                           (gpointer)socket);
+
+#if wxUSE_THREADS
+  guispecific->m_mutex->Lock();
+#endif
+  guispecific->m_id[c] = current_id;
+#if wxUSE_THREADS
+  guispecific->m_mutex->Unlock();
+#endif
+
 }
 
 void GSocketGUIFunctionsTableConcrete::Uninstall_Callback(GSocket *socket, GSocketEvent event)
 {
-  gint *m_id = (gint *)(socket->m_gui_dependent);
+  GSocketGTKMutexProtected* guispecific = (GSocketGTKMutexProtected*)socket->m_gui_dependent;
   int c;
 
-  assert( m_id != NULL );
+  assert( guispecific != NULL );
 
   switch (event)
   {
@@ -114,10 +152,18 @@
     default: return;
   }
 
-  if (m_id[c] != -1)
+#if wxUSE_THREADS
+  guispecific->m_mutex->Lock();
+#endif
+  gint current_id = guispecific->m_id[c];
+  guispecific->m_id[c] = -1;
+#if wxUSE_THREADS
+  guispecific->m_mutex->Unlock();
+#endif
+
+  if (current_id != -1)
   {
-    gdk_input_remove(m_id[c]);
-    m_id[c] = -1;
+    gdk_input_remove(current_id);
   }
 }
 
