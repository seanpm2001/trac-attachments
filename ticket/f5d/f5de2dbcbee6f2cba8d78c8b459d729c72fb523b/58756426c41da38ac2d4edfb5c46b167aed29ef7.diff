diff --git a/include/wx/msw/private.h b/include/wx/msw/private.h
index 622c3b1..bd282b4 100644
--- a/include/wx/msw/private.h
+++ b/include/wx/msw/private.h
@@ -218,6 +218,22 @@ struct WinStruct : public T
 };
 
 
+inline LPCTSTR wxConvertToLPCTSTR(const wxString& s)
+{
+    return static_cast<const wxChar *>(s.t_str());
+}
+
+inline LPTSTR wxConvertToLPTSTR(const wxString& s)
+{
+    return const_cast<wxChar *>(wxConvertToLPCTSTR(s));
+}
+
+inline LPARAM wxConvertToLPARAM(const wxString& s)
+{
+    return reinterpret_cast<LPARAM>(wxConvertToLPCTSTR(s));
+}
+
+
 #if wxUSE_GUI
 
 #include "wx/gdicmn.h"
diff --git a/src/msw/dde.cpp b/src/msw/dde.cpp
index 10f0dc7..8564327 100644
--- a/src/msw/dde.cpp
+++ b/src/msw/dde.cpp
@@ -1068,7 +1068,7 @@ static HSZ DDEAtomFromString(const wxString& s)
 {
     wxASSERT_MSG( DDEIdInst, wxT("DDE not initialized") );
 
-    HSZ hsz = DdeCreateStringHandle(DDEIdInst, const_cast<wxChar*>(static_cast<const wxChar*>(s.t_str())), DDE_CP);
+    HSZ hsz = DdeCreateStringHandle(DDEIdInst, wxConvertToLPTSTR(s), DDE_CP);
     if ( !hsz )
     {
         DDELogError(_("Failed to create DDE string"));
diff --git a/src/msw/registry.cpp b/src/msw/registry.cpp
index 80903a6..6526c16 100644
--- a/src/msw/registry.cpp
+++ b/src/msw/registry.cpp
@@ -1057,7 +1057,7 @@ bool wxRegKey::SetValue(const wxString& szValue, const wxString& strValue)
       m_dwLastError = RegSetValueEx((HKEY) m_hKey,
                                     RegValueStr(szValue),
                                     (DWORD) RESERVED, REG_SZ,
-                                    (RegString)static_cast<const TCHAR *>(strValue.t_str()),
+                                    (RegString)wxConvertToLPCTSTR(strValue),
                                     (strValue.Len() + 1)*sizeof(wxChar));
       if ( m_dwLastError == ERROR_SUCCESS )
         return true;
diff --git a/src/msw/utilsexc.cpp b/src/msw/utilsexc.cpp
index ae25587..367b705 100644
--- a/src/msw/utilsexc.cpp
+++ b/src/msw/utilsexc.cpp
@@ -857,14 +857,11 @@ long wxExecute(const wxString& cmd, int flags, wxProcess *handler,
                     // WinCE requires appname to be non null
                     // Win32 allows for null
 #ifdef __WXWINCE__
-                 static_cast<const TCHAR *>(
-                 moduleName.t_str()),// application name
-                 const_cast<TCHAR *>(static_cast<const TCHAR *>(
-                 arguments.t_str())), // arguments
+                 wxConvertToLPCTSTR(moduleName), // application name
+                 wxConvertToLPTSTR(arguments),   // arguments
 #else
                  NULL,               // application name (use only cmd line)
-                 const_cast<TCHAR *>(static_cast<const TCHAR *>(
-                 command.t_str())),   // full command line
+                 wxConvertToLPTSTR(command), // full command line
 #endif
                  NULL,               // security attributes: defaults for both
                  NULL,               //   the process and its main thread
@@ -872,7 +869,7 @@ long wxExecute(const wxString& cmd, int flags, wxProcess *handler,
                  dwFlags,            // process creation flags
                  envBuffer.data(),   // environment (may be NULL which is fine)
                  useCwd              // initial working directory
-                    ? const_cast<TCHAR *>(static_cast<const TCHAR *>(env->cwd.t_str()))
+                    ? wxConvertToLPTSTR(env->cwd)
                     : NULL,          //     (or use the same)
                  &si,                // startup info (unused here)
                  &pi                 // process info
