diff --git a/src/osx/cocoa/dataview.mm b/src/osx/cocoa/dataview.mm
index 9428747a3c..e2bad6e99d 100644
--- a/src/osx/cocoa/dataview.mm
+++ b/src/osx/cocoa/dataview.mm
@@ -622,7 +622,11 @@ -(void) dealloc
                     (
                      kCFAllocatorDefault,
                      (CFStringRef)[pasteboard stringForType:NSStringPboardType],
+#if defined(wxNEEDS_UTF16_FOR_TEXT_DATAOBJ)
+                     kCFStringEncodingUTF16,
+#else
                      kCFStringEncodingUTF8,
+#endif
                      32
                     );
         if (textDataObject->SetData(::CFDataGetLength(osxData),
@@ -821,10 +825,28 @@ -(NSDragOperation) outlineView:(NSOutlineView*)outlineView validateDrop:(id<NSDr
                 dataObjects->GetDataHere(event.GetDataFormat().GetType(),buffer.GetWriteBuf(event.GetDataSize()));
                 buffer.UngetWriteBuf(event.GetDataSize());
                 event.SetDataBuffer(buffer.GetData());
+                event.SetDropEffect(wxDragCopy); //default if allowed is copy, but user can reset
                 // finally, send event:
                 if (dvc->HandleWindowEvent(event) && event.IsAllowed())
                 {
-                    dragOperation = NSDragOperationEvery;
+                    switch (event.GetDropEffect()) {
+                    case wxDragCopy:
+                        dragOperation = NSDragOperationCopy;
+                        break;
+                    case wxDragMove:
+                        dragOperation = NSDragOperationMove;
+                        break;
+                    case wxDragLink:
+                        dragOperation = NSDragOperationLink;
+                        break;
+                    case wxDragNone:
+                    case wxDragCancel:
+                    case wxDragError:
+                        dragOperation = NSDragOperationNone;
+                        break;
+                    default:
+                        dragOperation = NSDragOperationEvery;
+                    }
                     ++indexDraggedItem;
                 }
                 else
@@ -850,7 +872,13 @@ -(NSDragOperation) outlineView:(NSOutlineView*)outlineView validateDrop:(id<NSDr
         wxDataObjectComposite* dataObjects   (new wxDataObjectComposite());
         wxTextDataObject*      textDataObject(new wxTextDataObject());
 
-        osxData = ::CFStringCreateExternalRepresentation(kCFAllocatorDefault,(CFStringRef)[pasteboard stringForType:NSStringPboardType],kCFStringEncodingUTF8,32);
+        osxData = ::CFStringCreateExternalRepresentation(kCFAllocatorDefault,(CFStringRef)[pasteboard stringForType:NSStringPboardType],
+#if defined(wxNEEDS_UTF16_FOR_TEXT_DATAOBJ)
+                                                         kCFStringEncodingUTF16,
+#else
+                                                         kCFStringEncodingUTF8,
+#endif
+                                                         32);
         if (textDataObject->SetData(::CFDataGetLength(osxData),::CFDataGetBytePtr(osxData)))
             dataObjects->Add(textDataObject);
         else
@@ -860,9 +888,27 @@ -(NSDragOperation) outlineView:(NSOutlineView*)outlineView validateDrop:(id<NSDr
         {
             event.SetDataObject(dataObjects);
             event.SetDataFormat(implementation->GetDnDDataFormat(dataObjects));
-            if (dvc->HandleWindowEvent(event) && event.IsAllowed())
-                dragOperation = NSDragOperationEvery;
-            else
+            event.SetDropEffect(wxDragCopy); //default if allowed is copy, but user can reset
+            if (dvc->HandleWindowEvent(event) && event.IsAllowed()) {
+                switch (event.GetDropEffect()) {
+                case wxDragCopy:
+                    dragOperation = NSDragOperationCopy;
+                    break;
+                case wxDragMove:
+                    dragOperation = NSDragOperationMove;
+                    break;
+                case wxDragLink:
+                    dragOperation = NSDragOperationLink;
+                    break;
+                case wxDragNone:
+                case wxDragCancel:
+                case wxDragError:
+                    dragOperation = NSDragOperationNone;
+                    break;
+                default:
+                    dragOperation = NSDragOperationEvery;
+                }
+            } else
                 dragOperation = NSDragOperationNone;
         }
         else
