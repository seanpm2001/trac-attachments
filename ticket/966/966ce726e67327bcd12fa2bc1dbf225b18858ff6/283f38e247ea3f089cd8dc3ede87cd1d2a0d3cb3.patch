Index: mimetype.cpp
===================================================================
--- mimetype.cpp	(revision 65154)
+++ mimetype.cpp	(working copy)
@@ -211,26 +211,60 @@
     return progId;
 }
 
-wxString wxFileTypeImpl::GetCommand(const wxChar *verb) const
+static wxString wxReadProgidValue(const wxString key)
 {
-    // suppress possible error messages
-    wxLogNull nolog;
-    wxString strKey;
-
+    wxRegKey explorerKey(wxRegKey::HKCU, key);
+    if (explorerKey.Exists())
     {
-        wxRegKey explorerKey(wxRegKey::HKCU, wxT("Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\") + m_ext);
-        if (explorerKey.Exists())
+        if (explorerKey.Open(wxRegKey::Read))
         {
-            if (explorerKey.Open(wxRegKey::Read))
+            wxString value;
+            if (explorerKey.QueryValue(wxT("Progid"), value))
             {
-                if (explorerKey.QueryValue(wxT("Progid"), strKey))
-                {
-                    strKey = wxFileTypeImplGetCurVer(strKey);
-                }
+                return value;
             }
         }
     }
 
+    return wxEmptyString;
+}
+
+static wxString wxFileTypeImplGetUserChoice(const wxString& ext)
+{
+    // If OpenWithProgids key contains more than a single value, there should be a UserChoice key to specify which one to use
+    wxString progId = wxReadProgidValue( wxT("Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\") + ext + wxT("\\UserChoice") );
+
+    if (progId.empty())
+    {
+        // No UserChoice, so take the first (if any) Progid from OpenWithProgids
+        wxRegKey explorerKey(wxRegKey::HKCU, wxT("Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\") + ext + wxT("\\OpenWithProgids"));
+        if (explorerKey.Exists() && explorerKey.Open(wxRegKey::Read))
+        {
+            long tmp;
+            explorerKey.GetFirstValue(progId, tmp);
+        }
+    }
+
+    if (progId.empty())
+    {
+        // Doesn't seem to be used on Windows 7, not sure about other versions of Windows
+        progId = wxReadProgidValue(wxT("Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\FileExts\\") + ext);
+    }
+
+    if (!progId.empty())
+        return wxFileTypeImplGetCurVer(progId);
+
+    return wxEmptyString;
+}
+
+wxString wxFileTypeImpl::GetCommand(const wxChar *verb) const
+{
+    // suppress possible error messages
+    wxLogNull nolog;
+    wxString strKey;
+
+    strKey = wxFileTypeImplGetUserChoice(m_ext);
+
     if (!strKey && wxRegKey(wxRegKey::HKCR, m_ext + _T("\\shell")).Exists())
         strKey = m_ext;
 
