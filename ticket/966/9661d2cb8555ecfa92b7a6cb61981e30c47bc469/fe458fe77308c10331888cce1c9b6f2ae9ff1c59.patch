diff -bu1 -r wxWindows/src/common/wincmn.cpp wxWin/src/common/wincmn.cpp
--- wxWindows/src/common/wincmn.cpp	2003-09-16 15:53:16.000000000 +0200
+++ wxWin/src/common/wincmn.cpp	2003-09-16 16:08:25.000000000 +0200
@@ -2212,3 +2212,3 @@
 // representing the child element, starting from 1.
-wxAccStatus wxWindowAccessible::HitTest(const wxPoint& pt, int* childId, wxAccessible** childObject)
+wxAccStatus wxWindowAccessible::HitTest(const wxPoint& WXUNUSED(pt), int* WXUNUSED(childId), wxAccessible** WXUNUSED(childObject))
 {
@@ -2255,3 +2255,3 @@
 wxAccStatus wxWindowAccessible::Navigate(wxNavDir navDir, int fromId,
-                             int* toId, wxAccessible** toObject)
+                             int* WXUNUSED(toId), wxAccessible** toObject)
 {
@@ -2442,3 +2442,3 @@
 // window (e.g. an edit control).
-wxAccStatus wxWindowAccessible::DoDefaultAction(int childId)
+wxAccStatus wxWindowAccessible::DoDefaultAction(int WXUNUSED(childId))
 {
@@ -2457,3 +2457,3 @@
 // a document has a default action of "Press" rather than "Prints the current document."
-wxAccStatus wxWindowAccessible::GetDefaultAction(int childId, wxString* actionName)
+wxAccStatus wxWindowAccessible::GetDefaultAction(int WXUNUSED(childId), wxString* WXUNUSED(actionName))
 {
@@ -2467,3 +2467,3 @@
 // Returns the description for this object or a child.
-wxAccStatus wxWindowAccessible::GetDescription(int childId, wxString* description)
+wxAccStatus wxWindowAccessible::GetDescription(int WXUNUSED(childId), wxString* description)
 {
@@ -2483,3 +2483,3 @@
 // Returns help text for this object or a child, similar to tooltip text.
-wxAccStatus wxWindowAccessible::GetHelpText(int childId, wxString* helpText)
+wxAccStatus wxWindowAccessible::GetHelpText(int WXUNUSED(childId), wxString* helpText)
 {
@@ -2500,3 +2500,3 @@
 // Return e.g. ALT+K
-wxAccStatus wxWindowAccessible::GetKeyboardShortcut(int childId, wxString* shortcut)
+wxAccStatus wxWindowAccessible::GetKeyboardShortcut(int WXUNUSED(childId), wxString* WXUNUSED(shortcut))
 {
@@ -2536,3 +2536,5 @@
 
+    #if 0
     return wxACC_NOT_IMPLEMENTED;
+    #endif
 }
@@ -2566,3 +2568,5 @@
 
+    #if 0
     return wxACC_NOT_IMPLEMENTED;
+    #endif
 }
@@ -2571,3 +2575,3 @@
 // or child.
-wxAccStatus wxWindowAccessible::GetValue(int childId, wxString* strValue)
+wxAccStatus wxWindowAccessible::GetValue(int WXUNUSED(childId), wxString* WXUNUSED(strValue))
 {
@@ -2581,3 +2585,3 @@
 // Selects the object or child.
-wxAccStatus wxWindowAccessible::Select(int childId, wxAccSelectionFlags selectFlags)
+wxAccStatus wxWindowAccessible::Select(int WXUNUSED(childId), wxAccSelectionFlags WXUNUSED(selectFlags))
 {
@@ -2594,3 +2598,3 @@
 // If this object has the focus, child should be 'this'.
-wxAccStatus wxWindowAccessible::GetFocus(int* childId, wxAccessible** child)
+wxAccStatus wxWindowAccessible::GetFocus(int* WXUNUSED(childId), wxAccessible** WXUNUSED(child))
 {
@@ -2611,3 +2615,3 @@
 // - a "void*" pointer to a wxAccessible child object
-wxAccStatus wxWindowAccessible::GetSelections(wxVariant* selections)
+wxAccStatus wxWindowAccessible::GetSelections(wxVariant* WXUNUSED(selections))
 {
diff -bu1 -r wxWindows/src/msw/listctrl.cpp wxWin/src/msw/listctrl.cpp
--- wxWindows/src/msw/listctrl.cpp	2003-09-16 13:29:13.000000000 +0200
+++ wxWin/src/msw/listctrl.cpp	2003-09-16 15:59:01.000000000 +0200
@@ -1107,3 +1107,3 @@
 {
-    const int spacing = GetItemSpacing(HasFlag(wxLC_SMALL_ICON));
+    const int spacing = ListView_GetItemSpacing(GetHwnd(), (BOOL)HasFlag(wxLC_SMALL_ICON));
 
diff -bu1 -r wxWindows/src/msw/ole/access.cpp wxWin/src/msw/ole/access.cpp
--- wxWindows/src/msw/ole/access.cpp	2003-08-11 10:30:16.000000000 +0200
+++ wxWin/src/msw/ole/access.cpp	2003-09-16 15:23:01.000000000 +0200
@@ -429,3 +429,7 @@
     
+    #if 0 
+    // all cases above already cause some return action so below line
+    // is unreachable and cause unnecessary warning
     return E_NOTIMPL;
+    #endif
 }
@@ -489,3 +493,9 @@
 
-    if ((varStart.vt != VT_I4 && varStart.vt != VT_EMPTY) || varStart.vt < 0)
+    if ((varStart.vt != VT_I4 && varStart.vt != VT_EMPTY) 
+                                                          #if 0
+                                                          // according to MSDN and sources varStart.vt is unsigned
+                                                          // so below line cause warning "Condition is always false"
+                                                          || varStart.vt < 0
+                                                          #endif
+                                                          )
     {
@@ -696,3 +706,7 @@
 
+    #if 0 
+    // all cases above already cause some return action so below line
+    // is unreachable and cause unnecessary warning
     return E_NOTIMPL;
+    #endif
 }
@@ -736,3 +750,7 @@
 
+    #if 0 
+    // all cases above already cause some return action so below line
+    // is unreachable and cause unnecessary warning
     return E_NOTIMPL;
+    #endif
 }
@@ -796,3 +814,7 @@
 
+    #if 0 
+    // all cases above already cause some return action so below line
+    // is unreachable and cause unnecessary warning
     return E_NOTIMPL;
+    #endif
 }
@@ -1445,3 +1467,7 @@
     
+    #if 0 
+    // all cases above already cause some return action so below line
+    // is unreachable and cause unnecessary warning
     return E_NOTIMPL;
+    #endif
 }
@@ -1516,3 +1542,3 @@
 
-STDMETHODIMP wxIAccessible::GetTypeInfo(unsigned int typeInfo, LCID lcid, ITypeInfo** ppTypeInfo)
+STDMETHODIMP wxIAccessible::GetTypeInfo(unsigned int WXUNUSED(typeInfo), LCID WXUNUSED(lcid), ITypeInfo** ppTypeInfo)
 {
@@ -1532,4 +1558,4 @@
 
-STDMETHODIMP wxIAccessible::GetIDsOfNames(REFIID riid, OLECHAR** names, unsigned int cNames,
-        LCID lcid, DISPID* dispId)
+STDMETHODIMP wxIAccessible::GetIDsOfNames(REFIID WXUNUSED(riid), OLECHAR** WXUNUSED(names), unsigned int WXUNUSED(cNames),
+        LCID WXUNUSED(lcid), DISPID* WXUNUSED(dispId))
 {
@@ -1540,6 +1566,6 @@
 
-STDMETHODIMP wxIAccessible::Invoke(DISPID dispIdMember, REFIID riid, LCID lcid, 
-                        WORD wFlags, DISPPARAMS *pDispParams, 
-                        VARIANT *pVarResult, EXCEPINFO *pExcepInfo, 
-                        unsigned int *puArgErr )
+STDMETHODIMP wxIAccessible::Invoke(DISPID WXUNUSED(dispIdMember), REFIID WXUNUSED(riid), LCID WXUNUSED(lcid), 
+                        WORD WXUNUSED(wFlags), DISPPARAMS *WXUNUSED(pDispParams), 
+                        VARIANT *WXUNUSED(pVarResult), EXCEPINFO *WXUNUSED(pExcepInfo), 
+                        unsigned int *WXUNUSED(puArgErr) )
 {
@@ -1940,11 +1966,11 @@
 
-    if (sel & wxACC_SEL_TAKEFOCUS)
+    if (wxsel & wxACC_SEL_TAKEFOCUS)
         sel |= SELFLAG_TAKEFOCUS;
-    if (sel & wxACC_SEL_TAKESELECTION)
+    if (wxsel & wxACC_SEL_TAKESELECTION)
         sel |= SELFLAG_TAKESELECTION;
-    if (sel & wxACC_SEL_EXTENDSELECTION)
+    if (wxsel & wxACC_SEL_EXTENDSELECTION)
         sel |= SELFLAG_EXTENDSELECTION;
-    if (sel & wxACC_SEL_ADDSELECTION)
+    if (wxsel & wxACC_SEL_ADDSELECTION)
         sel |= SELFLAG_ADDSELECTION;
-    if (sel & wxACC_SEL_REMOVESELECTION)
+    if (wxsel & wxACC_SEL_REMOVESELECTION)
         sel |= SELFLAG_REMOVESELECTION;
diff -bu1 -r wxWindows/src/msw/window.cpp wxWin/src/msw/window.cpp
--- wxWindows/src/msw/window.cpp	2003-09-16 13:29:15.000000000 +0200
+++ wxWin/src/msw/window.cpp	2003-09-16 14:45:52.000000000 +0200
@@ -2792,3 +2792,3 @@
 
-                if (dwObjId == OBJID_CLIENT && GetOrCreateAccessible())
+                if (dwObjId == (LPARAM)OBJID_CLIENT && GetOrCreateAccessible())
                 {

 	  	 
