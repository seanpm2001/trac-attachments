Index: src/unix/dlunix.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/dlunix.cpp,v
retrieving revision 1.15
diff -B -b -u -2 -r1.15 dlunix.cpp
--- src/unix/dlunix.cpp	2006/08/04 22:32:08	1.15
+++ src/unix/dlunix.cpp	2006/10/09 15:39:50
@@ -82,100 +82,79 @@
 
 #if defined(__DARWIN__)
-// ---------------------------------------------------------------------------
-// For Darwin/Mac OS X
-//   supply the sun style dlopen functions in terms of Darwin NS*
-// ---------------------------------------------------------------------------
-
-/* Porting notes:
- *   The dlopen port is a port from dl_next.xs by Anno Siegel.
- *   dl_next.xs is itself a port from dl_dlopen.xs by Paul Marquess.
- *   The method used here is just to supply the sun style dlopen etc.
- *   functions in terms of Darwin NS*.
- */
 
-#include <stdio.h>
-#include <mach-o/dyld.h>
+#include "wx/mac/private.h"
 
-static char dl_last_error[1024];
+// helper class for temporary UTF-8 strings
+class wxMacUTF8String
+{
+public:
+    wxMacUTF8String(const char *str)
+    {
+        m_cfs = CFStringCreateWithCString
+                (
+                    kCFAllocatorDefault,
+                    str,
+                    kCFStringEncodingUTF8
+                );
+    }
+
+    operator CFStringRef () const { return m_cfs; }
 
+    ~wxMacUTF8String()
+    {
+        if ( m_cfs )
+            CFRelease(m_cfs);
+    }
+
+private:
+    CFStringRef m_cfs;
+
+    DECLARE_NO_COPY_CLASS(wxMacUTF8String)
+};
+
+static char wxLastDLError[1024];
+
 const char *dlerror()
 {
-    return dl_last_error;
+    return wxLastDLError;
 }
 
-void *dlopen(const char *path, int WXUNUSED(mode) /* mode is ignored */)
+void *dlopen(const char *path, int WXUNUSED(flags) /* flags are ignored */)
 {
-    NSObjectFileImage ofile;
-    NSModule handle = NULL;
-
-    unsigned dyld_result = NSCreateObjectFileImageFromFile(path, &ofile);
-    if ( dyld_result != NSObjectFileImageSuccess )
-    {
-        handle = NULL;
-
-        static const char *errorStrings[] =
-        {
-            "%d: Object Image Load Failure",
-            "%d: Object Image Load Success",
-            "%d: Not an recognisable object file",
-            "%d: No valid architecture",
-            "%d: Object image has an invalid format",
-            "%d: Invalid access (permissions?)",
-            "%d: Unknown error code from NSCreateObjectFileImageFromFile"
-        };
-
-        const int index = dyld_result < WXSIZEOF(errorStrings)
-                            ? dyld_result
-                            : WXSIZEOF(errorStrings) - 1;
-
-        // this call to sprintf() is safe as strings above are fixed at
-        // compile-time and are shorter than WXSIZEOF(dl_last_error)
-        sprintf(dl_last_error, errorStrings[index], dyld_result);
-    }
-    else
-    {
-        handle = NSLinkModule
+    wxMacCFRefHolder<CFURLRef> bundleURL(CFURLCreateWithFileSystemPath
                  (
-                    ofile,
-                    path,
-                    NSLINKMODULE_OPTION_BINDNOW |
-                    NSLINKMODULE_OPTION_RETURN_ON_ERROR
-                 );
+                                            kCFAllocatorDefault,
+                                            wxMacUTF8String(path),
+                                            kCFURLPOSIXPathStyle,
+                                            true /* is directory */
+                                         ));
 
-        if ( !handle )
+    CFBundleRef bundle = CFBundleCreate(kCFAllocatorDefault, bundleURL);
+    if ( !bundle )
         {
-            NSLinkEditErrors err;
-            int code;
-            const char *filename;
-            const char *errmsg;
-
-            NSLinkEditError(&err, &code, &filename, &errmsg);
-            strncpy(dl_last_error, errmsg, WXSIZEOF(dl_last_error)-1);
-            dl_last_error[WXSIZEOF(dl_last_error)-1] = '\0';
+        snprintf(wxLastDLError, WXSIZEOF(wxLastDLError) - 1,
+                 "%s: %s (%d)\n", path, strerror(errno), errno);
+        wxLastDLError[WXSIZEOF(wxLastDLError) - 1] = '\0';
         }
-    }
-
 
-    return handle;
+    return bundle;
 }
 
 int dlclose(void *handle)
 {
-    NSUnLinkModule((NSModule)handle, NSUNLINKMODULE_OPTION_NONE);
+    if ( !handle )
+        return -1;
+
+    CFBundleRef bundle = (CFBundleRef)handle;
+    CFBundleUnloadExecutable(bundle);
+    CFRelease(bundle);
+
     return 0;
 }
 
-void *dlsym(void *handle, const char *symbol)
+void *dlsym(void* handle, const char* symbol)
 {
-    // as on many other systems, C symbols have prepended underscores under
-    // Darwin but unlike the normal dlopen(), NSLookupSymbolInModule() is not
-    // aware of this
-    wxCharBuffer buf(strlen(symbol) + 1);
-    char *p = buf.data();
-    p[0] = '_';
-    strcpy(p + 1, symbol);
-
-    NSSymbol nsSymbol = NSLookupSymbolInModule((NSModule)handle, p );
-    return nsSymbol ? NSAddressOfSymbol(nsSymbol) : NULL;
+  return CFBundleGetFunctionPointerForName((CFBundleRef)handle,
+                                           wxMacUTF8String(symbol));
 }
 

 	  	 
