Index: samples/minimal/minimal.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/minimal/minimal.cpp,v
retrieving revision 1.71
diff -u -r1.71 minimal.cpp
--- samples/minimal/minimal.cpp	2006/06/29 13:47:45	1.71
+++ samples/minimal/minimal.cpp	2006/08/30 02:22:51
@@ -30,6 +30,8 @@
     #include "wx/wx.h"
 #endif
 
+#include "wx/gbsizer.h"
+
 // ----------------------------------------------------------------------------
 // resources
 // ----------------------------------------------------------------------------
@@ -67,6 +69,8 @@
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    void OnTempBtn(wxCommandEvent& event);
+    void OnCheckBox(wxCommandEvent& event);
 
 private:
     // any class wishing to process wxWidgets events must use this macro
@@ -86,7 +90,11 @@
     // it is important for the id corresponding to the "About" command to have
     // this standard value as otherwise it won't be handled properly under Mac
     // (where it is special and put into the "Apple" menu)
-    Minimal_About = wxID_ABOUT
+    Minimal_About = wxID_ABOUT,
+    
+    Minimal_TempBtn = 6001,
+    Minimal_CheckBtn,
+    Minimal_CheckBtnAccel
 };
 
 // ----------------------------------------------------------------------------
@@ -99,6 +107,9 @@
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_BUTTON(Minimal_TempBtn, MyFrame::OnTempBtn)
+    //EVT_CHECKBOX(Minimal_CheckBtn, MyFrame::OnCheckBox)
+    EVT_CHECKBOX(Minimal_CheckBtnAccel, MyFrame::OnCheckBox)
 END_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -145,9 +156,22 @@
 MyFrame::MyFrame(const wxString& title)
        : wxFrame(NULL, wxID_ANY, title)
 {
+    wxGridBagSizer* gb = new wxGridBagSizer(2, 2);
+    wxButton *t1, *t2;
+    //wxTextCtrl* t3;
+    wxButton* t3;
+    wxCheckBox* t4;
     // set the frame icon
     SetIcon(wxICON(sample));
 
+    wxAcceleratorEntry entries[3];
+    
+    entries[0].Set(wxACCEL_CTRL, (int)'T', Minimal_TempBtn);
+    entries[1].Set(wxACCEL_CTRL, (int)'N', Minimal_About);
+    entries[2].Set(wxACCEL_CTRL, (int)'C', Minimal_CheckBtnAccel);
+    
+    wxAcceleratorTable accel(3, entries);
+    
 #if wxUSE_MENUS
     // create a menu bar
     wxMenu *fileMenu = new wxMenu;
@@ -167,11 +191,27 @@
     SetMenuBar(menuBar);
 #endif // wxUSE_MENUS
 
-#if wxUSE_STATUSBAR
+#if 0 //wxUSE_STATUSBAR
     // create a status bar just for fun (by default with 1 pane only)
     CreateStatusBar(2);
     SetStatusText(_T("Welcome to wxWidgets!"));
 #endif // wxUSE_STATUSBAR
+
+    t1 = new wxButton( this, wxID_ANY, wxT("Button1") );
+    //t3 = new wxTextCtrl(this, wxID_ANY, wxEmptyString, wxDefaultPosition, wxDefaultSize);
+    t3 = new wxButton(this, Minimal_TempBtn, wxT("Temp"));
+    t2 = new wxButton(this, wxID_ANY, wxT("Button2"));
+    t4 = new wxCheckBox( this, Minimal_CheckBtn, wxT("Test") );
+    t4->SetValue(false);
+    
+    gb->Add(t1, wxGBPosition(0, 0) );
+    gb->Add(t3, wxGBPosition(0, 1) );
+    gb->Add (t2, wxGBPosition(0, 2) );
+    gb->Add(t4, wxGBPosition(1, 0) );
+    SetAcceleratorTable(accel);
+    
+    SetSizer(gb);
+    Layout();
 }
 
 
@@ -197,3 +237,19 @@
                  wxOK | wxICON_INFORMATION,
                  this);
 }
+
+void MyFrame::OnTempBtn(wxCommandEvent& event)
+{
+    wxMessageBox("Hello world I'm Temp Button", "Caption", wxYES_NO);
+
+}
+
+void MyFrame::OnCheckBox(wxCommandEvent& event)
+{
+    
+    wxWindow* theWind =  FindWindowById( Minimal_CheckBtn );
+    wxCheckBox* chk = dynamic_cast<wxCheckBox*>(theWind);
+    chk->SetValue( !chk->GetValue() );
+    //wxMessageBox("Hello world I'm OnCheckBox", "Caption", wxYES_NO);
+    
+}
\ No newline at end of file
 	  	 
