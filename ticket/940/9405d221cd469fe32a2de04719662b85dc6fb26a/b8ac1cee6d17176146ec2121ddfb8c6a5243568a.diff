Index: docs/latex/wx/accel.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/accel.tex,v
retrieving revision 1.10
diff -u -r1.10 accel.tex
--- docs/latex/wx/accel.tex	2004/10/04 15:13:47	1.10
+++ docs/latex/wx/accel.tex	2006/08/30 02:30:47
@@ -71,7 +71,7 @@
 \section{\class{wxAcceleratorTable}}\label{wxacceleratortable}
 
 An accelerator table allows the application to specify a table of keyboard shortcuts for
-menus or other commands. On Windows, menu or button commands are supported; on GTK,
+menus or other commands. On Windows and Mac OS X, menu or button commands are supported; on GTK,
 only menu commands are supported.
 
 The object {\bf wxNullAcceleratorTable} is defined to be a table with no data, and is the
Index: src/mac/carbon/app.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/app.cpp,v
retrieving revision 1.222
diff -u -r1.222 app.cpp
--- src/mac/carbon/app.cpp	2006/08/22 19:36:27	1.222
+++ src/mac/carbon/app.cpp	2006/08/30 02:22:56
@@ -1488,11 +1488,19 @@
         wxWindow *ancestor = focus;
         while (ancestor)
         {
+            WXTYPE kindsWeTry[] = { wxEVT_COMMAND_MENU_SELECTED, wxEVT_COMMAND_BUTTON_CLICKED, wxEVT_COMMAND_CHECKBOX_CLICKED };
             int command = ancestor->GetAcceleratorTable()->GetCommand( event );
+            size_t i = 0;
+            
             if (command != -1)
             {
-                wxCommandEvent command_event( wxEVT_COMMAND_MENU_SELECTED, command );
-                handled = ancestor->GetEventHandler()->ProcessEvent( command_event );
+            
+                while (  ( i < sizeof(kindsWeTry) ) && (!handled)  )
+                {
+                    wxCommandEvent command_event( kindsWeTry[i], command );
+                    handled = ancestor->GetEventHandler()->ProcessEvent( command_event );
+                    ++i;
+                }
                 break;
             }
 

 	  	 
