Index: samples/minimal/minimal.cpp
===================================================================
--- samples/minimal/minimal.cpp	(revision 65627)
+++ samples/minimal/minimal.cpp	(working copy)
@@ -73,6 +73,80 @@
     DECLARE_EVENT_TABLE()
 };
 
+#define REP_COUNT 0x2FFFFFF
+
+class MyScrolledWindow : public wxScrolledWindow
+{
+public:
+    MyScrolledWindow() : wxScrolledWindow() { }
+    virtual ~MyScrolledWindow() {}
+    void OnPaint( wxPaintEvent& WXUNUSED(event) )
+    {
+        wxPaintDC dc(this);
+        PrepareDC(dc);
+
+        wxRect rect = GetUpdateRegion().GetBox();
+
+        // Let's run some dummy code to simulate heavy-weight
+        // drawing code.
+        int a = 0;
+        for ( int i=0; i<REP_COUNT; i++ )
+            a++;
+
+        wxColour col(250, 250, 250);
+        dc.SetPen(wxPen(col));
+        dc.SetBrush(wxBrush(col));
+        dc.DrawRectangle(rect);
+        dc.SetPen(*wxBLACK_PEN);
+        dc.DrawText(GetClassInfo()->GetClassName(),
+                    20, 20);
+        dc.DrawLabel("Move other windows over here to.\n"
+                     "see smearing.\n"
+                     "Remember to disable Aero\n"
+                     "on Vista/Win7.",
+                     wxRect(20, 50, 50, 100));
+    }
+private:
+    DECLARE_EVENT_TABLE()
+};
+
+BEGIN_EVENT_TABLE(MyScrolledWindow, wxScrolledWindow)
+    EVT_PAINT(MyScrolledWindow::OnPaint)
+END_EVENT_TABLE()
+
+class MyScrolledControl : public wxControl, public wxScrollHelper
+{
+public:
+    MyScrolledControl() : wxControl(), wxScrollHelper(this) { }
+    virtual ~MyScrolledControl() {}
+    void OnPaint( wxPaintEvent& WXUNUSED(event) )
+    {
+        wxPaintDC dc(this);
+
+        wxRect rect = GetUpdateRegion().GetBox();
+
+        // Let's run some dummy code to simulate heavy-weight
+        // drawing code.
+        int a = 0;
+        for ( int i=0; i<REP_COUNT; i++ )
+            a++;
+
+        wxColour col(*wxWHITE);
+        dc.SetPen(wxPen(col));
+        dc.SetBrush(wxBrush(col));
+        dc.DrawRectangle(rect);
+        dc.SetPen(*wxBLACK_PEN);
+        dc.DrawText("wxControl + wxScrollHelper",
+                    20, 20);
+    }
+private:
+    DECLARE_EVENT_TABLE()
+};
+
+BEGIN_EVENT_TABLE(MyScrolledControl, wxControl)
+    EVT_PAINT(MyScrolledControl::OnPaint)
+END_EVENT_TABLE()
+
 // ----------------------------------------------------------------------------
 // constants
 // ----------------------------------------------------------------------------
@@ -148,6 +222,28 @@
     // set the frame icon
     SetIcon(wxICON(sample));
 
+    wxBoxSizer* sizer = new wxBoxSizer(wxHORIZONTAL);
+
+    MyScrolledWindow* scw = new MyScrolledWindow();
+    scw->Create(this, wxID_ANY,
+                wxDefaultPosition,
+                wxDefaultSize,
+                wxBORDER_NONE | wxVSCROLL);
+    scw->SetBackgroundStyle(wxBG_STYLE_CUSTOM);
+    scw->SetMinSize(wxSize(200, 200));
+    sizer->Add(scw, 1, wxEXPAND);
+
+    wxWindow* panel = new MyScrolledControl();
+    panel->Create(this, wxID_ANY,
+                  wxDefaultPosition,
+                  wxDefaultSize,
+                  wxBORDER_NONE | wxVSCROLL | wxScrolledWindowStyle);
+    panel->SetBackgroundStyle(wxBG_STYLE_CUSTOM);
+    panel->SetMinSize(wxSize(200, 200));
+    sizer->Add(panel, 1, wxEXPAND);
+
+    SetSizerAndFit(sizer);
+
 #if wxUSE_MENUS
     // create a menu bar
     wxMenu *fileMenu = new wxMenu;
