diff -rNbu2 wxW/build/bakefiles/files.bkl wxWidgets/build/bakefiles/files.bkl
--- wxW/build/bakefiles/files.bkl	Sat Oct  2 19:34:27 2004
+++ wxWidgets/build/bakefiles/files.bkl	Sun Oct  3 03:41:34 2004
@@ -1909,4 +1909,5 @@
     src/cocoa/menu.mm
     src/cocoa/menuitem.mm
+    src/cocoa/msgdlg.mm
     src/cocoa/notebook.mm
     src/cocoa/pen.mm
@@ -1938,5 +1939,4 @@
     src/generic/imaglist.cpp
     src/generic/listctrl.cpp
-    src/generic/msgdlgg.cpp
     src/generic/paletteg.cpp
     src/generic/regiong.cpp
@@ -1995,4 +1995,5 @@
     wx/cocoa/menu.h
     wx/cocoa/menuitem.h
+    wx/cocoa/msgdlg.h
     wx/cocoa/notebook.h
     wx/cocoa/pen.h
diff -rNbu2 wxW/include/wx/cocoa/msgdlg.h wxWidgets/include/wx/cocoa/msgdlg.h
--- wxW/include/wx/cocoa/msgdlg.h	Wed Dec 31 16:00:00 1969
+++ wxWidgets/include/wx/cocoa/msgdlg.h	Sat Oct  2 10:04:18 2004
@@ -0,0 +1,45 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        wx/cocoa/msgdlg.h
+// Purpose:     wxMessageDialog class
+// Author:      Ryan Norton
+// Modified by:
+// Created:     2004/10/02
+// RCS-ID:      $Id:
+// Copyright:   Ryan Norton
+// Licence:   	wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_COCOA_MSGDLG_H_
+#define _WX_COCOA_MSGDLG_H_
+
+#include "wx/setup.h"
+
+#if wxUSE_MSGDLG
+
+#include "wx/dialog.h"
+#include "wx/msgdlg.h"
+
+WXDLLEXPORT_DATA(extern const wxChar*) wxMessageBoxCaptionStr;
+
+class WXDLLEXPORT wxMessageDialog : public wxDialog
+{
+DECLARE_DYNAMIC_CLASS(wxMessageDialog)
+
+protected:
+    wxString    m_caption;
+    wxString    m_message;
+    long        m_dialogStyle;
+    wxWindow *  m_parent;
+
+public:
+    wxMessageDialog(wxWindow *parent, const wxString& message, const wxString& caption = wxMessageBoxCaptionStr,
+        long style = wxOK|wxCENTRE, const wxPoint& pos = wxDefaultPosition);
+
+    int ShowModal(void);
+
+    DECLARE_NO_COPY_CLASS(wxMessageDialog)
+};
+
+#endif //wxUSE_MSGDLG
+
+#endif //_WX_COCOA_MSGDLG_H_
diff -rNbu2 wxW/include/wx/msgdlg.h wxWidgets/include/wx/msgdlg.h
--- wxW/include/wx/msgdlg.h	Sun Oct  3 03:20:06 2004
+++ wxWidgets/include/wx/msgdlg.h	Sat Oct  2 09:44:14 2004
@@ -19,5 +19,5 @@
 #include "wx/mac/msgdlg.h"
 #elif defined(__WXCOCOA__)
-#include "wx/generic/msgdlgg.h"
+#include "wx/cocoa/msgdlg.h"
 #elif defined(__WXPM__)
 #include "wx/os2/msgdlg.h"
diff -rNbu2 wxW/src/cocoa/msgdlg.mm wxWidgets/src/cocoa/msgdlg.mm
--- wxW/src/cocoa/msgdlg.mm	Wed Dec 31 16:00:00 1969
+++ wxWidgets/src/cocoa/msgdlg.mm	Sat Oct  2 12:51:49 2004
@@ -0,0 +1,194 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        src/cocoa/msgdlg.mm
+// Purpose:     wxMessageDialog class
+// Author:      Ryan Norton
+// Modified by:
+// Created:     2004/10/02
+// RCS-ID:      $Id: 
+// Copyright:   2004 Ryan Norton
+// Licence:   	wxWidgets licence
+/////////////////////////////////////////////////////////////////////////////
+
+#include "wx/wxprec.h"
+
+#if wxUSE_MSGDLG
+
+#ifndef WX_PRECOMP
+    #include "wx/app.h"
+    #include "wx/defs.h"
+    #include "wx/dialog.h"
+    #include "wx/msgdlg.h"
+#endif
+
+#include "wx/cocoa/autorelease.h"
+#include "wx/cocoa/string.h"
+
+#import <AppKit/AppKit.h>
+
+IMPLEMENT_CLASS(wxMessageDialog, wxDialog)
+
+//
+// NB: Even though we shouldn't have to call the non-defualt constructor
+// for wxDialog in the constructor of wxMessageDialog (the msw version
+// doesn't), because of a wxCocoa bug in the destructor of wxTopLevelWindow 
+// at SetNSWindow(NULL);.  Debugger says "this" is out of scope in the body
+// of SetNSWindow.
+//
+
+wxMessageDialog::wxMessageDialog(wxWindow *parent,
+                                 const wxString& message,
+                                 const wxString& caption,
+                                 long style,
+                                 const wxPoint& WXUNUSED(pos))
+                                 :
+                                 wxDialog( parent, wxID_ANY, caption, wxPoint(), wxDefaultSize, wxDEFAULT_DIALOG_STYLE )
+{
+#ifdef __WXDEBUG__
+    // check for common programming errors
+    if ( (style & wxID_OK) == wxID_OK )
+    {
+        // programmer probably confused wxID_OK with wxOK. Correct one is wxOK.
+        wxFAIL_MSG( _T("wxMessageBox: Did you mean wxOK (and not wxID_OK)?") );
+    }
+#endif // __WXDEBUG__
+
+    m_caption = caption;
+    m_message = message;
+    m_dialogStyle = style;
+    m_parent = parent;
+}
+
+int wxMessageDialog::ShowModal()
+{
+    //start the pool for memory leak protection
+    wxAutoNSAutoreleasePool pool;
+
+    if ( !wxTheApp->GetTopWindow() )
+    {
+        // when the message box is shown from wxApp::OnInit() (i.e. before the
+        // message loop is entered), this must be done or the next message box
+        // will never be shown - just try putting 2 calls to wxMessageBox() in
+        // OnInit() to see it
+        while ( wxTheApp->Pending() )
+            wxTheApp->Dispatch();
+    }
+ 
+    //
+    // Note that NSAlert calls do not have a parent window
+    //
+       
+    //Button names
+    NSConstantString* szDefaultButton 		= nil;
+    NSConstantString* szAlternateButton 	= nil;
+    NSConstantString* szOtherButton			= nil;
+    
+    //there are several different alert styles -
+    if (m_dialogStyle & wxYES_NO)
+    {
+        if (m_dialogStyle & wxNO_DEFAULT)
+        {
+            szDefaultButton = @"NO";
+            szAlternateButton = @"YES";
+        }
+        else
+        {
+            szDefaultButton = @"YES";
+            szAlternateButton = @"NO";
+        }
+    }
+    else if (m_dialogStyle & wxOK)
+    {
+        szDefaultButton = @"OK";
+    }
+    
+    if (m_dialogStyle & wxCANCEL)
+        szOtherButton = @"CANCEL";
+
+    int nResult = NSAlertErrorReturn;
+    
+    //There are three kind of alert panels in OBJ-C -
+    //Normal, Informational and Critical - take a wild
+    //guess at what the user is expecting
+    if (m_dialogStyle & wxICON_EXCLAMATION)
+    {
+        nResult = NSRunCriticalAlertPanel(
+            wxNSStringWithWxString(m_caption),
+            wxNSStringWithWxString(m_message),
+            szDefaultButton,
+            szAlternateButton,
+            szOtherButton
+            );
+    }
+    else if (m_dialogStyle & wxICON_HAND)
+    {
+        nResult = NSRunAlertPanel(
+            wxNSStringWithWxString(m_caption),
+            wxNSStringWithWxString(m_message),
+            szDefaultButton,
+            szAlternateButton,
+            szOtherButton
+            );
+    }
+    else if (m_dialogStyle & wxICON_INFORMATION ||
+             m_dialogStyle & wxICON_QUESTION)
+    {
+        nResult = NSRunInformationalAlertPanel(
+            wxNSStringWithWxString(m_caption),
+            wxNSStringWithWxString(m_message),
+            szDefaultButton,
+            szAlternateButton,
+            szOtherButton
+            );
+    }
+    
+    int nAnswer;
+    
+    switch (nResult)
+    {
+        default:
+            wxFAIL_MSG(_T("unexpected NRunXXXAlertPanel return code"));
+            // fall through
+            
+        case NSAlertErrorReturn:
+            wxFAIL_MSG(_T("error encountered in wxMessageDialog::ShowModal"));
+        
+        case NSAlertOtherReturn:
+            wxASSERT(m_dialogStyle & wxCANCEL);
+            nAnswer = wxID_CANCEL;
+            break;
+            
+        case NSAlertAlternateReturn:
+            if (m_dialogStyle & wxYES_NO)
+            {
+                if (m_dialogStyle & wxNO_DEFAULT)
+                    nAnswer = wxID_YES;
+                else
+                    nAnswer = wxID_NO;
+            }
+            else
+            {
+                wxFAIL_MSG(_T("Unexpected return code from NSAlertXXXRunPanel"));
+                nAnswer = wxID_CANCEL;
+            }
+            break;
+            
+        case NSAlertDefaultReturn:
+            if (m_dialogStyle & wxYES_NO)
+            {
+                if (m_dialogStyle & wxNO_DEFAULT)
+                    nAnswer = wxID_NO;
+                else
+                    nAnswer = wxID_YES;
+            }
+            else
+            {
+                wxASSERT(m_dialogStyle & wxOK);
+                nAnswer = wxID_OK;
+            }
+            break;
+    }
+
+    return nAnswer;
+}
+
+#endif //wxUSE_MSGDLG

 	  	 
