diff -bru --expand-tabs wxWidgets.current/include/wx/collpane.h /mnt/winxp/wxWIdgets.current/include/wx/collpane.h
--- wxWidgets.current/include/wx/collpane.h	2009-01-04 22:22:52.000000000 -0500
+++ /mnt/winxp/wxWIdgets.current/include/wx/collpane.h	2009-01-07 22:04:28.687500000 -0500
@@ -28,6 +28,7 @@
 
 #define wxCP_DEFAULT_STYLE          (wxTAB_TRAVERSAL | wxNO_BORDER)
 #define wxCP_NO_TLW_RESIZE          (0x0002)
+#define wxCP_NO_BUTTON              (0x0004)
 
 class WXDLLIMPEXP_CORE wxCollapsiblePaneBase : public wxControl
 {
diff -bru --expand-tabs wxWidgets.current/interface/wx/collpane.h /mnt/winxp/wxWIdgets.current/interface/wx/collpane.h
--- wxWidgets.current/interface/wx/collpane.h	2009-01-04 22:24:40.000000000 -0500
+++ /mnt/winxp/wxWIdgets.current/interface/wx/collpane.h	2009-01-08 09:43:17.281250000 -0500
@@ -89,6 +89,8 @@
         containing an optionally shown part, for example, and so is the default
         behaviour but can be inconvenient in some specific cases -- use this
         flag to disable this automatic parent resizing then.
+        @style{wxCP_NO_BUTTON}
+            Use custom supplied control for expand/collapse. (Windows only)
     @endStyleTable
 
     @beginEventTable{wxCollapsiblePaneEvent}
diff -bru --expand-tabs wxWidgets.current/src/generic/collpaneg.cpp /mnt/winxp/wxWIdgets.current/src/generic/collpaneg.cpp
--- wxWidgets.current/src/generic/collpaneg.cpp	2009-01-04 22:18:08.000000000 -0500
+++ /mnt/winxp/wxWIdgets.current/src/generic/collpaneg.cpp	2009-01-08 00:56:42.796875000 -0500
@@ -95,11 +95,13 @@
 #else
     // create children and lay them out using a wxBoxSizer
     // (so that we automatically get RTL features)
+        if( !( style & wxCP_NO_BUTTON ) )
     m_pButton = new wxButton(this, wxID_ANY, GetBtnLabel(), wxPoint(0, 0),
                              wxDefaultSize, wxBU_EXACTFIT);
     m_pStaticLine = new wxStaticLine(this, wxID_ANY);
     // on other platforms we put the static line and the button horizontally
     m_sz = new wxBoxSizer(wxHORIZONTAL);
+        if( !( style & wxCP_NO_BUTTON ) )
     m_sz->Add(m_pButton, 0, wxLEFT|wxTOP|wxBOTTOM, GetBorder());
     m_sz->Add(m_pStaticLine, 1, wxALIGN_CENTER|wxLEFT|wxRIGHT, GetBorder());
 #endif
@@ -201,6 +203,7 @@
     m_pButton->SetOpen( !collapse );
 #else
     // NB: this must be done after updating our "state"
+        if( !( GetWindowStyle() & wxCP_NO_BUTTON ) )
     m_pButton->SetLabel(GetBtnLabel());
 #endif
 
@@ -214,8 +217,11 @@
 #ifdef __WXMAC__
     m_pButton->SetLabel(GetBtnLabel());
 #else
+        if( !( GetWindowStyle() & wxCP_NO_BUTTON ) )
+        {
     m_pButton->SetLabel(GetBtnLabel());
     m_pButton->SetInitialSize();
+        }
 #endif
 
     Layout();
@@ -227,7 +233,7 @@
     if (!m_pButton || !m_pPane || !m_sz)
         return false;     // we need to complete the creation first!
 #else
-    if (!m_pButton || !m_pStaticLine || !m_pPane || !m_sz)
+    if ( ( !( GetWindowStyle() & wxCP_NO_BUTTON ) && !m_pButton ) || !m_pStaticLine || !m_pPane || !m_sz)
         return false;     // we need to complete the creation first!
 #endif
 
@@ -256,8 +262,13 @@
 #if defined( __WXMAC__ )
     return 6;
 #elif defined(__WXMSW__)
+        if( !( GetWindowStyle() & wxCP_NO_BUTTON ) )
+        {
     wxASSERT(m_pButton);
     return m_pButton->ConvertDialogToPixels(wxSize(2, 0)).x;
+        }
+        else
+                return 5;
 #else
     return 5;
 #endif
