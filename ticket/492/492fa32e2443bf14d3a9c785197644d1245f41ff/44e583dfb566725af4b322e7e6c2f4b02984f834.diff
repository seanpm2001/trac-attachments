Binary files wxorig/.DS_Store and wxnew/.DS_Store differ
Binary files wxorig/include/.DS_Store and wxnew/include/.DS_Store differ
Binary files wxorig/include/wx/.DS_Store and wxnew/include/wx/.DS_Store differ
diff -uNr wxorig/include/wx/string.h wxnew/include/wx/string.h
--- wxorig/include/wx/string.h	2011-01-19 20:31:06.000000000 -0500
+++ wxnew/include/wx/string.h	2011-03-09 16:30:34.000000000 -0500
@@ -2328,10 +2328,21 @@
 
   // create a string representing the given floating point number
     // in the current locale
-  static wxString FromDouble(double val)
-    { return wxString::Format(wxS("%g"), val); }
+  static wxString FromDouble(double val, int precision = -1)
+    {
+    wxASSERT_MSG(precision >= -1, "Invalid negative precision specified in wxString::FromDouble.");
+    if (precision == -1)
+    {
+        return wxString::Format(wxS("%g"), val);
+    }
+    else
+    {
+        const wxString formatStr = wxString::Format(wxS("%%.%df"), precision); 
+        return wxString::Format(formatStr, val); 
+    }
+    }
     // in C locale
-  static wxString FromCDouble(double val);
+  static wxString FromCDouble(double val, int precision = -1);
 
 #ifndef wxNEEDS_WXSTRING_PRINTF_MIXIN
   // formatted input/output
Binary files wxorig/interface/.DS_Store and wxnew/interface/.DS_Store differ
Binary files wxorig/interface/wx/.DS_Store and wxnew/interface/wx/.DS_Store differ
diff -uNr wxorig/interface/wx/string.h wxnew/interface/wx/string.h
--- wxorig/interface/wx/string.h	2011-01-19 20:31:08.000000000 -0500
+++ wxnew/interface/wx/string.h	2011-03-09 16:28:38.000000000 -0500
@@ -1537,11 +1537,14 @@
         the period character as decimal separator, independently of the current
         locale.
 
+        Precision of the number can be controlled from the 
+        "precision" parameter. -1 (the default) specifies exponential notation. @since 2.9.2
+
         @since 2.9.1
 
         @see ToCDouble()
      */
-    static wxString FromCDouble(double val);
+    static wxString FromCDouble(double val, int precision = -1);
 
     /**
         Returns a string with the textual representation of the number.
@@ -1553,11 +1556,14 @@
         separator appropriate for the current locale, e.g. @c "," and not a
         period in French locale. Use FromCDouble() if this is unwanted.
 
+        Precision of the number can be controlled from the 
+        "precision" parameter. -1 (the default) specifies exponential notation. @since 2.9.2
+
         @since 2.9.1
 
         @see ToDouble()
      */
-    static wxString FromDouble(double val);
+    static wxString FromDouble(double val, int precision = -1);
 
     //@{
     /**
Binary files wxorig/src/.DS_Store and wxnew/src/.DS_Store differ
Binary files wxorig/src/common/.DS_Store and wxnew/src/common/.DS_Store differ
diff -uNr wxorig/src/common/string.cpp wxnew/src/common/string.cpp
--- wxorig/src/common/string.cpp	2011-03-03 09:39:06.000000000 -0500
+++ wxnew/src/common/string.cpp	2011-03-09 16:30:06.000000000 -0500
@@ -1839,17 +1839,23 @@
 // ----------------------------------------------------------------------------
 
 /* static */
-wxString wxString::FromCDouble(double val)
+wxString wxString::FromCDouble(double val, int precision)
 {
+    wxASSERT_MSG(precision >= -1, "Invalid negative precision specified in wxString::FromCDouble.");
 #if wxUSE_STD_IOSTREAM && wxUSE_STD_STRING
     // We assume that we can use the ostream and not wstream for numbers.
     wxSTD ostringstream os;
+    if (precision != -1)
+    {
+        os.precision(precision);
+        os.setf(std::ios::fixed, std::ios::floatfield);
+    }
     os << val;
     return os.str();
-#else // wxUSE_STD_IOSTREAM
+#else // !wxUSE_STD_IOSTREAM
     // Can't use iostream locale support, fall back to the manual method
     // instead.
-    wxString s = FromDouble(val);
+    wxString s = FromDouble(val, precision);
 #if wxUSE_INTL
     wxString sep = wxLocale::GetInfo(wxLOCALE_DECIMAL_POINT,
                                      wxLOCALE_CAT_NUMBER);
