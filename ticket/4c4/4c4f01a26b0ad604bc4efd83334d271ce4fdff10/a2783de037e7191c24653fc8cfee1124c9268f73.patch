? socket.patch
Index: include/wx/socket.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/socket.h,v
retrieving revision 1.67
diff -b -u -2 -r1.67 socket.h
--- include/wx/socket.h	2005/09/24 21:42:09	1.67
+++ include/wx/socket.h	2006/01/05 17:03:10
@@ -250,4 +250,7 @@
   DECLARE_CLASS(wxSocketClient)
 
+private:
+  virtual bool  DoConnect ( wxSockAddress &  remote, wxSockAddress *  local, bool  wait);
+  
 public:
   wxSocketClient(wxSocketFlags flags = wxSOCKET_NONE);
@@ -255,4 +258,5 @@
 
   virtual bool Connect(wxSockAddress& addr, bool wait = true);
+  bool Connect(wxSockAddress &  local, wxSockAddress &  remote, bool  wait = true);
 
   bool WaitOnConnect(long seconds = -1, long milliseconds = 0);
Index: src/common/socket.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/socket.cpp,v
retrieving revision 1.137
diff -b -u -2 -r1.137 socket.cpp
--- src/common/socket.cpp	2005/11/19 01:07:43	1.137
+++ src/common/socket.cpp	2006/01/05 17:02:36
@@ -1178,22 +1178,5 @@
 // ==========================================================================
 
-// --------------------------------------------------------------------------
-// Ctor and dtor
-// --------------------------------------------------------------------------
-
-wxSocketClient::wxSocketClient(wxSocketFlags flags)
-              : wxSocketBase(flags, wxSOCKET_CLIENT)
-{
-}
-
-wxSocketClient::~wxSocketClient()
-{
-}
-
-// --------------------------------------------------------------------------
-// Connect
-// --------------------------------------------------------------------------
-
-bool wxSocketClient::Connect(wxSockAddress& addr_man, bool wait)
+bool wxSocketClient::DoConnect(wxSockAddress& addr_man, wxSockAddress *  local, bool wait)
 {
   GSocketError err;
@@ -1225,4 +1208,14 @@
     m_socket->SetNonBlocking(1);
 
+  // Bind to a local IP address & port when provided.
+
+  if ( local != NULL )
+  {
+	  GAddress *	a	= local -> GetAddress ();
+
+	  if ( ( a != NULL ) && ( a -> m_addr != NULL ) )
+		  m_socket -> SetLocal ( a );
+  }
+
   m_socket->SetPeer(addr_man.GetAddress());
   err = m_socket->Connect(GSOCK_STREAMED);
@@ -1242,4 +1235,35 @@
   return true;
 }
+
+// --------------------------------------------------------------------------
+// Ctor and dtor
+// --------------------------------------------------------------------------
+
+wxSocketClient::wxSocketClient(wxSocketFlags flags)
+              : wxSocketBase(flags, wxSOCKET_CLIENT)
+{
+}
+
+wxSocketClient::~wxSocketClient()
+{
+}
+
+// --------------------------------------------------------------------------
+// Connect
+// --------------------------------------------------------------------------
+
+bool wxSocketClient::Connect(wxSockAddress& addr_man, bool wait)
+{
+	return ( DoConnect ( addr_man, 0, wait ) );
+}
+
+
+
+bool wxSocketClient::Connect ( wxSockAddress &  local, wxSockAddress &  remote, bool  wait )
+{
+	return ( DoConnect ( remote, &local, wait ) );
+}
+
+
 
 bool wxSocketClient::WaitOnConnect(long seconds, long milliseconds)
Index: src/msw/gsocket.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/gsocket.cpp,v
retrieving revision 1.19
diff -b -u -2 -r1.19 gsocket.cpp
--- src/msw/gsocket.cpp	2005/09/24 22:31:47	1.19
+++ src/msw/gsocket.cpp	2006/01/05 17:04:08
@@ -595,4 +595,14 @@
   gs_gui_functions->Enable_Events(this);
 
+  // Bind to a local IP address & port when provided.
+
+  if ( ( m_local != NULL ) && ( m_local -> m_addr != NULL ) )
+  {
+	char  optval;
+
+    setsockopt ( m_fd, SOL_SOCKET, SO_REUSEADDR, &optval, sizeof ( optval ) );
+    bind ( m_fd, m_local -> m_addr, m_local -> m_len );
+  }
+
   /* Connect it to the peer address, with a timeout (see below) */
   ret = connect(m_fd, m_peer->m_addr, m_peer->m_len);

 	  	 
