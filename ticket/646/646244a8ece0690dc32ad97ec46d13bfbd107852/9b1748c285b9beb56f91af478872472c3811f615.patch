diff -uNr wxWidgets-3.1.4-orig/include/wx/taskbar.h wxWidgets-3.1.4-mine/include/wx/taskbar.h
--- wxWidgets-3.1.4-orig/include/wx/taskbar.h	2020-07-22 19:20:06.000000000 +0200
+++ wxWidgets-3.1.4-mine/include/wx/taskbar.h	2020-08-14 17:02:16.923882900 +0200
@@ -61,6 +61,9 @@
 protected:
     // creates menu to be displayed when user clicks on the icon
     virtual wxMenu *CreatePopupMenu() { return NULL; }
+    
+    // same as CreatePopupMenu but won't destroy the menu
+    virtual wxMenu *GetPopupMenu() { return NULL; }
 
 private:
     // default events handling, calls CreatePopupMenu:
diff -uNr wxWidgets-3.1.4-orig/interface/wx/taskbar.h wxWidgets-3.1.4-mine/interface/wx/taskbar.h
--- wxWidgets-3.1.4-orig/interface/wx/taskbar.h	2020-07-22 19:20:06.000000000 +0200
+++ wxWidgets-3.1.4-mine/interface/wx/taskbar.h	2020-08-14 19:25:40.095727500 +0200
@@ -62,8 +62,9 @@
 
     @beginEventEmissionTable{wxTaskBarIconEvent}
     Note that not all ports are required to send these events and so it's better
-    to override wxTaskBarIcon::CreatePopupMenu() if all that the application does
-    is that it shows a popup menu in reaction to mouse click.
+    to override wxTaskBarIcon::CreatePopupMenu() or wxTaskBarIcon::GetPopupMenu()
+    if all that the application does is that it shows a popup menu in reaction to
+    mouse click.
     @event{EVT_TASKBAR_MOVE(func)}
         Process a @c wxEVT_TASKBAR_MOVE event.
     @event{EVT_TASKBAR_LEFT_DOWN(func)}
@@ -123,9 +124,10 @@
         The events can be handled by a class derived from wxTaskBarIcon.
 
         @note
-        It is recommended to override CreatePopupMenu() callback instead of
-        calling this method from event handler, because some ports (e.g. wxCocoa)
-        may not implement PopupMenu() and mouse click events at all.
+        It is recommended to override the CreatePopupMenu() or GetPopupMenu()
+        callback instead of calling this method from event handler, because some
+        ports (e.g. wxCocoa) may not implement PopupMenu() and mouse click events
+        at all.
     */
     virtual bool PopupMenu(wxMenu* menu);
 
@@ -172,11 +174,25 @@
         Override this function in order to provide popup menu associated with the icon.
         If CreatePopupMenu() returns @NULL (this happens by default), no menu is shown,
         otherwise the menu is displayed and then deleted by the library as soon as the
-        user dismisses it.
+        user dismisses it. If you don't want the menu to get destroyed when it is dismissed,
+        override GetPopupMenu() instead.
 
         The events can be handled by a class derived from wxTaskBarIcon.
     */
     virtual wxMenu* CreatePopupMenu();
+    
+    /**
+        This method is called by the library when the user requests popup menu
+        (on Windows and Unix platforms, this is when the user right-clicks the icon).
+
+        Override this function in order to provide popup menu associated with the icon.
+        If GetPopupMenu() returns @NULL (this happens by default), no menu is shown,
+        otherwise the menu is displayed. In contrast to CreatePopupMenu(), GetPopupMenu()
+        won't destroy the menu once the user dismisses it.
+
+        The events can be handled by a class derived from wxTaskBarIcon.
+    */
+    virtual wxMenu* GetPopupMenu();    
 };
 
 
diff -uNr wxWidgets-3.1.4-orig/src/common/taskbarcmn.cpp wxWidgets-3.1.4-mine/src/common/taskbarcmn.cpp
--- wxWidgets-3.1.4-orig/src/common/taskbarcmn.cpp	2020-07-22 19:20:06.000000000 +0200
+++ wxWidgets-3.1.4-mine/src/common/taskbarcmn.cpp	2020-08-14 17:04:02.754468800 +0200
@@ -53,6 +53,13 @@
         PopupMenu(menu);
         delete menu;
     }
+    else
+    {
+    	menu = GetPopupMenu();
+    	
+    	if (menu)
+   	    PopupMenu(menu);
+    }   	    
 }
 
 void wxTaskBarIconBase::Destroy()
diff -uNr wxWidgets-3.1.4-orig/src/osx/cocoa/taskbar.mm wxWidgets-3.1.4-mine/src/osx/cocoa/taskbar.mm
--- wxWidgets-3.1.4-orig/src/osx/cocoa/taskbar.mm	2020-07-22 19:20:06.000000000 +0200
+++ wxWidgets-3.1.4-mine/src/osx/cocoa/taskbar.mm	2020-08-14 17:22:36.000000000 +0200
@@ -68,7 +68,9 @@
     inline wxTaskBarIcon* GetTaskBarIcon() { return m_taskBarIcon; }
     wxMenu * CreatePopupMenu()
     { return m_taskBarIcon->CreatePopupMenu(); }
-
+    wxMenu * GetPopupMenu()
+    { return m_taskBarIcon->GetPopupMenu(); }
+    
     wxDECLARE_NO_COPY_CLASS(wxTaskBarIconImpl);
 
 protected:
@@ -100,6 +102,7 @@
 private:
     wxTaskBarIconDockImpl();
     wxMenu             *m_pMenu;
+    bool m_keepMenu;
 };
 
 class wxTaskBarIconCustomStatusItemImpl;
@@ -228,6 +231,7 @@
     wxASSERT_MSG(!sm_dockIcon, wxT("You should never have more than one dock icon!"));
     sm_dockIcon = this;
     m_pMenu = NULL;
+    m_keepMenu = false;
 }
 
 wxTaskBarIconDockImpl::~wxTaskBarIconDockImpl()
@@ -247,13 +251,27 @@
 WX_NSMenu wxTaskBarIconDockImpl::OSXDoGetDockHMenu()
 {
     wxMenu *dockMenu = CreatePopupMenu();
-
+    bool keepMenu;
+    
     if(!dockMenu)
-        return nil;
+    {
+        dockMenu = GetPopupMenu();
+        
+        if(!dockMenu)        
+            return nil;
     
-    wxDELETE(m_pMenu);
+        keepMenu = true;
+    }
+    else
+    {
+        keepMenu = false;
+    }
+    
+    if(!m_keepMenu)
+        wxDELETE(m_pMenu);
 
     m_pMenu = dockMenu;
+    m_keepMenu = keepMenu;
     
     m_pMenu->SetInvokingWindow(m_eventWindow);
     
@@ -271,7 +289,9 @@
 
 bool wxTaskBarIconDockImpl::RemoveIcon()
 {
-    wxDELETE(m_pMenu);
+    if(!m_keepMenu) 
+        wxDELETE(m_pMenu);
+    
     m_icon = wxBitmap();
     [[NSApplication sharedApplication] setApplicationIconImage:nil];
     return true;
