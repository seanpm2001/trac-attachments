diff --git a/wx/lib/evtmgr.py b/wx/lib/evtmgr.py
index 439ccc7..a51d51b 100644
--- a/wx/lib/evtmgr.py
+++ b/wx/lib/evtmgr.py
@@ -38,7 +38,7 @@ This module is Python 2.1+ compatible.
 
 """
 import  wx
-import  pubsub # publish / subscribe library
+import  pubsub.pub # publish / subscribe library
 
 #---------------------------------------------------------------------------
 
@@ -55,7 +55,7 @@ class EventManager:
         self.messageAdapterDict  = {}
         self.windowTopicLookup   = {}
         self.listenerTopicLookup = {}
-        self.__publisher         = pubsub.Publisher()
+        self.__publisher         = pubsub.pub.Publisher()
         self.EMPTY_LIST          = []
 
 
@@ -413,7 +413,7 @@ class EventAdapter:
         Instantiate a new adapter. Pre-compute my Publish/Subscribe
         topic, which is constant, and register with wxWindows.
         """
-        self.publisher = pubsub.Publisher()
+        self.publisher = pubsub.pub.Publisher()
         self.topic     = ((func, win, id),)
         self.id        = id
         self.win       = win
@@ -473,14 +473,14 @@ class MessageAdapter:
         given eventHandler.
         """
         self.eventHandler = eventHandler
-        pubsub.Publisher().subscribe(listener=self.deliverEvent, topic=(topicPattern,))
+        pubsub.pub.Publisher().subscribe(listener=self.deliverEvent, topic=(topicPattern,))
 
     def deliverEvent(self, message):
         event = message.data        # Extract the wxEvent
         self.eventHandler(event)    # Perform the call as wxWindows would
 
     def Destroy(self):
-        pubsub.Publisher().unsubscribe(listener=self.deliverEvent)
+        pubsub.pub.Publisher().unsubscribe(listener=self.deliverEvent)
 
 
 #---------------------------------------------------------------------------
