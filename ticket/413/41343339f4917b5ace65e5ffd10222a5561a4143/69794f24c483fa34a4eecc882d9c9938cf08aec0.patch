Index: samples/except/except.bkl
===================================================================
--- samples/except/except.bkl	(ÉäÉrÉWÉáÉì 73815)
+++ samples/except/except.bkl	(çÏã∆ÉRÉsÅ[)
@@ -6,7 +6,8 @@
     <include file="../../build/bakefiles/common_samples.bkl"/>
 
     <exe id="except" template="wx_sample" template_append="wx_append">
-        <sources>except.cpp</sources>
+        <sources>except.cpp except_utf8.cpp</sources>
+        <headers>except_utf8.h</headers>
         <wx-lib>core</wx-lib>
         <wx-lib>base</wx-lib>
     </exe>
Index: samples/except/except.cpp
===================================================================
--- samples/except/except.cpp	(ÉäÉrÉWÉáÉì 73815)
+++ samples/except/except.cpp	(çÏã∆ÉRÉsÅ[)
@@ -2,7 +2,7 @@
 // Name:        samples/except/except.cpp
 // Purpose:     shows how C++ exceptions can be used in wxWidgets
 // Author:      Vadim Zeitlin
-// Modified by:
+// Modified by: Suzumizaki-kimitaka 2013-04-08
 // Created:     2003-09-17
 // RCS-ID:      $Id$
 // Copyright:   (c) 2003-2005 Vadim Zeitlin
@@ -48,6 +48,8 @@
     #include "wx/thread.h"
 #endif
 
+#include "except_utf8.h"
+
 // ----------------------------------------------------------------------------
 // resources
 // ----------------------------------------------------------------------------
@@ -113,6 +115,7 @@
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
     void OnDialog(wxCommandEvent& event);
+    void OnDialogUnicode(wxCommandEvent& event);
 
     void OnThrowInt(wxCommandEvent& event);
     void OnThrowString(wxCommandEvent& event);
@@ -198,6 +201,7 @@
     Except_ShowAssertInThread,
 #endif // wxUSE_THREADS
     Except_Dialog,
+    Except_Dialog_Unicode,
 
     Except_Quit = wxID_EXIT,
     Except_About = wxID_ABOUT
@@ -215,6 +219,7 @@
     EVT_MENU(Except_About, MyFrame::OnAbout)
     EVT_MENU(Except_Dialog, MyFrame::OnDialog)
     EVT_MENU(Except_ThrowInt, MyFrame::OnThrowInt)
+    EVT_MENU(Except_Dialog_Unicode, MyFrame::OnDialogUnicode)
     EVT_MENU(Except_ThrowString, MyFrame::OnThrowString)
     EVT_MENU(Except_ThrowObject, MyFrame::OnThrowObject)
     EVT_MENU(Except_ThrowUnhandled, MyFrame::OnThrowUnhandled)
@@ -349,6 +354,8 @@
     // create a menu bar
     wxMenu *menuFile = new wxMenu;
     menuFile->Append(Except_Dialog, wxT("Show &dialog\tCtrl-D"));
+    menuFile->Append(Except_Dialog_Unicode,
+                     wxT("Show dialog using &Unicode named class\tCtrl-U"));
     menuFile->AppendSeparator();
     menuFile->Append(Except_ThrowInt, wxT("Throw an &int\tCtrl-I"));
     menuFile->Append(Except_ThrowString, wxT("Throw a &string\tCtrl-S"));
@@ -427,6 +434,30 @@
     }
 }
 
+void MyFrame::OnDialogUnicode(wxCommandEvent& WXUNUSED(event))
+{
+#if STACKTRACE_CAN_INCLUDE_UNICODE
+    try
+    {
+        wxDialog* dlg = GenerateDialogUnicode(this);
+
+        dlg->ShowModal();
+    }
+    catch ( ... )
+    {
+        wxLogWarning(wxT("An exception in Unicode Version Dialog"));
+
+        Destroy();
+        throw;
+    }
+#else
+    wxMessageBox(
+       wxT("Please make sure your compiler supports Unicode identifiers, ")
+       wxT("after that define STACKTRACE_CAN_INCLUDE_UNICODE as 1 and rebuild."));
+#endif
+}
+
+
 void MyFrame::OnThrowInt(wxCommandEvent& WXUNUSED(event))
 {
     throw -17;
@@ -546,4 +577,3 @@
 {
     DoCrash();
 }
-
Index: samples/except/except.dsp
===================================================================
--- samples/except/except.dsp	(ÉäÉrÉWÉáÉì 73815)
+++ samples/except/except.dsp	(çÏã∆ÉRÉsÅ[)
@@ -31,7 +31,7 @@
 MTL=midl.exe
 RSC=rc.exe
 
-!IF  "$(CFG)" == "except - Win32 DLL Release"
+!IF  "$(CFG)" == "except - Win32 DLL Release"
 
 # PROP BASE Use_MFC 0
 # PROP BASE Use_Debug_Libraries 1
@@ -148,9 +148,21 @@
 # End Source File
 # Begin Source File
 
+SOURCE=.\except_utf8.cpp
+# End Source File
+# Begin Source File
+
 SOURCE=.\..\..\samples\sample.rc
 # End Source File
 # End Group
+# Begin Group "Header Files"
+
+# PROP Default_Filter ""
+# Begin Source File
+
+SOURCE=.\except_utf8.h
+# End Source File
+# End Group
 # End Target
 # End Project
 
Index: samples/except/except_utf8.cpp
===================================================================
--- samples/except/except_utf8.cpp	(ÉäÉrÉWÉáÉì 0)
+++ samples/except/except_utf8.cpp	(çÏã∆ÉRÉsÅ[)
@@ -0,0 +1,209 @@
+Ôªø/////////////////////////////////////////////////////////////////////////////
+// Name:        samples/except/except_utf8.cpp
+// Purpose:     
+// Author:      Suzumizaki-kimitaka
+// Modified by: 
+// Created:     2013-04-11
+// RCS-ID:      
+// Copyright:   (C) Suzumizaki-kimitaka
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+/*
+
+C++ specification allows non-ASCII named classes, variables, functions, etc.
+and this file includes Unicode characters for own purpose.
+
+Currently this file is saved as UTF-8 with Byte Order Mark.
+If the BOM doesn't exist, Visual C++ may treat source texts as local not UTF.
+
+Old versions of wxMSW can't treat non-ASCII named identifiers inside stack
+tracing. Because ill versions call wxString::FromAscii with such identifiers
+and assertion-stop raised by FromAscii throws away the information we really
+need. Additionally to say, Ill versions used only MBCS functions implemented
+in dbghelp.dll
+
+Try assertion stop and check the dialog shows correctly the names of classes
+and functions in Unicode.
+
+When you uses outdated dbghelp.dll, or MBCS build that not support the class
+name '‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä', you can only check avoiding multi assertion stops.
+
+*/
+
+// ============================================================================
+// declarations
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+// For compilers that support precompilation, includes "wx/wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+#include "except_utf8.h"
+#if STACKTRACE_CAN_INCLUDE_UNICODE
+
+#ifndef WX_PRECOMP
+    #include "wx/button.h"
+    #include "wx/sizer.h"
+    #include "wx/stattext.h"
+    #include "wx/dynlib.h"
+    #include "wx/msgdlg.h"
+#endif
+
+// ----------------------------------------------------------------------------
+// private classes
+// ----------------------------------------------------------------------------
+
+// named 'Thai language, Japanese, Hindi' only for test purpose
+class ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä : public wxDialog
+{
+public:
+    ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä(wxFrame *parent);
+
+    // event handlers
+    void OnShowAssert(wxCommandEvent& event);
+    void OnThrowObject(wxCommandEvent& event);
+    void OnInvalidStringFormat(wxCommandEvent& event);
+    void OnListLoadedModules(wxCommandEvent& event);
+    
+    // 'format string includes error'
+    wxString Êõ∏ÂºèÂ≠óÂàó„ÅÆË™§„Çä();
+
+private:
+    DECLARE_EVENT_TABLE()
+};
+
+// A trivial exception class
+class MyException
+{
+public:
+    MyException(const wxString& msg) : m_msg(msg) { }
+
+    const wxChar *what() const { return m_msg.c_str(); }
+
+private:
+    wxString m_msg;
+};
+
+// ----------------------------------------------------------------------------
+// constants
+// ----------------------------------------------------------------------------
+
+// IDs for the controls and the menu commands
+enum
+{
+    // control ids and menu items
+    Except_utf8_ShowAssert = wxID_HIGHEST,
+    Except_utf8_ListLoadedModules,
+    Except_utf8_ThrowObject,
+    Except_utf8_InvalidStringFormat,
+};
+
+// ----------------------------------------------------------------------------
+// event tables and other macros for wxWidgets
+// ----------------------------------------------------------------------------
+
+BEGIN_EVENT_TABLE(‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä, wxDialog)
+    EVT_BUTTON(Except_utf8_ShowAssert, ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä::OnShowAssert)
+    EVT_BUTTON(Except_utf8_ListLoadedModules, ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä::OnListLoadedModules)
+    EVT_BUTTON(Except_utf8_ThrowObject, ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä::OnThrowObject)
+    EVT_BUTTON(Except_utf8_InvalidStringFormat,
+               ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä::OnInvalidStringFormat)
+END_EVENT_TABLE()
+
+// ============================================================================
+// ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä implementation
+// ============================================================================
+
+‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä::‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä(wxFrame *parent)
+        : wxDialog(parent, wxID_ANY, wxString(wxT("Throw exception dialog")))
+{
+    wxSizer *sizerTop = new wxBoxSizer(wxVERTICAL);
+    
+    sizerTop->Add(new wxStaticText(this, wxNewId(),
+        wxT("Welcome. Now you can check whether your stack trace\ncorrectly ")
+        wxT("shows non-ASCII identifier used as class name.\n\n")
+        wxT("The name of this dialog class is '‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä'. ")),
+                  0, wxCENTRE | wxALL, 5);
+
+    sizerTop->Add(new wxButton(this, Except_utf8_ThrowObject, wxT("Throw &object")),
+                  0, wxCENTRE | wxALL, 5);
+    sizerTop->Add(new wxButton(this, Except_utf8_ShowAssert,
+                               wxT("Show &Assert invoked from wxArrayString")),
+                  0, wxCENTRE | wxALL, 5);
+    sizerTop->Add(new wxButton(this, Except_utf8_InvalidStringFormat,
+                               wxT("Call wxString::&Format with bad parameter")),
+                  0, wxCENTRE | wxALL, 5);
+    sizerTop->Add(new wxButton(this, Except_utf8_ListLoadedModules,
+                               wxT("List loaded modules")),
+                  0, wxCENTRE | wxALL, 5);
+    sizerTop->Add(new wxButton(this, wxID_CANCEL, wxT("&Cancel")),
+                  0, wxCENTRE | wxALL, 5);
+
+    SetSizerAndFit(sizerTop);
+}
+
+void ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä::OnThrowObject(wxCommandEvent& WXUNUSED(event))
+{
+    throw MyException(wxT("Exception thrown from ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä"));
+}
+
+void ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä::OnShowAssert(wxCommandEvent& WXUNUSED(event))
+{
+    // provoke an assert from wxArrayString.
+    // to test stack trace can include non-ASCII named class.
+    wxArrayString arr;
+    arr[0];
+}
+
+void ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä::OnListLoadedModules(wxCommandEvent& WXUNUSED(event))
+{
+    wxDynamicLibraryDetailsArray list = wxDynamicLibrary::ListLoaded();
+    wxString s;
+    for (size_t i=0; i<list.Count(); ++i)
+    {
+        s << list[i].GetName() << wxT(" ");
+        if (list[i].GetVersion().Trim().Trim(false).size())
+        {
+            s << list[i].GetVersion() << wxT("\n");
+        }
+        else
+        {
+            s << wxT("(not versioned)\n");
+        }
+    }
+    wxMessageBox(s, wxT("The modules currently loaded are:"));
+}
+
+
+wxString ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä::Êõ∏ÂºèÂ≠óÂàó„ÅÆË™§„Çä()
+{
+    // provoke an assert from wxString::Format.
+    // currently, assertion faied in wxArgNormalizer<int>::wxArgNormalizer<int>.
+    return wxString::Format("%s", 1717);
+}
+
+void ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä::OnInvalidStringFormat(wxCommandEvent& WXUNUSED(event))
+{
+    // to test stack trace can include non-ASCII named function.
+    Êõ∏ÂºèÂ≠óÂàó„ÅÆË™§„Çä();
+}
+
+// ============================================================================
+// global functions implementation
+// ============================================================================
+
+wxDialog* GenerateDialogUnicode(wxFrame* parent)
+{
+    return new ‡∏†‡∏≤‡∏©‡∏≤‡πÑ‡∏ó‡∏¢Êó•Êú¨Ë™û‡§π‡§ø‡§®‡•ç‡§¶‡•Ä(parent);
+}
+
+#endif // STACKTRACE_CAN_INCLUDE_UNICODE
+
Index: samples/except/except_utf8.h
===================================================================
--- samples/except/except_utf8.h	(ÉäÉrÉWÉáÉì 0)
+++ samples/except/except_utf8.h	(çÏã∆ÉRÉsÅ[)
@@ -0,0 +1,27 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        samples/except/except_utf8.h
+// Purpose:     check stacktrace works correctly with non-ASCII identifiers
+// Author:      Suzumizaki-kimitaka
+// Modified by: 
+// Created:     2013-04-08
+// RCS-ID:      
+// Copyright:   (C) Suzumizaki-kimitaka
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef STACKTRACE_CAN_INCLUDE_UNICODE
+#ifdef _MSC_VER
+#define STACKTRACE_CAN_INCLUDE_UNICODE 1
+#else
+#define STACKTRACE_CAN_INCLUDE_UNICODE 0
+#endif
+#endif
+
+#if STACKTRACE_CAN_INCLUDE_UNICODE
+
+#include "wx/dialog.h"
+#include "wx/frame.h"
+wxDialog* GenerateDialogUnicode(wxFrame* parent);
+
+#endif
+
Index: samples/except/except_vc7.vcproj
===================================================================
--- samples/except/except_vc7.vcproj	(ÉäÉrÉWÉáÉì 73815)
+++ samples/except/except_vc7.vcproj	(çÏã∆ÉRÉsÅ[)
@@ -286,8 +286,19 @@
 			<File
 				RelativePath=".\except.cpp">
 			</File>
+			<File
+				RelativePath=".\except_utf8.cpp">
+			</File>
 		</Filter>
 		<Filter
+			Name="Header Files"
+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
+			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}">
+			<File
+				RelativePath=".\except_utf8.h">
+			</File>
+		</Filter>
+		<Filter
 			Name="Resource Files"
 			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav"
 			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}">
Index: samples/except/except_vc8.vcproj
===================================================================
--- samples/except/except_vc8.vcproj	(ÉäÉrÉWÉáÉì 73815)
+++ samples/except/except_vc8.vcproj	(çÏã∆ÉRÉsÅ[)
@@ -421,8 +421,22 @@
 				RelativePath=".\except.cpp"
 				>
 			</File>
+			<File
+				RelativePath=".\except_utf8.cpp"
+				>
+			</File>
 		</Filter>
 		<Filter
+			Name="Header Files"
+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
+			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
+			>
+			<File
+				RelativePath=".\except_utf8.h"
+				>
+			</File>
+		</Filter>
+		<Filter
 			Name="Resource Files"
 			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav"
 			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
Index: samples/except/except_vc9.vcproj
===================================================================
--- samples/except/except_vc9.vcproj	(ÉäÉrÉWÉáÉì 73815)
+++ samples/except/except_vc9.vcproj	(çÏã∆ÉRÉsÅ[)
@@ -407,8 +407,22 @@
 				RelativePath=".\except.cpp"
 				>
 			</File>
+			<File
+				RelativePath=".\except_utf8.cpp"
+				>
+			</File>
 		</Filter>
 		<Filter
+			Name="Header Files"
+			Filter="h;hpp;hxx;hm;inl;inc;xsd"
+			UniqueIdentifier="{93995380-89BD-4b04-88EB-625FBE52EBFB}"
+			>
+			<File
+				RelativePath=".\except_utf8.h"
+				>
+			</File>
+		</Filter>
+		<Filter
 			Name="Resource Files"
 			Filter="rc;ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe;resx;tiff;tif;png;wav"
 			UniqueIdentifier="{67DA6AB6-F800-4c08-8B7A-83BB121AAD01}"
Index: samples/except/makefile.bcc
===================================================================
--- samples/except/makefile.bcc	(ÉäÉrÉWÉáÉì 73815)
+++ samples/except/makefile.bcc	(çÏã∆ÉRÉsÅ[)
@@ -24,41 +24,42 @@
 WX_RELEASE_NODOT = 29
 COMPILER_PREFIX = bcc
 OBJS = \
-	$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WXDLLFLAG)$(CFG)
-LIBDIRNAME = \
-	.\..\..\lib\$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(LIBTYPE_SUFFIX)$(CFG)
+	$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WXDLLFLAG)$(CFG)
+LIBDIRNAME = \
+	.\..\..\lib\$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(LIBTYPE_SUFFIX)$(CFG)
 SETUPHDIR = \
 	$(LIBDIRNAME)\$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)
 EXCEPT_CXXFLAGS = $(__RUNTIME_LIBS_7) -I$(BCCDIR)\include $(__DEBUGINFO) \
-	$(__OPTIMIZEFLAG_2) $(__THREADSFLAG_6) -D__WX$(TOOLKIT)__ \
-	$(__WXUNIV_DEFINE_p) $(__DEBUG_DEFINE_p) $(__NDEBUG_DEFINE_p) \
-	$(__EXCEPTIONS_DEFINE_p) $(__RTTI_DEFINE_p) $(__THREAD_DEFINE_p) \
-	$(__UNICODE_DEFINE_p) $(__MSLU_DEFINE_p) -I$(SETUPHDIR) -I.\..\..\include \
+	$(__OPTIMIZEFLAG_2) $(__THREADSFLAG_6) -D__WX$(TOOLKIT)__ \
+	$(__WXUNIV_DEFINE_p) $(__DEBUG_DEFINE_p) $(__NDEBUG_DEFINE_p) \
+	$(__EXCEPTIONS_DEFINE_p) $(__RTTI_DEFINE_p) $(__THREAD_DEFINE_p) \
+	$(__UNICODE_DEFINE_p) $(__MSLU_DEFINE_p) -I$(SETUPHDIR) -I.\..\..\include \
 	$(____CAIRO_INCLUDEDIR_FILENAMES_p) -I. $(__DLLFLAG_p) -I.\..\..\samples \
 	-DNOPCH $(CPPFLAGS) $(CXXFLAGS)
 EXCEPT_OBJECTS =  \
-	$(OBJS)\except_except.obj
+	$(OBJS)\except_except.obj \
+	$(OBJS)\except_except_utf8.obj
 
 ### Conditionally set variables: ###
 
-!if "$(TOOLKIT)" == "GTK"
-WIN32_TOOLKIT_LOWERCASE = gtk
-!endif
-!if "$(TOOLKIT)" == "MSW"
-WIN32_TOOLKIT_LOWERCASE = msw
-!endif
+!if "$(TOOLKIT)" == "GTK"
+WIN32_TOOLKIT_LOWERCASE = gtk
+!endif
+!if "$(TOOLKIT)" == "MSW"
+WIN32_TOOLKIT_LOWERCASE = msw
+!endif
 !if "$(USE_GUI)" == "0"
 PORTNAME = base
 !endif
 !if "$(USE_GUI)" == "1"
-PORTNAME = $(WIN32_TOOLKIT_LOWERCASE)$(TOOLKIT_VERSION)
-!endif
-!if "$(TOOLKIT)" == "MAC"
-WXBASEPORT = _carbon
-!endif
-!if "$(OFFICIAL_BUILD)" == "1"
-COMPILER_VERSION = ERROR-COMPILER-VERSION-MUST-BE-SET-FOR-OFFICIAL-BUILD
+PORTNAME = $(WIN32_TOOLKIT_LOWERCASE)$(TOOLKIT_VERSION)
 !endif
+!if "$(TOOLKIT)" == "MAC"
+WXBASEPORT = _carbon
+!endif
+!if "$(OFFICIAL_BUILD)" == "1"
+COMPILER_VERSION = ERROR-COMPILER-VERSION-MUST-BE-SET-FOR-OFFICIAL-BUILD
+!endif
 !if "$(BUILD)" == "debug"
 WXDEBUGFLAG = d
 !endif
@@ -83,11 +84,11 @@
 !if "$(MONOLITHIC)" == "1"
 EXTRALIBS_FOR_BASE =   
 !endif
-!if "$(TOOLKIT)" == "GTK" && "$(TOOLKIT_VERSION)" == "2"
-LIB_GTK = gtk-win32-2.0.lib gdk-win32-2.0.lib pangocairo-1.0.lib \
-	gdk_pixbuf-2.0.lib cairo.lib pango-1.0.lib gobject-2.0.lib gthread-2.0.lib \
-	glib-2.0.lib
-!endif
+!if "$(TOOLKIT)" == "GTK" && "$(TOOLKIT_VERSION)" == "2"
+LIB_GTK = gtk-win32-2.0.lib gdk-win32-2.0.lib pangocairo-1.0.lib \
+	gdk_pixbuf-2.0.lib cairo.lib pango-1.0.lib gobject-2.0.lib gthread-2.0.lib \
+	glib-2.0.lib
+!endif
 !if "$(BUILD)" == "debug"
 __OPTIMIZEFLAG_2 = -Od
 !endif
@@ -190,7 +191,7 @@
 !endif
 !if "$(MONOLITHIC)" == "0"
 __WXLIB_BASE_p = \
-	wxbase$(WXBASEPORT)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).lib
+	wxbase$(WXBASEPORT)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).lib
 !endif
 !if "$(MONOLITHIC)" == "1"
 __WXLIB_MONO_p = \
@@ -249,12 +250,15 @@
 
 $(OBJS)\except.exe: $(EXCEPT_OBJECTS)  $(OBJS)\except_sample.res
 	ilink32 -Tpe -q  -L$(BCCDIR)\lib -L$(BCCDIR)\lib\psdk $(__DEBUGINFO)  -L$(LIBDIRNAME) -aa $(____CAIRO_LIBDIR_FILENAMES_p) $(LDFLAGS) @&&|
-	c0w32.obj $(EXCEPT_OBJECTS),$@,, $(__WXLIB_CORE_p)  $(__WXLIB_BASE_p)  $(__WXLIB_MONO_p) $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p) $(LIB_GTK)  wxzlib$(WXDEBUGFLAG).lib wxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).lib wxexpat$(WXDEBUGFLAG).lib $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__CAIRO_LIB_p) ole2w32.lib oleacc.lib import32.lib cw32$(__THREADSFLAG_5)$(__RUNTIME_LIBS_8).lib,, $(OBJS)\except_sample.res
+	c0w32.obj $(EXCEPT_OBJECTS),$@,, $(__WXLIB_CORE_p)  $(__WXLIB_BASE_p)  $(__WXLIB_MONO_p) $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p) $(LIB_GTK)  wxzlib$(WXDEBUGFLAG).lib wxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).lib wxexpat$(WXDEBUGFLAG).lib $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__CAIRO_LIB_p) ole2w32.lib oleacc.lib import32.lib cw32$(__THREADSFLAG_5)$(__RUNTIME_LIBS_8).lib,, $(OBJS)\except_sample.res
 |
 
 $(OBJS)\except_sample.res: .\..\..\samples\sample.rc
-	brcc32 -32 -r -fo$@ -i$(BCCDIR)\include    -d__WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p_1) $(__DEBUG_DEFINE_p_1) $(__NDEBUG_DEFINE_p_1) $(__EXCEPTIONS_DEFINE_p_1) $(__RTTI_DEFINE_p_1) $(__THREAD_DEFINE_p_1) $(__UNICODE_DEFINE_p_1) $(__MSLU_DEFINE_p_1) -i$(SETUPHDIR) -i.\..\..\include $(____CAIRO_INCLUDEDIR_FILENAMES_1_p) -i. $(__DLLFLAG_p_1) -i.\..\..\samples -dNOPCH .\..\..\samples\sample.rc
+	brcc32 -32 -r -fo$@ -i$(BCCDIR)\include    -d__WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p_1) $(__DEBUG_DEFINE_p_1) $(__NDEBUG_DEFINE_p_1) $(__EXCEPTIONS_DEFINE_p_1) $(__RTTI_DEFINE_p_1) $(__THREAD_DEFINE_p_1) $(__UNICODE_DEFINE_p_1) $(__MSLU_DEFINE_p_1) -i$(SETUPHDIR) -i.\..\..\include $(____CAIRO_INCLUDEDIR_FILENAMES_1_p) -i. $(__DLLFLAG_p_1) -i.\..\..\samples -dNOPCH .\..\..\samples\sample.rc
 
 $(OBJS)\except_except.obj: .\except.cpp
 	$(CXX) -q -c -P -o$@ $(EXCEPT_CXXFLAGS) .\except.cpp
 
+$(OBJS)\except_except_utf8.obj: .\except_utf8.cpp
+	$(CXX) -q -c -P -o$@ $(EXCEPT_CXXFLAGS) .\except_utf8.cpp
+
Index: samples/except/makefile.gcc
===================================================================
--- samples/except/makefile.gcc	(ÉäÉrÉWÉáÉì 73815)
+++ samples/except/makefile.gcc	(çÏã∆ÉRÉsÅ[)
@@ -16,31 +16,32 @@
 WX_RELEASE_NODOT = 29
 COMPILER_PREFIX = gcc
 OBJS = \
-	$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WXDLLFLAG)$(CFG)
-LIBDIRNAME = \
-	.\..\..\lib\$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(LIBTYPE_SUFFIX)$(CFG)
+	$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WXDLLFLAG)$(CFG)
+LIBDIRNAME = \
+	.\..\..\lib\$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(LIBTYPE_SUFFIX)$(CFG)
 SETUPHDIR = \
 	$(LIBDIRNAME)\$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)
 EXCEPT_CXXFLAGS = $(__DEBUGINFO) $(__OPTIMIZEFLAG_2) $(__THREADSFLAG) \
-	$(GCCFLAGS) -DHAVE_W32API_H -D__WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p) \
+	$(GCCFLAGS) -DHAVE_W32API_H -D__WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p) \
 	$(__DEBUG_DEFINE_p) $(__NDEBUG_DEFINE_p) $(__EXCEPTIONS_DEFINE_p) \
 	$(__RTTI_DEFINE_p) $(__THREAD_DEFINE_p) $(__UNICODE_DEFINE_p) \
 	$(__MSLU_DEFINE_p) -I$(SETUPHDIR) -I.\..\..\include \
 	$(____CAIRO_INCLUDEDIR_FILENAMES_p) -W -Wall -I. $(__DLLFLAG_p) \
 	-I.\..\..\samples -DNOPCH $(__RTTIFLAG_5) $(__EXCEPTIONSFLAG_6) \
-	-Wno-ctor-dtor-privacy $(CXXFLAGS_GTK_WINDOWS_GCC) $(CPPFLAGS) $(CXXFLAGS)
+	-Wno-ctor-dtor-privacy $(CXXFLAGS_GTK_WINDOWS_GCC) $(CPPFLAGS) $(CXXFLAGS)
 EXCEPT_OBJECTS =  \
 	$(OBJS)\except_sample_rc.o \
-	$(OBJS)\except_except.o
+	$(OBJS)\except_except.o \
+	$(OBJS)\except_except_utf8.o
 
 ### Conditionally set variables: ###
 
-ifeq ($(TOOLKIT),GTK)
-WIN32_TOOLKIT_LOWERCASE = gtk
-endif
-ifeq ($(TOOLKIT),MSW)
-WIN32_TOOLKIT_LOWERCASE = msw
-endif
+ifeq ($(TOOLKIT),GTK)
+WIN32_TOOLKIT_LOWERCASE = gtk
+endif
+ifeq ($(TOOLKIT),MSW)
+WIN32_TOOLKIT_LOWERCASE = msw
+endif
 ifeq ($(GCC_VERSION),2.95)
 GCCFLAGS = -fvtable-thunks
 endif
@@ -48,14 +49,14 @@
 PORTNAME = base
 endif
 ifeq ($(USE_GUI),1)
-PORTNAME = $(WIN32_TOOLKIT_LOWERCASE)$(TOOLKIT_VERSION)
-endif
-ifeq ($(TOOLKIT),MAC)
-WXBASEPORT = _carbon
-endif
-ifeq ($(OFFICIAL_BUILD),1)
-COMPILER_VERSION = ERROR-COMPILER-VERSION-MUST-BE-SET-FOR-OFFICIAL-BUILD
+PORTNAME = $(WIN32_TOOLKIT_LOWERCASE)$(TOOLKIT_VERSION)
 endif
+ifeq ($(TOOLKIT),MAC)
+WXBASEPORT = _carbon
+endif
+ifeq ($(OFFICIAL_BUILD),1)
+COMPILER_VERSION = ERROR-COMPILER-VERSION-MUST-BE-SET-FOR-OFFICIAL-BUILD
+endif
 ifeq ($(BUILD),debug)
 WXDEBUGFLAG = d
 endif
@@ -80,16 +81,16 @@
 ifeq ($(MONOLITHIC),1)
 EXTRALIBS_FOR_BASE =   
 endif
-ifeq ($(TOOLKIT),GTK)
-CXXFLAGS_GTK_WINDOWS_GCC = -mms-bitfields
-endif
-ifeq ($(TOOLKIT),GTK)
-ifeq ($(TOOLKIT_VERSION),2)
-LIB_GTK = gtk-win32-2.0.lib gdk-win32-2.0.lib pangocairo-1.0.lib \
-	gdk_pixbuf-2.0.lib cairo.lib pango-1.0.lib gobject-2.0.lib gthread-2.0.lib \
-	glib-2.0.lib
-endif
-endif
+ifeq ($(TOOLKIT),GTK)
+CXXFLAGS_GTK_WINDOWS_GCC = -mms-bitfields
+endif
+ifeq ($(TOOLKIT),GTK)
+ifeq ($(TOOLKIT_VERSION),2)
+LIB_GTK = gtk-win32-2.0.lib gdk-win32-2.0.lib pangocairo-1.0.lib \
+	gdk_pixbuf-2.0.lib cairo.lib pango-1.0.lib gobject-2.0.lib gthread-2.0.lib \
+	glib-2.0.lib
+endif
+endif
 ifeq ($(BUILD),debug)
 __OPTIMIZEFLAG_2 = -O0
 endif
@@ -180,7 +181,7 @@
 endif
 ifeq ($(MONOLITHIC),0)
 __WXLIB_BASE_p = \
-	-lwxbase$(WXBASEPORT)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)
+	-lwxbase$(WXBASEPORT)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)
 endif
 ifeq ($(MONOLITHIC),1)
 __WXLIB_MONO_p = \
@@ -242,14 +243,17 @@
 	-if exist $(OBJS)\except.exe del $(OBJS)\except.exe
 
 $(OBJS)\except.exe: $(EXCEPT_OBJECTS) $(OBJS)\except_sample_rc.o
-	$(CXX) -o $@ $(EXCEPT_OBJECTS)  $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--subsystem,windows -mwindows $(____CAIRO_LIBDIR_FILENAMES_p) $(LDFLAGS)  $(__WXLIB_CORE_p)  $(__WXLIB_BASE_p)  $(__WXLIB_MONO_p) $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p) $(LIB_GTK)  -lwxzlib$(WXDEBUGFLAG) -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__CAIRO_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lwininet
+	$(CXX) -o $@ $(EXCEPT_OBJECTS)  $(__DEBUGINFO) $(__THREADSFLAG) -L$(LIBDIRNAME) -Wl,--subsystem,windows -mwindows $(____CAIRO_LIBDIR_FILENAMES_p) $(LDFLAGS)  $(__WXLIB_CORE_p)  $(__WXLIB_BASE_p)  $(__WXLIB_MONO_p) $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p) $(LIB_GTK)  -lwxzlib$(WXDEBUGFLAG) -lwxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG) -lwxexpat$(WXDEBUGFLAG) $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__CAIRO_LIB_p) -lkernel32 -luser32 -lgdi32 -lcomdlg32 -lwinspool -lwinmm -lshell32 -lcomctl32 -lole32 -loleaut32 -luuid -lrpcrt4 -ladvapi32 -lwsock32 -lwininet
 
 $(OBJS)\except_sample_rc.o: ./../../samples/sample.rc
-	windres --use-temp-file -i$< -o$@    --define __WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p_1) $(__DEBUG_DEFINE_p_1) $(__NDEBUG_DEFINE_p_1) $(__EXCEPTIONS_DEFINE_p_1) $(__RTTI_DEFINE_p_1) $(__THREAD_DEFINE_p_1) $(__UNICODE_DEFINE_p_1) $(__MSLU_DEFINE_p_1) --include-dir $(SETUPHDIR) --include-dir ./../../include $(__CAIRO_INCLUDEDIR_p) --include-dir . $(__DLLFLAG_p_1) --include-dir ./../../samples --define NOPCH
+	windres --use-temp-file -i$< -o$@    --define __WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p_1) $(__DEBUG_DEFINE_p_1) $(__NDEBUG_DEFINE_p_1) $(__EXCEPTIONS_DEFINE_p_1) $(__RTTI_DEFINE_p_1) $(__THREAD_DEFINE_p_1) $(__UNICODE_DEFINE_p_1) $(__MSLU_DEFINE_p_1) --include-dir $(SETUPHDIR) --include-dir ./../../include $(__CAIRO_INCLUDEDIR_p) --include-dir . $(__DLLFLAG_p_1) --include-dir ./../../samples --define NOPCH
 
 $(OBJS)\except_except.o: ./except.cpp
 	$(CXX) -c -o $@ $(EXCEPT_CXXFLAGS) $(CPPDEPS) $<
 
+$(OBJS)\except_except_utf8.o: ./except_utf8.cpp
+	$(CXX) -c -o $@ $(EXCEPT_CXXFLAGS) $(CPPDEPS) $<
+
 .PHONY: all clean
 
 
Index: samples/except/Makefile.in
===================================================================
--- samples/except/Makefile.in	(ÉäÉrÉWÉáÉì 73815)
+++ samples/except/Makefile.in	(çÏã∆ÉRÉsÅ[)
@@ -50,7 +50,8 @@
 EXCEPT_OBJECTS =  \
 	$(__except___win32rc) \
 	$(__except_os2_lib_res) \
-	except_except.o
+	except_except.o \
+	except_except_utf8.o
 
 ### Conditionally set variables: ###
 
@@ -182,7 +183,10 @@
 except_except.o: $(srcdir)/except.cpp
 	$(CXXC) -c -o $@ $(EXCEPT_CXXFLAGS) $(srcdir)/except.cpp
 
+except_except_utf8.o: $(srcdir)/except_utf8.cpp
+	$(CXXC) -c -o $@ $(EXCEPT_CXXFLAGS) $(srcdir)/except_utf8.cpp
 
+
 # Include dependency info, if present:
 @IF_GNU_MAKE@-include ./.deps/*.d
 
Index: samples/except/makefile.unx
===================================================================
--- samples/except/makefile.unx	(ÉäÉrÉWÉáÉì 73815)
+++ samples/except/makefile.unx	(çÏã∆ÉRÉsÅ[)
@@ -53,7 +53,8 @@
 EXCEPT_CXXFLAGS = -I. `$(WX_CONFIG) --cxxflags $(WX_CONFIG_FLAGS)` $(CPPFLAGS) \
 	$(CXXFLAGS)
 EXCEPT_OBJECTS =  \
-	except_except.o
+	except_except.o \
+	except_except_utf8.o
 
 ### Conditionally set variables: ###
 
@@ -93,6 +94,9 @@
 except_except.o: ./except.cpp
 	$(CXX) -c -o $@ $(EXCEPT_CXXFLAGS) $(CPPDEPS) $<
 
+except_except_utf8.o: ./except_utf8.cpp
+	$(CXX) -c -o $@ $(EXCEPT_CXXFLAGS) $(CPPDEPS) $<
+
 .PHONY: all install uninstall clean
 
 
Index: samples/except/makefile.vc
===================================================================
--- samples/except/makefile.vc	(ÉäÉrÉWÉáÉì 73815)
+++ samples/except/makefile.vc	(çÏã∆ÉRÉsÅ[)
@@ -15,65 +15,66 @@
 WX_RELEASE_NODOT = 29
 COMPILER_PREFIX = vc
 OBJS = \
-	$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WXDLLFLAG)$(CFG)$(ARCH_SUFFIX)
+	$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WXDLLFLAG)$(CFG)$(ARCH_SUFFIX)
 LIBDIRNAME = \
-	.\..\..\lib\$(COMPILER_PREFIX)$(COMPILER_VERSION)$(ARCH_SUFFIX)_$(LIBTYPE_SUFFIX)$(CFG)
+	.\..\..\lib\$(COMPILER_PREFIX)$(COMPILER_VERSION)$(ARCH_SUFFIX)_$(LIBTYPE_SUFFIX)$(CFG)
 SETUPHDIR = \
 	$(LIBDIRNAME)\$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)
 EXCEPT_CXXFLAGS = /M$(__RUNTIME_LIBS_10)$(__DEBUGRUNTIME_4) /DWIN32 \
 	$(__DEBUGINFO_0) /Fd$(OBJS)\except.pdb $(____DEBUGRUNTIME_3_p) \
 	$(__OPTIMIZEFLAG_6) /D_CRT_SECURE_NO_DEPRECATE=1 \
 	/D_CRT_NON_CONFORMING_SWPRINTFS=1 /D_SCL_SECURE_NO_WARNINGS=1 \
-	$(__NO_VC_CRTDBG_p) /D__WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p) \
-	$(__DEBUG_DEFINE_p) $(__NDEBUG_DEFINE_p) $(__EXCEPTIONS_DEFINE_p) \
-	$(__RTTI_DEFINE_p) $(__THREAD_DEFINE_p) $(__UNICODE_DEFINE_p) \
-	$(__MSLU_DEFINE_p) /I$(SETUPHDIR) /I.\..\..\include \
-	$(____CAIRO_INCLUDEDIR_FILENAMES_p) /W4 /I. $(__DLLFLAG_p) /D_WINDOWS \
-	/I.\..\..\samples /DNOPCH $(__RTTIFLAG_11) $(__EXCEPTIONSFLAG_12) \
-	$(CPPFLAGS) $(CXXFLAGS)
+	$(__NO_VC_CRTDBG_p) /D__WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p) \
+	$(__DEBUG_DEFINE_p) $(__NDEBUG_DEFINE_p) $(__EXCEPTIONS_DEFINE_p) \
+	$(__RTTI_DEFINE_p) $(__THREAD_DEFINE_p) $(__UNICODE_DEFINE_p) \
+	$(__MSLU_DEFINE_p) /I$(SETUPHDIR) /I.\..\..\include \
+	$(____CAIRO_INCLUDEDIR_FILENAMES_p) /W4 /I. $(__DLLFLAG_p) /D_WINDOWS \
+	/I.\..\..\samples /DNOPCH $(__RTTIFLAG_11) $(__EXCEPTIONSFLAG_12) \
+	$(CPPFLAGS) $(CXXFLAGS)
 EXCEPT_OBJECTS =  \
-	$(OBJS)\except_except.obj
+	$(OBJS)\except_except.obj \
+	$(OBJS)\except_except_utf8.obj
 EXCEPT_RESOURCES =  \
 	$(OBJS)\except_sample.res
 
 ### Conditionally set variables: ###
 
-!if "$(TOOLKIT)" == "GTK"
-WIN32_TOOLKIT_LOWERCASE = gtk
-!endif
-!if "$(TOOLKIT)" == "MSW"
-WIN32_TOOLKIT_LOWERCASE = msw
-!endif
-!if "$(TARGET_CPU)" == "AMD64"
-ARCH_SUFFIX = _x64
-!endif
-!if "$(TARGET_CPU)" == "IA64"
-ARCH_SUFFIX = _ia64
-!endif
-!if "$(TARGET_CPU)" == "X64"
-ARCH_SUFFIX = _x64
-!endif
-!if "$(TARGET_CPU)" == "amd64"
-ARCH_SUFFIX = _x64
-!endif
-!if "$(TARGET_CPU)" == "ia64"
-ARCH_SUFFIX = _ia64
-!endif
-!if "$(TARGET_CPU)" == "x64"
-ARCH_SUFFIX = _x64
-!endif
+!if "$(TOOLKIT)" == "GTK"
+WIN32_TOOLKIT_LOWERCASE = gtk
+!endif
+!if "$(TOOLKIT)" == "MSW"
+WIN32_TOOLKIT_LOWERCASE = msw
+!endif
+!if "$(TARGET_CPU)" == "AMD64"
+ARCH_SUFFIX = _x64
+!endif
+!if "$(TARGET_CPU)" == "IA64"
+ARCH_SUFFIX = _ia64
+!endif
+!if "$(TARGET_CPU)" == "X64"
+ARCH_SUFFIX = _x64
+!endif
+!if "$(TARGET_CPU)" == "amd64"
+ARCH_SUFFIX = _x64
+!endif
+!if "$(TARGET_CPU)" == "ia64"
+ARCH_SUFFIX = _ia64
+!endif
+!if "$(TARGET_CPU)" == "x64"
+ARCH_SUFFIX = _x64
+!endif
 !if "$(USE_GUI)" == "0"
 PORTNAME = base
 !endif
 !if "$(USE_GUI)" == "1"
-PORTNAME = $(WIN32_TOOLKIT_LOWERCASE)$(TOOLKIT_VERSION)
-!endif
-!if "$(TOOLKIT)" == "MAC"
-WXBASEPORT = _carbon
-!endif
-!if "$(OFFICIAL_BUILD)" == "1"
-COMPILER_VERSION = ERROR-COMPILER-VERSION-MUST-BE-SET-FOR-OFFICIAL-BUILD
+PORTNAME = $(WIN32_TOOLKIT_LOWERCASE)$(TOOLKIT_VERSION)
 !endif
+!if "$(TOOLKIT)" == "MAC"
+WXBASEPORT = _carbon
+!endif
+!if "$(OFFICIAL_BUILD)" == "1"
+COMPILER_VERSION = ERROR-COMPILER-VERSION-MUST-BE-SET-FOR-OFFICIAL-BUILD
+!endif
 !if "$(BUILD)" == "debug" && "$(DEBUG_RUNTIME_LIBS)" == "default"
 WXDEBUGFLAG = d
 !endif
@@ -101,29 +102,29 @@
 !if "$(TARGET_CPU)" == "IA64"
 LINK_TARGET_CPU = /MACHINE:IA64
 !endif
-!if "$(TARGET_CPU)" == "X64"
-LINK_TARGET_CPU = /MACHINE:X64
-!endif
+!if "$(TARGET_CPU)" == "X64"
+LINK_TARGET_CPU = /MACHINE:X64
+!endif
 !if "$(TARGET_CPU)" == "amd64"
 LINK_TARGET_CPU = /MACHINE:X64
 !endif
 !if "$(TARGET_CPU)" == "ia64"
 LINK_TARGET_CPU = /MACHINE:IA64
 !endif
-!if "$(TARGET_CPU)" == "x64"
-LINK_TARGET_CPU = /MACHINE:X64
-!endif
+!if "$(TARGET_CPU)" == "x64"
+LINK_TARGET_CPU = /MACHINE:X64
+!endif
 !if "$(MONOLITHIC)" == "0"
 EXTRALIBS_FOR_BASE = 
 !endif
 !if "$(MONOLITHIC)" == "1"
 EXTRALIBS_FOR_BASE =   
 !endif
-!if "$(TOOLKIT)" == "GTK" && "$(TOOLKIT_VERSION)" == "2"
-LIB_GTK = gtk-win32-2.0.lib gdk-win32-2.0.lib pangocairo-1.0.lib \
-	gdk_pixbuf-2.0.lib cairo.lib pango-1.0.lib gobject-2.0.lib gthread-2.0.lib \
-	glib-2.0.lib
-!endif
+!if "$(TOOLKIT)" == "GTK" && "$(TOOLKIT_VERSION)" == "2"
+LIB_GTK = gtk-win32-2.0.lib gdk-win32-2.0.lib pangocairo-1.0.lib \
+	gdk_pixbuf-2.0.lib cairo.lib pango-1.0.lib gobject-2.0.lib gthread-2.0.lib \
+	glib-2.0.lib
+!endif
 !if "$(BUILD)" == "debug" && "$(DEBUG_INFO)" == "default"
 __DEBUGINFO_0 = /Zi
 !endif
@@ -328,7 +329,7 @@
 !endif
 !if "$(MONOLITHIC)" == "0"
 __WXLIB_BASE_p = \
-	wxbase$(WXBASEPORT)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).lib
+	wxbase$(WXBASEPORT)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).lib
 !endif
 !if "$(MONOLITHIC)" == "1"
 __WXLIB_MONO_p = \
@@ -372,12 +373,15 @@
 
 $(OBJS)\except.exe: $(EXCEPT_OBJECTS) $(OBJS)\except_sample.res
 	link /NOLOGO /OUT:$@  $(__DEBUGINFO_1) /pdb:"$(OBJS)\except.pdb" $(__DEBUGINFO_2)  $(LINK_TARGET_CPU) /LIBPATH:$(LIBDIRNAME) /SUBSYSTEM:WINDOWS $(____CAIRO_LIBDIR_FILENAMES_p) $(LDFLAGS) @<<
-	$(EXCEPT_OBJECTS) $(EXCEPT_RESOURCES)  $(__WXLIB_CORE_p)  $(__WXLIB_BASE_p)  $(__WXLIB_MONO_p) $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p) $(LIB_GTK)  wxzlib$(WXDEBUGFLAG).lib wxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).lib wxexpat$(WXDEBUGFLAG).lib $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__CAIRO_LIB_p) kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib wininet.lib
+	$(EXCEPT_OBJECTS) $(EXCEPT_RESOURCES)  $(__WXLIB_CORE_p)  $(__WXLIB_BASE_p)  $(__WXLIB_MONO_p) $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p) $(LIB_GTK)  wxzlib$(WXDEBUGFLAG).lib wxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).lib wxexpat$(WXDEBUGFLAG).lib $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__CAIRO_LIB_p) kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib wininet.lib
 <<
 
 $(OBJS)\except_sample.res: .\..\..\samples\sample.rc
-	rc /fo$@  /d WIN32 $(____DEBUGRUNTIME_3_p_1) /d _CRT_SECURE_NO_DEPRECATE=1 /d _CRT_NON_CONFORMING_SWPRINTFS=1 /d _SCL_SECURE_NO_WARNINGS=1 $(__NO_VC_CRTDBG_p_1)  /d __WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p_1) $(__DEBUG_DEFINE_p_1) $(__NDEBUG_DEFINE_p_1) $(__EXCEPTIONS_DEFINE_p_1) $(__RTTI_DEFINE_p_1) $(__THREAD_DEFINE_p_1) $(__UNICODE_DEFINE_p_1) $(__MSLU_DEFINE_p_1) /i $(SETUPHDIR) /i .\..\..\include $(____CAIRO_INCLUDEDIR_FILENAMES_1_p) /i . $(__DLLFLAG_p_1) /d _WINDOWS /i .\..\..\samples /d NOPCH .\..\..\samples\sample.rc
+	rc /fo$@  /d WIN32 $(____DEBUGRUNTIME_3_p_1) /d _CRT_SECURE_NO_DEPRECATE=1 /d _CRT_NON_CONFORMING_SWPRINTFS=1 /d _SCL_SECURE_NO_WARNINGS=1 $(__NO_VC_CRTDBG_p_1)  /d __WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p_1) $(__DEBUG_DEFINE_p_1) $(__NDEBUG_DEFINE_p_1) $(__EXCEPTIONS_DEFINE_p_1) $(__RTTI_DEFINE_p_1) $(__THREAD_DEFINE_p_1) $(__UNICODE_DEFINE_p_1) $(__MSLU_DEFINE_p_1) /i $(SETUPHDIR) /i .\..\..\include $(____CAIRO_INCLUDEDIR_FILENAMES_1_p) /i . $(__DLLFLAG_p_1) /d _WINDOWS /i .\..\..\samples /d NOPCH .\..\..\samples\sample.rc
 
 $(OBJS)\except_except.obj: .\except.cpp
 	$(CXX) /c /nologo /TP /Fo$@ $(EXCEPT_CXXFLAGS) .\except.cpp
 
+$(OBJS)\except_except_utf8.obj: .\except_utf8.cpp
+	$(CXX) /c /nologo /TP /Fo$@ $(EXCEPT_CXXFLAGS) .\except_utf8.cpp
+
Index: samples/except/makefile.wat
===================================================================
--- samples/except/makefile.wat	(ÉäÉrÉWÉáÉì 73815)
+++ samples/except/makefile.wat	(çÏã∆ÉRÉsÅ[)
@@ -31,28 +31,28 @@
 
 ### Conditionally set variables: ###
 
-WIN32_TOOLKIT_LOWERCASE =
-!ifeq TOOLKIT GTK
-WIN32_TOOLKIT_LOWERCASE = gtk
-!endif
-!ifeq TOOLKIT MSW
-WIN32_TOOLKIT_LOWERCASE = msw
-!endif
+WIN32_TOOLKIT_LOWERCASE =
+!ifeq TOOLKIT GTK
+WIN32_TOOLKIT_LOWERCASE = gtk
+!endif
+!ifeq TOOLKIT MSW
+WIN32_TOOLKIT_LOWERCASE = msw
+!endif
 PORTNAME =
 !ifeq USE_GUI 0
 PORTNAME = base
 !endif
 !ifeq USE_GUI 1
-PORTNAME = $(WIN32_TOOLKIT_LOWERCASE)$(TOOLKIT_VERSION)
-!endif
-WXBASEPORT =
-!ifeq TOOLKIT MAC
-WXBASEPORT = _carbon
-!endif
-COMPILER_VERSION =
-!ifeq OFFICIAL_BUILD 1
-COMPILER_VERSION = ERROR-COMPILER-VERSION-MUST-BE-SET-FOR-OFFICIAL-BUILD
+PORTNAME = $(WIN32_TOOLKIT_LOWERCASE)$(TOOLKIT_VERSION)
 !endif
+WXBASEPORT =
+!ifeq TOOLKIT MAC
+WXBASEPORT = _carbon
+!endif
+COMPILER_VERSION =
+!ifeq OFFICIAL_BUILD 1
+COMPILER_VERSION = ERROR-COMPILER-VERSION-MUST-BE-SET-FOR-OFFICIAL-BUILD
+!endif
 WXDEBUGFLAG =
 !ifeq BUILD debug
 WXDEBUGFLAG = d
@@ -83,14 +83,14 @@
 !ifeq MONOLITHIC 1
 EXTRALIBS_FOR_BASE =   
 !endif
-LIB_GTK =
-!ifeq TOOLKIT GTK
-!ifeq TOOLKIT_VERSION 2
-LIB_GTK = gtk-win32-2.0.lib gdk-win32-2.0.lib pangocairo-1.0.lib &
-	gdk_pixbuf-2.0.lib cairo.lib pango-1.0.lib gobject-2.0.lib gthread-2.0.lib &
-	glib-2.0.lib
-!endif
-!endif
+LIB_GTK =
+!ifeq TOOLKIT GTK
+!ifeq TOOLKIT_VERSION 2
+LIB_GTK = gtk-win32-2.0.lib gdk-win32-2.0.lib pangocairo-1.0.lib &
+	gdk_pixbuf-2.0.lib cairo.lib pango-1.0.lib gobject-2.0.lib gthread-2.0.lib &
+	glib-2.0.lib
+!endif
+!endif
 __DEBUGINFO_0 =
 !ifeq BUILD debug
 !ifeq DEBUG_INFO default
@@ -168,7 +168,7 @@
 __WXLIB_BASE_p =
 !ifeq MONOLITHIC 0
 __WXLIB_BASE_p = &
-	wxbase$(WXBASEPORT)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).lib
+	wxbase$(WXBASEPORT)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).lib
 !endif
 __WXLIB_MONO_p =
 !ifeq MONOLITHIC 1
@@ -240,20 +240,21 @@
 WX_RELEASE_NODOT = 29
 COMPILER_PREFIX = wat
 OBJS = &
-	$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WXDLLFLAG)$(CFG)
-LIBDIRNAME = &
-	.\..\..\lib\$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(LIBTYPE_SUFFIX)$(CFG)
+	$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WXDLLFLAG)$(CFG)
+LIBDIRNAME = &
+	.\..\..\lib\$(COMPILER_PREFIX)$(COMPILER_VERSION)_$(LIBTYPE_SUFFIX)$(CFG)
 SETUPHDIR = &
 	$(LIBDIRNAME)\$(PORTNAME)$(WXUNIVNAME)$(WXUNICODEFLAG)$(WXDEBUGFLAG)
 EXCEPT_CXXFLAGS = $(__DEBUGINFO_0) $(__OPTIMIZEFLAG_2) $(__THREADSFLAG_5) &
-	$(__RUNTIME_LIBS_6) -d__WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p) &
-	$(__DEBUG_DEFINE_p) $(__NDEBUG_DEFINE_p) $(__EXCEPTIONS_DEFINE_p) &
-	$(__RTTI_DEFINE_p) $(__THREAD_DEFINE_p) $(__UNICODE_DEFINE_p) &
-	-i=$(SETUPHDIR) -i=.\..\..\include $(____CAIRO_INCLUDEDIR_FILENAMES) -wx &
-	-wcd=549 -wcd=656 -wcd=657 -wcd=667 -i=. $(__DLLFLAG_p) -i=.\..\..\samples &
-	-dNOPCH $(__RTTIFLAG_7) $(__EXCEPTIONSFLAG_8) $(CPPFLAGS) $(CXXFLAGS)
+	$(__RUNTIME_LIBS_6) -d__WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p) &
+	$(__DEBUG_DEFINE_p) $(__NDEBUG_DEFINE_p) $(__EXCEPTIONS_DEFINE_p) &
+	$(__RTTI_DEFINE_p) $(__THREAD_DEFINE_p) $(__UNICODE_DEFINE_p) &
+	-i=$(SETUPHDIR) -i=.\..\..\include $(____CAIRO_INCLUDEDIR_FILENAMES) -wx &
+	-wcd=549 -wcd=656 -wcd=657 -wcd=667 -i=. $(__DLLFLAG_p) -i=.\..\..\samples &
+	-dNOPCH $(__RTTIFLAG_7) $(__EXCEPTIONSFLAG_8) $(CPPFLAGS) $(CXXFLAGS)
 EXCEPT_OBJECTS =  &
-	$(OBJS)\except_except.obj
+	$(OBJS)\except_except.obj &
+	$(OBJS)\except_except_utf8.obj
 
 
 all : $(OBJS)
@@ -279,14 +280,17 @@
 	@%append $(OBJS)\except.lbc option caseexact
 	@%append $(OBJS)\except.lbc  $(__DEBUGINFO_1)  libpath $(LIBDIRNAME) system nt_win ref '_WinMain@16' $(____CAIRO_LIBDIR_FILENAMES_p) $(LDFLAGS)
 	@for %i in ($(EXCEPT_OBJECTS)) do @%append $(OBJS)\except.lbc file %i
-	@for %i in ( $(__WXLIB_CORE_p)  $(__WXLIB_BASE_p)  $(__WXLIB_MONO_p) $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p) $(LIB_GTK)  wxzlib$(WXDEBUGFLAG).lib wxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).lib wxexpat$(WXDEBUGFLAG).lib $(EXTRALIBS_FOR_BASE)  $(__CAIRO_LIB_p) kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib wininet.lib) do @%append $(OBJS)\except.lbc library %i
+	@for %i in ( $(__WXLIB_CORE_p)  $(__WXLIB_BASE_p)  $(__WXLIB_MONO_p) $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p) $(LIB_GTK)  wxzlib$(WXDEBUGFLAG).lib wxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).lib wxexpat$(WXDEBUGFLAG).lib $(EXTRALIBS_FOR_BASE)  $(__CAIRO_LIB_p) kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib wininet.lib) do @%append $(OBJS)\except.lbc library %i
 	@%append $(OBJS)\except.lbc option resource=$(OBJS)\except_sample.res
 	@for %i in () do @%append $(OBJS)\except.lbc option stack=%i
 	wlink @$(OBJS)\except.lbc
 
 $(OBJS)\except_sample.res :  .AUTODEPEND .\..\..\samples\sample.rc
-	wrc -q -ad -bt=nt -r -fo=$^@    -d__WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p) $(__DEBUG_DEFINE_p) $(__NDEBUG_DEFINE_p) $(__EXCEPTIONS_DEFINE_p) $(__RTTI_DEFINE_p) $(__THREAD_DEFINE_p) $(__UNICODE_DEFINE_p)  -i=$(SETUPHDIR) -i=.\..\..\include $(____CAIRO_INCLUDEDIR_FILENAMES) -i=. $(__DLLFLAG_p) -i=.\..\..\samples -dNOPCH $<
+	wrc -q -ad -bt=nt -r -fo=$^@    -d__WX$(TOOLKIT)__ $(__WXUNIV_DEFINE_p) $(__DEBUG_DEFINE_p) $(__NDEBUG_DEFINE_p) $(__EXCEPTIONS_DEFINE_p) $(__RTTI_DEFINE_p) $(__THREAD_DEFINE_p) $(__UNICODE_DEFINE_p)  -i=$(SETUPHDIR) -i=.\..\..\include $(____CAIRO_INCLUDEDIR_FILENAMES) -i=. $(__DLLFLAG_p) -i=.\..\..\samples -dNOPCH $<
 
 $(OBJS)\except_except.obj :  .AUTODEPEND .\except.cpp
 	$(CXX) -bt=nt -zq -fo=$^@ $(EXCEPT_CXXFLAGS) $<
 
+$(OBJS)\except_except_utf8.obj :  .AUTODEPEND .\except_utf8.cpp
+	$(CXX) -bt=nt -zq -fo=$^@ $(EXCEPT_CXXFLAGS) $<
+
