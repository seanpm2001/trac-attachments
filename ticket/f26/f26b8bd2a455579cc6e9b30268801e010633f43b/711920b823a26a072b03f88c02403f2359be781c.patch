Index: src/generic/grid.cpp
===================================================================
--- src/generic/grid.cpp	(r‚vision 64459)
+++ src/generic/grid.cpp	(copie de travail)
@@ -6261,7 +6260,9 @@
         else if ( line > 0 &&
                     pos - oper.GetLineStartPos(this,
                                                line) < WXGRID_LABEL_EDGE_ZONE )
-            return line - 1;
+		{
+			return oper.GetPreviousLineAt(this, line);
+		}
     }
 
     return -1;
Index: interface/wx/grid.h
===================================================================
--- interface/wx/grid.h	(r‚vision 64459)
+++ interface/wx/grid.h	(copie de travail)
@@ -3071,6 +3071,12 @@
     */
     int GetColAt(int colPos) const;
 
+	/**
+        Returns the column ID of the column position just before 
+		the specified column position.
+    */
+    int GetPreviousColAt(int colPos) const;
+
     /**
         Returns the position of the specified column.
     */
Index: include/wx/grid.h
===================================================================
--- include/wx/grid.h	(r‚vision 64459)
+++ include/wx/grid.h	(copie de travail)
@@ -1372,6 +1372,31 @@
         return m_colAt.empty() ? pos : m_colAt[pos];
     }
 
+	// return the column index corresponding to the column at left of the current 
+	// given (valid) position
+	int GetPreviousColAt(int pos) const
+	{
+		if (m_colAt.empty() == true) {
+			if ( ( pos - 1) >= 0 )
+				return (pos - 1);
+			else
+				return pos;
+		}
+
+		for ( int i = 0; i < m_numCols; i++ ) 
+		{
+			if (m_colAt[i] == pos) {
+				// If current column is the first one, return current column
+				if (i == 0) return pos;
+
+				// If not, return the column at left (Previous)
+				return m_colAt[i-1];
+			}
+		}
+
+		return pos;
+	}
+	
     // reorder the columns so that the column with the given index is now shown
     // as the position pos
     void SetColPos(int idx, int pos);
Index: include/wx/private/grid.h
===================================================================
--- include/wx/private/grid.h	(r‚vision 64459)
+++ include/wx/private/grid.h	(copie de travail)
@@ -517,6 +517,8 @@
     //     implemented for the lines
     virtual int GetLineAt(const wxGrid *grid, int line) const = 0;
 
+	// Return the index of the line just before the given position
+	virtual int GetPreviousLineAt(const wxGrid* grid, int line) const = 0;
 
     // Get the row or column label window
     virtual wxWindow *GetHeaderWindow(wxGrid *grid) const = 0;
@@ -585,6 +587,9 @@
     virtual int GetLineAt(const wxGrid * WXUNUSED(grid), int line) const
         { return line; } // TODO: implement row reordering
 
+	virtual int GetPreviousLineAt(const wxGrid* WXUNUSED(grid), int line) const 
+		{ return (line > 0 ? line - 1 : line); }
+
     virtual wxWindow *GetHeaderWindow(wxGrid *grid) const
         { return grid->GetGridRowLabelWindow(); }
     virtual int GetHeaderWindowSize(wxGrid *grid) const
@@ -645,6 +650,9 @@
 
     virtual int GetLineAt(const wxGrid *grid, int line) const
         { return grid->GetColAt(line); }
+	
+	virtual int GetPreviousLineAt(const wxGrid* grid, int line) const 
+		{ return grid->GetPreviousColAt(line); }
 
     virtual wxWindow *GetHeaderWindow(wxGrid *grid) const
         { return grid->GetGridColLabelWindow(); }
