Index: wxWidgets-cvs/include/wx/image.h
--- wxWidgets-cvs/include/wx/image.h	2004-06-23 05:06:04.000000000 -0400
+++ wxWidgets/include/wx/image.h	2004-07-11 11:12:01.375000000 -0400
@@ -240,6 +240,7 @@
     unsigned char *GetAlpha() const;    // may return NULL!
     bool HasAlpha() const { return GetAlpha() != NULL; }
     void SetAlpha(unsigned char *alpha = NULL);
+    void ConvertMaskToAlpha();
 
     // Mask functions
     void SetMaskColour( unsigned char r, unsigned char g, unsigned char b );
Index: wxWidgets-cvs/src/common/image.cpp
--- wxWidgets-cvs/src/common/image.cpp	2004-05-23 16:52:02.000000000 -0400
+++ wxWidgets/src/common/image.cpp	2004-07-11 11:12:50.296875000 -0400
@@ -97,7 +97,8 @@
     if ( !m_static )
         free( m_data );
 
-    free(m_alpha);
+    if (m_alpha)
+        free(m_alpha);
 }
 
 wxList wxImage::sm_handlers;
@@ -817,7 +818,8 @@
         alpha = (unsigned char *)malloc(M_IMGDATA->m_width*M_IMGDATA->m_height);
     }
 
-    delete [] M_IMGDATA->m_alpha;
+    if (M_IMGDATA->m_alpha)
+        free(M_IMGDATA->m_alpha);
     M_IMGDATA->m_alpha = alpha;
 }
 
@@ -828,6 +830,34 @@
     return M_IMGDATA->m_alpha;
 }
 
+void wxImage::ConvertMaskToAlpha()
+{
+    wxCHECK_RET( HasMask(), wxT("no mask to convert to alpha channel") );
+    wxCHECK_RET( !HasAlpha(), wxT("image already has an alpha channel") );
+
+    // Create an alpha channel.
+    SetAlpha();
+
+    // Use the mask color to fill in the alpha channel.
+    unsigned char *src_iter, *dst_iter, *src_end;
+    src_iter = M_IMGDATA->m_data;
+    src_end  = src_iter + 3*(M_IMGDATA->m_width*M_IMGDATA->m_height);
+    dst_iter = M_IMGDATA->m_alpha;
+    unsigned char mr, mg, mb;
+    mr = M_IMGDATA->m_maskRed;
+    mg = M_IMGDATA->m_maskGreen;
+    mb = M_IMGDATA->m_maskBlue;
+    while (src_iter < src_end)
+    {
+        if (src_iter[0] == mr && src_iter[1] == mg && src_iter[2] == mb)
+            *dst_iter++ = 0x00;
+        else
+            *dst_iter++ = 0xFF;
+        src_iter += 3;
+    }
+    M_IMGDATA->m_hasMask = FALSE;
+}
+
 // ----------------------------------------------------------------------------
 // mask support
 // ----------------------------------------------------------------------------

 	  	 
