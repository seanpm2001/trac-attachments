Binary files wxorig/.DS_Store and wxnew/.DS_Store differ
Binary files wxorig/include/.DS_Store and wxnew/include/.DS_Store differ
Binary files wxorig/include/wx/.DS_Store and wxnew/include/wx/.DS_Store differ
Binary files wxorig/include/wx/ribbon/.DS_Store and wxnew/include/wx/ribbon/.DS_Store differ
diff -uNr wxorig/include/wx/ribbon/bar.h wxnew/include/wx/ribbon/bar.h
--- wxorig/include/wx/ribbon/bar.h	2010-11-05 08:59:36.000000000 -0400
+++ wxnew/include/wx/ribbon/bar.h	2010-11-16 18:25:46.000000000 -0500
@@ -115,6 +115,12 @@
     wxRibbonPage* GetPage(int n);
     bool DismissExpandedPanel();
 
+    void ShowPanels(const bool show = true);
+    void HidePanels()
+        { ShowPanels(false); }
+    bool ArePanelsShown() const
+        { return m_panels_are_shown; }
+
     virtual bool HasMultiplePages() const { return true; }
 
     void SetWindowStyleFlag(long style);
@@ -166,6 +172,7 @@
     int m_tab_scroll_left_button_state;
     int m_tab_scroll_right_button_state;
     bool m_tab_scroll_buttons_shown;
+    bool m_panels_are_shown;
 
 #ifndef SWIG
     DECLARE_CLASS(wxRibbonBar)
Binary files wxorig/interface/.DS_Store and wxnew/interface/.DS_Store differ
Binary files wxorig/interface/wx/.DS_Store and wxnew/interface/wx/.DS_Store differ
Binary files wxorig/interface/wx/ribbon/.DS_Store and wxnew/interface/wx/ribbon/.DS_Store differ
diff -uNr wxorig/interface/wx/ribbon/bar.h wxnew/interface/wx/ribbon/bar.h
--- wxorig/interface/wx/ribbon/bar.h	2010-11-05 08:59:40.000000000 -0400
+++ wxnew/interface/wx/ribbon/bar.h	2010-11-16 18:38:14.000000000 -0500
@@ -213,6 +213,21 @@
         for the currently active page, or @false if there is no active page.
     */
     bool DismissExpandedPanel();
+
+    /**
+        Shows or hides the panel area of the ribbon bar. If the panel area is hidden,
+        then only the tab of the ribbon bar will be shown. This is useful for giving the user
+        more screen space to work with when he/she doesn't need to see the ribbon's options.
+    */
+    void ShowPanels(const bool show = true);
+    /**
+        Hides the panel area of the ribbon bar.
+    */
+    void HidePanels();
+    /**
+        Indicates whether the panel area of the ribbon bar is shown.
+    */
+    bool ArePanelsShown() const;
     
     /**
         Perform initial layout and size calculations of the bar and its
diff -uNr wxorig/src/ribbon/bar.cpp wxnew/src/ribbon/bar.cpp
--- wxorig/src/ribbon/bar.cpp	2010-11-05 08:58:44.000000000 -0400
+++ wxnew/src/ribbon/bar.cpp	2010-11-16 18:31:42.000000000 -0500
@@ -109,6 +109,14 @@
     return m_pages.Item(m_current_page).page->DismissExpandedPanel();
 }
 
+void wxRibbonBar::ShowPanels(const bool show)
+{
+    m_panels_are_shown = show;
+    SetMinSize(wxSize(GetSize().GetWidth(), DoGetBestSize().GetHeight()));
+    Realise();
+    GetParent()->Layout();
+}
+
 void wxRibbonBar::SetWindowStyleFlag(long style)
 {
     m_flags = style;
@@ -538,6 +546,7 @@
     m_tab_scroll_left_button_state = wxRIBBON_SCROLL_BTN_NORMAL;
     m_tab_scroll_right_button_state = wxRIBBON_SCROLL_BTN_NORMAL;
     m_tab_scroll_buttons_shown = false;
+    m_panels_are_shown = true;
 }
 
 wxRibbonBar::wxRibbonBar(wxWindow* parent,
@@ -585,6 +594,7 @@
     m_tab_scroll_left_button_state = wxRIBBON_SCROLL_BTN_NORMAL;
     m_tab_scroll_right_button_state = wxRIBBON_SCROLL_BTN_NORMAL;
     m_tab_scroll_buttons_shown = false;
+    m_panels_are_shown = true;
 
     if(m_art == NULL)
     {
@@ -946,7 +956,7 @@
     }
 
     m_minWidth = min_size.GetWidth();
-    m_minHeight = min_size.GetHeight();
+    m_minHeight = m_panels_are_shown ? min_size.GetHeight() : m_tab_height;
 }
 
 wxSize wxRibbonBar::DoGetBestSize() const
@@ -964,6 +974,10 @@
     {
         best.IncBy(0, m_tab_height);
     }
+    if(!m_panels_are_shown)
+    {
+        best.SetHeight(m_tab_height);
+    }
     return best;
 }
 
