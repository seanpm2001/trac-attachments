Index: include/wx/utils.h
===================================================================
26a27
> #include "wx/longlong.h"
233a235,237
> 
> // Get Number of Bytes total on drive 'path' and number of free bytes
> WXDLLEXPORT bool wxGetDiskSpace(const wxString& path, wxLongLong *pTotal, wxLongLong *pFree);

Index: src/common/utilscmn.cpp
===================================================================
1184a1185,1287
> //Markus Fieber, 02-18-2001
> //      returns the remaining, available Number of Bytes on the Drive, 
> //      containing the 'path'
> //  TODO: please check GetDiskFreeSpace(..) on MSW without Win32-API
> //      and parse 'df -k' for all others, I can't do (test) that here..
> //  Remember, to have HD-drives formated as "C:", without trailing '\'
> //      but, UNC names, for sure, WITH trailing '\' like "\\MyServer\MyShare\"
> bool 
> wxGetDiskSpace(const wxString& path, wxLongLong *pTotal, wxLongLong *pFree)
> {
>         if (path.Len() == 0)
>                 return FALSE;
> 
>         LPCTSTR lPath = path.c_str();
> 
> #ifdef __WXMSW__
> #ifdef __WIN32__
>         PULARGE_INTEGER lBytesFreeOnDisk = 0;
>         
>         return (GetDiskFreeSpaceEx(lPath, (PULARGE_INTEGER)pFree, (PULARGE_INTEGER)pTotal, lBytesFreeOnDisk) != 0);
> 
> #else //__WIN16__
>         LPDWORD lSectorsPerCluster,
>                 lBytesPerSector,
>                 lNumberOfFreeClusters,
>                 lTotalNumberOfClusters;
>                 
>         if (GetDiskFreeSpace(lPath, lSectorsPerCluster, lBytesPerSector, lNumberOfFreeClusters, lTotalNumberOfClusters))
>         {
>                 // there's a problem with drives larger than 2GB on non Win32!!
>                 //let's calculate it, nevertheless....
>                 wxLongLong lBytesPerCluster = (wxLongLong)((*lSectorsPerCluster) * (*lBytesPerSector));
> 
>                 *pTotal = (wxLongLong)(lBytesPerCluster * (*lTotalNumberOfClusters));
>                 *pFree = (wxLongLong)(lBytesPerCluster * (*lNumberOfFreeClusters));
> 
>                 return TRUE;
>         }
>         else
>                 return FALSE;
>         
> #endif //__WXMSW__
> #else
> #ifdef __WXMAC__
>         
>         // Macintosh version, by Dominic Mazzoni
>         // include this quick hack if there isn't a c2pstr fn already
>         void my_c2pstr(char *str)
>         {
>                 int len = strlen((const char *)str);
>                 for(int i = len; i > 0; i--)
>                         str[i] = str[i-1];
>                 str[0] = ( len > 255 ? 255 : (char)len );
>         }
>         
>         //long wxGetDiskSpace( const char *path )
>         //{
>         wxString lMacPath = wxUnix2MacFilename(path);
> 
>         // We expect something like ":Macintosh HD:wxWindows:"
>         // and we want to find everything up to the second
>         // colon: "Macintosh HD"
>         char* str = new char[path.Len() + 1];
>         strcpy(str, path.c_str());
> 
>         char *colon2 = &str[1];
>         while(*colon2 && *colon2 != ':')
>                 colon2++;
>         *colon2 = 0;
>         
>         if (*p == ':')
>                 *p++;
>         
>         /* Mac routines want Pascal strings */
>         my_c2pstr(p);
>         
>         HVolumeParam pb;
>         
>         pb.ioCompletion = NULL;
>         pb.ioVolIndex = -1;
>         pb.ioNamePtr = (unsigned char *)p;
>         pb.ioVRefNum = 0;
>         
>         OSErr err = PBHGetVInfo((HParamBlockRec *)&pb, 0);
>         
>         if (err)
>                 return FALSE;
>         
>         *pFree = (wxLongLong)((long)pb.ioVFrBlk)*((long)pb.ioVAlBlkSiz);
>         *pTotal = (wxLongLong)((long)pb.ioVNmAlBlks)*((long)pb.ioVAlBlkSiz);
>         
>         delete[] str;
>         
>         return TRUE;
> 
> #endif //__WXMAC__
>         return FALSE;
> #endif
> }
> 
> 
> 
> 

 	  	 
