diff -ru2 -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' /mnt/temp/donald/wxWindows/wxGTK-2.4.1/config.status /home/donald/wxWindows/wxGTK-2.4.1/config.status

diff -ru2 -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' /mnt/temp/donald/wxWindows/wxGTK-2.4.1/src/common/dbtable.cpp /home/donald/wxWindows/wxGTK-2.4.1/src/common/dbtable.cpp
--- /mnt/temp/donald/wxWindows/wxGTK-2.4.1/src/common/dbtable.cpp	2003-06-08 03:13:13.000000000 -0500
+++ /home/donald/wxWindows/wxGTK-2.4.1/src/common/dbtable.cpp	2003-07-25 15:38:05.000000000 -0500
@@ -537,5 +537,5 @@
         cb = colDefs[i].CbValue;
         if (SQLBindCol(cursor, (UWORD)(i+1), colDefs[i].SqlCtype, (UCHAR*) colDefs[i].PtrDataObj,
-                       colDefs[i].SzDataObj, &cb ) != SQL_SUCCESS)
+                       colDefs[i].SzDataObj, &colDefs[i].CbValue ) != SQL_SUCCESS) // changed by dtaylor on CbValue
           return (pDb->DispAllErrors(henv, hdbc, cursor));
     }
@@ -2430,5 +2444,25 @@
         colDefs[colNo].Null = set;
         if (set)  // Blank out the values in the member variable
+        {
+            colDefs[colNo].CbValue = SQL_NULL_DATA;
             ClearMemberVar(colNo,FALSE);  // Must call with FALSE, or infinite recursion will happen
+        }
+        else
+        {
+            switch(colDefs[colNo].DbDataType)
+            {
+                case DB_DATA_TYPE_VARCHAR:
+                    colDefs[colNo].CbValue = SQL_NTS;
+                    break;
+                case DB_DATA_TYPE_INTEGER:
+                case DB_DATA_TYPE_FLOAT:
+                case DB_DATA_TYPE_DATE:
+                    colDefs[colNo].CbValue = 0;
+                    break;
+                case DB_DATA_TYPE_BLOB:
+                    colDefs[colNo].CbValue = SQL_LEN_DATA_AT_EXEC(colDefs[colNo].SzDataObj);
+                    break;
+            }
+        }
         return(TRUE);
     }
@@ -2453,5 +2487,25 @@
         colDefs[i].Null = set;
         if (set)  // Blank out the values in the member variable
+        {
+            colDefs[i].CbValue = SQL_NULL_DATA;
             ClearMemberVar(i,FALSE);  // Must call with FALSE, or infinite recursion will happen
+        }
+        else
+        {
+            switch(colDefs[i].DbDataType)
+            {
+                case DB_DATA_TYPE_VARCHAR:
+                    colDefs[i].CbValue = SQL_NTS;
+                    break;
+                case DB_DATA_TYPE_INTEGER:
+                case DB_DATA_TYPE_FLOAT:
+                case DB_DATA_TYPE_DATE:
+                    colDefs[i].CbValue = 0;
+                    break;
+                case DB_DATA_TYPE_BLOB:
+                    colDefs[i].CbValue = SQL_LEN_DATA_AT_EXEC(colDefs[i].SzDataObj);
+                    break;
+            }
+        }
         return(TRUE);
     }


 	  	 
