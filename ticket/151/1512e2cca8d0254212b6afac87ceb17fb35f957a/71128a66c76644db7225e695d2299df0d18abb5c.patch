diff -ru2 -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' /home/donald/wxWindows-2.5.1/src/common/dbtable.cpp /home/donald/tmp/wxWindows-2.5.1/src/common/dbtable.cpp
--- /home/donald/wxWindows-2.5.1/src/common/dbtable.cpp	2004-03-21 18:40:45.000000000 -0600
+++ /home/donald/tmp/wxWindows-2.5.1/src/common/dbtable.cpp	2003-11-07 11:38:52.000000000 -0600
@@ -544,6 +544,5 @@
         cb = colDefs[i].CbValue;
         if (SQLBindCol(cursor, (UWORD)(i+1), colDefs[i].SqlCtype, (UCHAR*) colDefs[i].PtrDataObj,
-//                     colDefs[i].SzDataObj, &cb ) != SQL_SUCCESS)
-                       colDefs[i].SzDataObj, &colDefs[i].CbValue ) != SQL_SUCCESS) // changed by dtaylor on CbValue
+                       colDefs[i].SzDataObj, &cb ) != SQL_SUCCESS)
           return (pDb->DispAllErrors(henv, hdbc, cursor));
     }
@@ -1279,5 +1278,4 @@
                     colValue.Printf(wxT("'%s'"), (UCHAR FAR *) colDefs[colNo].PtrDataObj);
                     break;
-                case SQL_C_SHORT:       // dtaylor fix missing
                 case SQL_C_SSHORT:
                     colValue.Printf(wxT("%hi"), *((SWORD *) colDefs[colNo].PtrDataObj));
@@ -1286,5 +1284,4 @@
                     colValue.Printf(wxT("%hu"), *((UWORD *) colDefs[colNo].PtrDataObj));
                     break;
-                case SQL_C_LONG:        // dtaylor fix missing 
                 case SQL_C_SLONG:
                     colValue.Printf(wxT("%li"), *((SDWORD *) colDefs[colNo].PtrDataObj));
@@ -1299,13 +1296,4 @@
                     colValue.Printf(wxT("%.6f"), *((SDOUBLE *) colDefs[colNo].PtrDataObj));
                     break;
-                // added default by dtaylor to trap unknown columns types
-                default:
-                    {
-                        wxString strMsg;
-                        strMsg.Printf(wxT("wxDbTable::bindParams(): Unknown column type for colDefs %d colName %s"),
-                                    colNo,colDefs[colNo].ColName);
-                        wxFAIL_MSG(wxT(strMsg));
-                    }
-                    break;
             }
             pWhereClause += colValue;
@@ -2515,21 +2503,4 @@
            ClearMemberVar(colNo,FALSE);  // Must call with FALSE, or infinite recursion will happen
         }
-        else    // added by dtaylor 
-        {
-            switch(colDefs[colNo].DbDataType)
-            {
-                case DB_DATA_TYPE_VARCHAR:
-                    colDefs[colNo].CbValue = SQL_NTS;
-                    break;
-                case DB_DATA_TYPE_INTEGER:
-                case DB_DATA_TYPE_FLOAT:
-                case DB_DATA_TYPE_DATE:
-                    colDefs[colNo].CbValue = 0;
-                    break;
-                case DB_DATA_TYPE_BLOB:
-                    colDefs[colNo].CbValue = SQL_LEN_DATA_AT_EXEC(colDefs[colNo].SzDataObj);
-                    break;
-            }
-        }
         return(TRUE);
     }
@@ -2558,21 +2529,4 @@
            ClearMemberVar(colNo,FALSE);  // Must call with FALSE, or infinite recursion will happen
         }
-        else    // added by dtaylor
-        {
-            switch(colDefs[colNo].DbDataType)
-            {
-                case DB_DATA_TYPE_VARCHAR:
-                    colDefs[colNo].CbValue = SQL_NTS;
-                    break;
-                case DB_DATA_TYPE_INTEGER:
-                case DB_DATA_TYPE_FLOAT:
-                case DB_DATA_TYPE_DATE:
-                    colDefs[colNo].CbValue = 0;
-                    break;
-                case DB_DATA_TYPE_BLOB:
-                    colDefs[colNo].CbValue = SQL_LEN_DATA_AT_EXEC(colDefs[colNo].SzDataObj);
-                    break;
-            }
-        }
         return(TRUE);
     }

 	  	 
