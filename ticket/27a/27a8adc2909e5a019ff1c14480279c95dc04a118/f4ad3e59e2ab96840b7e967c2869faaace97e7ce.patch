diff --git a/include/wx/event.h b/include/wx/event.h
index 9b2572a..e07aaf0 100644
--- a/include/wx/event.h
+++ b/include/wx/event.h
@@ -2273,15 +2273,21 @@ public:
     wxActivateEvent(wxEventType type = wxEVT_NULL, bool active = true,
                     int Id = 0, Reason activationReason = Reason_Unknown)
         : wxEvent(Id, type),
-        m_activationReason(activationReason)
+        m_activationReason(activationReason),
+#ifdef __WXMSW__
+        m_minimized(false),
+#endif
+        m_active(active)
     {
-        m_active = active;
     }
     wxActivateEvent(const wxActivateEvent& event)
         : wxEvent(event)
     {
         m_active = event.m_active;
         m_activationReason = event.m_activationReason;
+#ifdef __WXMSW__
+        m_minimized = event.m_minimized;
+#endif
     }
 
     bool GetActive() const { return m_active; }
@@ -2291,10 +2297,22 @@ public:
 
 private:
     bool m_active;
+#ifdef __WXMSW__
+    bool m_minimized;
+#endif
     Reason m_activationReason;
 
 private:
     wxDECLARE_DYNAMIC_CLASS_NO_ASSIGN(wxActivateEvent);
+
+#ifdef __WXMSW__
+    void SetMinimized(bool minimized) { m_minimized = minimized; }
+    bool GetMinimized() const { return m_minimized; }
+
+    friend class wxWindow;
+    friend class wxWindowMSW;
+    friend class wxTopLevelWindowMSW;
+#endif
 };
 
 // InitDialog event class
diff --git a/src/msw/toplevel.cpp b/src/msw/toplevel.cpp
index e71c58a..63cfe69 100644
--- a/src/msw/toplevel.cpp
+++ b/src/msw/toplevel.cpp
@@ -1373,7 +1373,11 @@ void wxTopLevelWindowMSW::OnActivate(wxActivateEvent& event)
         // We get WM_ACTIVATE before being restored from iconized state, so we
         // can be still iconized here. In this case, avoid restoring the focus
         // as it doesn't work anyhow and we will do when we're really restored.
-        if ( m_iconized )
+        // However WM_ACTIVATE can also occur prior to WM_SIZE event which sets
+        // the m_iconized value. This happens when a window is minimized by left
+        // clicking on the task bar icon. Therefore use event.GetMinimized()
+        // to find out if this is a WM_ACTIVATE for a minimized window.
+        if ( m_iconized || event.GetMinimized())
         {
             event.Skip();
             return;
diff --git a/src/msw/window.cpp b/src/msw/window.cpp
index bfa3efd..03078be 100644
--- a/src/msw/window.cpp
+++ b/src/msw/window.cpp
@@ -4044,7 +4044,7 @@ bool wxWindowMSW::HandleDestroy()
 // ---------------------------------------------------------------------------
 
 bool wxWindowMSW::HandleActivate(int state,
-                              bool WXUNUSED(minimized),
+                              bool minimized,
                               WXHWND WXUNUSED(activate))
 {
     wxActivateEvent event(wxEVT_ACTIVATE,
@@ -4054,6 +4054,7 @@ bool wxWindowMSW::HandleActivate(int state,
                             ? wxActivateEvent::Reason_Mouse
                             : wxActivateEvent::Reason_Unknown);
     event.SetEventObject(this);
+    event.SetMinimized(minimized);
 
     return HandleWindowEvent(event);
 }
