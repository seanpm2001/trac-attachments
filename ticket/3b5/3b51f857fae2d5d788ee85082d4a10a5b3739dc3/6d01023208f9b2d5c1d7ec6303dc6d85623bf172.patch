Index: include/wx/ribbon/bar.h
===================================================================
--- include/wx/ribbon/bar.h	(revision 74107)
+++ include/wx/ribbon/bar.h	(working copy)
@@ -132,6 +132,11 @@
 
     void DeletePage(size_t n);
     void ClearPages();
+    
+    void SwapPage(size_t page1, size_t page2);
+    void SwapPage(wxRibbonPage* page1, wxRibbonPage* page2);
+    void InsertPage(size_t page, int atpos);
+    void InsertPage(wxRibbonPage* page, int atpos);
 
     bool IsPageShown(size_t page) const;
     void ShowPage(size_t page, bool show = true);
Index: interface/wx/ribbon/bar.h
===================================================================
--- interface/wx/ribbon/bar.h	(revision 74107)
+++ interface/wx/ribbon/bar.h	(working copy)
@@ -347,6 +347,54 @@
         @since 2.9.2
     */
     bool ArePanelsShown() const;
+
+    /**
+        Inserts a page at a given index location.
+
+        @param page
+            The zero-based index of the page to be inserted.
+        @param atpos
+            The zero-based index position where the page needs to be inserted.
+
+        @see SwapPage()        
+    */
+    void InsertPage(size_t page, int atpos);
+
+    /**
+        Inserts a page at a given index location.
+
+        @param page
+            The wxRibbonPage page to be inserted.
+        @param atpos
+            The zero-based index position where the page needs to be inserted.
+
+        @see SwapPage()        
+    */
+    void InsertPage(wxRibbonPage* page, int atpos);
+
+    /**
+        Swaps two pages.
+
+        @param page1
+            The zero-based index of the first page.
+        @param page2
+            The zero-based index of the second page.
+
+        @see InsertPage()        
+    */
+    void SwapPage(size_t page1, size_t page2);
+
+    /**
+        Swaps two pages.
+
+        @param page1
+            First wxRibbonPage to swap
+        @param page2
+            Second wxRibbonPage to swap
+
+        @see InsertPage()        
+    */
+    void SwapPage(wxRibbonPage* page1, wxRibbonPage* page2);
     
     /**
         Perform initial layout and size calculations of the bar and its
Index: samples/ribbon/ribbondemo.cpp
===================================================================
--- samples/ribbon/ribbondemo.cpp	(revision 74107)
+++ samples/ribbon/ribbondemo.cpp	(working copy)
@@ -85,7 +85,9 @@
         ID_UI_CHANGE_TEXT_UPDATED,
         ID_REMOVE_PAGE,
         ID_HIDE_PAGES,
-        ID_SHOW_PAGES
+        ID_SHOW_PAGES,
+        ID_SWAP_PAGE,
+        ID_INSERT_PAGE
     };
 
     void OnEnableUpdateUI(wxUpdateUIEvent& evt);
@@ -135,6 +137,8 @@
     void OnRemovePage(wxRibbonButtonBarEvent& evt);
     void OnHidePages(wxRibbonButtonBarEvent& evt);
     void OnShowPages(wxRibbonButtonBarEvent& evt);
+    void OnSwapPage(wxRibbonButtonBarEvent& evt);
+    void OnInsertPage(wxRibbonButtonBarEvent& evt);
     void OnTogglePanels(wxCommandEvent& evt);
     void OnRibbonBarToggled(wxRibbonBarEvent& evt);
     void OnRibbonBarHelpClicked(wxRibbonBarEvent& evt);
@@ -242,6 +246,8 @@
 EVT_RIBBONBUTTONBAR_CLICKED(ID_REMOVE_PAGE, MyFrame::OnRemovePage)
 EVT_RIBBONBUTTONBAR_CLICKED(ID_HIDE_PAGES, MyFrame::OnHidePages)
 EVT_RIBBONBUTTONBAR_CLICKED(ID_SHOW_PAGES, MyFrame::OnShowPages)
+EVT_RIBBONBUTTONBAR_CLICKED(ID_SWAP_PAGE, MyFrame::OnSwapPage)
+EVT_RIBBONBUTTONBAR_CLICKED(ID_INSERT_PAGE, MyFrame::OnInsertPage)
 EVT_RIBBONBAR_TOGGLED(wxID_ANY, MyFrame::OnRibbonBarToggled)
 EVT_RIBBONBAR_HELP_CLICK(wxID_ANY, MyFrame::OnRibbonBarHelpClicked)
 EVT_SIZE(MyFrame::OnSizeEvent)
@@ -419,6 +425,8 @@
         bar->AddButton(ID_REMOVE_PAGE, wxT("Remove"), wxArtProvider::GetBitmap(wxART_DELETE, wxART_OTHER, wxSize(24, 24)));
         bar->AddButton(ID_HIDE_PAGES, wxT("Hide Pages"), ribbon_xpm);
         bar->AddButton(ID_SHOW_PAGES, wxT("Show Pages"), ribbon_xpm);
+        bar->AddButton(ID_SWAP_PAGE, wxT("Swap page"), ribbon_xpm);
+        bar->AddButton(ID_INSERT_PAGE, wxT("Insert page"), ribbon_xpm);
     }
     new wxRibbonPage(m_ribbon, wxID_ANY, wxT("Highlight Page"), empty_xpm);
     m_ribbon->AddPageHighlight(m_ribbon->GetPageCount()-1);
@@ -1039,6 +1047,22 @@
     m_ribbon->Realize();
 }
 
+void MyFrame::OnSwapPage(wxRibbonButtonBarEvent& WXUNUSED(evt))
+{
+    AddText( wxString::Format("SwapPage(%d, %d)", 
+        m_ribbon->GetActivePage(), 2));
+    m_ribbon->SwapPage(m_ribbon->GetActivePage(), 1);
+    m_ribbon->Realize();
+}
+
+void MyFrame::OnInsertPage(wxRibbonButtonBarEvent& WXUNUSED(evt))
+{
+    AddText("Inserted new page at 4th Position");
+    wxRibbonPage *insertPage = new wxRibbonPage(m_ribbon, -1, "Inserted Page");
+    m_ribbon->InsertPage(m_ribbon->GetPageNumber(insertPage), 3);
+    m_ribbon->Realize();
+}
+
 void MyFrame::OnRibbonBarToggled(wxRibbonBarEvent& WXUNUSED(evt))
 {
     AddText(wxString::Format("Ribbon bar %s.",
Index: src/ribbon/bar.cpp
===================================================================
--- src/ribbon/bar.cpp	(revision 74107)
+++ src/ribbon/bar.cpp	(working copy)
@@ -394,6 +394,75 @@
     Refresh();
 }
 
+void wxRibbonBar::SwapPage(size_t page, size_t pos)
+{
+    if((page >= m_pages.GetCount()) || (page < 0))
+    {
+        return;
+    }
+
+    if((pos >= m_pages.GetCount()) || (pos < 0))
+    {
+        return;
+    }
+
+    if(page == pos)
+    {
+        return;
+    }
+
+    {
+        wxRibbonPageTabInfo tempTab = m_pages.Item(page);
+        m_pages.Item(page) = m_pages.Item((size_t)pos);
+        m_pages.Item((size_t)pos) = tempTab;
+    }
+
+    SetActivePage(pos);
+}
+
+void wxRibbonBar::SwapPage(wxRibbonPage* page1, wxRibbonPage* page2)
+{
+    SwapPage(GetPageNumber(page1), GetPageNumber(page2));
+}
+
+void wxRibbonBar::InsertPage(size_t page, int atpos)
+{
+    if((page >= m_pages.GetCount()) || (page < 0))
+    {
+        return;
+    }
+
+    if((atpos >= m_pages.GetCount()) || (atpos < 0))
+    {
+        return;
+    }
+
+    if(page == atpos)
+    {
+        return;
+    }
+
+    if(page < (size_t)atpos)
+    {
+        for(size_t i = page; i < (size_t)atpos; i++)
+        {
+            SwapPage(i, i+1);
+        }
+    }
+    else
+    {
+        for(size_t i = page; i > (size_t)atpos; i--)
+        {
+            SwapPage(i, i-1);
+        }
+    }
+}
+
+void wxRibbonBar::InsertPage(wxRibbonPage* page, int atpos)
+{
+    InsertPage(GetPageNumber(page), atpos);
+}
+
 bool wxRibbonBar::SetActivePage(size_t page)
 {
     if(m_current_page == (int)page)
