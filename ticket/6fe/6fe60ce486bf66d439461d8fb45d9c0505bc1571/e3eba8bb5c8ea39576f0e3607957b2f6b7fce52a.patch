Index: include/wx/os2/checklst.h
===================================================================
--- include/wx/os2/checklst.h	(wersja 57404)
+++ include/wx/os2/checklst.h	(kopia robocza)
@@ -72,10 +72,6 @@
     virtual wxOwnerDrawn* CreateItem(size_t n);
     virtual long          OS2OnMeasure(WXMEASUREITEMSTRUCT* pItem);
 
-    virtual int DoInsertItems(const wxArrayStringsAdapter & items,
-                              unsigned int pos,
-                              void **clientData, wxClientDataType type);
-
     //
     // Pressing space or clicking the check box toggles the item
     //
Index: src/os2/checklst.cpp
===================================================================
--- src/os2/checklst.cpp	(wersja 57404)
+++ src/os2/checklst.cpp	(kopia robocza)
@@ -287,29 +287,6 @@
     m_aItems.RemoveAt(n);
 } // end of wxCheckListBox::Delete
 
-int wxCheckListBox::DoInsertItems(const wxArrayStringsAdapter& items,
-                                  unsigned int pos,
-                                  void **clientData,
-                                  wxClientDataType type)
-{
-    // pos is validated in wxListBox
-    int result = wxListBox::DoInsertItems( items, pos, clientData, type );
-    unsigned int n = items.GetCount();
-    for (unsigned int i = 0; i < n; i++)
-    {
-        wxOwnerDrawn* pNewItem = CreateItem((size_t)(pos + i));
-
-        pNewItem->SetName(items[i]);
-        m_aItems.Insert(pNewItem, (size_t)(pos + i));
-        ::WinSendMsg( (HWND)GetHWND(),
-                      LM_SETITEMHANDLE,
-                      (MPARAM)(i + pos),
-                      MPFROMP(pNewItem)
-                    );
-    }
-    return result;
-} // end of wxCheckListBox::DoInsertItems
-
 bool wxCheckListBox::SetFont ( const wxFont& rFont )
 {
     for (unsigned int i = 0; i < m_aItems.GetCount(); i++)
Index: src/os2/listbox.cpp
===================================================================
--- src/os2/listbox.cpp	(wersja 57404)
+++ src/os2/listbox.cpp	(kopia robocza)
@@ -308,7 +308,6 @@
     
             pNewItem->SetName(items[i]);
             m_aItems.Insert(pNewItem, n);
-            ::WinSendMsg(GetHwnd(), LM_SETITEMHANDLE, (MPARAM)n, MPFROMP(pNewItem));
             pNewItem->SetFont(GetFont());
         }
 #endif
@@ -385,17 +384,6 @@
     wxCHECK_RET( IsValid(n),
                  wxT("invalid index in wxListBox::SetClientData") );
 
-#if wxUSE_OWNER_DRAWN
-    if ( m_windowStyle & wxLB_OWNERDRAW )
-    {
-        //
-        // Client data must be pointer to wxOwnerDrawn, otherwise we would crash
-        // in OnMeasure/OnDraw.
-        //
-        wxFAIL_MSG(wxT("Can't use client data with owner-drawn listboxes"));
-    }
-#endif // wxUSE_OWNER_DRAWN
-
     ::WinSendMsg(GetHwnd(), LM_SETITEMHANDLE, MPFROMLONG(n), MPFROMP(pClientData));
 } // end of wxListBox::DoSetItemClientData
 
@@ -714,7 +702,6 @@
 )
 {
     POWNERITEM                      pDrawStruct = (POWNERITEM)pItem;
-    LONG                            lItemID = pDrawStruct->idItem;
     int                             eAction = 0;
     int                             eStatus = 0;
 
@@ -727,18 +714,11 @@
     //
     // The item may be -1 for an empty listbox
     //
-    if (lItemID == -1L)
+    if (pDrawStruct->idItem == -1L)
         return false;
 
-    wxListBoxItem*                   pData = (wxListBoxItem*)PVOIDFROMMR( ::WinSendMsg( GetHwnd()
-                                                                                       ,LM_QUERYITEMHANDLE
-                                                                                       ,MPFROMLONG(pDrawStruct->idItem)
-                                                                                       ,(MPARAM)0
-                                                                                      )
-                                                                        );
+    wxListBoxItem* pData = (wxListBoxItem*)m_aItems[pDrawStruct->idItem];
 
-    wxCHECK(pData, false );
-
     wxClientDC    vDc(this);
     wxPMDCImpl *impl = (wxPMDCImpl*) vDc.GetImpl();
     wxPoint pt1( pDrawStruct->rclItem.xLeft, pDrawStruct->rclItem.yTop );
