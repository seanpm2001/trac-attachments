[W] UMR: Uninitialized memory read in ?swap@T_Bxty@?$_String_val@_WV?$allocator@_W@std@@@std@@@std@@YAXAAT_Bxty@?$_String_val@_WV?$allocator@_W@std@@@0@0@Z {2 occurrences}
    Reading 4 bytes from 0x0033c1f0 (4 bytes at 0x0033c1f0 uninitialized)
    Address 0x0033c1f0 points into a thread's stack 
    Address 0x0033c1f0 is 12 bytes past the start of local variable 'Tmp' in ?swap@T_Bxty@?$_String_val@_WV?$allocator@_W@std@@@std@@@std@@YAXAAT_Bxty@?$_String_val@_WV?$allocator@_W@std@@@0@0@Z
    Thread ID: 0x1208
    Error location
    ?swap@T_Bxty@?$_String_val@_WV?$allocator@_W@std@@@std@@@std@@YAXAAT_Bxty@?$_String_val@_WV?$allocator@_W@std@@@0@0@Z [c:\program files\microsoft visual studio 10.0\vc\include\utility.:104]
        {    // exchange values stored at _Left and _Right
        _Ty _Tmp = _Move(_Left);
        _Left = _Move(_Right);
 =>     _Right = _Move(_Tmp);
        }
    
            // TEMPLATE FUNCTION _Swap_adl
    std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::swap(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > &) [c:\program files\microsoft visual studio 10.0\vc\include\xstring.:1597]
                this->_Swap_all(_Right);
     #endif /* 0 < _ITERATOR_DEBUG_LEVEL */
    
 =>             _STD swap(this->_Bx, _Right._Bx);
                _STD swap(this->_Mysize, _Right._Mysize);
                _STD swap(this->_Myres, _Right._Myres);
                }
    wxString::swap(wxString&) [d:\sourcecode\main\wxwidgets\include\wx\string.h:3127]
          str.InvalidateCache();
    #endif // wxUSE_STRING_POS_CACHE
    
 =>       m_impl.swap(str.m_impl);
      }
        
            // find a substring
    wxString::Shrink(void) [d:\sourcecode\main\wxwidgets\src\common\string.cpp:568]
        bool wxString::Shrink()
        {
          wxString tmp(begin(), end());
     =>   swap(tmp);
          return tmp.length() == length();
        }
        
    wxJoin(class wxArrayString const &,wchar_t,wchar_t) [d:\sourcecode\main\wxwidgets\src\common\arrstr.cpp:516]
                }
            }
        
     =>     str.Shrink(); // release extra memory if we allocated too much
            return str;
        }
        
    wxURI::ParsePath(char const*) [d:\sourcecode\main\wxwidgets\src\common\uri.cpp:585]
                    AppendNextEscaped(segment, uri);
            }
        
     =>     m_path += wxJoin(segments, '/', '\0');
            m_fields |= wxURI_PATH;
        
            return uri;
    wxURI::Parse(char const*) [d:\sourcecode\main\wxwidgets\src\common\uri.cpp:332]
            if ( uri )
                uri = ParseAuthority(uri);
            if ( uri )
     =>         uri = ParsePath(uri);
            if ( uri )
                uri = ParseQuery(uri);
            if ( uri )
    wxURI::Create(wxString const&) [d:\sourcecode\main\wxwidgets\src\common\uri.cpp:66]
    wxURI::wxURI(wxString const&) [d:\sourcecode\main\wxwidgets\src\common\uri.cpp:58]
    wxHtmlWinParser::OpenURL(wxHtmlURLType,wxString const&)const [d:\sourcecode\main\wxwidgets\src\html\winpars.cpp:305]
    
-----------------------------------
[W] UMR: Uninitialized memory read in ?swap@T_Bxty@?$_String_val@_WV?$allocator@_W@std@@@std@@@std@@YAXAAT_Bxty@?$_String_val@_WV?$allocator@_W@std@@@0@0@Z {2 occurrences}
    Reading 4 bytes from 0x0033c22c (4 bytes at 0x0033c22c uninitialized)
    Address 0x0033c22c points into a thread's stack 
    Address 0x0033c22c is 12 bytes past the start of local variable 'Tmp' in ?swap@T_Bxty@?$_String_val@_WV?$allocator@_W@std@@@std@@@std@@YAXAAT_Bxty@?$_String_val@_WV?$allocator@_W@std@@@0@0@Z
    Thread ID: 0x1208
    Error location
    ?swap@T_Bxty@?$_String_val@_WV?$allocator@_W@std@@@std@@@std@@YAXAAT_Bxty@?$_String_val@_WV?$allocator@_W@std@@@0@0@Z [c:\program files\microsoft visual studio 10.0\vc\include\utility.:104]
        {    // exchange values stored at _Left and _Right
        _Ty _Tmp = _Move(_Left);
        _Left = _Move(_Right);
 =>     _Right = _Move(_Tmp);
        }
    
            // TEMPLATE FUNCTION _Swap_adl
    std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> >::swap(class std::basic_string<wchar_t,struct std::char_traits<wchar_t>,class std::allocator<wchar_t> > &) [c:\program files\microsoft visual studio 10.0\vc\include\xstring.:1597]
                this->_Swap_all(_Right);
     #endif /* 0 < _ITERATOR_DEBUG_LEVEL */
    
 =>             _STD swap(this->_Bx, _Right._Bx);
                _STD swap(this->_Mysize, _Right._Mysize);
                _STD swap(this->_Myres, _Right._Myres);
                }
    wxString::swap(wxString&) [d:\sourcecode\main\wxwidgets\include\wx\string.h:3127]
          str.InvalidateCache();
    #endif // wxUSE_STRING_POS_CACHE
    
 =>       m_impl.swap(str.m_impl);
      }
    
            // find a substring
    wxString::Shrink(void) [d:\sourcecode\main\wxwidgets\src\common\string.cpp:568]
        bool wxString::Shrink()
        {
          wxString tmp(begin(), end());
     =>   swap(tmp);
          return tmp.length() == length();
        }
        
    DoStringPrintfV [d:\sourcecode\main\wxwidgets\src\common\string.cpp:2134]
            }
        
            // we could have overshot
     =>     str.Shrink();
        
            return str.length();
        }
    wxString::PrintfV(wxString const&,char *) [d:\sourcecode\main\wxwidgets\src\common\string.cpp:2159]
                // wxChar* version
                return DoStringPrintfV<wxStringBuffer>(*this, format, argptr);
            #else
     =>         return DoStringPrintfV(*this, format, argptr);
            #endif // UTF8/WCHAR
        #endif
        }
    wxString::DoPrintfWchar(wchar_t const *,...) [d:\sourcecode\main\wxwidgets\src\common\string.cpp:1955]
            wxString *str = this;
        #endif
        
     =>     int iLen = str->PrintfV(format, argptr);
        
            va_end(argptr);
        
    wxString::H::Printf(class wxFormatString const &,int) [d:\sourcecode\main\wxwidgets\include\wx\string.h:2351]
    wxImage::SetOption(wxString const&,int) [d:\sourcecode\main\wxwidgets\src\common\image.cpp:2207]
    wxPNGHandler::LoadFile(wxImage *,wxInputStream&,bool,int) [d:\sourcecode\main\wxwidgets\src\common\imagpng.cpp:640]
    
    
-----------------------------------    
[W] UMR: Uninitialized memory read in wxColourDatabase::Initialize(void) {1 occurrence}
        Reading 1 byte from 0x0033d9ab (1 byte at 0x0033d9ab uninitialized)
        Address 0x0033d9ab points into a thread's stack 
        Address 0x0033d9ab is 309 bytes above the frame pointer in wxColourDatabase::Initialize(void)
        Thread ID: 0x1208
        Error location
            wxColourDatabase::Initialize(void) [d:\sourcecode\main\wxwidgets\src\common\gdicmn.cpp:297]
                        return;
                    }
                
             =>     m_map = new wxStringToColourHashMap;
                
                    static const struct wxColourDesc
                    {
            wxColourDatabase::Find(wxString const&)const [d:\sourcecode\main\wxwidgets\src\common\gdicmn.cpp:435]
            wxColourBase::FromString(wxString const&) [d:\sourcecode\main\wxwidgets\src\common\colourcmn.cpp:179]
            wxColourBase::Set(wxString const&) [d:\sourcecode\main\wxwidgets\include\wx\colour.h:101]
            wxColour::wxColour(wchar_t const *) [d:\sourcecode\main\wxwidgets\include\wx\msw\colour.h:26]
            wxHtmlLineCell::Draw(wxDC&,int,int,int,int,wxHtmlRenderingInfo&) [d:\sourcecode\main\wxwidgets\src\html\m_hline.cpp:57]
            wxHtmlContainerCell::Draw(wxDC&,int,int,int,int,wxHtmlRenderingInfo&) [d:\sourcecode\main\wxwidgets\src\html\htmlcell.cpp:1188]
            wxHtmlContainerCell::Draw(wxDC&,int,int,int,int,wxHtmlRenderingInfo&) [d:\sourcecode\main\wxwidgets\src\html\htmlcell.cpp:1188]
            wxHtmlContainerCell::Draw(wxDC&,int,int,int,int,wxHtmlRenderingInfo&) [d:\sourcecode\main\wxwidgets\src\html\htmlcell.cpp:1188]
            wxHtmlContainerCell::Draw(wxDC&,int,int,int,int,wxHtmlRenderingInfo&) [d:\sourcecode\main\wxwidgets\src\html\htmlcell.cpp:1188]

   ---------------------------------------
   [W] UMR: Uninitialized memory read in wxRibbonBar::OnMouseLeave(wxMouseEvent&) {1 occurrence}
        Reading 1 byte from 0x1faef784 (1 byte at 0x1faef784 uninitialized)
        Address 0x1faef784 is 540 bytes into a 552 byte block at 0x1faef568
        Address 0x1faef784 points to a C++ new block in heap 0x0fe20000
        Thread ID: 0x1208
        Error location
            wxRibbonBar::OnMouseLeave(wxMouseEvent&) [d:\sourcecode\main\wxwidgets\src\ribbon\bar.cpp:288]
                        m_toggle_button_hovered = false;
                        Refresh(false);
                    }
             =>     if ( m_help_button_hovered )
                    {
                        m_help_button_hovered = false;
                        m_bar_hovered = false;
            wxEventFunctorMethod<wxEventTypeTag<wxMouseEvent>,wxEvtHandler,wxEvent,wxEvtHandler>::()(wxEvtHandler *,wxEvent&) [d:\sourcecode\main\wxwidgets\include\wx\event.h:398]
            wxEvtHandler::ProcessEventIfMatchesId(wxEventTableEntryBase const&,wxEvtHandler *,wxEvent&) [d:\sourcecode\main\wxwidgets\src\common\event.cpp:1378]
            wxEventHashTable::HandleEvent(wxEvent&,wxEvtHandler *) [d:\sourcecode\main\wxwidgets\src\common\event.cpp:979]
            wxEvtHandler::TryHereOnly(wxEvent&) [d:\sourcecode\main\wxwidgets\src\common\event.cpp:1564]
            wxEvtHandler::TryBeforeAndHere(wxEvent&) [d:\sourcecode\main\wxwidgets\include\wx\event.h:3348]
            wxEvtHandler::ProcessEventLocally(wxEvent&) [d:\sourcecode\main\wxwidgets\src\common\event.cpp:1497]
            wxEvtHandler::ProcessEvent(wxEvent&) [d:\sourcecode\main\wxwidgets\src\common\event.cpp:1470]
            wxEvtHandler::SafelyProcessEvent(wxEvent&) [d:\sourcecode\main\wxwidgets\src\common\event.cpp:1577]
            wxWindowBase::HandleWindowEvent(wxEvent&)const [d:\sourcecode\main\wxwidgets\src\common\wincmn.cpp:1498]
