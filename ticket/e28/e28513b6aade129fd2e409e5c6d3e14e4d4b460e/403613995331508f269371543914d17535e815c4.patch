972df7d66c5413d9e0853202f6ebb3e272ed9500
 include/wx/ribbon/bar.h   |  2 +-
 interface/wx/ribbon/bar.h | 10 +++++++++-
 src/ribbon/bar.cpp        | 29 +++++++++++------------------
 3 files changed, 21 insertions(+), 20 deletions(-)

diff --git a/include/wx/ribbon/bar.h b/include/wx/ribbon/bar.h
index 2b45454..e8aa424 100644
--- a/include/wx/ribbon/bar.h
+++ b/include/wx/ribbon/bar.h
@@ -140,7 +140,7 @@ public:
     void AddPageHighlight(size_t page, bool highlight = true);
     void RemovePageHighlight(size_t page) { AddPageHighlight(page, false); }
 
-    void ShowPanels(bool show = true);
+    void ShowPanels(bool show = true, bool pin = true);
     void HidePanels() { ShowPanels(false); }
     bool ArePanelsShown() const { return m_arePanelsShown; }
 
diff --git a/interface/wx/ribbon/bar.h b/interface/wx/ribbon/bar.h
index e8d9ef3..3690a15 100644
--- a/interface/wx/ribbon/bar.h
+++ b/interface/wx/ribbon/bar.h
@@ -326,8 +326,16 @@ public:
         with when he/she doesn't need to see the ribbon's options.
 
         @since 2.9.2
+        
+        @param show
+            @true to show the panels, @false to hide them.
+            
+        @param pinned
+            
+            If the panels are shown, @true to display them as pinned, @false to display them as just expanded.
+            @since 3.0.1 
     */
-    void ShowPanels(bool show = true);
+    void ShowPanels(bool show = true, bool pinned = true);
 
     /**
         Hides the panel area of the ribbon bar.
diff --git a/src/ribbon/bar.cpp b/src/ribbon/bar.cpp
index 1bad16a..3834819 100644
--- a/src/ribbon/bar.cpp
+++ b/src/ribbon/bar.cpp
@@ -115,12 +115,17 @@ bool wxRibbonBar::DismissExpandedPanel()
     return m_pages.Item(m_current_page).page->DismissExpandedPanel();
 }
 
-void wxRibbonBar::ShowPanels(bool show)
+void wxRibbonBar::ShowPanels(bool show, bool pin)
 {
     m_arePanelsShown = show;
     SetMinSize(wxSize(GetSize().GetWidth(), DoGetBestSize().GetHeight()));
     Realise();
-    GetParent()->Layout();
+    GetParent()->Layout();    
+    
+    if (show) 
+        m_ribbon_state = pin ? wxRIBBON_BAR_PINNED :  wxRIBBON_BAR_EXPANDED;
+    else
+        m_ribbon_state = wxRIBBON_BAR_MINIMIZED;
 }
 
 void wxRibbonBar::SetWindowStyleFlag(long style)
@@ -974,13 +979,11 @@ void wxRibbonBar::OnMouseLeftDown(wxMouseEvent& evt)
     {
         if ( m_ribbon_state == wxRIBBON_BAR_MINIMIZED )
         {
-            ShowPanels();
-            m_ribbon_state = wxRIBBON_BAR_EXPANDED;
+            ShowPanels(true, false);
         }
         else if ( (tab == &m_pages.Item(m_current_page)) && (m_ribbon_state == wxRIBBON_BAR_EXPANDED) )
         {
             HidePanels();
-            m_ribbon_state = wxRIBBON_BAR_MINIMIZED;
         }
     }
     else
@@ -988,7 +991,6 @@ void wxRibbonBar::OnMouseLeftDown(wxMouseEvent& evt)
         if ( m_ribbon_state == wxRIBBON_BAR_EXPANDED )
         {
             HidePanels();
-            m_ribbon_state = wxRIBBON_BAR_MINIMIZED;
         }
     }
     if(tab && tab != &m_pages.Item(m_current_page))
@@ -1029,11 +1031,7 @@ void wxRibbonBar::OnMouseLeftDown(wxMouseEvent& evt)
             if(m_toggle_button_rect.Contains(position))
             {
                 bool pshown = ArePanelsShown();
-                ShowPanels(!pshown);
-                if ( pshown )
-                    m_ribbon_state = wxRIBBON_BAR_MINIMIZED;
-                else
-                    m_ribbon_state = wxRIBBON_BAR_PINNED;
+                ShowPanels(!pshown, true);
                 wxRibbonBarEvent event(wxEVT_RIBBONBAR_TOGGLED, GetId());
                 event.SetEventObject(this);
                 ProcessWindowEvent(event);
@@ -1168,13 +1166,11 @@ void wxRibbonBar::OnMouseDoubleClick(wxMouseEvent& evt)
     {
         if ( m_ribbon_state == wxRIBBON_BAR_PINNED )
         {
-            m_ribbon_state = wxRIBBON_BAR_MINIMIZED;
             HidePanels();
         }
         else
         {
-            m_ribbon_state = wxRIBBON_BAR_PINNED;
-            ShowPanels();
+            ShowPanels(true, true);
         }
     }
 }
@@ -1272,15 +1268,12 @@ void wxRibbonBar::HideIfExpanded()
     switch ( m_ribbon_state )
     {
         case wxRIBBON_BAR_EXPANDED:
-            m_ribbon_state = wxRIBBON_BAR_MINIMIZED;
-            // Fall through
-
         case wxRIBBON_BAR_MINIMIZED:
             HidePanels();
             break;
 
         case wxRIBBON_BAR_PINNED:
-            ShowPanels();
+            ShowPanels(true, true);
             break;
     }
 }
