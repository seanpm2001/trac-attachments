Index: samples/treectrl/state1.xpm
===================================================================
--- samples/treectrl/state1.xpm	(wersja 55596)
+++ samples/treectrl/state1.xpm	(kopia robocza)
@@ -14,7 +14,7 @@
 "6. c #A6A800",
 "M  c #EDF00E",
 "$. c #A6A802",
-"   c #FFFFFF",
+"   c None",
 "H  c #DEE104",
 "0  c #F5F802",
 "o  c #FCFF22",
Index: samples/treectrl/state2.xpm
===================================================================
--- samples/treectrl/state2.xpm	(wersja 55596)
+++ samples/treectrl/state2.xpm	(kopia robocza)
@@ -13,7 +13,7 @@
 "'  c #3F8620",
 "x  c #9FD488",
 "6. c #37751C",
-"   c #FFFFFF",
+"   c None",
 "A  c #8CCB71",
 "#  c #98D07F",
 "5. c #3A7C1E",
Index: samples/treectrl/state3.xpm
===================================================================
--- samples/treectrl/state3.xpm	(wersja 55596)
+++ samples/treectrl/state3.xpm	(kopia robocza)
@@ -17,7 +17,7 @@
 "0  c #C62B2B",
 "$  c #DF7A7A",
 "t  c #D14949",
-"   c #FFFFFF",
+"   c None",
 "o. c #962020",
 "&. c #B82C2C",
 "p  c #E8A1A1",
Index: samples/treectrl/state4.xpm
===================================================================
--- samples/treectrl/state4.xpm	(wersja 55596)
+++ samples/treectrl/state4.xpm	(kopia robocza)
@@ -12,7 +12,7 @@
 "=. c #2C67B8",
 "|  c #2760AD",
 ".. c #3672C5",
-"   c #FFFFFF",
+"   c None",
 "U  c #548AD4",
 "s  c #2A6AC1",
 "%  c #3475CD",
Index: samples/treectrl/state5.xpm
===================================================================
--- samples/treectrl/state5.xpm	(wersja 55596)
+++ samples/treectrl/state5.xpm	(kopia robocza)
@@ -7,7 +7,7 @@
 "O c #3C3C3C",
 "l c #080808",
 "w c #353535",
-"  c #FFFFFF",
+"  c None",
 "u c #010101",
 "C c #101010",
 "< c #1F1F1F",
Index: samples/treectrl/treetest.cpp
===================================================================
--- samples/treectrl/treetest.cpp	(wersja 55596)
+++ samples/treectrl/treetest.cpp	(kopia robocza)
@@ -925,22 +925,16 @@
     }
     else
     {
-#if 0
-        int width  = ::GetSystemMetrics(SM_CXMENUCHECK),
-            height = ::GetSystemMetrics(SM_CYMENUCHECK);
-#else
-        int width = 16;
-        int height = 16;
-#endif
+        wxRendererNative& renderer = wxRendererNative::Get();
 
+        wxSize size(renderer.GetCheckBoxSize(this));
+
         // make an state checkbox image list
-        states = new wxImageList(width, height, true);
+        states = new wxImageList(size.GetWidth(), size.GetHeight(), true);
 
-        wxBitmap checkBmp(width, height);
-        wxRect rect (0, 0, width, height);
+        wxBitmap checkBmp(size.GetWidth(), size.GetHeight());
+        wxRect rect(size);
 
-        wxRendererNative& renderer = wxRendererNative::Get();
-
         // create no checked image
         {
             // first create bitmap in a memory DC
@@ -955,6 +949,7 @@
         // create checked image
         {
             wxMemoryDC memDC(checkBmp);
+            memDC.Clear();
             renderer.DrawCheckBox(this, memDC, rect, wxCONTROL_CHECKED);
         }
 
