Index: include/wx/msw/apptbase.h
===================================================================
--- include/wx/msw/apptbase.h	(revision 67194)
+++ include/wx/msw/apptbase.h	(working copy)
@@ -31,6 +31,7 @@
     virtual void AfterChildWaitLoop(void *data) = 0;
 
 
+#if wxUSE_THREADS
     // wxThread helpers
     // ----------------
 
@@ -41,6 +42,7 @@
     // wait for the handle to be signaled, return WAIT_OBJECT_0 if it is or, in
     // the GUI code, WAIT_OBJECT_0 + 1 if a Windows message arrived
     virtual WXDWORD WaitForThread(WXHANDLE hThread, int flags) = 0;
+#endif // wxUSE_THREADS
 
 
 #ifndef __WXWINCE__
@@ -60,9 +62,11 @@
 #endif // !__WXWINCE__
 
 protected:
+#if wxUSE_THREADS
     // implementation of WaitForThread() for the console applications which is
-    // also used by the GUI code if it doesn't [yet|already} dispatch events
+    // also used by the GUI code if it doesn't [yet|already] dispatch events
     WXDWORD DoSimpleWaitForThread(WXHANDLE hThread);
+#endif // wxUSE_THREADS
 };
 
 #endif // _WX_MSW_APPTBASE_H_
Index: include/wx/msw/apptrait.h
===================================================================
--- include/wx/msw/apptrait.h	(revision 67194)
+++ include/wx/msw/apptrait.h	(working copy)
@@ -24,9 +24,11 @@
     virtual void AfterChildWaitLoop(void *data);
 #if wxUSE_TIMER
     virtual wxTimerImpl *CreateTimerImpl(wxTimer *timer);
-#endif
+#endif // wxUSE_TIMER
+#if wxUSE_THREADS
     virtual bool DoMessageFromThreadWait();
     virtual WXDWORD WaitForThread(WXHANDLE hThread, int flags);
+#endif // wxUSE_THREADS
 #ifndef __WXWINCE__
     virtual bool CanUseStderr() { return true; }
     virtual bool WriteToStderr(const wxString& text);
@@ -43,10 +45,12 @@
     virtual void AfterChildWaitLoop(void *data);
 #if wxUSE_TIMER
     virtual wxTimerImpl *CreateTimerImpl(wxTimer *timer);
-#endif
+#endif // wxUSE_TIMER
+#if wxUSE_THREADS
     virtual bool DoMessageFromThreadWait();
+    virtual WXDWORD WaitForThread(WXHANDLE hThread, int flags);
+#endif // wxUSE_THREADS
     virtual wxPortId GetToolkitVersion(int *majVer = NULL, int *minVer = NULL) const;
-    virtual WXDWORD WaitForThread(WXHANDLE hThread, int flags);
 
 #ifndef __WXWINCE__
     virtual bool CanUseStderr();
Index: include/wx/palmos/apptbase.h
===================================================================
--- include/wx/palmos/apptbase.h	(revision 67194)
+++ include/wx/palmos/apptbase.h	(working copy)
@@ -31,12 +31,14 @@
     virtual void AfterChildWaitLoop(void *data) = 0;
 
 
+#if wxUSE_THREADS
     // wxThread helpers
     // ----------------
 
     // process a message while waiting for a(nother) thread, should return
     // false if and only if we have to exit the application
     virtual bool DoMessageFromThreadWait() = 0;
+#endif // wxUSE_THREADS
 };
 
 #endif // _WX_PALMOS_APPTBASE_H_
Index: include/wx/palmos/apptrait.h
===================================================================
--- include/wx/palmos/apptrait.h	(revision 67194)
+++ include/wx/palmos/apptrait.h	(working copy)
@@ -30,9 +30,11 @@
     virtual void AfterChildWaitLoop(void *data);
 #if wxUSE_TIMER
     virtual wxTimerImpl *CreateTimerImpl(wxTimer *timer) { return new wxPalmOSTimerImpl(timer); }
-#endif
+#endif // wxUSE_TIMER
+#if wxUSE_THREADS
     virtual bool DoMessageFromThreadWait();
     virtual WXDWORD WaitForThread(WXHANDLE hThread);
+#endif // wxUSE_THREADS
 };
 
 #if wxUSE_GUI
@@ -46,8 +48,10 @@
 #if wxUSE_TIMER
     // there is no wxTimer support yet
     virtual wxTimerImpl *CreateTimerImpl(wxTimer *timer);
-#endif
+#endif // wxUSE_TIMER
+#if wxUSE_THREADS
     virtual bool DoMessageFromThreadWait();
+#endif // wxUSE_THREADS
     virtual wxPortId GetToolkitVersion(int *majVer = NULL, int *minVer = NULL) const;
 };
 
Index: src/msw/app.cpp
===================================================================
--- src/msw/app.cpp	(revision 67194)
+++ src/msw/app.cpp	(working copy)
@@ -219,6 +219,7 @@
     delete data;
 }
 
+#if wxUSE_THREADS
 bool wxGUIAppTraits::DoMessageFromThreadWait()
 {
     // we should return false only if the app should exit, i.e. only if
@@ -258,6 +259,7 @@
                QS_ALLPOSTMESSAGE
              );
 }
+#endif // wxUSE_THREADS
 
 wxPortId wxGUIAppTraits::GetToolkitVersion(int *majVer, int *minVer) const
 {
Index: src/msw/basemsw.cpp
===================================================================
--- src/msw/basemsw.cpp	(revision 67194)
+++ src/msw/basemsw.cpp	(working copy)
@@ -43,10 +43,12 @@
 // wxAppTraits implementation
 // ============================================================================
 
+#if wxUSE_THREADS
 WXDWORD wxAppTraits::DoSimpleWaitForThread(WXHANDLE hThread)
 {
     return ::WaitForSingleObject((HANDLE)hThread, INFINITE);
 }
+#endif // wxUSE_THREADS
 
 // ============================================================================
 // wxConsoleAppTraits implementation
@@ -63,12 +65,19 @@
     // nothing to do here
 }
 
+#if wxUSE_THREADS
 bool wxConsoleAppTraits::DoMessageFromThreadWait()
 {
     // nothing to process here
     return true;
 }
 
+WXDWORD wxConsoleAppTraits::WaitForThread(WXHANDLE hThread, int WXUNUSED(flags))
+{
+    return DoSimpleWaitForThread(hThread);
+}
+#endif // wxUSE_THREADS
+
 #if wxUSE_TIMER
 
 wxTimerImpl *wxConsoleAppTraits::CreateTimerImpl(wxTimer *timer)
@@ -88,11 +97,6 @@
 }
 
 
-WXDWORD wxConsoleAppTraits::WaitForThread(WXHANDLE hThread, int WXUNUSED(flags))
-{
-    return DoSimpleWaitForThread(hThread);
-}
-
 bool wxConsoleAppTraits::WriteToStderr(const wxString& text)
 {
     return wxFprintf(stderr, "%s", text) != -1;
Index: src/palmos/app.cpp
===================================================================
--- src/palmos/app.cpp	(revision 67194)
+++ src/palmos/app.cpp	(working copy)
@@ -104,10 +104,12 @@
 {
 }
 
+#if wxUSE_THREADS
 bool wxGUIAppTraits::DoMessageFromThreadWait()
 {
     return false;
 }
+#endif // wxUSE_THREADS
 
 wxPortId wxGUIAppTraits::GetToolkitVersion(int *majVer, int *minVer) const
 {
Index: src/palmos/base.cpp
===================================================================
--- src/palmos/base.cpp	(revision 67194)
+++ src/palmos/base.cpp	(working copy)
@@ -44,6 +44,7 @@
 {
 }
 
+#if wxUSE_THREADS
 bool wxConsoleAppTraits::DoMessageFromThreadWait()
 {
     return true;
@@ -54,6 +55,7 @@
     // TODO
     return 0;
 }
+#endif // wxUSE_THREADS
 
 #if wxUSE_CONSOLE_EVENTLOOP
 wxEventLoopBase *
