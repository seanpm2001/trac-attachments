Index: contrib/src/fl/controlbar.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/contrib/src/fl/controlbar.cpp,v
retrieving revision 1.15
diff -u -r1.15 controlbar.cpp
--- contrib/src/fl/controlbar.cpp	2003/04/02 14:11:27	1.15
+++ contrib/src/fl/controlbar.cpp	2003/06/02 22:00:08
@@ -402,11 +402,11 @@
 
 void wxFrameLayout::DestroyBarWindows()
 {
-    wxNode* pSpy = mBarSpyList.First();
+    wxNode* pSpy = mBarSpyList.GetFirst();
 
     while( pSpy )
     {
-        cbBarSpy& spy = *((cbBarSpy*)pSpy->Data());
+        cbBarSpy& spy = *((cbBarSpy*)pSpy->GetData());
 
         if ( spy.mpBarWnd->GetEventHandler() == &spy )
 
@@ -414,7 +414,7 @@
 
         delete &spy;
 
-        pSpy = pSpy->Next();
+        pSpy = pSpy->GetNext();
     }
 
     mBarSpyList.Clear();
@@ -432,15 +432,15 @@
 
 void wxFrameLayout::ShowFloatedWindows( bool show )
 {
-    wxNode* pNode = mFloatedFrames.First();
+    wxNode* pNode = mFloatedFrames.GetFirst();
 
     while( pNode )
     {
-        cbFloatedBarWindow* pFFrm = ((cbFloatedBarWindow*)pNode->Data());
+        cbFloatedBarWindow* pFFrm = ((cbFloatedBarWindow*)pNode->GetData());
 
         pFFrm->Show( show );
 
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 }
 
@@ -491,11 +491,11 @@
     if ( mpNECursor     ) 
         delete mpNECursor;
 
-    wxNode* pSpy = mBarSpyList.First();
+    wxNode* pSpy = mBarSpyList.GetFirst();
 
     while( pSpy )
     {
-        cbBarSpy& spy = *((cbBarSpy*)pSpy->Data());
+        cbBarSpy& spy = *((cbBarSpy*)pSpy->GetData());
 
         if ( spy.mpBarWnd->GetEventHandler() == &spy )
 
@@ -503,7 +503,7 @@
 
         delete &spy;
 
-        pSpy = pSpy->Next();
+        pSpy = pSpy->GetNext();
     }
 
     for ( i = 0; i != mAllBars.Count(); ++i )
@@ -715,11 +715,11 @@
         {
             pBar->mpBarWnd->Show(FALSE); // to avoid flicker upon reparenting
 
-            wxNode* pNode = mFloatedFrames.First();
+            wxNode* pNode = mFloatedFrames.GetFirst();
 
             while( pNode )
             {
-                cbFloatedBarWindow* pFFrm = ((cbFloatedBarWindow*)pNode->Data());
+                cbFloatedBarWindow* pFFrm = ((cbFloatedBarWindow*)pNode->GetData());
 
                 if ( pFFrm->GetBar() == pBar )
                 {
@@ -739,7 +739,7 @@
                     pFFrm->Destroy(); break;
                 }
 
-                pNode = pNode->Next();
+                pNode = pNode->GetNext();
             }
 
             // FOR NOW:: excessive!
@@ -826,11 +826,11 @@
 {
     if ( !(mFloatingOn && pBar->mFloatingOn)) return;
 
-    wxNode* pNode = mFloatedFrames.First();
+    wxNode* pNode = mFloatedFrames.GetFirst();
 
     while( pNode )
     {
-        cbFloatedBarWindow* pFFrm = ((cbFloatedBarWindow*)pNode->Data());
+        cbFloatedBarWindow* pFFrm = ((cbFloatedBarWindow*)pNode->GetData());
 
         if ( pFFrm->GetBar() == pBar )
         {
@@ -848,7 +848,7 @@
             break;
         }
 
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 }
 
@@ -3489,10 +3489,10 @@
 
 void cbDockPane::SetRowShapeData( cbRowInfo* pRow, wxList* pLst )
 {
-    if ( pLst->First() == NULL )
+    if ( pLst->GetFirst() == NULL )
         return;
 
-    wxNode* pData = pLst->First();
+    wxNode* pData = pLst->GetFirst();
 
     size_t i;
     for ( i = 0; i != pRow->mBars.Count(); ++i )
@@ -3501,12 +3501,12 @@
 
         cbBarInfo& bar = *pRow->mBars[i];;
 
-        cbBarShapeData& data = *((cbBarShapeData*)pData->Data());
+        cbBarShapeData& data = *((cbBarShapeData*)pData->GetData());
 
         bar.mBounds   = data.mBounds;
         bar.mLenRatio = data.mLenRatio;
 
-        pData = pData->Next();
+        pData = pData->GetNext();
     }
 }
 
Index: contrib/src/fl/frmview.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/contrib/src/fl/frmview.cpp,v
retrieving revision 1.3
diff -u -r1.3 frmview.cpp
--- contrib/src/fl/frmview.cpp	2002/01/21 22:34:41	1.3
+++ contrib/src/fl/frmview.cpp	2003/06/02 22:00:08
@@ -171,13 +171,13 @@
 {
     DeactivateCurrentView();
 
-    wxNode* pNode = mViews.First();
+    wxNode* pNode = mViews.GetFirst();
 
     while ( pNode )
     {
-        delete (wxFrameView*)pNode->Data();
+        delete (wxFrameView*)pNode->GetData();
 
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 
     if ( mActiveViewNo != -1 && GetParentFrame() )
@@ -187,17 +187,17 @@
 
 int wxFrameManager::GetViewNo( wxFrameView* pView )
 {
-    wxNode* pNode = mViews.First();
+    wxNode* pNode = mViews.GetFirst();
     int n = 0;
 
     while ( pNode )
     {
-        if ( (wxFrameView*)pNode->Data() == pView )
+        if ( (wxFrameView*)pNode->GetData() == pView )
 
             return n;
 
         ++n;
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 
     return -1;
@@ -228,7 +228,7 @@
 
 void wxFrameManager::SyncAllMenus()
 {
-    wxNode* pNode = mViews.First();
+    wxNode* pNode = mViews.GetFirst();
     int i = 0;
 
     while ( pNode )
@@ -237,7 +237,7 @@
 
             EnableMenusForView( (wxFrameView*)pNode->GetData(), FALSE );
 
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 
     EnableMenusForView( GetView( mActiveViewNo ), TRUE );
@@ -264,16 +264,16 @@
     mSettingsFile = settingsFile;
     mpFrameWnd    = pMainFrame;
 
-    wxNode* pNode = mViews.First();
+    wxNode* pNode = mViews.GetFirst();
 
     while ( pNode )
     {
-        wxFrameView* pView = (wxFrameView*)pNode->Data();
+        wxFrameView* pView = (wxFrameView*)pNode->GetData();
 
         pView->OnInit();
         pView->OnInitMenus();
 
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 
     if ( !ReloadViews() )
@@ -281,19 +281,19 @@
         // if loading of settings file failed (e.g. was not found), 
         // do recreation of items in each view
 
-        pNode = mViews.First();
+        pNode = mViews.GetFirst();
 
         while ( pNode )
         {
-            wxFrameView* pView = (wxFrameView*)pNode->Data();
+            wxFrameView* pView = (wxFrameView*)pNode->GetData();
 
             pView->OnRecreate();
 
-            pNode = pNode->Next();
+            pNode = pNode->GetNext();
         }
     }
 
-    if ( mActiveViewNo >= mViews.Number() )
+    if ( mActiveViewNo >= mViews.GetCount() )
         mActiveViewNo = -1;
 
     ActivateView( GetView( ( mActiveViewNo == -1 ) ? 0 : mActiveViewNo ) );
@@ -311,7 +311,7 @@
 void wxFrameManager::RemoveView( wxFrameView* pFrmView )
 {
     // TBD::
-    wxFAIL_MSG("wxFrameManager::RemoveView() has not been implemented yet.");
+    wxFAIL_MSG(wxT("wxFrameManager::RemoveView() has not been implemented yet."));
 }
 
 int wxFrameManager::GetActiveViewNo()
@@ -321,15 +321,15 @@
 
 wxFrameView* wxFrameManager::GetActiveView()
 {
-    wxNode* pNode = mViews.Nth( mActiveViewNo );
+    wxNode* pNode = mViews.Item( mActiveViewNo );
 
-    if ( pNode ) return (wxFrameView*)pNode->Data();
+    if ( pNode ) return (wxFrameView*)pNode->GetData();
             else return NULL;
 }
 
 wxNode* wxFrameManager::GetActiveViewNode()
 {
-    return mViews.Nth( mActiveViewNo );
+    return mViews.Item( mActiveViewNo );
 }
 
 wxFrame* wxFrameManager::GetParentFrame()
@@ -344,9 +344,9 @@
 
 wxFrameView* wxFrameManager::GetView( int viewNo )
 {
-    wxNode* pNode = mViews.Nth( viewNo );
+    wxNode* pNode = mViews.Item( viewNo );
 
-    if ( pNode ) return (wxFrameView*)pNode->Data();
+    if ( pNode ) return (wxFrameView*)pNode->GetData();
             else return NULL;
 }
 
@@ -444,6 +444,6 @@
 
 bool wxFrameManager::ViewsAreLoaded()
 {
-    return ( mViews.Number() != 0 );
+    return ( mViews.GetCount() != 0 );
 }
 
Index: contrib/src/fl/garbagec.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/contrib/src/fl/garbagec.cpp,v
retrieving revision 1.3
diff -u -r1.3 garbagec.cpp
--- contrib/src/fl/garbagec.cpp	2002/01/29 21:27:08	1.3
+++ contrib/src/fl/garbagec.cpp	2003/06/02 22:00:08
@@ -32,7 +32,7 @@
 
 inline static GCItem& node_to_item( wxNode* pNode )
 {
-    return *( (GCItem*)(pNode->Data()) );
+    return *( (GCItem*)(pNode->GetData()) );
 }
 
 GarbageCollector::~GarbageCollector()
@@ -44,13 +44,13 @@
 
 void GarbageCollector::DestroyItemList( wxList& lst )
 {
-    wxNode* pNode = lst.First();
+    wxNode* pNode = lst.GetFirst();
 
     while( pNode )
     {
         delete &node_to_item( pNode );
 
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 
     lst.Clear();
@@ -58,7 +58,7 @@
 
 wxNode* GarbageCollector::FindItemNode( void* pForObj )
 {
-    wxNode* pNode = mAllNodes.First();
+    wxNode* pNode = mAllNodes.GetFirst();
 
     while( pNode )
     {
@@ -66,7 +66,7 @@
 
             return pNode;
 
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 
     int avoidCompilerWarning = 0;
@@ -77,15 +77,15 @@
 
 wxNode* GarbageCollector::FindReferenceFreeItemNode()
 {
-    wxNode* pNode = mAllNodes.First();
+    wxNode* pNode = mAllNodes.GetFirst();
 
     while( pNode )
     {
-        if ( node_to_item( pNode ).mRefs.Number() == 0 ) 
+        if ( node_to_item( pNode ).mRefs.GetCount() == 0 ) 
 
             return pNode;
 
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 
     return 0;
@@ -93,18 +93,18 @@
 
 void GarbageCollector::RemoveReferencesToNode( wxNode* pItemNode )
 {
-    wxNode* pNode = mAllNodes.First();
+    wxNode* pNode = mAllNodes.GetFirst();
 
     while( pNode )
     {
         wxList& refLst   = node_to_item( pNode ).mRefs;
-        wxNode* pRefNode = refLst.First();
+        wxNode* pRefNode = refLst.GetFirst();
 
         while( pRefNode )
         {
-            if ( pRefNode->Data() == (wxObject*)pItemNode )
+            if ( pRefNode->GetData() == (wxObject*)pItemNode )
             {
-                wxNode* pNext = pRefNode->Next();
+                wxNode* pNext = pRefNode->GetNext();
 
                 refLst.DeleteNode( pRefNode );
 
@@ -112,31 +112,31 @@
 
                 continue;
             }
-            else pRefNode = pRefNode->Next();
+            else pRefNode = pRefNode->GetNext();
         }
 
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 }
 
 void GarbageCollector::ResolveReferences()
 {
-    wxNode* pNode = mAllNodes.First();
+    wxNode* pNode = mAllNodes.GetFirst();
 
     while( pNode )
     {
         GCItem& item = node_to_item( pNode );
 
-        wxNode* pRefNode = item.mRefs.First();
+        wxNode* pRefNode = item.mRefs.GetFirst();
 
         while( pRefNode )
         {
-            pRefNode->SetData( (wxObject*) FindItemNode( (void*)pRefNode->Data() ) );
+            pRefNode->SetData( (wxObject*) FindItemNode( (void*)pRefNode->GetData() ) );
 
-            pRefNode = pRefNode->Next();
+            pRefNode = pRefNode->GetNext();
         }
 
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 }
 
@@ -173,7 +173,7 @@
             // append it to the list, where items are contained
             // in the increasing order of dependencies
 
-            mRegularLst.Append( pItemNode->Data() );
+            mRegularLst.Append( pItemNode->GetData() );
 
             mAllNodes.DeleteNode( pItemNode );
 
@@ -187,13 +187,13 @@
             // otherwise, what is left - all nodes, which
             // are involved into cycled chains (rings)
 
-            wxNode* pNode = mAllNodes.First();
+            wxNode* pNode = mAllNodes.GetFirst();
 
             while( pNode )
             {
-                mCycledLst.Append( pNode->Data() );
+                mCycledLst.Append( pNode->GetData() );
 
-                pNode = pNode->Next();
+                pNode = pNode->GetNext();
             }
 
             mAllNodes.Clear();
Index: contrib/src/fl/gcupdatesmgr.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/contrib/src/fl/gcupdatesmgr.cpp,v
retrieving revision 1.4
diff -u -r1.4 gcupdatesmgr.cpp
--- contrib/src/fl/gcupdatesmgr.cpp	2003/01/07 10:21:39	1.4
+++ contrib/src/fl/gcupdatesmgr.cpp	2003/06/02 22:00:08
@@ -53,7 +53,7 @@
 
 static inline cbRectInfo& node_to_rect_info( wxNode* pNode )
 {
-    return *( (cbRectInfo*) (pNode->Data()) );
+    return *( (cbRectInfo*) (pNode->GetData()) );
 }
 
 /***** Implementation for class cbSimpleUpdatesMgr *****/
@@ -276,13 +276,13 @@
 
 void cbGCUpdatesMgr::DoRepositionItems( wxList& items )
 {
-    wxNode* pNode1 = items.First();
+    wxNode* pNode1 = items.GetFirst();
 
     while( pNode1 )
     {
         cbRectInfo& info = node_to_rect_info( pNode1 );
 
-        wxNode* pNode2 = items.First();
+        wxNode* pNode2 = items.GetFirst();
 
         // and node itself
 
@@ -305,10 +305,10 @@
                     mGC.AddDependency( &info,      &otherInfo      );
             }
 
-            pNode2 = pNode2->Next();
+            pNode2 = pNode2->GetNext();
         }
 
-        pNode1 = pNode1->Next();
+        pNode1 = pNode1->GetNext();
     }
 
     mGC.ArrangeCollection(); // order nodes according "least-dependency" rule,
@@ -318,7 +318,7 @@
     // they stand in linear (not cyclic) dependency with other
     // regular nodes).
 
-    wxNode* pNode = mGC.GetRegularObjects().First();
+    wxNode* pNode = mGC.GetRegularObjects().GetFirst();
 
     while ( pNode )
     {
@@ -330,12 +330,12 @@
         else
             info.mpPane->SizeBar( info.mpBar );
 
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 
     // cycled item nodes, need to be both resized and repainted
 
-    pNode = mGC.GetCycledObjects().First();
+    pNode = mGC.GetCycledObjects().GetFirst();
 
     while ( pNode )
     {
@@ -380,20 +380,20 @@
             pWnd->Refresh();
         }
 
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 
     // release data prepared for GC alg.
 
-    pNode = items.First();
+    pNode = items.GetFirst();
 
     while( pNode )
     {
-        cbRectInfo* pInfo = (cbRectInfo*)(pNode->Data());
+        cbRectInfo* pInfo = (cbRectInfo*)(pNode->GetData());
 
         delete pInfo;
 
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 
     mGC.Reset(); // reinit GC
Index: contrib/src/fl/rowdragpl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/contrib/src/fl/rowdragpl.cpp,v
retrieving revision 1.3
diff -u -r1.3 rowdragpl.cpp
--- contrib/src/fl/rowdragpl.cpp	2002/01/21 22:34:42	1.3
+++ contrib/src/fl/rowdragpl.cpp	2003/06/02 22:00:13
@@ -423,19 +423,19 @@
 
 int cbRowDragPlugin::GetHRowsCountForPane( cbDockPane* pPane )
 {
-    wxNode* pNode = mHiddenBars.First();
+    wxNode* pNode = mHiddenBars.GetFirst();
 
     int maxIconNo = -1;
 
     while( pNode )
     {
-        cbHiddenBarInfo* pHBInfo = (cbHiddenBarInfo*)pNode->Data();
+        cbHiddenBarInfo* pHBInfo = (cbHiddenBarInfo*)pNode->GetData();
 
         if ( pHBInfo->mAlignment == pPane->mAlignment )
 
             maxIconNo = wxMax( maxIconNo, pHBInfo->mIconNo );
 
-        pNode = pNode->Next();
+        pNode = pNode->GetNext();
     }
 
     return ( maxIconNo + 1 );
@@ -805,7 +805,7 @@
 
     cbRowInfo* pNewRow = new cbRowInfo();
 
-    wxNode* pNode = mHiddenBars.First();
+    wxNode* pNode = mHiddenBars.GetFirst();
 
     int rowNo = 0;
 
@@ -813,7 +813,7 @@
 
     while( pNode )
     {
-        cbHiddenBarInfo* pHBInfo = (cbHiddenBarInfo*)pNode->Data();
+        cbHiddenBarInfo* pHBInfo = (cbHiddenBarInfo*)pNode->GetData();
 
         if ( pHBInfo->mAlignment     == mpPane->mAlignment &&
              pHBInfo->mIconNo        == collapsedIconIdx   )
@@ -831,7 +831,7 @@
 
             // remove bar info from internal list
 
-            wxNode* pNext = pNode->Next();
+            wxNode* pNext = pNode->GetNext();
 
             delete pHBInfo;
             mHiddenBars.DeleteNode( pNode );
@@ -848,7 +848,7 @@
 
                 --pHBInfo->mIconNo;
 
-            pNode = pNode->Next();
+            pNode = pNode->GetNext();
         }
     }
 
Index: contrib/src/fl/updatesmgr.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/contrib/src/fl/updatesmgr.cpp,v
retrieving revision 1.3
diff -u -r1.3 updatesmgr.cpp
--- contrib/src/fl/updatesmgr.cpp	2002/01/21 22:34:42	1.3
+++ contrib/src/fl/updatesmgr.cpp	2003/06/02 22:00:14
@@ -249,25 +249,25 @@
 
     // step #2 - do ordered refreshing and resizing of bar window objects now
 
-    wxNode* pNode     = mBarsToRefresh.First();
-    wxNode* pPaneNode = mPanesList.First();
+    wxNode* pNode     = mBarsToRefresh.GetFirst();
+    wxNode* pPaneNode = mPanesList.GetFirst();
 
     while( pNode )
     {
-        cbBarInfo*  pBar  = (cbBarInfo*) pNode->Data();
-        cbDockPane* pPane = (cbDockPane*)pPaneNode->Data();
+        cbBarInfo*  pBar  = (cbBarInfo*) pNode->GetData();
+        cbDockPane* pPane = (cbDockPane*)pPaneNode->GetData();
 
         pPane->SizeBar( pBar );
 
-        pNode     = pNode->Next();
-        pPaneNode = pPaneNode->Next();
+        pNode     = pNode->GetNext();
+        pPaneNode = pPaneNode->GetNext();
     }
 
-    pNode = mBarsToRefresh.First();
+    pNode = mBarsToRefresh.GetFirst();
 
     while( pNode )
     {
-        cbBarInfo* pBar = (cbBarInfo*)pNode->Data();
+        cbBarInfo* pBar = (cbBarInfo*)pNode->GetData();
 
         if ( pBar->mpBarWnd ) 
         {
@@ -278,7 +278,7 @@
             //info.mpBarWnd->Show(TRUE);
         }
 
-        pNode  = pNode->Next();
+        pNode  = pNode->GetNext();
     }
 
     if ( clientWindowChanged )
Index: contrib/include/wx/fl/frmview.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/contrib/include/wx/fl/frmview.h,v
retrieving revision 1.4
diff -u -r1.4 frmview.h
--- contrib/include/wx/fl/frmview.h	2002/12/04 13:52:52	1.4
+++ contrib/include/wx/fl/frmview.h	2003/06/02 22:03:13
@@ -114,7 +114,7 @@
 
     // if file name is empty, views are are not saved/loaded
 
-    virtual void Init( wxWindow* pMainFrame, const wxString& settingsFile = "" );
+    virtual void Init( wxWindow* pMainFrame, const wxString& settingsFile = wxT("") );
 
     // synonyms
     wxFrame* GetParentFrame();
Index: contrib/include/wx/fl/garbagec.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/contrib/include/wx/fl/garbagec.h,v
retrieving revision 1.4
diff -u -r1.4 garbagec.h
--- contrib/include/wx/fl/garbagec.h	2002/12/04 13:52:52	1.4
+++ contrib/include/wx/fl/garbagec.h	2003/06/02 22:03:13
@@ -27,7 +27,7 @@
 
 inline void* gc_node_to_obj( wxNode* pGCNode )
 {
-    return ( (GCItem*) (pGCNode->Data()) )->mpObj;
+    return ( (GCItem*) (pGCNode->GetData()) )->mpObj;
 }
 
 /*

 	  	 
