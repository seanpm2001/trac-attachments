Index: include/wx/meta/convertible.h
===================================================================
--- include/wx/meta/convertible.h	(revision 60899)
+++ include/wx/meta/convertible.h	(working copy)
@@ -11,15 +11,23 @@
 #ifndef _WX_META_CONVERTIBLE_H_
 #define _WX_META_CONVERTIBLE_H_
 
+//
+// Introduce an extra class to make this header compilable with g++3.2
+//
+template <class D, class B>
+struct wxConvertibleTo_SizeHelper
+{
+	static char Match(B* pb);
+	static int  Match(...);
+};
+
 // Helper to decide if an object of type D is convertible to type B (the test
 // succeeds in particular when D derives from B)
 template <class D, class B>
 struct wxConvertibleTo
 {
-    static char Match(B* pb);
-    static int Match(...);
-
-    enum { value = sizeof(Match(static_cast<D*>(NULL))) == sizeof(char) };
+    enum { value = sizeof(wxConvertibleTo_SizeHelper<D,B>::Match(static_cast<D*>(NULL)))==sizeof(char)
+	};
 };
 
 #endif // _WX_META_CONVERTIBLE_H_
Index: include/wx/gtk1/glcanvas.h
===================================================================
--- include/wx/gtk1/glcanvas.h	(revision 60899)
+++ include/wx/gtk1/glcanvas.h	(working copy)
@@ -50,7 +50,7 @@
     // ------------------
 
 #if WXWIN_COMPATIBILITY_2_8
-    wxDEPRECATED(
+    wxDEPRECATED_CONSTRUCTOR(
     wxGLCanvas(wxWindow *parent,
                wxWindowID id = wxID_ANY,
                const wxPoint& pos = wxDefaultPosition,
@@ -61,7 +61,7 @@
                const wxPalette& palette = wxNullPalette)
     );
 
-    wxDEPRECATED(
+    wxDEPRECATED_CONSTRUCTOR(
     wxGLCanvas(wxWindow *parent,
                const wxGLContext *shared,
                wxWindowID id = wxID_ANY,
@@ -73,7 +73,7 @@
                const wxPalette& palette = wxNullPalette)
     );
 
-    wxDEPRECATED(
+    wxDEPRECATED_CONSTRUCTOR(
     wxGLCanvas(wxWindow *parent,
                const wxGLCanvas *shared,
                wxWindowID id = wxID_ANY,
