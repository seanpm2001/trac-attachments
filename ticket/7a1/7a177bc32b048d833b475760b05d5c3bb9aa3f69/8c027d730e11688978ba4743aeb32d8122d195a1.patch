diff -ru wxWidgets.orig/include/wx/msw/radiobox.h wxWidgets/include/wx/msw/radiobox.h
--- wxWidgets.orig/include/wx/msw/radiobox.h	2005-04-13 07:01:04.000000000 +1000
+++ wxWidgets/include/wx/msw/radiobox.h	2005-05-24 01:23:23.470460304 +1000
@@ -154,6 +154,7 @@
 
     // the buttons we contain
     wxSubwindows *m_radioButtons;
+    WXHWND        m_hwndDummyBtn;
 
     // array of widths and heights of the buttons, may be wxDefaultCoord if the
     // corresponding quantity should be computed
diff -ru wxWidgets.orig/src/msw/radiobox.cpp wxWidgets/src/msw/radiobox.cpp
--- wxWidgets.orig/src/msw/radiobox.cpp	2005-05-23 14:51:05.000000000 +1000
+++ wxWidgets/src/msw/radiobox.cpp	2005-05-24 01:23:29.000000000 +1000
@@ -208,11 +208,12 @@
     }
 
     // Create a dummy radio control to end the group.
-    (void)::CreateWindow(_T("BUTTON"),
-                         wxEmptyString,
-                         WS_GROUP | BS_AUTORADIOBUTTON | WS_CHILD,
-                         0, 0, 0, 0, GetHwnd(),
-                         (HMENU)NewControlId(), wxGetInstance(), NULL);
+    m_hwndDummyBtn = ::CreateWindow(_T("BUTTON"),
+                                    wxEmptyString,
+                                    WS_GROUP | BS_AUTORADIOBUTTON | WS_CHILD,
+                                    0, 0, 0, 0, GetHwnd(),
+                                    (HMENU)NewControlId(),
+                                    wxGetInstance(), NULL);
 
     m_radioButtons->SetFont(GetFont());
 
@@ -251,6 +252,7 @@
     m_isBeingDeleted = true;
 
     delete m_radioButtons;
+    ::DestroyWindow((HWND)m_hwndDummyBtn);
     delete[] m_radioWidth;
     delete[] m_radioHeight;
 }

 	  	 
