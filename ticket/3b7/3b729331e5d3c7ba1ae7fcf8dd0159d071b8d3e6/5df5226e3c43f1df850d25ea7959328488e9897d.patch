Index: demo/ListCtrl.py
===================================================================
--- demo/ListCtrl.py	(revision 63766)
+++ demo/ListCtrl.py	(working copy)
@@ -442,8 +442,9 @@
 
 <code><b>ListCtrlAutoWidthMixin()</b></code>
 
-<p>A mix-in class that automatically resizes the last column to take up the 
-remaining width of the ListCtrl.
+<p>A mix-in class that automatically resizes the a column to take up the 
+remaining width of the ListCtrl. By default this is the last column, but 
+you can use SetResizeColumn() to specify another.
 
 <p>This causes the ListCtrl to automatically take up the full width of the list, 
 without either a horizontal scroll bar (unless absolutely necessary) or empty 
@@ -460,7 +461,7 @@
 <h5>Methods</h5>
 <dl>
 
-<dt><code>resizeLastColumn(minWidth)</code>
+<dt><code>ResizeLastColumn(minWidth)</code>
 <dd>Resize the last column appropriately. If the list's columns are too wide to 
 fit within the window, we use a horizontal scrollbar.  Otherwise, we expand the 
 right-most column to take up the remaining free space in the list. This method is 
@@ -469,6 +470,10 @@
 removing or resizing columns).  'minWidth' is the preferred minimum width for 
 the last column.
 
+<dt><code>SetResizeColumn(column)</code>
+<dd>Instead of expanding the last column, you can specify which column you
+would like to have automatically expand to fill the window
+
 </dl>
 
 
Index: demo/ListCtrl_edit.py
===================================================================
--- demo/ListCtrl_edit.py	(revision 63766)
+++ demo/ListCtrl_edit.py	(working copy)
@@ -58,6 +58,11 @@
         self.SetColumnWidth(1, wx.LIST_AUTOSIZE)
         self.SetColumnWidth(2, 100)
 
+        # The AutoWidthMixin allows us to specify a column which will
+        # resize to fill the whole window while retaining the minimum
+        # size specified with SetColumnWidth()
+        self.SetResizeColumn(2)
+
         self.currentItem = 0
 
 
@@ -130,12 +135,10 @@
 enable it just include the <b>TextEditMixin</b>. The ListCtrl can be
 navigated with the TAB and up/down cursor keys.
 
-<p>Another facet of this demo is that the remaining space of the
-ListCtrls is divided over the first three columns. This is achieved
-with the extended syntax of <b>ListCtrlAutoWidthMixin</b>:
-<code>listmix.ListCtrlAutoWidthMixin.__init__(self, startcol, endcol)</code>
-(Look at the general ListCtrl demo for more information about the
-ListCtrlAutoWidthMixin)
+<p>This demo also includes the <b>ListCtrlAutoWidthMixin</b>, and uses
+the SetResizeColumn(col) function to specify which column should
+expand to fill the width of the window.  (Look at the general 
+ListCtrl demo for more information about the ListCtrlAutoWidthMixin)
 
 <p>Finally, the ListCtrl is automatically scrolled, if needed, when
 TAB is pressed consecutively (Windows only).
Index: wx/lib/mixins/listctrl.py
===================================================================
--- wx/lib/mixins/listctrl.py	(revision 63774)
+++ wx/lib/mixins/listctrl.py	(working copy)
@@ -185,8 +185,9 @@
 #----------------------------------------------------------------------------
 
 class ListCtrlAutoWidthMixin:
-    """ A mix-in class that automatically resizes the last column to take up
-        the remaining width of the wx.ListCtrl.
+    """ A mix-in class that automatically resizes the a column to take up
+        the remaining width of the wx.ListCtrl. By default that column is 
+        the last column, but it can be changed by with SetResizeColumn(col)
 
         This causes the wx.ListCtrl to automatically take up the full width of
         the list, without either a horizontal scroll bar (unless absolutely
@@ -210,7 +211,7 @@
         self.Bind(wx.EVT_LIST_COL_END_DRAG, self._onResize, self)
 
 
-    def setResizeColumn(self, col):
+    def SetResizeColumn(self, col):
         """
         Specify which column that should be autosized.  Pass either
         'LAST' or the column number.  Default is 'LAST'.
@@ -222,7 +223,7 @@
             self._resizeCol = col
         
 
-    def resizeLastColumn(self, minWidth):
+    def ResizeLastColumn(self, minWidth):
         """ Resize the last column appropriately.
 
             If the list's columns are too wide to fit within the window, we use
@@ -236,10 +237,10 @@
 
             'minWidth' is the preferred minimum width for the last column.
         """
-        self.resizeColumn(minWidth)
+        self.ResizeColumn(minWidth)
 
 
-    def resizeColumn(self, minWidth):
+    def ResizeColumn(self, minWidth):
         self._resizeColMinWidth = minWidth
         self._doResize()
         
@@ -283,14 +284,12 @@
         if numCols == 0: return # Nothing to resize.
 
         if(self._resizeColStyle == "LAST"):
-            resizeCol = self.GetColumnCount()
+            resizeCol = self.GetColumnCount() - 1
         else:
             resizeCol = self._resizeCol
 
-        resizeCol = max(1, resizeCol)
-
         if self._resizeColMinWidth == None:
-            self._resizeColMinWidth = self.GetColumnWidth(resizeCol - 1)
+            self._resizeColMinWidth = self.GetColumnWidth(resizeCol)
 
         # We're showing the vertical scrollbar -> allow for scrollbar width
         # NOTE: on GTK, the scrollbar is included in the client size, but on
@@ -303,21 +302,21 @@
 
         totColWidth = 0 # Width of all columns except last one.
         for col in range(numCols):
-            if col != (resizeCol-1):
+            if col != (resizeCol):
                 totColWidth = totColWidth + self.GetColumnWidth(col)
 
-        resizeColWidth = self.GetColumnWidth(resizeCol - 1)
+        resizeColWidth = self.GetColumnWidth(resizeCol)
 
         if totColWidth + self._resizeColMinWidth > listWidth:
             # We haven't got the width to show the last column at its minimum
             # width -> set it to its minimum width and allow the horizontal
             # scrollbar to show.
-            self.SetColumnWidth(resizeCol-1, self._resizeColMinWidth)
+            self.SetColumnWidth(resizeCol, self._resizeColMinWidth)
             return
 
         # Resize the last column to take up the remaining available space.
 
-        self.SetColumnWidth(resizeCol-1, listWidth - totColWidth)
+        self.SetColumnWidth(resizeCol, listWidth - totColWidth)
 
 
 
