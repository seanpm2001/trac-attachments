diff --git a/include/wx/any.h b/include/wx/any.h
index 7670b12..f75db97 100644
--- a/include/wx/any.h
+++ b/include/wx/any.h
@@ -163,7 +163,7 @@ public: \
         const wxAnyValueType& otherRef = *otherType; \
         return wxTypeId(inst) == wxTypeId(otherRef); \
     } \
-    virtual bool IsSameType(const wxAnyValueType* otherType) const \
+    virtual bool IsSameType(const wxAnyValueType* otherType) const wxOVERRIDE \
     { \
         return IsSameClass(otherType); \
     } \
@@ -335,7 +335,7 @@ public:
 
     virtual bool ConvertValue(const wxAnyValueBuffer& src,
                               wxAnyValueType* dstType,
-                              wxAnyValueBuffer& dst) const
+                              wxAnyValueBuffer& dst) const wxOVERRIDE
     {
         wxUnusedVar(src);
         wxUnusedVar(dstType);
@@ -464,7 +464,7 @@ public: \
     virtual ~wxAnyValueTypeImpl##TYPENAME() { } \
     virtual bool ConvertValue(const wxAnyValueBuffer& src, \
                               wxAnyValueType* dstType, \
-                              wxAnyValueBuffer& dst) const \
+                              wxAnyValueBuffer& dst) const wxOVERRIDE \
     { \
         GV value = GetValue(src); \
         return CONVFUNC(value, dstType, dst); \
@@ -560,7 +560,7 @@ public: \
  \
     virtual bool ConvertValue(const wxAnyValueBuffer& src, \
                               wxAnyValueType* dstType, \
-                              wxAnyValueBuffer& dst) const \
+                              wxAnyValueBuffer& dst) const wxOVERRIDE \
     { \
         wxUnusedVar(src); \
         wxUnusedVar(dstType); \
diff --git a/include/wx/aui/auibar.h b/include/wx/aui/auibar.h
index 34d3082..43afd03 100644
--- a/include/wx/aui/auibar.h
+++ b/include/wx/aui/auibar.h
@@ -83,7 +83,7 @@ public:
         m_toolId = c.m_toolId;
     }
 #endif
-    wxEvent *Clone() const { return new wxAuiToolBarEvent(*this); }
+    wxEvent *Clone() const wxOVERRIDE { return new wxAuiToolBarEvent(*this); }
 
     bool IsDropDownClicked() const  { return m_isDropdownClicked; }
     void SetDropDownClicked(bool c) { m_isDropdownClicked = c;    }
@@ -475,12 +475,12 @@ public:
                 const wxSize& size = wxDefaultSize,
                 long style = wxAUI_TB_DEFAULT_STYLE);
 
-    virtual void SetWindowStyleFlag(long style);
+    virtual void SetWindowStyleFlag(long style) wxOVERRIDE;
 
     void SetArtProvider(wxAuiToolBarArt* art);
     wxAuiToolBarArt* GetArtProvider() const;
 
-    bool SetFont(const wxFont& font);
+    bool SetFont(const wxFont& font) wxOVERRIDE;
 
 
     wxAuiToolBarItem* AddTool(int toolId,
@@ -605,7 +605,7 @@ public:
     bool IsPaneValid(const wxAuiPaneInfo& pane) const;
 
     // Override to call DoIdleUpdate().
-    virtual void UpdateWindowUI(long flags = wxUPDATE_UI_NONE);
+    virtual void UpdateWindowUI(long flags = wxUPDATE_UI_NONE) wxOVERRIDE;
 
 protected:
     void Init();
@@ -631,7 +631,7 @@ protected:
                    int y,
                    int width,
                    int height,
-                   int sizeFlags = wxSIZE_AUTO);
+                   int sizeFlags = wxSIZE_AUTO) wxOVERRIDE;
 
 protected: // handlers
 
diff --git a/include/wx/aui/tabmdi.h b/include/wx/aui/tabmdi.h
index 371e18a..2922d3a 100644
--- a/include/wx/aui/tabmdi.h
+++ b/include/wx/aui/tabmdi.h
@@ -65,7 +65,7 @@ public:
     wxMenu* GetWindowMenu() const { return m_pWindowMenu; }
     void SetWindowMenu(wxMenu* pMenu);
 
-    virtual void SetMenuBar(wxMenuBar *pMenuBar);
+    virtual void SetMenuBar(wxMenuBar *pMenuBar) wxOVERRIDE;
 #endif // wxUSE_MENUS
 
     void SetChildMenuBar(wxAuiMDIChildFrame *pChild);
@@ -102,9 +102,9 @@ protected:
     void DoHandleUpdateUI(wxUpdateUIEvent &event);
 #endif // wxUSE_MENUS
 
-    virtual bool ProcessEvent(wxEvent& event);
+    virtual bool ProcessEvent(wxEvent& event) wxOVERRIDE;
 
-    virtual void DoGetClientSize(int *width, int *height) const;
+    virtual void DoGetClientSize(int *width, int *height) const wxOVERRIDE;
 
 private:
     wxDECLARE_EVENT_TABLE();
@@ -151,9 +151,9 @@ public:
     virtual const wxIcon& GetIcon() const;
 
     virtual void Activate();
-    virtual bool Destroy();
+    virtual bool Destroy() wxOVERRIDE;
 
-    virtual bool Show(bool show = true);
+    virtual bool Show(bool show = true) wxOVERRIDE;
 
 #if wxUSE_STATUSBAR
     // no status bars
@@ -187,7 +187,7 @@ public:
     virtual bool ShowFullScreen(bool WXUNUSED(show), long WXUNUSED(style)) { return false; }
     virtual bool IsFullScreen() const { return false; }
 
-    virtual bool IsTopLevel() const { return false; }
+    virtual bool IsTopLevel() const wxOVERRIDE { return false; }
 
     void OnMenuHighlight(wxMenuEvent& evt);
     void OnActivate(wxActivateEvent& evt);
@@ -198,13 +198,13 @@ public:
 
 protected:
     void Init();
-    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags);
-    virtual void DoMoveWindow(int x, int y, int width, int height);
+    virtual void DoSetSize(int x, int y, int width, int height, int sizeFlags) wxOVERRIDE;
+    virtual void DoMoveWindow(int x, int y, int width, int height) wxOVERRIDE;
 
     // no size hints
     virtual void DoSetSizeHints(int WXUNUSED(minW), int WXUNUSED(minH),
                                 int WXUNUSED(maxW), int WXUNUSED(maxH),
-                                int WXUNUSED(incW), int WXUNUSED(incH)) {}
+                                int WXUNUSED(incW), int WXUNUSED(incH)) wxOVERRIDE {}
 public:
     // This function needs to be called when a size change is confirmed,
     // we needed this function to prevent anybody from the outside
@@ -247,7 +247,7 @@ public:
     virtual bool CreateClient(wxAuiMDIParentFrame *parent,
                               long style = wxVSCROLL | wxHSCROLL);
 
-    virtual int SetSelection(size_t page);
+    virtual int SetSelection(size_t page) wxOVERRIDE;
     virtual wxAuiMDIChildFrame* GetActiveChild();
     virtual void SetActiveChild(wxAuiMDIChildFrame* pChildFrame)
     {
diff --git a/include/wx/combobox.h b/include/wx/combobox.h
index 425a68f..4e9b64f 100644
--- a/include/wx/combobox.h
+++ b/include/wx/combobox.h
@@ -53,8 +53,8 @@ public:
     //     but still make it pure virtual because for some platforms it's not
     //     implemented there and also because the derived class has to override
     //     it anyhow to avoid ambiguity with the other GetSelection()
-    virtual int GetSelection() const = 0;
-    virtual void GetSelection(long *from, long *to) const = 0;
+    virtual int GetSelection() const wxOVERRIDE = 0;
+    virtual void GetSelection(long *from, long *to) const wxOVERRIDE = 0;
 
     virtual void Popup() { wxFAIL_MSG( wxT("Not implemented") ); }
     virtual void Dismiss() { wxFAIL_MSG( wxT("Not implemented") ); }
diff --git a/include/wx/dcgraph.h b/include/wx/dcgraph.h
index ada4f9e..fdd0b8c 100644
--- a/include/wx/dcgraph.h
+++ b/include/wx/dcgraph.h
@@ -36,8 +36,8 @@ public:
     wxGCDC();
     virtual ~wxGCDC();
 
-    wxGraphicsContext* GetGraphicsContext() const;
-    void SetGraphicsContext( wxGraphicsContext* ctx );
+    wxGraphicsContext* GetGraphicsContext() const wxOVERRIDE;
+    void SetGraphicsContext( wxGraphicsContext* ctx ) wxOVERRIDE;
 
 #ifdef __WXMSW__
     // override wxDC virtual functions to provide access to HDC associated with
@@ -70,100 +70,100 @@ public:
     // implement base class pure virtuals
     // ----------------------------------
 
-    virtual void Clear();
+    virtual void Clear() wxOVERRIDE;
 
-    virtual bool StartDoc( const wxString& message );
-    virtual void EndDoc();
+    virtual bool StartDoc( const wxString& message ) wxOVERRIDE;
+    virtual void EndDoc() wxOVERRIDE;
 
-    virtual void StartPage();
-    virtual void EndPage();
+    virtual void StartPage() wxOVERRIDE;
+    virtual void EndPage() wxOVERRIDE;
 
     // flushing the content of this dc immediately onto screen
-    virtual void Flush();
+    virtual void Flush() wxOVERRIDE;
 
-    virtual void SetFont(const wxFont& font);
-    virtual void SetPen(const wxPen& pen);
-    virtual void SetBrush(const wxBrush& brush);
-    virtual void SetBackground(const wxBrush& brush);
-    virtual void SetBackgroundMode(int mode);
-    virtual void SetPalette(const wxPalette& palette);
+    virtual void SetFont(const wxFont& font) wxOVERRIDE;
+    virtual void SetPen(const wxPen& pen) wxOVERRIDE;
+    virtual void SetBrush(const wxBrush& brush) wxOVERRIDE;
+    virtual void SetBackground(const wxBrush& brush) wxOVERRIDE;
+    virtual void SetBackgroundMode(int mode) wxOVERRIDE;
+    virtual void SetPalette(const wxPalette& palette) wxOVERRIDE;
 
-    virtual void DestroyClippingRegion();
+    virtual void DestroyClippingRegion() wxOVERRIDE;
 
-    virtual wxCoord GetCharHeight() const;
-    virtual wxCoord GetCharWidth() const;
+    virtual wxCoord GetCharHeight() const wxOVERRIDE;
+    virtual wxCoord GetCharWidth() const wxOVERRIDE;
 
-    virtual bool CanDrawBitmap() const;
-    virtual bool CanGetTextExtent() const;
-    virtual int GetDepth() const;
-    virtual wxSize GetPPI() const;
+    virtual bool CanDrawBitmap() const wxOVERRIDE;
+    virtual bool CanGetTextExtent() const wxOVERRIDE;
+    virtual int GetDepth() const wxOVERRIDE;
+    virtual wxSize GetPPI() const wxOVERRIDE;
 
-    virtual void SetLogicalFunction(wxRasterOperationMode function);
+    virtual void SetLogicalFunction(wxRasterOperationMode function) wxOVERRIDE;
 
-    virtual void SetTextForeground(const wxColour& colour);
-    virtual void SetTextBackground(const wxColour& colour);
+    virtual void SetTextForeground(const wxColour& colour) wxOVERRIDE;
+    virtual void SetTextBackground(const wxColour& colour) wxOVERRIDE;
 
-    virtual void ComputeScaleAndOrigin();
+    virtual void ComputeScaleAndOrigin() wxOVERRIDE;
 
-    wxGraphicsContext* GetGraphicsContext() const { return m_graphicContext; }
-    virtual void SetGraphicsContext( wxGraphicsContext* ctx );
+    wxGraphicsContext* GetGraphicsContext() const wxOVERRIDE { return m_graphicContext; }
+    virtual void SetGraphicsContext( wxGraphicsContext* ctx ) wxOVERRIDE;
 
-    virtual void* GetHandle() const;
+    virtual void* GetHandle() const wxOVERRIDE;
 
     // the true implementations
     virtual bool DoFloodFill(wxCoord x, wxCoord y, const wxColour& col,
-                             wxFloodFillStyle style = wxFLOOD_SURFACE);
+                             wxFloodFillStyle style = wxFLOOD_SURFACE) wxOVERRIDE;
 
     virtual void DoGradientFillLinear(const wxRect& rect,
         const wxColour& initialColour,
         const wxColour& destColour,
-        wxDirection nDirection = wxEAST);
+        wxDirection nDirection = wxEAST) wxOVERRIDE;
 
     virtual void DoGradientFillConcentric(const wxRect& rect,
         const wxColour& initialColour,
         const wxColour& destColour,
-        const wxPoint& circleCenter);
+        const wxPoint& circleCenter) wxOVERRIDE;
 
-    virtual bool DoGetPixel(wxCoord x, wxCoord y, wxColour *col) const;
+    virtual bool DoGetPixel(wxCoord x, wxCoord y, wxColour *col) const wxOVERRIDE;
 
-    virtual void DoDrawPoint(wxCoord x, wxCoord y);
+    virtual void DoDrawPoint(wxCoord x, wxCoord y) wxOVERRIDE;
 
 #if wxUSE_SPLINES
-    virtual void DoDrawSpline(const wxPointList *points);
+    virtual void DoDrawSpline(const wxPointList *points) wxOVERRIDE;
 #endif
 
-    virtual void DoDrawLine(wxCoord x1, wxCoord y1, wxCoord x2, wxCoord y2);
+    virtual void DoDrawLine(wxCoord x1, wxCoord y1, wxCoord x2, wxCoord y2) wxOVERRIDE;
 
     virtual void DoDrawArc(wxCoord x1, wxCoord y1,
         wxCoord x2, wxCoord y2,
-        wxCoord xc, wxCoord yc);
+        wxCoord xc, wxCoord yc) wxOVERRIDE;
 
     virtual void DoDrawCheckMark(wxCoord x, wxCoord y,
-        wxCoord width, wxCoord height);
+        wxCoord width, wxCoord height) wxOVERRIDE;
 
     virtual void DoDrawEllipticArc(wxCoord x, wxCoord y, wxCoord w, wxCoord h,
-        double sa, double ea);
+        double sa, double ea) wxOVERRIDE;
 
-    virtual void DoDrawRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height);
+    virtual void DoDrawRectangle(wxCoord x, wxCoord y, wxCoord width, wxCoord height) wxOVERRIDE;
     virtual void DoDrawRoundedRectangle(wxCoord x, wxCoord y,
         wxCoord width, wxCoord height,
-        double radius);
-    virtual void DoDrawEllipse(wxCoord x, wxCoord y, wxCoord width, wxCoord height);
+        double radius) wxOVERRIDE;
+    virtual void DoDrawEllipse(wxCoord x, wxCoord y, wxCoord width, wxCoord height) wxOVERRIDE;
 
-    virtual void DoCrossHair(wxCoord x, wxCoord y);
+    virtual void DoCrossHair(wxCoord x, wxCoord y) wxOVERRIDE;
 
-    virtual void DoDrawIcon(const wxIcon& icon, wxCoord x, wxCoord y);
+    virtual void DoDrawIcon(const wxIcon& icon, wxCoord x, wxCoord y) wxOVERRIDE;
     virtual void DoDrawBitmap(const wxBitmap &bmp, wxCoord x, wxCoord y,
-        bool useMask = false);
+        bool useMask = false) wxOVERRIDE;
 
-    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y);
+    virtual void DoDrawText(const wxString& text, wxCoord x, wxCoord y) wxOVERRIDE;
     virtual void DoDrawRotatedText(const wxString& text, wxCoord x, wxCoord y,
-        double angle);
+        double angle) wxOVERRIDE;
 
     virtual bool DoBlit(wxCoord xdest, wxCoord ydest, wxCoord width, wxCoord height,
                         wxDC *source, wxCoord xsrc, wxCoord ysrc,
                         wxRasterOperationMode rop = wxCOPY, bool useMask = false,
-                        wxCoord xsrcMask = -1, wxCoord ysrcMask = -1);
+                        wxCoord xsrcMask = -1, wxCoord ysrcMask = -1) wxOVERRIDE;
 
     virtual bool DoStretchBlit(wxCoord xdest, wxCoord ydest,
                                wxCoord dstWidth, wxCoord dstHeight,
@@ -171,34 +171,34 @@ public:
                                wxCoord xsrc, wxCoord ysrc,
                                wxCoord srcWidth, wxCoord srcHeight,
                                wxRasterOperationMode = wxCOPY, bool useMask = false,
-                               wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord);
+                               wxCoord xsrcMask = wxDefaultCoord, wxCoord ysrcMask = wxDefaultCoord) wxOVERRIDE;
 
-    virtual void DoGetSize(int *,int *) const;
-    virtual void DoGetSizeMM(int* width, int* height) const;
+    virtual void DoGetSize(int *,int *) const wxOVERRIDE;
+    virtual void DoGetSizeMM(int* width, int* height) const wxOVERRIDE;
 
     virtual void DoDrawLines(int n, const wxPoint points[],
-        wxCoord xoffset, wxCoord yoffset);
+        wxCoord xoffset, wxCoord yoffset) wxOVERRIDE;
     virtual void DoDrawPolygon(int n, const wxPoint points[],
                                wxCoord xoffset, wxCoord yoffset,
-                               wxPolygonFillMode fillStyle = wxODDEVEN_RULE);
+                               wxPolygonFillMode fillStyle = wxODDEVEN_RULE) wxOVERRIDE;
     virtual void DoDrawPolyPolygon(int n, const int count[], const wxPoint points[],
                                    wxCoord xoffset, wxCoord yoffset,
-                                   wxPolygonFillMode fillStyle);
+                                   wxPolygonFillMode fillStyle) wxOVERRIDE;
 
-    virtual void DoSetDeviceClippingRegion(const wxRegion& region);
+    virtual void DoSetDeviceClippingRegion(const wxRegion& region) wxOVERRIDE;
     virtual void DoSetClippingRegion(wxCoord x, wxCoord y,
-        wxCoord width, wxCoord height);
+        wxCoord width, wxCoord height) wxOVERRIDE;
 
     virtual void DoGetTextExtent(const wxString& string,
         wxCoord *x, wxCoord *y,
         wxCoord *descent = NULL,
         wxCoord *externalLeading = NULL,
-        const wxFont *theFont = NULL) const;
+        const wxFont *theFont = NULL) const wxOVERRIDE;
 
-    virtual bool DoGetPartialTextExtents(const wxString& text, wxArrayInt& widths) const;
+    virtual bool DoGetPartialTextExtents(const wxString& text, wxArrayInt& widths) const wxOVERRIDE;
 
 #ifdef __WXMSW__
-    virtual wxRect MSWApplyGDIPlusTransform(const wxRect& r) const;
+    virtual wxRect MSWApplyGDIPlusTransform(const wxRect& r) const wxOVERRIDE;
 #endif // __WXMSW__
 
 protected:
diff --git a/include/wx/event.h b/include/wx/event.h
index 9b2572a..72126f3 100644
--- a/include/wx/event.h
+++ b/include/wx/event.h
@@ -1054,7 +1054,7 @@ private:
     friend class WXDLLIMPEXP_FWD_BASE wxEventProcessInHandlerOnly;
 
 
-    wxDECLARE_ABSTRACT_CLASS(wxEvent);
+    wxDECLARE_PURE_ABSTRACT_CLASS(wxEvent);
 };
 
 /*
diff --git a/include/wx/generic/calctrlg.h b/include/wx/generic/calctrlg.h
index 7d06ac3..f2fa87f 100644
--- a/include/wx/generic/calctrlg.h
+++ b/include/wx/generic/calctrlg.h
@@ -46,22 +46,22 @@ public:
 
     virtual ~wxGenericCalendarCtrl();
 
-    virtual bool Destroy();
+    virtual bool Destroy() wxOVERRIDE;
 
     // set/get the current date
     // ------------------------
 
-    virtual bool SetDate(const wxDateTime& date);
-    virtual wxDateTime GetDate() const { return m_date; }
+    virtual bool SetDate(const wxDateTime& date) wxOVERRIDE;
+    virtual wxDateTime GetDate() const wxOVERRIDE { return m_date; }
 
 
     // set/get the range in which selection can occur
     // ---------------------------------------------
 
     virtual bool SetDateRange(const wxDateTime& lowerdate = wxDefaultDateTime,
-                              const wxDateTime& upperdate = wxDefaultDateTime);
+                              const wxDateTime& upperdate = wxDefaultDateTime) wxOVERRIDE;
 
-    virtual bool GetDateRange(wxDateTime *lowerdate, wxDateTime *upperdate) const;
+    virtual bool GetDateRange(wxDateTime *lowerdate, wxDateTime *upperdate) const wxOVERRIDE;
 
     // these functions are for generic version only, don't use them but use the
     // Set/GetDateRange() above instead
@@ -79,7 +79,7 @@ public:
     // should be used instead for them
 
     // corresponds to wxCAL_NO_MONTH_CHANGE bit
-    virtual bool EnableMonthChange(bool enable = true);
+    virtual bool EnableMonthChange(bool enable = true) wxOVERRIDE;
 
     // corresponds to wxCAL_NO_YEAR_CHANGE bit, deprecated, generic only
     void EnableYearChange(bool enable = true);
@@ -88,48 +88,48 @@ public:
     // customization
     // -------------
 
-    virtual void Mark(size_t day, bool mark);
+    virtual void Mark(size_t day, bool mark) wxOVERRIDE;
 
     // all other functions in this section are for generic version only
 
     // header colours are used for painting the weekdays at the top
-    virtual void SetHeaderColours(const wxColour& colFg, const wxColour& colBg)
+    virtual void SetHeaderColours(const wxColour& colFg, const wxColour& colBg) wxOVERRIDE
     {
         m_colHeaderFg = colFg;
         m_colHeaderBg = colBg;
     }
 
-    virtual const wxColour& GetHeaderColourFg() const { return m_colHeaderFg; }
-    virtual const wxColour& GetHeaderColourBg() const { return m_colHeaderBg; }
+    virtual const wxColour& GetHeaderColourFg() const wxOVERRIDE { return m_colHeaderFg; }
+    virtual const wxColour& GetHeaderColourBg() const wxOVERRIDE { return m_colHeaderBg; }
 
     // highlight colour is used for the currently selected date
-    virtual void SetHighlightColours(const wxColour& colFg, const wxColour& colBg)
+    virtual void SetHighlightColours(const wxColour& colFg, const wxColour& colBg) wxOVERRIDE
     {
         m_colHighlightFg = colFg;
         m_colHighlightBg = colBg;
     }
 
-    virtual const wxColour& GetHighlightColourFg() const { return m_colHighlightFg; }
-    virtual const wxColour& GetHighlightColourBg() const { return m_colHighlightBg; }
+    virtual const wxColour& GetHighlightColourFg() const wxOVERRIDE { return m_colHighlightFg; }
+    virtual const wxColour& GetHighlightColourBg() const wxOVERRIDE { return m_colHighlightBg; }
 
     // holiday colour is used for the holidays (if style & wxCAL_SHOW_HOLIDAYS)
-    virtual void SetHolidayColours(const wxColour& colFg, const wxColour& colBg)
+    virtual void SetHolidayColours(const wxColour& colFg, const wxColour& colBg) wxOVERRIDE
     {
         m_colHolidayFg = colFg;
         m_colHolidayBg = colBg;
     }
 
-    virtual const wxColour& GetHolidayColourFg() const { return m_colHolidayFg; }
-    virtual const wxColour& GetHolidayColourBg() const { return m_colHolidayBg; }
+    virtual const wxColour& GetHolidayColourFg() const wxOVERRIDE { return m_colHolidayFg; }
+    virtual const wxColour& GetHolidayColourBg() const wxOVERRIDE { return m_colHolidayBg; }
 
-    virtual wxCalendarDateAttr *GetAttr(size_t day) const
+    virtual wxCalendarDateAttr *GetAttr(size_t day) const wxOVERRIDE
     {
         wxCHECK_MSG( day > 0 && day < 32, NULL, wxT("invalid day") );
 
         return m_attrs[day - 1];
     }
 
-    virtual void SetAttr(size_t day, wxCalendarDateAttr *attr)
+    virtual void SetAttr(size_t day, wxCalendarDateAttr *attr) wxOVERRIDE
     {
         wxCHECK_RET( day > 0 && day < 32, wxT("invalid day") );
 
@@ -137,24 +137,24 @@ public:
         m_attrs[day - 1] = attr;
     }
 
-    virtual void ResetAttr(size_t day) { SetAttr(day, NULL); }
+    virtual void ResetAttr(size_t day) wxOVERRIDE { SetAttr(day, NULL); }
 
-    virtual void SetHoliday(size_t day);
+    virtual void SetHoliday(size_t day) wxOVERRIDE;
 
     virtual wxCalendarHitTestResult HitTest(const wxPoint& pos,
                                             wxDateTime *date = NULL,
-                                            wxDateTime::WeekDay *wd = NULL);
+                                            wxDateTime::WeekDay *wd = NULL) wxOVERRIDE;
 
     // implementation only from now on
     // -------------------------------
 
     // forward these functions to all subcontrols
-    virtual bool Enable(bool enable = true);
-    virtual bool Show(bool show = true);
+    virtual bool Enable(bool enable = true) wxOVERRIDE;
+    virtual bool Show(bool show = true) wxOVERRIDE;
 
-    virtual void SetWindowStyleFlag(long style);
+    virtual void SetWindowStyleFlag(long style) wxOVERRIDE;
 
-    virtual wxVisualAttributes GetDefaultAttributes() const
+    virtual wxVisualAttributes GetDefaultAttributes() const wxOVERRIDE
         { return GetClassDefaultAttributes(GetWindowVariant()); }
 
     static wxVisualAttributes
@@ -164,9 +164,9 @@ public:
 
 protected:
     // override some base class virtuals
-    virtual wxSize DoGetBestSize() const;
-    virtual void DoMoveWindow(int x, int y, int width, int height);
-    virtual void DoGetSize(int *width, int *height) const;
+    virtual wxSize DoGetBestSize() const wxOVERRIDE;
+    virtual void DoMoveWindow(int x, int y, int width, int height) wxOVERRIDE;
+    virtual void DoGetSize(int *width, int *height) const wxOVERRIDE;
 
 private:
     // common part of all ctors
@@ -247,8 +247,8 @@ public:
     wxControl *GetYearControl() const;
 
 private:
-    virtual void ResetHolidayAttrs();
-    virtual void RefreshHolidays() { Refresh(); }
+    virtual void ResetHolidayAttrs() wxOVERRIDE;
+    virtual void RefreshHolidays() wxOVERRIDE { Refresh(); }
 
     // OnPaint helper-methods
 
diff --git a/include/wx/generic/choicdgg.h b/include/wx/generic/choicdgg.h
index f4be956..9ccb4e2 100644
--- a/include/wx/generic/choicdgg.h
+++ b/include/wx/generic/choicdgg.h
@@ -279,13 +279,13 @@ public:
     wxArrayInt GetSelections() const { return m_selections; }
 
     // implementation from now on
-    virtual bool TransferDataFromWindow();
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
 
 protected:
 #if wxUSE_CHECKLISTBOX
     virtual wxListBoxBase *CreateList(int n,
                                       const wxString *choices,
-                                      long styleLbox);
+                                      long styleLbox) wxOVERRIDE;
 #endif // wxUSE_CHECKLISTBOX
 
     wxArrayInt m_selections;
diff --git a/include/wx/generic/combo.h b/include/wx/generic/combo.h
index 303b9fc..92b3ff6 100644
--- a/include/wx/generic/combo.h
+++ b/include/wx/generic/combo.h
@@ -68,7 +68,7 @@ public:
 
     void SetCustomPaintWidth( int width );
 
-    virtual bool IsKeyPopupToggle(const wxKeyEvent& event) const;
+    virtual bool IsKeyPopupToggle(const wxKeyEvent& event) const wxOVERRIDE;
 
     static int GetFeatures() { return wxComboCtrlFeatures::All; }
 
@@ -88,15 +88,15 @@ protected:
     virtual WXWidget GetTextWidget() const { return NULL; }
 #elif defined(__WXGTK__)
 #if defined(__WXGTK20__)
-    virtual GtkEditable *GetEditable() const { return NULL; }
-    virtual GtkEntry *GetEntry() const { return NULL; }
+    virtual GtkEditable *GetEditable() const wxOVERRIDE { return NULL; }
+    virtual GtkEntry *GetEntry() const wxOVERRIDE { return NULL; }
 #endif
 #elif defined(__WXMAC__)
     // Looks like there's nothing we need to override here
 #endif
 
     // For better transparent background rendering
-    virtual bool HasTransparentBackground()
+    virtual bool HasTransparentBackground() wxOVERRIDE
     {
         #if wxALWAYS_NATIVE_DOUBLE_BUFFER
           #ifdef __WXGTK__
@@ -111,7 +111,7 @@ protected:
     }
 
     // Mandatory virtuals
-    virtual void OnResize();
+    virtual void OnResize() wxOVERRIDE;
 
     // Event handlers
     void OnPaintEvent( wxPaintEvent& event );
diff --git a/include/wx/generic/datectrl.h b/include/wx/generic/datectrl.h
index 551fa9d..cd614da 100644
--- a/include/wx/generic/datectrl.h
+++ b/include/wx/generic/datectrl.h
@@ -49,11 +49,11 @@ public:
                 const wxString& name = wxDatePickerCtrlNameStr);
 
     // wxDatePickerCtrl methods
-    void SetValue(const wxDateTime& date);
-    wxDateTime GetValue() const;
+    void SetValue(const wxDateTime& date) wxOVERRIDE;
+    wxDateTime GetValue() const wxOVERRIDE;
 
-    bool GetRange(wxDateTime *dt1, wxDateTime *dt2) const;
-    void SetRange(const wxDateTime &dt1, const wxDateTime &dt2);
+    bool GetRange(wxDateTime *dt1, wxDateTime *dt2) const wxOVERRIDE;
+    void SetRange(const wxDateTime &dt1, const wxDateTime &dt2) wxOVERRIDE;
 
     bool SetDateRange(const wxDateTime& lowerdate = wxDefaultDateTime,
                       const wxDateTime& upperdate = wxDefaultDateTime);
@@ -66,16 +66,16 @@ public:
     // -------------------------------
 
     // overridden base class methods
-    virtual bool Destroy();
+    virtual bool Destroy() wxOVERRIDE;
 
 protected:
-    virtual wxSize DoGetBestSize() const;
+    virtual wxSize DoGetBestSize() const wxOVERRIDE;
 
 private:
     void Init();
 
     // return the list of the windows composing this one
-    virtual wxWindowList GetCompositeWindowParts() const;
+    virtual wxWindowList GetCompositeWindowParts() const wxOVERRIDE;
 
     void OnText(wxCommandEvent &event);
     void OnSize(wxSizeEvent& event);
diff --git a/include/wx/generic/dirctrlg.h b/include/wx/generic/dirctrlg.h
index 10c3978..d7ef2de 100644
--- a/include/wx/generic/dirctrlg.h
+++ b/include/wx/generic/dirctrlg.h
@@ -174,7 +174,7 @@ public:
     virtual void CollapseTree();
 
     // overridden base class methods
-    virtual void SetFocus();
+    virtual void SetFocus() wxOVERRIDE;
 
 protected:
     virtual void ExpandRoot();
diff --git a/include/wx/generic/filectrlg.h b/include/wx/generic/filectrlg.h
index b3d9cbe..d460fd3 100644
--- a/include/wx/generic/filectrlg.h
+++ b/include/wx/generic/filectrlg.h
@@ -217,32 +217,32 @@ public:
                  const wxSize& size = wxDefaultSize,
                  const wxString& name = wxFileCtrlNameStr );
 
-    virtual void SetWildcard( const wxString& wildCard );
-    virtual void SetFilterIndex( int filterindex );
-    virtual bool SetDirectory( const wxString& dir );
+    virtual void SetWildcard( const wxString& wildCard ) wxOVERRIDE;
+    virtual void SetFilterIndex( int filterindex ) wxOVERRIDE;
+    virtual bool SetDirectory( const wxString& dir ) wxOVERRIDE;
 
     // Selects a certain file.
     // In case the filename specified isn't found/couldn't be shown with
     // currently selected filter, false is returned and nothing happens
-    virtual bool SetFilename( const wxString& name );
+    virtual bool SetFilename( const wxString& name ) wxOVERRIDE;
 
     // Changes to a certain directory and selects a certain file.
     // In case the filename specified isn't found/couldn't be shown with
     // currently selected filter, false is returned and if directory exists
     // it's chdir'ed to
-    virtual bool SetPath( const wxString& path );
+    virtual bool SetPath( const wxString& path ) wxOVERRIDE;
 
-    virtual wxString GetFilename() const;
-    virtual wxString GetDirectory() const;
-    virtual wxString GetWildcard() const { return this->m_wildCard; }
-    virtual wxString GetPath() const;
-    virtual void GetPaths( wxArrayString& paths ) const;
-    virtual void GetFilenames( wxArrayString& files ) const;
-    virtual int GetFilterIndex() const { return m_filterIndex; }
+    virtual wxString GetFilename() const wxOVERRIDE;
+    virtual wxString GetDirectory() const wxOVERRIDE;
+    virtual wxString GetWildcard() const wxOVERRIDE { return this->m_wildCard; }
+    virtual wxString GetPath() const wxOVERRIDE;
+    virtual void GetPaths( wxArrayString& paths ) const wxOVERRIDE;
+    virtual void GetFilenames( wxArrayString& files ) const wxOVERRIDE;
+    virtual int GetFilterIndex() const wxOVERRIDE { return m_filterIndex; }
 
-    virtual bool HasMultipleFileSelection() const
+    virtual bool HasMultipleFileSelection() const wxOVERRIDE
         { return HasFlag(wxFC_MULTIPLE); }
-    virtual void ShowHidden(bool show) { m_list->ShowHidden( show ); }
+    virtual void ShowHidden(bool show) wxOVERRIDE { m_list->ShowHidden( show ); }
 
     void GoToParentDir();
     void GoToHomeDir();
diff --git a/include/wx/generic/filepickerg.h b/include/wx/generic/filepickerg.h
index 480cc27..ab9fcee 100644
--- a/include/wx/generic/filepickerg.h
+++ b/include/wx/generic/filepickerg.h
@@ -144,15 +144,15 @@ public:     // overridable
         return filedlgstyle;
     }
 
-    virtual wxDialog *CreateDialog();
+    virtual wxDialog *CreateDialog() wxOVERRIDE;
 
-    wxEventType GetEventType() const
+    wxEventType GetEventType() const wxOVERRIDE
         { return wxEVT_FILEPICKER_CHANGED; }
 
 protected:
-    void UpdateDialogPath(wxDialog *p)
+    void UpdateDialogPath(wxDialog *p) wxOVERRIDE
         { wxStaticCast(p, wxFileDialog)->SetPath(m_path); }
-    void UpdatePathFromDialog(wxDialog *p)
+    void UpdatePathFromDialog(wxDialog *p) wxOVERRIDE
         { m_path = wxStaticCast(p, wxFileDialog)->GetPath(); }
 
 private:
@@ -199,15 +199,15 @@ public:     // overridable
         return dirdlgstyle;
     }
 
-    virtual wxDialog *CreateDialog();
+    virtual wxDialog *CreateDialog() wxOVERRIDE;
 
-    wxEventType GetEventType() const
+    wxEventType GetEventType() const wxOVERRIDE
         { return wxEVT_DIRPICKER_CHANGED; }
 
 protected:
-    void UpdateDialogPath(wxDialog *p)
+    void UpdateDialogPath(wxDialog *p) wxOVERRIDE
         { wxStaticCast(p, wxDirDialog)->SetPath(m_path); }
-    void UpdatePathFromDialog(wxDialog *p)
+    void UpdatePathFromDialog(wxDialog *p) wxOVERRIDE
         { m_path = wxStaticCast(p, wxDirDialog)->GetPath(); }
 
 private:
diff --git a/include/wx/generic/helpext.h b/include/wx/generic/helpext.h
index 7743e18..b713cd8 100644
--- a/include/wx/generic/helpext.h
+++ b/include/wx/generic/helpext.h
@@ -37,36 +37,36 @@ public:
 
     // Set viewer: new name for SetBrowser
     virtual void SetViewer(const wxString& viewer = wxEmptyString,
-                            long flags = wxHELP_NETSCAPE);
+                            long flags = wxHELP_NETSCAPE) wxOVERRIDE;
 
-    virtual bool Initialize(const wxString& dir, int WXUNUSED(server))
+    virtual bool Initialize(const wxString& dir, int WXUNUSED(server)) wxOVERRIDE
         { return Initialize(dir); }
 
-    virtual bool Initialize(const wxString& dir);
-    virtual bool LoadFile(const wxString& file = wxEmptyString);
-    virtual bool DisplayContents(void);
-    virtual bool DisplaySection(int sectionNo);
-    virtual bool DisplaySection(const wxString& section);
-    virtual bool DisplayBlock(long blockNo);
+    virtual bool Initialize(const wxString& dir) wxOVERRIDE;
+    virtual bool LoadFile(const wxString& file = wxEmptyString) wxOVERRIDE;
+    virtual bool DisplayContents(void) wxOVERRIDE;
+    virtual bool DisplaySection(int sectionNo) wxOVERRIDE;
+    virtual bool DisplaySection(const wxString& section) wxOVERRIDE;
+    virtual bool DisplayBlock(long blockNo) wxOVERRIDE;
     virtual bool KeywordSearch(const wxString& k,
-                                wxHelpSearchMode mode = wxHELP_SEARCH_ALL);
+                                wxHelpSearchMode mode = wxHELP_SEARCH_ALL) wxOVERRIDE;
 
-    virtual bool Quit(void);
-    virtual void OnQuit(void);
+    virtual bool Quit(void) wxOVERRIDE;
+    virtual void OnQuit(void) wxOVERRIDE;
 
     virtual bool DisplayHelp(const wxString &) ;
 
     virtual void SetFrameParameters(const wxString& WXUNUSED(title),
                                     const wxSize& WXUNUSED(size),
                                     const wxPoint& WXUNUSED(pos) = wxDefaultPosition,
-                                    bool WXUNUSED(newFrameEachTime) = false)
+                                    bool WXUNUSED(newFrameEachTime) = false) wxOVERRIDE
         {
             // does nothing by default
         }
 
     virtual wxFrame *GetFrameParameters(wxSize *WXUNUSED(size) = NULL,
                                     wxPoint *WXUNUSED(pos) = NULL,
-                                    bool *WXUNUSED(newFrameEachTime) = NULL)
+                                    bool *WXUNUSED(newFrameEachTime) = NULL) wxOVERRIDE
         {
             return NULL; // does nothing by default
         }
diff --git a/include/wx/generic/msgdlgg.h b/include/wx/generic/msgdlgg.h
index 2d8c932..a5c3c11 100644
--- a/include/wx/generic/msgdlgg.h
+++ b/include/wx/generic/msgdlgg.h
@@ -22,7 +22,7 @@ public:
                            long style = wxOK|wxCENTRE,
                            const wxPoint& pos = wxDefaultPosition);
 
-    virtual int ShowModal();
+    virtual int ShowModal() wxOVERRIDE;
 
 protected:
     // Creates a message dialog taking any options that have been set after
diff --git a/include/wx/generic/paletteg.h b/include/wx/generic/paletteg.h
index 53d5d8b..a475c7d 100644
--- a/include/wx/generic/paletteg.h
+++ b/include/wx/generic/paletteg.h
@@ -37,11 +37,11 @@ public:
     int GetPixel( unsigned char red, unsigned char green, unsigned char blue ) const;
     bool GetRGB( int pixel, unsigned char *red, unsigned char *green, unsigned char *blue ) const;
 
-    virtual int GetColoursCount() const;
+    virtual int GetColoursCount() const wxOVERRIDE;
 
 protected:
-    virtual wxGDIRefData *CreateGDIRefData() const;
-    virtual wxGDIRefData *CloneGDIRefData(const wxGDIRefData *data) const;
+    virtual wxGDIRefData *CreateGDIRefData() const wxOVERRIDE;
+    virtual wxGDIRefData *CloneGDIRefData(const wxGDIRefData *data) const wxOVERRIDE;
 
 private:
     wxDECLARE_DYNAMIC_CLASS(wxPalette);
diff --git a/include/wx/generic/private/grid.h b/include/wx/generic/private/grid.h
index be70fc0..f00ab48 100644
--- a/include/wx/generic/private/grid.h
+++ b/include/wx/generic/private/grid.h
@@ -153,7 +153,7 @@ public:
     }
 
 protected:
-    virtual const wxHeaderColumn& GetColumn(unsigned int idx) const
+    virtual const wxHeaderColumn& GetColumn(unsigned int idx) const wxOVERRIDE
     {
         return m_columns[idx];
     }
@@ -171,7 +171,7 @@ private:
     }
 
     // override the base class method to update our m_columns array
-    virtual void OnColumnCountChanging(unsigned int count)
+    virtual void OnColumnCountChanging(unsigned int count) wxOVERRIDE
     {
         const unsigned countOld = m_columns.size();
         if ( count < countOld )
@@ -191,7 +191,7 @@ private:
     }
 
     // override to implement column auto sizing
-    virtual bool UpdateColumnWidthToFit(unsigned int idx, int widthTitle)
+    virtual bool UpdateColumnWidthToFit(unsigned int idx, int widthTitle) wxOVERRIDE
     {
         // TODO: currently grid doesn't support computing the column best width
         //       from its contents so we just use the best label width as is
@@ -201,7 +201,7 @@ private:
     }
 
     // overridden to react to the actions using the columns popup menu
-    virtual void UpdateColumnVisibility(unsigned int idx, bool show)
+    virtual void UpdateColumnVisibility(unsigned int idx, bool show) wxOVERRIDE
     {
         GetOwner()->SetColSize(idx, show ? wxGRID_AUTOSIZE : 0);
 
@@ -213,7 +213,7 @@ private:
 
     // overridden to react to the columns order changes in the customization
     // dialog
-    virtual void UpdateColumnsOrder(const wxArrayInt& order)
+    virtual void UpdateColumnsOrder(const wxArrayInt& order) wxOVERRIDE
     {
         GetOwner()->SetColumnsOrder(order);
     }
@@ -304,9 +304,9 @@ public:
         m_owner = owner;
     }
 
-    virtual wxWindow *GetMainWindowOfCompositeControl() { return m_owner; }
+    virtual wxWindow *GetMainWindowOfCompositeControl() wxOVERRIDE { return m_owner; }
 
-    virtual bool AcceptsFocus() const { return false; }
+    virtual bool AcceptsFocus() const wxOVERRIDE { return false; }
 
     wxGrid *GetOwner() { return m_owner; }
 
@@ -385,9 +385,9 @@ public:
     }
 
 
-    virtual void ScrollWindow( int dx, int dy, const wxRect *rect );
+    virtual void ScrollWindow( int dx, int dy, const wxRect *rect ) wxOVERRIDE;
 
-    virtual bool AcceptsFocus() const { return true; }
+    virtual bool AcceptsFocus() const wxOVERRIDE { return true; }
 
 private:
     void OnPaint( wxPaintEvent &event );
diff --git a/include/wx/generic/private/listctrl.h b/include/wx/generic/private/listctrl.h
index 259e2ce..089688f 100644
--- a/include/wx/generic/private/listctrl.h
+++ b/include/wx/generic/private/listctrl.h
@@ -349,7 +349,7 @@ public:
     virtual ~wxListHeaderWindow();
 
     // We never need focus as we don't have any keyboard interface.
-    virtual bool AcceptsFocus() const { return false; }
+    virtual bool AcceptsFocus() const wxOVERRIDE { return false; }
 
     void DrawCurrent();
     void AdjustDC( wxDC& dc );
@@ -365,7 +365,7 @@ public:
     int m_colToSend;
     int m_widthToSend;
 
-    virtual void OnInternalIdle();
+    virtual void OnInternalIdle() wxOVERRIDE;
 
 private:
     // common part of all ctors
@@ -694,7 +694,7 @@ public:
                      const wxPoint& point = wxDefaultPosition );
 
     // override base class virtual to reset m_lineHeight when the font changes
-    virtual bool SetFont(const wxFont& font)
+    virtual bool SetFont(const wxFont& font) wxOVERRIDE
     {
         if ( !wxWindow::SetFont(font) )
             return false;
@@ -724,7 +724,7 @@ public:
         return m_hasFocus ? m_highlightBrush : m_highlightUnfocusedBrush;
     }
 
-    bool HasFocus() const
+    bool HasFocus() const wxOVERRIDE
     {
         return m_hasFocus;
     }
@@ -780,7 +780,7 @@ protected:
            m_lineSelectSingleOnUp;
 
 protected:
-    wxWindow *GetMainWindowOfCompositeControl() { return GetParent(); }
+    wxWindow *GetMainWindowOfCompositeControl() wxOVERRIDE { return GetParent(); }
 
     // the total count of items in a virtual list control
     size_t m_countVirt;
diff --git a/include/wx/generic/prntdlgg.h b/include/wx/generic/prntdlgg.h
index 0902197..7c4cd1b 100644
--- a/include/wx/generic/prntdlgg.h
+++ b/include/wx/generic/prntdlgg.h
@@ -83,11 +83,11 @@ public:
     wxPostScriptPrintNativeData();
     virtual ~wxPostScriptPrintNativeData();
 
-    virtual bool TransferTo( wxPrintData &data );
-    virtual bool TransferFrom( const wxPrintData &data );
+    virtual bool TransferTo( wxPrintData &data ) wxOVERRIDE;
+    virtual bool TransferFrom( const wxPrintData &data ) wxOVERRIDE;
 
-    virtual bool Ok() const { return IsOk(); }
-    virtual bool IsOk() const { return true; }
+    virtual bool Ok() const wxOVERRIDE { return IsOk(); }
+    virtual bool IsOk() const wxOVERRIDE { return true; }
 
     const wxString& GetPrinterCommand() const { return m_printerCommand; }
     const wxString& GetPrinterOptions() const { return m_printerOptions; }
@@ -149,16 +149,16 @@ public:
     void OnRange(wxCommandEvent& event);
     void OnOK(wxCommandEvent& event);
 
-    virtual bool TransferDataFromWindow();
-    virtual bool TransferDataToWindow();
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
+    virtual bool TransferDataToWindow() wxOVERRIDE;
 
-    virtual int ShowModal();
+    virtual int ShowModal() wxOVERRIDE;
 
-    wxPrintData& GetPrintData()
+    wxPrintData& GetPrintData() wxOVERRIDE
         { return m_printDialogData.GetPrintData(); }
 
-    wxPrintDialogData& GetPrintDialogData() { return m_printDialogData; }
-    wxDC *GetPrintDC();
+    wxPrintDialogData& GetPrintDialogData() wxOVERRIDE { return m_printDialogData; }
+    wxDC *GetPrintDC() wxOVERRIDE;
 
 public:
 //    wxStaticText*       m_printerMessage;
@@ -193,8 +193,8 @@ public:
 
     void OnPrinter(wxListEvent& event);
 
-    virtual bool TransferDataFromWindow();
-    virtual bool TransferDataToWindow();
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
+    virtual bool TransferDataToWindow() wxOVERRIDE;
 
     virtual wxComboBox *CreatePaperTypeChoice();
 
@@ -226,10 +226,10 @@ public:
                              wxPageSetupDialogData* data = NULL);
     virtual ~wxGenericPageSetupDialog();
 
-    virtual bool TransferDataFromWindow();
-    virtual bool TransferDataToWindow();
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
+    virtual bool TransferDataToWindow() wxOVERRIDE;
 
-    virtual wxPageSetupDialogData& GetPageSetupDialogData();
+    virtual wxPageSetupDialogData& GetPageSetupDialogData() wxOVERRIDE;
 
     void OnPrinter(wxCommandEvent& event);
     wxComboBox *CreatePaperTypeChoice(int* x, int* y);
diff --git a/include/wx/generic/richmsgdlgg.h b/include/wx/generic/richmsgdlgg.h
index 053c901..ae955d0 100644
--- a/include/wx/generic/richmsgdlgg.h
+++ b/include/wx/generic/richmsgdlgg.h
@@ -27,15 +27,15 @@ public:
           m_detailsPane(NULL)
     { }
 
-    virtual bool IsCheckBoxChecked() const;
+    virtual bool IsCheckBoxChecked() const wxOVERRIDE;
 
 protected:
     wxCheckBox *m_checkBox;
     wxCollapsiblePane *m_detailsPane;
 
     // overrides methods in the base class
-    virtual void AddMessageDialogCheckBox(wxSizer *sizer);
-    virtual void AddMessageDialogDetails(wxSizer *sizer);
+    virtual void AddMessageDialogCheckBox(wxSizer *sizer) wxOVERRIDE;
+    virtual void AddMessageDialogDetails(wxSizer *sizer) wxOVERRIDE;
 
 private:
     void OnPaneChanged(wxCollapsiblePaneEvent& event);
diff --git a/include/wx/generic/statbmpg.h b/include/wx/generic/statbmpg.h
index f4e09de..577a7e5 100644
--- a/include/wx/generic/statbmpg.h
+++ b/include/wx/generic/statbmpg.h
@@ -35,16 +35,16 @@ public:
                 long style = 0,
                 const wxString& name = wxStaticBitmapNameStr);
 
-    virtual void SetBitmap(const wxBitmap& bitmap)
+    virtual void SetBitmap(const wxBitmap& bitmap) wxOVERRIDE
     {
         m_bitmap = bitmap;
         SetInitialSize(GetBitmapSize());
         Refresh();
     }
 
-    virtual wxBitmap GetBitmap() const { return m_bitmap; }
+    virtual wxBitmap GetBitmap() const wxOVERRIDE { return m_bitmap; }
 
-    virtual void SetIcon(const wxIcon& icon)
+    virtual void SetIcon(const wxIcon& icon) wxOVERRIDE
     {
         m_bitmap.CopyFromIcon(icon);
         SetInitialSize(GetBitmapSize());
@@ -53,7 +53,7 @@ public:
 
 #if defined(__WXGTK20__) || defined(__WXMAC__)
     // icons and bitmaps are really the same thing in wxGTK and wxMac
-    wxIcon GetIcon() const  { return (const wxIcon &)m_bitmap; }
+    wxIcon GetIcon() const  wxOVERRIDE { return (const wxIcon &)m_bitmap; }
 #endif
 
 
diff --git a/include/wx/generic/stattextg.h b/include/wx/generic/stattextg.h
index f64c880..2a85d99 100644
--- a/include/wx/generic/stattextg.h
+++ b/include/wx/generic/stattextg.h
@@ -48,19 +48,19 @@ public:
 
 
     // overridden base class virtual methods
-    virtual void SetLabel(const wxString& label);
-    virtual bool SetFont(const wxFont &font);
+    virtual void SetLabel(const wxString& label) wxOVERRIDE;
+    virtual bool SetFont(const wxFont &font) wxOVERRIDE;
 
 protected:
-    virtual wxSize DoGetBestClientSize() const;
+    virtual wxSize DoGetBestClientSize() const wxOVERRIDE;
 
-    virtual wxString DoGetLabel() const { return m_label; }
-    virtual void DoSetLabel(const wxString& label);
+    virtual wxString DoGetLabel() const wxOVERRIDE { return m_label; }
+    virtual void DoSetLabel(const wxString& label) wxOVERRIDE;
 
-    void DoSetSize(int x, int y, int width, int height, int sizeFlags);
+    void DoSetSize(int x, int y, int width, int height, int sizeFlags) wxOVERRIDE;
 
 #if wxUSE_MARKUP
-    virtual bool DoSetLabelMarkup(const wxString& markup);
+    virtual bool DoSetLabelMarkup(const wxString& markup) wxOVERRIDE;
 #endif // wxUSE_MARKUP
 
 private:
diff --git a/include/wx/gtk/control.h b/include/wx/gtk/control.h
index ce7a3a6..1171f55 100644
--- a/include/wx/gtk/control.h
+++ b/include/wx/gtk/control.h
@@ -39,7 +39,7 @@ public:
 
     virtual wxVisualAttributes GetDefaultAttributes() const wxOVERRIDE;
 #ifdef __WXGTK3__
-    virtual bool SetFont(const wxFont& font);
+    virtual bool SetFont(const wxFont& font) wxOVERRIDE;
 #endif
 
 protected:
diff --git a/include/wx/gtk/dvrenderer.h b/include/wx/gtk/dvrenderer.h
index d1a2a01..0230d7b 100644
--- a/include/wx/gtk/dvrenderer.h
+++ b/include/wx/gtk/dvrenderer.h
@@ -25,14 +25,14 @@ public:
                         wxDataViewCellMode mode = wxDATAVIEW_CELL_INERT,
                         int align = wxDVR_DEFAULT_ALIGNMENT );
 
-    virtual void SetMode( wxDataViewCellMode mode );
-    virtual wxDataViewCellMode GetMode() const;
+    virtual void SetMode( wxDataViewCellMode mode ) wxOVERRIDE;
+    virtual wxDataViewCellMode GetMode() const wxOVERRIDE;
 
-    virtual void SetAlignment( int align );
-    virtual int GetAlignment() const;
+    virtual void SetAlignment( int align ) wxOVERRIDE;
+    virtual int GetAlignment() const wxOVERRIDE;
 
-    virtual void EnableEllipsize(wxEllipsizeMode mode = wxELLIPSIZE_MIDDLE);
-    virtual wxEllipsizeMode GetEllipsizeMode() const;
+    virtual void EnableEllipsize(wxEllipsizeMode mode = wxELLIPSIZE_MIDDLE) wxOVERRIDE;
+    virtual wxEllipsizeMode GetEllipsizeMode() const wxOVERRIDE;
 
     virtual bool FinishEditing() wxOVERRIDE;
 
diff --git a/include/wx/gtk/dvrenderers.h b/include/wx/gtk/dvrenderers.h
index ee3a4bc..1a4dc91 100644
--- a/include/wx/gtk/dvrenderers.h
+++ b/include/wx/gtk/dvrenderers.h
@@ -31,12 +31,12 @@ public:
                             wxDataViewCellMode mode = wxDATAVIEW_CELL_INERT,
                             int align = wxDVR_DEFAULT_ALIGNMENT );
 
-    virtual bool SetValue( const wxVariant &value )
+    virtual bool SetValue( const wxVariant &value ) wxOVERRIDE
     {
         return SetTextValue(value);
     }
 
-    virtual bool GetValue( wxVariant &value ) const
+    virtual bool GetValue( wxVariant &value ) const wxOVERRIDE
     {
         wxString str;
         if ( !GetTextValue(str) )
@@ -47,12 +47,12 @@ public:
         return true;
     }
 
-    virtual void SetAlignment( int align );
+    virtual void SetAlignment( int align ) wxOVERRIDE;
 
-    virtual bool GtkSupportsAttrs() const { return true; }
-    virtual bool GtkSetAttr(const wxDataViewItemAttr& attr);
+    virtual bool GtkSupportsAttrs() const wxOVERRIDE { return true; }
+    virtual bool GtkSetAttr(const wxDataViewItemAttr& attr) wxOVERRIDE;
 
-    virtual GtkCellRendererText *GtkGetTextRenderer() const;
+    virtual GtkCellRendererText *GtkGetTextRenderer() const wxOVERRIDE;
 
 protected:
     // implementation of Set/GetValue()
@@ -76,8 +76,8 @@ public:
                               wxDataViewCellMode mode = wxDATAVIEW_CELL_INERT,
                               int align = wxDVR_DEFAULT_ALIGNMENT );
 
-    bool SetValue( const wxVariant &value );
-    bool GetValue( wxVariant &value ) const;
+    bool SetValue( const wxVariant &value ) wxOVERRIDE;
+    bool GetValue( wxVariant &value ) const wxOVERRIDE;
 
 protected:
     wxDECLARE_DYNAMIC_CLASS_NO_COPY(wxDataViewBitmapRenderer);
@@ -96,8 +96,8 @@ public:
                               wxDataViewCellMode mode = wxDATAVIEW_CELL_INERT,
                               int align = wxDVR_DEFAULT_ALIGNMENT );
 
-    bool SetValue( const wxVariant &value );
-    bool GetValue( wxVariant &value ) const;
+    bool SetValue( const wxVariant &value ) wxOVERRIDE;
+    bool GetValue( wxVariant &value ) const wxOVERRIDE;
 
 protected:
     wxDECLARE_DYNAMIC_CLASS_NO_COPY(wxDataViewToggleRenderer);
@@ -120,14 +120,14 @@ public:
 
 
     // Create DC on request
-    virtual wxDC *GetDC();
+    virtual wxDC *GetDC() wxOVERRIDE;
 
     // override the base class function to use GTK text cell renderer
     virtual void RenderText(const wxString& text,
                             int xoffset,
                             wxRect cell,
                             wxDC *dc,
-                            int state);
+                            int state) wxOVERRIDE;
 
     struct GTKRenderParams;
 
@@ -139,15 +139,15 @@ public:
 
     // we may or not support attributes, as we don't know it, return true to
     // make it possible to use them
-    virtual bool GtkSupportsAttrs() const { return true; }
+    virtual bool GtkSupportsAttrs() const wxOVERRIDE { return true; }
 
-    virtual bool GtkSetAttr(const wxDataViewItemAttr& attr)
+    virtual bool GtkSetAttr(const wxDataViewItemAttr& attr) wxOVERRIDE
     {
         SetAttr(attr);
         return !attr.IsDefault();
     }
 
-    virtual GtkCellRendererText *GtkGetTextRenderer() const;
+    virtual GtkCellRendererText *GtkGetTextRenderer() const wxOVERRIDE;
 
 private:
     bool Init(wxDataViewCellMode mode, int align);
@@ -182,11 +182,11 @@ public:
                                 int align = wxDVR_DEFAULT_ALIGNMENT );
     virtual ~wxDataViewProgressRenderer();
 
-    bool SetValue( const wxVariant &value );
-    bool GetValue( wxVariant &value ) const;
+    bool SetValue( const wxVariant &value ) wxOVERRIDE;
+    bool GetValue( wxVariant &value ) const wxOVERRIDE;
 
-    virtual bool Render( wxRect cell, wxDC *dc, int state );
-    virtual wxSize GetSize() const;
+    virtual bool Render( wxRect cell, wxDC *dc, int state ) wxOVERRIDE;
+    virtual wxSize GetSize() const wxOVERRIDE;
 
 private:
     void GTKSetLabel();
@@ -218,15 +218,15 @@ public:
                                 int align = wxDVR_DEFAULT_ALIGNMENT );
     virtual ~wxDataViewIconTextRenderer();
 
-    bool SetValue( const wxVariant &value );
-    bool GetValue( wxVariant &value ) const;
+    bool SetValue( const wxVariant &value ) wxOVERRIDE;
+    bool GetValue( wxVariant &value ) const wxOVERRIDE;
 
-    virtual void GtkPackIntoColumn(GtkTreeViewColumn *column);
+    virtual void GtkPackIntoColumn(GtkTreeViewColumn *column) wxOVERRIDE;
 
 protected:
     virtual void GtkOnCellChanged(const wxVariant& value,
                                   const wxDataViewItem& item,
-                                  unsigned col);
+                                  unsigned col) wxOVERRIDE;
 
 private:
     wxDataViewIconText   m_value;
@@ -247,12 +247,12 @@ public:
     wxDataViewChoiceRenderer(const wxArrayString &choices,
                              wxDataViewCellMode mode = wxDATAVIEW_CELL_EDITABLE,
                              int alignment = wxDVR_DEFAULT_ALIGNMENT );
-    virtual bool Render( wxRect rect, wxDC *dc, int state );
-    virtual wxSize GetSize() const;
-    virtual bool SetValue( const wxVariant &value );
-    virtual bool GetValue( wxVariant &value ) const;
+    virtual bool Render( wxRect rect, wxDC *dc, int state ) wxOVERRIDE;
+    virtual wxSize GetSize() const wxOVERRIDE;
+    virtual bool SetValue( const wxVariant &value ) wxOVERRIDE;
+    virtual bool GetValue( wxVariant &value ) const wxOVERRIDE;
 
-    void SetAlignment( int align );
+    void SetAlignment( int align ) wxOVERRIDE;
 
     wxString GetChoice(size_t index) const { return m_choices[index]; }
     const wxArrayString& GetChoices() const { return m_choices; }
diff --git a/include/wx/gtk/filepicker.h b/include/wx/gtk/filepicker.h
index e9247c3..8da6288 100644
--- a/include/wx/gtk/filepicker.h
+++ b/include/wx/gtk/filepicker.h
@@ -28,7 +28,7 @@
     /* needs to create the dialog in ::Create() and not for each user      */ \
     /* request in response to the user click as the generic implementation */ \
     /* does.                                                               */ \
-    virtual wxWindow *GetDialogParent()                                       \
+    virtual wxWindow *GetDialogParent() wxOVERRIDE                            \
     {                                                                         \
         return NULL;                                                          \
     }                                                                         \
@@ -42,7 +42,7 @@
     /* give us access to the internal GdkWindow of a GtkFileChooserButton  */ \
 protected:                                                                    \
     virtual GdkWindow *                                                       \
-    GTKGetWindow(wxArrayGdkWindows& WXUNUSED(windows)) const                  \
+    GTKGetWindow(wxArrayGdkWindows& WXUNUSED(windows)) const wxOVERRIDE       \
         { return NULL; }
 
 
@@ -92,8 +92,8 @@ public:     // overrides
     // event handler for the click
     void OnDialogOK(wxCommandEvent &);
 
-    virtual void SetPath(const wxString &str);
-    virtual void SetInitialDirectory(const wxString& dir);
+    virtual void SetPath(const wxString &str) wxOVERRIDE;
+    virtual void SetInitialDirectory(const wxString& dir) wxOVERRIDE;
 
     // see macro defined above
     FILEDIRBTN_OVERRIDES
@@ -156,13 +156,13 @@ public:     // overrides
 
     // GtkFileChooserButton does not support GTK_FILE_CHOOSER_CREATE_FOLDER
     // thus we must ensure that the wxDD_DIR_MUST_EXIST style was given
-    long GetDialogStyle() const
+    long GetDialogStyle() const wxOVERRIDE
     {
         return (wxGenericDirButton::GetDialogStyle() | wxDD_DIR_MUST_EXIST);
     }
 
-    virtual void SetPath(const wxString &str);
-    virtual void SetInitialDirectory(const wxString& dir);
+    virtual void SetPath(const wxString &str) wxOVERRIDE;
+    virtual void SetInitialDirectory(const wxString& dir) wxOVERRIDE;
 
     // see macro defined above
     FILEDIRBTN_OVERRIDES
diff --git a/include/wx/html/m_templ.h b/include/wx/html/m_templ.h
index bdcc9ec..41d0416 100644
--- a/include/wx/html/m_templ.h
+++ b/include/wx/html/m_templ.h
@@ -60,7 +60,7 @@ I STRONGLY recommend reading and understanding these macros!!
     {                                                                     \
         wxDECLARE_DYNAMIC_CLASS(wxHTML_Module##name );                    \
         public:                                                           \
-            void FillHandlersTable(wxHtmlWinParser *parser)               \
+            void FillHandlersTable(wxHtmlWinParser *parser) wxOVERRIDE    \
                 {
 
 
diff --git a/include/wx/htmllbox.h b/include/wx/htmllbox.h
index afe2d24..e936699 100644
--- a/include/wx/htmllbox.h
+++ b/include/wx/htmllbox.h
@@ -272,7 +272,7 @@ public:
     virtual void SetString(unsigned int n, const wxString& s) wxOVERRIDE;
 
     // resolve ambiguity between wxItemContainer and wxVListBox versions
-    void Clear();
+    void Clear() wxOVERRIDE;
 
 protected:
     virtual int DoInsertItems(const wxArrayStringsAdapter & items,
diff --git a/include/wx/mdi.h b/include/wx/mdi.h
index dd52227..3ef3864 100644
--- a/include/wx/mdi.h
+++ b/include/wx/mdi.h
@@ -239,7 +239,7 @@ public:
 
     // title is used as the tab label
     virtual wxString GetTitle() const wxOVERRIDE { return m_title; }
-    virtual void SetTitle(const wxString& title) = 0;
+    virtual void SetTitle(const wxString& title) wxOVERRIDE = 0;
 
     // no maximize etc
     virtual void Maximize(bool WXUNUSED(maximize) = true) wxOVERRIDE { }
diff --git a/include/wx/object.h b/include/wx/object.h
index 6a01407..ff6ab21 100644
--- a/include/wx/object.h
+++ b/include/wx/object.h
@@ -341,7 +341,7 @@ private:
 
 class WXDLLIMPEXP_BASE wxObject
 {
-    wxDECLARE_ABSTRACT_CLASS(wxObject);
+    wxDECLARE_PURE_ABSTRACT_CLASS(wxObject);
 
 public:
     wxObject() { m_refData = NULL; }
diff --git a/include/wx/propgrid/advprops.h b/include/wx/propgrid/advprops.h
index 750b4fb..2973e67 100644
--- a/include/wx/propgrid/advprops.h
+++ b/include/wx/propgrid/advprops.h
@@ -158,14 +158,14 @@ public:
                    const wxString& name = wxPG_LABEL,
                    const wxFont& value = wxFont());
     virtual ~wxFontProperty();
-    virtual void OnSetValue();
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
+    virtual void OnSetValue() wxOVERRIDE;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
     virtual bool OnEvent( wxPropertyGrid* propgrid,
-                          wxWindow* primary, wxEvent& event );
+                          wxWindow* primary, wxEvent& event ) wxOVERRIDE;
     virtual wxVariant ChildChanged( wxVariant& thisValue,
                                     int childIndex,
-                                    wxVariant& childValue ) const;
-    virtual void RefreshChildren();
+                                    wxVariant& childValue ) const wxOVERRIDE;
+    virtual void RefreshChildren() wxOVERRIDE;
 
 protected:
 };
@@ -193,10 +193,10 @@ public:
                                 value = wxColourPropertyValue() );
     virtual ~wxSystemColourProperty();
 
-    virtual void OnSetValue();
+    virtual void OnSetValue() wxOVERRIDE;
     virtual bool IntToValue(wxVariant& variant,
                             int number,
-                            int argFlags = 0) const;
+                            int argFlags = 0) const wxOVERRIDE;
 
     /**
         Override in derived class to customize how colours are printed as
@@ -210,16 +210,16 @@ public:
     */
     virtual int GetCustomColourIndex() const;
 
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
     virtual bool StringToValue( wxVariant& variant,
                                 const wxString& text,
-                                int argFlags = 0 ) const;
+                                int argFlags = 0 ) const wxOVERRIDE;
     virtual bool OnEvent( wxPropertyGrid* propgrid,
-                          wxWindow* primary, wxEvent& event );
-    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
-    virtual wxSize OnMeasureImage( int item ) const;
+                          wxWindow* primary, wxEvent& event ) wxOVERRIDE;
+    virtual bool DoSetAttribute( const wxString& name, wxVariant& value ) wxOVERRIDE;
+    virtual wxSize OnMeasureImage( int item ) const wxOVERRIDE;
     virtual void OnCustomPaint( wxDC& dc,
-                                const wxRect& rect, wxPGPaintData& paintdata );
+                                const wxRect& rect, wxPGPaintData& paintdata ) wxOVERRIDE;
 
     // Helper function to show the colour dialog
     bool QueryColourFromUser( wxVariant& variant ) const;
@@ -270,11 +270,11 @@ public:
                       const wxColour& value = *wxWHITE );
     virtual ~wxColourProperty();
 
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
-    virtual wxColour GetColour( int index ) const;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
+    virtual wxColour GetColour( int index ) const wxOVERRIDE;
 
 protected:
-    virtual wxVariant DoTranslateVal( wxColourPropertyValue& v ) const;
+    virtual wxVariant DoTranslateVal( wxColourPropertyValue& v ) const wxOVERRIDE;
 
 private:
     void Init( wxColour colour );
@@ -295,9 +295,9 @@ class WXDLLIMPEXP_PROPGRID wxCursorProperty : public wxEnumProperty
                       int value = 0 );
     virtual ~wxCursorProperty();
 
-    virtual wxSize OnMeasureImage( int item ) const;
+    virtual wxSize OnMeasureImage( int item ) const wxOVERRIDE;
     virtual void OnCustomPaint( wxDC& dc,
-                                const wxRect& rect, wxPGPaintData& paintdata );
+                                const wxRect& rect, wxPGPaintData& paintdata ) wxOVERRIDE;
 };
 
 // -----------------------------------------------------------------------
@@ -320,11 +320,11 @@ public:
                          const wxString& value = wxEmptyString);
     virtual ~wxImageFileProperty();
 
-    virtual void OnSetValue();
+    virtual void OnSetValue() wxOVERRIDE;
 
-    virtual wxSize OnMeasureImage( int item ) const;
+    virtual wxSize OnMeasureImage( int item ) const wxOVERRIDE;
     virtual void OnCustomPaint( wxDC& dc,
-                                const wxRect& rect, wxPGPaintData& paintdata );
+                                const wxRect& rect, wxPGPaintData& paintdata ) wxOVERRIDE;
 
 protected:
     wxBitmap*   m_pBitmap; // final thumbnail area
@@ -371,13 +371,13 @@ public:
 
     virtual ~wxMultiChoiceProperty();
 
-    virtual void OnSetValue();
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
+    virtual void OnSetValue() wxOVERRIDE;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
     virtual bool StringToValue(wxVariant& variant,
                                const wxString& text,
-                               int argFlags = 0) const;
+                               int argFlags = 0) const wxOVERRIDE;
     virtual bool OnEvent( wxPropertyGrid* propgrid,
-                          wxWindow* primary, wxEvent& event );
+                          wxWindow* primary, wxEvent& event ) wxOVERRIDE;
 
     wxArrayInt GetValueAsArrayInt() const
     {
@@ -423,13 +423,13 @@ public:
                     const wxDateTime& value = wxDateTime() );
     virtual ~wxDateProperty();
 
-    virtual void OnSetValue();
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
+    virtual void OnSetValue() wxOVERRIDE;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
     virtual bool StringToValue(wxVariant& variant,
                                const wxString& text,
-                               int argFlags = 0) const;
+                               int argFlags = 0) const wxOVERRIDE;
 
-    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
+    virtual bool DoSetAttribute( const wxString& name, wxVariant& value ) wxOVERRIDE;
 
     void SetFormat( const wxString& format )
     {
@@ -498,13 +498,13 @@ class WXDLLIMPEXP_PROPGRID wxPGSpinCtrlEditor : public wxPGTextCtrlEditor
 public:
     virtual ~wxPGSpinCtrlEditor();
 
-    wxString GetName() const;
+    wxString GetName() const wxOVERRIDE;
     virtual wxPGWindowList CreateControls(wxPropertyGrid* propgrid,
                                           wxPGProperty* property,
                                           const wxPoint& pos,
-                                          const wxSize& size) const;
+                                          const wxSize& size) const wxOVERRIDE;
     virtual bool OnEvent( wxPropertyGrid* propgrid, wxPGProperty* property,
-        wxWindow* wnd, wxEvent& event ) const;
+        wxWindow* wnd, wxEvent& event ) const wxOVERRIDE;
 
 private:
     mutable wxString m_tempString;
diff --git a/include/wx/propgrid/editors.h b/include/wx/propgrid/editors.h
index e917e58..620fda1 100644
--- a/include/wx/propgrid/editors.h
+++ b/include/wx/propgrid/editors.h
@@ -254,24 +254,24 @@ public:
     virtual wxPGWindowList CreateControls(wxPropertyGrid* propgrid,
                                           wxPGProperty* property,
                                           const wxPoint& pos,
-                                          const wxSize& size) const;
+                                          const wxSize& size) const wxOVERRIDE;
     virtual void UpdateControl( wxPGProperty* property,
-                                wxWindow* ctrl ) const;
+                                wxWindow* ctrl ) const wxOVERRIDE;
     virtual bool OnEvent( wxPropertyGrid* propgrid,
                           wxPGProperty* property,
                           wxWindow* primaryCtrl,
-                          wxEvent& event ) const;
+                          wxEvent& event ) const wxOVERRIDE;
     virtual bool GetValueFromControl( wxVariant& variant,
                                       wxPGProperty* property,
-                                      wxWindow* ctrl ) const;
+                                      wxWindow* ctrl ) const wxOVERRIDE;
 
-    virtual wxString GetName() const;
+    virtual wxString GetName() const wxOVERRIDE;
 
     //virtual wxPGCellRenderer* GetCellRenderer() const;
     virtual void SetControlStringValue( wxPGProperty* property,
                                         wxWindow* ctrl,
-                                        const wxString& txt ) const;
-    virtual void OnFocus( wxPGProperty* property, wxWindow* wnd ) const;
+                                        const wxString& txt ) const wxOVERRIDE;
+    virtual void OnFocus( wxPGProperty* property, wxWindow* wnd ) const wxOVERRIDE;
 
     // Provided so that, for example, ComboBox editor can use the same code
     // (multiple inheritance would get way too messy).
@@ -297,32 +297,32 @@ public:
     virtual wxPGWindowList CreateControls(wxPropertyGrid* propgrid,
                                           wxPGProperty* property,
                                           const wxPoint& pos,
-                                          const wxSize& size) const;
+                                          const wxSize& size) const wxOVERRIDE;
     virtual void UpdateControl( wxPGProperty* property,
-                                wxWindow* ctrl ) const;
+                                wxWindow* ctrl ) const wxOVERRIDE;
     virtual bool OnEvent( wxPropertyGrid* propgrid,
                           wxPGProperty* property,
                           wxWindow* primaryCtrl,
-                          wxEvent& event ) const;
+                          wxEvent& event ) const wxOVERRIDE;
     virtual bool GetValueFromControl( wxVariant& variant,
                                       wxPGProperty* property,
-                                      wxWindow* ctrl ) const;
+                                      wxWindow* ctrl ) const wxOVERRIDE;
     virtual void SetValueToUnspecified( wxPGProperty* property,
-                                        wxWindow* ctrl ) const;
-    virtual wxString GetName() const;
+                                        wxWindow* ctrl ) const wxOVERRIDE;
+    virtual wxString GetName() const wxOVERRIDE;
 
     virtual void SetControlIntValue( wxPGProperty* property,
                                      wxWindow* ctrl,
-                                     int value ) const;
+                                     int value ) const wxOVERRIDE;
     virtual void SetControlStringValue( wxPGProperty* property,
                                         wxWindow* ctrl,
-                                        const wxString& txt ) const;
+                                        const wxString& txt ) const wxOVERRIDE;
 
     virtual int InsertItem( wxWindow* ctrl,
                             const wxString& label,
-                            int index ) const;
-    virtual void DeleteItem( wxWindow* ctrl, int index ) const;
-    virtual bool CanContainCustomImage() const;
+                            int index ) const wxOVERRIDE;
+    virtual void DeleteItem( wxWindow* ctrl, int index ) const wxOVERRIDE;
+    virtual bool CanContainCustomImage() const wxOVERRIDE;
 
     // CreateControls calls this with CB_READONLY in extraStyle
     wxWindow* CreateControlsBase( wxPropertyGrid* propgrid,
@@ -344,20 +344,20 @@ public:
     virtual wxPGWindowList CreateControls(wxPropertyGrid* propgrid,
                                           wxPGProperty* property,
                                           const wxPoint& pos,
-                                          const wxSize& size) const;
+                                          const wxSize& size) const wxOVERRIDE;
 
-    virtual wxString GetName() const;
+    virtual wxString GetName() const wxOVERRIDE;
 
-    virtual void UpdateControl( wxPGProperty* property, wxWindow* ctrl ) const;
+    virtual void UpdateControl( wxPGProperty* property, wxWindow* ctrl ) const wxOVERRIDE;
 
     virtual bool OnEvent( wxPropertyGrid* propgrid, wxPGProperty* property,
-        wxWindow* ctrl, wxEvent& event ) const;
+        wxWindow* ctrl, wxEvent& event ) const wxOVERRIDE;
 
     virtual bool GetValueFromControl( wxVariant& variant,
                                       wxPGProperty* property,
-                                      wxWindow* ctrl ) const;
+                                      wxWindow* ctrl ) const wxOVERRIDE;
 
-    virtual void OnFocus( wxPGProperty* property, wxWindow* wnd ) const;
+    virtual void OnFocus( wxPGProperty* property, wxWindow* wnd ) const wxOVERRIDE;
 
 };
 
@@ -367,12 +367,12 @@ class WXDLLIMPEXP_PROPGRID wxPGChoiceAndButtonEditor : public wxPGChoiceEditor
 public:
     wxPGChoiceAndButtonEditor() {}
     virtual ~wxPGChoiceAndButtonEditor();
-    virtual wxString GetName() const;
+    virtual wxString GetName() const wxOVERRIDE;
 
     virtual wxPGWindowList CreateControls(wxPropertyGrid* propgrid,
                                           wxPGProperty* property,
                                           const wxPoint& pos,
-                                          const wxSize& size) const;
+                                          const wxSize& size) const wxOVERRIDE;
 
     wxDECLARE_DYNAMIC_CLASS(wxPGChoiceAndButtonEditor);
 };
@@ -383,12 +383,12 @@ wxPGTextCtrlAndButtonEditor : public wxPGTextCtrlEditor
 public:
     wxPGTextCtrlAndButtonEditor() {}
     virtual ~wxPGTextCtrlAndButtonEditor();
-    virtual wxString GetName() const;
+    virtual wxString GetName() const wxOVERRIDE;
 
     virtual wxPGWindowList CreateControls(wxPropertyGrid* propgrid,
                                           wxPGProperty* property,
                                           const wxPoint& pos,
-                                          const wxSize& size) const;
+                                          const wxSize& size) const wxOVERRIDE;
 
     wxDECLARE_DYNAMIC_CLASS(wxPGTextCtrlAndButtonEditor);
 };
@@ -407,32 +407,32 @@ public:
     wxPGCheckBoxEditor() {}
     virtual ~wxPGCheckBoxEditor();
 
-    virtual wxString GetName() const;
+    virtual wxString GetName() const wxOVERRIDE;
     virtual wxPGWindowList CreateControls(wxPropertyGrid* propgrid,
                                           wxPGProperty* property,
                                           const wxPoint& pos,
-                                          const wxSize& size) const;
+                                          const wxSize& size) const wxOVERRIDE;
     virtual void UpdateControl( wxPGProperty* property,
-                                wxWindow* ctrl ) const;
+                                wxWindow* ctrl ) const wxOVERRIDE;
     virtual bool OnEvent( wxPropertyGrid* propgrid,
                           wxPGProperty* property,
                           wxWindow* primaryCtrl,
-                          wxEvent& event ) const;
+                          wxEvent& event ) const wxOVERRIDE;
     virtual bool GetValueFromControl( wxVariant& variant,
                                       wxPGProperty* property,
-                                      wxWindow* ctrl ) const;
+                                      wxWindow* ctrl ) const wxOVERRIDE;
     virtual void SetValueToUnspecified( wxPGProperty* property,
-                                        wxWindow* ctrl ) const;
+                                        wxWindow* ctrl ) const wxOVERRIDE;
 
     virtual void DrawValue( wxDC& dc,
                             const wxRect& rect,
                             wxPGProperty* property,
-                            const wxString& text ) const;
+                            const wxString& text ) const wxOVERRIDE;
     //virtual wxPGCellRenderer* GetCellRenderer() const;
 
     virtual void SetControlIntValue( wxPGProperty* property,
                                      wxWindow* ctrl,
-                                     int value ) const;
+                                     int value ) const wxOVERRIDE;
 };
 
 #endif
diff --git a/include/wx/propgrid/property.h b/include/wx/propgrid/property.h
index 542fa35..9845cde 100644
--- a/include/wx/propgrid/property.h
+++ b/include/wx/propgrid/property.h
@@ -2551,7 +2551,7 @@ private:
 //
 
 #define WX_PG_DECLARE_DOGETEDITORCLASS \
-    virtual const wxPGEditor* DoGetEditorClass() const;
+    virtual const wxPGEditor* DoGetEditorClass() const wxOVERRIDE;
 
 #ifndef WX_PG_DECLARE_PROPERTY_CLASS
     #define WX_PG_DECLARE_PROPERTY_CLASS(CLASSNAME) \
@@ -2591,7 +2591,7 @@ public:
     wxPGRootProperty( const wxString& name = wxS("<Root>") );
     virtual ~wxPGRootProperty();
 
-    virtual bool StringToValue( wxVariant&, const wxString&, int ) const
+    virtual bool StringToValue( wxVariant&, const wxString&, int ) const wxOVERRIDE
     {
         return false;
     }
@@ -2621,8 +2621,8 @@ public:
 
     int GetTextExtent( const wxWindow* wnd, const wxFont& font ) const;
 
-    virtual wxString ValueToString( wxVariant& value, int argFlags ) const;
-    virtual wxString GetValueAsString( int argFlags = 0 ) const;
+    virtual wxString ValueToString( wxVariant& value, int argFlags ) const wxOVERRIDE;
+    virtual wxString GetValueAsString( int argFlags = 0 ) const wxOVERRIDE;
 
 protected:
     void SetTextColIndex( unsigned int colInd )
diff --git a/include/wx/propgrid/propgriddefs.h b/include/wx/propgrid/propgriddefs.h
index d00f147..11f917c 100644
--- a/include/wx/propgrid/propgriddefs.h
+++ b/include/wx/propgrid/propgriddefs.h
@@ -540,11 +540,11 @@ public:\
 \
     const classname &GetValue() const { return m_value; } \
 \
-    virtual bool Eq(wxVariantData& data) const; \
+    virtual bool Eq(wxVariantData& data) const wxOVERRIDE; \
 \
-    virtual wxString GetType() const; \
+    virtual wxString GetType() const wxOVERRIDE; \
 \
-    virtual wxVariantData* Clone() const { return new classname##VariantData(m_value); } \
+    virtual wxVariantData* Clone() const wxOVERRIDE { return new classname##VariantData(m_value); } \
 \
     DECLARE_WXANY_CONVERSION() \
 protected:\
diff --git a/include/wx/propgrid/props.h b/include/wx/propgrid/props.h
index d434a10..7ebce7d 100644
--- a/include/wx/propgrid/props.h
+++ b/include/wx/propgrid/props.h
@@ -115,16 +115,16 @@ public:
                       const wxString& value = wxEmptyString );
     virtual ~wxStringProperty();
 
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
     virtual bool StringToValue( wxVariant& variant,
                                 const wxString& text,
-                                int argFlags = 0 ) const;
+                                int argFlags = 0 ) const wxOVERRIDE;
 
-    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
+    virtual bool DoSetAttribute( const wxString& name, wxVariant& value ) wxOVERRIDE;
 
     /** This is updated so "<composed>" special value can be handled.
     */
-    virtual void OnSetValue();
+    virtual void OnSetValue() wxOVERRIDE;
 
 protected:
 };
@@ -228,17 +228,17 @@ public:
                    const wxString& name,
                    const wxLongLong& value );
 #endif
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
     virtual bool StringToValue( wxVariant& variant,
                                 const wxString& text,
-                                int argFlags = 0 ) const;
+                                int argFlags = 0 ) const wxOVERRIDE;
     virtual bool ValidateValue( wxVariant& value,
-                                wxPGValidationInfo& validationInfo ) const;
+                                wxPGValidationInfo& validationInfo ) const wxOVERRIDE;
     virtual bool IntToValue( wxVariant& variant,
                              int number,
-                             int argFlags = 0 ) const;
+                             int argFlags = 0 ) const wxOVERRIDE;
     static wxValidator* GetClassValidator();
-    virtual wxValidator* DoGetValidator() const;
+    virtual wxValidator* DoGetValidator() const wxOVERRIDE;
 
     /** Validation helpers.
     */
@@ -291,17 +291,17 @@ public:
                     const wxString& name,
                     const wxULongLong& value );
 #endif
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
     virtual bool StringToValue( wxVariant& variant,
                                 const wxString& text,
-                                int argFlags = 0 ) const;
-    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
+                                int argFlags = 0 ) const wxOVERRIDE;
+    virtual bool DoSetAttribute( const wxString& name, wxVariant& value ) wxOVERRIDE;
     virtual bool ValidateValue( wxVariant& value,
-                                wxPGValidationInfo& validationInfo ) const;
-    virtual wxValidator* DoGetValidator () const;
+                                wxPGValidationInfo& validationInfo ) const wxOVERRIDE;
+    virtual wxValidator* DoGetValidator () const wxOVERRIDE;
     virtual bool IntToValue( wxVariant& variant,
                              int number,
-                             int argFlags = 0 ) const;
+                             int argFlags = 0 ) const wxOVERRIDE;
 
 protected:
     wxByte      m_base;
@@ -342,15 +342,15 @@ public:
                      double value = 0.0 );
     virtual ~wxFloatProperty();
 
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
     virtual bool StringToValue( wxVariant& variant,
                                 const wxString& text,
-                                int argFlags = 0 ) const;
-    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
-    virtual wxVariant DoGetAttribute( const wxString& name ) const;
+                                int argFlags = 0 ) const wxOVERRIDE;
+    virtual bool DoSetAttribute( const wxString& name, wxVariant& value ) wxOVERRIDE;
+    virtual wxVariant DoGetAttribute( const wxString& name ) const wxOVERRIDE;
 
     virtual bool ValidateValue( wxVariant& value,
-                                wxPGValidationInfo& validationInfo ) const;
+                                wxPGValidationInfo& validationInfo ) const wxOVERRIDE;
 
     /** Validation helper.
     */
@@ -360,7 +360,7 @@ public:
                               int mode =
                                  wxPG_PROPERTY_VALIDATION_ERROR_MESSAGE );
     static wxValidator* GetClassValidator();
-    virtual wxValidator* DoGetValidator () const;
+    virtual wxValidator* DoGetValidator () const wxOVERRIDE;
 
 protected:
     int m_precision;
@@ -385,14 +385,14 @@ public:
                     bool value = false );
     virtual ~wxBoolProperty();
 
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
     virtual bool StringToValue( wxVariant& variant,
                                 const wxString& text,
-                                int argFlags = 0 ) const;
+                                int argFlags = 0 ) const wxOVERRIDE;
     virtual bool IntToValue( wxVariant& variant,
-                             int number, int argFlags = 0 ) const;
-    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
-    virtual wxVariant DoGetAttribute( const wxString& name ) const;
+                             int number, int argFlags = 0 ) const wxOVERRIDE;
+    virtual bool DoSetAttribute( const wxString& name, wxVariant& value ) wxOVERRIDE;
+    virtual wxVariant DoGetAttribute( const wxString& name ) const wxOVERRIDE;
 };
 
 // -----------------------------------------------------------------------
@@ -453,19 +453,19 @@ public:
 
     size_t GetItemCount() const { return m_choices.GetCount(); }
 
-    virtual void OnSetValue();
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
+    virtual void OnSetValue() wxOVERRIDE;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
     virtual bool StringToValue( wxVariant& variant,
                                 const wxString& text,
-                                int argFlags = 0 ) const;
+                                int argFlags = 0 ) const wxOVERRIDE;
     virtual bool ValidateValue( wxVariant& value,
-                                wxPGValidationInfo& validationInfo ) const;
+                                wxPGValidationInfo& validationInfo ) const wxOVERRIDE;
 
     // If wxPG_FULL_VALUE is not set in flags, then the value is interpreted
     // as index to choices list. Otherwise, it is actual value.
     virtual bool IntToValue( wxVariant& variant,
                              int number,
-                             int argFlags = 0 ) const;
+                             int argFlags = 0 ) const wxOVERRIDE;
 
     //
     // Additional virtuals
@@ -476,9 +476,9 @@ public:
     // GetChoiceSelection needs to overridden since m_index is
     // the true index, and various property classes derived from
     // this take advantage of it.
-    virtual int GetChoiceSelection() const { return m_index; }
+    virtual int GetChoiceSelection() const wxOVERRIDE { return m_index; }
 
-    virtual void OnValidationFailure( wxVariant& pendingValue );
+    virtual void OnValidationFailure( wxVariant& pendingValue ) wxOVERRIDE;
 
 protected:
 
@@ -600,20 +600,20 @@ public:
                      int value = 0 );
     virtual ~wxFlagsProperty ();
 
-    virtual void OnSetValue();
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
+    virtual void OnSetValue() wxOVERRIDE;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
     virtual bool StringToValue( wxVariant& variant,
                                 const wxString& text,
-                                int flags ) const;
+                                int flags ) const  wxOVERRIDE;
     virtual wxVariant ChildChanged( wxVariant& thisValue,
                                     int childIndex,
-                                    wxVariant& childValue ) const;
-    virtual void RefreshChildren();
-    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
+                                    wxVariant& childValue ) const wxOVERRIDE;
+    virtual void RefreshChildren() wxOVERRIDE;
+    virtual bool DoSetAttribute( const wxString& name, wxVariant& value ) wxOVERRIDE;
 
     // GetChoiceSelection needs to overridden since m_choices is
     // used and value is integer, but it is not index.
-    virtual int GetChoiceSelection() const { return wxNOT_FOUND; }
+    virtual int GetChoiceSelection() const wxOVERRIDE { return wxNOT_FOUND; }
 
     // helpers
     size_t GetItemCount() const { return m_choices.GetCount(); }
@@ -677,16 +677,16 @@ public:
                     const wxString& value = wxEmptyString );
     virtual ~wxFileProperty ();
 
-    virtual void OnSetValue();
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
+    virtual void OnSetValue() wxOVERRIDE;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
     virtual bool StringToValue( wxVariant& variant,
                                 const wxString& text,
-                                int argFlags = 0 ) const;
-    virtual wxPGEditorDialogAdapter* GetEditorDialog() const;
-    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
+                                int argFlags = 0 ) const wxOVERRIDE;
+    virtual wxPGEditorDialogAdapter* GetEditorDialog() const wxOVERRIDE;
+    virtual bool DoSetAttribute( const wxString& name, wxVariant& value ) wxOVERRIDE;
 
     static wxValidator* GetClassValidator();
-    virtual wxValidator* DoGetValidator() const;
+    virtual wxValidator* DoGetValidator() const wxOVERRIDE;
 
     /**
         Returns filename to file represented by current value.
@@ -736,12 +736,12 @@ public:
                           const wxString& value = wxEmptyString );
     virtual ~wxLongStringProperty();
 
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
     virtual bool StringToValue( wxVariant& variant,
                                 const wxString& text,
-                                int argFlags = 0 ) const;
+                                int argFlags = 0 ) const wxOVERRIDE;
     virtual bool OnEvent( wxPropertyGrid* propgrid,
-                          wxWindow* primary, wxEvent& event );
+                          wxWindow* primary, wxEvent& event ) wxOVERRIDE;
 
     // Shows string editor dialog. Value to be edited should be read from
     // value, and if dialog is not cancelled, it should be stored back and true
@@ -774,10 +774,10 @@ public:
                    const wxString& value = wxEmptyString );
     virtual ~wxDirProperty();
 
-    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
-    virtual wxValidator* DoGetValidator() const;
+    virtual bool DoSetAttribute( const wxString& name, wxVariant& value ) wxOVERRIDE;
+    virtual wxValidator* DoGetValidator() const wxOVERRIDE;
 
-    virtual bool OnButtonClick ( wxPropertyGrid* propGrid, wxString& value );
+    virtual bool OnButtonClick ( wxPropertyGrid* propGrid, wxString& value ) wxOVERRIDE;
 
 protected:
     wxString    m_dlgMessage;
@@ -806,14 +806,14 @@ public:
                            const wxArrayString& value = wxArrayString() );
     virtual ~wxArrayStringProperty();
 
-    virtual void OnSetValue();
-    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const;
+    virtual void OnSetValue() wxOVERRIDE;
+    virtual wxString ValueToString( wxVariant& value, int argFlags = 0 ) const wxOVERRIDE;
     virtual bool StringToValue( wxVariant& variant,
                                 const wxString& text,
-                                int argFlags = 0 ) const;
+                                int argFlags = 0 ) const wxOVERRIDE;
     virtual bool OnEvent( wxPropertyGrid* propgrid,
-                          wxWindow* primary, wxEvent& event );
-    virtual bool DoSetAttribute( const wxString& name, wxVariant& value );
+                          wxWindow* primary, wxEvent& event ) wxOVERRIDE;
+    virtual bool DoSetAttribute( const wxString& name, wxVariant& value ) wxOVERRIDE;
 
     // Implement in derived class for custom array-to-string conversion.
     virtual void ConvertArrayToString(const wxArrayString& arr,
@@ -869,9 +869,9 @@ public: \
               const wxArrayString& value = wxArrayString() ); \
     ~PROPNAME(); \
     virtual bool OnEvent( wxPropertyGrid* propgrid, \
-                          wxWindow* primary, wxEvent& event ); \
+                          wxWindow* primary, wxEvent& event ) wxOVERRIDE; \
     virtual bool OnCustomStringEdit( wxWindow* parent, wxString& value ); \
-    virtual wxValidator* DoGetValidator() const; \
+    virtual wxValidator* DoGetValidator() const wxOVERRIDE; \
 };
 
 #define WX_PG_DECLARE_ARRAYSTRING_PROPERTY_WITH_VALIDATOR(PROPNAM) \
@@ -1041,12 +1041,12 @@ public:
 
     void Init();
 
-    virtual void SetDialogValue( const wxVariant& value )
+    virtual void SetDialogValue( const wxVariant& value ) wxOVERRIDE
     {
         m_array = value.GetArrayString();
     }
 
-    virtual wxVariant GetDialogValue() const
+    virtual wxVariant GetDialogValue() const wxOVERRIDE
     {
         return m_array;
     }
@@ -1061,19 +1061,19 @@ public:
         }
     }
 
-    virtual bool OnCustomNewAction(wxString* resString);
+    virtual bool OnCustomNewAction(wxString* resString) wxOVERRIDE;
 
 protected:
     wxArrayString   m_array;
 
     wxArrayStringProperty*     m_pCallingClass;
 
-    virtual wxString ArrayGet( size_t index );
-    virtual size_t ArrayGetCount();
-    virtual bool ArrayInsert( const wxString& str, int index );
-    virtual bool ArraySet( size_t index, const wxString& str );
-    virtual void ArrayRemoveAt( int index );
-    virtual void ArraySwap( size_t first, size_t second );
+    virtual wxString ArrayGet( size_t index ) wxOVERRIDE;
+    virtual size_t ArrayGetCount() wxOVERRIDE;
+    virtual bool ArrayInsert( const wxString& str, int index ) wxOVERRIDE;
+    virtual bool ArraySet( size_t index, const wxString& str ) wxOVERRIDE;
+    virtual void ArrayRemoveAt( int index ) wxOVERRIDE;
+    virtual void ArraySwap( size_t first, size_t second ) wxOVERRIDE;
 
 private:
     wxDECLARE_DYNAMIC_CLASS_NO_COPY(wxPGArrayStringEditorDialog);
diff --git a/include/wx/richtext/richtextbackgroundpage.h b/include/wx/richtext/richtextbackgroundpage.h
index 45d0086..98969bd 100644
--- a/include/wx/richtext/richtextbackgroundpage.h
+++ b/include/wx/richtext/richtextbackgroundpage.h
@@ -72,8 +72,8 @@ public:
     wxRichTextAttr* GetAttributes();
 
     /// Data transfer
-    virtual bool TransferDataToWindow();
-    virtual bool TransferDataFromWindow();
+    virtual bool TransferDataToWindow() wxOVERRIDE;
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
 
     /// Respond to colour swatch click
     void OnColourSwatch(wxCommandEvent& event);
diff --git a/include/wx/richtext/richtextborderspage.h b/include/wx/richtext/richtextborderspage.h
index 3f7e874..7c8bf35 100644
--- a/include/wx/richtext/richtextborderspage.h
+++ b/include/wx/richtext/richtextborderspage.h
@@ -73,8 +73,8 @@ public:
     wxRichTextAttr* GetAttributes();
 
     /// Data transfer
-    virtual bool TransferDataToWindow();
-    virtual bool TransferDataFromWindow();
+    virtual bool TransferDataToWindow() wxOVERRIDE;
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
 
     /// Updates the synchronization checkboxes to reflect the state of the attributes
     void UpdateSyncControls();
diff --git a/include/wx/richtext/richtextbuffer.h b/include/wx/richtext/richtextbuffer.h
index 197d5da..1880855 100644
--- a/include/wx/richtext/richtextbuffer.h
+++ b/include/wx/richtext/richtextbuffer.h
@@ -3115,21 +3115,21 @@ public:
 
 // Overridables
 
-    virtual int HitTest(wxDC& dc, wxRichTextDrawingContext& context, const wxPoint& pt, long& textPosition, wxRichTextObject** obj, wxRichTextObject** contextObj, int flags = 0);
+    virtual int HitTest(wxDC& dc, wxRichTextDrawingContext& context, const wxPoint& pt, long& textPosition, wxRichTextObject** obj, wxRichTextObject** contextObj, int flags = 0) wxOVERRIDE;
 
-    virtual bool FindPosition(wxDC& dc, wxRichTextDrawingContext& context, long index, wxPoint& pt, int* height, bool forceLineStart);
+    virtual bool FindPosition(wxDC& dc, wxRichTextDrawingContext& context, long index, wxPoint& pt, int* height, bool forceLineStart) wxOVERRIDE;
 
-    virtual void CalculateRange(long start, long& end);
+    virtual void CalculateRange(long start, long& end) wxOVERRIDE;
 
-    virtual bool DeleteRange(const wxRichTextRange& range);
+    virtual bool DeleteRange(const wxRichTextRange& range) wxOVERRIDE;
 
-    virtual wxString GetTextForRange(const wxRichTextRange& range) const;
+    virtual wxString GetTextForRange(const wxRichTextRange& range) const wxOVERRIDE;
 
-    virtual bool GetRangeSize(const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const;
+    virtual bool GetRangeSize(const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const wxOVERRIDE;
 
-    virtual void Dump(wxTextOutputStream& stream);
+    virtual void Dump(wxTextOutputStream& stream) wxOVERRIDE;
 
-    virtual void Invalidate(const wxRichTextRange& invalidRange = wxRICHTEXT_ALL);
+    virtual void Invalidate(const wxRichTextRange& invalidRange = wxRICHTEXT_ALL) wxOVERRIDE;
 
 // Accessors
 
@@ -3155,18 +3155,18 @@ public:
     /**
         Returns @true if this object is composite.
     */
-    virtual bool IsComposite() const { return true; }
+    virtual bool IsComposite() const wxOVERRIDE { return true; }
 
     /**
         Returns @true if no user editing can be done inside the object. This returns @true for simple objects,
         @false for most composite objects, but @true for fields, which if composite, should not be user-edited.
     */
-    virtual bool IsAtomic() const { return false; }
+    virtual bool IsAtomic() const wxOVERRIDE { return false; }
 
     /**
         Returns true if the buffer is empty.
     */
-    virtual bool IsEmpty() const { return GetChildCount() == 0; }
+    virtual bool IsEmpty() const wxOVERRIDE { return GetChildCount() == 0; }
 
     /**
         Returns the child object at the given character position.
@@ -3207,7 +3207,7 @@ public:
     /**
         Moves the object recursively, by adding the offset from old to new.
     */
-    virtual void Move(const wxPoint& pt);
+    virtual void Move(const wxPoint& pt) wxOVERRIDE;
 
 protected:
     wxRichTextObjectList    m_children;
@@ -3236,33 +3236,33 @@ public:
 
 // Overridables
 
-    virtual int HitTest(wxDC& dc, wxRichTextDrawingContext& context, const wxPoint& pt, long& textPosition, wxRichTextObject** obj, wxRichTextObject** contextObj, int flags = 0);
+    virtual int HitTest(wxDC& dc, wxRichTextDrawingContext& context, const wxPoint& pt, long& textPosition, wxRichTextObject** obj, wxRichTextObject** contextObj, int flags = 0) wxOVERRIDE;
 
-    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style);
+    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style) wxOVERRIDE;
 
-    virtual bool Layout(wxDC& dc, wxRichTextDrawingContext& context, const wxRect& rect, const wxRect& parentRect, int style);
+    virtual bool Layout(wxDC& dc, wxRichTextDrawingContext& context, const wxRect& rect, const wxRect& parentRect, int style) wxOVERRIDE;
 
-    virtual bool GetRangeSize(const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const;
+    virtual bool GetRangeSize(const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const wxOVERRIDE;
 
-    virtual bool DeleteRange(const wxRichTextRange& range);
+    virtual bool DeleteRange(const wxRichTextRange& range) wxOVERRIDE;
 
-    virtual wxString GetTextForRange(const wxRichTextRange& range) const;
+    virtual wxString GetTextForRange(const wxRichTextRange& range) const wxOVERRIDE;
 
 #if wxUSE_XML
-    virtual bool ImportFromXML(wxRichTextBuffer* buffer, wxXmlNode* node, wxRichTextXMLHandler* handler, bool* recurse);
+    virtual bool ImportFromXML(wxRichTextBuffer* buffer, wxXmlNode* node, wxRichTextXMLHandler* handler, bool* recurse) wxOVERRIDE;
 #endif
 
 #if wxRICHTEXT_HAVE_DIRECT_OUTPUT
-    virtual bool ExportXML(wxOutputStream& stream, int indent, wxRichTextXMLHandler* handler);
+    virtual bool ExportXML(wxOutputStream& stream, int indent, wxRichTextXMLHandler* handler) wxOVERRIDE;
 #endif
 
 #if wxRICHTEXT_HAVE_XMLDOCUMENT_OUTPUT
-    virtual bool ExportXML(wxXmlNode* parent, wxRichTextXMLHandler* handler);
+    virtual bool ExportXML(wxXmlNode* parent, wxRichTextXMLHandler* handler) wxOVERRIDE;
 #endif
 
-    virtual wxString GetXMLNodeName() const { return wxT("paragraphlayout"); }
+    virtual wxString GetXMLNodeName() const wxOVERRIDE { return wxT("paragraphlayout"); }
 
-    virtual bool AcceptsFocus() const { return true; }
+    virtual bool AcceptsFocus() const wxOVERRIDE { return true; }
 
 // Accessors
 
@@ -3291,7 +3291,7 @@ public:
     */
     virtual wxRichTextStyleSheet* GetStyleSheet() const;
 
-    virtual bool IsTopLevel() const { return true; }
+    virtual bool IsTopLevel() const wxOVERRIDE { return true; }
 
 // Operations
 
@@ -3681,7 +3681,7 @@ public:
     */
     virtual bool HasParagraphAttributes(const wxRichTextRange& range, const wxRichTextAttr& style) const;
 
-    virtual wxRichTextObject* Clone() const { return new wxRichTextParagraphLayoutBox(*this); }
+    virtual wxRichTextObject* Clone() const wxOVERRIDE { return new wxRichTextParagraphLayoutBox(*this); }
 
     /**
         Prepares the content just before insertion (or after buffer reset).
@@ -3760,7 +3760,7 @@ public:
     /**
         Invalidates the buffer. With no argument, invalidates whole buffer.
     */
-    virtual void Invalidate(const wxRichTextRange& invalidRange = wxRICHTEXT_ALL);
+    virtual void Invalidate(const wxRichTextRange& invalidRange = wxRICHTEXT_ALL) wxOVERRIDE;
 
     /**
         Do the (in)validation for this object only.
@@ -3849,21 +3849,21 @@ public:
 
 // Overridables
 
-    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style);
+    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style) wxOVERRIDE;
 
-    virtual wxString GetXMLNodeName() const { return wxT("textbox"); }
+    virtual wxString GetXMLNodeName() const wxOVERRIDE { return wxT("textbox"); }
 
-    virtual bool CanEditProperties() const { return true; }
+    virtual bool CanEditProperties() const wxOVERRIDE { return true; }
 
-    virtual bool EditProperties(wxWindow* parent, wxRichTextBuffer* buffer);
+    virtual bool EditProperties(wxWindow* parent, wxRichTextBuffer* buffer) wxOVERRIDE;
 
-    virtual wxString GetPropertiesMenuLabel() const { return wxGetTranslation("&Box"); }
+    virtual wxString GetPropertiesMenuLabel() const wxOVERRIDE { return wxGetTranslation("&Box"); }
 
 // Accessors
 
 // Operations
 
-    virtual wxRichTextObject* Clone() const { return new wxRichTextBox(*this); }
+    virtual wxRichTextObject* Clone() const wxOVERRIDE { return new wxRichTextBox(*this); }
 
     void Copy(const wxRichTextBox& obj);
 
@@ -3931,32 +3931,32 @@ public:
 
 // Overridables
 
-    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style);
+    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style) wxOVERRIDE;
 
-    virtual bool Layout(wxDC& dc, wxRichTextDrawingContext& context, const wxRect& rect, const wxRect& parentRect, int style);
+    virtual bool Layout(wxDC& dc, wxRichTextDrawingContext& context, const wxRect& rect, const wxRect& parentRect, int style) wxOVERRIDE;
 
-    virtual bool GetRangeSize(const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const;
+    virtual bool GetRangeSize(const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const wxOVERRIDE;
 
-    virtual wxString GetXMLNodeName() const { return wxT("field"); }
+    virtual wxString GetXMLNodeName() const wxOVERRIDE { return wxT("field"); }
 
-    virtual bool CanEditProperties() const;
+    virtual bool CanEditProperties() const wxOVERRIDE;
 
-    virtual bool EditProperties(wxWindow* parent, wxRichTextBuffer* buffer);
+    virtual bool EditProperties(wxWindow* parent, wxRichTextBuffer* buffer) wxOVERRIDE;
 
-    virtual wxString GetPropertiesMenuLabel() const;
+    virtual wxString GetPropertiesMenuLabel() const wxOVERRIDE;
 
-    virtual bool AcceptsFocus() const { return false; }
+    virtual bool AcceptsFocus() const wxOVERRIDE { return false; }
 
-    virtual void CalculateRange(long start, long& end);
+    virtual void CalculateRange(long start, long& end) wxOVERRIDE;
 
     /**
         If a field has children, we don't want the user to be able to edit it.
     */
-    virtual bool IsAtomic() const { return true; }
+    virtual bool IsAtomic() const wxOVERRIDE { return true; }
 
-    virtual bool IsEmpty() const { return false; }
+    virtual bool IsEmpty() const wxOVERRIDE { return false; }
 
-    virtual bool IsTopLevel() const;
+    virtual bool IsTopLevel() const wxOVERRIDE;
 
 // Accessors
 
@@ -3971,7 +3971,7 @@ public:
      */
     virtual bool UpdateField(wxRichTextBuffer* buffer);
 
-    virtual wxRichTextObject* Clone() const { return new wxRichTextField(*this); }
+    virtual wxRichTextObject* Clone() const wxOVERRIDE { return new wxRichTextField(*this); }
 
     void Copy(const wxRichTextField& obj);
 
@@ -4187,7 +4187,7 @@ public:
         Draw the item, within the given range. Some objects may ignore the range (for
         example paragraphs) while others must obey it (lines, to implement wrapping)
     */
-    virtual bool Draw(wxRichTextField* obj, wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style);
+    virtual bool Draw(wxRichTextField* obj, wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style) wxOVERRIDE;
 
     /**
         Lay the item out at the specified position with the given size constraint.
@@ -4195,13 +4195,13 @@ public:
         and @a parentRect is the container that is used to determine a relative size
         or position (for example if a text box must be 50% of the parent text box).
     */
-    virtual bool Layout(wxRichTextField* obj, wxDC& dc, wxRichTextDrawingContext& context, const wxRect& rect, const wxRect& parentRect, int style);
+    virtual bool Layout(wxRichTextField* obj, wxDC& dc, wxRichTextDrawingContext& context, const wxRect& rect, const wxRect& parentRect, int style) wxOVERRIDE;
 
     /**
         Returns the object size for the given range. Returns @false if the range
         is invalid for this object.
     */
-    virtual bool GetRangeSize(wxRichTextField* obj, const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const;
+    virtual bool GetRangeSize(wxRichTextField* obj, const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const wxOVERRIDE;
 
     /**
         Get the size of the field, given the label, font size, and so on.
@@ -4211,7 +4211,7 @@ public:
     /**
         Returns @true if the display type is wxRICHTEXT_FIELD_STYLE_COMPOSITE, @false otherwise.
     */
-    virtual bool IsTopLevel(wxRichTextField* WXUNUSED(obj)) const { return (GetDisplayStyle() & wxRICHTEXT_FIELD_STYLE_COMPOSITE) != 0; }
+    virtual bool IsTopLevel(wxRichTextField* WXUNUSED(obj)) const wxOVERRIDE { return (GetDisplayStyle() & wxRICHTEXT_FIELD_STYLE_COMPOSITE) != 0; }
 
     /**
         Sets the text label for fields of this type.
@@ -4506,19 +4506,19 @@ public:
 
 // Overridables
 
-    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style);
+    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style) wxOVERRIDE;
 
-    virtual bool Layout(wxDC& dc, wxRichTextDrawingContext& context, const wxRect& rect, const wxRect& parentRect, int style);
+    virtual bool Layout(wxDC& dc, wxRichTextDrawingContext& context, const wxRect& rect, const wxRect& parentRect, int style) wxOVERRIDE;
 
-    virtual bool GetRangeSize(const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const;
+    virtual bool GetRangeSize(const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const wxOVERRIDE;
 
-    virtual bool FindPosition(wxDC& dc, wxRichTextDrawingContext& context, long index, wxPoint& pt, int* height, bool forceLineStart);
+    virtual bool FindPosition(wxDC& dc, wxRichTextDrawingContext& context, long index, wxPoint& pt, int* height, bool forceLineStart) wxOVERRIDE;
 
-    virtual int HitTest(wxDC& dc, wxRichTextDrawingContext& context, const wxPoint& pt, long& textPosition, wxRichTextObject** obj, wxRichTextObject** contextObj, int flags = 0);
+    virtual int HitTest(wxDC& dc, wxRichTextDrawingContext& context, const wxPoint& pt, long& textPosition, wxRichTextObject** obj, wxRichTextObject** contextObj, int flags = 0) wxOVERRIDE;
 
-    virtual void CalculateRange(long start, long& end);
+    virtual void CalculateRange(long start, long& end) wxOVERRIDE;
 
-    virtual wxString GetXMLNodeName() const { return wxT("paragraph"); }
+    virtual wxString GetXMLNodeName() const wxOVERRIDE { return wxT("paragraph"); }
 
 // Accessors
 
@@ -4534,7 +4534,7 @@ public:
     */
     void Copy(const wxRichTextParagraph& obj);
 
-    virtual wxRichTextObject* Clone() const { return new wxRichTextParagraph(*this); }
+    virtual wxRichTextObject* Clone() const wxOVERRIDE { return new wxRichTextParagraph(*this); }
 
     /**
         Clears the cached lines.
@@ -4690,33 +4690,33 @@ public:
 
 // Overridables
 
-    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style);
+    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style) wxOVERRIDE;
 
-    virtual bool Layout(wxDC& dc, wxRichTextDrawingContext& context, const wxRect& rect, const wxRect& parentRect, int style);
+    virtual bool Layout(wxDC& dc, wxRichTextDrawingContext& context, const wxRect& rect, const wxRect& parentRect, int style) wxOVERRIDE;
 
-    virtual bool AdjustAttributes(wxRichTextAttr& attr, wxRichTextDrawingContext& context);
+    virtual bool AdjustAttributes(wxRichTextAttr& attr, wxRichTextDrawingContext& context) wxOVERRIDE;
 
-    virtual bool GetRangeSize(const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const;
+    virtual bool GetRangeSize(const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const wxOVERRIDE;
 
-    virtual wxString GetTextForRange(const wxRichTextRange& range) const;
+    virtual wxString GetTextForRange(const wxRichTextRange& range) const wxOVERRIDE;
 
-    virtual wxRichTextObject* DoSplit(long pos);
+    virtual wxRichTextObject* DoSplit(long pos) wxOVERRIDE;
 
-    virtual void CalculateRange(long start, long& end);
+    virtual void CalculateRange(long start, long& end) wxOVERRIDE;
 
-    virtual bool DeleteRange(const wxRichTextRange& range);
+    virtual bool DeleteRange(const wxRichTextRange& range) wxOVERRIDE;
 
-    virtual bool IsEmpty() const { return m_text.empty(); }
+    virtual bool IsEmpty() const wxOVERRIDE { return m_text.empty(); }
 
-    virtual bool CanMerge(wxRichTextObject* object, wxRichTextDrawingContext& context) const;
+    virtual bool CanMerge(wxRichTextObject* object, wxRichTextDrawingContext& context) const wxOVERRIDE;
 
-    virtual bool Merge(wxRichTextObject* object, wxRichTextDrawingContext& context);
+    virtual bool Merge(wxRichTextObject* object, wxRichTextDrawingContext& context) wxOVERRIDE;
 
-    virtual void Dump(wxTextOutputStream& stream);
+    virtual void Dump(wxTextOutputStream& stream) wxOVERRIDE;
 
-    virtual bool CanSplit(wxRichTextDrawingContext& context) const;
+    virtual bool CanSplit(wxRichTextDrawingContext& context) const wxOVERRIDE;
 
-    virtual wxRichTextObject* Split(wxRichTextDrawingContext& context);
+    virtual wxRichTextObject* Split(wxRichTextDrawingContext& context) wxOVERRIDE;
 
     /**
         Get the first position from pos that has a line break character.
@@ -4724,21 +4724,21 @@ public:
     long GetFirstLineBreakPosition(long pos);
 
     /// Does this object take note of paragraph attributes? Text and image objects don't.
-    virtual bool UsesParagraphAttributes() const { return false; }
+    virtual bool UsesParagraphAttributes() const wxOVERRIDE { return false; }
 
 #if wxUSE_XML
-    virtual bool ImportFromXML(wxRichTextBuffer* buffer, wxXmlNode* node, wxRichTextXMLHandler* handler, bool* recurse);
+    virtual bool ImportFromXML(wxRichTextBuffer* buffer, wxXmlNode* node, wxRichTextXMLHandler* handler, bool* recurse) wxOVERRIDE;
 #endif
 
 #if wxRICHTEXT_HAVE_DIRECT_OUTPUT
-    virtual bool ExportXML(wxOutputStream& stream, int indent, wxRichTextXMLHandler* handler);
+    virtual bool ExportXML(wxOutputStream& stream, int indent, wxRichTextXMLHandler* handler) wxOVERRIDE;
 #endif
 
 #if wxRICHTEXT_HAVE_XMLDOCUMENT_OUTPUT
-    virtual bool ExportXML(wxXmlNode* parent, wxRichTextXMLHandler* handler);
+    virtual bool ExportXML(wxXmlNode* parent, wxRichTextXMLHandler* handler) wxOVERRIDE;
 #endif
 
-    virtual wxString GetXMLNodeName() const { return wxT("text"); }
+    virtual wxString GetXMLNodeName() const wxOVERRIDE { return wxT("text"); }
 
 // Accessors
 
@@ -4758,7 +4758,7 @@ public:
     void Copy(const wxRichTextPlainText& obj);
 
     // Clones the text object.
-    virtual wxRichTextObject* Clone() const { return new wxRichTextPlainText(*this); }
+    virtual wxRichTextObject* Clone() const wxOVERRIDE { return new wxRichTextPlainText(*this); }
 
 private:
     bool DrawTabbedString(wxDC& dc, const wxRichTextAttr& attr, const wxRect& rect, wxString& str, wxCoord& x, wxCoord& y, bool selected);
@@ -4984,43 +4984,43 @@ public:
 
 // Overridables
 
-    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style);
+    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style) wxOVERRIDE;
 
-    virtual bool Layout(wxDC& dc, wxRichTextDrawingContext& context, const wxRect& rect, const wxRect& parentRect, int style);
+    virtual bool Layout(wxDC& dc, wxRichTextDrawingContext& context, const wxRect& rect, const wxRect& parentRect, int style) wxOVERRIDE;
 
-    virtual bool GetRangeSize(const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const;
+    virtual bool GetRangeSize(const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const wxOVERRIDE;
 
     /**
         Returns the 'natural' size for this object - the image size.
     */
-    virtual wxTextAttrSize GetNaturalSize() const;
+    virtual wxTextAttrSize GetNaturalSize() const wxOVERRIDE;
 
-    virtual bool IsEmpty() const { return false; /* !m_imageBlock.IsOk(); */ }
+    virtual bool IsEmpty() const wxOVERRIDE { return false; /* !m_imageBlock.IsOk(); */ }
 
-    virtual bool CanEditProperties() const { return true; }
+    virtual bool CanEditProperties() const wxOVERRIDE { return true; }
 
-    virtual bool EditProperties(wxWindow* parent, wxRichTextBuffer* buffer);
+    virtual bool EditProperties(wxWindow* parent, wxRichTextBuffer* buffer) wxOVERRIDE;
 
-    virtual wxString GetPropertiesMenuLabel() const { return wxGetTranslation("&Picture"); }
+    virtual wxString GetPropertiesMenuLabel() const wxOVERRIDE { return wxGetTranslation("&Picture"); }
 
-    virtual bool UsesParagraphAttributes() const { return false; }
+    virtual bool UsesParagraphAttributes() const wxOVERRIDE { return false; }
 
 #if wxUSE_XML
-    virtual bool ImportFromXML(wxRichTextBuffer* buffer, wxXmlNode* node, wxRichTextXMLHandler* handler, bool* recurse);
+    virtual bool ImportFromXML(wxRichTextBuffer* buffer, wxXmlNode* node, wxRichTextXMLHandler* handler, bool* recurse) wxOVERRIDE;
 #endif
 
 #if wxRICHTEXT_HAVE_DIRECT_OUTPUT
-    virtual bool ExportXML(wxOutputStream& stream, int indent, wxRichTextXMLHandler* handler);
+    virtual bool ExportXML(wxOutputStream& stream, int indent, wxRichTextXMLHandler* handler) wxOVERRIDE;
 #endif
 
 #if wxRICHTEXT_HAVE_XMLDOCUMENT_OUTPUT
-    virtual bool ExportXML(wxXmlNode* parent, wxRichTextXMLHandler* handler);
+    virtual bool ExportXML(wxXmlNode* parent, wxRichTextXMLHandler* handler) wxOVERRIDE;
 #endif
 
     // Images can be floatable (optionally).
-    virtual bool IsFloatable() const { return true; }
+    virtual bool IsFloatable() const wxOVERRIDE { return true; }
 
-    virtual wxString GetXMLNodeName() const { return wxT("image"); }
+    virtual wxString GetXMLNodeName() const wxOVERRIDE { return wxT("image"); }
 
 // Accessors
 
@@ -5054,7 +5054,7 @@ public:
     /**
         Clones the image object.
     */
-    virtual wxRichTextObject* Clone() const { return new wxRichTextImage(*this); }
+    virtual wxRichTextObject* Clone() const wxOVERRIDE { return new wxRichTextImage(*this); }
 
     /**
         Creates a cached image at the required size.
@@ -5144,7 +5144,7 @@ public:
     /**
         Returns the style sheet.
     */
-    virtual wxRichTextStyleSheet* GetStyleSheet() const { return m_styleSheet; }
+    virtual wxRichTextStyleSheet* GetStyleSheet() const wxOVERRIDE { return m_styleSheet; }
 
     /**
         Sets the style sheet and sends a notification of the change.
@@ -5262,7 +5262,7 @@ public:
     /**
         Convenience function to add a paragraph of text.
     */
-    virtual wxRichTextRange AddParagraph(const wxString& text, wxRichTextAttr* paraStyle = NULL) { Modify(); return wxRichTextParagraphLayoutBox::AddParagraph(text, paraStyle); }
+    virtual wxRichTextRange AddParagraph(const wxString& text, wxRichTextAttr* paraStyle = NULL) wxOVERRIDE { Modify(); return wxRichTextParagraphLayoutBox::AddParagraph(text, paraStyle); }
 
     /**
         Begin collapsing undo/redo commands. Note that this may not work properly
@@ -5602,7 +5602,7 @@ public:
 
 // Implementation
 
-    virtual int HitTest(wxDC& dc, wxRichTextDrawingContext& context, const wxPoint& pt, long& textPosition, wxRichTextObject** obj, wxRichTextObject** contextObj, int flags = 0);
+    virtual int HitTest(wxDC& dc, wxRichTextDrawingContext& context, const wxPoint& pt, long& textPosition, wxRichTextObject** obj, wxRichTextObject** contextObj, int flags = 0) wxOVERRIDE;
 
     /**
         Copies the buffer.
@@ -5617,7 +5617,7 @@ public:
     /**
         Clones the buffer.
     */
-    virtual wxRichTextObject* Clone() const { return new wxRichTextBuffer(*this); }
+    virtual wxRichTextObject* Clone() const wxOVERRIDE { return new wxRichTextBuffer(*this); }
 
     /**
         Submits a command to insert paragraphs.
@@ -5665,7 +5665,7 @@ public:
         Dumps contents of buffer for debugging purposes.
     */
     virtual void Dump();
-    virtual void Dump(wxTextOutputStream& stream) { wxRichTextParagraphLayoutBox::Dump(stream); }
+    virtual void Dump(wxTextOutputStream& stream) wxOVERRIDE { wxRichTextParagraphLayoutBox::Dump(stream); }
     //@}
 
     /**
@@ -5939,22 +5939,22 @@ public:
 
 // Overridables
 
-    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style);
+    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style) wxOVERRIDE;
 
-    virtual int HitTest(wxDC& dc, wxRichTextDrawingContext& context, const wxPoint& pt, long& textPosition, wxRichTextObject** obj, wxRichTextObject** contextObj, int flags = 0);
+    virtual int HitTest(wxDC& dc, wxRichTextDrawingContext& context, const wxPoint& pt, long& textPosition, wxRichTextObject** obj, wxRichTextObject** contextObj, int flags = 0) wxOVERRIDE;
 
-    virtual bool AdjustAttributes(wxRichTextAttr& attr, wxRichTextDrawingContext& context);
+    virtual bool AdjustAttributes(wxRichTextAttr& attr, wxRichTextDrawingContext& context) wxOVERRIDE;
 
-    virtual wxString GetXMLNodeName() const { return wxT("cell"); }
+    virtual wxString GetXMLNodeName() const wxOVERRIDE { return wxT("cell"); }
 
-    virtual bool CanEditProperties() const { return true; }
+    virtual bool CanEditProperties() const wxOVERRIDE { return true; }
 
-    virtual bool EditProperties(wxWindow* parent, wxRichTextBuffer* buffer);
+    virtual bool EditProperties(wxWindow* parent, wxRichTextBuffer* buffer) wxOVERRIDE;
 
-    virtual wxString GetPropertiesMenuLabel() const { return wxGetTranslation("&Cell"); }
+    virtual wxString GetPropertiesMenuLabel() const wxOVERRIDE { return wxGetTranslation("&Cell"); }
 
     /// Don't allow a cell to be deleted in Defragment
-    virtual bool IsEmpty() const { return false; }
+    virtual bool IsEmpty() const wxOVERRIDE { return false; }
 
 // Accessors
 
@@ -5980,7 +5980,7 @@ public:
 
 // Operations
 
-    virtual wxRichTextObject* Clone() const { return new wxRichTextCell(*this); }
+    virtual wxRichTextObject* Clone() const wxOVERRIDE { return new wxRichTextCell(*this); }
 
     void Copy(const wxRichTextCell& obj);
 
@@ -6017,55 +6017,55 @@ public:
 
 // Overridables
 
-    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style);
+    virtual bool Draw(wxDC& dc, wxRichTextDrawingContext& context, const wxRichTextRange& range, const wxRichTextSelection& selection, const wxRect& rect, int descent, int style) wxOVERRIDE;
 
-    virtual int HitTest(wxDC& dc, wxRichTextDrawingContext& context, const wxPoint& pt, long& textPosition, wxRichTextObject** obj, wxRichTextObject** contextObj, int flags = 0);
+    virtual int HitTest(wxDC& dc, wxRichTextDrawingContext& context, const wxPoint& pt, long& textPosition, wxRichTextObject** obj, wxRichTextObject** contextObj, int flags = 0) wxOVERRIDE;
 
-    virtual bool AdjustAttributes(wxRichTextAttr& attr, wxRichTextDrawingContext& context);
+    virtual bool AdjustAttributes(wxRichTextAttr& attr, wxRichTextDrawingContext& context) wxOVERRIDE;
 
-    virtual wxString GetXMLNodeName() const { return wxT("table"); }
+    virtual wxString GetXMLNodeName() const wxOVERRIDE { return wxT("table"); }
 
-    virtual bool Layout(wxDC& dc, wxRichTextDrawingContext& context, const wxRect& rect, const wxRect& parentRect, int style);
+    virtual bool Layout(wxDC& dc, wxRichTextDrawingContext& context, const wxRect& rect, const wxRect& parentRect, int style) wxOVERRIDE;
 
-    virtual bool GetRangeSize(const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const;
+    virtual bool GetRangeSize(const wxRichTextRange& range, wxSize& size, int& descent, wxDC& dc, wxRichTextDrawingContext& context, int flags, const wxPoint& position = wxPoint(0,0), const wxSize& parentSize = wxDefaultSize, wxArrayInt* partialExtents = NULL) const wxOVERRIDE;
 
-    virtual bool DeleteRange(const wxRichTextRange& range);
+    virtual bool DeleteRange(const wxRichTextRange& range) wxOVERRIDE;
 
-    virtual wxString GetTextForRange(const wxRichTextRange& range) const;
+    virtual wxString GetTextForRange(const wxRichTextRange& range) const wxOVERRIDE;
 
 #if wxUSE_XML
-    virtual bool ImportFromXML(wxRichTextBuffer* buffer, wxXmlNode* node, wxRichTextXMLHandler* handler, bool* recurse);
+    virtual bool ImportFromXML(wxRichTextBuffer* buffer, wxXmlNode* node, wxRichTextXMLHandler* handler, bool* recurse) wxOVERRIDE;
 #endif
 
 #if wxRICHTEXT_HAVE_DIRECT_OUTPUT
-    virtual bool ExportXML(wxOutputStream& stream, int indent, wxRichTextXMLHandler* handler);
+    virtual bool ExportXML(wxOutputStream& stream, int indent, wxRichTextXMLHandler* handler) wxOVERRIDE;
 #endif
 
 #if wxRICHTEXT_HAVE_XMLDOCUMENT_OUTPUT
-    virtual bool ExportXML(wxXmlNode* parent, wxRichTextXMLHandler* handler);
+    virtual bool ExportXML(wxXmlNode* parent, wxRichTextXMLHandler* handler) wxOVERRIDE;
 #endif
 
-    virtual bool FindPosition(wxDC& dc, wxRichTextDrawingContext& context, long index, wxPoint& pt, int* height, bool forceLineStart);
+    virtual bool FindPosition(wxDC& dc, wxRichTextDrawingContext& context, long index, wxPoint& pt, int* height, bool forceLineStart) wxOVERRIDE;
 
-    virtual void CalculateRange(long start, long& end);
+    virtual void CalculateRange(long start, long& end) wxOVERRIDE;
 
     // Can this object handle the selections of its children? FOr example, a table.
-    virtual bool HandlesChildSelections() const { return true; }
+    virtual bool HandlesChildSelections() const wxOVERRIDE { return true; }
 
     /// Returns a selection object specifying the selections between start and end character positions.
     /// For example, a table would deduce what cells (of range length 1) are selected when dragging across the table.
-    virtual wxRichTextSelection GetSelection(long start, long end) const;
+    virtual wxRichTextSelection GetSelection(long start, long end) const wxOVERRIDE;
 
-    virtual bool CanEditProperties() const { return true; }
+    virtual bool CanEditProperties() const wxOVERRIDE { return true; }
 
-    virtual bool EditProperties(wxWindow* parent, wxRichTextBuffer* buffer);
+    virtual bool EditProperties(wxWindow* parent, wxRichTextBuffer* buffer) wxOVERRIDE;
 
-    virtual wxString GetPropertiesMenuLabel() const { return wxGetTranslation("&Table"); }
+    virtual wxString GetPropertiesMenuLabel() const wxOVERRIDE { return wxGetTranslation("&Table"); }
 
     // Returns true if objects of this class can accept the focus, i.e. a call to SetFocusObject
     // is possible. For example, containers supporting text, such as a text box object, can accept the focus,
     // but a table can't (set the focus to individual cells instead).
-    virtual bool AcceptsFocus() const { return false; }
+    virtual bool AcceptsFocus() const wxOVERRIDE { return false; }
 
 // Accessors
 
@@ -6164,7 +6164,7 @@ public:
     virtual bool AddColumns(int startCol, int noCols = 1, const wxRichTextAttr& attr = wxRichTextAttr());
 
     // Makes a clone of this object.
-    virtual wxRichTextObject* Clone() const { return new wxRichTextTable(*this); }
+    virtual wxRichTextObject* Clone() const wxOVERRIDE { return new wxRichTextTable(*this); }
 
     // Copies this object.
     void Copy(const wxRichTextTable& obj);
@@ -6784,16 +6784,16 @@ public:
         { }
 
     // Can we save using this handler?
-    virtual bool CanSave() const { return true; }
+    virtual bool CanSave() const wxOVERRIDE { return true; }
 
     // Can we load using this handler?
-    virtual bool CanLoad() const { return true; }
+    virtual bool CanLoad() const wxOVERRIDE { return true; }
 
 protected:
 
 #if wxUSE_STREAMS
-    virtual bool DoLoadFile(wxRichTextBuffer *buffer, wxInputStream& stream);
-    virtual bool DoSaveFile(wxRichTextBuffer *buffer, wxOutputStream& stream);
+    virtual bool DoLoadFile(wxRichTextBuffer *buffer, wxInputStream& stream) wxOVERRIDE;
+    virtual bool DoSaveFile(wxRichTextBuffer *buffer, wxOutputStream& stream) wxOVERRIDE;
 #endif
 
 };
diff --git a/include/wx/richtext/richtextbulletspage.h b/include/wx/richtext/richtextbulletspage.h
index 661666a..440e7ba 100644
--- a/include/wx/richtext/richtextbulletspage.h
+++ b/include/wx/richtext/richtextbulletspage.h
@@ -67,8 +67,8 @@ public:
     void UpdatePreview();
 
     /// Transfer data from/to window
-    virtual bool TransferDataFromWindow();
-    virtual bool TransferDataToWindow();
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
+    virtual bool TransferDataToWindow() wxOVERRIDE;
 
     /// Gets the attributes associated with the main formatting dialog
     wxRichTextAttr* GetAttributes();
diff --git a/include/wx/richtext/richtextctrl.h b/include/wx/richtext/richtextctrl.h
index d83fbbc..2fa9a45 100644
--- a/include/wx/richtext/richtextctrl.h
+++ b/include/wx/richtext/richtextctrl.h
@@ -278,32 +278,32 @@ public:
         The end point of range is specified as the last character position of
         the span of text, plus one.
     */
-    virtual wxString GetRange(long from, long to) const;
+    virtual wxString GetRange(long from, long to) const wxOVERRIDE;
 
     /**
         Returns the length of the specified line in characters.
     */
-    virtual int GetLineLength(long lineNo) const ;
+    virtual int GetLineLength(long lineNo) const wxOVERRIDE;
 
     /**
         Returns the text for the given line.
     */
-    virtual wxString GetLineText(long lineNo) const ;
+    virtual wxString GetLineText(long lineNo) const wxOVERRIDE;
 
     /**
         Returns the number of lines in the buffer.
     */
-    virtual int GetNumberOfLines() const ;
+    virtual int GetNumberOfLines() const wxOVERRIDE;
 
     /**
         Returns @true if the buffer has been modified.
     */
-    virtual bool IsModified() const ;
+    virtual bool IsModified() const wxOVERRIDE;
 
     /**
         Returns @true if the control is editable.
     */
-    virtual bool IsEditable() const ;
+    virtual bool IsEditable() const wxOVERRIDE;
 
     /**
         Returns @true if the control is single-line.
@@ -323,7 +323,7 @@ public:
         of text, plus one.
         If the return values @a from and @a to are the same, there is no selection.
     */
-    virtual void GetSelection(long* from, long* to) const;
+    virtual void GetSelection(long* from, long* to) const wxOVERRIDE;
     const wxRichTextSelection& GetSelection() const { return m_selection; }
     wxRichTextSelection& GetSelection() { return m_selection; }
     //@}
@@ -331,7 +331,7 @@ public:
     /**
         Returns the text within the current selection range, if any.
     */
-    virtual wxString GetStringSelection() const;
+    virtual wxString GetStringSelection() const wxOVERRIDE;
 
     /**
         Gets the current filename associated with the control.
@@ -548,18 +548,18 @@ public:
     /**
         Clears the buffer content, leaving a single empty paragraph. Cannot be undone.
     */
-    virtual void Clear();
+    virtual void Clear() wxOVERRIDE;
 
     /**
         Replaces the content in the specified range with the string specified by
         @a value.
     */
-    virtual void Replace(long from, long to, const wxString& value);
+    virtual void Replace(long from, long to, const wxString& value) wxOVERRIDE;
 
     /**
         Removes the content in the specified range.
     */
-    virtual void Remove(long from, long to);
+    virtual void Remove(long from, long to) wxOVERRIDE;
 
 #ifdef DOXYGEN
     /**
@@ -583,7 +583,7 @@ public:
 
         This function looks for a suitable wxRichTextFileHandler object.
     */
-    virtual bool DoLoadFile(const wxString& file, int fileType);
+    virtual bool DoLoadFile(const wxString& file, int fileType) wxOVERRIDE;
 #endif // wxUSE_FFILE && wxUSE_STREAMS
 
 #ifdef DOXYGEN
@@ -609,7 +609,7 @@ public:
         This function looks for a suitable wxRichTextFileHandler object.
     */
     virtual bool DoSaveFile(const wxString& file = wxEmptyString,
-                            int fileType = wxRICHTEXT_TYPE_ANY);
+                            int fileType = wxRICHTEXT_TYPE_ANY) wxOVERRIDE;
 #endif // wxUSE_FFILE && wxUSE_STREAMS
 
     /**
@@ -630,29 +630,29 @@ public:
     /**
         Marks the buffer as modified.
     */
-    virtual void MarkDirty();
+    virtual void MarkDirty() wxOVERRIDE;
 
     /**
         Sets the buffer's modified status to @false, and clears the buffer's command
         history.
     */
-    virtual void DiscardEdits();
+    virtual void DiscardEdits() wxOVERRIDE;
 
     /**
         Sets the maximum number of characters that may be entered in a single line
         text control. For compatibility only; currently does nothing.
     */
-    virtual void SetMaxLength(unsigned long WXUNUSED(len)) { }
+    virtual void SetMaxLength(unsigned long WXUNUSED(len))  wxOVERRIDE { }
 
     /**
         Writes text at the current position.
     */
-    virtual void WriteText(const wxString& text);
+    virtual void WriteText(const wxString& text) wxOVERRIDE;
 
     /**
         Sets the insertion point to the end of the buffer and writes the text.
     */
-    virtual void AppendText(const wxString& text);
+    virtual void AppendText(const wxString& text) wxOVERRIDE;
 
     //@{
     /**
@@ -668,7 +668,7 @@ public:
         returning a 2-element list (ok, attr).
         @endWxPerlOnly
     */
-    virtual bool GetStyle(long position, wxTextAttr& style);
+    virtual bool GetStyle(long position, wxTextAttr& style) wxOVERRIDE;
     virtual bool GetStyle(long position, wxRichTextAttr& style);
     virtual bool GetStyle(long position, wxRichTextAttr& style, wxRichTextParagraphLayoutBox* container);
     //@}
@@ -682,7 +682,7 @@ public:
         So, for example, to set the style for a character at position 5, use the range
         (5,6).
     */
-    virtual bool SetStyle(long start, long end, const wxTextAttr& style);
+    virtual bool SetStyle(long start, long end, const wxTextAttr& style) wxOVERRIDE;
     virtual bool SetStyle(long start, long end, const wxRichTextAttr& style);
     virtual bool SetStyle(const wxRichTextRange& range, const wxTextAttr& style);
     virtual bool SetStyle(const wxRichTextRange& range, const wxRichTextAttr& style);
@@ -764,7 +764,7 @@ public:
         Sets the current default style, which can be used to change how subsequently
         inserted text is displayed.
     */
-    virtual bool SetDefaultStyle(const wxTextAttr& style);
+    virtual bool SetDefaultStyle(const wxTextAttr& style) wxOVERRIDE;
     virtual bool SetDefaultStyle(const wxRichTextAttr& style);
     //@}
 
@@ -879,17 +879,17 @@ public:
     /**
         Translates from column and line number to position.
     */
-    virtual long XYToPosition(long x, long y) const;
+    virtual long XYToPosition(long x, long y) const wxOVERRIDE;
 
     /**
         Converts a text position to zero-based column and line numbers.
     */
-    virtual bool PositionToXY(long pos, long *x, long *y) const;
+    virtual bool PositionToXY(long pos, long *x, long *y) const wxOVERRIDE;
 
     /**
         Scrolls the buffer so that the given position is in view.
     */
-    virtual void ShowPosition(long pos);
+    virtual void ShowPosition(long pos) wxOVERRIDE;
 
     //@{
     /**
@@ -897,10 +897,10 @@ public:
         @a pt is in device coords (not adjusted for the client area origin nor for
         scrolling).
     */
-    virtual wxTextCtrlHitTestResult HitTest(const wxPoint& pt, long *pos) const;
+    virtual wxTextCtrlHitTestResult HitTest(const wxPoint& pt, long *pos) const wxOVERRIDE;
     virtual wxTextCtrlHitTestResult HitTest(const wxPoint& pt,
                                             wxTextCoord *col,
-                                            wxTextCoord *row) const;
+                                            wxTextCoord *row) const wxOVERRIDE;
 
     /**
         Finds the container at the given point, which is in screen coordinates.
@@ -920,18 +920,18 @@ public:
     /**
         Copies the selected content (if any) to the clipboard.
     */
-    virtual void Copy();
+    virtual void Copy() wxOVERRIDE;
 
     /**
         Copies the selected content (if any) to the clipboard and deletes the selection.
         This is undoable.
     */
-    virtual void Cut();
+    virtual void Cut() wxOVERRIDE;
 
     /**
         Pastes content from the clipboard to the buffer.
     */
-    virtual void Paste();
+    virtual void Paste() wxOVERRIDE;
 
     /**
         Deletes the content in the selection, if any. This is undoable.
@@ -941,17 +941,17 @@ public:
     /**
         Returns @true if selected content can be copied to the clipboard.
     */
-    virtual bool CanCopy() const;
+    virtual bool CanCopy() const wxOVERRIDE;
 
     /**
         Returns @true if selected content can be copied to the clipboard and deleted.
     */
-    virtual bool CanCut() const;
+    virtual bool CanCut() const wxOVERRIDE;
 
     /**
         Returns @true if the clipboard content can be pasted to the buffer.
     */
-    virtual bool CanPaste() const;
+    virtual bool CanPaste() const wxOVERRIDE;
 
     /**
         Returns @true if selected content can be deleted.
@@ -961,43 +961,43 @@ public:
     /**
         Undoes the command at the top of the command history, if there is one.
     */
-    virtual void Undo();
+    virtual void Undo() wxOVERRIDE;
 
     /**
         Redoes the current command.
     */
-    virtual void Redo();
+    virtual void Redo() wxOVERRIDE;
 
     /**
         Returns @true if there is a command in the command history that can be undone.
     */
-    virtual bool CanUndo() const;
+    virtual bool CanUndo() const wxOVERRIDE;
 
     /**
         Returns @true if there is a command in the command history that can be redone.
     */
-    virtual bool CanRedo() const;
+    virtual bool CanRedo() const wxOVERRIDE;
 
     /**
         Sets the insertion point and causes the current editing style to be taken from
         the new position (unlike wxRichTextCtrl::SetCaretPosition).
     */
-    virtual void SetInsertionPoint(long pos);
+    virtual void SetInsertionPoint(long pos) wxOVERRIDE;
 
     /**
         Sets the insertion point to the end of the text control.
     */
-    virtual void SetInsertionPointEnd();
+    virtual void SetInsertionPointEnd() wxOVERRIDE;
 
     /**
         Returns the current insertion point.
     */
-    virtual long GetInsertionPoint() const;
+    virtual long GetInsertionPoint() const wxOVERRIDE;
 
     /**
         Returns the last position in the buffer.
     */
-    virtual wxTextPos GetLastPosition() const;
+    virtual wxTextPos GetLastPosition() const wxOVERRIDE;
 
     //@{
     /**
@@ -1008,14 +1008,14 @@ public:
         So, for example, to set the selection for a character at position 5, use the
         range (5,6).
     */
-    virtual void SetSelection(long from, long to);
+    virtual void SetSelection(long from, long to) wxOVERRIDE;
     void SetSelection(const wxRichTextSelection& sel) { m_selection = sel; }
     //@}
 
     /**
         Makes the control editable, or not.
     */
-    virtual void SetEditable(bool editable);
+    virtual void SetEditable(bool editable) wxOVERRIDE;
 
     /**
         Returns @true if there is a selection and the object containing the selection
@@ -1360,7 +1360,7 @@ public:
     /**
         Cancels any selection.
     */
-    virtual void SelectNone();
+    virtual void SelectNone() wxOVERRIDE;
 
     /**
         Selects the word at the given character position.
@@ -1787,7 +1787,7 @@ public:
     /**
         Sends the event to the control.
     */
-    void Command(wxCommandEvent& event);
+    void Command(wxCommandEvent& event) wxOVERRIDE;
 
     /**
         Loads the first dropped file.
@@ -1928,7 +1928,7 @@ public:
         Sets the font, and also the basic and default attributes
         (see wxRichTextCtrl::SetDefaultStyle).
     */
-    virtual bool SetFont(const wxFont& font);
+    virtual bool SetFont(const wxFont& font) wxOVERRIDE;
 
     /**
         A helper function setting up scrollbars, for example after a resize.
@@ -1963,7 +1963,7 @@ public:
     virtual void DoWriteText(const wxString& value, int flags = 0);
 
     // Should we inherit colours?
-    virtual bool ShouldInheritColours() const { return false; }
+    virtual bool ShouldInheritColours() const wxOVERRIDE { return false; }
 
     /**
         Internal function to position the visible caret according to the current caret
@@ -2001,7 +2001,7 @@ public:
         Overrides standard refresh in order to provoke delayed image loading.
     */
     virtual void Refresh( bool eraseBackground = true,
-                       const wxRect *rect = (const wxRect *) NULL );
+                       const wxRect *rect = (const wxRect *) NULL ) wxOVERRIDE;
 
     /**
         Sets the caret position.
@@ -2262,7 +2262,7 @@ public:
     WX_FORWARD_TO_SCROLL_HELPER()
 
     // implement wxTextEntry methods
-    virtual wxString DoGetValue() const;
+    virtual wxString DoGetValue() const wxOVERRIDE;
 
     /**
         Do delayed image loading and garbage-collect other images
@@ -2282,11 +2282,11 @@ public:
 
 protected:
     // implement the wxTextEntry pure virtual method
-    virtual wxWindow *GetEditableWindow() { return this; }
+    virtual wxWindow *GetEditableWindow() wxOVERRIDE { return this; }
 
     // margins functions
-    virtual bool DoSetMargins(const wxPoint& pt);
-    virtual wxPoint DoGetMargins() const;
+    virtual bool DoSetMargins(const wxPoint& pt) wxOVERRIDE;
+    virtual wxPoint DoGetMargins() const wxOVERRIDE;
 
      // FIXME: this does not work, it allows this code to compile but will fail
      //        during run-time
@@ -2309,11 +2309,11 @@ protected:
     /**
         Currently this simply returns @c wxSize(10, 10).
     */
-    virtual wxSize DoGetBestSize() const ;
+    virtual wxSize DoGetBestSize() const wxOVERRIDE;
 
-    virtual void DoSetValue(const wxString& value, int flags = 0);
+    virtual void DoSetValue(const wxString& value, int flags = 0) wxOVERRIDE;
 
-    virtual void DoThaw();
+    virtual void DoThaw() wxOVERRIDE;
 
 
 // Data members
@@ -2640,7 +2640,7 @@ public:
     */
     void SetOldContainer(wxRichTextParagraphLayoutBox* container) { m_oldContainer = container; }
 
-    virtual wxEvent *Clone() const { return new wxRichTextEvent(*this); }
+    virtual wxEvent *Clone() const wxOVERRIDE { return new wxRichTextEvent(*this); }
 
 protected:
     int                             m_flags;
diff --git a/include/wx/richtext/richtextfontpage.h b/include/wx/richtext/richtextfontpage.h
index 78b80ff..b7a242d 100644
--- a/include/wx/richtext/richtextfontpage.h
+++ b/include/wx/richtext/richtextfontpage.h
@@ -70,8 +70,8 @@ public:
     void CreateControls();
 
     /// Transfer data from/to window
-    virtual bool TransferDataFromWindow();
-    virtual bool TransferDataToWindow();
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
+    virtual bool TransferDataToWindow() wxOVERRIDE;
 
     /// Updates the font preview
     void UpdatePreview();
diff --git a/include/wx/richtext/richtextformatdlg.h b/include/wx/richtext/richtextformatdlg.h
index ea09090..b5caf4b 100644
--- a/include/wx/richtext/richtextformatdlg.h
+++ b/include/wx/richtext/richtextformatdlg.h
@@ -123,7 +123,7 @@ class WXDLLIMPEXP_RICHTEXT wxRichTextFormattingDialog: public wxPropertySheetDia
                                                        public wxWithImages
 {
     wxDECLARE_CLASS(wxRichTextFormattingDialog);
-DECLARE_HELP_PROVISION()
+DECLARE_BASE_HELP_PROVISION()
 
 public:
     enum { Option_AllowPixelFontSize = 0x0001 };
@@ -192,8 +192,8 @@ public:
     void SetObject(wxRichTextObject* obj) { m_object = obj; }
 
     /// Transfers the data and from to the window
-    virtual bool TransferDataToWindow();
-    virtual bool TransferDataFromWindow();
+    virtual bool TransferDataToWindow() wxOVERRIDE;
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
 
     /// Apply the styles when a different tab is selected, so the previews are
     /// up to date
@@ -312,7 +312,7 @@ public:
 
     wxColour& GetColour() { return m_colour; }
 
-    virtual wxSize DoGetBestSize() const { return GetSize(); }
+    virtual wxSize DoGetBestSize() const wxOVERRIDE { return GetSize(); }
 
 protected:
     wxColour    m_colour;
@@ -366,7 +366,7 @@ public:
 
 protected:
     /// Returns the HTML for this item
-    virtual wxString OnGetItem(size_t n) const;
+    virtual wxString OnGetItem(size_t n) const wxOVERRIDE;
 
 private:
 
diff --git a/include/wx/richtext/richtexthtml.h b/include/wx/richtext/richtexthtml.h
index 9bd2750..1db619b 100644
--- a/include/wx/richtext/richtexthtml.h
+++ b/include/wx/richtext/richtexthtml.h
@@ -31,13 +31,13 @@ public:
     wxRichTextHTMLHandler(const wxString& name = wxT("HTML"), const wxString& ext = wxT("html"), int type = wxRICHTEXT_TYPE_HTML);
 
     /// Can we save using this handler?
-    virtual bool CanSave() const { return true; }
+    virtual bool CanSave() const wxOVERRIDE { return true; }
 
     /// Can we load using this handler?
-    virtual bool CanLoad() const { return false; }
+    virtual bool CanLoad() const wxOVERRIDE { return false; }
 
     /// Can we handle this filename (if using files)? By default, checks the extension.
-    virtual bool CanHandle(const wxString& filename) const;
+    virtual bool CanHandle(const wxString& filename) const wxOVERRIDE;
 
 // Accessors and operations unique to this handler
 
@@ -75,8 +75,8 @@ protected:
 // Implementation
 
 #if wxUSE_STREAMS
-    virtual bool DoLoadFile(wxRichTextBuffer *buffer, wxInputStream& stream);
-    virtual bool DoSaveFile(wxRichTextBuffer *buffer, wxOutputStream& stream);
+    virtual bool DoLoadFile(wxRichTextBuffer *buffer, wxInputStream& stream) wxOVERRIDE;
+    virtual bool DoSaveFile(wxRichTextBuffer *buffer, wxOutputStream& stream) wxOVERRIDE;
 
     /// Output character formatting
     void BeginCharacterFormatting(const wxRichTextAttr& currentStyle, const wxRichTextAttr& thisStyle, const wxRichTextAttr& paraStyle, wxTextOutputStream& stream );
diff --git a/include/wx/richtext/richtextindentspage.h b/include/wx/richtext/richtextindentspage.h
index d5a879b..8d6bc0e 100644
--- a/include/wx/richtext/richtextindentspage.h
+++ b/include/wx/richtext/richtextindentspage.h
@@ -66,8 +66,8 @@ public:
     void CreateControls();
 
     /// Transfer data from/to window
-    virtual bool TransferDataFromWindow();
-    virtual bool TransferDataToWindow();
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
+    virtual bool TransferDataToWindow() wxOVERRIDE;
 
     /// Updates the paragraph preview
     void UpdatePreview();
diff --git a/include/wx/richtext/richtextliststylepage.h b/include/wx/richtext/richtextliststylepage.h
index 488b0d0..d45ba86 100644
--- a/include/wx/richtext/richtextliststylepage.h
+++ b/include/wx/richtext/richtextliststylepage.h
@@ -63,8 +63,8 @@ public:
     void UpdatePreview();
 
     /// Transfer data from/to window
-    virtual bool TransferDataFromWindow();
-    virtual bool TransferDataToWindow();
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
+    virtual bool TransferDataToWindow() wxOVERRIDE;
 
     /// Get attributes for selected level
     wxRichTextAttr* GetAttributesForSelection();
diff --git a/include/wx/richtext/richtextmarginspage.h b/include/wx/richtext/richtextmarginspage.h
index e247a1e..d69184e 100644
--- a/include/wx/richtext/richtextmarginspage.h
+++ b/include/wx/richtext/richtextmarginspage.h
@@ -72,8 +72,8 @@ public:
     wxRichTextAttr* GetAttributes();
     
     /// Data transfer
-    virtual bool TransferDataToWindow();
-    virtual bool TransferDataFromWindow();
+    virtual bool TransferDataToWindow() wxOVERRIDE;
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
     
 ////@begin wxRichTextMarginsPage event handler declarations
 
diff --git a/include/wx/richtext/richtextsizepage.h b/include/wx/richtext/richtextsizepage.h
index 93c1e0a..e9bc149 100644
--- a/include/wx/richtext/richtextsizepage.h
+++ b/include/wx/richtext/richtextsizepage.h
@@ -73,8 +73,8 @@ public:
     wxRichTextAttr* GetAttributes();
 
     /// Data transfer
-    virtual bool TransferDataToWindow();
-    virtual bool TransferDataFromWindow();
+    virtual bool TransferDataToWindow() wxOVERRIDE;
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
 
     /// Show/hide position controls
     static void ShowPositionControls(bool show) { sm_showPositionControls = show; }
diff --git a/include/wx/richtext/richtextstyledlg.h b/include/wx/richtext/richtextstyledlg.h
index 79b14f9..822bc7c 100644
--- a/include/wx/richtext/richtextstyledlg.h
+++ b/include/wx/richtext/richtextstyledlg.h
@@ -80,7 +80,7 @@ class WXDLLIMPEXP_RICHTEXT wxRichTextStyleOrganiserDialog: public wxDialog
 {
     wxDECLARE_DYNAMIC_CLASS(wxRichTextStyleOrganiserDialog);
     wxDECLARE_EVENT_TABLE();
-    DECLARE_HELP_PROVISION()
+    DECLARE_BASE_HELP_PROVISION()
 
 public:
     /// Constructors
@@ -97,8 +97,8 @@ public:
     void Init();
 
     /// Transfer data from/to window
-    virtual bool TransferDataFromWindow();
-    virtual bool TransferDataToWindow();
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
+    virtual bool TransferDataToWindow() wxOVERRIDE;
 
     /// Set/get style sheet
     void SetStyleSheet(wxRichTextStyleSheet* sheet) { m_richTextStyleSheet = sheet; }
diff --git a/include/wx/richtext/richtextstylepage.h b/include/wx/richtext/richtextstylepage.h
index 49fbd1f..7d031ef 100644
--- a/include/wx/richtext/richtextstylepage.h
+++ b/include/wx/richtext/richtextstylepage.h
@@ -50,8 +50,8 @@ public:
     void CreateControls();
 
     /// Transfer data from/to window
-    virtual bool TransferDataFromWindow();
-    virtual bool TransferDataToWindow();
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
+    virtual bool TransferDataToWindow() wxOVERRIDE;
 
     /// Gets the attributes associated with the main formatting dialog
     wxRichTextAttr* GetAttributes();
diff --git a/include/wx/richtext/richtextstyles.h b/include/wx/richtext/richtextstyles.h
index 28caaa7..c8daef3 100644
--- a/include/wx/richtext/richtextstyles.h
+++ b/include/wx/richtext/richtextstyles.h
@@ -143,7 +143,7 @@ public:
     virtual ~wxRichTextCharacterStyleDefinition() {}
 
     /// Clones the object
-    virtual wxRichTextStyleDefinition* Clone() const { return new wxRichTextCharacterStyleDefinition(*this); }
+    virtual wxRichTextStyleDefinition* Clone() const wxOVERRIDE { return new wxRichTextCharacterStyleDefinition(*this); }
 
 protected:
 };
@@ -181,7 +181,7 @@ public:
     bool operator ==(const wxRichTextParagraphStyleDefinition& def) const;
 
     /// Clones the object
-    virtual wxRichTextStyleDefinition* Clone() const { return new wxRichTextParagraphStyleDefinition(*this); }
+    virtual wxRichTextStyleDefinition* Clone() const wxOVERRIDE { return new wxRichTextParagraphStyleDefinition(*this); }
 
 protected:
 
@@ -218,7 +218,7 @@ public:
     bool operator ==(const wxRichTextListStyleDefinition& def) const;
 
     /// Clones the object
-    virtual wxRichTextStyleDefinition* Clone() const { return new wxRichTextListStyleDefinition(*this); }
+    virtual wxRichTextStyleDefinition* Clone() const wxOVERRIDE { return new wxRichTextListStyleDefinition(*this); }
 
     /// Sets/gets the attributes for the given level
     void SetLevelAttributes(int i, const wxRichTextAttr& attr);
@@ -284,7 +284,7 @@ public:
     bool operator ==(const wxRichTextBoxStyleDefinition& def) const;
 
     /// Clones the object
-    virtual wxRichTextStyleDefinition* Clone() const { return new wxRichTextBoxStyleDefinition(*this); }
+    virtual wxRichTextStyleDefinition* Clone() const wxOVERRIDE { return new wxRichTextBoxStyleDefinition(*this); }
 
 protected:
 };
@@ -556,7 +556,7 @@ public:
 
 protected:
     /// Returns the HTML for this item
-    virtual wxString OnGetItem(size_t n) const;
+    virtual wxString OnGetItem(size_t n) const wxOVERRIDE;
 
 private:
 
@@ -656,23 +656,23 @@ private:
 class wxRichTextStyleComboPopup : public wxRichTextStyleListBox, public wxComboPopup
 {
 public:
-    virtual void Init()
+    virtual void Init() wxOVERRIDE
     {
         m_itemHere = -1; // hot item in list
         m_value = -1;
     }
 
-    virtual bool Create( wxWindow* parent );
+    virtual bool Create( wxWindow* parent ) wxOVERRIDE;
 
-    virtual wxWindow *GetControl() { return this; }
+    virtual wxWindow *GetControl() wxOVERRIDE { return this; }
 
-    virtual void SetStringValue( const wxString& s );
+    virtual void SetStringValue( const wxString& s ) wxOVERRIDE;
 
-    virtual wxString GetStringValue() const;
+    virtual wxString GetStringValue() const wxOVERRIDE;
 
     /// Can we set the selection based on the editor caret position?
     // virtual bool CanAutoSetSelection() { return ((m_combo == NULL) || !m_combo->IsPopupShown()); }
-    virtual bool CanAutoSetSelection() { return false; }
+    virtual bool CanAutoSetSelection() wxOVERRIDE { return false; }
 
     //
     // Popup event handlers
diff --git a/include/wx/richtext/richtextsymboldlg.h b/include/wx/richtext/richtextsymboldlg.h
index 03b7dc0..082e88c 100644
--- a/include/wx/richtext/richtextsymboldlg.h
+++ b/include/wx/richtext/richtextsymboldlg.h
@@ -57,7 +57,7 @@ class WXDLLIMPEXP_RICHTEXT wxSymbolPickerDialog: public wxDialog
 {
     wxDECLARE_DYNAMIC_CLASS(wxSymbolPickerDialog);
     wxDECLARE_EVENT_TABLE();
-    DECLARE_HELP_PROVISION()
+    DECLARE_BASE_HELP_PROVISION()
 
 public:
     /// Constructors
@@ -103,7 +103,7 @@ public:
     static void SetShowToolTips(bool show) { sm_showToolTips = show; }
 
     /// Data transfer
-    virtual bool TransferDataToWindow();
+    virtual bool TransferDataToWindow() wxOVERRIDE;
 
 ////@begin wxSymbolPickerDialog event handler declarations
 
@@ -231,7 +231,7 @@ public:
     // ---------
 
     // set the current font
-    virtual bool SetFont(const wxFont& font);
+    virtual bool SetFont(const wxFont& font) wxOVERRIDE;
 
     // set Unicode/ASCII mode
     void SetUnicodeMode(bool unicodeMode);
@@ -276,7 +276,7 @@ public:
     // change the background colour of the selected cells
     void SetSelectionBackground(const wxColour& col);
 
-    virtual wxVisualAttributes GetDefaultAttributes() const
+    virtual wxVisualAttributes GetDefaultAttributes() const wxOVERRIDE
     {
         return GetClassDefaultAttributes(GetWindowVariant());
     }
@@ -297,7 +297,7 @@ protected:
     virtual void OnDrawItem(wxDC& dc, const wxRect& rect, size_t n) const;
 
     // gets the line height
-    virtual wxCoord OnGetRowHeight(size_t line) const;
+    virtual wxCoord OnGetRowHeight(size_t line) const wxOVERRIDE;
 
     // event handlers
     void OnPaint(wxPaintEvent& event);
diff --git a/include/wx/richtext/richtexttabspage.h b/include/wx/richtext/richtexttabspage.h
index b0e595f..5f6e8a5 100644
--- a/include/wx/richtext/richtexttabspage.h
+++ b/include/wx/richtext/richtexttabspage.h
@@ -64,8 +64,8 @@ public:
     void Init();
 
     /// Transfer data from/to window
-    virtual bool TransferDataFromWindow();
-    virtual bool TransferDataToWindow();
+    virtual bool TransferDataFromWindow() wxOVERRIDE;
+    virtual bool TransferDataToWindow() wxOVERRIDE;
 
     /// Sorts the tab array
     virtual void SortTabs();
diff --git a/include/wx/richtext/richtextuicustomization.h b/include/wx/richtext/richtextuicustomization.h
index 92c42d7..99b68aa 100644
--- a/include/wx/richtext/richtextuicustomization.h
+++ b/include/wx/richtext/richtextuicustomization.h
@@ -102,18 +102,20 @@ protected:
 /// to know in advance what page classes are being used, allowing for extension
 /// of the formatting dialog.
 
-#define DECLARE_HELP_PROVISION() \
-    virtual long GetHelpId() const { return sm_helpInfo.GetHelpId(); } \
+#define DECLARE_BASE_HELP_PROVISION(over) \
+    virtual long GetHelpId() const over { return sm_helpInfo.GetHelpId(); } \
     virtual void SetHelpId(long id) { sm_helpInfo.SetHelpId(id); } \
-    virtual wxRichTextUICustomization* GetUICustomization() const { return sm_helpInfo.GetUICustomization(); } \
+    virtual wxRichTextUICustomization* GetUICustomization() const over { return sm_helpInfo.GetUICustomization(); } \
     virtual void SetUICustomization(wxRichTextUICustomization* customization) { sm_helpInfo.SetUICustomization(customization); } \
-    virtual bool ShowHelp(wxWindow* win) { return sm_helpInfo.ShowHelp(win); } \
+    virtual bool ShowHelp(wxWindow* win) over { return sm_helpInfo.ShowHelp(win); } \
 public: \
     static wxRichTextHelpInfo& GetHelpInfo() { return sm_helpInfo; }\
 protected: \
     static wxRichTextHelpInfo sm_helpInfo; \
 public:
 
+#define DECLARE_HELP_PROVISION() DECLARE_BASE_HELP_PROVISION(wxOVERRIDE)
+
 /// Add this to the implementation file for each dialog that needs help provision.
 
 #define IMPLEMENT_HELP_PROVISION(theClass) \
diff --git a/include/wx/richtext/richtextxml.h b/include/wx/richtext/richtextxml.h
index 6a17ade..9557d5d 100644
--- a/include/wx/richtext/richtextxml.h
+++ b/include/wx/richtext/richtextxml.h
@@ -202,10 +202,10 @@ public:
     virtual wxRichTextObject* CreateObjectForXMLName(wxRichTextObject* parent, const wxString& name) const;
 
     /// Can we save using this handler?
-    virtual bool CanSave() const { return true; }
+    virtual bool CanSave() const wxOVERRIDE { return true; }
 
     /// Can we load using this handler?
-    virtual bool CanLoad() const { return true; }
+    virtual bool CanLoad() const wxOVERRIDE { return true; }
 
     /// Returns the XML helper object, implementing functionality
     /// that can be reused elsewhere.
@@ -226,8 +226,8 @@ public:
 
 protected:
 #if wxUSE_STREAMS
-    virtual bool DoLoadFile(wxRichTextBuffer *buffer, wxInputStream& stream);
-    virtual bool DoSaveFile(wxRichTextBuffer *buffer, wxOutputStream& stream);
+    virtual bool DoLoadFile(wxRichTextBuffer *buffer, wxInputStream& stream) wxOVERRIDE;
+    virtual bool DoSaveFile(wxRichTextBuffer *buffer, wxOutputStream& stream) wxOVERRIDE;
 #endif
 
     wxRichTextXMLHelper m_helper;
diff --git a/include/wx/rtti.h b/include/wx/rtti.h
index 51017ba..04d3c00 100644
--- a/include/wx/rtti.h
+++ b/include/wx/rtti.h
@@ -124,11 +124,16 @@ WXDLLIMPEXP_BASE wxObject *wxCreateDynamicObject(const wxString& name);
 // ----------------------------------------------------------------------------
 // Dynamic class macros
 // ----------------------------------------------------------------------------
-
-#define wxDECLARE_ABSTRACT_CLASS(name)                                        \
+#define wxDECLARE_ABSTRACT_CLASS0(name, over)                                 \
     public:                                                                   \
         static wxClassInfo ms_classInfo;                                      \
-        virtual wxClassInfo *GetClassInfo() const
+        virtual wxClassInfo *GetClassInfo() const over
+
+#define wxDECLARE_PURE_ABSTRACT_CLASS(name)                                   \
+    wxDECLARE_ABSTRACT_CLASS0(name,)
+
+#define wxDECLARE_ABSTRACT_CLASS(name)                                        \
+    wxDECLARE_ABSTRACT_CLASS0(name, wxOVERRIDE)
 
 #define wxDECLARE_DYNAMIC_CLASS_NO_ASSIGN(name)                               \
     wxDECLARE_NO_ASSIGN_CLASS(name);                                          \
diff --git a/include/wx/sckaddr.h b/include/wx/sckaddr.h
index 941abe8..6f44a63 100644
--- a/include/wx/sckaddr.h
+++ b/include/wx/sckaddr.h
@@ -124,14 +124,17 @@ public:
     wxIPV4address(const wxIPV4address& other) : wxIPaddress(other) { }
 
     // implement wxSockAddress pure virtuals:
-    virtual Family Type() { return IPV4; }
-    virtual wxSockAddress *Clone() const { return new wxIPV4address(*this); }
+    virtual Family Type() wxOVERRIDE { return IPV4; }
+    virtual wxSockAddress *Clone() const wxOVERRIDE
+    {
+        return new wxIPV4address(*this);
+    }
 
 
     // implement wxIPaddress pure virtuals:
-    virtual bool IsLocalHost() const;
+    virtual bool IsLocalHost() const wxOVERRIDE;
 
-    virtual wxString IPAddress() const;
+    virtual wxString IPAddress() const wxOVERRIDE;
 
 
     // IPv4-specific methods:
@@ -143,7 +146,7 @@ public:
     bool BroadcastAddress();
 
 private:
-    virtual void DoInitImpl();
+    virtual void DoInitImpl() wxOVERRIDE;
 
     wxDECLARE_DYNAMIC_CLASS(wxIPV4address);
 };
@@ -159,8 +162,11 @@ public:
     wxIPV6address(const wxIPV6address& other) : wxIPaddress(other) { }
 
     // implement wxSockAddress pure virtuals:
-    virtual Family Type() { return IPV6; }
-    virtual wxSockAddress *Clone() const { return new wxIPV6address(*this); }
+    virtual Family Type() wxOVERRIDE { return IPV6; }
+    virtual wxSockAddress *Clone() const wxOVERRIDE
+    {
+        return new wxIPV6address(*this);
+    }
 
 
     // implement wxIPaddress pure virtuals:
@@ -174,7 +180,7 @@ public:
     using wxIPaddress::Hostname;
 
 private:
-    virtual void DoInitImpl();
+    virtual void DoInitImpl() wxOVERRIDE;
 
     wxDECLARE_DYNAMIC_CLASS(wxIPV6address);
 };
@@ -198,8 +204,11 @@ public:
     void Filename(const wxString& name);
     wxString Filename() const;
 
-    virtual Family Type() { return UNIX; }
-    virtual wxSockAddress *Clone() const { return new wxUNIXaddress(*this); }
+    virtual Family Type() wxOVERRIDE { return UNIX; }
+    virtual wxSockAddress *Clone() const wxOVERRIDE
+    {
+        return new wxUNIXaddress(*this);
+    }
 
 private:
     wxSockAddressImpl& GetUNIX();
diff --git a/include/wx/scrolwin.h b/include/wx/scrolwin.h
index fad40d0..e8f4ac8 100644
--- a/include/wx/scrolwin.h
+++ b/include/wx/scrolwin.h
@@ -341,13 +341,13 @@ protected:
 // methods to corresponding wxScrollHelper methods
 #define WX_FORWARD_TO_SCROLL_HELPER()                                         \
 public:                                                                       \
-    virtual void PrepareDC(wxDC& dc) { DoPrepareDC(dc); }                     \
-    virtual bool Layout() { return ScrollLayout(); }                          \
-    virtual bool CanScroll(int orient) const                                  \
+    virtual void PrepareDC(wxDC& dc) wxOVERRIDE { DoPrepareDC(dc); }          \
+    virtual bool Layout() wxOVERRIDE { return ScrollLayout(); }               \
+    virtual bool CanScroll(int orient) const wxOVERRIDE                       \
         { return IsScrollbarShown(orient); }                                  \
-    virtual void DoSetVirtualSize(int x, int y)                               \
+    virtual void DoSetVirtualSize(int x, int y) wxOVERRIDE                    \
         { ScrollDoSetVirtualSize(x, y); }                                     \
-    virtual wxSize GetBestVirtualSize() const                                 \
+    virtual wxSize GetBestVirtualSize() const wxOVERRIDE                      \
         { return ScrollGetBestVirtualSize(); }
 
 // include the declaration of the real wxScrollHelper
@@ -446,7 +446,7 @@ public:
     WX_FORWARD_TO_SCROLL_HELPER()
 
 protected:
-    virtual wxSize DoGetBestSize() const
+    virtual wxSize DoGetBestSize() const wxOVERRIDE
     {
         return FilterBestSize(this, this, T::DoGetBestSize());
     }
diff --git a/include/wx/stc/stc.h b/include/wx/stc/stc.h
index c8adbb3..7bad87a 100644
--- a/include/wx/stc/stc.h
+++ b/include/wx/stc/stc.h
@@ -2691,14 +2691,14 @@ public:
     int GetStyleAt(int pos) const;
 
     // Redoes the next action on the undo history.
-    void Redo();
+    void Redo() wxOVERRIDE;
 
     // Choose between collecting actions into the undo
     // history and discarding them.
     void SetUndoCollection(bool collectUndo);
 
     // Select all the text in the document.
-    void SelectAll();
+    void SelectAll() wxOVERRIDE;
 
     // Remember the current position in the undo history as the position
     // at which the document was saved.
@@ -2708,7 +2708,7 @@ public:
     wxMemoryBuffer GetStyledText(int startPos, int endPos);
 
     // Are there any redoable actions in the undo history?
-    bool CanRedo() const;
+    bool CanRedo() const wxOVERRIDE;
 
     // Retrieve the line number at which a particular marker is located.
     int MarkerLineFromHandle(int handle);
@@ -3325,28 +3325,28 @@ public:
     void SetReadOnly(bool readOnly);
 
     // Will a paste succeed?
-    bool CanPaste() const;
+    bool CanPaste() const wxOVERRIDE;
 
     // Are there any undoable actions in the undo history?
-    bool CanUndo() const;
+    bool CanUndo() const wxOVERRIDE;
 
     // Delete the undo history.
     void EmptyUndoBuffer();
 
     // Undo one action in the undo history.
-    void Undo();
+    void Undo() wxOVERRIDE;
 
     // Cut the selection to the clipboard.
-    void Cut();
+    void Cut() wxOVERRIDE;
 
     // Copy the selection to the clipboard.
-    void Copy();
+    void Copy() wxOVERRIDE;
 
     // Paste the contents of the clipboard into the document replacing the selection.
-    void Paste();
+    void Paste() wxOVERRIDE;
 
     // Clear the selection.
-    void Clear();
+    void Clear() wxOVERRIDE;
 
     // Replace the contents of the document with the argument text.
     void SetText(const wxString& text);
@@ -3608,7 +3608,7 @@ public:
     bool GetUseVerticalScrollBar() const;
 
     // Append a string to the end of the document without changing the selection.
-    void AppendText(const wxString& text);
+    void AppendText(const wxString& text) wxOVERRIDE;
 
     // Is drawing done in two phases with backgrounds drawn before faoregrounds?
     bool GetTwoPhaseDraw() const;
@@ -4799,16 +4799,16 @@ public:
     // implement wxTextEntryBase pure virtual methods
     // ----------------------------------------------
 
-    virtual void WriteText(const wxString& text)
+    virtual void WriteText(const wxString& text) wxOVERRIDE
     {
         ReplaceSelection(text);
     }
 
-    virtual void Remove(long from, long to)
+    virtual void Remove(long from, long to) wxOVERRIDE
     {
         Replace(from, to, "");
     }
-    virtual void Replace(long from, long to, const wxString& text)
+    virtual void Replace(long from, long to, const wxString& text) wxOVERRIDE
     {
         SetTargetStart((int)from);
         SetTargetEnd((int)to);
@@ -4830,14 +4830,14 @@ public:
 
     */
 
-    virtual void SetInsertionPoint(long pos)
+    virtual void SetInsertionPoint(long pos) wxOVERRIDE
     {
         SetCurrentPos(int(pos == -1 ? GetLastPosition() : pos));
     }
-    virtual long GetInsertionPoint() const { return GetCurrentPos(); }
-    virtual long GetLastPosition() const { return GetTextLength(); }
+    virtual long GetInsertionPoint() const wxOVERRIDE { return GetCurrentPos(); }
+    virtual long GetLastPosition() const wxOVERRIDE { return GetTextLength(); }
 
-    virtual void SetSelection(long from, long to)
+    virtual void SetSelection(long from, long to) wxOVERRIDE
     {
         if ( from == -1 && to == -1 )
         {
@@ -4850,7 +4850,7 @@ public:
         }
     }
 
-    virtual void SelectNone()
+    virtual void SelectNone() wxOVERRIDE
     {
         ClearSelections();
     }
@@ -4858,7 +4858,7 @@ public:
 #ifdef SWIG
     void GetSelection(long* OUTPUT, long* OUTPUT) const;
 #else
-    virtual void GetSelection(long *from, long *to) const
+    virtual void GetSelection(long *from, long *to) const wxOVERRIDE
     {
         if ( from )
             *from = GetSelectionStart();
@@ -4878,14 +4878,14 @@ public:
     }
 #endif
 
-    virtual bool IsEditable() const { return !GetReadOnly(); }
-    virtual void SetEditable(bool editable) { SetReadOnly(!editable); }
+    virtual bool IsEditable() const wxOVERRIDE { return !GetReadOnly(); }
+    virtual void SetEditable(bool editable) wxOVERRIDE { SetReadOnly(!editable); }
 
     // implement wxTextAreaBase pure virtual methods
     // ---------------------------------------------
 
-    virtual int GetLineLength(long lineNo) const { return static_cast<int>(GetLineText(lineNo).length()); }
-    virtual wxString GetLineText(long lineNo) const
+    virtual int GetLineLength(long lineNo) const wxOVERRIDE { return static_cast<int>(GetLineText(lineNo).length()); }
+    virtual wxString GetLineText(long lineNo) const wxOVERRIDE
     {
         wxString text = GetLine(static_cast<int>(lineNo));
         size_t lastNewLine = text.find_last_not_of(wxS("\r\n"));
@@ -4896,42 +4896,42 @@ public:
             text.clear();
         return text;
     }
-    virtual int GetNumberOfLines() const { return GetLineCount(); }
+    virtual int GetNumberOfLines() const wxOVERRIDE { return GetLineCount(); }
 
-    virtual bool IsModified() const { return GetModify(); }
-    virtual void MarkDirty() { wxFAIL_MSG("not implemented"); }
-    virtual void DiscardEdits() { SetSavePoint(); }
+    virtual bool IsModified() const wxOVERRIDE { return GetModify(); }
+    virtual void MarkDirty() wxOVERRIDE { wxFAIL_MSG("not implemented"); }
+    virtual void DiscardEdits() wxOVERRIDE { SetSavePoint(); }
 
     virtual bool SetStyle(long WXUNUSED(start), long WXUNUSED(end),
-                          const wxTextAttr& WXUNUSED(style))
+                          const wxTextAttr& WXUNUSED(style)) wxOVERRIDE
     {
         wxFAIL_MSG("not implemented");
 
         return false;
     }
 
-    virtual bool GetStyle(long WXUNUSED(position), wxTextAttr& WXUNUSED(style))
+    virtual bool GetStyle(long WXUNUSED(position), wxTextAttr& WXUNUSED(style)) wxOVERRIDE
     {
         wxFAIL_MSG("not implemented");
 
         return false;
     }
 
-    virtual bool SetDefaultStyle(const wxTextAttr& WXUNUSED(style))
+    virtual bool SetDefaultStyle(const wxTextAttr& WXUNUSED(style)) wxOVERRIDE
     {
         wxFAIL_MSG("not implemented");
 
         return false;
     }
 
-    virtual long XYToPosition(long x, long y) const
+    virtual long XYToPosition(long x, long y) const wxOVERRIDE
     {
         long pos = PositionFromLine((int)y);
         pos += x;
         return pos;
     }
 
-    virtual bool PositionToXY(long pos, long *x, long *y) const
+    virtual bool PositionToXY(long pos, long *x, long *y) const wxOVERRIDE
     {
         int l = LineFromPosition((int)pos);
         if ( l == -1 )
@@ -4946,11 +4946,11 @@ public:
         return true;
     }
 
-    virtual void ShowPosition(long pos) { GotoPos((int)pos); }
+    virtual void ShowPosition(long pos) wxOVERRIDE { GotoPos((int)pos); }
 
     using wxWindow::HitTest;
 
-    virtual wxTextCtrlHitTestResult HitTest(const wxPoint& pt, long *pos) const
+    virtual wxTextCtrlHitTestResult HitTest(const wxPoint& pt, long *pos) const wxOVERRIDE
     {
         const long l = PositionFromPoint(pt);
         if ( l == -1 )
@@ -4965,7 +4965,7 @@ public:
     // just unhide it
     virtual wxTextCtrlHitTestResult HitTest(const wxPoint& pt,
                                             wxTextCoord *col,
-                                            wxTextCoord *row) const
+                                            wxTextCoord *row) const wxOVERRIDE
     {
         return wxTextAreaBase::HitTest(pt, col, row);
     }
@@ -4973,13 +4973,13 @@ public:
     static wxVersionInfo GetLibraryVersionInfo();
 
 protected:
-    virtual void DoSetValue(const wxString& value, int flags);
-    virtual wxString DoGetValue() const { return GetText(); }
-    virtual wxWindow *GetEditableWindow() { return this; }
+    virtual void DoSetValue(const wxString& value, int flags) wxOVERRIDE;
+    virtual wxString DoGetValue() const wxOVERRIDE { return GetText(); }
+    virtual wxWindow *GetEditableWindow() wxOVERRIDE { return this; }
 
 #ifndef SWIG
-    virtual bool DoLoadFile(const wxString& file, int fileType);
-    virtual bool DoSaveFile(const wxString& file, int fileType);
+    virtual bool DoLoadFile(const wxString& file, int fileType) wxOVERRIDE;
+    virtual bool DoSaveFile(const wxString& file, int fileType) wxOVERRIDE;
 
     // Event handlers
     void OnPaint(wxPaintEvent& evt);
@@ -5003,7 +5003,7 @@ protected:
     void OnListBox(wxCommandEvent& evt);
     void OnIdle(wxIdleEvent& evt);
 
-    virtual wxSize DoGetBestSize() const;
+    virtual wxSize DoGetBestSize() const wxOVERRIDE;
 
     // Turn notifications from Scintilla into events
     void NotifyChange();
@@ -5110,7 +5110,7 @@ public:
     bool GetControl() const;
     bool GetAlt() const;
 
-    virtual wxEvent* Clone() const { return new wxStyledTextEvent(*this); }
+    virtual wxEvent* Clone() const wxOVERRIDE { return new wxStyledTextEvent(*this); }
 
 #ifndef SWIG
 private:
diff --git a/include/wx/tipwin.h b/include/wx/tipwin.h
index 1334c05..08c0957 100644
--- a/include/wx/tipwin.h
+++ b/include/wx/tipwin.h
@@ -73,7 +73,7 @@ protected:
     void OnActivate(wxActivateEvent& event);
     void OnKillFocus(wxFocusEvent& event);
 #else // wxUSE_POPUPWIN
-    virtual void OnDismiss();
+    virtual void OnDismiss() wxOVERRIDE;
 #endif // wxUSE_POPUPWIN/!wxUSE_POPUPWIN
 
 private:
diff --git a/include/wx/unix/apptrait.h b/include/wx/unix/apptrait.h
index c60fce1..a79c689 100644
--- a/include/wx/unix/apptrait.h
+++ b/include/wx/unix/apptrait.h
@@ -54,8 +54,8 @@ public:
     virtual wxTimerImpl *CreateTimerImpl(wxTimer *timer) wxOVERRIDE;
 #endif
 #if wxUSE_THREADS && defined(__WXGTK20__)
-    virtual void MutexGuiEnter();
-    virtual void MutexGuiLeave();
+    virtual void MutexGuiEnter() wxOVERRIDE;
+    virtual void MutexGuiLeave() wxOVERRIDE;
 #endif
 
 #if defined(__WXMAC__) && wxUSE_STDPATHS
@@ -64,13 +64,13 @@ public:
     virtual wxPortId GetToolkitVersion(int *majVer = NULL, int *minVer = NULL) const wxOVERRIDE;
 
 #ifdef __WXGTK20__
-    virtual wxString GetDesktopEnvironment() const;
+    virtual wxString GetDesktopEnvironment() const wxOVERRIDE;
     virtual wxString GetStandardCmdLineOptions(wxArrayString& names,
-                                               wxArrayString& desc) const;
+                                               wxArrayString& desc) const wxOVERRIDE;
 #endif // __WXGTK20____
 
 #if defined(__WXGTK20__)
-    virtual bool ShowAssertDialog(const wxString& msg);
+    virtual bool ShowAssertDialog(const wxString& msg) wxOVERRIDE;
 #endif
 
 #if wxUSE_SOCKETS
@@ -80,7 +80,7 @@ public:
 #endif
 
 #ifdef wxHAS_GUI_FDIOMANAGER
-    virtual wxFDIOManager *GetFDIOManager();
+    virtual wxFDIOManager *GetFDIOManager() wxOVERRIDE;
 #endif
 
 #endif // wxUSE_SOCKETS
diff --git a/include/wx/valnum.h b/include/wx/valnum.h
index 99cd57f..3664bcc 100644
--- a/include/wx/valnum.h
+++ b/include/wx/valnum.h
@@ -41,7 +41,7 @@ public:
 
     // Override base class method to not do anything but always return success:
     // we don't need this as we do our validation on the fly here.
-    virtual bool Validate(wxWindow * WXUNUSED(parent)) { return true; }
+    virtual bool Validate(wxWindow * WXUNUSED(parent)) wxOVERRIDE { return true; }
 
 protected:
     wxNumValidatorBase(int style)
diff --git a/include/wx/variant.h b/include/wx/variant.h
index 49e387e..efb1b5b 100644
--- a/include/wx/variant.h
+++ b/include/wx/variant.h
@@ -438,7 +438,7 @@ private:
 };
 
 #define DECLARE_WXANY_CONVERSION() \
-virtual bool GetAsAny(wxAny* any) const; \
+virtual bool GetAsAny(wxAny* any) const wxOVERRIDE; \
 static wxVariantData* VariantDataFactory(const wxAny& any);
 
 #define _REGISTER_WXANY_CONVERSION(T, CLASSNAME, FUNC) \
@@ -489,12 +489,12 @@ public:\
 \
     classname &GetValue() { return m_value; } \
 \
-    virtual bool Eq(wxVariantData& data) const; \
+    virtual bool Eq(wxVariantData& data) const wxOVERRIDE; \
 \
-    virtual wxString GetType() const; \
-    virtual wxClassInfo* GetValueClassInfo(); \
+    virtual wxString GetType() const wxOVERRIDE; \
+    virtual wxClassInfo* GetValueClassInfo() wxOVERRIDE; \
 \
-    virtual wxVariantData* Clone() const { return new classname##VariantData(m_value); } \
+    virtual wxVariantData* Clone() const wxOVERRIDE { return new classname##VariantData(m_value); } \
 \
     DECLARE_WXANY_CONVERSION() \
 protected:\
diff --git a/include/wx/vscroll.h b/include/wx/vscroll.h
index b7b9da6..a4d92a1 100644
--- a/include/wx/vscroll.h
+++ b/include/wx/vscroll.h
@@ -655,8 +655,8 @@ typedef wxVarVScrollHelper wxVarVScrollLegacyAdaptor;
 // classes
 #define WX_FORWARD_TO_VAR_SCROLL_HELPER()                                     \
 public:                                                                       \
-    virtual void PrepareDC(wxDC& dc) { DoPrepareDC(dc); }                     \
-    virtual bool Layout() { return ScrollLayout(); }
+    virtual void PrepareDC(wxDC& dc) wxOVERRIDE { DoPrepareDC(dc); }          \
+    virtual bool Layout() wxOVERRIDE { return ScrollLayout(); }
 
 
 
diff --git a/include/wx/xrc/xh_animatctrl.h b/include/wx/xrc/xh_animatctrl.h
index 065db16..5af50ba 100644
--- a/include/wx/xrc/xh_animatctrl.h
+++ b/include/wx/xrc/xh_animatctrl.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxAnimationCtrlXmlHandler : public wxXmlResourceHandler
 
 public:
     wxAnimationCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_ANIMATIONCTRL
diff --git a/include/wx/xrc/xh_auinotbk.h b/include/wx/xrc/xh_auinotbk.h
index 66aa234..787fa9a 100644
--- a/include/wx/xrc/xh_auinotbk.h
+++ b/include/wx/xrc/xh_auinotbk.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_AUI wxAuiNotebookXmlHandler : public wxXmlResourceHandler
 {
 public:
     wxAuiNotebookXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_isInside;
diff --git a/include/wx/xrc/xh_auitoolb.h b/include/wx/xrc/xh_auitoolb.h
index d28e3eb..66c722e 100644
--- a/include/wx/xrc/xh_auitoolb.h
+++ b/include/wx/xrc/xh_auitoolb.h
@@ -23,8 +23,8 @@ class WXDLLIMPEXP_AUI wxAuiToolBarXmlHandler : public wxXmlResourceHandler
 {
 public:
     wxAuiToolBarXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_isInside;
diff --git a/include/wx/xrc/xh_bannerwindow.h b/include/wx/xrc/xh_bannerwindow.h
index 1a570eb..7631bb2 100644
--- a/include/wx/xrc/xh_bannerwindow.h
+++ b/include/wx/xrc/xh_bannerwindow.h
@@ -19,8 +19,8 @@ class WXDLLIMPEXP_XRC wxBannerWindowXmlHandler : public wxXmlResourceHandler
 public:
     wxBannerWindowXmlHandler();
 
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
     wxDECLARE_DYNAMIC_CLASS(wxBannerWindowXmlHandler);
 };
diff --git a/include/wx/xrc/xh_bmp.h b/include/wx/xrc/xh_bmp.h
index 600ce01..9d27430 100644
--- a/include/wx/xrc/xh_bmp.h
+++ b/include/wx/xrc/xh_bmp.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxBitmapXmlHandler : public wxXmlResourceHandler
 
 public:
     wxBitmapXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 class WXDLLIMPEXP_XRC wxIconXmlHandler : public wxXmlResourceHandler
@@ -30,8 +30,8 @@ class WXDLLIMPEXP_XRC wxIconXmlHandler : public wxXmlResourceHandler
 
 public:
     wxIconXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC
diff --git a/include/wx/xrc/xh_bmpbt.h b/include/wx/xrc/xh_bmpbt.h
index 5437993..4e016a1 100644
--- a/include/wx/xrc/xh_bmpbt.h
+++ b/include/wx/xrc/xh_bmpbt.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxBitmapButtonXmlHandler : public wxXmlResourceHandler
 
 public:
     wxBitmapButtonXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_BMPBUTTON
diff --git a/include/wx/xrc/xh_bmpcbox.h b/include/wx/xrc/xh_bmpcbox.h
index f01f99f..b716b6f 100644
--- a/include/wx/xrc/xh_bmpcbox.h
+++ b/include/wx/xrc/xh_bmpcbox.h
@@ -22,8 +22,8 @@ class WXDLLIMPEXP_XRC wxBitmapComboBoxXmlHandler : public wxXmlResourceHandler
 
 public:
     wxBitmapComboBoxXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     wxBitmapComboBox*    m_combobox;
diff --git a/include/wx/xrc/xh_bttn.h b/include/wx/xrc/xh_bttn.h
index d16503a..5c608ae 100644
--- a/include/wx/xrc/xh_bttn.h
+++ b/include/wx/xrc/xh_bttn.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxButtonXmlHandler : public wxXmlResourceHandler
 
 public:
     wxButtonXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_BUTTON
diff --git a/include/wx/xrc/xh_cald.h b/include/wx/xrc/xh_cald.h
index 0670d92..7bb2b61 100644
--- a/include/wx/xrc/xh_cald.h
+++ b/include/wx/xrc/xh_cald.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxCalendarCtrlXmlHandler : public wxXmlResourceHandler
 
 public:
     wxCalendarCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_CALENDARCTRL
diff --git a/include/wx/xrc/xh_chckb.h b/include/wx/xrc/xh_chckb.h
index 54ef0e9..e07daf5 100644
--- a/include/wx/xrc/xh_chckb.h
+++ b/include/wx/xrc/xh_chckb.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxCheckBoxXmlHandler : public wxXmlResourceHandler
 
 public:
     wxCheckBoxXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_CHECKBOX
diff --git a/include/wx/xrc/xh_chckl.h b/include/wx/xrc/xh_chckl.h
index f1849f4..6761361 100644
--- a/include/wx/xrc/xh_chckl.h
+++ b/include/wx/xrc/xh_chckl.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxCheckListBoxXmlHandler : public wxXmlResourceHandler
 
 public:
     wxCheckListBoxXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_insideBox;
diff --git a/include/wx/xrc/xh_choic.h b/include/wx/xrc/xh_choic.h
index 28971e4..8275586 100644
--- a/include/wx/xrc/xh_choic.h
+++ b/include/wx/xrc/xh_choic.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxChoiceXmlHandler : public wxXmlResourceHandler
 
 public:
     wxChoiceXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_insideBox;
diff --git a/include/wx/xrc/xh_choicbk.h b/include/wx/xrc/xh_choicbk.h
index c0da48d..e464139 100644
--- a/include/wx/xrc/xh_choicbk.h
+++ b/include/wx/xrc/xh_choicbk.h
@@ -21,8 +21,8 @@ class WXDLLIMPEXP_XRC wxChoicebookXmlHandler : public wxXmlResourceHandler
 
 public:
     wxChoicebookXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_isInside;
diff --git a/include/wx/xrc/xh_clrpicker.h b/include/wx/xrc/xh_clrpicker.h
index 2c721e8..4798811 100644
--- a/include/wx/xrc/xh_clrpicker.h
+++ b/include/wx/xrc/xh_clrpicker.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxColourPickerCtrlXmlHandler : public wxXmlResourceHandler
 
 public:
     wxColourPickerCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_COLOURPICKERCTRL
diff --git a/include/wx/xrc/xh_cmdlinkbn.h b/include/wx/xrc/xh_cmdlinkbn.h
index 8f45960..91482a8 100644
--- a/include/wx/xrc/xh_cmdlinkbn.h
+++ b/include/wx/xrc/xh_cmdlinkbn.h
@@ -19,8 +19,8 @@ class WXDLLIMPEXP_XRC wxCommandLinkButtonXmlHandler : public wxXmlResourceHandle
 public:
     wxCommandLinkButtonXmlHandler();
 
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     wxDECLARE_DYNAMIC_CLASS(wxCommandLinkButtonXmlHandler);
diff --git a/include/wx/xrc/xh_collpane.h b/include/wx/xrc/xh_collpane.h
index 64d3de3..14b92b8 100644
--- a/include/wx/xrc/xh_collpane.h
+++ b/include/wx/xrc/xh_collpane.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxCollapsiblePaneXmlHandler : public wxXmlResourceHandler
 {
 public:
     wxCollapsiblePaneXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_isInside;
diff --git a/include/wx/xrc/xh_combo.h b/include/wx/xrc/xh_combo.h
index b6a7e41..9fa1c51 100644
--- a/include/wx/xrc/xh_combo.h
+++ b/include/wx/xrc/xh_combo.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxComboBoxXmlHandler : public wxXmlResourceHandler
 
 public:
     wxComboBoxXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_insideBox;
diff --git a/include/wx/xrc/xh_comboctrl.h b/include/wx/xrc/xh_comboctrl.h
index 7f721ce..e3c4467 100644
--- a/include/wx/xrc/xh_comboctrl.h
+++ b/include/wx/xrc/xh_comboctrl.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxComboCtrlXmlHandler : public wxXmlResourceHandler
 
 public:
     wxComboCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
 };
diff --git a/include/wx/xrc/xh_datectrl.h b/include/wx/xrc/xh_datectrl.h
index 8427857..2626f93 100644
--- a/include/wx/xrc/xh_datectrl.h
+++ b/include/wx/xrc/xh_datectrl.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxDateCtrlXmlHandler : public wxXmlResourceHandler
 
 public:
     wxDateCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_DATEPICKCTRL
diff --git a/include/wx/xrc/xh_dirpicker.h b/include/wx/xrc/xh_dirpicker.h
index 1e2486b..120f136 100644
--- a/include/wx/xrc/xh_dirpicker.h
+++ b/include/wx/xrc/xh_dirpicker.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxDirPickerCtrlXmlHandler : public wxXmlResourceHandler
 
 public:
     wxDirPickerCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_DIRPICKERCTRL
diff --git a/include/wx/xrc/xh_dlg.h b/include/wx/xrc/xh_dlg.h
index 546d2c6..ca3f1b6 100644
--- a/include/wx/xrc/xh_dlg.h
+++ b/include/wx/xrc/xh_dlg.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxDialogXmlHandler : public wxXmlResourceHandler
 
 public:
     wxDialogXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC
diff --git a/include/wx/xrc/xh_editlbox.h b/include/wx/xrc/xh_editlbox.h
index 81b2b56..0d0cb18 100644
--- a/include/wx/xrc/xh_editlbox.h
+++ b/include/wx/xrc/xh_editlbox.h
@@ -23,8 +23,8 @@ class WXDLLIMPEXP_XRC wxEditableListBoxXmlHandler : public wxXmlResourceHandler
 public:
     wxEditableListBoxXmlHandler();
 
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_insideBox;
diff --git a/include/wx/xrc/xh_filectrl.h b/include/wx/xrc/xh_filectrl.h
index f51bd52..c32bebb 100644
--- a/include/wx/xrc/xh_filectrl.h
+++ b/include/wx/xrc/xh_filectrl.h
@@ -18,8 +18,8 @@ class WXDLLIMPEXP_XRC wxFileCtrlXmlHandler : public wxXmlResourceHandler
 {
 public:
     wxFileCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     wxDECLARE_DYNAMIC_CLASS(wxFileCtrlXmlHandler);
diff --git a/include/wx/xrc/xh_filepicker.h b/include/wx/xrc/xh_filepicker.h
index 1e905fc..206f6c1 100644
--- a/include/wx/xrc/xh_filepicker.h
+++ b/include/wx/xrc/xh_filepicker.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxFilePickerCtrlXmlHandler : public wxXmlResourceHandler
 
 public:
     wxFilePickerCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_FILEPICKERCTRL
diff --git a/include/wx/xrc/xh_fontpicker.h b/include/wx/xrc/xh_fontpicker.h
index 8f114fa..822c0d9 100644
--- a/include/wx/xrc/xh_fontpicker.h
+++ b/include/wx/xrc/xh_fontpicker.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxFontPickerCtrlXmlHandler : public wxXmlResourceHandler
 
 public:
     wxFontPickerCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_FONTPICKERCTRL
diff --git a/include/wx/xrc/xh_frame.h b/include/wx/xrc/xh_frame.h
index 69b2341..8370892 100644
--- a/include/wx/xrc/xh_frame.h
+++ b/include/wx/xrc/xh_frame.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxFrameXmlHandler : public wxXmlResourceHandler
 
 public:
     wxFrameXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC
diff --git a/include/wx/xrc/xh_gauge.h b/include/wx/xrc/xh_gauge.h
index cd08cd0..af147d67 100644
--- a/include/wx/xrc/xh_gauge.h
+++ b/include/wx/xrc/xh_gauge.h
@@ -18,8 +18,8 @@ class WXDLLIMPEXP_XRC wxGaugeXmlHandler : public wxXmlResourceHandler
 {
 public:
     wxGaugeXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
     wxDECLARE_DYNAMIC_CLASS(wxGaugeXmlHandler);
 };
diff --git a/include/wx/xrc/xh_gdctl.h b/include/wx/xrc/xh_gdctl.h
index 507d9f9..398881d 100644
--- a/include/wx/xrc/xh_gdctl.h
+++ b/include/wx/xrc/xh_gdctl.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxGenericDirCtrlXmlHandler : public wxXmlResourceHandler
 
 public:
     wxGenericDirCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_DIRDLG
diff --git a/include/wx/xrc/xh_grid.h b/include/wx/xrc/xh_grid.h
index 1e761a9..553d5fd 100644
--- a/include/wx/xrc/xh_grid.h
+++ b/include/wx/xrc/xh_grid.h
@@ -21,8 +21,8 @@ class WXDLLIMPEXP_XRC wxGridXmlHandler : public wxXmlResourceHandler
 public:
     wxGridXmlHandler();
 
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_GRID
diff --git a/include/wx/xrc/xh_html.h b/include/wx/xrc/xh_html.h
index c2d6680..1266182 100644
--- a/include/wx/xrc/xh_html.h
+++ b/include/wx/xrc/xh_html.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxHtmlWindowXmlHandler : public wxXmlResourceHandler
 
 public:
     wxHtmlWindowXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_HTML
diff --git a/include/wx/xrc/xh_htmllbox.h b/include/wx/xrc/xh_htmllbox.h
index b50ee7b..7c8adc0 100644
--- a/include/wx/xrc/xh_htmllbox.h
+++ b/include/wx/xrc/xh_htmllbox.h
@@ -18,8 +18,8 @@ class WXDLLIMPEXP_XRC wxSimpleHtmlListBoxXmlHandler : public wxXmlResourceHandle
 {
 public:
     wxSimpleHtmlListBoxXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_insideBox;
diff --git a/include/wx/xrc/xh_hyperlink.h b/include/wx/xrc/xh_hyperlink.h
index 5670c3e5..adb11d8 100644
--- a/include/wx/xrc/xh_hyperlink.h
+++ b/include/wx/xrc/xh_hyperlink.h
@@ -25,10 +25,10 @@ public:
     wxHyperlinkCtrlXmlHandler();
 
     // Creates the control and returns a pointer to it.
-    virtual wxObject *DoCreateResource();
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
 
     // Returns true if we know how to create a control for the given node.
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_HYPERLINKCTRL
diff --git a/include/wx/xrc/xh_listb.h b/include/wx/xrc/xh_listb.h
index a29c7bc..2dbc3d4 100644
--- a/include/wx/xrc/xh_listb.h
+++ b/include/wx/xrc/xh_listb.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxListBoxXmlHandler : public wxXmlResourceHandler
 
 public:
     wxListBoxXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_insideBox;
diff --git a/include/wx/xrc/xh_listbk.h b/include/wx/xrc/xh_listbk.h
index 0872588..d4916cb 100644
--- a/include/wx/xrc/xh_listbk.h
+++ b/include/wx/xrc/xh_listbk.h
@@ -21,8 +21,8 @@ class WXDLLIMPEXP_XRC wxListbookXmlHandler : public wxXmlResourceHandler
 
 public:
     wxListbookXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_isInside;
diff --git a/include/wx/xrc/xh_listc.h b/include/wx/xrc/xh_listc.h
index a2a867f..bfe6e5c 100644
--- a/include/wx/xrc/xh_listc.h
+++ b/include/wx/xrc/xh_listc.h
@@ -21,8 +21,8 @@ class WXDLLIMPEXP_XRC wxListCtrlXmlHandler : public wxXmlResourceHandler
 {
 public:
     wxListCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     // handlers for wxListCtrl itself and its listcol and listitem children
diff --git a/include/wx/xrc/xh_mdi.h b/include/wx/xrc/xh_mdi.h
index 8d1d14e..bf2fd58 100644
--- a/include/wx/xrc/xh_mdi.h
+++ b/include/wx/xrc/xh_mdi.h
@@ -22,8 +22,8 @@ class WXDLLIMPEXP_XRC wxMdiXmlHandler : public wxXmlResourceHandler
 
 public:
     wxMdiXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     wxWindow *CreateFrame();
diff --git a/include/wx/xrc/xh_menu.h b/include/wx/xrc/xh_menu.h
index 6bcae7b..4f89509 100644
--- a/include/wx/xrc/xh_menu.h
+++ b/include/wx/xrc/xh_menu.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxMenuXmlHandler : public wxXmlResourceHandler
 
 public:
     wxMenuXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_insideMenu;
@@ -33,8 +33,8 @@ class WXDLLIMPEXP_XRC wxMenuBarXmlHandler : public wxXmlResourceHandler
 
 public:
     wxMenuBarXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_MENUS
diff --git a/include/wx/xrc/xh_notbk.h b/include/wx/xrc/xh_notbk.h
index 04f5108..0cd2a25 100644
--- a/include/wx/xrc/xh_notbk.h
+++ b/include/wx/xrc/xh_notbk.h
@@ -21,8 +21,8 @@ class WXDLLIMPEXP_XRC wxNotebookXmlHandler : public wxXmlResourceHandler
 
 public:
     wxNotebookXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_isInside;
diff --git a/include/wx/xrc/xh_odcombo.h b/include/wx/xrc/xh_odcombo.h
index ab78a79..a5c9d43 100644
--- a/include/wx/xrc/xh_odcombo.h
+++ b/include/wx/xrc/xh_odcombo.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxOwnerDrawnComboBoxXmlHandler : public wxXmlResourceHandl
 
 public:
     wxOwnerDrawnComboBoxXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_insideBox;
diff --git a/include/wx/xrc/xh_panel.h b/include/wx/xrc/xh_panel.h
index a48084d..0f0b4b0 100644
--- a/include/wx/xrc/xh_panel.h
+++ b/include/wx/xrc/xh_panel.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxPanelXmlHandler : public wxXmlResourceHandler
 
 public:
     wxPanelXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC
diff --git a/include/wx/xrc/xh_propdlg.h b/include/wx/xrc/xh_propdlg.h
index 02663b5..a52ff10 100644
--- a/include/wx/xrc/xh_propdlg.h
+++ b/include/wx/xrc/xh_propdlg.h
@@ -22,8 +22,8 @@ class WXDLLIMPEXP_XRC wxPropertySheetDialogXmlHandler : public wxXmlResourceHand
 
 public:
     wxPropertySheetDialogXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_isInside;
diff --git a/include/wx/xrc/xh_radbt.h b/include/wx/xrc/xh_radbt.h
index 23365d9..fafda37 100644
--- a/include/wx/xrc/xh_radbt.h
+++ b/include/wx/xrc/xh_radbt.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxRadioButtonXmlHandler : public wxXmlResourceHandler
 
 public:
     wxRadioButtonXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_RADIOBOX
diff --git a/include/wx/xrc/xh_radbx.h b/include/wx/xrc/xh_radbx.h
index d9bb966..aa9702f 100644
--- a/include/wx/xrc/xh_radbx.h
+++ b/include/wx/xrc/xh_radbx.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxRadioBoxXmlHandler : public wxXmlResourceHandler
 
 public:
     wxRadioBoxXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_insideBox;
diff --git a/include/wx/xrc/xh_ribbon.h b/include/wx/xrc/xh_ribbon.h
index b9737c8..14f6719 100644
--- a/include/wx/xrc/xh_ribbon.h
+++ b/include/wx/xrc/xh_ribbon.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_RIBBON wxRibbonXmlHandler : public wxXmlResourceHandler
 {
 public:
     wxRibbonXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     const wxClassInfo *m_isInside;
diff --git a/include/wx/xrc/xh_richtext.h b/include/wx/xrc/xh_richtext.h
index 69329c5..979d73d 100644
--- a/include/wx/xrc/xh_richtext.h
+++ b/include/wx/xrc/xh_richtext.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_RICHTEXT wxRichTextCtrlXmlHandler : public wxXmlResourceHandle
 
 public:
     wxRichTextCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_RICHTEXT
diff --git a/include/wx/xrc/xh_scrol.h b/include/wx/xrc/xh_scrol.h
index c2a5876..ffd366c 100644
--- a/include/wx/xrc/xh_scrol.h
+++ b/include/wx/xrc/xh_scrol.h
@@ -18,8 +18,8 @@ class WXDLLIMPEXP_XRC wxScrollBarXmlHandler : public wxXmlResourceHandler
 {
 public:
     wxScrollBarXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
     wxDECLARE_DYNAMIC_CLASS(wxScrollBarXmlHandler);
 };
diff --git a/include/wx/xrc/xh_scwin.h b/include/wx/xrc/xh_scwin.h
index 901faec..6d5d5fc 100644
--- a/include/wx/xrc/xh_scwin.h
+++ b/include/wx/xrc/xh_scwin.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxScrolledWindowXmlHandler : public wxXmlResourceHandler
 
 public:
     wxScrolledWindowXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC
diff --git a/include/wx/xrc/xh_sizer.h b/include/wx/xrc/xh_sizer.h
index ce77dde..648b22f 100644
--- a/include/wx/xrc/xh_sizer.h
+++ b/include/wx/xrc/xh_sizer.h
@@ -23,8 +23,8 @@ class WXDLLIMPEXP_XRC wxSizerXmlHandler : public wxXmlResourceHandler
 
 public:
     wxSizerXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 protected:
     virtual wxSizer* DoCreateSizer(const wxString& name);
@@ -69,8 +69,8 @@ class WXDLLIMPEXP_XRC wxStdDialogButtonSizerXmlHandler
 
 public:
     wxStdDialogButtonSizerXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_isInside;
diff --git a/include/wx/xrc/xh_slidr.h b/include/wx/xrc/xh_slidr.h
index 9026e73..267cb33 100644
--- a/include/wx/xrc/xh_slidr.h
+++ b/include/wx/xrc/xh_slidr.h
@@ -18,8 +18,8 @@ class WXDLLIMPEXP_XRC wxSliderXmlHandler : public wxXmlResourceHandler
 {
 public:
     wxSliderXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
     wxDECLARE_DYNAMIC_CLASS(wxSliderXmlHandler);
 };
diff --git a/include/wx/xrc/xh_spin.h b/include/wx/xrc/xh_spin.h
index a2d9cec..93762e0 100644
--- a/include/wx/xrc/xh_spin.h
+++ b/include/wx/xrc/xh_spin.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxSpinButtonXmlHandler : public wxXmlResourceHandler
 {
 public:
     wxSpinButtonXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
     wxDECLARE_DYNAMIC_CLASS(wxSpinButtonXmlHandler);
 };
@@ -35,8 +35,8 @@ class WXDLLIMPEXP_XRC wxSpinCtrlXmlHandler : public wxXmlResourceHandler
 {
 public:
     wxSpinCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
     wxDECLARE_DYNAMIC_CLASS(wxSpinCtrlXmlHandler);
 };
diff --git a/include/wx/xrc/xh_split.h b/include/wx/xrc/xh_split.h
index 5c366be..e182081 100644
--- a/include/wx/xrc/xh_split.h
+++ b/include/wx/xrc/xh_split.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxSplitterWindowXmlHandler : public wxXmlResourceHandler
 
 public:
     wxSplitterWindowXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_SPLITTER
diff --git a/include/wx/xrc/xh_srchctrl.h b/include/wx/xrc/xh_srchctrl.h
index 0e7cf8a..47c122f 100644
--- a/include/wx/xrc/xh_srchctrl.h
+++ b/include/wx/xrc/xh_srchctrl.h
@@ -19,8 +19,8 @@ class WXDLLIMPEXP_XRC wxSearchCtrlXmlHandler : public wxXmlResourceHandler
 public:
     wxSearchCtrlXmlHandler();
 
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
     wxDECLARE_DYNAMIC_CLASS(wxSearchCtrlXmlHandler);
 };
diff --git a/include/wx/xrc/xh_statbar.h b/include/wx/xrc/xh_statbar.h
index 68cd32c..d73bbdf 100644
--- a/include/wx/xrc/xh_statbar.h
+++ b/include/wx/xrc/xh_statbar.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxStatusBarXmlHandler : public wxXmlResourceHandler
 
 public:
     wxStatusBarXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_STATUSBAR
diff --git a/include/wx/xrc/xh_stbmp.h b/include/wx/xrc/xh_stbmp.h
index 0c3cee7..65c7559 100644
--- a/include/wx/xrc/xh_stbmp.h
+++ b/include/wx/xrc/xh_stbmp.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxStaticBitmapXmlHandler : public wxXmlResourceHandler
 
 public:
     wxStaticBitmapXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_STATBMP
diff --git a/include/wx/xrc/xh_stbox.h b/include/wx/xrc/xh_stbox.h
index 4460d0d..4a5704c 100644
--- a/include/wx/xrc/xh_stbox.h
+++ b/include/wx/xrc/xh_stbox.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxStaticBoxXmlHandler : public wxXmlResourceHandler
 
 public:
     wxStaticBoxXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_STATBOX
diff --git a/include/wx/xrc/xh_stlin.h b/include/wx/xrc/xh_stlin.h
index 539a2f1..808f9bb 100644
--- a/include/wx/xrc/xh_stlin.h
+++ b/include/wx/xrc/xh_stlin.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxStaticLineXmlHandler : public wxXmlResourceHandler
 
 public:
     wxStaticLineXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_STATLINE
diff --git a/include/wx/xrc/xh_sttxt.h b/include/wx/xrc/xh_sttxt.h
index 979d0fd..6f99e3a 100644
--- a/include/wx/xrc/xh_sttxt.h
+++ b/include/wx/xrc/xh_sttxt.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxStaticTextXmlHandler : public wxXmlResourceHandler
 
 public:
     wxStaticTextXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_STATTEXT
diff --git a/include/wx/xrc/xh_text.h b/include/wx/xrc/xh_text.h
index 7aafac1..a2e8488 100644
--- a/include/wx/xrc/xh_text.h
+++ b/include/wx/xrc/xh_text.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxTextCtrlXmlHandler : public wxXmlResourceHandler
 
 public:
     wxTextCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_TEXTCTRL
diff --git a/include/wx/xrc/xh_tglbtn.h b/include/wx/xrc/xh_tglbtn.h
index 60c4940..24ca1e8 100644
--- a/include/wx/xrc/xh_tglbtn.h
+++ b/include/wx/xrc/xh_tglbtn.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxToggleButtonXmlHandler : public wxXmlResourceHandler
 
 public:
     wxToggleButtonXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 protected:
     virtual void DoCreateToggleButton(wxObject *control);
diff --git a/include/wx/xrc/xh_timectrl.h b/include/wx/xrc/xh_timectrl.h
index d04b1bf..9124670 100644
--- a/include/wx/xrc/xh_timectrl.h
+++ b/include/wx/xrc/xh_timectrl.h
@@ -18,8 +18,8 @@ class WXDLLIMPEXP_XRC wxTimeCtrlXmlHandler : public wxXmlResourceHandler
 {
 public:
     wxTimeCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     wxDECLARE_DYNAMIC_CLASS(wxTimeCtrlXmlHandler);
diff --git a/include/wx/xrc/xh_toolb.h b/include/wx/xrc/xh_toolb.h
index cc5fd22..e3f3f14 100644
--- a/include/wx/xrc/xh_toolb.h
+++ b/include/wx/xrc/xh_toolb.h
@@ -22,8 +22,8 @@ class WXDLLIMPEXP_XRC wxToolBarXmlHandler : public wxXmlResourceHandler
 
 public:
     wxToolBarXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_isInside;
diff --git a/include/wx/xrc/xh_toolbk.h b/include/wx/xrc/xh_toolbk.h
index 16aa174..0d3516f 100644
--- a/include/wx/xrc/xh_toolbk.h
+++ b/include/wx/xrc/xh_toolbk.h
@@ -21,8 +21,8 @@ class WXDLLIMPEXP_XRC wxToolbookXmlHandler : public wxXmlResourceHandler
 public:
     wxToolbookXmlHandler();
 
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     bool m_isInside;
diff --git a/include/wx/xrc/xh_tree.h b/include/wx/xrc/xh_tree.h
index 7f6616b..01dd24f 100644
--- a/include/wx/xrc/xh_tree.h
+++ b/include/wx/xrc/xh_tree.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxTreeCtrlXmlHandler : public wxXmlResourceHandler
 
 public:
     wxTreeCtrlXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC && wxUSE_TREECTRL
diff --git a/include/wx/xrc/xh_treebk.h b/include/wx/xrc/xh_treebk.h
index 313b235..b75c921 100644
--- a/include/wx/xrc/xh_treebk.h
+++ b/include/wx/xrc/xh_treebk.h
@@ -34,8 +34,8 @@ class WXDLLIMPEXP_XRC wxTreebookXmlHandler : public wxXmlResourceHandler
 
 public:
     wxTreebookXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     wxTreebook *m_tbk;
diff --git a/include/wx/xrc/xh_unkwn.h b/include/wx/xrc/xh_unkwn.h
index 21cfd2a..b675767 100644
--- a/include/wx/xrc/xh_unkwn.h
+++ b/include/wx/xrc/xh_unkwn.h
@@ -20,8 +20,8 @@ class WXDLLIMPEXP_XRC wxUnknownWidgetXmlHandler : public wxXmlResourceHandler
 
 public:
     wxUnknownWidgetXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 };
 
 #endif // wxUSE_XRC
diff --git a/include/wx/xrc/xh_wizrd.h b/include/wx/xrc/xh_wizrd.h
index 7f9742f..0656df4 100644
--- a/include/wx/xrc/xh_wizrd.h
+++ b/include/wx/xrc/xh_wizrd.h
@@ -23,8 +23,8 @@ class WXDLLIMPEXP_XRC wxWizardXmlHandler : public wxXmlResourceHandler
 
 public:
     wxWizardXmlHandler();
-    virtual wxObject *DoCreateResource();
-    virtual bool CanHandle(wxXmlNode *node);
+    virtual wxObject *DoCreateResource() wxOVERRIDE;
+    virtual bool CanHandle(wxXmlNode *node) wxOVERRIDE;
 
 private:
     wxWizard *m_wizard;
diff --git a/src/generic/graphicc.cpp b/src/generic/graphicc.cpp
index a19ad92..391ef4d 100644
--- a/src/generic/graphicc.cpp
+++ b/src/generic/graphicc.cpp
@@ -2409,71 +2409,71 @@ public :
 
     // Context
 
-    virtual wxGraphicsContext * CreateContext( const wxWindowDC& dc);
-    virtual wxGraphicsContext * CreateContext( const wxMemoryDC& dc);
+    virtual wxGraphicsContext * CreateContext( const wxWindowDC& dc) wxOVERRIDE;
+    virtual wxGraphicsContext * CreateContext( const wxMemoryDC& dc) wxOVERRIDE;
 #if wxUSE_PRINTING_ARCHITECTURE
-    virtual wxGraphicsContext * CreateContext( const wxPrinterDC& dc);
+    virtual wxGraphicsContext * CreateContext( const wxPrinterDC& dc) wxOVERRIDE;
 #endif
 
-    virtual wxGraphicsContext * CreateContextFromNativeContext( void * context );
+    virtual wxGraphicsContext * CreateContextFromNativeContext( void * context ) wxOVERRIDE;
 
-    virtual wxGraphicsContext * CreateContextFromNativeWindow( void * window );
+    virtual wxGraphicsContext * CreateContextFromNativeWindow( void * window ) wxOVERRIDE;
 #if wxUSE_IMAGE
-    virtual wxGraphicsContext * CreateContextFromImage(wxImage& image);
+    virtual wxGraphicsContext * CreateContextFromImage(wxImage& image) wxOVERRIDE;
 #endif // wxUSE_IMAGE
 
-    virtual wxGraphicsContext * CreateContext( wxWindow* window );
+    virtual wxGraphicsContext * CreateContext( wxWindow* window ) wxOVERRIDE;
 
-    virtual wxGraphicsContext * CreateMeasuringContext();
+    virtual wxGraphicsContext * CreateMeasuringContext() wxOVERRIDE;
 #ifdef __WXMSW__
 #if wxUSE_ENH_METAFILE
-    virtual wxGraphicsContext * CreateContext( const wxEnhMetaFileDC& dc);
+    virtual wxGraphicsContext * CreateContext( const wxEnhMetaFileDC& dc) wxOVERRIDE;
 #endif
 #endif
     // Path
 
-    virtual wxGraphicsPath CreatePath();
+    virtual wxGraphicsPath CreatePath() wxOVERRIDE;
 
     // Matrix
 
     virtual wxGraphicsMatrix CreateMatrix( wxDouble a=1.0, wxDouble b=0.0, wxDouble c=0.0, wxDouble d=1.0,
-        wxDouble tx=0.0, wxDouble ty=0.0);
+        wxDouble tx=0.0, wxDouble ty=0.0) wxOVERRIDE;
 
 
-    virtual wxGraphicsPen CreatePen(const wxPen& pen) ;
+    virtual wxGraphicsPen CreatePen(const wxPen& pen) wxOVERRIDE;
 
-    virtual wxGraphicsBrush CreateBrush(const wxBrush& brush ) ;
+    virtual wxGraphicsBrush CreateBrush(const wxBrush& brush ) wxOVERRIDE;
 
     virtual wxGraphicsBrush
     CreateLinearGradientBrush(wxDouble x1, wxDouble y1,
                               wxDouble x2, wxDouble y2,
-                              const wxGraphicsGradientStops& stops);
+                              const wxGraphicsGradientStops& stops) wxOVERRIDE;
 
     virtual wxGraphicsBrush
     CreateRadialGradientBrush(wxDouble xo, wxDouble yo,
                               wxDouble xc, wxDouble yc,
                               wxDouble radius,
-                              const wxGraphicsGradientStops& stops);
+                              const wxGraphicsGradientStops& stops) wxOVERRIDE;
 
     // sets the font
-    virtual wxGraphicsFont CreateFont( const wxFont &font , const wxColour &col = *wxBLACK ) ;
+    virtual wxGraphicsFont CreateFont( const wxFont &font , const wxColour &col = *wxBLACK ) wxOVERRIDE;
     virtual wxGraphicsFont CreateFont(double sizeInPixels,
                                       const wxString& facename,
                                       int flags = wxFONTFLAG_DEFAULT,
-                                      const wxColour& col = *wxBLACK);
+                                      const wxColour& col = *wxBLACK) wxOVERRIDE;
 
     // create a native bitmap representation
-    virtual wxGraphicsBitmap CreateBitmap( const wxBitmap &bitmap );
+    virtual wxGraphicsBitmap CreateBitmap( const wxBitmap &bitmap ) wxOVERRIDE;
 #if wxUSE_IMAGE
-    virtual wxGraphicsBitmap CreateBitmapFromImage(const wxImage& image);
-    virtual wxImage CreateImageFromBitmap(const wxGraphicsBitmap& bmp);
+    virtual wxGraphicsBitmap CreateBitmapFromImage(const wxImage& image) wxOVERRIDE;
+    virtual wxImage CreateImageFromBitmap(const wxGraphicsBitmap& bmp) wxOVERRIDE;
 #endif // wxUSE_IMAGE
 
     // create a graphics bitmap from a native bitmap
-    virtual wxGraphicsBitmap CreateBitmapFromNativeBitmap( void* bitmap );
+    virtual wxGraphicsBitmap CreateBitmapFromNativeBitmap( void* bitmap ) wxOVERRIDE;
 
     // create a subimage from a native image representation
-    virtual wxGraphicsBitmap CreateSubBitmap( const wxGraphicsBitmap &bitmap, wxDouble x, wxDouble y, wxDouble w, wxDouble h  );
+    virtual wxGraphicsBitmap CreateSubBitmap( const wxGraphicsBitmap &bitmap, wxDouble x, wxDouble y, wxDouble w, wxDouble h  ) wxOVERRIDE;
 
     virtual wxString GetName() const wxOVERRIDE;
     virtual void GetVersion(int *major, int *minor, int *micro) const wxOVERRIDE;
diff --git a/src/generic/srchctlg.cpp b/src/generic/srchctlg.cpp
index 65f463c..f95ecd6 100644
--- a/src/generic/srchctlg.cpp
+++ b/src/generic/srchctlg.cpp
@@ -60,24 +60,24 @@ public:
         InvalidateBestSize();
     }
 
-    virtual wxWindow* GetMainWindowOfCompositeControl()
+    virtual wxWindow* GetMainWindowOfCompositeControl() wxOVERRIDE
     {
         return m_search;
     }
 
     // provide access to the base class protected methods to wxSearchCtrl which
     // needs to forward to them
-    void DoSetValue(const wxString& value, int flags)
+    void DoSetValue(const wxString& value, int flags) wxOVERRIDE
     {
         wxTextCtrl::DoSetValue(value, flags);
     }
 
-    bool DoLoadFile(const wxString& file, int fileType)
+    bool DoLoadFile(const wxString& file, int fileType) wxOVERRIDE
     {
         return wxTextCtrl::DoLoadFile(file, fileType);
     }
 
-    bool DoSaveFile(const wxString& file, int fileType)
+    bool DoSaveFile(const wxString& file, int fileType) wxOVERRIDE
     {
         return wxTextCtrl::DoSaveFile(file, fileType);
     }
@@ -120,7 +120,7 @@ protected:
     // to do this easily and as there is much in that code I don't understand
     // (notably what is the logic for buttons sizing?) I prefer to not touch it
     // at all.
-    virtual wxSize DoGetBestSize() const
+    virtual wxSize DoGetBestSize() const wxOVERRIDE
     {
         const long flags = GetWindowStyleFlag();
         wxSearchTextCtrl* const self = const_cast<wxSearchTextCtrl*>(this);
@@ -180,15 +180,15 @@ public:
     // control and not give it to the button inside the same control. Besides,
     // the search button can be already activated by pressing "Enter" so there
     // is really no reason for it to be able to get focus from keyboard.
-    virtual bool AcceptsFocusFromKeyboard() const { return false; }
+    virtual bool AcceptsFocusFromKeyboard() const wxOVERRIDE { return false; }
 
-    virtual wxWindow* GetMainWindowOfCompositeControl()
+    virtual wxWindow* GetMainWindowOfCompositeControl() wxOVERRIDE
     {
         return m_search;
     }
 
 protected:
-    wxSize DoGetBestSize() const
+    wxSize DoGetBestSize() const wxOVERRIDE
     {
         return wxSize(m_bmp.GetWidth(), m_bmp.GetHeight());
     }
diff --git a/src/unix/sound_sdl.cpp b/src/unix/sound_sdl.cpp
index 373174c..288f5f7 100644
--- a/src/unix/sound_sdl.cpp
+++ b/src/unix/sound_sdl.cpp
@@ -39,7 +39,7 @@ class wxSoundBackendSDLNotification : public wxEvent
 public:
     wxDECLARE_DYNAMIC_CLASS(wxSoundBackendSDLNotification);
     wxSoundBackendSDLNotification();
-    wxEvent *Clone() const { return new wxSoundBackendSDLNotification(*this); }
+    wxEvent *Clone() const wxOVERRIDE { return new wxSoundBackendSDLNotification(*this); }
 };
 
 typedef void (wxEvtHandler::*wxSoundBackendSDLNotificationFunction)
