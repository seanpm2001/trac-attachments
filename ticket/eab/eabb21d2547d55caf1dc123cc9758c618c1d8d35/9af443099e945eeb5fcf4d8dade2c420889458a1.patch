diff --git a/samples/combo/combo.cpp b/samples/combo/combo.cpp
index 0ec88af..a58537f 100644
--- a/samples/combo/combo.cpp
+++ b/samples/combo/combo.cpp
@@ -66,7 +66,7 @@ public:
 };
 
 // Define a new frame type: this is going to be our main frame
-class MyFrame : public wxFrame
+class MyFrame : public wxDialog
 {
 public:
     // ctor and dtor
@@ -122,7 +122,7 @@ enum
 // the event tables connect the wxWidgets events with the functions (event
 // handlers) which process them. It can be also done at run-time, but for the
 // simple menu events like this the static method is much simpler.
-wxBEGIN_EVENT_TABLE(MyFrame, wxFrame)
+wxBEGIN_EVENT_TABLE(MyFrame, wxDialog)
     EVT_TEXT(wxID_ANY,MyFrame::OnComboBoxUpdate)
     EVT_TEXT_ENTER(wxID_ANY,MyFrame::OnComboBoxUpdate)
     EVT_COMBOBOX(wxID_ANY,MyFrame::OnComboBoxUpdate)
@@ -160,12 +160,12 @@ bool MyApp::OnInit()
 
     // and show it (the frames, unlike simple controls, are not shown when
     // created initially)
-    frame->Show(true);
+    frame->ShowModal();
 
     // success: wxApp::OnRun() will be called which will enter the main message
     // loop and the application will run. If we returned false here, the
     // application would exit immediately.
-    return true;
+    return false;
 }
 
 
@@ -607,7 +607,7 @@ private:
 
 // frame constructor
 MyFrame::MyFrame(const wxString& title)
-       : wxFrame(NULL, wxID_ANY, title)
+       : wxDialog(NULL, wxID_ANY, title)
 {
     wxBoxSizer* topSizer;
     wxBoxSizer* topRowSizer;
@@ -617,7 +617,7 @@ MyFrame::MyFrame(const wxString& title)
     // set the frame icon
     SetIcon(wxICON(sample));
 
-#if wxUSE_MENUS
+/*#if wxUSE_MENUS
     // create a menu bar
     wxMenu *fileMenu = new wxMenu;
 
@@ -637,7 +637,7 @@ MyFrame::MyFrame(const wxString& title)
 
     // ... and attach this menu bar to the frame
     SetMenuBar(menuBar);
-#endif // wxUSE_MENUS
+#endif // wxUSE_MENUS*/
 
     wxPanel* panel = new wxPanel(this);
 
