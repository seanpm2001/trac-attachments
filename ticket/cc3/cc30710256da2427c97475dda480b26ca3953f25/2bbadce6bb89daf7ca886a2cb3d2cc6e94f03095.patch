 samples/minimal/minimal.cpp | 104 ++++++++++++++++++++++++++++++++++++++++++--
 1 file changed, 101 insertions(+), 3 deletions(-)

diff --git a/samples/minimal/minimal.cpp b/samples/minimal/minimal.cpp
index 076d88b..3b3e1e2 100644
--- a/samples/minimal/minimal.cpp
+++ b/samples/minimal/minimal.cpp
@@ -4,6 +4,7 @@
 // Author:      Julian Smart
 // Modified by:
 // Created:     04/01/98
+// RCS-ID:      $Id$
 // Copyright:   (c) Julian Smart
 // Licence:     wxWindows licence
 /////////////////////////////////////////////////////////////////////////////
@@ -28,6 +29,8 @@
 #ifndef WX_PRECOMP
     #include "wx/wx.h"
 #endif
+#include "wx/msw/dcclient.h"
+#include "wx/rawbmp.h"
 
 // ----------------------------------------------------------------------------
 // resources
@@ -40,6 +43,66 @@
 #endif
 
 // ----------------------------------------------------------------------------
+class TestPanel : public wxPanel
+{
+    typedef wxPanel   super;
+    typedef TestPanel self;
+public: 
+    TestPanel(wxWindow* parent)
+        : wxPanel(parent, wxID_ANY)
+    {
+        Connect(wxEVT_PAINT, wxPaintEventHandler(self::onPaint), 0, this);
+    }
+    void onPaint(wxPaintEvent&)
+    {
+        wxPaintDC dc(this);
+        dc.SetBackground(*wxGREEN);
+        dc.Clear();
+    }
+
+    wxBitmap printToBitmap(int bmp_depth = -1) 
+    {
+        wxBitmap bmp(GetClientSize(), bmp_depth);
+        wxMemoryDC mdc(bmp);
+        mdc.SetBackground(*wxRED);
+        mdc.Clear();
+        HDC hdc = mdc.GetHDC();
+        wxPaintDCEx pdcex(this, hdc);
+        ::SendMessage(GetHWND(), WM_PAINT, (WPARAM) hdc, 0);
+        return bmp;
+    }
+};
+
+// ----------------------------------------------------------------------------
+class TestResultPanel : public wxPanel
+{
+    typedef wxPanel   super;
+    typedef TestResultPanel self;
+public:
+    TestResultPanel(wxWindow* parent)
+        : wxPanel(parent, wxID_ANY)
+    {
+        Connect(wxEVT_PAINT, wxPaintEventHandler(self::onPaint), 0, this);
+    }
+    void onPaint(wxPaintEvent&)
+    {
+        wxPaintDC dc(this);
+        dc.SetBackground(*wxBLACK);
+        dc.Clear();
+        if (m_bmp.IsOk()) {
+            dc.DrawBitmap(m_bmp, 0, 0);
+        }
+    }
+    void setBitmap(wxBitmap const& bmp)
+    {
+        m_bmp = bmp;
+        Refresh();
+    }
+private:
+    wxBitmap m_bmp;
+};
+
+// ----------------------------------------------------------------------------
 // private classes
 // ----------------------------------------------------------------------------
 
@@ -53,7 +116,7 @@ public:
     // this one is called on application startup and is a good place for the app
     // initialization (doing it here and not in the ctor allows to have an error
     // return: if OnInit() returns false, the application terminates)
-    virtual bool OnInit() wxOVERRIDE;
+    virtual bool OnInit();
 };
 
 // Define a new frame type: this is going to be our main frame
@@ -66,10 +129,14 @@ public:
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    void TestPrint(wxCommandEvent&);
 
 private:
     // any class wishing to process wxWidgets events must use this macro
     wxDECLARE_EVENT_TABLE();
+
+    TestPanel* m_test_panel;
+    TestResultPanel* m_result_panel;
 };
 
 // ----------------------------------------------------------------------------
@@ -105,7 +172,7 @@ wxEND_EVENT_TABLE()
 // static object for many reasons) and also implements the accessor function
 // wxGetApp() which will return the reference of the right type (i.e. MyApp and
 // not wxApp)
-wxIMPLEMENT_APP(MyApp);
+IMPLEMENT_APP(MyApp)
 
 // ============================================================================
 // implementation
@@ -171,11 +238,42 @@ MyFrame::MyFrame(const wxString& title)
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
-}
 
+    wxPanel* container = new wxPanel(this);
+    wxBoxSizer* sizer = new wxBoxSizer(wxVERTICAL);
+    wxBoxSizer* hsizer = new wxBoxSizer(wxHORIZONTAL);
+    wxButton* test_button = new wxButton(container, wxID_ANY, wxT("Test wxPaintDCEx"));    
+    m_test_panel = new TestPanel(container);
+    m_result_panel = new TestResultPanel(container);
+    hsizer->Add(m_test_panel, 1, wxEXPAND, 0);
+    hsizer->Add(m_result_panel, 1, wxEXPAND, 0);
+    sizer->Add(hsizer, 1, wxEXPAND, 0);
+    sizer->Add(test_button, 0, wxEXPAND, 0);
+    container->SetSizer(sizer);
+    test_button->Connect(wxEVT_BUTTON, wxCommandEventHandler(MyFrame::TestPrint), 0, this);
+}
 
 // event handlers
 
+void MyFrame::TestPrint(wxCommandEvent&)
+{
+    wxBitmap bmp = m_test_panel->printToBitmap(24); // Will assert on failure due to broken wxPaintDCEx.
+    m_result_panel->setBitmap(bmp);
+
+    bool succeeded = false;
+    // Check that the print succeeded:
+    {
+        wxNativePixelData pix(bmp);
+        succeeded = 
+            (pix.GetPixels().Red() == 0x00) &&
+            (pix.GetPixels().Green() == 0xFF) &&
+            (pix.GetPixels().Blue() == 0x00);
+    }
+
+    wxMessageBox((succeeded) ? wxT("Succeded") : wxT("FAIL"));
+
+}
+
 void MyFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
 {
     // true is to force the frame to close
