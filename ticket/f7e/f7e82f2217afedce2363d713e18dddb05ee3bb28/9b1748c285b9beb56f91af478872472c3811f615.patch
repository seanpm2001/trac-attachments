--- colour.cpp.orig	Mon Sep 24 16:36:33 2001
+++ colour.cpp	Wed Sep 26 10:34:41 2001
@@ -30,4 +30,5 @@
 
     void FreeColour();
+    void AllocColour( GdkColormap* cmap );
 
 public:
@@ -37,4 +38,24 @@
 
     friend class wxColour;
+
+    // reference counter for systems with <= 8-Bit display
+    static gushort colMapAllocCounter[ 256 ];
+};
+
+gushort wxColourRefData::colMapAllocCounter[ 256 ] = 
+{  
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
+  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
 };
 
@@ -67,6 +88,8 @@
 #endif
         {
-            // What happens if the colour has not been allocated
-            // anew but has been found? RR.
+            int idx = m_color.pixel;
+            colMapAllocCounter[ idx ] = colMapAllocCounter[ idx ] - 1;
+        
+            if (colMapAllocCounter[ idx ] == 0)
             gdk_colormap_free_colors( m_colormap, &m_color, 1 );
         }
@@ -74,4 +97,31 @@
 }
 
+void wxColourRefData::AllocColour( GdkColormap *cmap )
+{
+    if (m_hasPixel && (m_colormap == cmap))
+        return;
+
+    FreeColour();
+    
+#ifdef __WXGTK20__
+    if ((m_colormap->visual->type == GDK_VISUAL_GRAYSCALE) ||
+	(m_colormap->visual->type == GDK_VISUAL_PSEUDO_COLOR))
+#else
+    GdkColormapPrivate *private_colormap = (GdkColormapPrivate*) cmap;
+    if ((private_colormap->visual->type == GDK_VISUAL_GRAYSCALE) ||
+        (private_colormap->visual->type == GDK_VISUAL_PSEUDO_COLOR))
+#endif
+    {
+        m_hasPixel = gdk_colormap_alloc_color( cmap, &m_color, FALSE, TRUE );
+        int idx = m_color.pixel;
+        colMapAllocCounter[ idx ] = colMapAllocCounter[ idx ] + 1;
+    }
+    else
+    {
+        m_hasPixel = gdk_color_alloc( cmap, &m_color );
+    }
+    m_colormap = cmap;
+}
+
 //-----------------------------------------------------------------------------
 
@@ -84,4 +134,5 @@
 wxColour::wxColour()
 {
+    m_refData = new wxColourRefData();
 }
 
@@ -201,25 +252,5 @@
     if (!Ok()) return;
 
-    if ((M_COLDATA->m_hasPixel) && (M_COLDATA->m_colormap == cmap)) return;
-
-    M_COLDATA->FreeColour();
-
-#ifdef __WXGTK20__
-    if ((cmap->visual->type == GDK_VISUAL_GRAYSCALE) ||
-        (cmap->visual->type == GDK_VISUAL_PSEUDO_COLOR))
-#else
-    GdkColormapPrivate *private_colormap = (GdkColormapPrivate*) cmap;
-    if ((private_colormap->visual->type == GDK_VISUAL_GRAYSCALE) ||
-        (private_colormap->visual->type == GDK_VISUAL_PSEUDO_COLOR))
-#endif
-    {
-        M_COLDATA->m_hasPixel = gdk_colormap_alloc_color( cmap, &M_COLDATA->m_color, FALSE, TRUE );
-    }
-    else
-    {
-        M_COLDATA->m_hasPixel = gdk_color_alloc( cmap, &M_COLDATA->m_color );
-    }
-
-    M_COLDATA->m_colormap = cmap;
+    M_COLDATA->AllocColour( cmap );
 }
 

 	  	 
