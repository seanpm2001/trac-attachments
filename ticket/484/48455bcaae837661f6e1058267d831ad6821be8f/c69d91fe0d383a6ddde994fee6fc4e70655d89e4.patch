diff -ru2 -N -xCVS -x.#* -x*.orig -x*.vcproj -x*.cmake -x*.sln -x*.suo -x*.rej -x*~ -x*.o -x*.obj -x*.a -x*.lib -x*setup.h -x*y*.c wxWidgets.orig/src/common/event.cpp wxWidgets/src/common/event.cpp
--- wxWidgets.orig/src/common/event.cpp	Mon Feb 28 16:13:16 2005
+++ wxWidgets/src/common/event.cpp	Mon Feb 28 16:16:10 2005
@@ -1136,15 +1136,16 @@
 #endif
 
-    // remember last event to process during this iteration
-    wxList::compatibility_iterator lastPendingNode = m_pendingEvents->GetLast();
-
-    wxList::compatibility_iterator node = m_pendingEvents->GetFirst();
-    while ( node )
-    {
-        wxEvent *event = (wxEvent *)node->GetData();
-        m_pendingEvents->Erase(node);
-
-        // In ProcessEvent, new events might get added and
-        // we can safely leave the crtical section here.
+    // remember last event to process during this iteration
+    const wxList::compatibility_iterator lastPendingNode = m_pendingEvents->GetLast();
+
+    for ( wxList::compatibility_iterator node = m_pendingEvents->GetFirst(); node; node = m_pendingEvents->GetFirst() )
+    {
+        wxEvent *event = (wxEvent *)node->GetData();
+
+        // Have to cache this because it is unsafe to equality compare node after erase.
+        const bool nodeIsLast = ( node == lastPendingNode );
+
+        m_pendingEvents->Erase(node);
+
 #if defined(__VISAGECPP__)
         wxLEAVE_CRIT_SECT( m_eventsLocker);
@@ -1159,14 +1160,11 @@
         wxENTER_CRIT_SECT( *m_eventsLocker);
 #endif
-
-        // leave the loop once we have processed all events that were present
-        // at the start of ProcessPendingEvents because otherwise we could get
-        // into infinite loop if the pending event handler execution resulted
-        // in another event being posted
-        if ( node == lastPendingNode )
-            break;
-
-        node = m_pendingEvents->GetFirst();
-    }
+        // leave the loop once we have processed all events that were present
+        // at the start of ProcessPendingEvents because otherwise we could get
+        // into infinite loop if the pending event handler execution resulted
+        // in another event being posted
+        if ( nodeIsLast )
+            break;
+    }
 
 #if defined(__VISAGECPP__)

 	  	 
