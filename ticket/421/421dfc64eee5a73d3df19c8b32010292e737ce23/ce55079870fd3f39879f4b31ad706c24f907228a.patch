Index: include/wx/aui/auibook.h
===================================================================
--- include/wx/aui/auibook.h	(revision 70004)
+++ include/wx/aui/auibook.h	(working copy)
@@ -32,15 +32,15 @@
 
 enum wxAuiNotebookOption
 {
-    wxAUI_NB_TOP                 = 1 << 0,
-    wxAUI_NB_LEFT                = 1 << 1,  // not implemented yet
-    wxAUI_NB_RIGHT               = 1 << 2,  // not implemented yet
-    wxAUI_NB_BOTTOM              = 1 << 3,
-    wxAUI_NB_TAB_SPLIT           = 1 << 4,
-    wxAUI_NB_TAB_MOVE            = 1 << 5,
-    wxAUI_NB_TAB_EXTERNAL_MOVE   = 1 << 6,
-    wxAUI_NB_TAB_FIXED_WIDTH     = 1 << 7,
-    wxAUI_NB_SCROLL_BUTTONS      = 1 << 8,
+    wxAUI_NB_TOP                 = wxBK_TOP,
+    wxAUI_NB_LEFT                = wxBK_LEFT,
+    wxAUI_NB_RIGHT               = wxBK_RIGHT,
+    wxAUI_NB_BOTTOM              = wxBK_BOTTOM,
+    wxAUI_NB_TAB_SPLIT           = 1 << 1,
+    wxAUI_NB_TAB_MOVE            = 1 << 4,
+    wxAUI_NB_TAB_EXTERNAL_MOVE   = 1 << 2,
+    wxAUI_NB_TAB_FIXED_WIDTH     = 1 << 8, //eq. wxNB_FIXEDWIDTH
+    wxAUI_NB_SCROLL_BUTTONS      = 1 << 3,
     wxAUI_NB_WINDOWLIST_BUTTON   = 1 << 9,
     wxAUI_NB_CLOSE_BUTTON        = 1 << 10,
     wxAUI_NB_CLOSE_ON_ACTIVE_TAB = 1 << 11,
@@ -248,6 +248,9 @@
                  const wxAuiNotebookPageArray& pages,
                  const wxSize& requiredBmpSize);
 
+    // returns true if we have wxBK_TOP or wxBK_BOTTOM style
+    bool IsVertical() const { return ( m_flags & ( wxBK_BOTTOM | wxBK_TOP ) ) != 0; }
+
 protected:
 
     wxFont m_normalFont;
@@ -336,6 +339,9 @@
                  const wxAuiNotebookPageArray& pages,
                  const wxSize& requiredBmpSize);
 
+    // returns true if we have wxBK_TOP or wxBK_BOTTOM style
+    bool IsVertical() const { return ( m_flags & ( wxBK_BOTTOM | wxBK_TOP ) ) != 0; }
+
 protected:
 
     wxFont m_normalFont;
@@ -419,6 +425,9 @@
     // Make the tab visible if it wasn't already
     void MakeTabVisible(int tabPage, wxWindow* win);
 
+    // returns true if we have wxBK_TOP or wxBK_BOTTOM style
+    bool IsVertical() const { return ( m_flags & ( wxBK_BOTTOM | wxBK_TOP ) ) != 0; }
+
 protected:
 
     virtual void Render(wxDC* dc, wxWindow* wnd);
Index: samples/aui/auidemo.cpp
===================================================================
--- samples/aui/auidemo.cpp	(revision 70004)
+++ samples/aui/auidemo.cpp	(working copy)
@@ -103,6 +103,8 @@
         ID_NotebookArtSimple,
         ID_NotebookAlignTop,
         ID_NotebookAlignBottom,
+        ID_NotebookAlignLeft,
+        ID_NotebookAlignRight,
 
         ID_SampleItem,
 
@@ -610,6 +612,8 @@
     EVT_MENU(ID_NotebookArtSimple, MyFrame::OnNotebookFlag)
     EVT_MENU(ID_NotebookAlignTop,     MyFrame::OnTabAlignment)
     EVT_MENU(ID_NotebookAlignBottom,  MyFrame::OnTabAlignment)
+    EVT_MENU(ID_NotebookAlignLeft,  MyFrame::OnTabAlignment)
+    EVT_MENU(ID_NotebookAlignRight,  MyFrame::OnTabAlignment)
     EVT_MENU(ID_NoGradient, MyFrame::OnGradient)
     EVT_MENU(ID_VerticalGradient, MyFrame::OnGradient)
     EVT_MENU(ID_HorizontalGradient, MyFrame::OnGradient)
@@ -728,6 +732,8 @@
     notebook_menu->AppendSeparator();
     notebook_menu->AppendRadioItem(ID_NotebookAlignTop, _("Tab Top Alignment"));
     notebook_menu->AppendRadioItem(ID_NotebookAlignBottom, _("Tab Bottom Alignment"));
+    notebook_menu->AppendRadioItem(ID_NotebookAlignLeft, _("Tab Left Alignment"));
+    notebook_menu->AppendRadioItem(ID_NotebookAlignRight, _("Tab Right Alignment"));
     notebook_menu->AppendSeparator();
     notebook_menu->AppendCheckItem(ID_NotebookAllowTabMove, _("Allow Tab Move"));
     notebook_menu->AppendCheckItem(ID_NotebookAllowTabExternalMove, _("Allow External Tab Move"));
@@ -1520,15 +1526,18 @@
         if (pane.window->IsKindOf(CLASSINFO(wxAuiNotebook)))
         {
             wxAuiNotebook* nb = (wxAuiNotebook*)pane.window;
+            m_notebook_style &= ~(wxAUI_NB_TOP | wxAUI_NB_BOTTOM | wxAUI_NB_LEFT | wxAUI_NB_RIGHT);
 
-            long style = nb->GetWindowStyleFlag();
-            style &= ~(wxAUI_NB_TOP | wxAUI_NB_BOTTOM);
             if (evt.GetId() == ID_NotebookAlignTop)
-                style |= wxAUI_NB_TOP;
+                m_notebook_style |= wxAUI_NB_TOP;
             else if (evt.GetId() == ID_NotebookAlignBottom)
-                style |= wxAUI_NB_BOTTOM;
-            nb->SetWindowStyleFlag(style);
+                m_notebook_style |= wxAUI_NB_BOTTOM;
+            else if (evt.GetId() == ID_NotebookAlignLeft)
+                m_notebook_style |= wxAUI_NB_LEFT;
+            else if (evt.GetId() == ID_NotebookAlignRight)
+                m_notebook_style |= wxAUI_NB_RIGHT;
 
+            nb->SetWindowStyleFlag(m_notebook_style);
             nb->Refresh();
         }
     }
Index: samples/notebook/notebook.cpp
===================================================================
--- samples/notebook/notebook.cpp	(revision 70004)
+++ samples/notebook/notebook.cpp	(working copy)
@@ -344,8 +344,10 @@
     menuOrient->AppendRadioItem(ID_ORIENT_RIGHT,   wxT("&Right\tAlt-4"));
 
     wxMenu *menuStyle = new wxMenu;
+#if (wxUSE_AUI || wxUSE_NOTEBOOK)
+    menuStyle->AppendCheckItem(ID_FIXEDWIDTH, wxT("&Fixed Width (wxNotebook or wxAuiNotebook)"));
+#endif
 #if wxUSE_NOTEBOOK
-    menuStyle->AppendCheckItem(ID_FIXEDWIDTH, wxT("&Fixed Width (wxNotebook)"));
     menuStyle->AppendCheckItem(ID_MULTI, wxT("&Multiple lines (wxNotebook)"));
     menuStyle->AppendCheckItem(ID_NOPAGETHEME, wxT("&No Page Theme (wxNotebook)"));
 #endif
@@ -532,9 +534,11 @@
             flags = wxBK_DEFAULT;
     }
 
+#if (wxUSE_AUI || wxUSE_NOTEBOOK)
+    if ( m_fixedWidth && ( m_type == Type_Notebook || m_type == Type_AuiNotebook ) )
+        flags |= wxNB_FIXEDWIDTH;
+#endif
 #if wxUSE_NOTEBOOK
-    if ( m_fixedWidth && m_type == Type_Notebook )
-        flags |= wxNB_FIXEDWIDTH;
     if ( m_multi && m_type == Type_Notebook )
         flags |= wxNB_MULTILINE;
     if ( m_noPageTheme && m_type == Type_Notebook )
Index: src/aui/auibook.cpp
===================================================================
--- src/aui/auibook.cpp	(revision 70004)
+++ src/aui/auibook.cpp	(working copy)
@@ -227,7 +227,7 @@
     m_activeWindowListBmp = wxAuiBitmapFromBits(list_bits, 16, 16, *wxBLACK);
     m_disabledWindowListBmp = wxAuiBitmapFromBits(list_bits, 16, 16, wxColour(128,128,128));
 
-    m_flags = 0;
+    m_flags = wxBK_TOP;
 }
 
 wxAuiDefaultTabArt::~wxAuiDefaultTabArt()
@@ -249,7 +249,11 @@
 {
     m_fixedTabWidth = 100;
 
-    int tot_width = (int)tab_ctrl_size.x - GetIndentSize() - 4;
+    int tot_width;
+    if (!IsVertical())
+        tot_width = (int)tab_ctrl_size.y - GetIndentSize() - 4;
+    else
+        tot_width = (int)tab_ctrl_size.x - GetIndentSize() - 4;
 
     if (m_flags & wxAUI_NB_CLOSE_BUTTON)
         tot_width -= m_activeCloseBmp.GetWidth();
@@ -271,7 +275,10 @@
     if (m_fixedTabWidth > 220)
         m_fixedTabWidth = 220;
 
-    m_tabCtrlHeight = tab_ctrl_size.y;
+    if (!IsVertical())
+        m_tabCtrlHeight = tab_ctrl_size.x;
+    else
+        m_tabCtrlHeight = tab_ctrl_size.y;
 }
 
 
@@ -284,15 +291,30 @@
     wxColor top_color       = m_baseColour.ChangeLightness(90);
     wxColor bottom_color   = m_baseColour.ChangeLightness(170);
     wxRect r;
+    wxDirection d;
 
-   if (m_flags &wxAUI_NB_BOTTOM)
+   if (m_flags & wxAUI_NB_BOTTOM)
+   {
        r = wxRect(rect.x, rect.y, rect.width+2, rect.height);
-   // TODO: else if (m_flags &wxAUI_NB_LEFT) {}
-   // TODO: else if (m_flags &wxAUI_NB_RIGHT) {}
+       d = wxSOUTH;
+   }
+   else if (m_flags & wxAUI_NB_LEFT)
+   {
+       r = wxRect(rect.x, rect.y, rect.width-3, rect.height+2);
+       d = wxEAST;
+   }
+   else if (m_flags & wxAUI_NB_RIGHT)
+   {
+       r = wxRect(rect.x, rect.y, rect.width, rect.height+2);
+       d = wxEAST;
+   }
    else //for wxAUI_NB_TOP
+   {
        r = wxRect(rect.x, rect.y, rect.width+2, rect.height-3);
+       d = wxSOUTH;
+   }
 
-    dc.GradientFillLinear(r, top_color, bottom_color, wxSOUTH);
+    dc.GradientFillLinear(r, top_color, bottom_color, d);
 
 
    // draw base lines
@@ -301,13 +323,21 @@
    int y = rect.GetHeight();
    int w = rect.GetWidth();
 
-   if (m_flags &wxAUI_NB_BOTTOM)
+   if (m_flags & wxAUI_NB_BOTTOM)
    {
        dc.SetBrush(wxBrush(bottom_color));
        dc.DrawRectangle(-1, 0, w+2, 4);
    }
-   // TODO: else if (m_flags &wxAUI_NB_LEFT) {}
-   // TODO: else if (m_flags &wxAUI_NB_RIGHT) {}
+   else if (m_flags & wxAUI_NB_LEFT)
+   {
+       dc.SetBrush(m_baseColourBrush);
+       dc.DrawRectangle(w-4, -1, 4, y+2);
+   }
+   else if (m_flags & wxAUI_NB_RIGHT)
+   {
+       dc.SetBrush(wxBrush(bottom_color));
+       dc.DrawRectangle(0, -1, 4, y+2);
+   }
    else //for wxAUI_NB_TOP
    {
        dc.SetBrush(m_baseColourBrush);
@@ -336,7 +366,7 @@
 {
     wxCoord normal_textx, normal_texty;
     wxCoord selected_textx, selected_texty;
-    wxCoord texty;
+    wxCoord textx, texty;
 
     // if the caption is empty, measure some temporary text
     wxString caption = page.caption;
@@ -349,6 +379,12 @@
     dc.SetFont(m_normalFont);
     dc.GetTextExtent(caption, &normal_textx, &normal_texty);
 
+    if (!IsVertical())
+    {
+        wxSwap(selected_textx, selected_texty);
+        wxSwap(normal_textx, normal_texty);
+    }
+
     // figure out the size of the tab
     wxSize tab_size = GetTabSize(dc,
                                  wnd,
@@ -358,36 +394,43 @@
                                  close_button_state,
                                  x_extent);
 
-    wxCoord tab_height = m_tabCtrlHeight - 3;
-    wxCoord tab_width = tab_size.x;
-    wxCoord tab_x = in_rect.x;
-    wxCoord tab_y = in_rect.y + in_rect.height - tab_height;
+    wxCoord tab_height, tab_width, tab_x, tab_y;
+    if (!IsVertical())
+    {
+        tab_height = tab_size.y;
+        tab_width = m_tabCtrlHeight - 3;
+        tab_x = in_rect.x + in_rect.width - tab_width;
+        tab_y = in_rect.y;
+    }
+    else //if (IsVertical())
+    {
+        tab_height = m_tabCtrlHeight - 3;
+        tab_width = tab_size.x;
+        tab_x = in_rect.x;
+        tab_y = in_rect.y + in_rect.height - tab_height;
+    }
 
-
     caption = page.caption;
 
-
     // select pen, brush and font for the tab to be drawn
 
     if (page.active)
     {
         dc.SetFont(m_selectedFont);
+        textx = selected_textx;
         texty = selected_texty;
     }
     else
     {
         dc.SetFont(m_normalFont);
+        textx = normal_textx;
         texty = normal_texty;
     }
 
 
     // create points that will make the tab outline
-
+/*
     int clip_width = tab_width;
-    if (tab_x + clip_width > in_rect.x + in_rect.width)
-        clip_width = (in_rect.x + in_rect.width) - tab_x;
-
-/*
     wxPoint clip_points[6];
     clip_points[0] = wxPoint(tab_x,              tab_y+tab_height-3);
     clip_points[1] = wxPoint(tab_x,              tab_y+2);
@@ -405,33 +448,82 @@
 */
     // since the above code above doesn't play well with WXDFB or WXCOCOA,
     // we'll just use a rectangle for the clipping region for now --
-    dc.SetClippingRegion(tab_x, tab_y, clip_width+1, tab_height-3);
 
 
+    int text_angle = 0;
+    int drawn_tab_height;
     wxPoint border_points[6];
-    if (m_flags &wxAUI_NB_BOTTOM)
+    if (m_flags & wxAUI_NB_BOTTOM)
     {
+        int clip_width = tab_width;
+        if (tab_x + clip_width > in_rect.x + in_rect.width)
+            clip_width = (in_rect.x + in_rect.width) - tab_x;
+        dc.SetClippingRegion(tab_x, tab_y, clip_width+1, tab_height-3);
+
         border_points[0] = wxPoint(tab_x,             tab_y);
         border_points[1] = wxPoint(tab_x,             tab_y+tab_height-6);
         border_points[2] = wxPoint(tab_x+2,           tab_y+tab_height-4);
         border_points[3] = wxPoint(tab_x+tab_width-2, tab_y+tab_height-4);
         border_points[4] = wxPoint(tab_x+tab_width,   tab_y+tab_height-6);
         border_points[5] = wxPoint(tab_x+tab_width,   tab_y);
+
+        drawn_tab_height = border_points[0].y - border_points[1].y;
     }
-    else //if (m_flags & wxAUI_NB_TOP) {}
+    else if (m_flags & wxAUI_NB_LEFT)
     {
+        int clip_height = tab_height;
+        if (tab_y + tab_height > in_rect.y + in_rect.height)
+            clip_height = (in_rect.y + in_rect.height) - tab_y;
+        dc.SetClippingRegion(tab_x, tab_y, tab_width-3, clip_height+1);
+
+        text_angle = 90;
+
+        border_points[0] = wxPoint(tab_x+tab_width-4,tab_y+tab_height);
+        border_points[1] = wxPoint(tab_x+2,          tab_y+tab_height);
+        border_points[2] = wxPoint(tab_x,            tab_y+tab_height-2);
+        border_points[3] = wxPoint(tab_x,            tab_y+2);
+        border_points[4] = wxPoint(tab_x+2,          tab_y);
+        border_points[5] = wxPoint(tab_x+tab_width-4,tab_y);
+
+        drawn_tab_height = border_points[0].x - border_points[1].x;
+    }
+    else if (m_flags & wxAUI_NB_RIGHT)
+    {
+        int clip_height = tab_height;
+        if (tab_y + tab_height > in_rect.y + in_rect.height)
+            clip_height = (in_rect.y + in_rect.height) - tab_y;
+        dc.SetClippingRegion(tab_x, tab_y, tab_width-3, clip_height+1);
+
+        text_angle = 270;
+
+        border_points[0] = wxPoint(tab_x,            tab_y);
+        border_points[1] = wxPoint(tab_x+tab_width-6,tab_y);
+        border_points[2] = wxPoint(tab_x+tab_width-4,tab_y+2);
+        border_points[3] = wxPoint(tab_x+tab_width-4,tab_y+tab_height-2);
+        border_points[4] = wxPoint(tab_x+tab_width-6,tab_y+tab_height);
+        border_points[5] = wxPoint(tab_x,            tab_y+tab_height);
+
+        drawn_tab_height = border_points[1].x - border_points[0].x;
+    }
+    else //if (m_flags & wxAUI_NB_TOP)
+    {
+        int clip_width = tab_width;
+        if (tab_x + clip_width > in_rect.x + in_rect.width)
+            clip_width = (in_rect.x + in_rect.width) - tab_x;
+        dc.SetClippingRegion(tab_x, tab_y, clip_width+1, tab_height-3);
+
         border_points[0] = wxPoint(tab_x,             tab_y+tab_height-4);
         border_points[1] = wxPoint(tab_x,             tab_y+2);
         border_points[2] = wxPoint(tab_x+2,           tab_y);
         border_points[3] = wxPoint(tab_x+tab_width-2, tab_y);
         border_points[4] = wxPoint(tab_x+tab_width,   tab_y+2);
         border_points[5] = wxPoint(tab_x+tab_width,   tab_y+tab_height-4);
+
+        drawn_tab_height = border_points[0].y - border_points[1].y;
     }
-    // TODO: else if (m_flags &wxAUI_NB_LEFT) {}
-    // TODO: else if (m_flags &wxAUI_NB_RIGHT) {}
 
     int drawn_tab_yoff = border_points[1].y;
-    int drawn_tab_height = border_points[0].y - border_points[1].y;
+    int drawn_tab_xoff = border_points[1].x;
 
 
     if (page.active)
@@ -442,57 +534,118 @@
         wxRect r(tab_x, tab_y, tab_width, tab_height);
         dc.SetPen(wxPen(m_activeColour));
         dc.SetBrush(wxBrush(m_activeColour));
-        dc.DrawRectangle(r.x+1, r.y+1, r.width-1, r.height-4);
+        if (!IsVertical())
+            dc.DrawRectangle(r.x+1, r.y+1, r.width-4, r.height-1);
+        else
+            dc.DrawRectangle(r.x+1, r.y+1, r.width-1, r.height-4);
 
         // this white helps fill out the gradient at the top of the tab
         dc.SetPen(*wxWHITE_PEN);
         dc.SetBrush(*wxWHITE_BRUSH);
-        dc.DrawRectangle(r.x+2, r.y+1, r.width-3, r.height-4);
+        if (!IsVertical())
+            dc.DrawRectangle(r.x+1, r.y+2, r.width-4, r.height-3);
+        else
+            dc.DrawRectangle(r.x+2, r.y+1, r.width-3, r.height-4);
 
         // these two points help the rounded corners appear more antialiased
         dc.SetPen(wxPen(m_activeColour));
-        dc.DrawPoint(r.x+2, r.y+1);
-        dc.DrawPoint(r.x+r.width-2, r.y+1);
+        if (m_flags & wxAUI_NB_LEFT)
+        {
+            dc.DrawPoint(r.x+1, r.y+2);
+            dc.DrawPoint(r.x+1, r.y+r.height-2);
+        }
+        else if (m_flags & wxAUI_NB_RIGHT)
+        {
+            dc.DrawPoint(r.x+r.width-1, r.y+2);
+            dc.DrawPoint(r.x+r.width+1, r.y+r.height-2);
+        }
+        else
+        {
+            dc.DrawPoint(r.x+2, r.y+1);
+            dc.DrawPoint(r.x+r.width-2, r.y+1);
+        }
 
         // set rectangle down a bit for gradient drawing
-        r.SetHeight(r.GetHeight()/2);
-        r.x += 2;
-        r.width -= 3;
-        r.y += r.height;
-        r.y -= 2;
+        if (!IsVertical())
+        {
+            r.SetWidth(r.GetWidth()/2);
+            r.y += 2;
+            r.height -= 3;
+            r.x += r.width;
+            r.x -= 1;
+        }
+        else
+        {
+            r.SetHeight(r.GetHeight()/2);
+            r.x += 2;
+            r.width -= 3;
+            r.y += r.height;
+            r.y -= 2;
+        }
 
         // draw gradient background
         wxColor top_color = *wxWHITE;
         wxColor bottom_color = m_activeColour;
-        dc.GradientFillLinear(r, bottom_color, top_color, wxNORTH);
+        if (!IsVertical())
+            dc.GradientFillLinear(r, bottom_color, top_color, wxWEST);
+        else
+            dc.GradientFillLinear(r, bottom_color, top_color, wxNORTH);
     }
     else
     {
         // draw inactive tab
 
-        wxRect r(tab_x, tab_y+1, tab_width, tab_height-3);
+        wxRect r;
+        if (!IsVertical())
+            r = wxRect(tab_x+1, tab_y, tab_width-3, tab_height);
+        else
+            r = wxRect(tab_x, tab_y+1, tab_width, tab_height-3);
 
         // start the gradent up a bit and leave the inside border inset
         // by a pixel for a 3D look.  Only the top half of the inactive
         // tab will have a slight gradient
-        r.x += 3;
-        r.y++;
-        r.width -= 4;
-        r.height /= 2;
-        r.height--;
+        if (!IsVertical())
+        {
+            r.y += 3;
+            r.x++;
+            r.height -= 4;
+            r.width /= 2;
+            r.width--;
+        }
+        else
+        {
+            r.x += 3;
+            r.y++;
+            r.width -= 4;
+            r.height /= 2;
+            r.height--;
+        }
 
         // -- draw top gradient fill for glossy look
         wxColor top_color = m_baseColour;
         wxColor bottom_color = top_color.ChangeLightness(160);
-        dc.GradientFillLinear(r, bottom_color, top_color, wxNORTH);
+        if (!IsVertical())
+        {
+            dc.GradientFillLinear(r, top_color, bottom_color, wxEAST);
 
-        r.y += r.height;
-        r.y--;
+            r.x += r.width;
+            r.x--;
+        }
+        else
+        {
+            dc.GradientFillLinear(r, bottom_color, top_color, wxNORTH);
 
+            r.y += r.height;
+            r.y--;
+        }
+
         // -- draw bottom fill for glossy look
         top_color = m_baseColour;
         bottom_color = m_baseColour;
-        dc.GradientFillLinear(r, top_color, bottom_color, wxSOUTH);
+        if (!IsVertical())
+            dc.GradientFillLinear(r, top_color, bottom_color, wxWEST);
+        else
+            dc.GradientFillLinear(r, top_color, bottom_color, wxSOUTH);
     }
 
     // draw tab outline
@@ -504,20 +657,33 @@
     // this gets rid of the top one of those lines in the tab control
     if (page.active)
     {
-        if (m_flags &wxAUI_NB_BOTTOM)
+        if (m_flags & wxAUI_NB_BOTTOM || m_flags & wxAUI_NB_RIGHT)
             dc.SetPen(wxPen(m_baseColour.ChangeLightness(170)));
-        // TODO: else if (m_flags &wxAUI_NB_LEFT) {}
-        // TODO: else if (m_flags &wxAUI_NB_RIGHT) {}
-        else //for wxAUI_NB_TOP
+        else //for wxAUI_NB_TOP & wxAUI_NB_LEFT
             dc.SetPen(m_baseColourPen);
-        dc.DrawLine(border_points[0].x+1,
-                    border_points[0].y,
-                    border_points[5].x,
-                    border_points[5].y);
+
+        if (!IsVertical())
+        {
+            dc.DrawLine(border_points[0].x,
+                        border_points[0].y+1,
+                        border_points[5].x,
+                        border_points[5].y);
+        }
+        else
+        {
+            dc.DrawLine(border_points[0].x+1,
+                        border_points[0].y,
+                        border_points[5].x,
+                        border_points[5].y);
+        }
     }
 
+    int text_offset;
+    if (!IsVertical())
+        text_offset = tab_y + 8;
+    else
+        text_offset = tab_x + 8;
 
-    int text_offset = tab_x + 8;
     int close_button_width = 0;
     if (close_button_state != wxAUI_BUTTON_STATE_HIDDEN)
     {
@@ -527,45 +693,161 @@
     int bitmap_offset = 0;
     if (page.bitmap.IsOk())
     {
-        bitmap_offset = tab_x + 8;
+        if (m_flags & wxAUI_NB_LEFT)
+        {
+            bitmap_offset = tab_y + tab_height - page.bitmap.GetWidth() - 7;
 
-        // draw bitmap
-        dc.DrawBitmap(page.bitmap,
-                      bitmap_offset,
-                      drawn_tab_yoff + (drawn_tab_height/2) - (page.bitmap.GetHeight()/2),
-                      true);
+            // draw bitmap
+            dc.DrawBitmap(page.bitmap.ConvertToImage().Rotate90(false),
+                          drawn_tab_xoff + (drawn_tab_height/2) - (page.bitmap.GetHeight()/2),
+                          bitmap_offset,
+                          true);
 
-        text_offset = bitmap_offset + page.bitmap.GetWidth();
-        text_offset += 3; // bitmap padding
+            text_offset = bitmap_offset;
+            text_offset -= 3; // bitmap padding
+        }
+        else if (m_flags & wxAUI_NB_RIGHT)
+        {
+            bitmap_offset = tab_y + 8;
 
+            // draw bitmap
+            dc.DrawBitmap(page.bitmap.ConvertToImage().Rotate90(true),
+                          drawn_tab_xoff - (drawn_tab_height/2) - (page.bitmap.GetHeight()/2) + 1,
+                          bitmap_offset,
+                          true);
+
+            text_offset = bitmap_offset + page.bitmap.GetWidth();
+            text_offset += 3;
+        }
+        else //if (IsVertical())
+        {
+            bitmap_offset = tab_x + 8;
+            int margin = (m_flags & wxAUI_NB_BOTTOM ? 1 : 0);
+
+            // draw bitmap
+            dc.DrawBitmap(page.bitmap,
+                          bitmap_offset,
+                          drawn_tab_yoff + (drawn_tab_height/2) - (page.bitmap.GetHeight()/2) + margin,
+                          true);
+
+            text_offset = bitmap_offset + page.bitmap.GetWidth();
+            text_offset += 3;
+        }
     }
     else
     {
-        text_offset = tab_x + 8;
+        if (m_flags & wxAUI_NB_LEFT)
+            text_offset = tab_y + tab_height - 8;
+        else if (m_flags & wxAUI_NB_RIGHT)
+            text_offset = tab_y + 8;
+        else
+            text_offset = tab_x + 8;
     }
 
 
-    wxString draw_text = wxAuiChopText(dc,
-                          caption,
-                          tab_width - (text_offset-tab_x) - close_button_width);
+    wxString draw_text;
+    if (m_flags & wxAUI_NB_LEFT)
+    {
+        draw_text = wxAuiChopText(dc,
+                                  caption,
+                                  tab_height - (tab_y+tab_height-text_offset)- close_button_width);
+    }
+    else if (m_flags & wxAUI_NB_RIGHT)
+    {
+        draw_text = wxAuiChopText(dc,
+                                  caption,
+                                  tab_height - (text_offset-tab_y) - close_button_width);
+    }
+    else
+    {
+        draw_text = wxAuiChopText(dc,
+                                  caption,
+                                  tab_width - (text_offset-tab_x) - close_button_width);
+    }
 
     // draw tab text
-    dc.DrawText(draw_text,
-                text_offset,
-                drawn_tab_yoff + (drawn_tab_height)/2 - (texty/2) - 1);
+    if (m_flags & wxAUI_NB_LEFT)
+    {
+        dc.DrawRotatedText(draw_text,
+                           drawn_tab_xoff + (drawn_tab_height/2) - (textx/2) - 1,
+                           text_offset,
+                           text_angle);
+    }
+    else if (m_flags & wxAUI_NB_RIGHT)
+    {
+        dc.DrawRotatedText(draw_text,
+                           drawn_tab_xoff - (drawn_tab_height/2) + (textx/2) + 3,
+                           text_offset,
+                           text_angle);
+    }
+    else if (m_flags & wxAUI_NB_BOTTOM)
+    {
+        dc.DrawRotatedText(draw_text,
+                           text_offset,
+                           drawn_tab_yoff + (drawn_tab_height/2) - (texty/2),
+                           text_angle);
+    }
+    else //if (m_flags & wxAUI_NB_TOP)
+    {
+        dc.DrawRotatedText(draw_text,
+                           text_offset,
+                           drawn_tab_yoff + (drawn_tab_height/2) - (texty/2) - 1,
+                           text_angle);
+    }
 
     // draw focus rectangle
     if (page.active && (wnd->FindFocus() == wnd))
     {
-        wxRect focusRectText(text_offset, (drawn_tab_yoff + (drawn_tab_height)/2 - (texty/2) - 1),
-            selected_textx, selected_texty);
+        wxRect focusRectText;
+        if (m_flags & wxAUI_NB_LEFT)
+        {
+            focusRectText = wxRect((drawn_tab_xoff + (drawn_tab_height/2) - (textx/2) - 1),
+                                   text_offset - selected_texty - 1,
+                                   selected_textx,
+                                   selected_texty);
+        }
+        else if (m_flags & wxAUI_NB_RIGHT)
+        {
+            focusRectText = wxRect((drawn_tab_xoff - (drawn_tab_height/2) - (textx/2) - 1),
+                                   text_offset + 1,
+                                   selected_textx,
+                                   selected_texty);
+        }
+        else
+        {
+            focusRectText = wxRect(text_offset,
+                                   (drawn_tab_yoff + (drawn_tab_height/2) - (texty/2) - 1),
+                                   selected_textx,
+                                   selected_texty);
+        }
 
         wxRect focusRect;
         wxRect focusRectBitmap;
 
         if (page.bitmap.IsOk())
-            focusRectBitmap = wxRect(bitmap_offset, drawn_tab_yoff + (drawn_tab_height/2) - (page.bitmap.GetHeight()/2),
-                                            page.bitmap.GetWidth(), page.bitmap.GetHeight());
+        {
+            if (m_flags & wxAUI_NB_LEFT)
+            {
+                focusRectBitmap = wxRect(drawn_tab_xoff + (drawn_tab_height/2) - (page.bitmap.GetHeight()/2),
+                                         bitmap_offset,
+                                         page.bitmap.GetWidth(),
+                                         page.bitmap.GetHeight());
+            }
+            else if (m_flags & wxAUI_NB_RIGHT)
+            {
+                focusRectBitmap = wxRect(drawn_tab_xoff - (drawn_tab_height/2) - (page.bitmap.GetHeight()/2) + 1,
+                                         bitmap_offset,
+                                         page.bitmap.GetWidth(),
+                                         page.bitmap.GetHeight());
+            }
+            else
+            {
+                focusRectBitmap = wxRect(bitmap_offset,
+                                         drawn_tab_yoff + (drawn_tab_height/2) - (page.bitmap.GetHeight()/2),
+                                         page.bitmap.GetWidth(),
+                                         page.bitmap.GetHeight());
+            }
+        }
 
         if (page.bitmap.IsOk() && draw_text.IsEmpty())
             focusRect = focusRectBitmap;
@@ -590,16 +872,41 @@
             bmp = m_activeCloseBmp;
         }
 
-        int offsetY = tab_y-1;
-        if (m_flags & wxAUI_NB_BOTTOM)
-            offsetY = 1;
+        wxRect rect;
+        if (m_flags & wxAUI_NB_LEFT)
+        {
+            bmp = wxBitmap(bmp.ConvertToImage().Rotate90(false));
 
-        wxRect rect(tab_x + tab_width - close_button_width - 1,
-                    offsetY + (tab_height/2) - (bmp.GetHeight()/2),
-                    close_button_width,
-                    tab_height);
+            int offsetX = tab_x-1;
+            rect = wxRect(offsetX + (tab_width/2) - (bmp.GetHeight()/2),
+                          tab_y + 2,
+                          tab_width,
+                          close_button_width);
+        }
+        else if (m_flags & wxAUI_NB_RIGHT)
+        {
+            bmp = wxBitmap(bmp.ConvertToImage().Rotate90(true));
 
+            int offsetX = tab_x-1;
+            rect = wxRect(offsetX + (tab_width/2) - (bmp.GetHeight()/2),
+                          tab_y + tab_height - close_button_width - 1,
+                          tab_width,
+                          close_button_width);
+        }
+        else
+        {
+            int offsetY = tab_y-1;
+            if (m_flags & wxAUI_NB_BOTTOM)
+                offsetY = 1;
+
+            rect = wxRect(tab_x + tab_width - close_button_width - 1,
+                          offsetY + (tab_height/2) - (bmp.GetHeight()/2),
+                          close_button_width,
+                          tab_height);
+        }
+
         IndentPressedBitmap(&rect, close_button_state);
+
         dc.DrawBitmap(bmp, rect.x, rect.y, true);
 
         *out_button_rect = rect;
@@ -657,6 +964,9 @@
 
     *x_extent = tab_width;
 
+    if (!IsVertical())
+        return wxSize(tab_height, tab_width);
+
     return wxSize(tab_width, tab_height);
 }
 
@@ -700,24 +1010,37 @@
             break;
     }
 
-
     if (!bmp.IsOk())
         return;
 
+    if (m_flags & wxAUI_NB_LEFT)
+        bmp = wxBitmap(bmp.ConvertToImage().Rotate90(bitmap_id == wxAUI_BUTTON_LEFT || bitmap_id == wxAUI_BUTTON_RIGHT));
+    else if (m_flags & wxAUI_NB_RIGHT)
+        bmp = wxBitmap(bmp.ConvertToImage().Rotate90(true));
+
     rect = in_rect;
 
-    if (orientation == wxLEFT)
+    if (!IsVertical())
     {
-        rect.SetX(in_rect.x);
-        rect.SetY(((in_rect.y + in_rect.height)/2) - (bmp.GetHeight()/2));
+        rect.SetX(((in_rect.x + in_rect.width)/2) - (bmp.GetHeight()/2));
         rect.SetWidth(bmp.GetWidth());
         rect.SetHeight(bmp.GetHeight());
+
+        if (orientation == wxLEFT)
+            rect.SetY(in_rect.y+1);
+        else
+            rect.SetY(in_rect.y + in_rect.height - bmp.GetWidth());
     }
     else
     {
-        rect = wxRect(in_rect.x + in_rect.width - bmp.GetWidth(),
-                      ((in_rect.y + in_rect.height)/2) - (bmp.GetHeight()/2),
-                      bmp.GetWidth(), bmp.GetHeight());
+        rect.SetY(((in_rect.y + in_rect.height)/2) - (bmp.GetHeight()/2));
+        rect.SetWidth(bmp.GetWidth());
+        rect.SetHeight(bmp.GetHeight());
+
+        if (orientation == wxLEFT)
+            rect.SetX(in_rect.x+1);
+        else
+            rect.SetX(in_rect.x + in_rect.width - bmp.GetWidth());
     }
 
     IndentPressedBitmap(&rect, button_state);
@@ -855,7 +1178,7 @@
     m_selectedFont.SetWeight(wxBOLD);
     m_measuringFont = m_selectedFont;
 
-    m_flags = 0;
+    m_flags = wxBK_TOP;
     m_fixedTabWidth = 100;
 
     wxColour baseColour = wxSystemSettings::GetColour(wxSYS_COLOUR_3DFACE);
@@ -903,7 +1226,11 @@
 {
     m_fixedTabWidth = 100;
 
-    int tot_width = (int)tab_ctrl_size.x - GetIndentSize() - 4;
+    int tot_width;
+    if (!IsVertical())
+        tot_width = (int)tab_ctrl_size.y - GetIndentSize() - 4;
+    else
+        tot_width = (int)tab_ctrl_size.x - GetIndentSize() - 4;
 
     if (m_flags & wxAUI_NB_CLOSE_BUTTON)
         tot_width -= m_activeCloseBmp.GetWidth();
@@ -950,7 +1277,14 @@
 
     // draw base line
     dc.SetPen(*wxGREY_PEN);
-    dc.DrawLine(0, rect.GetHeight()-1, rect.GetWidth(), rect.GetHeight()-1);
+    if (m_flags & wxAUI_NB_LEFT)
+        dc.DrawLine(rect.GetWidth()-1, 0, rect.GetWidth()-1, rect.GetHeight());
+    else if (m_flags & wxAUI_NB_RIGHT)
+        dc.DrawLine(0, 0, 0, rect.GetHeight());
+    else if (m_flags & m_flags & wxAUI_NB_BOTTOM)
+        dc.DrawLine(0, 0, rect.GetWidth(), 0);
+    else //if (m_flags & wxAUI_NB_TOP)
+        dc.DrawLine(0, rect.GetHeight()-1, rect.GetWidth(), rect.GetHeight()-1);
 }
 
 
@@ -987,6 +1321,12 @@
     dc.SetFont(m_normalFont);
     dc.GetTextExtent(caption, &normal_textx, &normal_texty);
 
+    if (!IsVertical())
+    {
+        wxSwap(selected_textx, selected_texty);
+        wxSwap(normal_textx, normal_texty);
+    }
+
     // figure out the size of the tab
     wxSize tab_size = GetTabSize(dc,
                                  wnd,
@@ -996,10 +1336,35 @@
                                  close_button_state,
                                  x_extent);
 
-    wxCoord tab_height = tab_size.y;
-    wxCoord tab_width = tab_size.x;
-    wxCoord tab_x = in_rect.x;
-    wxCoord tab_y = in_rect.y + in_rect.height - tab_height;
+    wxCoord tab_height, tab_width, tab_x, tab_y;
+    if (m_flags & wxAUI_NB_RIGHT)
+    {
+        tab_height = tab_size.y;
+        tab_width = tab_size.x;
+        tab_x = in_rect.x - 1;
+        tab_y = in_rect.y;
+    }
+    else if (m_flags & wxAUI_NB_LEFT)
+    {
+        tab_height = tab_size.y;
+        tab_width = tab_size.x;
+        tab_x = in_rect.x + in_rect.width - tab_width;
+        tab_y = in_rect.y;
+    }
+    else if (m_flags & wxAUI_NB_BOTTOM)
+    {
+        tab_height = tab_size.y;
+        tab_width = tab_size.x;
+        tab_x = in_rect.x;
+        tab_y = in_rect.y - 1;
+    }
+    else //if (m_flags & wxAUI_NB_TOP)
+    {
+        tab_height = tab_size.y;
+        tab_width = tab_size.x;
+        tab_x = in_rect.x;
+        tab_y = in_rect.y + in_rect.height - tab_height;
+    }
 
     caption = page.caption;
 
@@ -1024,22 +1389,53 @@
 
 
     // -- draw line --
-
+    int text_angle = 0;
     wxPoint points[7];
-    points[0].x = tab_x;
-    points[0].y = tab_y + tab_height - 1;
-    points[1].x = tab_x + tab_height - 3;
-    points[1].y = tab_y + 2;
-    points[2].x = tab_x + tab_height + 3;
-    points[2].y = tab_y;
-    points[3].x = tab_x + tab_width - 2;
-    points[3].y = tab_y;
-    points[4].x = tab_x + tab_width;
-    points[4].y = tab_y + 2;
-    points[5].x = tab_x + tab_width;
-    points[5].y = tab_y + tab_height - 1;
-    points[6] = points[0];
+    if (m_flags & wxAUI_NB_BOTTOM)
+    {
+        points[0] = wxPoint(tab_x,                  tab_y + 1);
+        points[1] = wxPoint(tab_x + tab_height - 3, tab_y + tab_height - 2);
+        points[2] = wxPoint(tab_x + tab_height + 3, tab_y + tab_height);
+        points[3] = wxPoint(tab_x + tab_width - 2,  tab_y + tab_height);
+        points[4] = wxPoint(tab_x + tab_width,      tab_y + tab_height - 2);
+        points[5] = wxPoint(tab_x + tab_width,      tab_y + 1);
+        points[6] = points[0];
+    }
+    else if (m_flags & wxAUI_NB_LEFT)
+    {
+        text_angle = 90;
 
+        points[0] = wxPoint(tab_x + tab_width - 1,  tab_y + tab_height);
+        points[1] = wxPoint(tab_x + 2,              tab_y + tab_height - tab_width + 3);
+        points[2] = wxPoint(tab_x,                  tab_y + tab_height - tab_width - 3);
+        points[3] = wxPoint(tab_x,                  tab_y + 2);
+        points[4] = wxPoint(tab_x + 2,              tab_y);
+        points[5] = wxPoint(tab_x + tab_width - 1,  tab_y);
+        points[6] = points[0];
+    }
+    else if (m_flags & wxAUI_NB_RIGHT)
+    {
+        text_angle = 270;
+
+        points[0] = wxPoint(tab_x + 1,              tab_y);
+        points[1] = wxPoint(tab_x + tab_width - 2,  tab_y + tab_width - 3);
+        points[2] = wxPoint(tab_x + tab_width,      tab_y + tab_width + 3);
+        points[3] = wxPoint(tab_x + tab_width,      tab_y + tab_height - 2);
+        points[4] = wxPoint(tab_x + tab_width - 2,  tab_y + tab_height);
+        points[5] = wxPoint(tab_x + 1,              tab_y + tab_height);
+        points[6] = points[0];
+    }
+    else //if (m_flags & wxAUI_NB_TOP)
+    {
+        points[0] = wxPoint(tab_x,                  tab_y + tab_height - 1);
+        points[1] = wxPoint(tab_x + tab_height - 3, tab_y + 2);
+        points[2] = wxPoint(tab_x + tab_height + 3, tab_y);
+        points[3] = wxPoint(tab_x + tab_width - 2,  tab_y);
+        points[4] = wxPoint(tab_x + tab_width,      tab_y + 2);
+        points[5] = wxPoint(tab_x + tab_width,      tab_y + tab_height - 1);
+        points[6] = points[0];
+    }
+
     dc.SetClippingRegion(in_rect);
 
     dc.DrawPolygon(WXSIZEOF(points) - 1, points);
@@ -1056,33 +1452,108 @@
     if (close_button_state != wxAUI_BUTTON_STATE_HIDDEN)
     {
         close_button_width = m_activeCloseBmp.GetWidth();
-        text_offset = tab_x + (tab_height/2) + ((tab_width-close_button_width)/2) - (textx/2);
+        if (m_flags & wxAUI_NB_LEFT)
+            text_offset = (tab_y + tab_height) - (tab_width/2) - ((tab_height-close_button_width)/2) + (texty/2);
+        else if (m_flags & wxAUI_NB_RIGHT)
+            text_offset = tab_y + (tab_width/2) + ((tab_height-close_button_width)/2) - (texty/2);
+        else
+            text_offset = tab_x + (tab_height/2) + ((tab_width-close_button_width)/2) - (textx/2);
     }
     else
     {
-        text_offset = tab_x + (tab_height/3) + (tab_width/2) - (textx/2);
+        if (m_flags & wxAUI_NB_LEFT)
+            text_offset = (tab_y + tab_height) - (tab_width/3) - (tab_height/2) + (texty/2);
+        else if (m_flags & wxAUI_NB_RIGHT)
+            text_offset = tab_y + (tab_width/3) + (tab_height/2) - (texty/2);
+        else
+            text_offset = tab_x + (tab_height/3) + (tab_width/2) - (textx/2);
     }
 
     // set minimum text offset
-    if (text_offset < tab_x + tab_height)
+    if (m_flags & wxAUI_NB_LEFT && (text_offset > tab_y + tab_height - tab_width))
+        text_offset = tab_y + tab_height - tab_width;
+    else if (m_flags & wxAUI_NB_RIGHT && (text_offset < tab_y + tab_width))
+        text_offset = tab_y + tab_width;
+    else if (IsVertical() && text_offset < tab_x + tab_height)
         text_offset = tab_x + tab_height;
 
     // chop text if necessary
-    wxString draw_text = wxAuiChopText(dc,
-                          caption,
-                          tab_width - (text_offset-tab_x) - close_button_width);
+    wxString draw_text;
+    if (m_flags & wxAUI_NB_LEFT)
+    {
+        draw_text = wxAuiChopText(dc,
+                                  caption,
+                                  tab_height - (tab_y+tab_height-text_offset)- close_button_width);
+    }
+    else if (m_flags & wxAUI_NB_RIGHT)
+    {
+        draw_text = wxAuiChopText(dc,
+                                  caption,
+                                  tab_height - (text_offset-tab_y) - close_button_width);
+    }
+    else
+    {
+        draw_text = wxAuiChopText(dc,
+                                  caption,
+                                  tab_width - (text_offset-tab_x) - close_button_width);
+    }
 
     // draw tab text
-    dc.DrawText(draw_text,
-                 text_offset,
-                 (tab_y + tab_height)/2 - (texty/2) + 1);
+    if (m_flags & wxAUI_NB_LEFT)
+    {
+        dc.DrawRotatedText(draw_text,
+                           (tab_x + tab_width)/2 - (textx/2),
+                           text_offset,
+                           text_angle);
+    }
+    else if (m_flags & wxAUI_NB_RIGHT)
+    {
+        dc.DrawRotatedText(draw_text,
+                           (tab_x + tab_width)/2 - (textx/2) + textx + 1,
+                           text_offset,
+                           text_angle);
+    }
+    else if (m_flags & wxAUI_NB_BOTTOM)
+    {
+        dc.DrawRotatedText(draw_text,
+                           text_offset,
+                           (tab_y + tab_height)/2 - (texty/2),
+                           text_angle);
+    }
+    else //if (m_flags & wxAUI_NB_TOP)
+    {
+        dc.DrawRotatedText(draw_text,
+                           text_offset,
+                           (tab_y + tab_height)/2 - (texty/2) + 1,
+                           text_angle);
+    }
 
 
     // draw focus rectangle
     if (page.active && (wnd->FindFocus() == wnd))
     {
-        wxRect focusRect(text_offset, ((tab_y + tab_height)/2 - (texty/2) + 1),
-            selected_textx, selected_texty);
+        wxRect focusRect;
+        if (m_flags & wxAUI_NB_LEFT)
+        {
+            focusRect = wxRect(((tab_x + tab_width)/2 - (textx/2)),
+                               text_offset - selected_texty - 1,
+                               selected_textx,
+                               selected_texty);
+        }
+        else if (m_flags & wxAUI_NB_RIGHT)
+        {
+            focusRect = wxRect(((tab_x + tab_width)/2 - (textx/2)),
+                               text_offset,
+                               selected_textx,
+                               selected_texty + 1);
+        }
+        else
+        {
+            focusRect = wxRect(text_offset,
+                               ((tab_y + tab_height)/2 - (texty/2) + 1),
+                               selected_textx,
+                               selected_texty);
+        }
 
         focusRect.Inflate(2, 2);
 
@@ -1098,10 +1569,33 @@
         else
             bmp = m_disabledCloseBmp;
 
-        wxRect rect(tab_x + tab_width - close_button_width - 1,
-                    tab_y + (tab_height/2) - (bmp.GetHeight()/2) + 1,
-                    close_button_width,
-                    tab_height - 1);
+        wxRect rect;
+        if (m_flags & wxAUI_NB_LEFT)
+        {
+            bmp = wxBitmap(bmp.ConvertToImage().Rotate90(false));
+
+            rect = wxRect(tab_x + (tab_width/2) - (bmp.GetHeight()/2) + 1,
+                          tab_y + 1,
+                          close_button_width,
+                          tab_width - 1);
+        }
+        else if (m_flags & wxAUI_NB_RIGHT)
+        {
+            bmp = wxBitmap(bmp.ConvertToImage().Rotate90(true));
+
+            rect = wxRect(tab_x + (tab_width/2) - (bmp.GetHeight()/2) + 1,
+                          tab_y + tab_height - close_button_width - 1,
+                          close_button_width,
+                          tab_width - 1);
+        }
+        else
+        {
+            rect = wxRect(tab_x + tab_width - close_button_width - 1,
+                          tab_y + (tab_height/2) - (bmp.GetHeight()/2) + 1,
+                          close_button_width,
+                          tab_height - 1);
+        }
+
         DrawButtons(dc, rect, bmp, *wxWHITE, close_button_state);
 
         *out_button_rect = rect;
@@ -1144,6 +1638,9 @@
 
     *x_extent = tab_width - (tab_height/2) - 1;
 
+    if (!IsVertical())
+        return wxSize(tab_height, tab_width);
+
     return wxSize(tab_width, tab_height);
 }
 
@@ -1190,20 +1687,34 @@
     if (!bmp.IsOk())
         return;
 
+    if (m_flags & wxAUI_NB_LEFT)
+        bmp = wxBitmap(bmp.ConvertToImage().Rotate90(bitmap_id == wxAUI_BUTTON_LEFT || bitmap_id == wxAUI_BUTTON_RIGHT));
+    else if (m_flags & wxAUI_NB_RIGHT)
+        bmp = wxBitmap(bmp.ConvertToImage().Rotate90(true));
+
     rect = in_rect;
 
-    if (orientation == wxLEFT)
+    if (!IsVertical())
     {
-        rect.SetX(in_rect.x);
-        rect.SetY(((in_rect.y + in_rect.height)/2) - (bmp.GetHeight()/2));
+        rect.SetX(((in_rect.x + in_rect.width)/2) - (bmp.GetHeight()/2));
         rect.SetWidth(bmp.GetWidth());
         rect.SetHeight(bmp.GetHeight());
+
+        if (orientation == wxLEFT)
+            rect.SetY(in_rect.y+1);
+        else
+            rect.SetY(in_rect.y + in_rect.height - bmp.GetWidth());
     }
     else
     {
-        rect = wxRect(in_rect.x + in_rect.width - bmp.GetWidth(),
-                      ((in_rect.y + in_rect.height)/2) - (bmp.GetHeight()/2),
-                      bmp.GetWidth(), bmp.GetHeight());
+        rect.SetY(((in_rect.y + in_rect.height)/2) - (bmp.GetHeight()/2));
+        rect.SetWidth(bmp.GetWidth());
+        rect.SetHeight(bmp.GetHeight());
+
+        if (orientation == wxLEFT)
+            rect.SetX(in_rect.x+1);
+        else
+            rect.SetX(in_rect.x + in_rect.width - bmp.GetWidth());
     }
 
 
@@ -1307,7 +1818,7 @@
 wxAuiTabContainer::wxAuiTabContainer()
 {
     m_tabOffset = 0;
-    m_flags = 0;
+    m_flags = wxBK_TOP;
     m_art = new wxAuiDefaultTabArt;
 
     AddButton(wxAUI_BUTTON_LEFT, wxLEFT);
@@ -1690,6 +2201,8 @@
 
         if (i+1 < page_count)
             total_width += x_extent;
+        else if (!IsVertical())
+            total_width += size.y;
         else
             total_width += size.x;
 
@@ -1697,12 +2210,14 @@
         {
             if (i+1 < page_count)
                 visible_width += x_extent;
+            else if (!IsVertical())
+                visible_width += size.y;
             else
                 visible_width += size.x;
         }
     }
 
-    if (total_width > m_rect.GetWidth() || m_tabOffset != 0)
+    if ((total_width > (!IsVertical() ? m_rect.GetHeight() : m_rect.GetWidth())) || m_tabOffset != 0)
     {
         // show left/right buttons
         for (i = 0; i < button_count; ++i)
@@ -1761,30 +2276,49 @@
     int offset = 0;
 
     // draw the buttons on the right side
-    offset = m_rect.x + m_rect.width;
+    if (!IsVertical())
+        offset = m_rect.y + m_rect.height;
+    else
+        offset = m_rect.x + m_rect.width;
     for (i = 0; i < button_count; ++i)
     {
         wxAuiTabContainerButton& button = m_buttons.Item(button_count - i - 1);
 
-        if (button.location != wxRIGHT)
+        if (button.location != wxRIGHT && button.location != wxDOWN)
             continue;
         if (button.curState & wxAUI_BUTTON_STATE_HIDDEN)
             continue;
 
         wxRect button_rect = m_rect;
-        button_rect.SetY(1);
-        button_rect.SetWidth(offset);
+        if (!IsVertical())
+        {
+            button_rect.SetX(1);
+            button_rect.SetHeight(offset);
+        }
+        else
+        {
+            button_rect.SetY(1);
+            button_rect.SetWidth(offset);
+        }
 
         m_art->DrawButton(dc,
                           wnd,
                           button_rect,
                           button.id,
                           button.curState,
-                          wxRIGHT,
+                          button.location,
                           &button.rect);
 
-        offset -= button.rect.GetWidth();
-        right_buttons_width += button.rect.GetWidth();
+        if (!IsVertical())
+        {
+            offset -= button.rect.GetHeight();
+            right_buttons_width += button.rect.GetHeight();
+        }
+        else
+        {
+            offset -= button.rect.GetWidth();
+            right_buttons_width += button.rect.GetWidth();
+        }
     }
 
 
@@ -1802,18 +2336,30 @@
         if (button.curState & wxAUI_BUTTON_STATE_HIDDEN)
             continue;
 
-        wxRect button_rect(offset, 1, 1000, m_rect.height);
+        wxRect button_rect;
+        if (!IsVertical())
+            button_rect = wxRect(1, offset, m_rect.width, 1000);
+        else
+            button_rect = wxRect(offset, 1, 1000, m_rect.height);
 
         m_art->DrawButton(dc,
                           wnd,
                           button_rect,
                           button.id,
                           button.curState,
-                          wxLEFT,
+                          button.location,
                           &button.rect);
 
-        offset += button.rect.GetWidth();
-        left_buttons_width += button.rect.GetWidth();
+        if (!IsVertical())
+        {
+            offset += button.rect.GetHeight();
+            left_buttons_width += button.rect.GetHeight();
+        }
+        else
+        {
+            offset += button.rect.GetWidth();
+            left_buttons_width += button.rect.GetWidth();
+        }
     }
 
     offset = left_buttons_width;
@@ -1854,7 +2400,10 @@
     int x_extent = 0;
     wxRect rect = m_rect;
     rect.y = 0;
-    rect.height = m_rect.height;
+    if (!IsVertical())
+        rect.width = m_rect.width;
+    else
+        rect.height = m_rect.height;
 
     for (i = m_tabOffset; i < page_count; ++i)
     {
@@ -1877,12 +2426,23 @@
             tab_button.curState = wxAUI_BUTTON_STATE_HIDDEN;
         }
 
-        rect.x = offset;
-        rect.width = m_rect.width - right_buttons_width - offset - 2;
+        if (!IsVertical())
+        {
+            rect.y = offset;
+            rect.height = m_rect.height - right_buttons_width - offset - 2;
 
-        if (rect.width <= 0)
-            break;
+            if (rect.height <= 0)
+                break;
+        }
+        else //if (IsVertical())
+        {
+            rect.x = offset;
+            rect.width = m_rect.width - right_buttons_width - offset - 2;
 
+            if (rect.width <= 0)
+                break;
+        }
+
         m_art->DrawTab(dc,
                        wnd,
                        page,
@@ -1917,7 +2477,10 @@
 
         wxAuiTabContainerButton& tab_button = m_tabCloseButtons.Item(active);
 
-        rect.x = active_offset;
+        if (!IsVertical())
+            rect.y = active_offset;
+        else
+            rect.x = active_offset;
         m_art->DrawTab(dc,
                        wnd,
                        page,
@@ -1977,7 +2540,10 @@
     int offset = 0;
 
     // calculate size of the buttons on the right side
-    offset = m_rect.x + m_rect.width;
+    if (!IsVertical())
+        offset = m_rect.y + m_rect.height;
+    else
+        offset = m_rect.x + m_rect.width;
     for (i = 0; i < button_count; ++i)
     {
         wxAuiTabContainerButton& button = m_buttons.Item(button_count - i - 1);
@@ -2016,17 +2582,31 @@
 
     wxRect rect = m_rect;
     rect.y = 0;
-    rect.height = m_rect.height;
+    if (!IsVertical())
+        rect.width = m_rect.width;
+    else
+        rect.height = m_rect.height;
 
     // See if the given page is visible at the given tab offset (effectively scroll position)
     for (i = tabOffset; i < page_count; ++i)
     {
-        rect.x = offset;
-        rect.width = m_rect.width - right_buttons_width - offset - 2;
+        if (!IsVertical())
+        {
+            rect.y = offset;
+            rect.height = m_rect.height - right_buttons_width - offset - 2;
 
-        if (rect.width <= 0)
-            return false; // haven't found the tab, and we've run out of space, so return false
+            if (rect.height <= 0)
+                return false; // haven't found the tab, and we've run out of space, so return false
+        }
+        else
+        {
+            rect.x = offset;
+            rect.width = m_rect.width - right_buttons_width - offset - 2;
 
+            if (rect.width <= 0)
+                return false; // haven't found the tab, and we've run out of space, so return false
+        }
+
         int x_extent = 0;
         offset += x_extent;
 
@@ -2034,10 +2614,20 @@
         {
             // If not all of the tab is visible, and supposing there's space to display it all,
             // we could do better so we return false.
-            if (((m_rect.width - right_buttons_width - offset - 2) <= 0) && ((m_rect.width - right_buttons_width - left_buttons_width) > x_extent))
-                return false;
+            if (!IsVertical())
+            {
+                if (((m_rect.height - right_buttons_width - offset - 2) <= 0) && ((m_rect.height - right_buttons_width - left_buttons_width) > x_extent))
+                    return false;
+                else
+                    return true;
+            }
             else
-                return true;
+            {
+                if (((m_rect.width - right_buttons_width - offset - 2) <= 0) && ((m_rect.width - right_buttons_width - left_buttons_width) > x_extent))
+                    return false;
+                else
+                    return true;
+            }
         }
     }
 
@@ -2732,16 +3322,26 @@
         {
             m_tab_rect = wxRect (m_rect.x, m_rect.y + m_rect.height - m_tabCtrlHeight, m_rect.width, m_tabCtrlHeight);
             m_tabs->SetSize     (m_rect.x, m_rect.y + m_rect.height - m_tabCtrlHeight, m_rect.width, m_tabCtrlHeight);
-            m_tabs->SetRect     (wxRect(0, 0, m_rect.width, m_tabCtrlHeight));
+            m_tabs->SetRect     (wxRect(0,                                          0, m_rect.width, m_tabCtrlHeight));
         }
-        else //TODO: if (GetFlags() & wxAUI_NB_TOP)
+        else if (m_tabs->GetFlags() & wxAUI_NB_LEFT)
         {
+            m_tab_rect = wxRect (m_rect.x, m_rect.y, m_tabCtrlHeight, m_rect.height);
+            m_tabs->SetSize     (m_rect.x, m_rect.y, m_tabCtrlHeight, m_rect.height);
+            m_tabs->SetRect     (wxRect(0,        0, m_tabCtrlHeight, m_rect.height));
+        }
+        else if (m_tabs->GetFlags() & wxAUI_NB_RIGHT)
+        {
+            m_tab_rect = wxRect (m_rect.x + m_rect.width - m_tabCtrlHeight, m_rect.y, m_tabCtrlHeight, m_rect.height);
+            m_tabs->SetSize     (m_rect.x + m_rect.width - m_tabCtrlHeight, m_rect.y, m_tabCtrlHeight, m_rect.height);
+            m_tabs->SetRect     (wxRect(0,                               0, m_tabCtrlHeight,           m_rect.height));
+        }
+        else //if (GetFlags() & wxAUI_NB_TOP)
+        {
             m_tab_rect = wxRect (m_rect.x, m_rect.y, m_rect.width, m_tabCtrlHeight);
             m_tabs->SetSize     (m_rect.x, m_rect.y, m_rect.width, m_tabCtrlHeight);
             m_tabs->SetRect     (wxRect(0, 0,        m_rect.width, m_tabCtrlHeight));
         }
-        // TODO: else if (GetFlags() & wxAUI_NB_LEFT){}
-        // TODO: else if (GetFlags() & wxAUI_NB_RIGHT){}
 
         m_tabs->Refresh();
         m_tabs->Update();
@@ -2751,26 +3351,43 @@
 
         for (i = 0; i < page_count; ++i)
         {
-            int height = m_rect.height - m_tabCtrlHeight;
-            if ( height < 0 )
+            int height, width;
+            if (m_tabs->GetFlags() & wxAUI_NB_LEFT || m_tabs->GetFlags() & wxAUI_NB_RIGHT)
             {
-                // avoid passing negative height to wxWindow::SetSize(), this
-                // results in assert failures/GTK+ warnings
-                height = 0;
+                width = m_rect.width - m_tabCtrlHeight;
+                height = m_rect.height;
+                if ( width < 0 )
+                    width = 0;
             }
+            else
+            {
+                width = m_rect.width;
+                height = m_rect.height - m_tabCtrlHeight;
+                if ( height < 0 )
+                {
+                    // avoid passing negative height to wxWindow::SetSize(), this
+                    // results in assert failures/GTK+ warnings
+                    height = 0;
+                }
+            }
 
             wxAuiNotebookPage& page = pages.Item(i);
             if (m_tabs->GetFlags() & wxAUI_NB_BOTTOM)
             {
-                page.window->SetSize(m_rect.x, m_rect.y, m_rect.width, height);
+                page.window->SetSize(m_rect.x, m_rect.y, width, height);
             }
-            else //TODO: if (GetFlags() & wxAUI_NB_TOP)
+            else if (m_tabs->GetFlags() & wxAUI_NB_LEFT)
             {
-                page.window->SetSize(m_rect.x, m_rect.y + m_tabCtrlHeight,
-                                     m_rect.width, height);
+                page.window->SetSize(m_rect.x + m_tabCtrlHeight, m_rect.y, width, height);
             }
-            // TODO: else if (GetFlags() & wxAUI_NB_LEFT){}
-            // TODO: else if (GetFlags() & wxAUI_NB_RIGHT){}
+            else if (m_tabs->GetFlags() & wxAUI_NB_RIGHT)
+            {
+                page.window->SetSize(m_rect.x, m_rect.y, width, height);
+            }
+            else //if (GetFlags() & wxAUI_NB_TOP)
+            {
+                page.window->SetSize(m_rect.x, m_rect.y + m_tabCtrlHeight, width, height);
+            }
 
 #if wxUSE_MDI
             if (page.window->IsKindOf(CLASSINFO(wxAuiMDIChildFrame)))
@@ -2883,6 +3500,10 @@
     m_curPage = -1;
     m_tabIdCounter = wxAuiBaseTabCtrlId;
     m_dummyWnd = NULL;
+
+    if ( (style & wxBK_ALIGN_MASK) == wxBK_DEFAULT )
+        style |= wxBK_TOP;
+
     m_flags = (unsigned int)style;
     m_tabCtrlHeight = 20;
 
@@ -3086,6 +3707,9 @@
 {
     wxControl::SetWindowStyleFlag(style);
 
+    if ( (style & wxBK_ALIGN_MASK) == wxBK_DEFAULT )
+    style |= wxBK_TOP;
+
     m_flags = (unsigned int)style;
 
     // if the control is already initialized
