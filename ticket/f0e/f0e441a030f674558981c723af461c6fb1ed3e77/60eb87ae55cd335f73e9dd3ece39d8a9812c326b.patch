diff --git a/src/propgrid/propgrid.cpp b/src/propgrid/propgrid.cpp
index 4a1e92e..6e0339f 100644
--- a/src/propgrid/propgrid.cpp
+++ b/src/propgrid/propgrid.cpp
@@ -562,7 +562,7 @@ wxPropertyGrid::~wxPropertyGrid()
     if ( m_processedEvent )
     {
         // We are inside event handler and we cannot delete
-        // editor objects immediatelly. They have to be deleted
+        // editor objects immediately. They have to be deleted
         // later on in the global idle handler.
 #if WXWIN_COMPATIBILITY_3_0
         // Emulate member variable.
@@ -777,7 +777,7 @@ bool wxPropertyGrid::DoSelectAndEdit( wxPGProperty* prop,
     //     ever changed to any other than m_colSelBack.
     //
     // We use this workaround to prevent visible flicker when editing
-    // a cell. Atleast on wxMSW, there is a difficult to find
+    // a cell. At least on wxMSW, there is a difficult to find
     // (and perhaps prevent) redraw somewhere between making property
     // selected and enabling label editing.
     //
@@ -4297,7 +4297,7 @@ bool wxPropertyGrid::DoSelectProperty( wxPGProperty* p, unsigned int flags )
                     SetupChildEventHandling(m_wndEditor2);
 
                     // If no primary editor, focus to button to allow
-                    // it to interprete ENTER etc.
+                    // it to interpret ENTER etc.
                     // NOTE: Due to problems focusing away from it, this
                     //       has been disabled.
                     /*
@@ -4679,7 +4679,7 @@ void wxPropertyGrid::OnResize( wxSizeEvent& event )
         if ( m_pState->m_itemsAdded )
             PrepareAfterItemsAdded();
         else
-            // Without this, virtual size (atleast under wxGTK) will be skewed
+            // Without this, virtual size (at least under wxGTK) will be skewed
             RecalculateVirtualSize();
 
         Refresh();
diff --git a/src/propgrid/props.cpp b/src/propgrid/props.cpp
index e006f14..5d842f4 100644
--- a/src/propgrid/props.cpp
+++ b/src/propgrid/props.cpp
@@ -269,7 +269,7 @@ bool wxIntProperty::StringToValue( wxVariant& variant, const wxString& text, int
     // the return value.
     if ( text.IsNumber() )
     {
-        // Remove leading zeroes, so that the number is not interpreted as octal
+        // Remove leading zeros, so that the number is not interpreted as octal
         wxString::const_iterator i = text.begin();
         wxString::const_iterator iMax = text.end() - 1;  // Let's allow one, last zero though
 
@@ -818,7 +818,7 @@ const wxString& wxPropertyGrid::DoubleToString(wxString& target,
 
     if ( removeZeroes && precision != 0 && !target.empty() )
     {
-        // Remove excess zeroes (do not remove this code just yet,
+        // Remove excess zeros (do not remove this code just yet,
         // since sprintf can't do the same consistently across platforms).
         wxString::const_iterator i = target.end() - 1;
         size_t new_len = target.length() - 1;
@@ -1653,7 +1653,7 @@ bool wxFlagsProperty::StringToValue( wxVariant& variant, const wxString& text, i
 
     long newFlags = 0;
 
-    // semicolons are no longer valid delimeters
+    // semicolons are no longer valid delimiters
     WX_PG_TOKENIZER1_BEGIN(text,wxS(','))
 
         if ( !token.empty() )
@@ -2662,7 +2662,7 @@ wxString wxArrayStringProperty::ValueToString( wxVariant& WXUNUSED(value),
     return s;
 }
 
-// Converts wxArrayString to a string separated by delimeters and spaces.
+// Converts wxArrayString to a string separated by delimiters and spaces.
 // preDelim is useful for "str1" "str2" style. Set flags to 1 to do slash
 // conversion.
 void
