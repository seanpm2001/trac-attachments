Index: include/wx/chartype.h
===================================================================
--- include/wx/chartype.h	(revision 74780)
+++ include/wx/chartype.h	(working copy)
@@ -90,7 +90,7 @@
 /* -------------------------------------------------------------------------- */
 
 /* VC++ and BC++ starting with 5.2 have TCHAR support */
-#ifdef __VISUALC__
+#if defined(__VISUALC__) || (defined(__WINDOWS__) && defined(__INTELC__))
     #define wxHAVE_TCHAR_SUPPORT
 #elif defined(__BORLANDC__) && (__BORLANDC__ >= 0x520)
     #define wxHAVE_TCHAR_SUPPORT
Index: include/wx/compiler.h
===================================================================
--- include/wx/compiler.h	(revision 74780)
+++ include/wx/compiler.h	(working copy)
@@ -16,15 +16,9 @@
     Compiler detection and related helpers.
  */
 
-/*
-    Notice that Intel compiler can be used as Microsoft Visual C++ add-on and
-    so we should define both __INTELC__ and __VISUALC__ for it.
- */
 #ifdef __INTEL_COMPILER
 #   define __INTELC__
-#endif
-
-#if defined(_MSC_VER)
+#elif defined(_MSC_VER)
     /*
        define another standard symbol for Microsoft Visual C++: the standard
        one (_MSC_VER) is also defined by some other compilers.
Index: include/wx/filefn.h
===================================================================
--- include/wx/filefn.h	(revision 74780)
+++ include/wx/filefn.h	(working copy)
@@ -92,7 +92,7 @@
     #endif
 #endif
 
-#if defined(__VISUALC__) && !defined(__WXWINCE__)
+#if (defined(__VISUALC__) && !defined(__WXWINCE__)) || (defined(__WINDOWS__) && defined (__INTELC__))
     typedef _off_t off_t;
 #elif defined(__SYMANTEC__)
     typedef long off_t;
@@ -187,7 +187,7 @@
     #define   wxStructStat struct _stat
 #elif (defined(__WINDOWS__) || defined(__OS2__)) && \
       ( \
-        defined(__VISUALC__) || \
+        (defined(__VISUALC__) || (defined(__WINDOWS__) && defined (__INTELC__))) || \
         defined(__MINGW64__) || \
         (defined(__MINGW32__) && !defined(__WINE__) && \
                                 wxCHECK_W32API_VERSION(0, 5)) || \
@@ -201,10 +201,10 @@
     #undef wxHAS_HUGE_STDIO_FILES
 
     // detect compilers which have support for huge files
-    #if defined(__VISUALC__)
+    #if (defined(__VISUALC__) || (defined(__WINDOWS__) && defined (__INTELC__)))
         #define wxHAS_HUGE_FILES 1
     #elif defined(__MINGW32__) || defined(__MINGW64__)
-        #define wxHAS_HUGE_FILES 1
+        #define wxHAS_HUGE_FILES 1f
     #elif defined(_LARGE_FILES)
         #define wxHAS_HUGE_FILES 1
     #endif
@@ -476,7 +476,6 @@
     #define   wxSeek       lseek
     #define   wxFsync      fsync
     #define   wxEof        eof
-
     #define   wxCRT_MkDir      mkdir
     #define   wxCRT_RmDir      rmdir
 
Index: include/wx/wxcrt.h
===================================================================
--- include/wx/wxcrt.h	(revision 74780)
+++ include/wx/wxcrt.h	(working copy)
@@ -17,7 +17,7 @@
 
 #ifndef __WX_SETUP_H__
 // For non-configure builds assume vsscanf is available, if not Visual C or DMC
-#if !defined (__VISUALC__) && !defined (__DMC__)
+#if !defined (__VISUALC__) && !(defined(__WINDOWS__) && defined(__INTELC__)) && !defined (__DMC__)
     #define HAVE_VSSCANF 1
 #endif
 #endif
Index: include/wx/wxcrtbase.h
===================================================================
--- include/wx/wxcrtbase.h	(revision 74780)
+++ include/wx/wxcrtbase.h	(working copy)
@@ -165,7 +165,7 @@
 
 /* Almost all compilers have strdup(), but VC++ and MinGW call it _strdup().
    And it's not available in MinGW strict ANSI mode nor under Windows CE. */
-#if (defined(__VISUALC__) && __VISUALC__ >= 1400)
+#if (defined(__VISUALC__) && __VISUALC__ >= 1400) || (defined(__VISUAC__) && defined (__INTELC__))
     #define wxCRT_StrdupA _strdup
 #elif defined(__MINGW32__)
     #ifndef __WX_STRICT_ANSI_GCC__
Index: src/common/filefn.cpp
===================================================================
--- src/common/filefn.cpp	(revision 74780)
+++ src/common/filefn.cpp	(working copy)
@@ -1191,6 +1191,7 @@
 bool wxRemoveFile(const wxString& file)
 {
 #if defined(__VISUALC__) \
+ || (defined(__WINDOWS__) && defined(__INTELC__)) \
  || defined(__BORLANDC__) \
  || defined(__WATCOMC__) \
  || defined(__DMC__) \
