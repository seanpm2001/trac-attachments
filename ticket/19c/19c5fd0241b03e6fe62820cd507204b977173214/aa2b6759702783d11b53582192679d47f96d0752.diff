commit f5c79ace25b12bdc532efdd242dc59c9a1340a3a
Author: Simon Richter <Simon.Richter@hogyros.de>
Date:   Tue Mar 17 23:48:48 2015 +0100

    Add resynchronization

diff --git a/dataview.cpp b/dataview.cpp
index c04156b..7272174 100644
--- a/dataview.cpp
+++ b/dataview.cpp
@@ -89,6 +89,7 @@ private:
     void OnExpand(wxCommandEvent& event);
     void OnShowCurrent(wxCommandEvent& event);
     void OnSetNinthCurrent(wxCommandEvent& event);
+    void OnResynchronizeUI(wxCommandEvent& event);
 
     void OnPrependList(wxCommandEvent& event);
     void OnDeleteList(wxCommandEvent& event);
@@ -281,6 +282,7 @@ enum
     ID_EXPAND           = 105,
     ID_SHOW_CURRENT,
     ID_SET_NINTH_CURRENT,
+    ID_RESYNCHRONIZE_UI,
 
     ID_PREPEND_LIST     = 200,
     ID_DELETE_LIST      = 201,
@@ -315,6 +317,7 @@ wxBEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_BUTTON( ID_EXPAND, MyFrame::OnExpand )
     EVT_BUTTON( ID_SHOW_CURRENT, MyFrame::OnShowCurrent )
     EVT_BUTTON( ID_SET_NINTH_CURRENT, MyFrame::OnSetNinthCurrent )
+    EVT_BUTTON( ID_RESYNCHRONIZE_UI, MyFrame::OnResynchronizeUI )
 
     EVT_BUTTON( ID_PREPEND_LIST, MyFrame::OnPrependList )
     EVT_BUTTON( ID_DELETE_LIST, MyFrame::OnDeleteList )
@@ -432,6 +435,8 @@ MyFrame::MyFrame(wxFrame *frame, const wxString &title, int x, int y, int w, int
                                    "&Show current"), border);
     sizerCurrent->Add(new wxButton(firstPanel, ID_SET_NINTH_CURRENT,
                                    "Make &ninth symphony current"), border);
+    sizerCurrent->Add(new wxButton(firstPanel, ID_RESYNCHRONIZE_UI,
+                                   "Resynchronize to data model"), border);
 
     wxSizer *firstPanelSz = new wxBoxSizer( wxVERTICAL );
     m_ctrl[0]->SetMinSize(wxSize(-1, 200));
@@ -968,6 +973,13 @@ void MyFrame::OnSetNinthCurrent(wxCommandEvent& WXUNUSED(event))
     m_ctrl[0]->SetCurrentItem(item);
 }
 
+void MyFrame::OnResynchronizeUI(wxCommandEvent& WXUNUSED(event))
+{
+    wxLogMessage( "Resynchronize UI Start..." );
+    m_music_model->ResynchronizeUI();
+    wxLogMessage( "Resynchronize UI End." );
+}
+
 void MyFrame::OnValueChanged( wxDataViewEvent &event )
 {
     wxString title = m_music_model->GetTitle( event.GetItem() );
diff --git a/mymodels.cpp b/mymodels.cpp
index e1df2f0..466c684 100644
--- a/mymodels.cpp
+++ b/mymodels.cpp
@@ -23,6 +23,8 @@
 #include "wx/dataview.h"
 #include "mymodels.h"
 
+#include <queue>
+
 // ----------------------------------------------------------------------------
 // resources
 // ----------------------------------------------------------------------------
@@ -59,6 +61,30 @@ MyMusicTreeModel::MyMusicTreeModel()
     m_classicalMusicIsKnownToControl = false;
 }
 
+void MyMusicTreeModel::ResynchronizeUI()
+{
+    Cleared();
+
+    std::queue<wxDataViewItem> todo;
+    todo.push( wxDataViewItem() );
+
+    while( !todo.empty() )
+    {
+        wxDataViewItem current = todo.front();
+        wxDataViewItemArray items;
+
+        GetChildren( current, items );
+        ItemsAdded( current, items );
+
+        for(wxDataViewItemArray::const_iterator i = items.begin(); i != items.end(); ++i)
+        {
+            if( IsContainer( *i ) )
+                todo.push( *i );
+        }
+        todo.pop();
+    }
+}
+
 wxString MyMusicTreeModel::GetTitle( const wxDataViewItem &item ) const
 {
     MyMusicTreeModelNode *node = (MyMusicTreeModelNode*) item.GetID();
diff --git a/mymodels.h b/mymodels.h
index d925779..9f7979f 100644
--- a/mymodels.h
+++ b/mymodels.h
@@ -120,6 +120,8 @@ public:
         delete m_root;
     }
 
+    void ResynchronizeUI();
+
     // helper method for wxLog
 
     wxString GetTitle( const wxDataViewItem &item ) const;
