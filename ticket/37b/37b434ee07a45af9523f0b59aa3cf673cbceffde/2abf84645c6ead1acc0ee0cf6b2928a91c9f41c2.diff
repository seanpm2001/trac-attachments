Index: src/os2/checkbox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/checkbox.cpp,v
retrieving revision 1.22
diff -r1.22 checkbox.cpp
109c109,110
<     ::WinSetWindowText(GetHwnd(), rsLabel.c_str());
---
>    wxString                         sLabel=::wxPMTextToLabel(rsLabel);
>     ::WinSetWindowText(GetHwnd(), sLabel.c_str());
Index: src/os2/control.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/control.cpp,v
retrieving revision 1.33
diff -r1.33 control.cpp
133a137,138
>
>     wxString                        sLabel = ::wxPMTextToLabel(rsLabel);
137c142
<                                        ,(PSZ)rsLabel.c_str()     // Initial Text
---
>                                        ,(PSZ)sLabel.c_str()      // Initial Text
Index: src/os2/radiobut.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/radiobut.cpp,v
retrieving revision 1.22
diff -r1.22 radiobut.cpp
204c204
<     // to aviod this, we drop the pseudo BN_CLICKED events generated when the
---
>     // to avoid this, we drop the pseudo BN_CLICKED events generated when the
215c215,216
<     ::WinSetWindowText((HWND)GetHWND(), (const char *)rsLabel.c_str());
---
>     wxString                        sLabel = ::wxPMTextToLabel(rsLabel);
>     ::WinSetWindowText((HWND)GetHWND(), (const char *)sLabel.c_str());
Index: src/os2/stattext.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/stattext.cpp,v
retrieving revision 1.19
diff -r1.19 stattext.cpp
63c63
<     lSstyle = WS_VISIBLE | SS_TEXT | DT_VCENTER;
---
>     lSstyle = WS_VISIBLE | SS_TEXT | DT_VCENTER | DT_MNEMONIC;
69a70,72
>
>     wxString                        sLabel = ::wxPMTextToLabel(rsLabel);
>
72c75
<                                        ,(PSZ)rsLabel.c_str()     // Initial Text
---
>                                        ,(PSZ)sLabel.c_str()      // Initial Text
124c127
<     bool                            bLastWasAmpersand = FALSE;
---
>     bool                            bLastWasTilde = FALSE;
166c169
<             // We shouldn't take into account the '&' which just introduces the
---
>             // We shouldn't take into account the '~' which just introduces the
168,169c171,172
<             // when it is preceded by another '&' in which case it stands for a
<             // literal ampersand
---
>             // when it is preceded by another '~' in which case it stands for a
>             // literal tilde
171c174
<             if (*pc == _T('&'))
---
>             if (*pc == _T('~'))
173c176
<                 if (!bLastWasAmpersand)
---
>                 if (!bLastWasTilde)
175c178
<                     bLastWasAmpersand = TRUE;
---
>                     bLastWasTilde = TRUE;
184c187
<                 // It is a literal ampersand
---
>                 // It is a literal tilde
186c189
<                 bLastWasAmpersand = FALSE;
---
>                 bLastWasTilde = FALSE;
238c241,242
<     ::WinSetWindowText(GetHwnd(), rsLabel.c_str());
---
>     wxString                        sLabel = ::wxPMTextToLabel(rsLabel);
>     ::WinSetWindowText(GetHwnd(), sLabel.c_str());

 	  	 
