Index: src/common/filename.cpp
===================================================================
--- src/common/filename.cpp	(revision 62501)
+++ src/common/filename.cpp	(working copy)
@@ -288,11 +288,13 @@
 // like a UNC path
 static bool IsUNCPath(const wxString& path, wxPathFormat format)
 {
+    static const wxString seps = wxFileName::GetPathSeparators();
+
     return format == wxPATH_DOS &&
                 path.length() >= 4 && // "\\a" can't be a UNC path
-                    path[0u] == wxFILE_SEP_PATH_DOS &&
-                        path[1u] == wxFILE_SEP_PATH_DOS &&
-                            path[2u] != wxFILE_SEP_PATH_DOS;
+                  (wxString::npos != seps.find_first_of(path[0u])) &&
+                        (wxString::npos != seps.find_first_of(path[1u])) &&
+                            (wxString::npos == seps.find_first_of(path[2u]));
 }
 
 // ============================================================================
@@ -332,7 +334,7 @@
     // some kind of flag telling to ignore UNC paths to SetPath() would be
     // better) but this is the safest thing to do to avoid breaking backwards
     // compatibility in 2.8
-    if ( IsUNCPath(path, format) )
+    if ( ::IsUNCPath(path, format) )
     {
         // remove one of the 2 leading backslashes to ensure that it's not
         // recognized as an UNC path by SetPath()
@@ -1974,7 +1976,7 @@
     wxString fullpath = fullpathWithVolume;
 
     // special Windows UNC paths hack: transform \\share\path into share:path
-    if ( IsUNCPath(fullpath, format) )
+    if ( ::IsUNCPath(fullpath, format) )
     {
         fullpath.erase(0, 2);
 
