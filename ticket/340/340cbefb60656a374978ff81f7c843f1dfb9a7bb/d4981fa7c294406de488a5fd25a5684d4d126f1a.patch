Index: wxWidgets/src/common/gbsizer.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/gbsizer.cpp,v
retrieving revision 1.14
diff -u -r1.14 gbsizer.cpp
--- wxWidgets/src/common/gbsizer.cpp	2006/09/13 17:12:01	1.14
+++ wxWidgets/src/common/gbsizer.cpp	2007/04/11 10:38:08
@@ -537,20 +537,24 @@
     {
         int row, col, endrow, endcol;
         wxGBSizerItem* item = (wxGBSizerItem*)node->GetData();
-        item->GetPos(row, col);
-        item->GetEndPos(endrow, endcol);
 
-        height = 0;
-        for(idx=row; idx <= endrow; idx++)
-            height += m_rowHeights[idx];
-        height += (endrow - row) * m_vgap; // add a vgap for every row spanned
+        if ( item->IsShown() )
+        {
+            item->GetPos(row, col);
+            item->GetEndPos(endrow, endcol);
 
-        width = 0;
-        for (idx=col; idx <= endcol; idx++)
-            width += m_colWidths[idx];
-        width += (endcol - col) * m_hgap; // add a hgap for every col spanned
+            height = 0;
+            for(idx=row; idx <= endrow; idx++)
+                height += m_rowHeights[idx];
+            height += (endrow - row) * m_vgap; // add a vgap for every row spanned
 
-        SetItemBounds(item, colpos[col], rowpos[row], width, height);
+            width = 0;
+            for (idx=col; idx <= endcol; idx++)
+                width += m_colWidths[idx];
+            width += (endcol - col) * m_hgap; // add a hgap for every col spanned
+
+            SetItemBounds(item, colpos[col], rowpos[row], width, height);
+	    }
 
         node = node->GetNext();
     }

 	  	 
