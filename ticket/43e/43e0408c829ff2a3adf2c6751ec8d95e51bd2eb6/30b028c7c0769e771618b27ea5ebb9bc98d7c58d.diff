diff --git a/interface/wx/image.h b/interface/wx/image.h
index eb5fabb4da..0041a0d931 100644
--- a/interface/wx/image.h
+++ b/interface/wx/image.h
@@ -93,6 +93,9 @@ enum wxImagePNGType
 #define wxIMAGE_OPTION_CUR_HOTSPOT_Y                    wxString("HotSpotY")
 
 #define wxIMAGE_OPTION_GIF_COMMENT                      wxString("GifComment")
+#define wxIMAGE_OPTION_GIF_TRANSPARENCY                 wxString("Transparency")
+#define wxIMAGE_OPTION_GIF_TRANSPARENCY_HIGHLIGHT       wxString("Highlight")
+#define wxIMAGE_OPTION_GIF_TRANSPARENCY_UNCHANGED       wxString("Unchanged")
 
 #define wxIMAGE_OPTION_PNG_FORMAT                       wxString("PngFormat")
 #define wxIMAGE_OPTION_PNG_BITDEPTH                     wxString("PngBitDepth")
@@ -1279,6 +1282,18 @@ public:
             PHOTOMETRIC_MINISWHITE or PHOTOMETRIC_MINISBLACK. The other values
             are taken care of.
 
+        Options specific to wxGIFHandler:
+        @li @c wxIMAGE_OPTION_GIF_TRANSPARENCY: How to deal with transparent pixels.
+            By default, the color of transparent pixels is changed to bright pink, so
+            that if the image is accidentally drawn without transparency, it will be
+            obvious.
+            Normally, this would not be noticed, as these pixels will not be rendered.
+            But in some cases it might be useful to load a GIF without making any
+            modifications to its colours.
+            Use @c wxIMAGE_OPTION_GIF_TRANSPARENCY_UNCHANGED to keep the colors correct.
+            Use @c wxIMAGE_OPTION_GIF_TRANSPARENCY_HIGHLIGHT to convert transparent pixels
+            to pink (default).
+        
         @note
         Be careful when combining the options @c wxIMAGE_OPTION_TIFF_SAMPLESPERPIXEL,
         @c wxIMAGE_OPTION_TIFF_BITSPERSAMPLE, and @c wxIMAGE_OPTION_TIFF_PHOTOMETRIC.
diff --git a/src/common/gifdecod.cpp b/src/common/gifdecod.cpp
index bea6addc38..62f5cfc21b 100644
--- a/src/common/gifdecod.cpp
+++ b/src/common/gifdecod.cpp
@@ -130,9 +130,6 @@ bool wxGIFDecoder::ConvertToImage(unsigned int frame, wxImage *image) const
     unsigned long i;
     int      transparent;
 
-    // just in case...
-    image->Destroy();
-
     // create the image
     wxSize sz = GetFrameSize(frame);
     image->Create(sz.GetWidth(), sz.GetHeight());
@@ -149,24 +146,45 @@ bool wxGIFDecoder::ConvertToImage(unsigned int frame, wxImage *image) const
     // set transparent colour mask
     if (transparent != -1)
     {
-        for (i = 0; i < GetNcolours(frame); i++)
+        if (transparencyOption == wxIMAGE_OPTION_GIF_TRANSPARENCY_UNCHANGED)
         {
-            if ((pal[3 * i + 0] == 255) &&
-                (pal[3 * i + 1] == 0) &&
-                (pal[3 * i + 2] == 255))
+            // Leave the GIF exactly as as it was.
+            for (i = 0; i < GetNcolours(frame); i++)
             {
-                pal[3 * i + 2] = 254;
+                if ((pal[3 * i + 0] == pal[3 * transparent + 0]) &&
+                    (pal[3 * i + 1] == pal[3 * transparent + 1]) &&
+                    (pal[3 * i + 2] == pal[3 * transparent + 2]))
+                {
+                    pal[3 * i + 2] ^= 1;
+                }
             }
         }
+        else
+        {
+            for (i = 0; i < GetNcolours(frame); i++)
+            {
+                if ((pal[3 * i + 0] == 255) &&
+                    (pal[3 * i + 1] == 0) &&
+                    (pal[3 * i + 2] == 255))
+                {
+                    pal[3 * i + 2] = 254;
+                }
+            }
 
-        pal[3 * transparent + 0] = 255,
-        pal[3 * transparent + 1] = 0,
-        pal[3 * transparent + 2] = 255;
+            pal[3 * transparent + 0] = 255,
+                pal[3 * transparent + 1] = 0,
+                pal[3 * transparent + 2] = 255;
 
-        image->SetMaskColour(255, 0, 255);
+            image->SetMaskColour(255, 0, 255);
+        }
+        
+        image->SetMaskColour(pal[3 * transparent + 0], pal[3 * transparent + 1], pal[3 * transparent + 2]);        
+        
     }
     else
+    {
         image->SetMask(false);
+    }
 
 #if wxUSE_PALETTE
     unsigned char r[256];
