diff --git a/include/wx/imaggif.h b/include/wx/imaggif.h
index b59744c0cb..208498f34c 100644
--- a/include/wx/imaggif.h
+++ b/include/wx/imaggif.h
@@ -18,7 +18,11 @@
 
 #if wxUSE_GIF
 
-#define wxIMAGE_OPTION_GIF_COMMENT wxT("GifComment")
+#define wxIMAGE_OPTION_GIF_COMMENT                  wxT("GifComment")
+
+#define wxIMAGE_OPTION_GIF_TRANSPARENCY             wxT("Transparency")
+#define wxIMAGE_OPTION_GIF_TRANSPARENCY_HIGHLIGHT   wxT("Highlight")
+#define wxIMAGE_OPTION_GIF_TRANSPARENCY_UNCHANGED   wxT("Unchanged")
 
 struct wxRGB;
 struct GifHashTableType;
diff --git a/interface/wx/image.h b/interface/wx/image.h
index eb5fabb4da..27a83cdb88 100644
--- a/interface/wx/image.h
+++ b/interface/wx/image.h
@@ -93,6 +93,9 @@ enum wxImagePNGType
 #define wxIMAGE_OPTION_CUR_HOTSPOT_Y                    wxString("HotSpotY")
 
 #define wxIMAGE_OPTION_GIF_COMMENT                      wxString("GifComment")
+#define wxIMAGE_OPTION_GIF_TRANSPARENCY                 wxString("Transparency")
+#define wxIMAGE_OPTION_GIF_TRANSPARENCY_HIGHLIGHT       wxString("Highlight")
+#define wxIMAGE_OPTION_GIF_TRANSPARENCY_UNCHANGED       wxString("Unchanged")
 
 #define wxIMAGE_OPTION_PNG_FORMAT                       wxString("PngFormat")
 #define wxIMAGE_OPTION_PNG_BITDEPTH                     wxString("PngBitDepth")
@@ -1279,6 +1282,19 @@ public:
             PHOTOMETRIC_MINISWHITE or PHOTOMETRIC_MINISBLACK. The other values
             are taken care of.
 
+        Options specific to wxGIFHandler:
+        @li @c wxIMAGE_OPTION_GIF_TRANSPARENCY: How to deal with transparent pixels.
+            By default, the color of transparent pixels is changed to bright pink, so
+            that if the image is accidentally drawn without transparency, it will be
+            obvious.
+            Normally, this would not be noticed, as these pixels will not be rendered.
+            But in some cases it might be useful to load a GIF without making any
+            modifications to its colours.
+            Use @c wxIMAGE_OPTION_GIF_TRANSPARENCY_UNCHANGED to keep the colors correct.
+            Use @c wxIMAGE_OPTION_GIF_TRANSPARENCY_HIGHLIGHT to convert transparent pixels
+            to pink (default).
+            This option has been added in wxWidgets 3.1.1.
+
         @note
         Be careful when combining the options @c wxIMAGE_OPTION_TIFF_SAMPLESPERPIXEL,
         @c wxIMAGE_OPTION_TIFF_BITSPERSAMPLE, and @c wxIMAGE_OPTION_TIFF_PHOTOMETRIC.
@@ -2039,4 +2055,3 @@ wxImage wxNullImage;
 void wxInitAllImageHandlers();
 
 //@}
-
diff --git a/src/common/gifdecod.cpp b/src/common/gifdecod.cpp
index bea6addc38..0f99a86106 100644
--- a/src/common/gifdecod.cpp
+++ b/src/common/gifdecod.cpp
@@ -130,8 +130,7 @@ bool wxGIFDecoder::ConvertToImage(unsigned int frame, wxImage *image) const
     unsigned long i;
     int      transparent;
 
-    // just in case...
-    image->Destroy();
+    wxString transparencyOption = image->GetOption(wxIMAGE_OPTION_GIF_TRANSPARENCY);
 
     // create the image
     wxSize sz = GetFrameSize(frame);
@@ -149,24 +148,54 @@ bool wxGIFDecoder::ConvertToImage(unsigned int frame, wxImage *image) const
     // set transparent colour mask
     if (transparent != -1)
     {
-        for (i = 0; i < GetNcolours(frame); i++)
+        if (transparencyOption == wxIMAGE_OPTION_GIF_TRANSPARENCY_UNCHANGED)
         {
-            if ((pal[3 * i + 0] == 255) &&
-                (pal[3 * i + 1] == 0) &&
-                (pal[3 * i + 2] == 255))
+            // Leave the GIF exactly as as it was, just adjust (in the least
+            // noticeable way, by just flipping a single bit) any pixels which
+            // happen to have the same RGB color as the transparent color.
+            for (i = 0; i < GetNcolours(frame); i++)
             {
-                pal[3 * i + 2] = 254;
+                if ((pal[3 * i + 0] == pal[3 * transparent + 0]) &&
+                    (pal[3 * i + 1] == pal[3 * transparent + 1]) &&
+                    (pal[3 * i + 2] == pal[3 * transparent + 2]))
+                {
+                    pal[3 * i + 2] ^= 1;
+                }
             }
         }
+        else
+        {
+            // By default, we assign bright pink to transparent pixels to make
+            // them perfectly noticeable if someone accidentally draws the
+            // image without taking transparency into account. Due to this use
+            // of pink, we need to change any existing image pixels with this
+            // colour to use something different.
+            for (i = 0; i < GetNcolours(frame); i++)
+            {
+                if ((pal[3 * i + 0] == 255) &&
+                    (pal[3 * i + 1] ==   0) &&
+                    (pal[3 * i + 2] == 255))
+                {
+                    pal[3 * i + 2] = 254;
+                }
+            }
 
-        pal[3 * transparent + 0] = 255,
-        pal[3 * transparent + 1] = 0,
-        pal[3 * transparent + 2] = 255;
+            pal[3 * transparent + 0] = 255,
+            pal[3 * transparent + 1] =   0,
+            pal[3 * transparent + 2] = 255;
 
-        image->SetMaskColour(255, 0, 255);
+            image->SetMaskColour(255, 0, 255);
+        }
+        
+        image->SetMaskColour(pal[3 * transparent + 0],
+                             pal[3 * transparent + 1],
+                             pal[3 * transparent + 2]);
+        
     }
     else
+    {
         image->SetMask(false);
+    }
 
 #if wxUSE_PALETTE
     unsigned char r[256];
