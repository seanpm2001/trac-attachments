--- include/wx/sizer.h	2005-03-24 20:40:48.000000000 +0300
+++ include/wx/sizer.h	2006-04-20 10:59:11.000000000 +0400
@@ -671,6 +671,8 @@
 public:
     wxStaticBoxSizer(wxStaticBox *box, int orient);
     wxStaticBoxSizer(int orient, wxWindow *win, const wxString& label = wxEmptyString);
+    virtual ~wxStaticBoxSizer(void)
+	{ delete m_staticBox; }
 
     void RecalcSizes();
     wxSize CalcMin();
@@ -680,6 +682,7 @@
 
     // override to hide/show the static box as well
     virtual void ShowItems (bool show);
+    virtual bool Detach( wxWindow *window );
 
 protected:
     wxStaticBox   *m_staticBox;
--- src/common/sizer.cpp	2005-04-24 18:00:18.000000000 +0400
+++ src/common/sizer.cpp	2006-04-20 11:24:03.000000000 +0400
@@ -1682,12 +1682,14 @@
     , m_staticBox( box )
 {
     wxASSERT_MSG( box, wxT("wxStaticBoxSizer needs a static box") );
+    m_staticBox->SetContainingSizer(this);
 }
 
 wxStaticBoxSizer::wxStaticBoxSizer(int orient, wxWindow *win, const wxString& s)
                 : wxBoxSizer(orient),
                   m_staticBox(new wxStaticBox(win, wxID_ANY, s))
 {
+    m_staticBox->SetContainingSizer(this);
 }
 
 static void GetStaticBoxBorders( wxStaticBox *box,
@@ -1737,6 +1739,15 @@
     wxBoxSizer::ShowItems( show );
 }
 
+bool wxStaticBoxSizer::Detach( wxWindow *window )
+{
+    if ( window == m_staticBox ) {
+	m_staticBox = NULL;
+	return true;
+    }
+    return wxSizer::Detach( window );
+}
+
 #endif // wxUSE_STATBOX
 
 #if wxUSE_BUTTON

 	  	 
