diff --git a/samples/minimal/minimal.cpp b/samples/minimal/minimal.cpp
index 65da9f35b6..671cda486f 100644
--- a/samples/minimal/minimal.cpp
+++ b/samples/minimal/minimal.cpp
@@ -29,6 +29,12 @@
     #include "wx/wx.h"
 #endif
 
+#include <wx/button.h>
+#include <wx/checkbox.h>
+#include <wx/panel.h>
+#include <wx/slider.h>
+#include <wx/statline.h>
+
 // ----------------------------------------------------------------------------
 // resources
 // ----------------------------------------------------------------------------
@@ -66,6 +72,12 @@ public:
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    void OnCheckBox1Click(wxCommandEvent& event);
+
+private:
+    wxCheckBox* m_CheckBox1;
+    wxButton* m_Button1;
+    wxButton* m_Button2;
 
 private:
     // any class wishing to process wxWidgets events must use this macro
@@ -178,11 +190,42 @@ MyFrame::MyFrame(const wxString& title)
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+
+    wxBoxSizer* BoxSizer1 = new wxBoxSizer(wxVERTICAL);
+    m_CheckBox1 = new wxCheckBox(this, wxID_ANY, _("Show/Hide Buttons"));
+    m_CheckBox1->SetValue(true);
+    BoxSizer1->Add(m_CheckBox1, 0, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
+    m_Button1 = new wxButton(this, wxID_ANY, _("Button 1"));
+    BoxSizer1->Add(m_Button1, 0, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
+    wxStaticLine* StaticLine1 = new wxStaticLine(this, wxID_ANY, wxDefaultPosition);
+    BoxSizer1->Add(StaticLine1, 0, wxALL|wxEXPAND, 5);
+    wxPanel* Controls_Pnl = new wxPanel(this);
+    Controls_Pnl->SetBackgroundColour(wxColour(0, 0, 0));
+    wxBoxSizer* BoxSizer2 = new wxBoxSizer(wxVERTICAL);
+    wxSlider* Timeline_Sldr = new wxSlider(Controls_Pnl, wxID_ANY, 0, 0, 100);
+    Timeline_Sldr->Disable();
+    BoxSizer2->Add(Timeline_Sldr, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
+    m_Button2 = new wxButton(Controls_Pnl, wxID_ANY, _("Button 2"));
+    BoxSizer2->Add(m_Button2, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
+    Controls_Pnl->SetSizer(BoxSizer2);
+    BoxSizer2->Fit(Controls_Pnl);
+    BoxSizer2->SetSizeHints(Controls_Pnl);
+    BoxSizer1->Add(Controls_Pnl, 0, wxEXPAND, 5);
+    SetSizer(BoxSizer1);
+
+    Bind(wxEVT_CHECKBOX, &MyFrame::OnCheckBox1Click, this);
 }
 
 
 // event handlers
 
+void MyFrame::OnCheckBox1Click(wxCommandEvent& WXUNUSED(event))
+{
+    m_Button1->Show(m_CheckBox1->IsChecked());
+    m_Button2->Show(m_CheckBox1->IsChecked());
+    Layout();
+}
+
 void MyFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
 {
     // true is to force the frame to close
