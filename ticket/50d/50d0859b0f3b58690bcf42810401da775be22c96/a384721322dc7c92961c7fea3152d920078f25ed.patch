Index: include/wx/dataview.h
===================================================================
--- include/wx/dataview.h	(revision 53586)
+++ include/wx/dataview.h	(working copy)
@@ -478,6 +478,7 @@
         : m_text(text), m_icon(icon)
     { }
     wxDataViewIconText( const wxDataViewIconText &other )
+    : wxObject(other)
     { m_icon = other.m_icon; m_text = other.m_text; }
 
     void SetText( const wxString &text ) { m_text = text; }
Index: include/wx/mstream.h
===================================================================
--- include/wx/mstream.h	(revision 53586)
+++ include/wx/mstream.h	(working copy)
@@ -31,6 +31,7 @@
         InitFromStream(stream, lenFile);
     }
     wxMemoryInputStream(wxMemoryInputStream& stream)
+    : wxInputStream()
     {
         InitFromStream(stream, wxInvalidOffset);
     }
Index: src/msw/mediactrl_am.cpp
===================================================================
--- src/msw/mediactrl_am.cpp	(revision 53586)
+++ src/msw/mediactrl_am.cpp	(working copy)
@@ -1983,7 +1983,7 @@
 bool wxAMMediaBackend::SetVolume(double dVolume)
 {
     // inverse the transformation above
-    long lVolume = 2000*log10(dVolume + (1 - dVolume)*0.00001);
+    long lVolume = wx_static_cast(long, 2000*log10(dVolume + (1 - dVolume)*0.00001));
 
     HRESULT hr = GetAM()->put_Volume(lVolume);
     if(FAILED(hr))
Index: src/msw/palette.cpp
===================================================================
--- src/msw/palette.cpp	(revision 53586)
+++ src/msw/palette.cpp	(working copy)
@@ -55,6 +55,7 @@
     }
 
     wxPaletteRefData(const wxPaletteRefData& data)
+    : wxGDIRefData(data)
     {
         Init();
 
Index: src/richtext/richtextbuffer.cpp
===================================================================
--- src/richtext/richtextbuffer.cpp	(revision 53586)
+++ src/richtext/richtextbuffer.cpp	(working copy)
@@ -7774,6 +7774,7 @@
 }
 
 wxRichTextFontTable::wxRichTextFontTable(const wxRichTextFontTable& table)
+: wxObject(table)
 {
     (*this) = table;
 }

 	  	 
