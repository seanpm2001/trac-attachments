Index: wxpresets.m4
--- /dev/null
+++ wxpresets.m4
@@ -0,0 +1,928 @@
+dnl ---------------------------------------------------------------------------
+dnl Author:          Francesco Montorsi
+dnl                  (contributions by David Hart and Mac-testing by Bob McCown)
+dnl Creation date:   13/9/2005
+dnl RCS-ID:          $Id: wxpresets.m4,v 1.17 2006/05/14 12:55:56 frm Exp $
+dnl Purpose:         Some M4 macros which makes *much* easier writing the
+dnl                  configure.ac files for build system based on wxpresets
+dnl ---------------------------------------------------------------------------
+
+
+dnl ---------------------------------------------------------------------------
+dnl Macros for wxWidgets build configuration detection.
+dnl Typically used in configure.in/ac as:
+dnl
+dnl     # define configure options
+dnl     AM_WXPRESETS_OPTIONS
+dnl
+dnl     # basic configure checks
+dnl     ...
+dnl
+dnl     # required library checks
+dnl     AM_WXPRESETS_AND_STANDARD_CHECKS([2.8.0], [net,xrc,stc])
+dnl     ...
+dnl
+dnl     # write the output files
+dnl     AC_BAKEFILE([m4_include(autoconf_inc.m4)])
+dnl     AC_CONFIG_FILES([Makefile ...])
+dnl     AC_OUTPUT
+dnl
+dnl     # end of the configure.in script
+dnl     AM_WXPRESETS_SUMMARY_MSG        # optional: just to show a message to the user
+dnl
+dnl or even more easily:
+dnl
+dnl     # define configure options
+dnl     AM_WXPRESETS_OPTIONS
+dnl
+dnl     # do all standard checks and wxpresets ones at all once
+dnl     AM_WXPRESETS_AND_STANDARD_CHECKS([2.8.0], [net,xrc,stc])
+dnl     ...
+dnl
+dnl     # write the output files
+dnl     AC_BAKEFILE([m4_include(autoconf_inc.m4)])
+dnl     AC_CONFIG_FILES([Makefile ...])
+dnl     AC_OUTPUT
+dnl
+dnl     # end of the configure.in script
+dnl     AM_WXPRESETS_SUMMARY_MSG        # optional: just to show a message to the user
+dnl
+dnl ---------------------------------------------------------------------------
+
+
+dnl =========================================================================================================
+dnl Table of Contents of this macro file:
+dnl -------------------------------------
+dnl
+dnl SECTION A: generic utilities
+dnl  - AM_YESNO_OPTCHECK
+dnl  - AM_SAVE_COREVAR, AM_RESTORE_COREVAR
+dnl  - AM_SET_WXLIKE_LIBNAME
+dnl  - AM_SET_WXBUILD_STR
+dnl
+dnl SECTION B: macros for configure options
+dnl  - AM_YESNOAUTO_ARG_ENABLE, AM_YESNOAUTO_ARG_WITH
+dnl  - AM_WXPRESETS_OPTIONS
+dnl
+dnl SECTION C: macros for options handling
+dnl  - AM_WXSELECTEDCONFIG_CONTAIN
+dnl  - AM_WXSELECTEDCONFIG_CHECK
+dnl  - AM_WXPRESETS_DETECT_WXOPTIONS_VALUES
+dnl  - AM_CONVERT_WXPRESETS_OPTIONS_TO_WXCONFIG_FLAGS
+dnl  - AM_GET_GTK_FLAGS
+dnl  - AM_WXPRESETS_CHECKS
+dnl  - AM_WXPRESETS_AND_STANDARD_CHECKS
+dnl
+dnl SECTION D: messages to the user
+dnl  - AM_BOOLOPT_SUMMARY, AM_2BOOLOPT_SUMMARY, AM_3BOOLOPT_SUMMARY
+dnl  - AM_WXPRESETS_SUMMARY_MSG
+dnl  - AM_WXPRESETS_SUMMARY_MSG_BEGIN, AM_WXPRESETS_SUMMARY_MSG_END
+dnl
+dnl The special "DBG_CONFIGURE" variable can be set to 1 to enable some additional information
+dnl printed on stdout when running these macros.
+dnl Note that the "public" macros (i.e. those meant to be used by the user) are those prefixed
+dnl with the "AM_WXPRESETS" string.
+dnl =========================================================================================================
+
+
+
+
+
+
+dnl =========================================================================================================
+dnl                                       SECTION A: generic utilities
+dnl =========================================================================================================
+
+dnl ---------------------------------------------------------------------------
+dnl AM_YESNO_OPTCHECK([name of the boolean variable to set],
+dnl                   [name of the --enable-option variable with yes/no values],
+dnl                   [name of the --enable option])
+dnl
+dnl Converts the $3 variable, suppose to contain a yes/no value to a 1/0
+dnl boolean variable and saves the result into $1.
+dnl Outputs also the standard checking-option message.
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_YESNO_OPTCHECK],
+        [
+        AC_MSG_CHECKING([for $3 option])
+        if [[ "x$$2" = "xyes" ]]; then
+            AC_MSG_RESULT([yes])
+            $1=1
+        else
+            AC_MSG_RESULT([no])
+            $1=0
+        fi
+    ])
+
+
+dnl ---------------------------------------------------------------------------
+dnl AM_SAVE_COREVAR, AM_RESTORE_COREVAR
+dnl
+dnl Saves the CPPFLAGS, CXXFLAGS, CFLAGS and LIBS variables in some helper
+dnl variables which are used to restore them later using AM_RESTORE_COREVAR.
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_SAVE_COREVAR],
+        [
+        SAVED_CPPFLAGS="$CPPFLAGS"
+        SAVED_CXXFLAGS="$CXXFLAGS"
+        SAVED_CFLAGS="$CFLAGS"
+        SAVED_LIBS="$LIBS"
+    ])
+
+AC_DEFUN([AM_RESTORE_COREVAR],
+        [
+        CPPFLAGS="$SAVED_CPPFLAGS"
+        CXXFLAGS="$SAVED_CXXFLAGS"
+        CFLAGS="$SAVED_CFLAGS"
+        LIBS="$SAVED_LIBS"
+    ])
+
+
+dnl ---------------------------------------------------------------------------
+dnl AM_SET_WXLIKE_LIBNAME([prefix], [name])
+dnl
+dnl Sets the WXLIKE_LIBNAME string to the name of a library named with same 
+dnl wxWidgets rules (e.g. for name=='test', prefix="mine", sets WXLIKE_LIBNAME 
+dnl to 'mine_gtk2[u][d]_test-2.8' if WX_PORT=gtk2 and WX_VERSION=28)
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_SET_WXLIKE_LIBNAME],
+    [
+        WXLIKE_LIBNAME="$1""_""$WX_PORT"
+
+        dnl add the [u][d] string
+        if test "$WX_UNICODE" = "1"; then
+            WXLIKE_LIBNAME="$WXLIKE_LIBNAME""u"
+        fi
+        if test "$WX_DEBUG" = "1"; then
+            WXLIKE_LIBNAME="$WXLIKE_LIBNAME""d"
+        fi
+
+        dnl complete name of the lib
+        WXLIKE_LIBNAME="$WXLIKE_LIBNAME""_""$2""-$WX_VERSION_MAJOR.$WX_VERSION_MINOR"
+    ])
+
+
+dnl ---------------------------------------------------------------------------
+dnl AM_SET_WXBUILD_STR
+dnl
+dnl Sets the WXBUILD_STR string to a string like 'gtk2-unicode-release-2.7'
+dnl which can be used to inform the user about the selected wxWidgets build
+dnl in a brief form. This macro must be called after AM_WXPRESETS.
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_SET_WXBUILD_STR],
+    [
+        if test $WX_VERSION -gt 26 ; then
+            WXBUILD_STR=$($WX_CONFIG_WITH_ARGS --selected_config)
+        else
+            dnl build the string ourselves...
+            WXBUILD_STR="$WX_PORT"
+            if test "$WX_UNICODE" = "1"; then
+                WXBUILD_STR="$WXBUILD_STR""-unicode"
+            else
+                WXBUILD_STR="$WXBUILD_STR""-ansi"
+            fi
+            if test "$WX_DEBUG" = "1"; then
+                WXBUILD_STR="$WXBUILD_STR""-debug"
+            else
+                WXBUILD_STR="$WXBUILD_STR""-release"
+            fi
+            if test "$WX_SHARED" = "1"; then
+                WXBUILD_STR="$WXBUILD_STR""-shared"
+            else
+                WXBUILD_STR="$WXBUILD_STR""-static"
+            fi
+            WXBUILD_STR="$WXBUILD_STR""-$WX_VERSION_MAJOR.$WX_VERSION_MINOR"
+        fi
+    ])
+
+
+
+
+
+dnl =========================================================================================================
+dnl                                 SECTION B: macros for configure options
+dnl =========================================================================================================
+
+dnl ---------------------------------------------------------------------------
+dnl AM_YESNOAUTO_ARG_ENABLE/AM_YESNOAUTO_ARG_WITH
+dnl
+dnl Two little custom macros which define the ENABLE/WITH configure arguments.
+dnl Macro arguments:
+dnl $1 = the name of the --enable / --with  feature
+dnl $2 = the name of the variable associated
+dnl $3 = the description of that feature
+dnl $4 = the default value for that feature
+dnl $5 = additional action to do in case option is given with "yes" value
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_YESNOAUTO_ARG_ENABLE],
+         [AC_ARG_ENABLE($1,
+            AC_HELP_STRING([--enable-$1], [$3 (default is $4)]),
+            [], [enableval="$4"])
+
+            dnl Show a message to the user about this option
+            AC_MSG_CHECKING([for the --enable-$1 option])
+            if test "$enableval" = "yes" ; then
+                AC_MSG_RESULT([yes])
+                $2=1
+                $5
+            elif test "$enableval" = "no" ; then
+                AC_MSG_RESULT([no])
+                $2=0
+            elif test "$enableval" = "auto" ; then
+                AC_MSG_RESULT([will be automatically detected])
+                $2="auto"
+            else
+                AC_MSG_ERROR([
+    Unrecognized option value (allowed values: yes, no, auto) !
+                ])
+            fi
+         ])
+
+AC_DEFUN([AM_YESNOAUTO_ARG_WITH],
+         [AC_ARG_WITH($1,
+            AC_HELP_STRING([--with-$1], [$3 (default is $4)]),
+            [], [withval="$4"])
+
+            dnl Show a message to the user about this option
+            AC_MSG_CHECKING([for the --with-$1 option])
+            if test "$withval" = "yes" ; then
+                AC_MSG_RESULT([yes])
+                $2=1
+                $5
+            dnl NB: by default we don't allow --with-$1=no option
+            dnl     since it does not make much sense !
+            elif test "$6" = "1" -a "$withval" = "no" ; then
+                AC_MSG_RESULT([no])
+                $2=0
+            elif test "$withval" = "auto" ; then
+                AC_MSG_RESULT([will be automatically detected])
+                $2="auto"
+            else
+                AC_MSG_ERROR([
+    Unrecognized option value (allowed values: yes, auto) !
+                ])
+            fi
+         ])
+
+dnl ---------------------------------------------------------------------------
+dnl AM_WXPRESETS_OPTIONS
+dnl
+dnl Gives to the configure script the following options:
+dnl   --enable-debug
+dnl   --enable-unicode
+dnl   --enable-shared
+dnl   --enable-wxshared
+dnl Then checks for their presence and eventually set the DEBUG,UNICODE.SHARED
+dnl WXSHARED variables accordingly.
+dnl Note that DEBUG != WX_DEBUG; the first is the value of the --enable-debug
+dnl option (in boolean format) while the second indicates if wxWidgets was
+dnl built in debug mode (and still is in boolean format).
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_WXPRESETS_OPTIONS],
+        [
+
+        dnl The default values (and also option names) are the same of wx's ones
+        AM_YESNOAUTO_ARG_ENABLE([debug], [DEBUG], [Builds in debug mode], [auto])
+        AM_YESNOAUTO_ARG_ENABLE([unicode], [UNICODE], [Builds in unicode mode], [auto])
+        AM_YESNOAUTO_ARG_ENABLE([shared], [SHARED], [Builds in shared mode], [auto])
+
+        PORT="auto"
+        AM_YESNOAUTO_ARG_WITH([motif], [MOTIFPORT], [Uses the wxMotif port], [auto], [PORT="motif"])
+        AM_YESNOAUTO_ARG_WITH([gtk], [GTKPORT], [Uses the wxGTK2 port], [auto], [PORT="gtk2"])
+        AM_YESNOAUTO_ARG_WITH([x11], [X11PORT], [Uses the wxX11 port], [auto], [PORT="x11"])
+        AM_YESNOAUTO_ARG_WITH([mac], [MACPORT], [Uses the wxMac port], [auto], [PORT="mac"])
+        AM_YESNOAUTO_ARG_WITH([mgl], [MGLPORT], [Uses the wxMGL port], [auto], [PORT="mgl"])
+
+        dnl In case we are on Cygwin:
+        AM_YESNOAUTO_ARG_WITH([msw], [MSWPORT], [Uses the wxMSW port], [auto], [PORT="msw"])
+
+        dnl ****** IMPORTANT *******
+        dnl   Unlike DEBUG and UNICODE settings, you can build your program in
+        dnl   shared mode against a static build of wxWidgets. Thus we have the
+        dnl   following option which allows these mixtures. E.g.
+        dnl
+        dnl      ./configure --disable-shared --with-wxshared
+        dnl
+        dnl   will build your library in static mode against the first available
+        dnl   shared build of wxWidgets.
+        dnl
+        dnl   Note that's not possible to do the viceversa:
+        dnl
+        dnl      ./configure --enable-shared --without-wxshared
+        dnl
+        dnl   Doing so you would try to build your library in shared mode against a static
+        dnl   build of wxWidgets. This is not possible !
+        dnl   A check for this combination of options is in AM_WXPRESETS_DETECT_WXOPTIONS_VALUES
+        dnl   (where we know what 'auto' should be expanded to).
+        dnl
+        dnl   If you try to build something in ANSI mode against a UNICODE build
+        dnl   of wxWidgets or in RELEASE mode against a DEBUG build of wxWidgets,
+        dnl   then at best you'll get ton of linking errors !
+        dnl ************************
+        AM_YESNOAUTO_ARG_WITH(
+            [wxshared], [WX_SHARED],
+            [Force building against a shared build of wxWidgets, even if --disable-shared is given],
+            [auto], [], [1])
+
+        dnl FOR DEBUG ONLY
+        if test "$DBG_CONFIGURE" = "1"; then
+            echo "[[dbg]] SHARED: $SHARED, WX_SHARED: $WX_SHARED"
+            echo "[[dbg]] DEBUG: $DEBUG, UNICODE: $UNICODE, PORT: $PORT"
+            echo "[[dbg]] GTKPORT: $GTKPORT, X11PORT: $X11PORT, MACPORT: $MACPORT"
+            echo "[[dbg]] MOTIFPORT: $MOTIFPORT, MGLPORT: $MGLPORT"
+        fi
+    ])
+
+
+
+
+
+
+
+dnl =========================================================================================================
+dnl                                 SECTION C: macros for configure options
+dnl =========================================================================================================
+
+dnl ---------------------------------------------------------------------------
+dnl AM_WXSELECTEDCONFIG_CONTAIN([RESULTVAR], [STRING])
+dnl
+dnl Sets to nonzero the variable named "WX_$RESULTVAR" if the selected wxWidgets
+dnl configuration contain the given STRING.
+dnl Otherwise the variable will be set to 0.
+dnl
+dnl NOTE: 'expr match STRING REGEXP' cannot be used since on Mac it doesn't work;
+dnl       we'll use 'expr STRING : REGEXP' instead
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_WXSELECTEDCONFIG_CONTAIN],
+        [
+        WX_$1=$(expr "$WX_SELECTEDCONFIG" : ".*$2.*")
+    ])
+
+
+dnl ---------------------------------------------------------------------------
+dnl AM_WXSELECTEDCONFIG_CHECK([RESULTVAR], [STRING], [MSG] [, ACTION-IF-FOUND
+dnl                                               [, ACTION-IF-NOT-FOUND]])
+dnl
+dnl Works like AM_WXFLAGS_CHECK but uses the wxWidgets-2.6 specific option
+dnl of wx-config: --selected_config instead of grepping WX_CPPFLAGS var.
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_WXSELECTEDCONFIG_CHECK],
+        [
+        if test "$$1" = "auto" ; then
+
+            dnl The user does not have particular preferences for this option;
+            dnl so we will detect the wxWidgets relative build setting and use it
+            AC_MSG_CHECKING([$3])
+            AM_WXSELECTEDCONFIG_CONTAIN([$1], [$2])
+            if test "$WX_$1" != "0"; then
+                WX_$1=1
+                AC_MSG_RESULT([yes])
+                ifelse([$4], , :, [$4])
+            else
+                WX_$1=0
+                AC_MSG_RESULT([no])
+                ifelse([$5], , :, [$5])
+            fi
+        else
+
+            dnl Use the setting given by the user
+            WX_$1=$$1
+        fi
+    ])
+
+
+dnl ---------------------------------------------------------------------------
+dnl AM_WXPRESETS_DETECT_WXOPTIONS_VALUES
+dnl
+dnl Detects the values of the following variables:
+dnl 1) WX_UNICODE
+dnl 2) WX_DEBUG
+dnl 3) WX_SHARED    (and also WX_STATIC)
+dnl 4) WX_VERSION
+dnl 5) WX_VERSION_MAJOR
+dnl 6) WX_VERSION_MINOR
+dnl 7) WX_*PORT (i.e. WX_MOTIFPORT, WX_MACPORT, WX_X11PORT, WX_MGLPORT, etc)
+dnl 8) WX_PORT
+dnl from the previously selected wxWidgets build; this macro in fact must be
+dnl called *after* calling the AM_PATH_WXCONFIG macro.
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_WXPRESETS_DETECT_WXOPTIONS_VALUES],
+        [
+        dnl be sure that the WX_VERSION variable has the same format of the
+        dnl WX_VERSION option which is used by wx_win32.bkl
+        dnl (i.e. 25, 26, 27... instead of 2.5.x, 2.6.x, 2.7.x...)
+        WX_VERSION_MAJOR=`echo $WX_VERSION | \
+           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\1/'`
+        WX_VERSION_MINOR=`echo $WX_VERSION | \
+           sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`
+        WX_VERSION=$wx_config_major_version$wx_config_minor_version
+
+        dnl these are required !
+        AC_SUBST(WX_VERSION_MAJOR)
+        AC_SUBST(WX_VERSION_MINOR)
+
+
+        dnl FOR DEBUG ONLY
+        if test "$DBG_CONFIGURE" = "1"; then
+            echo "[[dbg]] WX_VERSION: $WX_VERSION"
+        fi
+
+        dnl we could test directly for WX_SHARED with a line like:
+        dnl    AM_WXSELECTEDCONFIG_CHECK([SHARED], [shared],
+        dnl                         [if wxWidgets was built in SHARED mode])
+        dnl but wx-config --selected-config DOES NOT outputs the 'shared'
+        dnl word when wx was built in shared mode; it just outputs the
+        dnl 'static' word when built in static mode.
+        if test $WX_SHARED = "1"; then
+            STATIC=0
+        elif test $WX_SHARED = "0"; then
+            STATIC=1
+        elif test $WX_SHARED = "auto"; then
+            STATIC="auto"
+        fi
+
+        if test $WX_VERSION -gt 26 ; then
+
+            dnl The wx-config we are using understands the "--selected_config"
+            dnl option which returns an easy-parseable string !
+            WX_SELECTEDCONFIG=$($WX_CONFIG_WITH_ARGS --selected_config)
+
+            dnl FOR DEBUG ONLY
+            if test "$DBG_CONFIGURE" = "1"; then
+                echo "[[dbg]] Using wx-config --selected_config"
+                echo "[[dbg]] WX_SELECTEDCONFIG: $WX_SELECTEDCONFIG"
+            fi
+
+            AM_WXSELECTEDCONFIG_CHECK([UNICODE], [unicode],
+                                [if wxWidgets was built with UNICODE enabled])
+            AM_WXSELECTEDCONFIG_CHECK([DEBUG], [debug],
+                                [if wxWidgets was built in DEBUG mode])
+            AM_WXSELECTEDCONFIG_CHECK([STATIC], [static],
+                                [if wxWidgets was built in STATIC mode])
+
+            dnl checks for the wx port used
+            WX_PORT="unknown"
+            AM_WXSELECTEDCONFIG_CHECK([GTKPORT1], [gtk1],
+                                [if wxWidgets port is wxGTK1], [WX_PORT="gtk1"])
+            AM_WXSELECTEDCONFIG_CHECK([GTKPORT2], [gtk2],
+                                [if wxWidgets port is wxGTK2], [WX_PORT="gtk2"])
+            AM_WXSELECTEDCONFIG_CHECK([MOTIFPORT], [motif],
+                                [if wxWidgets port is wxMotif], [WX_PORT="motif"])
+            AM_WXSELECTEDCONFIG_CHECK([MACPORT], [mac],
+                                [if wxWidgets port is wxMac], [WX_PORT="mac"])
+            AM_WXSELECTEDCONFIG_CHECK([X11PORT], [x11],
+                                [if wxWidgets port is wxX11], [WX_PORT="x11"])
+            AM_WXSELECTEDCONFIG_CHECK([MGLPORT], [mgl],
+                                [if wxWidgets port is wxMGL], [WX_PORT="mgl"])
+            AM_WXSELECTEDCONFIG_CHECK([MSWPORT], [msw],
+                                [if wxWidgets port is wxMSW], [WX_PORT="msw"])
+        else
+
+            AC_MSG_ERROR([
+    Cannot detect the wxWidgets configuration for the selected wxWidgets build
+    since its version is < 2.6.0
+                         ])
+        fi
+
+        dnl init WX_SHARED from WX_STATIC
+        if test "$WX_STATIC" != "0"; then
+            WX_SHARED=0
+        else
+            WX_SHARED=1
+        fi
+
+        dnl FOR DEBUG ONLY
+        if test "$DBG_CONFIGURE" = "1"; then
+            echo "[[dbg]] WX_SHARED: $WX_SHARED"
+            echo "[[dbg]] WX_DEBUG: $WX_DEBUG"
+            echo "[[dbg]] WX_UNICODE: $WX_UNICODE"
+            echo "[[dbg]] WX_GTKPORT1: $WX_GTKPORT1, WX_GTKPORT2: $WX_GTKPORT2"
+            echo "[[dbg]] WX_MACPORT: $WX_MACPORT, WX_X11PORT: $WX_X11PORT"
+            echo "[[dbg]] WX_MGLPORT: $WX_MGLPORT, WX_MSWPORT: $WX_MSWPORT"
+            echo "[[dbg]] WX_MOTIFPORT: $WX_MOTIFPORT"
+            echo "[[dbg]] WX_PORT: $WX_PORT"
+        fi
+
+
+        dnl nice way to check:
+        dnl - that only one of the WX_*PORT variables has been set to 1
+        dnl - at least one of the WX_*PORT has been set !
+
+        if test "$WX_PORT" = "unknown" -a "$PORT" = "auto" ; then
+            AC_MSG_ERROR([
+    Cannot detect the currently installed wxWidgets port !
+    Check your 'wx-config --cxxflags'...
+                         ])
+        fi
+
+        checksum="$(expr $WX_GTKPORT1 + $WX_GTKPORT2 + $WX_MOTIFPORT + $WX_MACPORT + \
+                         $WX_X11PORT + $WX_MGLPORT + $WX_MSWPORT)"
+        if test "$checksum" = "0" ; then
+            AC_MSG_ERROR([
+    Cannot detect the currently installed wxWidgets port !
+    Check your 'wx-config --cxxflags'...
+                         ])
+        fi
+        if test "$checksum" != "1" ; then
+            AC_MSG_ERROR([
+    Your 'wx-config --cxxflags' command seems to define more than one port symbol...
+    check your wxWidgets installation (the 'wx-config --list' command may help).
+                         ])
+        fi
+        AC_SUBST(WX_PORT)
+
+
+        dnl Avoid problem described in the AM_WXPRESETS_OPTIONS which happens when
+        dnl the user gives the options:
+        dnl      ./configure --enable-shared --without-wxshared
+        dnl or just do
+        dnl      ./configure --enable-shared
+        dnl but there is only a static build of wxWidgets available.
+        if test "$WX_SHARED" = "0" -a "$SHARED" = "1"; then
+            AC_MSG_ERROR([
+    Cannot build in shared mode against a static build of wxWidgets !
+    This error happens because the wxWidgets build which was selected
+    has been detected as STATIC while you asked to build $PACKAGE_NAME
+    in SHARED mode and this is not possible.
+    Use the '--disable-shared' option to build $PACKAGE_NAME
+    as STATIC or '--with-wxshared' to use a SHARED wxWidgets build.
+                         ])
+        fi
+    ])
+
+
+dnl ---------------------------------------------------------------------------
+dnl AM_CONVERT_WXPRESETS_OPTIONS_TO_WXCONFIG_FLAGS
+dnl
+dnl Sets the WXCFG_FLAGS string using the SHARED,DEBUG,UNICODE variable values
+dnl which are different from "auto"
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_CONVERT_WXPRESETS_OPTIONS_TO_WXCONFIG_FLAGS],
+        [
+
+        dnl The space at the end of the WXCFG_FLAGS is important; do not remove !
+        if test "$WX_SHARED" = "1" ; then
+            WXCFG_FLAGS="--static=no "
+        elif test "$WX_SHARED" = "0" ; then
+            WXCFG_FLAGS="--static=yes "
+        fi
+
+        if test "$DEBUG" = "1" ; then
+            WXCFG_FLAGS="$WXCFG_FLAGS""--debug=yes "
+        elif test "$DEBUG" = "0" ; then
+            WXCFG_FLAGS="$WXCFG_FLAGS""--debug=no "
+        fi
+
+        if test "$UNICODE" = "1" ; then
+            WXCFG_FLAGS="$WXCFG_FLAGS""--unicode=yes "
+        elif test "$UNICODE" = "0" ; then
+            WXCFG_FLAGS="$WXCFG_FLAGS""--unicode=no "
+        fi
+
+        if test "$GTKPORT" = "1" ; then
+            WXCFG_FLAGS="$WXCFG_FLAGS""--toolkit=gtk2 "
+        elif test "$MOTIFPORT" = "1" ; then
+            WXCFG_FLAGS="$WXCFG_FLAGS""--toolkit=motif "
+        elif test "$X11PORT" = "1" ; then
+            WXCFG_FLAGS="$WXCFG_FLAGS""--toolkit=x11 "
+        elif test "$MACPORT" = "1" ; then
+            WXCFG_FLAGS="$WXCFG_FLAGS""--toolkit=mac "
+        elif test "$MGLPORT" = "1" ; then
+            WXCFG_FLAGS="$WXCFG_FLAGS""--toolkit=mgl "
+        elif test "$MSWPORT" = "1" ; then
+            WXCFG_FLAGS="$WXCFG_FLAGS""--toolkit=msw "
+        fi
+
+        dnl strip last space out of the string
+        WXCFG_FLAGS=${WXCFG_FLAGS% }
+
+        dnl FOR DEBUG ONLY
+        if test "$DBG_CONFIGURE" = "1"; then
+            echo "[[dbg]] WXCFG_FLAGS: $WXCFG_FLAGS"
+        fi
+    ])
+
+
+dnl ---------------------------------------------------------------------------
+dnl AM_GET_GTK_FLAGS
+dnl
+dnl When using the wxGTK port, this macro creates a GTKPKG_FLAGS variable that
+dnl contains the c flags (-I and -D flags) required to compile a program which
+dnl uses directly the GTK libraries (instead using the wx layer).
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_GET_GTK_FLAGS],
+        [
+            dnl The commands below were taken from usenet postings by
+            dnl John Labenski
+            dnl NB Trying to do GTKPKG_FLAGS=`gtk-config --cflags` fails,
+            dnl    you have to use an intermediate var
+            if test "$WX_PORT" = "gtk1" ; then
+                _GTKPKG_FL="gtk-config --cflags"
+                GTKPKG_FLAGS=`$_GTKPKG_FL`
+            elif test "$WX_PORT" = "gtk2" ; then
+                _GTKPKG_FL="pkg-config --cflags gtk+-2.0"
+                GTKPKG_FLAGS=`$_GTKPKG_FL`
+            fi
+        ])
+
+
+
+dnl ---------------------------------------------------------------------------
+dnl AM_WXPRESETS_CHECKS([minimum-wx-version], [addwxlibraries], [addgtkflags])
+dnl
+dnl This is the CORE macro of this file: it uses the options previously
+dnl defined by AM_WXPRESETS_OPTIONS (--enable-debug, --enable-unicode, etc)
+dnl to create a string to give to wx-config in order to select a compatible
+dnl wxWidgets build (through AM_CONVERT_WXPRESETS_OPTIONS_TO_WXCONFIG_FLAGS).
+dnl
+dnl Then it calls AM_WXPRESETS_DETECT_WXOPTIONS_VALUES to extract informations returned by
+dnl wx-config and convert them into the WX_* variables.
+dnl
+dnl Thus this acts just as a convenience macro for
+dnl    AM_PATH_WXCONFIG([minimum-wx-version],,, [addwxlibraries])
+dnl    AM_WXPRESETS_DETECT_WXOPTIONS_VALUES
+dnl    AM_GET_GTK_FLAGS                  (only when addgtkflags != '')
+dnl macros.
+dnl
+dnl NOTE: "addwxlibraries" are those wxWidgets libraries (when wx is built
+dnl       in multilib mode) required by the program to link (e.g. core, net, etc);
+dnl       the 'base' library is already added - don't specify it.
+dnl
+dnl NOTE2: see AM_GET_GTK_FLAGS for "addgtkflags" parameter.
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_WXPRESETS_CHECKS],
+         [
+            dnl From --enable-* options set by AM_WXPRESETS_OPTIONS, create the
+            dnl WXCFG_FLAGS string to give to wx-config
+            AM_CONVERT_WXPRESETS_OPTIONS_TO_WXCONFIG_FLAGS
+
+            dnl save the additional wx libraries required as they could be useful
+            dnl later from AM_PREPEND_WXLIKE_LIB macro
+            if test ! -z "$2"; then
+                WX_ADDITIONAL_LIBS="$2,base"
+            else
+                WX_ADDITIONAL_LIBS="base"
+            fi
+
+            dnl search for the selected wxWidgets build
+            AM_PATH_WXCONFIG([$1], [wxWin=1], [wxWin=0],
+                             [$WX_ADDITIONAL_LIBS], [$WXCFG_FLAGS])
+            if test "$wxWin" != 1; then
+
+                if test ! -z "$WXCFG_FLAGS"; then
+
+                    MSG="
+    The configuration you asked for $PACKAGE_NAME requires a wxWidgets
+    build with the following settings:
+        $WXCFG_FLAGS
+    but such build is not available.
+
+    Try to use the default build of wxWidgets
+    (see the command 'wx-config --list') leaving
+    the --enable-unicode, --enable-static, --enable-debug
+    and --with-* options to their default values."
+                fi
+
+                AC_MSG_ERROR([
+    The requested wxWidgets build couldn't be found.
+    $MSG
+
+    If you still get this error, then check that 'wx-config' is
+    in path, the directory where wxWidgets libraries are installed
+    (returned by 'wx-config --libs' command) is in LD_LIBRARY_PATH
+    or equivalent variable and wxWidgets version is $1 or above.
+                ])
+            else
+                dnl do not update CPPFLAGS nor CXXFLAGS doing something like:
+                dnl       CPPFLAGS="$CPPFLAGS $WX_CPPFLAGS"
+                dnl       CXXFLAGS="$CXXFLAGS $WX_CXXFLAGS"
+                dnl otherwise we'll get the
+                dnl same settings repetead three times since wxpresets generate
+                dnl a Makefile.in which merges these two variables with
+                dnl $WX_CPPFLAGS automatically...
+                dnl CFLAGS="$CFLAGS $WX_CFLAGS_ONLY"
+                dnl LIBS="$LIBS $WX_LIBS"
+                true;       dnl no-operation used because empty branchs are not
+                            dnl allowed: else fi; gives an error !
+            fi
+
+            dnl save the full wxWidgets version in WX_VERSION_FULL
+            dnl (to be compatible with win32 bakefiles, AM_WXPRESETS_DETECT_WXOPTIONS_VALUES
+            dnl overwrites WX_VERSION with only the major and minor digits
+            dnl of wx-config --version without any dot).
+            WX_VERSION_FULL="$WX_VERSION"
+            AC_SUBST(WX_VERSION_FULL)
+
+            dnl Synch our WX_DEBUG,WX_UNICODE,WX_SHARED,WX_VERSION,etc
+            dnl variables with wx ones
+            AM_WXPRESETS_DETECT_WXOPTIONS_VALUES
+
+            dnl now we can finally update the DEBUG,UNICODE,SHARED options
+            dnl to their final values if they were set to 'auto'
+            if test "$DEBUG" = "auto"; then
+                DEBUG=$WX_DEBUG
+
+                dnl in case user wants a BUILD=debug/release var...
+                if test "$DEBUG" = "1"; then
+                    BUILD="debug"
+                elif test "$DEBUG" = ""; then
+                    BUILD="release"
+                fi
+            fi
+            if test "$UNICODE" = "auto"; then
+                UNICODE=$WX_UNICODE
+            fi
+            if test "$SHARED" = "auto"; then
+                SHARED=$WX_SHARED
+            fi
+
+            dnl It doesn't matter what "gtkaddflags" parameter contains,
+            dnl if it's non-empty it's true
+            if test -n "$3" ; then
+                dnl Add gtk-specific flags (useful when compiling wx sources
+                dnl that directly use the GTK libraries)
+                AM_GET_GTK_FLAGS
+
+                dnl Update global flags
+                CXXFLAGS="$CXXFLAGS $GTKPKG_FLAGS"
+                CFLAGS="$CFLAGS $GTKPKG_FLAGS"
+            fi
+        ])
+
+
+
+dnl ---------------------------------------------------------------------------
+dnl AM_WXPRESETS_AND_STANDARD_CHECKS([minimum-wx-version], [addwxlibraries], [addgtkflags])
+dnl
+dnl Like AM_WXPRESETS_CHECKS but this macro also does those standard checks
+dnl to recognize the system and the installed utility programs
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_WXPRESETS_AND_STANDARD_CHECKS],
+        [
+            dnl This allows us to use Bakefile, recognizing the system type
+            dnl (and sets the AC_CANONICAL_BUILD, AC_CANONICAL_HOST and
+            dnl AC_CANONICAL_TARGET variables)
+            AC_CANONICAL_SYSTEM
+
+            dnl we set these vars to avoid that the AC_PROG_C* macros add the
+            dnl "-g -O2" flags; we will add them later, if needed
+            dnl
+            dnl NOTE: we cannot simply init them to empty vars because in that
+            dnl       way we could override the user-explicitely-set value
+            dnl       passed on the command line... so we need to check first!
+            if test -z "$CFLAGS"; then
+                CFLAGS=
+            fi
+            if test -z "$CXXFLAGS"; then
+                CXXFLAGS=
+            fi
+            if test -z "$CPPFLAGS"; then
+                CPPFLAGS=
+            fi
+
+            dnl Checks for basic programs used to compile/install.
+            AC_PROG_AWK
+            AC_PROG_INSTALL
+            AC_PROG_LN_S
+            AC_PROG_RANLIB
+            AC_PROG_CC
+            AC_PROG_CXX
+            AC_PROG_CXXCPP
+
+            dnl check for wxWidgets library and initialization of WX_* variables
+            AM_WXPRESETS_CHECKS([$1], [$2], [$3])
+
+            dnl add the optimize/debug flags
+            dnl NOTE1: these checks must be put after AM_WXPRESETS_CHECKS
+            dnl        (which sets the $WX_* variables)...
+            dnl NOTE2: the CXXFLAGS are merged together with the CPPFLAGS so we
+            dnl        don't need to set them, too
+            if [[ "$WX_DEBUG" = "1" ]]; then
+
+                dnl NOTE: the -Wundef and -Wno-ctor-dtor-privacy are not enabled
+                dnl       automatically by -Wall
+                dnl NOTE2: the '-Wno-ctor-dtor-privacy' has sense only when compiling
+                dnl        C++ source files and thus we must be careful to add it only
+                dnl        to CXXFLAGS and not to CFLAGS. Remember that CPPFLAGS is
+                dnl        reserved for both C and C++ compilers while CFLAGS is
+                dnl        intended as flags for C compiler only and CXXFLAGS for
+                dnl        C++ only !
+                CXXFLAGS="$CXXFLAGS -g3 -O0 -Wall -Wundef -Wno-ctor-dtor-privacy"
+                CFLAGS="$CFLAGS -g3 -O0 -Wall -Wundef"
+            else
+                CXXFLAGS="$CXXFLAGS -g0 -O2"
+                CFLAGS="$CFLAGS -g0 -O2"
+            fi
+        ])
+
+
+
+
+
+
+dnl =========================================================================================================
+dnl                                 SECTION D: messages to the user
+dnl =========================================================================================================
+
+dnl ---------------------------------------------------------------------------
+dnl AM_BOOLOPT_SUMMARY([name of the boolean variable to show summary for],
+dnl                   [what to print when var is 1],
+dnl                   [what to print when var is 0])
+dnl
+dnl Prints $2 when variable $1 == 1 and prints $3 when variable $1 == 0.
+dnl This macro mainly exists just to make configure.ac scripts more readable.
+dnl
+dnl NOTE: you need to use the [" my message"] syntax for 2nd and 3rd arguments
+dnl       if you want that M4 avoid to throw away the spaces prefixed to the
+dnl       argument value.
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_BOOLOPT_SUMMARY],
+        [
+        if [[ "x$$1" = "x1" ]]; then
+            echo $2
+        elif [[ "x$$1" = "x0" ]]; then
+            echo $3
+        else
+            echo "$1 is $$1"
+        fi
+    ])
+
+dnl same as AM_BOOLOPT_SUMMARY but takes 2 bool options
+AC_DEFUN([AM_2BOOLOPT_SUMMARY],
+        [
+        if [[ "x$$1" = "x1" -a "x$$2" = "x1" ]]; then
+            echo $3
+        elif [[ "x$$1" = "x0" -o "x$$2" = "x0" ]]; then
+            echo $4
+        else
+            echo "$1 is $$1; $2 is $$2"
+        fi
+    ])
+
+dnl same as AM_BOOLOPT_SUMMARY but takes 3 bool options
+AC_DEFUN([AM_3BOOLOPT_SUMMARY],
+        [
+        if [[ "x$$1" = "x1" -a "x$$2" = "x1" -a "x$$3" = "x1" ]]; then
+            echo $4
+        elif [[ "x$$1" = "x0" -o "x$$2" = "x0" -o "x$$3" = "x0" ]]; then
+            echo $5
+        else
+            echo "$1 is $$1; $2 is $$2; $3 is $$3"
+        fi
+    ])
+
+
+dnl ---------------------------------------------------------------------------
+dnl AM_WXPRESETS_SUMMARY_MSG
+dnl
+dnl Shows a summary message to the user about the WX_* variable contents.
+dnl This macro is used typically at the end of the configure script.
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_WXPRESETS_SUMMARY_MSG],
+    [
+        AM_BOOLOPT_SUMMARY([WX_DEBUG],   ["  - DEBUG build"],  ["  - RELEASE build"])
+        AM_BOOLOPT_SUMMARY([WX_UNICODE], ["  - UNICODE mode"], ["  - ANSI mode"])
+        AM_BOOLOPT_SUMMARY([WX_SHARED],  ["  - SHARED mode"],  ["  - STATIC mode"])
+        echo "  - VERSION: $WX_VERSION_FULL"
+        echo "  - PORT: $WX_PORT"
+    ])
+
+
+dnl ---------------------------------------------------------------------------
+dnl AM_WXPRESETS_SUMMARY_MSG_BEGIN, AM_WXPRESETS_SUMMARY_MSG_END
+dnl
+dnl Like AM_WXPRESETS_SUMMARY_MSG macro but these two macros also gives info 
+dnl about the configuration of the package which used the wxpresets.
+dnl
+dnl Typical usage:
+dnl    AM_WXPRESETS_SUMMARY_MSG_BEGIN
+dnl    echo "   - Package setting 1: $SETTING1"
+dnl    echo "   - Package setting 2: $SETTING1"
+dnl    ...
+dnl    AM_WXPRESETS_SUMMARY_MSG_END
+dnl
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([AM_WXPRESETS_SUMMARY_MSG_BEGIN],
+    [
+        echo
+        echo " ----------------------------------------------------------------"
+        echo "  Configuration for $PACKAGE_NAME $PACKAGE_VERSION successfully completed."
+        echo "  Summary of main configuration settings for $PACKAGE_NAME:"
+        AM_BOOLOPT_SUMMARY([DEBUG], ["  - DEBUG build"], ["  - RELEASE build"])
+        AM_BOOLOPT_SUMMARY([UNICODE], ["  - UNICODE mode"], ["  - ANSI mode"])
+        AM_BOOLOPT_SUMMARY([SHARED], ["  - SHARED mode"], ["  - STATIC mode"])
+    ])
+
+AC_DEFUN([AM_WXPRESETS_SUMMARY_MSG_END],
+    [
+        echo
+        echo "  The wxWidgets build which will be used by $PACKAGE_NAME $PACKAGE_VERSION"
+        echo "  has the following settings:"
+        AM_WXPRESETS_SUMMARY_MSG
+        echo
+        echo "  Now, just run make."
+        echo " ----------------------------------------------------------------"
+        echo
+    ])
+
+
Index: build/bakefiles/wxpresets/libsample/configure.in
--- /dev/null
+++ build/bakefiles/wxpresets/libsample/configure.in
@@ -0,0 +1,32 @@
+dnl Process this file with autoconf to produce a configure script.
+
+AC_PREREQ(2.59)
+
+AC_INIT([libsample],[1.2.5],[vslavik@fastmail.fm])
+
+AC_CONFIG_SRCDIR([util.cpp])
+
+
+dnl define all the wxWidgets-related options (i.e. the
+dnl --enable-debug/shared/unicode and the 
+dnl --with-gtk/msw/mac/motif, etc options)
+AM_WXPRESETS_OPTIONS
+
+dnl the AM_WXPRESETS_AND_STANDARD_CHECKS macro will search for the
+dnl best matching wxWidgets build (taking in count user's input)
+dnl and then set appropriately all the WX_* options
+AM_WXPRESETS_AND_STANDARD_CHECKS([2.8.0], [core])
+
+
+AC_BAKEFILE([m4_include(autoconf_inc.m4)])
+AC_CONFIG_FILES([
+         Makefile
+         ])
+
+AC_OUTPUT
+
+
+dnl show a nice summary of the chosen wx build to the user
+AM_WXPRESETS_SUMMARY_MSG_BEGIN
+AM_WXPRESETS_SUMMARY_MSG_END
+
Index: build/bakefiles/wxpresets/libsample/libsample.bkl
--- /dev/null
+++ build/bakefiles/wxpresets/libsample/libsample.bkl
@@ -0,0 +1,34 @@
+<?xml version="1.0" ?>
+<!-- $Id: minimal.bkl,v 1.1 2005/01/27 22:47:37 VS Exp $ -->
+
+<makefile>
+
+    <include file="presets/wx.bkl"/>
+
+
+    <!-- a typical nice feature which wxpresets make available to wx-based programs 
+         is to allow the user to build with different configurations the same project;
+         this is usually done defining the BUILDDIR as follows and then using the
+         <wxlike-libname> and <wxlike-dllname> 
+    -->
+    <set var="BUILDDIR">build$(WXLIBPOSTFIX)</set>
+
+    <!-- through the use of the 'wxbase' template, we'll get
+         the ability to compile against any wxWidgets build
+         and set required flags accordingly -->
+
+    <lib id="static" template="wx-lib,wxbase" cond="WX_SHARED=='0'">
+        <wxlike-libname prefix='sample'>test</wxlike-libname>
+        <sources>libsample.cpp</sources>
+    </lib>
+
+    <dll id="shared" template="wx,wxbase" cond="WX_SHARED=='1'">
+        <wxlike-dllname prefix='sample'>test</wxlike-dllname>
+        <sources>libsample.cpp</sources>
+        <define>WXMAKINGDLL_LIBSAMPLE</define>
+
+        <wx-lib>core</wx-lib>
+        <wx-lib>base</wx-lib>
+    </dll>
+
+</makefile>
Index: build/bakefiles/wxpresets/libsample/libsample.cpp
--- /dev/null
+++ build/bakefiles/wxpresets/libsample/libsample.cpp
@@ -0,0 +1,41 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        libsample.cpp
+// Purpose:     The source of a dummy sample wx-based library
+// Author:      Francesco Montorsi
+// Modified by:
+// Created:     26/11/06
+// RCS-ID:      $Id$
+// Copyright:   (c) Francesco Montorsi
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+// ============================================================================
+// declarations
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+// For compilers that support precompilation, includes "wx/wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+// for all others, include the necessary headers (this file is usually all you
+// need because it includes almost all "standard" wxWindows headers)
+#ifndef WX_PRECOMP
+    #include "wx/wx.h"
+#endif
+
+// ============================================================================
+// implementation
+// ============================================================================
+
+void MyUtilityFunction()
+{
+    wxPrintf(wxT("Hello world!\n"));
+    fflush(stdout);
+}
Index: build/bakefiles/wxpresets/presets/wx.bkl
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/bakefiles/wxpresets/presets/wx.bkl,v
retrieving revision 1.6
diff -bu2 -r1.6 build/bakefiles/wxpresets/presets/wx.bkl
--- build/bakefiles/wxpresets/presets/wx.bkl
+++ build/bakefiles/wxpresets/presets/wx.bkl
@@ -5,5 +5,83 @@
     Presets for building wxWidgets applications.
 
-    FIXME: docs
+    These presets provide you the following "public" interface:
+
+    OPTIONS:
+
+    - WX_* : used by these presets to let the user of the generated makefile choose
+             a wxWidgets build among those available; you can use them in your project
+             to e.g. build a target conditionally if WX_DEBUG is 0 or if WX_PORT is "msw".
+
+
+    VARIABLES:
+
+    - WXLIBPOSTFIX: contains the [u][d] string which typically results very useful when
+                    defining names of directories/files which should coexist with other
+                    builds with different configurations.
+
+
+    TEMPLATES:
+
+    - wx, wx-lib: templates to be used respectively for <dll>/<exe> and <lib> targets;
+                  they add to your target all the WXwidgets-related settings (e.g. the
+                  include and library search paths, the __WXDEBUG__ symbol, etc).
+
+    - wxbase: this template should be combined with one of "wx" or "wx-lib" templates
+              and will make your project build with the same unicode, debug & shared
+              configuration of the wxWidgets build selected using the WX_* options.
+              You typically want to build your project with the same wxWidgets debug
+              and Unicode flags because otherwise you may get ton of linking errors
+              (depending on the compiler and linker you're using).
+
+    - wxconsole: like 'wxbase' this template should be combined with one of "wx" or
+                 "wx-lib" templates when building console-only libraries or apps
+                 (adds the wxUSE_GUI=0 define).
+
+
+    TARGET TAGS:
+
+    - <wx-lib>: to define which wxWidgets libraries need to be linked to your project;
+                please note that you should use them in the right order or some linkers
+                will give out a lot of linking errors:
+
+                    <wx-lib>core</wx-lib>
+                    <wx-lib>base</wx-lib>
+
+                is good, but the viceversa is not (if lib A depends from lib B, then
+                lib A must be listed before B).
+                Also note that <wx-lib>base</wx-lib> must always be present and must
+                always be the last wx-lib tag of your target.
+
+    - <wx-all-libs>: a shortcut for all <wx-lib> tags at once; while this kills the
+                     "multi libraries build" logic, this tag is useful as a temporary
+                     solution or for those projects which really need all wxWidgets
+                     libraries.
+
+    - <wxlike-libname>,
+      <wxlike-dllname>: typically you'll want to have a build logic similar to the
+                        wxWidgets build logic which allows different builds to
+                        coexist without conflicts. These tags helps you to name your
+                        libraries using the same wxWidgets rules and thus avoid
+                        conflicts between libraries compiled in e.g. unicode, shared
+                        mode and e.g. those compiled in ANSI, shared mode.
+
+    - <wxlike-lib>: if you're building your library/application and you need to link
+                    both to wxWidgets and to another wx-based library, which in turn
+                    follow the wxWidgets naming conventions, then this tag is what you
+                    need to reference the wx-based additional library.
+
+    - <wxlike-libdirname>: if you're building a wxWidgets-based library, then you
+                           probably need to separe the output folder for the static
+                           build mode from the output folder used when building in
+                           shared mode; this tag sets the <dirname> using the same
+                           wxWidgets rules.
+
+
+    GLOBAL TAGS:
+
+    - <set-wxlike-builddir>: sets BUILDDIR using the naming rules used by wxWidgets;
+                             this helps to keep separed object files compiled with
+                             different settings.
+
 -->
 
@@ -13,7 +91,10 @@
     <!-- this variable identifies the version of the wx presets.
          this is changed only when major changes to wxpresets take place. -->
-    <set var="WX_PRESETS_VERSION">3</set>
+    <set var="WX_PRESETS_VERSION">4</set>
 
-    <!-- list of known libraries used by wx-lib tag defined in wx_unix.bkl and wx_win32.bkl -->
+    <!-- list of known libraries used by wx-lib tag defined in wx_unix.bkl and wx_win32.bkl
+         VERY IMPORTANT: when updating this list also update the <wx-lib> and <wx-all-libs>
+                         tag definitions.
+    -->
     <set var="LIB_LIST">
         base core net xml odbc xrc html adv media gl dbgrid qa aui richtext
@@ -21,6 +102,9 @@
 
     <!-- NOTE: refer to the NET contrib using NETUTILS instead of NET
-               (which is already in LIB_LIST) -->
-    <set var="CONTRIBLIB_LIST">animate applet deprecated fl foldbar gizmos mmedia netutils ogl plot stc svg</set>
+               (which is already in LIB_LIST)
+    -->
+    <set var="CONTRIBLIB_LIST">
+        applet deprecated fl foldbar gizmos mmedia netutils ogl plot stc svg
+    </set>
     <set var="ALLLIB_LIST">$(LIB_LIST) $(CONTRIBLIB_LIST)</set>
 
@@ -34,4 +118,98 @@
 
 
+
+    <!--                        OPTIONS                             -->
+    <!--                                                            -->
+    <!--    These are essentially the configurations you            -->
+    <!--    want in bakefile.                                       -->
+    <!--                                                            -->
+    <!--    In MSVC these are the different build                   -->
+    <!--    configurations you can have (in the build menu),        -->
+    <!--    and in autoconf is enabled with enable-xxx=xx.          -->
+    <!--    For other compilers a separate configuration            -->
+    <!--    file is created (such as config.gcc on gcc)             -->
+    <!--    which has several options a user can modify.            -->
+    <!--                                                            -->
+    <!--    Note that the above only happens if an option           -->
+    <!--    is not constant, i.e. if it cannot be determined        -->
+    <!--    by bakefile itself.                                     -->
+    <!--    Also note that for 'autoconf' format these options      -->
+    <!--    are only useful when used together with wxpresets.m4    -->
+    <!--    macro file which contains macros for detecting the      -->
+    <!--    option values for wx-based projects. See wxpresets.m4   -->
+    <!--    comments for more info.                                 -->
+
+
+    <!-- Presets for limited dmars make.exe format: -->
+    <if cond="FORMAT=='dmars'">
+        <set var="WX_UNICODE">0</set>
+        <set var="WX_DEBUG">1</set>
+        <set var="WX_SHARED">0</set>
+    </if>
+
+
+    <!--    This is a standard option that determines               -->
+    <!--    whether the user wants to build this library as         -->
+    <!--    a dll or as a static library.                           -->
+    <if cond="not isdefined('WX_SHARED')">
+        <set var="WX_SHARED_DEFAULT" overwrite="0">0</set>
+        <option name="WX_SHARED">
+            <values>0,1</values>
+            <values-description>Static,DLL</values-description>
+            <default-value>$(WX_SHARED_DEFAULT)</default-value>
+            <description>
+                Use DLL build of wx library to use?
+            </description>
+        </option>
+    </if>
+
+    <!-- Configuration for building the bakefile with               -->
+    <!-- unicode strings or not (unicode or ansi).                  -->
+    <if cond="not isdefined('WX_UNICODE')">
+        <set var="WX_UNICODE_DEFAULT" overwrite="0">0</set>
+        <option name="WX_UNICODE">
+            <values>0,1</values>
+            <values-description>ANSI,Unicode</values-description>
+            <default-value>$(WX_UNICODE_DEFAULT)</default-value>
+            <description>
+                Compile Unicode build of wxWidgets?
+            </description>
+        </option>
+    </if>
+
+    <if cond="not isdefined('WX_DEBUG')">
+        <set var="WX_DEBUG_DEFAULT" overwrite="0">1</set>
+        <option name="WX_DEBUG">
+            <values>0,1</values>
+            <values-description>Release,Debug</values-description>
+            <default-value>$(WX_DEBUG_DEFAULT)</default-value>
+            <description>
+                Use debug build of wxWidgets (define __WXDEBUG__)?
+            </description>
+        </option>
+    </if>
+
+    <if cond="not isdefined('WX_VERSION')">
+        <set var="WX_VERSION_DEFAULT" overwrite="0">28</set>
+        <option name="WX_VERSION">
+            <default-value>$(WX_VERSION_DEFAULT)</default-value>
+            <description>
+                Version of the wx library to build against.
+            </description>
+        </option>
+    </if>
+
+    <if cond="not isdefined('WX_MONOLITHIC')">
+        <set var="WX_MONOLITHIC_DEFAULT" overwrite="0">0</set>
+        <option name="WX_MONOLITHIC">
+            <values>0,1</values>
+            <values-description>Multilib,Monolithic</values-description>
+            <default-value>$(WX_MONOLITHIC_DEFAULT)</default-value>
+            <description>
+                Use monolithic build of wxWidgets?
+            </description>
+        </option>
+    </if>
+
     <!-- The directory where wxWidgets is installed: -->
     <if cond="not isdefined('WX_DIR')">
@@ -47,4 +225,19 @@
 
 
+    <!--                     HELPER VARIABLES                       -->
+    <!--                                                            -->
+
+    <!--    These are handy ways of dealing with the                -->
+    <!--    extensions in the library names of the                  -->
+    <!--    wxWindows library.                                      -->
+    <set var="WXLIBPOSTFIX">
+        <if cond="WX_DEBUG=='1' and WX_UNICODE=='1'">ud</if>
+        <if cond="WX_DEBUG=='1' and WX_UNICODE=='0'">d</if>
+        <if cond="WX_DEBUG=='0' and WX_UNICODE=='1'">u</if>
+    </set>
+
+
+
+
     <!-- this is just a wrapper that includes the real implementation: -->
 
@@ -65,3 +258,141 @@
     </if>
 
+
+
+
+    <!--                     HIGH-LEVEL TEMPLATE                    -->
+    <!--                                                            -->
+
+    <!-- Combine 'wxbase' with 'wx' or 'wx-lib' templates to have your
+         project build in the same configuration used by the selected
+         wxWidgets build -->
+    <template id="wxbase">
+        <if cond="FORMAT!='autoconf'">
+            <!-- WX_SHARED-dependent -->
+            <define>
+                $(substituteFromDict(WX_SHARED,{'1':'WXUSINGDLL','0':''}))
+            </define>
+
+            <!-- WX_DEBUG-dependent -->
+            <optimize>
+                $(substituteFromDict(WX_DEBUG,{'1':'off','0':'speed'}))
+            </optimize>
+            <debug-info>
+                $(substituteFromDict(WX_DEBUG,{'1':'on','0':'off'}))
+            </debug-info>
+        </if>
+    </template>
+
+    <!-- Combine 'wxconsole' with 'wx' or 'wx-lib' templates when you
+         want to build console wx-based applications -->
+    <template id="wxconsole">
+        <define>wxUSE_GUI=0</define>
+        <!-- cannot put <app-type>console</app-type> here since this template
+             could be used also for libraries -->
+    </template>
+
+
+
+
+
+
+
+    <!--                       UTILITY TAGS                         -->
+    <!--                                                            -->
+
+    <!-- A simple tag which acts as shortcut for including in the list of libraries to link
+         *all* wxWidgets libraries (even those not built by default!) in the right order. -->
+    <define-tag name="wx-all-libs" rules="exe,dll,module">
+        <wx-lib>richtext</wx-lib>
+        <wx-lib>aui</wx-lib>
+        <wx-lib>qa</wx-lib>
+        <wx-lib>dbgrid</wx-lib>
+        <wx-lib>gl</wx-lib>
+        <wx-lib>odbc</wx-lib>
+        <wx-lib>xrc</wx-lib>
+        <wx-lib>html</wx-lib>
+        <wx-lib>media</wx-lib>
+        <wx-lib>adv</wx-lib>
+        <wx-lib>net</wx-lib>
+        <wx-lib>xml</wx-lib>
+        <wx-lib>core</wx-lib>
+        <wx-lib>base</wx-lib>
+    </define-tag>
+
+    <!-- private helper tag -->
+    <define-tag name="__setlibname" rules="lib,dll,module">
+        <set var="__temp">
+            <if cond="FORMAT!='autoconf' and FORMAT!='gnu'">
+                $(attributes['prefix'])_$(WX_PORT)$(WX_VERSION)$(WXLIBPOSTFIX)_$(value)
+            </if>
+            <if cond="FORMAT=='autoconf' or FORMAT=='gnu'">
+                $(attributes['prefix'])_$(WX_PORT)$(WXLIBPOSTFIX)_$(value)-$(WX_VERSION_MAJOR).$(WX_VERSION_MINOR)
+            </if>
+        </set>
+    </define-tag>
+
+    <!-- A simple tag which helps you to define a library name using the same rules used
+         by wxWidgets. Use the 'prefix' attribute to add your lib's prefix.
+         E.g.:
+             <wxlike-libname prefix='mylib'>module1</wxlike-libname>
+             <wxlike-libname prefix='mylib'>module2</wxlike-libname>
+    -->
+    <define-tag name="wxlike-libname" rules="lib">
+        <__setlibname prefix="$(attributes['prefix'])">$(value)</__setlibname>
+        <libname>$(__temp)</libname>
+    </define-tag>
+
+    <!-- exactly like <wxlike-libname> but this one sets the DLL name (and the DLL lib import name)
+         and thus must be used only inside a <dll> target...
+    -->
+    <define-tag name="wxlike-dllname" rules="dll,module">
+        <__setlibname prefix="$(attributes['prefix'])">$(value)</__setlibname>
+        <libname>$(__temp)</libname>
+        <dllname>$(__temp)</dllname>
+    </define-tag>
+
+    <!-- Links against a library which uses the same wxWidgets conventions.
+    -->
+    <define-tag name="wxlike-lib" rules="exe,lib,dll,module">
+        <__setlibname prefix="$(attributes['prefix'])">$(value)</__setlibname>
+        <sys-lib>$(__temp)</sys-lib>
+    </define-tag>
+
+    <!-- Sets as output folder for the generated lib/dll a directory
+         called "lib/$(COMPILER)_lib|dll", just like wxWidgets does.
+         This makes it possible to keep separed the libraries compiled with
+         different compilers and with a different value for WX_SHARED.
+    -->
+    <define-tag name="wxlike-libdirname" rules="lib,dll">
+        <if cond="FORMAT!='autoconf'">
+            <set var="_DIRNAME_SHARED_SUFFIX">
+                <if cond="WX_SHARED=='0'">lib</if>
+                <if cond="WX_SHARED=='1'">dll</if>
+            </set>
+
+            <dirname>lib/$(COMPILER)_$(_DIRNAME_SHARED_SUFFIX)</dirname>
+        </if>
+        <if cond="FORMAT=='autoconf'">
+            <dirname>lib</dirname>
+        </if>
+    </define-tag>
+
+    <!-- Sets the BUILDDIR variable using the same rules used by wxWidgets itself.
+         This makes it possible to keep separed the object files compiled with
+         different configuration settings.
+    -->
+    <define-global-tag name="set-wxlike-builddir">
+        <!-- note that the builddir for autoconf should always be '.' -->
+        <if cond="FORMAT!='autoconf'">
+            <set var="_BUILDDIR_SHARED_SUFFIX">
+                <if cond="WX_SHARED=='0'"></if>
+                <if cond="WX_SHARED=='1'">dll</if>
+            </set>
+
+            <set var="BUILDDIR">
+                $(COMPILER)$(WX_PORT)_$(WXLIBPOSTFIX)$(_BUILDDIR_SHARED_SUFFIX)
+            </set>
+        </if>
+    </define-global-tag>
+
 </makefile>
Index: build/bakefiles/wxpresets/presets/wx_unix.bkl
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/bakefiles/wxpresets/presets/wx_unix.bkl,v
retrieving revision 1.8
diff -bu2 -r1.8 build/bakefiles/wxpresets/presets/wx_unix.bkl
--- build/bakefiles/wxpresets/presets/wx_unix.bkl
+++ build/bakefiles/wxpresets/presets/wx_unix.bkl
@@ -6,13 +6,13 @@
 See wx.bkl for platform-independent notes.
 
-Usage:
-    Options WX_CPPFLAGS, WX_CFLAGS, WX_CXXFLAGS, WX_LIBS are defined.
-
-
 Format-specific notes:
 
 * autoconf:
         Beware that you have to use AM_OPTIONS_WXCONFIG and
-        AM_PATH_WXCONFIG in your configure.in!
+        AM_PATH_WXCONFIG in your configure.in to get at least the
+        WX_CPPFLAGS, WX_CFLAGS, WX_CXXFLAGS, WX_LIBS option values defined.
+        To detect the WX_* option values typically you also want to use
+        the AM_WXPRESETS_OPTIONS and AM_WXPRESETS_CHECKS macros
+        (see wxpresets.m4 for more info).
 
 -->
@@ -22,9 +22,26 @@
 
     <!-- ============================================================== -->
+    <!--                           Options                              -->
+    <!-- ============================================================== -->
+
+    <!-- on Unix the WX_PORT is not a fixed value but rather an option -->
+    <if cond="not isdefined('WX_PORT')">
+        <set var="WX_PORT_DEFAULT" overwrite="0">gtk2</set>
+        <option name="WX_PORT">
+            <values>gtk1,gtk2,msw,x11,motif,mgl,mac</values>
+            <default-value>$(WX_PORT_DEFAULT)</default-value>
+            <description>
+                Port of the wx library to build against
+            </description>
+        </option>
+    </if>
+
+
+
+    <!-- ============================================================== -->
     <!--                           Autoconf                             -->
     <!-- ============================================================== -->
 
     <if cond="FORMAT=='autoconf'">
-        <!-- Autoconf backend is simplicity itself thanks to wx-config... -->
         <option name="WX_CFLAGS"/>
         <option name="WX_CXXFLAGS"/>
@@ -32,5 +49,25 @@
         <option name="WX_LIBS"/>
         <option name="WX_RESCOMP"/>
+        <option name="WX_VERSION_MAJOR"/>
+        <option name="WX_VERSION_MINOR"/>
+
+        <!-- wxpresets.m4 macros will detect all WX_* options defined above -->
+
+
+        <!-- VERY IMPORTANT: <wx-lib>base</wx-lib> must be the last wx-lib tag
+                            in all your bakefiles !!
+        -->
+        <define-tag name="wx-lib" rules="exe,dll,module">
+            <if cond="value=='base'">
+                <!-- all wx-dependent libraries should have been already listed
+                     thus we can now add WX_LIBS to the linker line -->
+                <ldlibs>$(WX_LIBS)</ldlibs>
     </if>
+            <if cond="value not in ALLLIB_LIST.split()">
+                <error>Unknown wxWidgets library given in the wx-lib tag</error>
+            </if>
+        </define-tag>
+    </if>
+
 
     <!-- ============================================================== -->
@@ -44,24 +81,83 @@
             <description>Location and arguments of wx-config script</description>
         </option>
-        <option name="WX_CFLAGS">
-            <default-value>`$(DOLLAR)(WX_CONFIG) --cflags`</default-value>
-            <description>C flags to use with wxWidgets code</description>
-        </option>
-        <option name="WX_CXXFLAGS">
-            <default-value>`$(DOLLAR)(WX_CONFIG) --cxxflags`</default-value>
-            <description>C++ flags to use with wxWidgets code</description>
-        </option>
-        <option name="WX_CPPFLAGS">
-            <default-value>`$(DOLLAR)(WX_CONFIG) --cppflags`</default-value>
-            <description>C preprocessor flags to use with wxWidgets code</description>
-        </option>
-        <option name="WX_RESCOMP">
-            <default-value>`$(DOLLAR)(WX_CONFIG) --rescomp`</default-value>
-            <description>wxWidgets resource compiler and flags</description>
-        </option>
+
+        <!-- Using the GNU format creates a configurable makefile just like
+             a win32 makefile: i.e. a makefile where you can select the wanted
+             wxWidgets build using the WX_* options
+        -->
+        <set var="WX_CONFIG_DEBUG_FLAG">
+            <if cond="WX_DEBUG=='0'">--debug=no</if>
+            <if cond="WX_DEBUG=='1'">--debug=yes</if>
+        </set>
+        <set var="WX_CONFIG_UNICODE_FLAG">
+            <if cond="WX_UNICODE=='0'">--unicode=no</if>
+            <if cond="WX_UNICODE=='1'">--unicode=yes</if>
+        </set>
+        <set var="WX_CONFIG_SHARED_FLAG">
+            <if cond="WX_SHARED=='0'">--static=yes</if>
+            <if cond="WX_SHARED=='1'">--static=no</if>
+        </set>
+        <set var="WX_CONFIG_SHARED_FLAG">
+            <if cond="WX_SHARED=='0'">--static=yes</if>
+            <if cond="WX_SHARED=='1'">--static=no</if>
+        </set>
+        <set var="WX_CONFIG_PORT_FLAG">
+            --toolkit=$(WX_PORT)
+        </set>
+
+        <set var="WX_CONFIG_FLAGS">
+            $(WX_CONFIG_DEBUG_FLAG) $(WX_CONFIG_UNICODE_FLAG) $(WX_CONFIG_SHARED_FLAG) $(WX_CONFIG_PORT_FLAG)
+        </set>
+
+        <set var="WX_CFLAGS">`$(DOLLAR)(WX_CONFIG) --cflags $(WX_CONFIG_FLAGS)`</set>
+        <set var="WX_CXXFLAGS">`$(DOLLAR)(WX_CONFIG) --cxxflags $(WX_CONFIG_FLAGS)`</set>
+        <set var="WX_CPPFLAGS">`$(DOLLAR)(WX_CONFIG) --cppflags $(WX_CONFIG_FLAGS)`</set>
+        <set var="WX_RESCOMP">`$(DOLLAR)(WX_CONFIG) --rescomp $(WX_CONFIG_FLAGS)`</set>
+
+        <!--
+            VERY IMPORTANT: before starting to build all targets of the generated makefile,
+                            we need to check if the selected wxWidgets build exists; we do
+                            that simply creating the following target; if it fails the make
+                            program will halt with the wx-config error message...
+        -->
+        <action id="test_for_selected_wxbuild">
+            <dependency-of>all</dependency-of>
+
+            <!-- Use @ to hide to the user that we're running wx-config... -->
+            <command>@$(DOLLAR)(WX_CONFIG) $(WX_CONFIG_FLAGS)</command>
+        </action>
+
+        <!-- We need to set the WX_VERSION_MAJOR and WX_VERSION_MINOR which are used 
+             in the <wxlike-libname/> or <wxlike-dllname/> tags.
+             Luckily we have the power of the Unix shell at our hands!
+
+             NOTE: we need to set these as make variables since they go in the name of
+                   the targets!
+        -->
+        <set var="WX_VERSION_MAJOR" make_var="1">$(DOLLAR)(shell echo $(DOLLAR)(WX_VERSION) | cut -c1,1)</set>
+        <set var="WX_VERSION_MINOR" make_var="1">$(DOLLAR)(shell echo $(DOLLAR)(WX_VERSION) | cut -c2,2)</set>
 
         <!-- we need this but the trick used in default-values above
              prevents bakefile from detecting it: -->
-        <set var="FORMAT_OUTPUT_VARIABLES" append="1">WX_CONFIG</set>
+        <set var="FORMAT_OUTPUT_VARIABLES" append="1">WX_CONFIG WX_VERSION</set>
+
+
+        <!-- VERY IMPORTANT: <wx-lib>base</wx-lib> must be the last wx-lib tag
+                            in all your bakefiles !!
+        -->
+        <define-tag name="wx-lib" rules="exe,dll,module">
+            <if cond="value=='base'">
+                <!-- all wx libraries should have been already specified, thus
+                    $(__liblist) should contain the full list... -->
+                <set var="__liblist" append="1">base</set>
+                <ldlibs>`$(WX_CONFIG) $(WX_CONFIG_FLAGS) --libs $(','.join(__liblist.split()))`</ldlibs>
+            </if>
+            <if cond="value!='base'">
+                <set var="__liblist" append="1">$(value)</set>
+            </if>
+            <if cond="value not in ALLLIB_LIST.split()">
+                <error>Unknown wxWidgets library given in the wx-lib tag</error>
+            </if>
+        </define-tag>
     </if>
 
@@ -111,26 +207,3 @@
     </template>
 
-    <!-- VERY IMPORTANT: <wx-lib>base</wx-lib> must be the last wx-lib tag
-                         in all your bakefiles !!
-    -->
-    <define-tag name="wx-lib" rules="exe,dll,module">
-        <if cond="FORMAT=='autoconf' and value=='base'">
-            <!-- all wx-dependent libraries should have been already listed
-                 thus we can now add WX_LIBS to the linker line -->
-            <ldlibs>$(WX_LIBS)</ldlibs>
-        </if>
-        <if cond="FORMAT=='gnu' and value=='base'">
-            <!-- all wx libraries should have been already specified, thus
-                  $(__liblist) should contain the full list... -->
-            <set var="__liblist" append="1">base</set>
-            <ldlibs>`$(WX_CONFIG) --libs $(','.join(__liblist.split()))`</ldlibs>
-        </if>
-        <if cond="FORMAT=='gnu' and value!='base'">
-            <set var="__liblist" append="1">$(value)</set>
-        </if>
-        <if cond="value not in ALLLIB_LIST.split()">
-            <error>Unknown wxWidgets library given in the wx-lib tag</error>
-        </if>
-    </define-tag>
-
 </makefile>
Index: build/bakefiles/wxpresets/presets/wx_win32.bkl
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/bakefiles/wxpresets/presets/wx_win32.bkl,v
retrieving revision 1.27
diff -bu2 -r1.27 build/bakefiles/wxpresets/presets/wx_win32.bkl
--- build/bakefiles/wxpresets/presets/wx_win32.bkl
+++ build/bakefiles/wxpresets/presets/wx_win32.bkl
@@ -11,19 +11,7 @@
 
 
-<!--
-
-FIXME: this template has (at least) the following bugs:
-
- * it's MSW-only, the port is assumed to be wxMSW unconditionally
-
- * multiple wx configurations (CFG variable set when building the
-   library) are not supported
-
--->
-
-<!-- makefile tag signifies the beginning of the bakefile           -->
 <makefile>
 
-    <requires version="0.1.5"/>
+    <requires version="0.2.1"/>
 
     <!--                        OPTIONS                             -->
@@ -42,75 +30,10 @@
     <!--    is not constant, i.e. if it cannot be determined        -->
     <!--    by bakefile itself.                                     -->
+    <!--    Also note that for 'autoconf' format these options      -->
+    <!--    are only useful when used together with wxpresets.m4    -->
+    <!--    macro file which contains macros for detecting the      -->
+    <!--    option values for wx-based projects. See wxpresets.m4   -->
+    <!--    comments for more info.    -->
 
-    <!-- Presets for limited dmars make.exe format: -->
-    <if cond="FORMAT=='dmars'">
-        <set var="WX_UNICODE">0</set>
-        <set var="WX_DEBUG">1</set>
-        <set var="WX_SHARED">0</set>
-    </if>
-
-
-    <!--    This is a standard option that determines               -->
-    <!--    whether the user wants to build this library as         -->
-    <!--    a dll or as a static library.                           -->
-    <if cond="not isdefined('WX_SHARED')">
-        <set var="WX_SHARED_DEFAULT" overwrite="0">0</set>
-        <option name="WX_SHARED">
-            <values>0,1</values>
-            <values-description>,DLL</values-description>
-            <default-value>$(WX_SHARED_DEFAULT)</default-value>
-            <description>
-                Use DLL build of wx library to use?
-            </description>
-        </option>
-    </if>
-
-    <!-- Configuration for building the bakefile with               -->
-    <!-- unicode strings or not (unicode or ansi).                  -->
-    <if cond="not isdefined('WX_UNICODE')">
-        <set var="WX_UNICODE_DEFAULT" overwrite="0">0</set>
-        <option name="WX_UNICODE">
-            <values>0,1</values>
-            <values-description>,Unicode</values-description>
-            <default-value>$(WX_UNICODE_DEFAULT)</default-value>
-            <description>
-                Compile Unicode build of wxWidgets?
-            </description>
-        </option>
-    </if>
-
-    <if cond="not isdefined('WX_DEBUG')">
-        <set var="WX_DEBUG_DEFAULT" overwrite="0">1</set>
-        <option name="WX_DEBUG">
-            <values>0,1</values>
-            <values-description>Release,Debug</values-description>
-            <default-value>$(WX_DEBUG_DEFAULT)</default-value>
-            <description>
-                Use debug build of wxWidgets (define __WXDEBUG__)?
-            </description>
-        </option>
-    </if>
-
-    <if cond="not isdefined('WX_VERSION')">
-        <set var="WX_VERSION_DEFAULT" overwrite="0">28</set>
-        <option name="WX_VERSION">
-            <default-value>$(WX_VERSION_DEFAULT)</default-value>
-            <description>
-                Version of the wx library to build against.
-            </description>
-        </option>
-    </if>
-
-    <if cond="not isdefined('WX_MONOLITHIC')">
-        <set var="WX_MONOLITHIC_DEFAULT" overwrite="0">0</set>
-        <option name="WX_MONOLITHIC">
-            <values>0,1</values>
-            <values-description>Multilib,Monolithic</values-description>
-            <default-value>$(WX_MONOLITHIC_DEFAULT)</default-value>
-            <description>
-                Use monolithic build of wxWidgets?
-            </description>
-        </option>
-    </if>
 
 
@@ -136,9 +59,4 @@
     <!--    extensions in the library names of the                  -->
     <!--    wxWindows library.                                      -->
-    <set var="WXLIBPOSTFIX">
-        <if cond="WX_DEBUG=='1' and WX_UNICODE=='1'">ud</if>
-        <if cond="WX_DEBUG=='1' and WX_UNICODE=='0'">d</if>
-        <if cond="WX_DEBUG=='0' and WX_UNICODE=='1'">u</if>
-    </set>
     <set var="WX3RDPARTYLIBPOSTFIX">
         <if cond="WX_DEBUG=='1'">d</if>
@@ -154,9 +72,12 @@
     </set>
 
-    <set var="WXPORT">
+    <!-- under Unix this is an option (detected at configure-time);
+         under Windows this is not an user option! -->
+    <set var="WX_PORT">
         <if cond="FORMAT=='msevc4prj'">wince</if>
         <if cond="FORMAT!='msevc4prj'">msw</if>
     </set>
-    <set var="WXLIBINCLUDE">$(WXLIBPATH)$(DIRSEP)$(WXPORT)$(WXLIBPOSTFIX)</set>
+
+    <set var="WXLIBINCLUDE">$(WXLIBPATH)$(DIRSEP)$(WX_PORT)$(WXLIBPOSTFIX)</set>
 
 
@@ -174,93 +95,63 @@
             monolithic library
         -->
-        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)</if>
-        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d</if>
-        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u</if>
-        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud</if>
+        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WX_PORT)$(WX_VERSION)</if>
+        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WX_PORT)$(WX_VERSION)d</if>
+        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WX_PORT)$(WX_VERSION)u</if>
+        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WX_PORT)$(WX_VERSION)ud</if>
     </set>
 
+
     <!--   Libraries whose name is prefixed with 'wxbase'            -->
-    <set var="WXLIB_NET_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wxbase$(WX_VERSION)_net</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wxbase$(WX_VERSION)d_net</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wxbase$(WX_VERSION)u_net</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wxbase$(WX_VERSION)ud_net</if>
-    </set>
-    <set var="WXLIB_XML_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wxbase$(WX_VERSION)_xml</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wxbase$(WX_VERSION)d_xml</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wxbase$(WX_VERSION)u_xml</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wxbase$(WX_VERSION)ud_xml</if>
-    </set>
-    <set var="WXLIB_ODBC_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wxbase$(WX_VERSION)_odbc</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wxbase$(WX_VERSION)d_odbc</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wxbase$(WX_VERSION)u_odbc</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wxbase$(WX_VERSION)ud_odbc</if>
+    <define-global-tag name="define-wxbase-lib-name">
+        <set var="WXLIB_$(value.upper())_NAME">
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">
+                wxbase$(WX_VERSION)_$(value)
+            </if>
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">
+                wxbase$(WX_VERSION)d_$(value)
+            </if>
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">
+                wxbase$(WX_VERSION)u_$(value)
+            </if>
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">
+                wxbase$(WX_VERSION)ud_$(value)
+            </if>
     </set>
+    </define-global-tag>
 
-    <!--   Libraries whose name is prefixed with 'wx' only          -->
-    <set var="WXLIB_CORE_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_core</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_core</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_core</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_core</if>
-    </set>
-    <set var="WXLIB_MEDIA_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_media</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_media</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_media</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_media</if>
-    </set>
-    <set var="WXLIB_XRC_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_xrc</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_xrc</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_xrc</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_xrc</if>
-    </set>
-    <set var="WXLIB_HTML_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_html</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_html</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_html</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_html</if>
-    </set>
-    <set var="WXLIB_ADV_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_adv</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_adv</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_adv</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_adv</if>
-    </set>
-    <set var="WXLIB_QA_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_qa</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_qa</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_qa</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_qa</if>
-    </set>
-    <set var="WXLIB_DBGRID_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_dbgrid</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_dbgrid</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_dbgrid</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_dbgrid</if>
-    </set>
-    <set var="WXLIB_GL_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_gl</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_gl</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_gl</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_gl</if>
-    </set>
-    <set var="WXLIB_AUI_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_aui</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_aui</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_aui</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_aui</if>
-    </set>
-    <set var="WXLIB_RICHTEXT_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_richtext</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_richtext</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_richtext</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_richtext</if>
-    </set>
+    <define-wxbase-lib-name>net</define-wxbase-lib-name>
+    <define-wxbase-lib-name>xml</define-wxbase-lib-name>
+    <define-wxbase-lib-name>odbc</define-wxbase-lib-name>
 
 
+    <!--   Libraries whose name is prefixed with 'wx' only          -->
+    <define-global-tag name="define-wxlib-name">
+        <set var="WXLIB_$(value.upper())_NAME">
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">
+                wx$(WX_PORT)$(WX_VERSION)_$(value)
+            </if>
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">
+                wx$(WX_PORT)$(WX_VERSION)d_$(value)
+            </if>
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">
+                wx$(WX_PORT)$(WX_VERSION)u_$(value)
+            </if>
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">
+                wx$(WX_PORT)$(WX_VERSION)ud_$(value)
+            </if>
+        </set>
+    </define-global-tag>
+
+    <define-wxlib-name>core</define-wxlib-name>
+    <define-wxlib-name>media</define-wxlib-name>
+    <define-wxlib-name>xrc</define-wxlib-name>
+    <define-wxlib-name>html</define-wxlib-name>
+    <define-wxlib-name>adv</define-wxlib-name>
+    <define-wxlib-name>qa</define-wxlib-name>
+    <define-wxlib-name>dbgrid</define-wxlib-name>
+    <define-wxlib-name>gl</define-wxlib-name>
+    <define-wxlib-name>aui</define-wxlib-name>
+    <define-wxlib-name>richtext</define-wxlib-name>
+
 
 
@@ -307,5 +198,5 @@
              (which always have the same name, regardless of WX_MONOLITHIC value) -->
         <if cond="value in CONTRIBLIB_LIST.split()">
-            <sys-lib>wx$(WXPORT)$(WX_VERSION)$(WXLIBPOSTFIX)_$(value)</sys-lib>
+            <sys-lib>wx$(WX_PORT)$(WX_VERSION)$(WXLIBPOSTFIX)_$(value)</sys-lib>
         </if>
 
@@ -398,3 +289,31 @@
     </template>
 
+    <if cond="FORMAT_SUPPORTS_ACTIONS=='1'">
+
+        <!--
+            VERY IMPORTANT: before starting to build all targets of the generated makefile,
+                            we need to check if the selected wxWidgets build exists; we do
+                            that simply creating the following target; if it fails the make
+                            program will halt printing the following nice error message...
+                            (much better than the 'could not find wx/*.h file')
+        -->
+        <action id="test_for_selected_wxbuild">
+            <dependency-of>all</dependency-of>
+
+            <!-- the @ is to hide these actions from the user -->
+            <command>
+                @if not exist $(WX_DIR)$(WXLIBINCLUDE)$(DIRSEP)wx$(DIRSEP)setup.h \
+                    echo ----------------------------------------------------------------------------
+                @if not exist $(WX_DIR)$(WXLIBINCLUDE)$(DIRSEP)wx$(DIRSEP)setup.h \
+                    echo Selected wxWidgets build is not available!
+                @if not exist $(WX_DIR)$(WXLIBINCLUDE)$(DIRSEP)wx$(DIRSEP)setup.h \
+                    echo Please use the options prefixed with WX_ to select another wxWidgets build.
+                @if not exist $(WX_DIR)$(WXLIBINCLUDE)$(DIRSEP)wx$(DIRSEP)setup.h \
+                    echo ----------------------------------------------------------------------------
+                @if not exist $(WX_DIR)$(WXLIBINCLUDE)$(DIRSEP)wx$(DIRSEP)setup.h \
+                    exit 1
+            </command>
+        </action>
+    </if>
+
 </makefile>
Index: build/bakefiles/wxpresets/sample/minimal.bkl
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/bakefiles/wxpresets/sample/minimal.bkl,v
retrieving revision 1.1
diff -bu2 -r1.1 build/bakefiles/wxpresets/sample/minimal.bkl
--- build/bakefiles/wxpresets/sample/minimal.bkl
+++ build/bakefiles/wxpresets/sample/minimal.bkl
@@ -0,0 +1,22 @@
+<?xml version="1.0" ?>
+<!-- $Id: minimal.bkl,v 1.1 2005/01/27 22:47:37 VS Exp $ -->
+
+<makefile>
+
+    <include file="presets/wx.bkl"/>
+
+    <exe id="minimal" template="wx">
+        <app-type>gui</app-type>
+
+        <!-- this sample builds always in debug mode; if you have
+             compiled wxWidgets in release mode, you'll get link errors! -->
+        <debug-info>on</debug-info>
+        <runtime-libs>dynamic</runtime-libs>
+
+        <sources>minimal.cpp</sources>
+
+        <wx-lib>core</wx-lib>
+        <wx-lib>base</wx-lib>
+    </exe>
+
+</makefile>

 	  	 
