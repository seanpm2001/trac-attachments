Index: wxwin.m4
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/wxwin.m4,v
retrieving revision 1.19
diff -bu2 -r1.19 wxwin.m4
--- wxwin.m4
+++ wxwin.m4
@@ -1,3 +1,39 @@
 dnl ---------------------------------------------------------------------------
+dnl Author:          wxWidgets development team,
+dnl                  Francesco Montorsi,
+dnl                  Bob McCown (Mac-testing)
+dnl Creation date:   24/11/2001
+dnl RCS-ID:          $Id$
+dnl ---------------------------------------------------------------------------
+
+dnl ===========================================================================
+dnl Table of Contents of this macro file:
+dnl -------------------------------------
+dnl
+dnl SECTION A: wxWidgets main macros
+dnl  - WX_CONFIG_OPTIONS
+dnl  - WX_CONFIG_CHECK
+dnl  - WXRC_CHECK
+dnl  - WX_STANDARD_OPTIONS
+dnl  - WX_CONVERT_STANDARD_OPTIONS_TO_WXCONFIG_FLAGS
+dnl  - WX_DETECT_STANDARD_OPTION_VALUES
+dnl
+dnl SECTION B: wxWidgets-related utilities
+dnl  - WX_LIKE_LIBNAME
+dnl  - WX_ARG_ENABLE_YESNOAUTO
+dnl  - WX_ARG_WITH_YESNOAUTO
+dnl
+dnl SECTION C: messages to the user
+dnl  - WX_STANDARD_OPTIONS_SUMMARY_MSG
+dnl  - WX_STANDARD_OPTIONS_SUMMARY_MSG_BEGIN
+dnl  - WX_STANDARD_OPTIONS_SUMMARY_MSG_END
+dnl  - WX_BOOLOPT_SUMMARY
+dnl
+dnl The special "WX_DEBUG_CONFIGURE" variable can be set to 1 to enable extra
+dnl debug output on stdout from these macros.
+dnl ===========================================================================
+
+
+dnl ---------------------------------------------------------------------------
 dnl Macros for wxWidgets detection. Typically used in configure.in as:
 dnl
@@ -5,8 +41,8 @@
 dnl     AC_ARG_WITH(...)
 dnl        ...
-dnl     AM_OPTIONS_WXCONFIG
+dnl     WX_CONFIG_OPTIONS
 dnl        ...
 dnl        ...
-dnl     AM_PATH_WXCONFIG(2.6.0, wxWin=1)
+dnl     WX_CONFIG_CHECK0([2.6.0], [wxWin=1])
 dnl     if test "$wxWin" != 1; then
 dnl        AC_MSG_ERROR([
@@ -25,8 +61,39 @@
 dnl
 dnl     LIBS="$LIBS $WX_LIBS"
+dnl
+dnl If you want to support standard --enable-debug/unicode/shared options, you
+dnl may do the following:
+dnl
+dnl     ...
+dnl     AC_CANONICAL_SYSTEM
+dnl
+dnl     # define configure options
+dnl     WX_CONFIG_OPTIONS
+dnl     WX_STANDARD_OPTIONS([debug,unicode,shared,toolkit,wxshared])
+dnl
+dnl     # basic configure checks
+dnl     ...
+dnl
+dnl     # we want to always have DEBUG==WX_DEBUG and UNICODE==WX_UNICODE
+dnl     WX_DEBUG=$DEBUG
+dnl     WX_UNICODE=$UNICODE
+dnl
+dnl     WX_CONVERT_STANDARD_OPTIONS_TO_WXCONFIG_FLAGS
+dnl     WX_CONFIG_CHECK([2.8.0], [wxWin=1],,[html,core,net,base],[$WXCONFIG_FLAGS])
+dnl     WX_DETECT_STANDARD_OPTION_VALUES
+dnl
+dnl     # write the output files
+dnl     AC_BAKEFILE([m4_include(autoconf_inc.m4)])
+dnl     AC_CONFIG_FILES([Makefile ...])
+dnl     AC_OUTPUT
+dnl
+dnl     # optional: just to show a message to the user
+dnl     WX_STANDARD_OPTIONS_SUMMARY_MSG
+dnl
 dnl ---------------------------------------------------------------------------
 
+
 dnl ---------------------------------------------------------------------------
-dnl AM_OPTIONS_WXCONFIG
+dnl WX_CONFIG_OPTIONS
 dnl
 dnl adds support for --wx-prefix, --wx-exec-prefix, --with-wxdir and
@@ -34,5 +101,5 @@
 dnl ---------------------------------------------------------------------------
 
-AC_DEFUN([AM_OPTIONS_WXCONFIG],
+AC_DEFUN([WX_CONFIG_OPTIONS],
 [
     AC_ARG_WITH(wxdir,
@@ -57,5 +124,5 @@
 [
     wx_ver_ok=""
-    if test "x$WX_VERSION" != x ; then
+    if test "x$WX_VERSION_FULL" != x ; then
       if test $wx_config_major_version -gt $1; then
         wx_ver_ok=yes
@@ -77,5 +144,5 @@
 
 dnl ---------------------------------------------------------------------------
-dnl AM_PATH_WXCONFIG(VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND
+dnl WX_CONFIG_CHECK(VERSION, [ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND
 dnl                  [, WX-LIBS [, ADDITIONAL-WX-CONFIG-FLAGS]]]])
 dnl
@@ -96,5 +163,5 @@
 dnl
 dnl Example use:
-dnl   AM_PATH_WXCONFIG([2.6.0], [wxWin=1], [wxWin=0], [html,core,net]
+dnl   WX_CONFIG_CHECK([2.6.0], [wxWin=1], [wxWin=0], [html,core,net]
 dnl                    [--unicode --debug])
 dnl ---------------------------------------------------------------------------
@@ -103,5 +170,5 @@
 dnl Get the cflags and libraries from the wx-config script
 dnl
-AC_DEFUN([AM_PATH_WXCONFIG],
+AC_DEFUN([WX_CONFIG_CHECK],
 [
   dnl do we have wx-config name: it can be wx-config or wxd-config or ...
@@ -137,5 +204,5 @@
 
   if test "$WX_CONFIG_PATH" != "no" ; then
-    WX_VERSION=""
+    WX_VERSION_FULL=""
 
     min_wx_version=ifelse([$1], ,2.2.1,$1)
@@ -148,10 +215,10 @@
     WX_CONFIG_WITH_ARGS="$WX_CONFIG_PATH $wx_config_args $5 $4"
 
-    WX_VERSION=`$WX_CONFIG_WITH_ARGS --version 2>/dev/null`
-    wx_config_major_version=`echo $WX_VERSION | \
+    WX_VERSION_FULL=`$WX_CONFIG_WITH_ARGS --version 2>/dev/null`
+    wx_config_major_version=`echo $WX_VERSION_FULL | \
            sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\1/'`
-    wx_config_minor_version=`echo $WX_VERSION | \
+    wx_config_minor_version=`echo $WX_VERSION_FULL | \
            sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\2/'`
-    wx_config_micro_version=`echo $WX_VERSION | \
+    wx_config_micro_version=`echo $WX_VERSION_FULL | \
            sed 's/\([[0-9]]*\).\([[0-9]]*\).\([[0-9]]*\)/\3/'`
 
@@ -169,5 +236,5 @@
     if test -n "$wx_ver_ok"; then
 
-      AC_MSG_RESULT(yes (version $WX_VERSION))
+      AC_MSG_RESULT(yes (version $WX_VERSION_FULL))
       WX_LIBS=`$WX_CONFIG_WITH_ARGS --libs`
 
@@ -242,9 +309,9 @@
     else
 
-       if test "x$WX_VERSION" = x; then
+       if test "x$WX_VERSION_FULL" = x; then
           dnl no wx-config at all
           AC_MSG_RESULT(no)
        else
-          AC_MSG_RESULT(no (version $WX_VERSION is not new enough))
+          AC_MSG_RESULT(no (version $WX_VERSION_FULL is not new enough))
        fi
 
@@ -255,5 +322,30 @@
        WX_LIBS_STATIC=""
        WX_RESCOMP=""
-       ifelse([$3], , :, [$3])
+
+       if test ! -z "$5"; then
+
+          wx_error_message="
+    The configuration you asked for $PACKAGE_NAME requires a wxWidgets
+    build with the following settings:
+        $5
+    but such build is not available.
+
+    To see the wxWidgets builds available on this system, please use
+    'wx-config --list' command. To use the default build, returned by
+    'wx-config --selected-config', use the options with their 'auto'
+    default values."
+
+       fi
+
+       wx_error_message="
+    The requested wxWidgets build couldn't be found.
+    $wx_error_message
+
+    If you still get this error, then check that 'wx-config' is
+    in path, the directory where wxWidgets libraries are installed
+    (returned by 'wx-config --libs' command) is in LD_LIBRARY_PATH
+    or equivalent variable and wxWidgets version is $1 or above."
+
+       ifelse([$3], , AC_MSG_ERROR([$wx_error_message]), [$3])
 
     fi
@@ -278,6 +370,13 @@
   AC_SUBST(WX_LIBS)
   AC_SUBST(WX_LIBS_STATIC)
-  AC_SUBST(WX_VERSION)
+  AC_SUBST(WX_VERSION_FULL)
   AC_SUBST(WX_RESCOMP)
+
+  dnl need to export also WX_VERSION_MINOR and WX_VERSION_MAJOR symbols
+  dnl to support wxpresets bakefiles
+  WX_VERSION_MAJOR="$wx_config_major_version"
+  WX_VERSION_MINOR="$wx_config_minor_version"
+  AC_SUBST(WX_VERSION_MAJOR)
+  AC_SUBST(WX_VERSION_MINOR)
 ])
 
@@ -289,7 +388,7 @@
 dnl     AC_ARG_WITH(...)
 dnl        ...
-dnl     AM_OPTIONS_WXCONFIG
+dnl     WX_CONFIG_OPTIONS
 dnl        ...
-dnl     AM_PATH_WXCONFIG(2.6.0, wxWin=1)
+dnl     WX_CONFIG_CHECK(2.6.0, wxWin=1)
 dnl     if test "$wxWin" != 1; then
 dnl        AC_MSG_ERROR([
@@ -304,5 +403,5 @@
 dnl     fi
 dnl
-dnl     AM_PATH_WXRC([HAVE_WXRC=1], [HAVE_WXRC=0])
+dnl     WXRC_CHECK([HAVE_WXRC=1], [HAVE_WXRC=0])
 dnl     if test "x$HAVE_WXRC" != x1; then
 dnl         AC_MSG_ERROR([
@@ -320,8 +419,6 @@
 dnl ---------------------------------------------------------------------------
 
-
-
 dnl ---------------------------------------------------------------------------
-dnl AM_PATH_WXRC([ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])
+dnl WXRC_CHECK([ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])
 dnl
 dnl Test for wxWidgets' wxrc program for creating either C++, Python or XRS
@@ -330,5 +427,5 @@
 dnl
 dnl Example use:
-dnl   AM_PATH_WXRC([wxrc=1], [wxrc=0])
+dnl   WXRC_CHECK([wxrc=1], [wxrc=0])
 dnl ---------------------------------------------------------------------------
 
@@ -336,5 +433,5 @@
 dnl wxrc program from the wx-config script
 dnl
-AC_DEFUN([AM_PATH_WXRC],
+AC_DEFUN([WXRC_CHECK],
 [
   AC_ARG_VAR([WXRC], [Path to wxWidget's wxrc resource compiler])
@@ -365,2 +462,587 @@
   fi
 ])
+
+dnl ---------------------------------------------------------------------------
+dnl WX_LIKE_LIBNAME([output-var] [prefix], [name])
+dnl
+dnl Sets the "output-var" variable to the name of a library named with same 
+dnl wxWidgets rule.
+dnl E.g. for output-var=='lib', name=='test', prefix='mine', sets 
+dnl      the $lib variable to:
+dnl          'mine_gtk2ud_test-2.8' 
+dnl      if WX_PORT=gtk2, WX_UNICODE=1, WX_DEBUG=1 and WX_VERSION=28
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([WX_LIKE_LIBNAME],
+    [
+        wx_temp="$2""_""$WX_PORT"
+
+        dnl add the [u][d] string
+        if test "$WX_UNICODE" = "1"; then
+            wx_temp="$wx_temp""u"
+        fi
+        if test "$WX_DEBUG" = "1"; then
+            wx_temp="$wx_temp""d"
+        fi
+
+        dnl complete the name of the lib
+        wx_temp="$wx_temp""_""$3""-$WX_VERSION_MAJOR.$WX_VERSION_MINOR"
+
+        dnl save it in the user's variable
+        $1=$wx_temp
+    ])
+
+dnl ---------------------------------------------------------------------------
+dnl WX_ARG_ENABLE_YESNOAUTO/WX_ARG_WITH_YESNOAUTO
+dnl
+dnl Two little custom macros which define the ENABLE/WITH configure arguments.
+dnl Macro arguments:
+dnl $1 = the name of the --enable / --with  feature
+dnl $2 = the name of the variable associated
+dnl $3 = the description of that feature
+dnl $4 = the default value for that feature
+dnl $5 = additional action to do in case option is given with "yes" value
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([WX_ARG_ENABLE_YESNOAUTO],
+         [AC_ARG_ENABLE($1,
+            AC_HELP_STRING([--enable-$1], [$3 (default is $4)]),
+            [], [enableval="$4"])
+
+            dnl Show a message to the user about this option
+            AC_MSG_CHECKING([for the --enable-$1 option])
+            if test "$enableval" = "yes" ; then
+                AC_MSG_RESULT([yes])
+                $2=1
+                $5
+            elif test "$enableval" = "no" ; then
+                AC_MSG_RESULT([no])
+                $2=0
+            elif test "$enableval" = "auto" ; then
+                AC_MSG_RESULT([will be automatically detected])
+                $2="auto"
+            else
+                AC_MSG_ERROR([
+    Unrecognized option value (allowed values: yes, no, auto)
+                ])
+            fi
+         ])
+
+AC_DEFUN([WX_ARG_WITH_YESNOAUTO],
+         [AC_ARG_WITH($1,
+            AC_HELP_STRING([--with-$1], [$3 (default is $4)]),
+            [], [withval="$4"])
+
+            dnl Show a message to the user about this option
+            AC_MSG_CHECKING([for the --with-$1 option])
+            if test "$withval" = "yes" ; then
+                AC_MSG_RESULT([yes])
+                $2=1
+                $5
+            dnl NB: by default we don't allow --with-$1=no option
+            dnl     since it does not make much sense !
+            elif test "$6" = "1" -a "$withval" = "no" ; then
+                AC_MSG_RESULT([no])
+                $2=0
+            elif test "$withval" = "auto" ; then
+                AC_MSG_RESULT([will be automatically detected])
+                $2="auto"
+            else
+                AC_MSG_ERROR([
+    Unrecognized option value (allowed values: yes, auto)
+                ])
+            fi
+         ])
+
+
+dnl ---------------------------------------------------------------------------
+dnl WX_STANDARD_OPTIONS([options-to-add])
+dnl
+dnl Adds to the configure script one or more of the following options:
+dnl   --enable-[debug|unicode|shared|wxshared|wxdebug]
+dnl   --with-[gtk|msw|motif|x11|mac|mgl|dfb]
+dnl Then checks for their presence and eventually set the DEBUG, UNICODE, SHARED,
+dnl PORT, WX_SHARED, WX_DEBUG, variables to one of the "yes", "no", "auto" values.
+dnl
+dnl Note that e.g. UNICODE != WX_UNICODE; the first is the value of the
+dnl --enable-unicode option (in boolean format) while the second indicates
+dnl if wxWidgets was built in Unicode mode (and still is in boolean format).
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([WX_STANDARD_OPTIONS],
+        [
+
+        dnl the following lines will expand to WX_ARG_ENABLE_YESNOAUTO calls if and only if
+        dnl the $1 argument contains respectively the debug,unicode or shared options.
+
+        ifelse(index([$1], [debug]), [-1],,
+               [WX_ARG_ENABLE_YESNOAUTO([debug], [DEBUG], [Build in debug mode], [auto])])
+
+        ifelse(index([$1], [unicode]), [-1],,
+               [WX_ARG_ENABLE_YESNOAUTO([unicode], [UNICODE], [Build in Unicode mode], [auto])])
+
+        ifelse(index([$1], [shared]), [-1],,
+               [WX_ARG_ENABLE_YESNOAUTO([shared], [SHARED], [Build as shared library], [auto])])
+
+        dnl WX_ARG_WITH_YESNOAUTO cannot be used for --with-toolkit since it's an option
+        dnl which must be able to accept the auto|gtk1|gtk2|msw|... values
+        ifelse(index([$1], [toolkit]), [-1],,
+               [
+                AC_ARG_WITH([toolkit],
+                            AC_HELP_STRING([--with-toolkit],
+                                           [Build against a specific wxWidgets toolkit (default is auto)]),
+                            [], [withval="auto"])
+
+                dnl Show a message to the user about this option
+                AC_MSG_CHECKING([for the --with-toolkit option])
+                if test "$withval" = "auto" ; then
+                    AC_MSG_RESULT([will be automatically detected])
+                    TOOLKIT="auto"
+                else
+                    TOOLKIT="$withval"
+
+                    dnl PORT must be one of the allowed values
+                    if test "$TOOLKIT" != "gtk1" -a "$TOOLKIT" != "gtk2" -a \
+                            "$TOOLKIT" != "msw" -a "$TOOLKIT" != "motif" -a \
+                            "$TOOLKIT" != "x11" -a "$TOOLKIT" != "mac" -a \
+                            "$TOOLKIT" != "mgl" -a "$TOOLKIT" != "dfb" ; then
+                        AC_MSG_ERROR([
+    Unrecognized option value (allowed values: auto, gtk1, gtk2, msw, motif, x11, mac, mgl, dfb)
+                        ])
+                    fi
+
+                    AC_MSG_RESULT([$TOOLKIT])
+                fi
+               ])
+
+        dnl ****** IMPORTANT *******
+        dnl   Unlike for the UNICODE setting, you can build your program in
+        dnl   shared mode against a static build of wxWidgets. Thus we have the
+        dnl   following option which allows these mixtures. E.g.
+        dnl
+        dnl      ./configure --disable-shared --with-wxshared
+        dnl
+        dnl   will build your library in static mode against the first available
+        dnl   shared build of wxWidgets.
+        dnl
+        dnl   Note that's not possible to do the viceversa:
+        dnl
+        dnl      ./configure --enable-shared --without-wxshared
+        dnl
+        dnl   Doing so you would try to build your library in shared mode against a static
+        dnl   build of wxWidgets. This is not possible (you would mix PIC and non PIC code) !
+        dnl   A check for this combination of options is in WX_DETECT_STANDARD_OPTION_VALUES
+        dnl   (where we know what 'auto' should be expanded to).
+        dnl
+        dnl   If you try to build something in ANSI mode against a UNICODE build
+        dnl   of wxWidgets or in RELEASE mode against a DEBUG build of wxWidgets,
+        dnl   then at best you'll get ton of linking errors !
+        dnl ************************
+
+        ifelse(index([$1], [wxshared]), [-1],,
+               [
+                WX_ARG_WITH_YESNOAUTO(
+                    [wxshared], [WX_SHARED],
+                    [Force building against a shared build of wxWidgets, even if --disable-shared is given],
+                    [auto], [], [1])
+               ])
+
+        dnl Just like for SHARED and WX_SHARED it may happen that some adventurous
+        dnl peoples will want to mix a wxWidgets release build with a debug build of
+        dnl his app/lib. So, we have both DEBUG and WX_DEBUG variables.
+        ifelse(index([$1], [wxdebug]), [-1],,
+               [
+                WX_ARG_WITH_YESNOAUTO(
+                    [wxdebug], [WX_DEBUG],
+                    [Force building against a debug build of wxWidgets, even if --disable-debug is given],
+                    [auto], [], [1])
+               ])
+
+        dnl WX_ARG_WITH_YESNOAUTO cannot be used for --with-wxversion since it's an option
+        dnl which must be able to accept the auto|26|27|28... values
+        ifelse(index([$1], [wxversion]), [-1],,
+               [
+                AC_ARG_WITH([wxversion],
+                            AC_HELP_STRING([--with-wxversion],
+                                           [Build against a specific version of wxWidgets (default is auto)]),
+                            [], [withval="auto"])
+
+                dnl Show a message to the user about this option
+                AC_MSG_CHECKING([for the --with-wxversion option])
+                if test "$withval" = "auto" ; then
+                    AC_MSG_RESULT([will be automatically detected])
+                    WX_VERSION="auto"
+                else
+
+                    wx_requested_major_version=`echo $withval | \
+                        sed 's/\([[0-9]]*\).\([[0-9]]*\).*/\1/'`
+                    wx_requested_minor_version=`echo $withval | \
+                        sed 's/\([[0-9]]*\).\([[0-9]]*\).*/\2/'`
+
+                    dnl both vars above must be exactly 1 digit
+                    if test "${#wx_requested_major_version}" != "1" -o \
+                            "${#wx_requested_minor_version}" != "1" ; then
+                        AC_MSG_ERROR([
+    Unrecognized option value (allowed values: auto, 2.6, 2.7, 2.8, 2.9)
+                        ])
+                    fi
+
+                    WX_VERSION="$wx_requested_major_version"".""$wx_requested_minor_version"
+                    AC_MSG_RESULT([$WX_VERSION])
+                fi
+               ])
+
+        if test "$WX_DEBUG_CONFIGURE" = "1"; then
+            echo "[[dbg]] DEBUG: $DEBUG, WX_DEBUG: $WX_DEBUG"
+            echo "[[dbg]] UNICODE: $UNICODE, WX_UNICODE: $WX_UNICODE"
+            echo "[[dbg]] SHARED: $SHARED, WX_SHARED: $WX_SHARED"
+            echo "[[dbg]] TOOLKIT: $TOOLKIT, WX_TOOLKIT: $WX_TOOLKIT"
+            echo "[[dbg]] VERSION: $VERSION, WX_VERSION: $WX_VERSION"
+        fi
+    ])
+
+
+dnl ---------------------------------------------------------------------------
+dnl WX_CONVERT_STANDARD_OPTIONS_TO_WXCONFIG_FLAGS
+dnl
+dnl Sets the WXCONFIG_FLAGS string using the SHARED,DEBUG,UNICODE variable values
+dnl which are different from "auto".
+dnl Thus this macro needs to be called only once all options have been set.
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([WX_CONVERT_STANDARD_OPTIONS_TO_WXCONFIG_FLAGS],
+        [
+        if test "$WX_SHARED" = "1" ; then
+            WXCONFIG_FLAGS="--static=no "
+        elif test "$WX_SHARED" = "0" ; then
+            WXCONFIG_FLAGS="--static=yes "
+        fi
+
+        if test "$WX_DEBUG" = "1" ; then
+            WXCONFIG_FLAGS="$WXCONFIG_FLAGS""--debug=yes "
+        elif test "$WX_DEBUG" = "0" ; then
+            WXCONFIG_FLAGS="$WXCONFIG_FLAGS""--debug=no "
+        fi
+
+        dnl The user should have set WX_UNICODE=UNICODE
+        if test "$WX_UNICODE" = "1" ; then
+            WXCONFIG_FLAGS="$WXCONFIG_FLAGS""--unicode=yes "
+        elif test "$WX_UNICODE" = "0" ; then
+            WXCONFIG_FLAGS="$WXCONFIG_FLAGS""--unicode=no "
+        fi
+
+        if test "$TOOLKIT" != "auto" ; then
+            WXCONFIG_FLAGS="$WXCONFIG_FLAGS""--toolkit=$TOOLKIT "
+        fi
+
+        if test "$WX_VERSION" != "auto" ; then
+            WXCONFIG_FLAGS="$WXCONFIG_FLAGS""--version=$WX_VERSION "
+        fi
+
+        dnl strip out the last space of the string
+        WXCONFIG_FLAGS=${WXCONFIG_FLAGS% }
+
+        if test "$WX_DEBUG_CONFIGURE" = "1"; then
+            echo "[[dbg]] WXCONFIG_FLAGS: $WXCONFIG_FLAGS"
+        fi
+    ])
+
+
+dnl ---------------------------------------------------------------------------
+dnl _WX_SELECTEDCONFIG_CHECKFOR([RESULTVAR], [STRING], [MSG] 
+dnl                             [, ACTION-IF-FOUND [, ACTION-IF-NOT-FOUND]])
+dnl
+dnl Outputs the given MSG. Then searches the given STRING in the wxWidgets
+dnl additional CPP flags and put the result of the search in WX_$RESULTVAR
+dnl also adding the "yes" or "no" message result to MSG.
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([_WX_SELECTEDCONFIG_CHECKFOR],
+        [
+        if test "$$1" = "auto" ; then
+
+            dnl The user does not have particular preferences for this option;
+            dnl so we will detect the wxWidgets relative build setting and use it
+            AC_MSG_CHECKING([$3])
+
+            dnl set WX_$1 variable to 1 if the $WX_SELECTEDCONFIG contains the $2 
+            dnl string or to 0 otherwise.
+            dnl NOTE: 'expr match STRING REGEXP' cannot be used since on Mac it 
+            dnl       doesn't work; we use 'expr STRING : REGEXP' instead
+            WX_$1=$(expr "$WX_SELECTEDCONFIG" : ".*$2.*")
+
+            if test "$WX_$1" != "0"; then
+                WX_$1=1
+                AC_MSG_RESULT([yes])
+                ifelse([$4], , :, [$4])
+            else
+                WX_$1=0
+                AC_MSG_RESULT([no])
+                ifelse([$5], , :, [$5])
+            fi
+        else
+
+            dnl Use the setting given by the user
+            WX_$1=$$1
+        fi
+    ])
+
+dnl ---------------------------------------------------------------------------
+dnl WX_DETECT_STANDARD_OPTION_VALUES
+dnl
+dnl Detects the values of the following variables:
+dnl 1) WX_VERSION
+dnl 2) WX_UNICODE
+dnl 3) WX_DEBUG
+dnl 4) WX_SHARED    (and also WX_STATIC)
+dnl 5) WX_PORT
+dnl from the previously selected wxWidgets build; this macro in fact must be
+dnl called *after* calling the WX_CONFIG_CHECK macro.
+dnl
+dnl Note that the WX_VERSION_MAJOR, WX_VERSION_MINOR symbols are already set
+dnl by WX_CONFIG_CHECK macro
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([WX_DETECT_STANDARD_OPTION_VALUES],
+        [
+        WX_VERSION="$WX_VERSION_MAJOR""$WX_VERSION_MINOR"
+        if test $WX_VERSION -lt 26 ; then
+
+            AC_MSG_ERROR([
+    Cannot detect the wxWidgets configuration for the selected wxWidgets build
+    since its version is $WX_VERSION_FULL < 2.6.0; please install a newer
+    version of wxWidgets.
+                         ])
+        fi
+
+        dnl The wx-config we are using understands the "--selected_config"
+        dnl option which returns an easy-parseable string !
+        WX_SELECTEDCONFIG=$($WX_CONFIG_WITH_ARGS --selected_config)
+
+        if test "$WX_DEBUG_CONFIGURE" = "1"; then
+            echo "[[dbg]] Using wx-config --selected-config"
+            echo "[[dbg]] WX_SELECTEDCONFIG: $WX_SELECTEDCONFIG"
+        fi
+
+
+        dnl we could test directly for WX_SHARED with a line like:
+        dnl    _WX_SELECTEDCONFIG_CHECKFOR([SHARED], [shared],
+        dnl                                [if wxWidgets was built in SHARED mode])
+        dnl but wx-config --selected-config DOES NOT outputs the 'shared'
+        dnl word when wx was built in shared mode; it rather outputs the
+        dnl 'static' word when built in static mode.
+        if test $WX_SHARED = "1"; then
+            STATIC=0
+        elif test $WX_SHARED = "0"; then
+            STATIC=1
+        elif test $WX_SHARED = "auto"; then
+            STATIC="auto"
+        fi
+
+        dnl Now set the WX_UNICODE, WX_DEBUG, WX_STATIC variables
+        _WX_SELECTEDCONFIG_CHECKFOR([UNICODE], [unicode],
+                                    [if wxWidgets was built with UNICODE enabled])
+        _WX_SELECTEDCONFIG_CHECKFOR([DEBUG], [debug],
+                                    [if wxWidgets was built in DEBUG mode])
+        _WX_SELECTEDCONFIG_CHECKFOR([STATIC], [static],
+                                    [if wxWidgets was built in STATIC mode])
+
+        dnl init WX_SHARED from WX_STATIC
+        if test "$WX_STATIC" != "0"; then
+            WX_SHARED=0
+        else
+            WX_SHARED=1
+        fi
+
+        AC_SUBST(WX_UNICODE)
+        AC_SUBST(WX_DEBUG)
+        AC_SUBST(WX_SHARED)
+
+        dnl detect the WX_PORT to use
+        if test "$TOOLKIT" = "auto" ; then
+
+            dnl The user does not have particular preferences for this option;
+            dnl so we will detect the wxWidgets relative build setting and use it
+            AC_MSG_CHECKING([which wxWidgets toolkit was selected])
+
+            WX_GTKPORT1=$(expr "$WX_SELECTEDCONFIG" : ".*gtk1.*")
+            WX_GTKPORT2=$(expr "$WX_SELECTEDCONFIG" : ".*gtk2.*")
+            WX_MSWPORT=$(expr "$WX_SELECTEDCONFIG" : ".*msw.*")
+            WX_MOTIFPORT=$(expr "$WX_SELECTEDCONFIG" : ".*motif.*")
+            WX_MACPORT=$(expr "$WX_SELECTEDCONFIG" : ".*mac.*")
+            WX_X11PORT=$(expr "$WX_SELECTEDCONFIG" : ".*x11.*")
+            WX_MGLPORT=$(expr "$WX_SELECTEDCONFIG" : ".*mgl.*")
+            WX_DFBPORT=$(expr "$WX_SELECTEDCONFIG" : ".*dfb.*")
+
+            WX_PORT="unknown"
+            if test "$WX_GTKPORT1" != "0"; then WX_PORT="gtk1"; fi
+            if test "$WX_GTKPORT2" != "0"; then WX_PORT="gtk2"; fi
+            if test "$WX_MSWPORT" != "0"; then WX_PORT="msw"; fi
+            if test "$WX_MOTIFPORT" != "0"; then WX_PORT="motif"; fi
+            if test "$WX_MACPORT" != "0"; then WX_PORT="mac"; fi
+            if test "$WX_X11PORT" != "0"; then WX_PORT="x11"; fi
+            if test "$WX_MGLPORT" != "0"; then WX_PORT="mgl"; fi
+            if test "$WX_DFBPORT" != "0"; then WX_PORT="dfb"; fi
+
+            dnl check at least one of the WX_*PORT has been set !
+
+            if test "$WX_PORT" = "unknown" ; then
+                AC_MSG_ERROR([
+        Cannot detect the currently installed wxWidgets port !
+        Please check your 'wx-config --cxxflags'...
+                            ])
+            fi
+
+            AC_MSG_RESULT([$WX_PORT])
+        else
+
+            dnl Use the setting given by the user
+            if test -z "$TOOLKIT" ; then
+                WX_PORT=$TOOLKIT
+            else
+                dnl try with PORT
+                WX_PORT=$PORT
+            fi
+        fi
+
+        AC_SUBST(WX_PORT)
+
+        if test "$WX_DEBUG_CONFIGURE" = "1"; then
+            echo "[[dbg]] Values of all WX_* options after final detection:"
+            echo "[[dbg]] WX_DEBUG: $WX_DEBUG"
+            echo "[[dbg]] WX_UNICODE: $WX_UNICODE"
+            echo "[[dbg]] WX_SHARED: $WX_SHARED"
+            echo "[[dbg]] WX_VERSION: $WX_VERSION"
+            echo "[[dbg]] WX_PORT: $WX_PORT"
+        fi
+
+        dnl Avoid problem described in the WX_STANDARD_OPTIONS which happens when
+        dnl the user gives the options:
+        dnl      ./configure --enable-shared --without-wxshared
+        dnl or just do
+        dnl      ./configure --enable-shared
+        dnl but there is only a static build of wxWidgets available.
+        if test "$WX_SHARED" = "0" -a "$SHARED" = "1"; then
+            AC_MSG_ERROR([
+    Cannot build shared library against a static build of wxWidgets !
+    This error happens because the wxWidgets build which was selected
+    has been detected as static while you asked to build $PACKAGE_NAME
+    as shared library and this is not possible.
+    Use the '--disable-shared' option to build $PACKAGE_NAME
+    as static library or '--with-wxshared' to use wxWidgets as shared library.
+                         ])
+        fi
+
+        dnl now we can finally update the DEBUG,UNICODE,SHARED options
+        dnl to their final values if they were set to 'auto'
+        if test "$DEBUG" = "auto"; then
+            DEBUG=$WX_DEBUG
+
+            dnl in case user wants a BUILD=debug/release var...
+            if test "$DEBUG" = "1"; then
+                BUILD="debug"
+            elif test "$DEBUG" = ""; then
+                BUILD="release"
+            fi
+        fi
+        if test "$UNICODE" = "auto"; then
+            UNICODE=$WX_UNICODE
+        fi
+        if test "$SHARED" = "auto"; then
+            SHARED=$WX_SHARED
+        fi
+        if test "$TOOLKIT" = "auto"; then
+            TOOLKIT=$WX_PORT
+        fi
+
+        dnl respect the DEBUG variable adding the optimize/debug flags
+        dnl NOTE: the CXXFLAGS are merged together with the CPPFLAGS so we
+        dnl       don't need to set them, too
+        if test "$DEBUG" = "1"; then
+            CXXFLAGS="$CXXFLAGS -g -O0"
+            CFLAGS="$CFLAGS -g -O0"
+        else
+            CXXFLAGS="$CXXFLAGS -O2"
+            CFLAGS="$CFLAGS -O2"
+        fi
+    ])
+
+dnl ---------------------------------------------------------------------------
+dnl WX_BOOLOPT_SUMMARY([name of the boolean variable to show summary for],
+dnl                   [what to print when var is 1],
+dnl                   [what to print when var is 0])
+dnl
+dnl Prints $2 when variable $1 == 1 and prints $3 when variable $1 == 0.
+dnl This macro mainly exists just to make configure.ac scripts more readable.
+dnl
+dnl NOTE: you need to use the [" my message"] syntax for 2nd and 3rd arguments
+dnl       if you want that m4 avoid to throw away the spaces prefixed to the
+dnl       argument value.
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([WX_BOOLOPT_SUMMARY],
+        [
+        if test "x$$1" = "x1" ; then
+            echo $2
+        elif test "x$$1" = "x0" ; then
+            echo $3
+        else
+            echo "$1 is $$1"
+        fi
+    ])
+
+dnl ---------------------------------------------------------------------------
+dnl WX_STANDARD_OPTIONS_SUMMARY_MSG
+dnl
+dnl Shows a summary message to the user about the WX_* variable contents.
+dnl This macro is used typically at the end of the configure script.
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([WX_STANDARD_OPTIONS_SUMMARY_MSG],
+        [
+        echo
+        echo "  The wxWidgets build which will be used by $PACKAGE_NAME $PACKAGE_VERSION"
+        echo "  has the following settings:"
+        WX_BOOLOPT_SUMMARY([WX_DEBUG],   ["  - DEBUG build"],  ["  - RELEASE build"])
+        WX_BOOLOPT_SUMMARY([WX_UNICODE], ["  - UNICODE mode"], ["  - ANSI mode"])
+        WX_BOOLOPT_SUMMARY([WX_SHARED],  ["  - SHARED mode"],  ["  - STATIC mode"])
+        echo "  - VERSION: $WX_VERSION_FULL"
+        echo "  - PORT: $WX_PORT"
+    ])
+
+
+dnl ---------------------------------------------------------------------------
+dnl WX_STANDARD_OPTIONS_SUMMARY_MSG_BEGIN, WX_STANDARD_OPTIONS_SUMMARY_MSG_END
+dnl
+dnl Like WX_STANDARD_OPTIONS_SUMMARY_MSG macro but these two macros also gives info 
+dnl about the configuration of the package which used the wxpresets.
+dnl
+dnl Typical usage:
+dnl    WX_STANDARD_OPTIONS_SUMMARY_MSG_BEGIN
+dnl    echo "   - Package setting 1: $SETTING1"
+dnl    echo "   - Package setting 2: $SETTING1"
+dnl    ...
+dnl    WX_STANDARD_OPTIONS_SUMMARY_MSG_END
+dnl
+dnl ---------------------------------------------------------------------------
+AC_DEFUN([WX_STANDARD_OPTIONS_SUMMARY_MSG_BEGIN],
+        [
+        echo
+        echo " ----------------------------------------------------------------"
+        echo "  Configuration for $PACKAGE_NAME $PACKAGE_VERSION successfully completed."
+        echo "  Summary of main configuration settings for $PACKAGE_NAME:"
+        WX_BOOLOPT_SUMMARY([DEBUG], ["  - DEBUG build"], ["  - RELEASE build"])
+        WX_BOOLOPT_SUMMARY([UNICODE], ["  - UNICODE mode"], ["  - ANSI mode"])
+        WX_BOOLOPT_SUMMARY([SHARED], ["  - SHARED mode"], ["  - STATIC mode"])
+    ])
+
+AC_DEFUN([WX_STANDARD_OPTIONS_SUMMARY_MSG_END],
+        [
+        WX_STANDARD_OPTIONS_SUMMARY_MSG
+        echo
+        echo "  Now, just run make."
+        echo " ----------------------------------------------------------------"
+        echo
+    ])
+
+
+dnl ---------------------------------------------------------------------------
+dnl Deprecated macro wrappers
+dnl ---------------------------------------------------------------------------
+
+AC_DEFUN([AM_OPTIONS_WXCONFIG], [WX_CONFIG_OPTIONS])
+AC_DEFUN([AM_PATH_WXCONFIG], [WX_CONFIG_CHECK])
+
+
Index: build/bakefiles/wxpresets/libsample/configure.in
--- /dev/null
+++ build/bakefiles/wxpresets/libsample/configure.in
@@ -0,0 +1,64 @@
+dnl Process this file with autoconf to produce a configure script.
+
+AC_PREREQ(2.59)
+AC_INIT([libsample],[1.2.5],[vslavik@fastmail.fm])
+AC_CONFIG_SRCDIR([libsample.cpp])
+
+
+dnl ---------------------------------------------------------------------------
+dnl DEFINE CONFIGURE OPTIONS
+dnl ---------------------------------------------------------------------------
+
+dnl define all the wx-config related options
+dnl (i.e. --with-wxdir, --with-wx-config, --with-wx-prefix, --with-wx-exec-prefix)
+WX_CONFIG_OPTIONS
+
+dnl define all the wxpresets related options
+WX_STANDARD_OPTIONS([debug,unicode,shared,toolkit,wxshared])
+
+
+
+dnl ---------------------------------------------------------------------------
+dnl CONFIGURE CHECKS
+dnl ---------------------------------------------------------------------------
+
+dnl these checks are required by bakefile:
+AC_CANONICAL_SYSTEM
+AC_PROG_AWK
+AC_PROG_INSTALL
+AC_PROG_LN_S
+AC_PROG_RANLIB
+AC_PROG_CC
+AC_PROG_CXX
+AC_PROG_CXXCPP
+
+dnl we want to always have DEBUG==WX_DEBUG and UNICODE==WX_UNICODE
+WX_DEBUG=$DEBUG
+WX_UNICODE=$UNICODE
+
+dnl the following macros will search for the best matching wxWidgets build 
+dnl (taking in count the values of the --enable-debug|unicode|shared and of
+dnl the --with-toolkit|wxshared options) and then set appropriately all the
+dnl WX_* options
+WX_CONVERT_STANDARD_OPTIONS_TO_WXCONFIG_FLAGS
+WX_CONFIG_CHECK([2.8.0], [wxWin=1],,[core,base],[$WXCONFIG_FLAGS])
+WX_DETECT_STANDARD_OPTION_VALUES
+
+dnl here all WX_* option values are available for your own processing...
+
+
+
+
+dnl ---------------------------------------------------------------------------
+dnl CONFIGURE END
+dnl ---------------------------------------------------------------------------
+
+AC_BAKEFILE([m4_include(autoconf_inc.m4)])
+AC_CONFIG_FILES([Makefile])
+AC_OUTPUT
+
+
+dnl show a nice summary of the chosen build settings to the user
+WX_STANDARD_OPTIONS_SUMMARY_MSG_BEGIN
+WX_STANDARD_OPTIONS_SUMMARY_MSG_END
+
Index: build/bakefiles/wxpresets/libsample/libsample.bkl
--- /dev/null
+++ build/bakefiles/wxpresets/libsample/libsample.bkl
@@ -0,0 +1,50 @@
+<?xml version="1.0" ?>
+<!-- $Id: minimal.bkl,v 1.1 2005/01/27 22:47:37 VS Exp $ -->
+
+<makefile>
+
+    <include file="presets/wx.bkl"/>
+
+
+    <!-- a typical nice feature which wxpresets make available to wx-based programs
+         is to allow the user to build with different configurations the same project;
+         this is achieved in fundamental steps:
+
+          1) set a different BUILDDIR for different build configurations
+          2) set different output dirs for the libraries built with a
+             different shared/static setting
+          3) set different output names for the libraries built with a
+             different unicode/debug setting
+
+         the following line does step #1:
+    -->
+    <set-wxlike-builddir/>
+
+    <!-- through the use of the 'wx-lib' and 'wxlike' template, we'll get
+         the ability to compile against any wxWidgets build using the same
+         configuration of that wxWidgets build.
+    -->
+    <template id="my" template="wx-lib,wxlike">
+
+        <!-- wxlike-libdirname does step #2 (see initial comment) -->
+        <wxlike-libdirname/>
+
+        <sources>libsample.cpp</sources>
+    </template>
+
+
+    <lib id="static" template="my" cond="WX_SHARED=='0'">
+        <!-- wxlike-libname does step #3 (see initial comment) -->
+        <wxlike-libname prefix='sample'>test</wxlike-libname>
+    </lib>
+
+    <dll id="shared" template="my" cond="WX_SHARED=='1'">
+        <!-- wxlike-dllname does step #3 (see initial comment) -->
+        <wxlike-dllname prefix='sample'>test</wxlike-dllname>
+        <define>WXMAKINGDLL_LIBSAMPLE</define>
+
+        <wx-lib>core</wx-lib>
+        <wx-lib>base</wx-lib>
+    </dll>
+
+</makefile>
Index: build/bakefiles/wxpresets/libsample/libsample.cpp
--- /dev/null
+++ build/bakefiles/wxpresets/libsample/libsample.cpp
@@ -0,0 +1,41 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        libsample.cpp
+// Purpose:     The source of a dummy sample wx-based library
+// Author:      Francesco Montorsi
+// Modified by:
+// Created:     26/11/06
+// RCS-ID:      $Id$
+// Copyright:   (c) Francesco Montorsi
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+// ============================================================================
+// declarations
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+// For compilers that support precompilation, includes "wx/wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+// for all others, include the necessary headers (this file is usually all you
+// need because it includes almost all "standard" wxWindows headers)
+#ifndef WX_PRECOMP
+    #include "wx/wx.h"
+#endif
+
+// ============================================================================
+// implementation
+// ============================================================================
+
+void MyUtilityFunction()
+{
+    wxPrintf(wxT("Hello world!\n"));
+    fflush(stdout);
+}
Index: build/bakefiles/wxpresets/presets/wx.bkl
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/bakefiles/wxpresets/presets/wx.bkl,v
retrieving revision 1.6
diff -bu2 -r1.6 build/bakefiles/wxpresets/presets/wx.bkl
--- build/bakefiles/wxpresets/presets/wx.bkl
+++ build/bakefiles/wxpresets/presets/wx.bkl
@@ -5,5 +5,92 @@
     Presets for building wxWidgets applications.
 
-    FIXME: docs
+    These presets provide the following "public" interface:
+
+    OPTIONS:
+
+    - WX_* : used to let the user of the generated makefile choose a wxWidgets
+             build among those available; you can use them in your project to
+             e.g. build a target only if WX_DEBUG is 0 or if WX_PORT is "msw".
+
+
+    VARIABLES:
+
+    - WXLIBPOSTFIX: contains the [u][d] string which is typically useful when
+                    defining names of directories/files which should coexist
+                    with other builds using different wxWidgets configurations.
+
+
+    TEMPLATES:
+
+    - wx, wx-lib: templates to be used respectively for <dll>/<exe> and <lib>
+                  targets; they add all the wxWidgets-related settings (e.g. the
+                  include and library search paths, the __WXDEBUG__ symbol, etc)
+
+    - wxconsole: to be used when building console-only libraries or apps
+                 (adds the wxUSE_GUI=0 define).
+
+    - wxlike: this template should be combined with "wx" or "wx-lib" and will
+              make your project build with the same Unicode, debug & shared
+              config as the wxWidgets build selected using the WX_* options.
+
+
+    TARGET TAGS:
+
+    - <wx-lib>: to define which wxWidgets libraries to link with;
+                please note that you should use them in the right order or
+                linking under Unix would result in errors, e.g.
+
+                    <wx-lib>core</wx-lib>
+                    <wx-lib>base</wx-lib>
+
+                is correct, but the reverse is not (if lib A depends on lib B, then
+                lib A must be listed before B). So <wx-lib>base</wx-lib>
+                (which must always be present) should be the last wx-lib tag.
+
+    - <wxlike-libname>,
+      <wxlike-dllname>: useful if you want to have a build logic similar to the
+                        wxWidgets build logic which allows different builds to
+                        coexist without conflicts. These tags helps you to name
+                        libraries using the same wxWidgets rules and thus avoid
+                        conflicts between libraries compiled in e.g. Unicode,
+                        shared mode and those compiled in ANSI, shared mode &c.
+
+    - <wxlike-lib>: if your library/application needs to link with both
+                    wxWidgets and some other wx-based library, which in turn
+                    follows the wxWidgets naming conventions, then this tag is
+                    what you need to reference the wx-based additional library.
+
+    - <wxlike-paths>: if your library/application needs to cpmpile & link with both
+                      wxWidgets and some other wx-based library, which in turn
+                      follows the wxWidgets naming conventions, then this tag is
+                      what you need to add to the compiler and linker flags the paths
+                      of the "include" and "lib" folders of the wx-based additional library.
+
+
+    GLOBAL TAGS:
+
+    - <set-wxlike-builddir>: sets BUILDDIR using wxWidgets naming rules to help
+                             to keep object files compiled with different
+                             settings separate.
+
+
+ NOTE: as a reference here is a list of all wxWidgets libraries satisfying
+       the dependency constraints mentioned in <wx-lib> description:
+
+        <wx-lib>richtext</wx-lib>
+        <wx-lib>aui</wx-lib>
+        <wx-lib>qa</wx-lib>
+        <wx-lib>dbgrid</wx-lib>
+        <wx-lib>gl</wx-lib>
+        <wx-lib>odbc</wx-lib>
+        <wx-lib>xrc</wx-lib>
+        <wx-lib>html</wx-lib>
+        <wx-lib>media</wx-lib>
+        <wx-lib>adv</wx-lib>
+        <wx-lib>net</wx-lib>
+        <wx-lib>xml</wx-lib>
+        <wx-lib>core</wx-lib>
+        <wx-lib>base</wx-lib>
+
 -->
 
@@ -13,7 +100,10 @@
     <!-- this variable identifies the version of the wx presets.
          this is changed only when major changes to wxpresets take place. -->
-    <set var="WX_PRESETS_VERSION">3</set>
+    <set var="WX_PRESETS_VERSION">4</set>
 
-    <!-- list of known libraries used by wx-lib tag defined in wx_unix.bkl and wx_win32.bkl -->
+    <!-- list of known libraries used by wx-lib tag defined in wx_unix.bkl and wx_win32.bkl
+         VERY IMPORTANT: when updating this list also update the <wx-lib> and <wx-all-libs>
+                         tag definitions.
+    -->
     <set var="LIB_LIST">
         base core net xml odbc xrc html adv media gl dbgrid qa aui richtext
@@ -21,6 +111,9 @@
 
     <!-- NOTE: refer to the NET contrib using NETUTILS instead of NET
-               (which is already in LIB_LIST) -->
-    <set var="CONTRIBLIB_LIST">animate applet deprecated fl foldbar gizmos mmedia netutils ogl plot stc svg</set>
+               (which is already in LIB_LIST)
+    -->
+    <set var="CONTRIBLIB_LIST">
+        applet deprecated fl foldbar gizmos mmedia netutils ogl plot stc svg
+    </set>
     <set var="ALLLIB_LIST">$(LIB_LIST) $(CONTRIBLIB_LIST)</set>
 
@@ -34,4 +127,98 @@
 
 
+
+    <!--                        OPTIONS                             -->
+    <!--                                                            -->
+    <!--    These are essentially the configurations you            -->
+    <!--    want in bakefile.                                       -->
+    <!--                                                            -->
+    <!--    In MSVC these are the different build                   -->
+    <!--    configurations you can have (in the build menu),        -->
+    <!--    and in autoconf is enabled with enable-xxx=xx.          -->
+    <!--    For other compilers a separate configuration            -->
+    <!--    file is created (such as config.gcc on gcc)             -->
+    <!--    which has several options a user can modify.            -->
+    <!--                                                            -->
+    <!--    Note that the above only happens if an option           -->
+    <!--    is not constant, i.e. if it cannot be determined        -->
+    <!--    by bakefile itself.                                     -->
+    <!--    Also note that for 'autoconf' format these options      -->
+    <!--    are only useful when used together with wxpresets.m4    -->
+    <!--    macro file which contains macros for detecting the      -->
+    <!--    option values for wx-based projects. See wxpresets.m4   -->
+    <!--    comments for more info.                                 -->
+
+
+    <!-- Presets for limited dmars make.exe format: -->
+    <if cond="FORMAT=='dmars'">
+        <set var="WX_UNICODE">0</set>
+        <set var="WX_DEBUG">1</set>
+        <set var="WX_SHARED">0</set>
+    </if>
+
+
+    <!--    This is a standard option that determines               -->
+    <!--    whether the user wants to build this library as         -->
+    <!--    a dll or as a static library.                           -->
+    <if cond="not isdefined('WX_SHARED')">
+        <set var="WX_SHARED_DEFAULT" overwrite="0">0</set>
+        <option name="WX_SHARED">
+            <values>0,1</values>
+            <values-description>Static,DLL</values-description>
+            <default-value>$(WX_SHARED_DEFAULT)</default-value>
+            <description>
+                Use DLL build of wx library to use?
+            </description>
+        </option>
+    </if>
+
+    <!-- Configuration for building the bakefile with               -->
+    <!-- unicode strings or not (unicode or ansi).                  -->
+    <if cond="not isdefined('WX_UNICODE')">
+        <set var="WX_UNICODE_DEFAULT" overwrite="0">0</set>
+        <option name="WX_UNICODE">
+            <values>0,1</values>
+            <values-description>ANSI,Unicode</values-description>
+            <default-value>$(WX_UNICODE_DEFAULT)</default-value>
+            <description>
+                Compile Unicode build of wxWidgets?
+            </description>
+        </option>
+    </if>
+
+    <if cond="not isdefined('WX_DEBUG')">
+        <set var="WX_DEBUG_DEFAULT" overwrite="0">1</set>
+        <option name="WX_DEBUG">
+            <values>0,1</values>
+            <values-description>Release,Debug</values-description>
+            <default-value>$(WX_DEBUG_DEFAULT)</default-value>
+            <description>
+                Use debug build of wxWidgets (define __WXDEBUG__)?
+            </description>
+        </option>
+    </if>
+
+    <if cond="not isdefined('WX_VERSION')">
+        <set var="WX_VERSION_DEFAULT" overwrite="0">28</set>
+        <option name="WX_VERSION">
+            <default-value>$(WX_VERSION_DEFAULT)</default-value>
+            <description>
+                Version of the wx library to build against.
+            </description>
+        </option>
+    </if>
+
+    <if cond="not isdefined('WX_MONOLITHIC')">
+        <set var="WX_MONOLITHIC_DEFAULT" overwrite="0">0</set>
+        <option name="WX_MONOLITHIC">
+            <values>0,1</values>
+            <values-description>Multilib,Monolithic</values-description>
+            <default-value>$(WX_MONOLITHIC_DEFAULT)</default-value>
+            <description>
+                Use monolithic build of wxWidgets?
+            </description>
+        </option>
+    </if>
+
     <!-- The directory where wxWidgets is installed: -->
     <if cond="not isdefined('WX_DIR')">
@@ -47,4 +234,19 @@
 
 
+    <!--                     HELPER VARIABLES                       -->
+    <!--                                                            -->
+
+    <!--    These are handy ways of dealing with the                -->
+    <!--    extensions in the library names of the                  -->
+    <!--    wxWindows library.                                      -->
+    <set var="WXLIBPOSTFIX">
+        <if cond="WX_DEBUG=='1' and WX_UNICODE=='1'">ud</if>
+        <if cond="WX_DEBUG=='1' and WX_UNICODE=='0'">d</if>
+        <if cond="WX_DEBUG=='0' and WX_UNICODE=='1'">u</if>
+    </set>
+
+
+
+
     <!-- this is just a wrapper that includes the real implementation: -->
 
@@ -65,3 +267,136 @@
     </if>
 
+
+
+
+    <!--                     HIGH-LEVEL TEMPLATE                    -->
+    <!--                                                            -->
+
+    <!-- Combine 'wxlike' with 'wx' or 'wx-lib' templates to have your
+         project build in the same configuration used by the selected
+         wxWidgets build -->
+    <template id="wxlike">
+        <if cond="FORMAT!='autoconf'">
+            <!-- WX_DEBUG-dependent -->
+            <optimize>
+                $(substituteFromDict(WX_DEBUG,{'1':'off','0':'speed'}))
+            </optimize>
+            <debug-info>
+                $(substituteFromDict(WX_DEBUG,{'1':'on','0':'off'}))
+            </debug-info>
+        </if>
+    </template>
+
+    <!-- Template for building wx-based console applications -->
+    <template id="wxconsole" template="wx">
+        <define>wxUSE_GUI=0</define>
+        <app-type>console</app-type>
+    </template>
+
+
+
+    <!--                       UTILITY TAGS                         -->
+    <!--                                                            -->
+
+    <!-- private helper tag -->
+    <define-tag name="__setlibname" rules="lib,dll,module">
+        <set var="__temp">
+            <if cond="FORMAT!='autoconf' and FORMAT!='gnu'">
+                $(attributes['prefix'])_$(WX_PORT)$(WX_VERSION)$(WXLIBPOSTFIX)_$(value)
+            </if>
+            <if cond="FORMAT=='autoconf' or FORMAT=='gnu'">
+                $(attributes['prefix'])_$(WX_PORT)$(WXLIBPOSTFIX)_$(value)-$(WX_VERSION_MAJOR).$(WX_VERSION_MINOR)
+            </if>
+        </set>
+    </define-tag>
+
+    <!-- A simple tag which helps you to define a library name using the same rules used
+         by wxWidgets. Use the 'prefix' attribute to add your lib's prefix.
+         E.g.:
+             <wxlike-libname prefix='mylib'>module1</wxlike-libname>
+             <wxlike-libname prefix='mylib'>module2</wxlike-libname>
+    -->
+    <define-tag name="wxlike-libname" rules="lib">
+        <__setlibname prefix="$(attributes['prefix'])">$(value)</__setlibname>
+        <libname>$(__temp)</libname>
+    </define-tag>
+
+    <!-- exactly like <wxlike-libname> but this one sets the DLL name (and the DLL lib import name)
+         and thus must be used only inside a <dll> target...
+    -->
+    <define-tag name="wxlike-dllname" rules="dll,module">
+        <__setlibname prefix="$(attributes['prefix'])">$(value)</__setlibname>
+        <libname>$(__temp)</libname>
+        <dllname>$(__temp)</dllname>
+    </define-tag>
+
+    <!-- Links against a library which uses the same wxWidgets conventions.
+    -->
+    <define-tag name="wxlike-lib" rules="exe,lib,dll,module">
+        <__setlibname prefix="$(attributes['prefix'])">$(value)</__setlibname>
+        <sys-lib>$(__temp)</sys-lib>
+    </define-tag>
+
+    <!-- Sets as output folder for the generated lib/dll a directory
+         called "lib/$(COMPILER)_lib|dll", just like wxWidgets does.
+         This makes it possible to keep separed the libraries compiled with
+         different compilers and with a different value for WX_SHARED.
+    -->
+    <define-tag name="wxlike-libdirname" rules="lib,dll">
+        <if cond="FORMAT!='autoconf'">
+            <set var="_DIRNAME_SHARED_SUFFIX">
+                <if cond="WX_SHARED=='0'">lib</if>
+                <if cond="WX_SHARED=='1'">dll</if>
+            </set>
+
+            <dirname>lib/$(COMPILER)_$(_DIRNAME_SHARED_SUFFIX)</dirname>
+        </if>
+        <if cond="FORMAT=='autoconf'">
+            <dirname>lib</dirname>
+        </if>
+    </define-tag>
+
+    <!-- Adds to the compiler & linker flags the path for the "include" and the
+         "lib" folders of a library following wxWidgets conventions which is 
+         located in $(value).
+    -->
+    <define-tag name="wxlike-paths" rules="exe,lib,dll,module">
+        <if cond="FORMAT!='autoconf'">
+            <!-- WXLIBPATH is a path like "/lib/vc_lib"
+                 NOTE: even if this template is going to be used for a "lib"
+                       target (which does not uses lib-paths at all), we can still
+                       use the <lib-path> target: it will just be discarded
+             -->
+            <lib-path>$(value)$(WXLIBPATH)</lib-path>
+
+            <!-- no special include paths for a lib following wxWidgets naming
+                 conventions -->
+            <include>$(value)/include</include>
+        </if>
+
+        <!-- for autoconf format the user should use CPPFLAGS and LDFLAGS to
+             specify non-system paths since the wx-based library should have
+             been installed in standard paths
+        -->
+    </define-tag>
+
+
+    <!-- Sets the BUILDDIR variable using the same rules used by wxWidgets itself.
+         This makes it possible to keep separed the object files compiled with
+         different configuration settings.
+    -->
+    <define-global-tag name="set-wxlike-builddir">
+        <!-- note that the builddir for autoconf should always be '.' -->
+        <if cond="FORMAT!='autoconf'">
+            <set var="_BUILDDIR_SHARED_SUFFIX">
+                <if cond="WX_SHARED=='0'"></if>
+                <if cond="WX_SHARED=='1'">dll</if>
+            </set>
+
+            <set var="BUILDDIR">
+                $(COMPILER)$(WX_PORT)_$(WXLIBPOSTFIX)$(_BUILDDIR_SHARED_SUFFIX)
+            </set>
+        </if>
+    </define-global-tag>
+
 </makefile>
Index: build/bakefiles/wxpresets/presets/wx_unix.bkl
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/bakefiles/wxpresets/presets/wx_unix.bkl,v
retrieving revision 1.8
diff -bu2 -r1.8 build/bakefiles/wxpresets/presets/wx_unix.bkl
--- build/bakefiles/wxpresets/presets/wx_unix.bkl
+++ build/bakefiles/wxpresets/presets/wx_unix.bkl
@@ -6,13 +6,13 @@
 See wx.bkl for platform-independent notes.
 
-Usage:
-    Options WX_CPPFLAGS, WX_CFLAGS, WX_CXXFLAGS, WX_LIBS are defined.
-
-
 Format-specific notes:
 
 * autoconf:
         Beware that you have to use AM_OPTIONS_WXCONFIG and
-        AM_PATH_WXCONFIG in your configure.in!
+        AM_PATH_WXCONFIG in your configure.in to get at least the
+        WX_CPPFLAGS, WX_CFLAGS, WX_CXXFLAGS, WX_LIBS option values defined.
+        To detect the WX_* option values typically you also want to use
+        the AM_WXPRESETS_OPTIONS and AM_WXPRESETS_CHECKS macros
+        (see wxpresets.m4 for more info).
 
 -->
@@ -22,9 +22,26 @@
 
     <!-- ============================================================== -->
+    <!--                           Options                              -->
+    <!-- ============================================================== -->
+
+    <!-- on Unix the WX_PORT is not a fixed value but rather an option -->
+    <if cond="not isdefined('WX_PORT')">
+        <set var="WX_PORT_DEFAULT" overwrite="0">gtk2</set>
+        <option name="WX_PORT">
+            <values>gtk1,gtk2,msw,x11,motif,mgl,mac</values>
+            <default-value>$(WX_PORT_DEFAULT)</default-value>
+            <description>
+                Port of the wx library to build against
+            </description>
+        </option>
+    </if>
+
+
+
+    <!-- ============================================================== -->
     <!--                           Autoconf                             -->
     <!-- ============================================================== -->
 
     <if cond="FORMAT=='autoconf'">
-        <!-- Autoconf backend is simplicity itself thanks to wx-config... -->
         <option name="WX_CFLAGS"/>
         <option name="WX_CXXFLAGS"/>
@@ -32,5 +49,25 @@
         <option name="WX_LIBS"/>
         <option name="WX_RESCOMP"/>
+        <option name="WX_VERSION_MAJOR"/>
+        <option name="WX_VERSION_MINOR"/>
+
+        <!-- wxpresets.m4 macros will detect all WX_* options defined above -->
+
+
+        <!-- VERY IMPORTANT: <wx-lib>base</wx-lib> must be the last wx-lib tag
+                            in all your bakefiles !!
+        -->
+        <define-tag name="wx-lib" rules="exe,dll,module">
+            <if cond="value=='base'">
+                <!-- all wx-dependent libraries should have been already listed
+                     thus we can now add WX_LIBS to the linker line -->
+                <ldlibs>$(WX_LIBS)</ldlibs>
     </if>
+            <if cond="value not in ALLLIB_LIST.split()">
+                <error>Unknown wxWidgets library given in the wx-lib tag</error>
+            </if>
+        </define-tag>
+    </if>
+
 
     <!-- ============================================================== -->
@@ -44,24 +81,83 @@
             <description>Location and arguments of wx-config script</description>
         </option>
-        <option name="WX_CFLAGS">
-            <default-value>`$(DOLLAR)(WX_CONFIG) --cflags`</default-value>
-            <description>C flags to use with wxWidgets code</description>
-        </option>
-        <option name="WX_CXXFLAGS">
-            <default-value>`$(DOLLAR)(WX_CONFIG) --cxxflags`</default-value>
-            <description>C++ flags to use with wxWidgets code</description>
-        </option>
-        <option name="WX_CPPFLAGS">
-            <default-value>`$(DOLLAR)(WX_CONFIG) --cppflags`</default-value>
-            <description>C preprocessor flags to use with wxWidgets code</description>
-        </option>
-        <option name="WX_RESCOMP">
-            <default-value>`$(DOLLAR)(WX_CONFIG) --rescomp`</default-value>
-            <description>wxWidgets resource compiler and flags</description>
-        </option>
+
+        <!-- Using the GNU format creates a configurable makefile just like
+             a win32 makefile: i.e. a makefile where you can select the wanted
+             wxWidgets build using the WX_* options
+        -->
+        <set var="WX_CONFIG_DEBUG_FLAG">
+            <if cond="WX_DEBUG=='0'">--debug=no</if>
+            <if cond="WX_DEBUG=='1'">--debug=yes</if>
+        </set>
+        <set var="WX_CONFIG_UNICODE_FLAG">
+            <if cond="WX_UNICODE=='0'">--unicode=no</if>
+            <if cond="WX_UNICODE=='1'">--unicode=yes</if>
+        </set>
+        <set var="WX_CONFIG_SHARED_FLAG">
+            <if cond="WX_SHARED=='0'">--static=yes</if>
+            <if cond="WX_SHARED=='1'">--static=no</if>
+        </set>
+        <set var="WX_CONFIG_SHARED_FLAG">
+            <if cond="WX_SHARED=='0'">--static=yes</if>
+            <if cond="WX_SHARED=='1'">--static=no</if>
+        </set>
+        <set var="WX_CONFIG_PORT_FLAG">
+            --toolkit=$(WX_PORT)
+        </set>
+
+        <set var="WX_CONFIG_FLAGS">
+            $(WX_CONFIG_DEBUG_FLAG) $(WX_CONFIG_UNICODE_FLAG) $(WX_CONFIG_SHARED_FLAG) $(WX_CONFIG_PORT_FLAG)
+        </set>
+
+        <set var="WX_CFLAGS">`$(DOLLAR)(WX_CONFIG) --cflags $(WX_CONFIG_FLAGS)`</set>
+        <set var="WX_CXXFLAGS">`$(DOLLAR)(WX_CONFIG) --cxxflags $(WX_CONFIG_FLAGS)`</set>
+        <set var="WX_CPPFLAGS">`$(DOLLAR)(WX_CONFIG) --cppflags $(WX_CONFIG_FLAGS)`</set>
+        <set var="WX_RESCOMP">`$(DOLLAR)(WX_CONFIG) --rescomp $(WX_CONFIG_FLAGS)`</set>
+
+        <!--
+            VERY IMPORTANT: before starting to build all targets of the generated makefile,
+                            we need to check if the selected wxWidgets build exists; we do
+                            that simply creating the following target; if it fails the make
+                            program will halt with the wx-config error message...
+        -->
+        <action id="test_for_selected_wxbuild">
+            <dependency-of>all</dependency-of>
+
+            <!-- Use @ to hide to the user that we're running wx-config... -->
+            <command>@$(DOLLAR)(WX_CONFIG) $(WX_CONFIG_FLAGS)</command>
+        </action>
+
+        <!-- We need to set the WX_VERSION_MAJOR and WX_VERSION_MINOR which are used 
+             in the <wxlike-libname/> or <wxlike-dllname/> tags.
+             Luckily we have the power of the Unix shell at our hands!
+
+             NOTE: we need to set these as make variables since they go in the name of
+                   the targets!
+        -->
+        <set var="WX_VERSION_MAJOR" make_var="1">$(DOLLAR)(shell echo $(DOLLAR)(WX_VERSION) | cut -c1,1)</set>
+        <set var="WX_VERSION_MINOR" make_var="1">$(DOLLAR)(shell echo $(DOLLAR)(WX_VERSION) | cut -c2,2)</set>
 
         <!-- we need this but the trick used in default-values above
              prevents bakefile from detecting it: -->
-        <set var="FORMAT_OUTPUT_VARIABLES" append="1">WX_CONFIG</set>
+        <set var="FORMAT_OUTPUT_VARIABLES" append="1">WX_CONFIG WX_VERSION</set>
+
+
+        <!-- VERY IMPORTANT: <wx-lib>base</wx-lib> must be the last wx-lib tag
+                            in all your bakefiles !!
+        -->
+        <define-tag name="wx-lib" rules="exe,dll,module">
+            <if cond="value=='base'">
+                <!-- all wx libraries should have been already specified, thus
+                    $(__liblist) should contain the full list... -->
+                <set var="__liblist" append="1">base</set>
+                <ldlibs>`$(WX_CONFIG) $(WX_CONFIG_FLAGS) --libs $(','.join(__liblist.split()))`</ldlibs>
+            </if>
+            <if cond="value!='base'">
+                <set var="__liblist" append="1">$(value)</set>
+            </if>
+            <if cond="value not in ALLLIB_LIST.split()">
+                <error>Unknown wxWidgets library given in the wx-lib tag</error>
+            </if>
+        </define-tag>
     </if>
 
@@ -111,26 +207,3 @@
     </template>
 
-    <!-- VERY IMPORTANT: <wx-lib>base</wx-lib> must be the last wx-lib tag
-                         in all your bakefiles !!
-    -->
-    <define-tag name="wx-lib" rules="exe,dll,module">
-        <if cond="FORMAT=='autoconf' and value=='base'">
-            <!-- all wx-dependent libraries should have been already listed
-                 thus we can now add WX_LIBS to the linker line -->
-            <ldlibs>$(WX_LIBS)</ldlibs>
-        </if>
-        <if cond="FORMAT=='gnu' and value=='base'">
-            <!-- all wx libraries should have been already specified, thus
-                  $(__liblist) should contain the full list... -->
-            <set var="__liblist" append="1">base</set>
-            <ldlibs>`$(WX_CONFIG) --libs $(','.join(__liblist.split()))`</ldlibs>
-        </if>
-        <if cond="FORMAT=='gnu' and value!='base'">
-            <set var="__liblist" append="1">$(value)</set>
-        </if>
-        <if cond="value not in ALLLIB_LIST.split()">
-            <error>Unknown wxWidgets library given in the wx-lib tag</error>
-        </if>
-    </define-tag>
-
 </makefile>
Index: build/bakefiles/wxpresets/presets/wx_win32.bkl
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/bakefiles/wxpresets/presets/wx_win32.bkl,v
retrieving revision 1.27
diff -bu2 -r1.27 build/bakefiles/wxpresets/presets/wx_win32.bkl
--- build/bakefiles/wxpresets/presets/wx_win32.bkl
+++ build/bakefiles/wxpresets/presets/wx_win32.bkl
@@ -11,19 +11,7 @@
 
 
-<!--
-
-FIXME: this template has (at least) the following bugs:
-
- * it's MSW-only, the port is assumed to be wxMSW unconditionally
-
- * multiple wx configurations (CFG variable set when building the
-   library) are not supported
-
--->
-
-<!-- makefile tag signifies the beginning of the bakefile           -->
 <makefile>
 
-    <requires version="0.1.5"/>
+    <requires version="0.2.1"/>
 
     <!--                        OPTIONS                             -->
@@ -42,75 +30,10 @@
     <!--    is not constant, i.e. if it cannot be determined        -->
     <!--    by bakefile itself.                                     -->
+    <!--    Also note that for 'autoconf' format these options      -->
+    <!--    are only useful when used together with wxpresets.m4    -->
+    <!--    macro file which contains macros for detecting the      -->
+    <!--    option values for wx-based projects. See wxpresets.m4   -->
+    <!--    comments for more info.    -->
 
-    <!-- Presets for limited dmars make.exe format: -->
-    <if cond="FORMAT=='dmars'">
-        <set var="WX_UNICODE">0</set>
-        <set var="WX_DEBUG">1</set>
-        <set var="WX_SHARED">0</set>
-    </if>
-
-
-    <!--    This is a standard option that determines               -->
-    <!--    whether the user wants to build this library as         -->
-    <!--    a dll or as a static library.                           -->
-    <if cond="not isdefined('WX_SHARED')">
-        <set var="WX_SHARED_DEFAULT" overwrite="0">0</set>
-        <option name="WX_SHARED">
-            <values>0,1</values>
-            <values-description>,DLL</values-description>
-            <default-value>$(WX_SHARED_DEFAULT)</default-value>
-            <description>
-                Use DLL build of wx library to use?
-            </description>
-        </option>
-    </if>
-
-    <!-- Configuration for building the bakefile with               -->
-    <!-- unicode strings or not (unicode or ansi).                  -->
-    <if cond="not isdefined('WX_UNICODE')">
-        <set var="WX_UNICODE_DEFAULT" overwrite="0">0</set>
-        <option name="WX_UNICODE">
-            <values>0,1</values>
-            <values-description>,Unicode</values-description>
-            <default-value>$(WX_UNICODE_DEFAULT)</default-value>
-            <description>
-                Compile Unicode build of wxWidgets?
-            </description>
-        </option>
-    </if>
-
-    <if cond="not isdefined('WX_DEBUG')">
-        <set var="WX_DEBUG_DEFAULT" overwrite="0">1</set>
-        <option name="WX_DEBUG">
-            <values>0,1</values>
-            <values-description>Release,Debug</values-description>
-            <default-value>$(WX_DEBUG_DEFAULT)</default-value>
-            <description>
-                Use debug build of wxWidgets (define __WXDEBUG__)?
-            </description>
-        </option>
-    </if>
-
-    <if cond="not isdefined('WX_VERSION')">
-        <set var="WX_VERSION_DEFAULT" overwrite="0">28</set>
-        <option name="WX_VERSION">
-            <default-value>$(WX_VERSION_DEFAULT)</default-value>
-            <description>
-                Version of the wx library to build against.
-            </description>
-        </option>
-    </if>
-
-    <if cond="not isdefined('WX_MONOLITHIC')">
-        <set var="WX_MONOLITHIC_DEFAULT" overwrite="0">0</set>
-        <option name="WX_MONOLITHIC">
-            <values>0,1</values>
-            <values-description>Multilib,Monolithic</values-description>
-            <default-value>$(WX_MONOLITHIC_DEFAULT)</default-value>
-            <description>
-                Use monolithic build of wxWidgets?
-            </description>
-        </option>
-    </if>
 
 
@@ -136,9 +59,4 @@
     <!--    extensions in the library names of the                  -->
     <!--    wxWindows library.                                      -->
-    <set var="WXLIBPOSTFIX">
-        <if cond="WX_DEBUG=='1' and WX_UNICODE=='1'">ud</if>
-        <if cond="WX_DEBUG=='1' and WX_UNICODE=='0'">d</if>
-        <if cond="WX_DEBUG=='0' and WX_UNICODE=='1'">u</if>
-    </set>
     <set var="WX3RDPARTYLIBPOSTFIX">
         <if cond="WX_DEBUG=='1'">d</if>
@@ -154,9 +72,12 @@
     </set>
 
-    <set var="WXPORT">
+    <!-- under Unix this is an option (detected at configure-time);
+         under Windows this is not an user option! -->
+    <set var="WX_PORT">
         <if cond="FORMAT=='msevc4prj'">wince</if>
         <if cond="FORMAT!='msevc4prj'">msw</if>
     </set>
-    <set var="WXLIBINCLUDE">$(WXLIBPATH)$(DIRSEP)$(WXPORT)$(WXLIBPOSTFIX)</set>
+
+    <set var="WXLIBINCLUDE">$(WXLIBPATH)$(DIRSEP)$(WX_PORT)$(WXLIBPOSTFIX)</set>
 
 
@@ -174,93 +95,63 @@
             monolithic library
         -->
-        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)</if>
-        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d</if>
-        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u</if>
-        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud</if>
+        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WX_PORT)$(WX_VERSION)</if>
+        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WX_PORT)$(WX_VERSION)d</if>
+        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WX_PORT)$(WX_VERSION)u</if>
+        <if cond="WX_MONOLITHIC=='1' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WX_PORT)$(WX_VERSION)ud</if>
     </set>
 
+
     <!--   Libraries whose name is prefixed with 'wxbase'            -->
-    <set var="WXLIB_NET_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wxbase$(WX_VERSION)_net</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wxbase$(WX_VERSION)d_net</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wxbase$(WX_VERSION)u_net</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wxbase$(WX_VERSION)ud_net</if>
-    </set>
-    <set var="WXLIB_XML_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wxbase$(WX_VERSION)_xml</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wxbase$(WX_VERSION)d_xml</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wxbase$(WX_VERSION)u_xml</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wxbase$(WX_VERSION)ud_xml</if>
-    </set>
-    <set var="WXLIB_ODBC_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wxbase$(WX_VERSION)_odbc</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wxbase$(WX_VERSION)d_odbc</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wxbase$(WX_VERSION)u_odbc</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wxbase$(WX_VERSION)ud_odbc</if>
+    <define-global-tag name="define-wxbase-lib-name">
+        <set var="WXLIB_$(value.upper())_NAME">
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">
+                wxbase$(WX_VERSION)_$(value)
+            </if>
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">
+                wxbase$(WX_VERSION)d_$(value)
+            </if>
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">
+                wxbase$(WX_VERSION)u_$(value)
+            </if>
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">
+                wxbase$(WX_VERSION)ud_$(value)
+            </if>
     </set>
+    </define-global-tag>
 
-    <!--   Libraries whose name is prefixed with 'wx' only          -->
-    <set var="WXLIB_CORE_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_core</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_core</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_core</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_core</if>
-    </set>
-    <set var="WXLIB_MEDIA_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_media</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_media</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_media</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_media</if>
-    </set>
-    <set var="WXLIB_XRC_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_xrc</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_xrc</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_xrc</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_xrc</if>
-    </set>
-    <set var="WXLIB_HTML_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_html</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_html</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_html</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_html</if>
-    </set>
-    <set var="WXLIB_ADV_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_adv</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_adv</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_adv</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_adv</if>
-    </set>
-    <set var="WXLIB_QA_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_qa</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_qa</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_qa</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_qa</if>
-    </set>
-    <set var="WXLIB_DBGRID_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_dbgrid</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_dbgrid</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_dbgrid</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_dbgrid</if>
-    </set>
-    <set var="WXLIB_GL_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_gl</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_gl</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_gl</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_gl</if>
-    </set>
-    <set var="WXLIB_AUI_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_aui</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_aui</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_aui</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_aui</if>
-    </set>
-    <set var="WXLIB_RICHTEXT_NAME">
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)_richtext</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)d_richtext</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">wx$(WXPORT)$(WX_VERSION)u_richtext</if>
-        <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">wx$(WXPORT)$(WX_VERSION)ud_richtext</if>
-    </set>
+    <define-wxbase-lib-name>net</define-wxbase-lib-name>
+    <define-wxbase-lib-name>xml</define-wxbase-lib-name>
+    <define-wxbase-lib-name>odbc</define-wxbase-lib-name>
 
 
+    <!--   Libraries whose name is prefixed with 'wx' only          -->
+    <define-global-tag name="define-wxlib-name">
+        <set var="WXLIB_$(value.upper())_NAME">
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='0'">
+                wx$(WX_PORT)$(WX_VERSION)_$(value)
+            </if>
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='0' and WX_DEBUG=='1'">
+                wx$(WX_PORT)$(WX_VERSION)d_$(value)
+            </if>
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='0'">
+                wx$(WX_PORT)$(WX_VERSION)u_$(value)
+            </if>
+            <if cond="WX_MONOLITHIC=='0' and WX_UNICODE=='1' and WX_DEBUG=='1'">
+                wx$(WX_PORT)$(WX_VERSION)ud_$(value)
+            </if>
+        </set>
+    </define-global-tag>
+
+    <define-wxlib-name>core</define-wxlib-name>
+    <define-wxlib-name>media</define-wxlib-name>
+    <define-wxlib-name>xrc</define-wxlib-name>
+    <define-wxlib-name>html</define-wxlib-name>
+    <define-wxlib-name>adv</define-wxlib-name>
+    <define-wxlib-name>qa</define-wxlib-name>
+    <define-wxlib-name>dbgrid</define-wxlib-name>
+    <define-wxlib-name>gl</define-wxlib-name>
+    <define-wxlib-name>aui</define-wxlib-name>
+    <define-wxlib-name>richtext</define-wxlib-name>
+
 
 
@@ -307,5 +198,5 @@
              (which always have the same name, regardless of WX_MONOLITHIC value) -->
         <if cond="value in CONTRIBLIB_LIST.split()">
-            <sys-lib>wx$(WXPORT)$(WX_VERSION)$(WXLIBPOSTFIX)_$(value)</sys-lib>
+            <sys-lib>wx$(WX_PORT)$(WX_VERSION)$(WXLIBPOSTFIX)_$(value)</sys-lib>
         </if>
 
@@ -332,4 +223,6 @@
         </if>
 
+        <define>$(substituteFromDict(WX_SHARED,{'1':'WXUSINGDLL','0':''}))</define>
+
         <define>$(WXUNICODE_DEFINE)</define>
         <define>$(WXDEBUG_DEFINE)</define>
@@ -398,3 +291,31 @@
     </template>
 
+    <if cond="FORMAT_SUPPORTS_ACTIONS=='1'">
+
+        <!--
+            VERY IMPORTANT: before starting to build all targets of the generated makefile,
+                            we need to check if the selected wxWidgets build exists; we do
+                            that simply creating the following target; if it fails the make
+                            program will halt printing the following nice error message...
+                            (much better than the 'could not find wx/*.h file')
+        -->
+        <action id="test_for_selected_wxbuild">
+            <dependency-of>all</dependency-of>
+
+            <!-- the @ is to hide these actions from the user -->
+            <command>
+                @if not exist $(WX_DIR)$(WXLIBINCLUDE)$(DIRSEP)wx$(DIRSEP)setup.h \
+                    echo ----------------------------------------------------------------------------
+                @if not exist $(WX_DIR)$(WXLIBINCLUDE)$(DIRSEP)wx$(DIRSEP)setup.h \
+                    echo Selected wxWidgets build is not available!
+                @if not exist $(WX_DIR)$(WXLIBINCLUDE)$(DIRSEP)wx$(DIRSEP)setup.h \
+                    echo Please use the options prefixed with WX_ to select another wxWidgets build.
+                @if not exist $(WX_DIR)$(WXLIBINCLUDE)$(DIRSEP)wx$(DIRSEP)setup.h \
+                    echo ----------------------------------------------------------------------------
+                @if not exist $(WX_DIR)$(WXLIBINCLUDE)$(DIRSEP)wx$(DIRSEP)setup.h \
+                    exit 1
+            </command>
+        </action>
+    </if>
+
 </makefile>
Index: build/bakefiles/wxpresets/sample/minimal.bkl
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/bakefiles/wxpresets/sample/minimal.bkl,v
retrieving revision 1.1
diff -bu2 -r1.1 build/bakefiles/wxpresets/sample/minimal.bkl
--- build/bakefiles/wxpresets/sample/minimal.bkl
+++ build/bakefiles/wxpresets/sample/minimal.bkl
@@ -8,4 +8,7 @@
     <exe id="minimal" template="wx">
         <app-type>gui</app-type>
+
+        <!-- this sample builds always in debug mode; if you have
+             compiled wxWidgets in release mode, you'll get link errors! -->
         <debug-info>on</debug-info>
         <runtime-libs>dynamic</runtime-libs>

 	  	 
