--- a/include/wx/msw/menuitem.h
+++ b/include/wx/msw/menuitem.h
@@ -127,6 +127,8 @@ private:
     // common part of all ctors
     void Init();
 
+    // get item position
+    int MSGetMenuItemPos(HMENU hMenu);
 
     // item bitmaps
     wxBitmap m_bmpChecked,     // bitmap to put near the item
--- a/src/msw/menuitem.cpp
+++ b/src/msw/menuitem.cpp
@@ -677,13 +677,12 @@ void wxMenuItem::SetItemLabel(const wxString& txt)
     m_parentMenu->UpdateAccel(this);
 #endif // wxUSE_ACCEL
 
-    const UINT id = GetMSWId();
     HMENU hMenu = GetHMenuOf(m_parentMenu);
     if ( !hMenu )
         return;
 
-    const UINT state = ::GetMenuState(hMenu, id, MF_BYCOMMAND);
-    if ( state == (UINT)-1 )
+    const int itemPos = MSGetMenuItemPos(hMenu);
+    if ( itemPos == -1 )
         return;
 
     // update the text of the native menu item
@@ -699,7 +698,7 @@ void wxMenuItem::SetItemLabel(const wxString& txt)
                  MIIM_DATA |
                  MIIM_BITMAP |
                  MIIM_FTYPE;
-    if ( !::GetMenuItemInfo(hMenu, id, FALSE, &info) )
+    if ( !::GetMenuItemInfo(hMenu, itemPos, TRUE, &info) )
     {
         wxLogLastError(wxT("GetMenuItemInfo"));
         return;
@@ -719,7 +718,7 @@ void wxMenuItem::SetItemLabel(const wxString& txt)
     // Also notice that we shouldn't use our IsOwnerDrawn() because it can be
     // true because it was set by e.g. SetBitmap(), even if the item wasn't
     // made owner drawn at Windows level.
-    if ( !(state & MF_OWNERDRAW) )
+    if ( !(info.fState & MF_OWNERDRAW) )
 #endif // wxUSE_OWNER_DRAWN
     {
         info.fMask |= MIIM_STRING;
@@ -727,7 +726,7 @@ void wxMenuItem::SetItemLabel(const wxString& txt)
         info.cch = m_text.length();
     }
 
-    if ( !::SetMenuItemInfo(hMenu, id, FALSE, &info) )
+    if ( !::SetMenuItemInfo(hMenu, itemPos, TRUE, &info) )
     {
         wxLogLastError(wxT("SetMenuItemInfo"));
     }
@@ -787,10 +786,8 @@ void wxMenuItem::DoSetBitmap(const wxBitmap& bmp, bool bChecked)
     if ( !hMenu )
         return;
 
-    const UINT id = GetMSWId();
-
-    const UINT state = ::GetMenuState(hMenu, id, MF_BYCOMMAND);
-    if ( state == (UINT)-1 )
+    const int itemPos = MSGetMenuItemPos(hMenu);
+    if( itemPos == -1 )
         return;
 
     // update the bitmap of the native menu item
@@ -809,7 +806,7 @@ void wxMenuItem::DoSetBitmap(const wxBitmap& bmp, bool bChecked)
         mii.hbmpItem = GetHBitmapForMenu();
     }
 
-    if ( !::SetMenuItemInfo(hMenu, id, FALSE, &mii) )
+    if ( !::SetMenuItemInfo(hMenu, itemPos, TRUE, &mii) )
     {
         wxLogLastError(wxT("SetMenuItemInfo"));
     }
@@ -1407,6 +1404,31 @@ HBITMAP wxMenuItem::GetHBitmapForMenu(bool checked)
     return HBMMENU_CALLBACK;
 }
 
+int wxMenuItem::MSGetMenuItemPos(HMENU hMenu)
+{
+    const UINT id = GetMSWId();
+    const int menuItems = ::GetMenuItemCount(hMenu);
+    for ( int i = 0; i < menuItems; i++ )
+    {
+        const UINT state = ::GetMenuState(hMenu, i, MF_BYPOSITION);
+        if ( state != (UINT)-1 )
+        {
+            if ( state & MF_POPUP )
+            {
+                if( ::GetSubMenu(hMenu, i) == (HMENU)id )
+                    return i;
+            }
+            else
+            {
+                if ( ::GetMenuItemID(hMenu, i) == id )
+                    return i;
+            }
+        }
+    }
+
+    return -1;
+}
+
 // ----------------------------------------------------------------------------
 // wxMenuItemBase
 // ----------------------------------------------------------------------------
