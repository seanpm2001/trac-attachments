--- a/include/wx/msw/menuitem.h
+++ b/include/wx/msw/menuitem.h
@@ -126,7 +126,8 @@ private:
 private:
     // common part of all ctors
     void Init();
-
+    // get item id or position
+    bool MSGetMenuItemRef(HMENU hMenu, UINT& itemId, BOOL& fByPos);
 
     // item bitmaps
     wxBitmap m_bmpChecked,     // bitmap to put near the item
--- a/src/msw/menuitem.cpp
+++ b/src/msw/menuitem.cpp
@@ -677,13 +677,13 @@ void wxMenuItem::SetItemLabel(const wxString& txt)
     m_parentMenu->UpdateAccel(this);
 #endif // wxUSE_ACCEL
 
-    const UINT id = GetMSWId();
     HMENU hMenu = GetHMenuOf(m_parentMenu);
     if ( !hMenu )
         return;
 
-    const UINT state = ::GetMenuState(hMenu, id, MF_BYCOMMAND);
-    if ( state == (UINT)-1 )
+    UINT itemId; // item id for regular item or item position for submenu
+    BOOL fByPos; // meaning of itemId: FALSE for item id, TRUE for item position
+    if( !MSGetMenuItemRef(hMenu, itemId, fByPos) )
         return;
 
     // update the text of the native menu item
@@ -702,7 +702,7 @@ void wxMenuItem::SetItemLabel(const wxString& txt)
         info.fMask |= MIIM_BITMAP | MIIM_FTYPE;
     else
         info.fMask |= MIIM_TYPE;
-    if ( !::GetMenuItemInfo(hMenu, id, FALSE, &info) )
+    if ( !::GetMenuItemInfo(hMenu, itemId, fByPos, &info) )
     {
         wxLogLastError(wxT("GetMenuItemInfo"));
         return;
@@ -722,7 +722,7 @@ void wxMenuItem::SetItemLabel(const wxString& txt)
     // Also notice that we shouldn't use our IsOwnerDrawn() because it can be
     // true because it was set by e.g. SetBitmap(), even if the item wasn't
     // made owner drawn at Windows level.
-    if ( !(state & MF_OWNERDRAW) )
+    if ( !(info.fState & MF_OWNERDRAW) )
 #endif // wxUSE_OWNER_DRAWN
     {
         if ( isLaterThanWin95 )
@@ -732,7 +732,7 @@ void wxMenuItem::SetItemLabel(const wxString& txt)
         info.cch = m_text.length();
     }
 
-    if ( !::SetMenuItemInfo(hMenu, id, FALSE, &info) )
+    if ( !::SetMenuItemInfo(hMenu, itemId, fByPos, &info) )
     {
         wxLogLastError(wxT("SetMenuItemInfo"));
     }
@@ -792,10 +792,9 @@ void wxMenuItem::DoSetBitmap(const wxBitmap& bmp, bool bChecked)
     if ( !hMenu )
         return;
 
-    const UINT id = GetMSWId();
-
-    const UINT state = ::GetMenuState(hMenu, id, MF_BYCOMMAND);
-    if ( state == (UINT)-1 )
+    UINT itemId; // item id for regular item or item position for submenu
+    BOOL fByPos; // meaning of itemId: FALSE for item id, TRUE for item position
+    if( !MSGetMenuItemRef(hMenu, itemId, fByPos) )
         return;
 
     // update the bitmap of the native menu item
@@ -814,7 +813,7 @@ void wxMenuItem::DoSetBitmap(const wxBitmap& bmp, bool bChecked)
         mii.hbmpItem = GetHBitmapForMenu();
     }
 
-    if ( !::SetMenuItemInfo(hMenu, id, FALSE, &mii) )
+    if ( !::SetMenuItemInfo(hMenu, itemId, fByPos, &mii) )
     {
         wxLogLastError(wxT("SetMenuItemInfo"));
     }
@@ -1412,6 +1411,44 @@ HBITMAP wxMenuItem::GetHBitmapForMenu(bool checked)
     return HBMMENU_CALLBACK;
 }
 
+bool wxMenuItem::MSGetMenuItemRef(HMENU hMenu, UINT& itemId, BOOL& fByPos)
+{
+    const UINT id = GetMSWId();
+
+    if( m_subMenu )
+    {
+        // Apparently submenu cannot be referenced by its id (handle) in Win API calls
+        // so we need to find its position.
+        const int menuItems = ::GetMenuItemCount(hMenu);
+        int i;
+        for( i = 0; i < menuItems; i++ )
+        {
+            if( ::GetSubMenu(hMenu, i) == (HMENU)id )
+                break;
+        }
+        if( i == menuItems )
+            return false;
+
+        const UINT state = ::GetMenuState(hMenu, i, MF_BYPOSITION);
+        if( state == (UINT)-1 || !(LOBYTE(state) & MF_POPUP) )
+            return false;
+
+        itemId = i;
+        fByPos = TRUE;
+    }
+    else
+    {
+        const UINT state = ::GetMenuState(hMenu, id, MF_BYCOMMAND);
+        if ( state == (UINT)-1 )
+            return false;
+
+        itemId = id;
+        fByPos = FALSE;
+    }
+
+    return true;
+}
+
 // ----------------------------------------------------------------------------
 // wxMenuItemBase
 // ----------------------------------------------------------------------------
