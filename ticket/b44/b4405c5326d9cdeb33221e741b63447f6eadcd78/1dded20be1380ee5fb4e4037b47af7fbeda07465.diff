diff --git a/include/wx/docview.h b/include/wx/docview.h
index 8a400b7..16f9523 100644
--- a/include/wx/docview.h
+++ b/include/wx/docview.h
@@ -594,10 +594,7 @@ protected:
     // we're not a wxEvtHandler but we provide this wxEvtHandler-like function
     // which is called from TryBefore() of the derived classes to give our view
     // a chance to process the message before the frame event handlers are used
-    bool TryProcessEvent(wxEvent& event)
-    {
-        return m_childView && m_childView->ProcessEventLocally(event);
-    }
+    bool TryView(wxEvent& event);
 
     // called from EVT_CLOSE handler in the frame: check if we can close and do
     // cleanup if so; veto the event otherwise
@@ -685,7 +682,7 @@ protected:
     // hook the child view into event handlers chain here
     virtual bool TryBefore(wxEvent& event)
     {
-        return TryProcessEvent(event) || BaseClass::TryBefore(event);
+        return TryView(event) || BaseClass::TryBefore(event);
     }
 
 private:
@@ -786,6 +783,9 @@ public:
     wxDocManager *GetDocumentManager() const { return m_docManager; }
 
 protected:
+    // helper for the derived class TryBefore()
+    bool TryDocManager(wxEvent& event);
+
     wxDocManager *m_docManager;
 
     wxDECLARE_NO_COPY_CLASS(wxDocParentFrameAnyBase);
@@ -837,10 +837,7 @@ protected:
     // hook the document manager into event handling chain here
     virtual bool TryBefore(wxEvent& event)
     {
-        if ( m_docManager && m_docManager->ProcessEventLocally(event) )
-            return true;
-
-        return BaseFrame::TryBefore(event);
+        return TryDocManager(event) || BaseFrame::TryBefore(event);
     }
 
 private:
diff --git a/src/common/docview.cpp b/src/common/docview.cpp
index 6544987..a6eed83 100644
--- a/src/common/docview.cpp
+++ b/src/common/docview.cpp
@@ -1962,7 +1962,43 @@ bool wxDocChildFrameAnyBase::CloseView(wxCloseEvent& event)
 }
 
 // ----------------------------------------------------------------------------
-// wxDocParentFrameAnyBase
+// wxDoc{Child,Parent}FrameAnyBase
+// ----------------------------------------------------------------------------
+
+namespace
+{
+
+// This function determines which event are interesting enough to be forwarded
+// to the view from the associated window. It's not clear which events exactly
+// should be forwarded but we definitely shouldn't forward all events as this
+// results in some really weird problems like #12054. Try to forward as few
+// events as possible for now, maybe we'll add more later if it is required by
+// backwards compatibility.
+bool IsEventInterestingForView(const wxEvent& event)
+{
+    const wxEventType evtType = event.GetEventType();
+    return evtType == wxEVT_COMMAND_MENU_SELECTED ||
+            evtType == wxEVT_UPDATE_UI ||
+             evtType == wxEVT_SIZE ||
+              evtType == wxEVT_PAINT;
+}
+
+} // anonymous namespace
+
+bool wxDocChildFrameAnyBase::TryView(wxEvent& event)
+{
+    return m_childView && IsEventInterestingForView(event) &&
+                m_childView->ProcessEventLocally(event);
+}
+
+bool wxDocParentFrameAnyBase::TryDocManager(wxEvent& event)
+{
+    return m_docManager && IsEventInterestingForView(event) &&
+                m_docManager->ProcessEventLocally(event);
+}
+
+// ----------------------------------------------------------------------------
+// wxDocPrintout
 // ----------------------------------------------------------------------------
 
 #if wxUSE_PRINTING_ARCHITECTURE
