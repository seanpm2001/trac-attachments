Index: src/generic/scrlwing.cpp
===================================================================
--- src/generic/scrlwing.cpp	(revision 61599)
+++ src/generic/scrlwing.cpp	(working copy)
@@ -829,94 +829,81 @@
 // this they always have the priority
 void wxScrollHelperBase::HandleOnChar(wxKeyEvent& event)
 {
-    int stx = 0, sty = 0,       // view origin
-        szx = 0, szy = 0,       // view size (total)
-        clix = 0, cliy = 0;     // view size (on screen)
+    // Translate keystrokes to wxEVT_SCROLLWIN_* events to handle
+    // scrolling uniformly, i.e. through CalcScrollInc(), the same way as
+    // HandleOnMouseWheel() and wxAutoScrollTimer
 
-    GetViewStart(&stx, &sty);
-    GetTargetSize(&clix, &cliy);
-    m_targetWindow->GetVirtualSize(&szx, &szy);
+    wxScrollWinEvent newEvent;
 
-    if( m_xScrollPixelsPerLine )
-    {
-        clix /= m_xScrollPixelsPerLine;
-        szx /= m_xScrollPixelsPerLine;
-    }
-    else
-    {
-        clix = 0;
-        szx = -1;
-    }
-    if( m_yScrollPixelsPerLine )
-    {
-        cliy /= m_yScrollPixelsPerLine;
-        szy /= m_yScrollPixelsPerLine;
-    }
-    else
-    {
-        cliy = 0;
-        szy = -1;
-    }
+    newEvent.SetPosition(0);
+    newEvent.SetEventObject(m_win);
 
-    int xScrollOld = m_xScrollPosition,
-        yScrollOld = m_yScrollPosition;
-
-    int dsty;
     switch ( event.GetKeyCode() )
     {
         case WXK_PAGEUP:
-            dsty = sty - (5 * cliy / 6);
-            Scroll(-1, (dsty == -1) ? 0 : dsty);
+            newEvent.SetEventType(wxEVT_SCROLLWIN_PAGEUP);
+            newEvent.SetOrientation(wxVERTICAL);
+            m_win->GetEventHandler()->ProcessEvent(newEvent);
             break;
 
         case WXK_PAGEDOWN:
-            Scroll(-1, sty + (5 * cliy / 6));
+            newEvent.SetEventType(wxEVT_SCROLLWIN_PAGEDOWN);
+            newEvent.SetOrientation(wxVERTICAL);
+            m_win->GetEventHandler()->ProcessEvent(newEvent);
             break;
 
         case WXK_HOME:
-            Scroll(0, event.ControlDown() ? 0 : -1);
+            newEvent.SetEventType(wxEVT_SCROLLWIN_TOP);
+            newEvent.SetOrientation(wxHORIZONTAL);
+            m_win->GetEventHandler()->ProcessEvent(newEvent);
+            
+            if (event.ControlDown())
+            {
+                newEvent.SetOrientation(wxVERTICAL);
+                m_win->GetEventHandler()->ProcessEvent(newEvent);
+            }
             break;
 
         case WXK_END:
-            Scroll(szx - clix, event.ControlDown() ? szy - cliy : -1);
+            newEvent.SetEventType(wxEVT_SCROLLWIN_BOTTOM);
+            newEvent.SetOrientation(wxHORIZONTAL);
+            m_win->GetEventHandler()->ProcessEvent(newEvent);
+
+            if (event.ControlDown())
+            {
+                newEvent.SetOrientation(wxVERTICAL);
+                m_win->GetEventHandler()->ProcessEvent(newEvent);
+            }
             break;
 
         case WXK_UP:
-            Scroll(-1, sty - 1);
+            newEvent.SetEventType(wxEVT_SCROLLWIN_LINEUP);
+            newEvent.SetOrientation(wxVERTICAL);
+            m_win->GetEventHandler()->ProcessEvent(newEvent);
             break;
 
         case WXK_DOWN:
-            Scroll(-1, sty + 1);
+            newEvent.SetEventType(wxEVT_SCROLLWIN_LINEDOWN);
+            newEvent.SetOrientation(wxVERTICAL);
+            m_win->GetEventHandler()->ProcessEvent(newEvent);
             break;
 
         case WXK_LEFT:
-            Scroll(stx - 1, -1);
+            newEvent.SetEventType(wxEVT_SCROLLWIN_LINEUP);
+            newEvent.SetOrientation(wxHORIZONTAL);
+            m_win->GetEventHandler()->ProcessEvent(newEvent);
             break;
 
         case WXK_RIGHT:
-            Scroll(stx + 1, -1);
+            newEvent.SetEventType(wxEVT_SCROLLWIN_LINEDOWN);
+            newEvent.SetOrientation(wxHORIZONTAL);
+            m_win->GetEventHandler()->ProcessEvent(newEvent);
             break;
 
         default:
             // not for us
             event.Skip();
     }
-
-    if ( m_xScrollPosition != xScrollOld )
-    {
-        wxScrollWinEvent evt(wxEVT_SCROLLWIN_THUMBTRACK, m_xScrollPosition,
-                               wxHORIZONTAL);
-        evt.SetEventObject(m_win);
-        m_win->GetEventHandler()->ProcessEvent(evt);
-    }
-
-    if ( m_yScrollPosition != yScrollOld )
-    {
-        wxScrollWinEvent evt(wxEVT_SCROLLWIN_THUMBTRACK, m_yScrollPosition,
-                               wxVERTICAL);
-        evt.SetEventObject(m_win);
-        m_win->GetEventHandler()->ProcessEvent(evt);
-    }
 }
 
 // ----------------------------------------------------------------------------
