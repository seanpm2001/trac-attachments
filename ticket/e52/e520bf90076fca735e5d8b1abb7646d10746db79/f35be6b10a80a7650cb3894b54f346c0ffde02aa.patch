Index: src/osx/cocoa/glcanvas.mm
===================================================================
--- src/osx/cocoa/glcanvas.mm	(revision 77686)
+++ src/osx/cocoa/glcanvas.mm	(working copy)
@@ -81,28 +81,35 @@
 WXGLPixelFormat WXGLChoosePixelFormat(const int *attribList)
 {
     NSOpenGLPixelFormatAttribute data[512];
-    const NSOpenGLPixelFormatAttribute defaultAttribs[] =
+
+    unsigned p = 0;
+    data[p++] = NSOpenGLPFAMinimumPolicy; // make _SIZE tags behave more like GLX
+
+    // Test if we support hardware acceleration
+    const NSOpenGLPixelFormatAttribute testAttribs[] = { NSOpenGLPFAAccelerated, 0 };
+    WXGLPixelFormat testFormat = [[NSOpenGLPixelFormat alloc] initWithAttributes:(NSOpenGLPixelFormatAttribute*) testAttribs];
+    if ( testFormat )
     {
-        NSOpenGLPFADoubleBuffer,
-        NSOpenGLPFAMinimumPolicy,
-        NSOpenGLPFAColorSize,(NSOpenGLPixelFormatAttribute)8,
-        NSOpenGLPFAAlphaSize,(NSOpenGLPixelFormatAttribute)0,
-        NSOpenGLPFADepthSize,(NSOpenGLPixelFormatAttribute)8,
-        NSOpenGLPFAAccelerated, // use hardware accelerated context
-        0
-    };
+        data[p++] = NSOpenGLPFAAccelerated; // use hardware accelerated context
+        [testFormat release];
+    }
 
     const NSOpenGLPixelFormatAttribute *attribs;
     if ( !attribList )
     {
-        attribs = defaultAttribs;
+        // Default attributes
+        data[p++] = NSOpenGLPFADoubleBuffer;
+        data[p++] = NSOpenGLPFAColorSize;
+        data[p++] = (NSOpenGLPixelFormatAttribute)8;
+        data[p++] = NSOpenGLPFAAlphaSize;
+        data[p++] = (NSOpenGLPixelFormatAttribute)0;
+        data[p++] = NSOpenGLPFADepthSize;
+        data[p++] = (NSOpenGLPixelFormatAttribute)8;
+        data[p] = 0;
+        attribs = data;
     }
     else
     {
-        unsigned p = 0;
-        data[p++] = NSOpenGLPFAMinimumPolicy; // make _SIZE tags behave more like GLX
-        data[p++] = NSOpenGLPFAAccelerated; // use hardware accelerated context
-
         for ( unsigned arg = 0; attribList[arg] !=0 && p < WXSIZEOF(data); )
         {
             switch ( attribList[arg++] )
