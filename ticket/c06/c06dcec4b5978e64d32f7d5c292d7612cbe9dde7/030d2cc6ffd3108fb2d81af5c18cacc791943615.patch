--- wxWidgets.orig/include/wx/dcbuffer.h	Wed Nov  1 08:08:18 2006
+++ wxWidgets/include/wx/dcbuffer.h	Thu Nov  2 20:13:49 2006
@@ -38,4 +38,8 @@
 #define wxBUFFER_CLIENT_AREA        0x02
 
+// Set when not using specific buffer bitmap. Note that this
+// is private style and not returned by GetStyle.
+#define wxBUFFER_USES_SHARED_BUFFER 0x04
+
 class WXDLLEXPORT wxBufferedDC : public wxMemoryDC
 {
@@ -99,23 +103,9 @@
     // BufferedDC must blit before the derived class (which may own the dc it's
     // blitting to) is destroyed.
-    void UnMask()
-    {
-        wxCHECK_RET( m_dc, _T("no underlying wxDC?") );
-        wxASSERT_MSG( m_buffer && m_buffer->IsOk(), _T("invalid backing store") );
-
-        wxCoord x = 0,
-                y = 0;
-
-        if ( m_style & wxBUFFER_CLIENT_AREA )
-            GetDeviceOrigin(&x, &y);
-
-        m_dc->Blit(0, 0, m_buffer->GetWidth(), m_buffer->GetHeight(),
-                   this, -x, -y );
-        m_dc = NULL;
-    }
+    void UnMask();
 
     // Set and get the style
     void SetStyle(int style) { m_style = style; }
-    int GetStyle() const { return m_style; }
+    int GetStyle() const { return m_style & ~wxBUFFER_USES_SHARED_BUFFER; }
 
 private:
--- wxWidgets.orig/src/common/dcbufcmn.cpp	Wed Nov  1 08:09:04 2006
+++ wxWidgets/src/common/dcbufcmn.cpp	Thu Nov  2 20:27:25 2006
@@ -49,4 +49,7 @@
     static wxBitmap* GetBuffer(int w, int h)
     {
+        if ( ms_usingSharedBuffer )
+            return new wxBitmap(w, h);
+
         if ( !ms_buffer ||
                 w > ms_buffer->GetWidth() ||
@@ -56,9 +59,25 @@
             ms_buffer = new wxBitmap(w, h);
         }
+
+        ms_usingSharedBuffer = true;
         return ms_buffer;
     }
 
+    static void ReleaseBuffer(wxBitmap* buffer)
+    {
+        if ( buffer == ms_buffer )
+        {
+            wxASSERT_MSG( ms_usingSharedBuffer, wxT("shared buffer already released") );
+            ms_usingSharedBuffer = false;
+        }
+        else
+        {
+            wxDELETE(buffer);
+        }
+    }
+
 private:
     static wxBitmap *ms_buffer;
+    static bool ms_usingSharedBuffer;
 
     DECLARE_DYNAMIC_CLASS(wxSharedDCBufferManager)
@@ -66,4 +85,5 @@
 
 wxBitmap* wxSharedDCBufferManager::ms_buffer = NULL;
+bool wxSharedDCBufferManager::ms_usingSharedBuffer = false;
 
 IMPLEMENT_DYNAMIC_CLASS(wxSharedDCBufferManager, wxModule)
@@ -81,4 +101,5 @@
 
         m_buffer = wxSharedDCBufferManager::GetBuffer(w, h);
+        m_style |= wxBUFFER_USES_SHARED_BUFFER;
     }
 
@@ -86,2 +107,20 @@
 }
 
+void wxBufferedDC::UnMask()
+{
+    wxCHECK_RET( m_dc, _T("no underlying wxDC?") );
+    wxASSERT_MSG( m_buffer && m_buffer->IsOk(), _T("invalid backing store") );
+
+    wxCoord x = 0,
+            y = 0;
+
+    if ( m_style & wxBUFFER_CLIENT_AREA )
+        GetDeviceOrigin(&x, &y);
+
+    m_dc->Blit(0, 0, m_buffer->GetWidth(), m_buffer->GetHeight(),
+               this, -x, -y );
+    m_dc = NULL;
+
+    if ( m_style & wxBUFFER_USES_SHARED_BUFFER )
+        wxSharedDCBufferManager::ReleaseBuffer(m_buffer);
+}

 	  	 
