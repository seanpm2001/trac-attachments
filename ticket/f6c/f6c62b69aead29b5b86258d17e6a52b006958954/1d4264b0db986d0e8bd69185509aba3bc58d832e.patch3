Index: docs/latex/wx/bufferdc.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/bufferdc.tex,v
retrieving revision 1.11
diff -bu2 -r1.11 docs/latex/wx/bufferdc.tex
--- docs/latex/wx/bufferdc.tex
+++ docs/latex/wx/bufferdc.tex
@@ -52,5 +52,5 @@
 \func{}{wxBufferedDC}{\param{wxDC *}{dc}, \param{const wxSize\& }{area}, \param{int }{style = wxBUFFER\_CLIENT\_AREA}}

-\func{}{wxBufferedDC}{\param{wxDC *}{dc}, \param{const wxBitmap\& }{buffer}, \param{int }{style = wxBUFFER\_CLIENT\_AREA}}
+\func{}{wxBufferedDC}{\param{wxDC *}{dc}, \param{wxBitmap\& }{buffer}, \param{int }{style = wxBUFFER\_CLIENT\_AREA}}

 If you use the first, default, constructor, you must call one of the
@@ -83,5 +83,5 @@
 \func{void}{Init}{\param{wxDC *}{dc}, \param{const wxSize\& }{area}, \param{int }{style = wxBUFFER\_CLIENT\_AREA}}

-\func{void}{Init}{\param{wxDC *}{dc}, \param{const wxBitmap\& }{buffer}, \param{int }{style = wxBUFFER\_CLIENT\_AREA}}
+\func{void}{Init}{\param{wxDC *}{dc}, \param{wxBitmap\& }{buffer}, \param{int }{style = wxBUFFER\_CLIENT\_AREA}}

 These functions initialize the object created using the default constructor.
@@ -133,5 +133,5 @@
 \membersection{wxBufferedPaintDC::wxBufferedPaintDC}\label{wxbufferedpaintdcctor}

-\func{}{wxBufferedPaintDC}{\param{wxWindow *}{window}, \param{const wxBitmap\& }{buffer}, \param{int }{style = wxBUFFER\_CLIENT\_AREA}}
+\func{}{wxBufferedPaintDC}{\param{wxWindow *}{window}, \param{wxBitmap\& }{buffer}, \param{int }{style = wxBUFFER\_CLIENT\_AREA}}

 \func{}{wxBufferedPaintDC}{\param{wxWindow *}{window}, \param{int }{style = wxBUFFER\_CLIENT\_AREA}}
Index: docs/latex/wx/memorydc.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/memorydc.tex,v
retrieving revision 1.9
diff -bu2 -r1.9 docs/latex/wx/memorydc.tex
--- docs/latex/wx/memorydc.tex
+++ docs/latex/wx/memorydc.tex
@@ -42,20 +42,26 @@
 \membersection{wxMemoryDC::wxMemoryDC}\label{wxmemorydcctor}

-\func{}{wxMemoryDC}{\param{const wxBitmap\& }{bitmap = wxNullBitmap}}
+\func{}{wxMemoryDC}{\void}

 Constructs a new memory device context.

-Use the {\it Ok} member to test whether the constructor was successful
-in creating a usable device context. If you don't pass a valid bitmap
-to the constructor, don't forget to select a bitmap into the DC before
-drawing on it.
+Use the \helpref{IsOk}{wxdcisok} member to test whether the constructor was successful
+in creating a usable device context.
+Don't forget to select a bitmap into the DC before drawing on it.
+
+\func{}{wxMemoryDC}{\param{wxBitmap\& }{bitmap}}
+
+Constructs a new memory device context and selects a bitmap inside it.
+Use the \helpref{IsOk}{wxdcisok} member to test whether the constructor was successful
+in creating a usable device context.
+

 \membersection{wxMemoryDC::SelectObject}\label{wxmemorydcselectobject}

-\func{void}{SelectObject}{\param{const wxBitmap\& }{bitmap}}
+\func{void}{SelectObject}{\param{wxBitmap\& }{bitmap}}

 Selects the given bitmap into the device context, to use as the memory
 bitmap. Selecting the bitmap into a memory DC allows you to draw into
-the DC (and therefore the bitmap) and also to use {\bf Blit} to copy
+the DC (and therefore the bitmap) and also to use \helpref{wxDC::Blit}{wxdcblit} to copy
 the bitmap to a window. For this purpose, you may find \helpref{wxDC::DrawIcon}{wxdcdrawicon}\rtfsp
 easier to use instead.
@@ -65,2 +71,8 @@
 be destroyed safely.

+Note that this function does not take a {\tt const} bitmap since the bitmap you
+pass will be modified by any draw operation done on this DC.
+
+\wxheading{See also}
+
+\helpref{wxDC::DrawBitmap}{wxdcdrawbitmap}
Index: include/wx/dcbuffer.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dcbuffer.h,v
retrieving revision 1.30
diff -bu2 -r1.30 include/wx/dcbuffer.h
--- include/wx/dcbuffer.h
+++ include/wx/dcbuffer.h
@@ -51,5 +51,5 @@
     // Construct a wxBufferedDC using a user supplied buffer.
     wxBufferedDC(wxDC *dc,
-                 const wxBitmap& buffer = wxNullBitmap,
+                 wxBitmap& buffer = wxNullBitmap,
                  int style = wxBUFFER_CLIENT_AREA)
         : m_dc(NULL),
@@ -79,5 +79,5 @@
     // These reimplement the actions of the ctors for two stage creation
     void Init(wxDC *dc,
-              const wxBitmap& buffer = wxNullBitmap,
+              wxBitmap& buffer = wxNullBitmap,
               int style = wxBUFFER_CLIENT_AREA)
     {
@@ -146,5 +146,5 @@

     // the buffer (selected in this DC)
-    const wxBitmap *m_buffer;
+    wxBitmap *m_buffer;

     // the buffering style
@@ -166,5 +166,5 @@
 public:
     // If no bitmap is supplied by the user, a temporary one will be created.
-    wxBufferedPaintDC(wxWindow *window, const wxBitmap& buffer, int style = wxBUFFER_CLIENT_AREA)
+    wxBufferedPaintDC(wxWindow *window, wxBitmap& buffer, int style = wxBUFFER_CLIENT_AREA)
         : m_paintdc(window)
     {
Index: include/wx/cocoa/dcmemory.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/cocoa/dcmemory.h,v
retrieving revision 1.11
diff -bu2 -r1.11 include/wx/cocoa/dcmemory.h
--- include/wx/cocoa/dcmemory.h
+++ include/wx/cocoa/dcmemory.h
@@ -18,9 +18,11 @@
 {
     DECLARE_DYNAMIC_CLASS(wxMemoryDC)
+
 public:
-    wxMemoryDC( const wxBitmap& bitmap = wxNullBitmap );
+    wxMemoryDC() { Init(); }
+    wxMemoryDC(wxBitmap& bitmap) { Init(); SelectObject(bitmap); }
     wxMemoryDC( wxDC *dc ); // Create compatible DC
     virtual ~wxMemoryDC(void);
-    virtual void SelectObject(const wxBitmap& bitmap);
+    virtual void SelectObject(wxBitmap& bitmap);
     virtual void DoGetSize(int *width, int *height) const;
 protected:
@@ -35,4 +37,7 @@
         wxCoord width, wxCoord height, wxCoord xsrc, wxCoord ysrc,
         int logicalFunc, bool useMask, wxCoord xsrcMask, wxCoord ysrcMask);
+
+private:
+    void Init();
 };

Index: include/wx/dfb/dcmemory.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dfb/dcmemory.h,v
retrieving revision 1.3
diff -bu2 -r1.3 include/wx/dfb/dcmemory.h
--- include/wx/dfb/dcmemory.h
+++ include/wx/dfb/dcmemory.h
@@ -18,8 +18,9 @@
 {
 public:
-    wxMemoryDC( const wxBitmap& bitmap = wxNullBitmap );
+    wxMemoryDC() { Init(); }
+    wxMemoryDC(wxBitmap& bitmap) { Init(); SelectObject(bitmap); }
     wxMemoryDC(wxDC *dc); // create compatible DC

-    virtual void SelectObject(const wxBitmap& bitmap);
+    virtual void SelectObject(wxBitmap& bitmap);

     // implementation from now on:
@@ -28,4 +29,6 @@

 private:
+    void Init();
+
     wxBitmap m_bmp;

Index: include/wx/gtk/dcmemory.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/dcmemory.h,v
retrieving revision 1.22
diff -bu2 -r1.22 include/wx/gtk/dcmemory.h
--- include/wx/gtk/dcmemory.h
+++ include/wx/gtk/dcmemory.h
@@ -27,8 +27,9 @@
 {
 public:
-    wxMemoryDC( const wxBitmap& bitmap = wxNullBitmap );
+    wxMemoryDC() : wxWindowDC() { Init(); }
+    wxMemoryDC(wxBitmap& bitmap) : wxWindowDC() { Init(); SelectObject(bitmap); }
     wxMemoryDC( wxDC *dc ); // Create compatible DC
     virtual ~wxMemoryDC();
-    virtual void SelectObject( const wxBitmap& bitmap );
+    virtual void SelectObject(wxBitmap& bitmap);

     // these get reimplemented for mono-bitmaps to behave
@@ -49,4 +50,7 @@
     void DoGetSize( int *width, int *height ) const;

+private:
+    void Init();
+
     DECLARE_DYNAMIC_CLASS(wxMemoryDC)
 };
Index: include/wx/gtk1/dcmemory.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk1/dcmemory.h,v
retrieving revision 1.21
diff -bu2 -r1.21 include/wx/gtk1/dcmemory.h
--- include/wx/gtk1/dcmemory.h
+++ include/wx/gtk1/dcmemory.h
@@ -27,8 +27,9 @@
 {
 public:
-    wxMemoryDC( const wxBitmap& bitmap = wxNullBitmap );
+    wxMemoryDC() { Init(); }
+    wxMemoryDC(wxBitmap& bitmap) { Init(); SelectObject(bitmap); }
     wxMemoryDC( wxDC *dc ); // Create compatible DC
     virtual ~wxMemoryDC();
-    virtual void SelectObject( const wxBitmap& bitmap );
+    virtual void SelectObject(wxBitmap& bitmap);
     void DoGetSize( int *width, int *height ) const;

@@ -47,4 +48,6 @@

 private:
+    void Init();
+
     DECLARE_DYNAMIC_CLASS(wxMemoryDC)
 };
Index: include/wx/mac/carbon/dcmemory.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/dcmemory.h,v
retrieving revision 1.9
diff -bu2 -r1.9 include/wx/mac/carbon/dcmemory.h
--- include/wx/mac/carbon/dcmemory.h
+++ include/wx/mac/carbon/dcmemory.h
@@ -19,9 +19,10 @@
   DECLARE_DYNAMIC_CLASS(wxMemoryDC)

-  public:
-    wxMemoryDC( const wxBitmap& bitmap = wxNullBitmap );
+public:
+    wxMemoryDC() { Init(); }
+    wxMemoryDC(wxBitmap& bitmap) { Init(); SelectObject(bitmap); }
     wxMemoryDC( wxDC *dc ); // Create compatible DC
     virtual ~wxMemoryDC(void);
-    virtual void SelectObject( const wxBitmap& bitmap );
+    virtual void SelectObject(wxBitmap& bitmap);
 	wxBitmap    GetSelectedBitmap() { return m_selected ; }
 	wxBitmap    GetSelectedObject() { return GetSelectedBitmap() ; }
@@ -30,5 +31,7 @@
     virtual void DoGetSize( int *width, int *height ) const;

-  private:
+private:
+    void Init();
+
     wxBitmap  m_selected;
 };
Index: include/wx/mgl/dcmemory.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mgl/dcmemory.h,v
retrieving revision 1.10
diff -bu2 -r1.10 include/wx/mgl/dcmemory.h
--- include/wx/mgl/dcmemory.h
+++ include/wx/mgl/dcmemory.h
@@ -27,8 +27,9 @@
 {
 public:
-    wxMemoryDC( const wxBitmap& bitmap = wxNullBitmap );
+    wxMemoryDC() { Init(); }
+    wxMemoryDC(wxBitmap& bitmap) { Init(); SelectObject(bitmap); }
     wxMemoryDC(wxDC *dc); // Create compatible DC
     virtual ~wxMemoryDC();
-    virtual void SelectObject(const wxBitmap& bitmap);
+    virtual void SelectObject(wxBitmap& bitmap);

     // these get reimplemented for mono-bitmaps to behave
@@ -47,4 +48,6 @@

 private:
+    void Init();
+
     DECLARE_DYNAMIC_CLASS(wxMemoryDC)
 };
Index: include/wx/motif/dcmemory.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/motif/dcmemory.h,v
retrieving revision 1.15
diff -bu2 -r1.15 include/wx/motif/dcmemory.h
--- include/wx/motif/dcmemory.h
+++ include/wx/motif/dcmemory.h
@@ -20,9 +20,10 @@

 public:
-    wxMemoryDC( const wxBitmap& bitmap = wxNullBitmap );
+    wxMemoryDC() { Init(); }
+    wxMemoryDC(wxBitmap& bitmap) { Init(); SelectObject(bitmap); }
     wxMemoryDC( wxDC *dc ); // Create compatible DC
     virtual ~wxMemoryDC();

-    virtual void SelectObject( const wxBitmap& bitmap );
+    virtual void SelectObject(wxBitmap& bitmap);

     void DoGetSize( int *width, int *height ) const;
@@ -33,4 +34,6 @@
     friend class wxPaintDC;

+    void Init();
+
     wxBitmap  m_bitmap;
 };
Index: include/wx/msw/dcmemory.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/dcmemory.h,v
retrieving revision 1.12
diff -bu2 -r1.12 include/wx/msw/dcmemory.h
--- include/wx/msw/dcmemory.h
+++ include/wx/msw/dcmemory.h
@@ -18,8 +18,9 @@
 {
 public:
-    wxMemoryDC( const wxBitmap& bitmap = wxNullBitmap );
+    wxMemoryDC() { CreateCompatible(NULL); Init(); }
+    wxMemoryDC(wxBitmap& bitmap) { CreateCompatible(NULL); Init(); SelectObject(bitmap); }
     wxMemoryDC(wxDC *dc); // Create compatible DC

-    virtual void SelectObject(const wxBitmap& bitmap);
+    virtual void SelectObject(wxBitmap& bitmap);

 protected:
Index: include/wx/os2/dcmemory.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/dcmemory.h,v
retrieving revision 1.12
diff -bu2 -r1.12 include/wx/os2/dcmemory.h
--- include/wx/os2/dcmemory.h
+++ include/wx/os2/dcmemory.h
@@ -18,8 +18,9 @@
 {
 public:
-    wxMemoryDC( const wxBitmap& bitmap = wxNullBitmap );
+    wxMemoryDC() { CreateCompatible(NULL); Init(); }
+    wxMemoryDC(wxBitmap& bitmap) { CreateCompatible(NULL); Init(); SelectObject(bitmap); }
     wxMemoryDC(wxDC* pDC); // Create compatible DC

-    virtual void SelectObject(const wxBitmap& rBitmap);
+    virtual void SelectObject(wxBitmap& bitmap);
 protected:
     // override some base class virtuals
Index: include/wx/palmos/dcmemory.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/dcmemory.h,v
retrieving revision 1.4
diff -bu2 -r1.4 include/wx/palmos/dcmemory.h
--- include/wx/palmos/dcmemory.h
+++ include/wx/palmos/dcmemory.h
@@ -18,8 +18,9 @@
 {
 public:
-    wxMemoryDC( const wxBitmap& bitmap = wxNullBitmap );
+    wxMemoryDC() { Init(); }
+    wxMemoryDC(wxBitmap& bitmap) { Init(); SelectObject(bitmap); }
     wxMemoryDC(wxDC *dc); // Create compatible DC

-    virtual void SelectObject(const wxBitmap& bitmap);
+    virtual void SelectObject(wxBitmap& bitmap);

 protected:
Index: include/wx/x11/dcmemory.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/x11/dcmemory.h,v
retrieving revision 1.11
diff -bu2 -r1.11 include/wx/x11/dcmemory.h
--- include/wx/x11/dcmemory.h
+++ include/wx/x11/dcmemory.h
@@ -18,8 +18,9 @@
 {
 public:
-    wxMemoryDC( const wxBitmap& bitmap = wxNullBitmap );
+    wxMemoryDC() { Init(); }
+    wxMemoryDC(wxBitmap& bitmap) { Init(); SelectObject(bitmap); }
     wxMemoryDC( wxDC *dc ); // Create compatible DC
     virtual ~wxMemoryDC();
-    virtual void SelectObject( const wxBitmap& bitmap );
+    virtual void SelectObject(wxBitmap& bitmap);

     // implementation
@@ -29,4 +30,7 @@
     void DoGetSize( int *width, int *height ) const;

+private:
+    void Init();
+
     DECLARE_DYNAMIC_CLASS(wxMemoryDC)
 };
Index: src/dfb/dcmemory.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/dfb/dcmemory.cpp,v
retrieving revision 1.3
diff -bu2 -r1.3 src/dfb/dcmemory.cpp
--- src/dfb/dcmemory.cpp
+++ src/dfb/dcmemory.cpp
@@ -40,8 +40,6 @@
 IMPLEMENT_DYNAMIC_CLASS(wxMemoryDC, wxDC)

-wxMemoryDC::wxMemoryDC( const wxBitmap& bitmap )
+void wxMemoryDC::Init()
 {
-    if ( bitmap.IsOk() )
-        SelectObject(bitmap);
 }

@@ -50,6 +48,11 @@
 }

-void wxMemoryDC::SelectObject(const wxBitmap& bitmap)
+void wxMemoryDC::SelectObject(wxBitmap& bitmap)
 {
+    // make sure that the given wxBitmap is not sharing its data with other
+    // wxBitmap instances as its contents will be modified by any drawing
+    // operation done on this DC
+    if (bitmap.IsOk()) bitmap.UnShare();
+
     m_bmp = bitmap;

     wxMemoryDC dcMem;
Index: src/gtk/dcmemory.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/dcmemory.cpp,v
retrieving revision 1.34
diff -bu2 -r1.34 src/gtk/dcmemory.cpp
--- src/gtk/dcmemory.cpp
+++ src/gtk/dcmemory.cpp
@@ -22,6 +22,5 @@
 IMPLEMENT_DYNAMIC_CLASS(wxMemoryDC,wxWindowDC)

-wxMemoryDC::wxMemoryDC( const wxBitmap& bitmap )
-   : wxWindowDC()
+void wxMemoryDC::Init()
 {
     m_ok = false;
@@ -35,7 +34,4 @@
     m_layout = pango_layout_new( m_context );
     m_fontdesc = pango_font_description_copy( pango_context_get_font_description( m_context ) );
-
-    if ( bitmap.IsOk() )
-        SelectObject(bitmap);
 }

@@ -43,12 +39,5 @@
   : wxWindowDC()
 {
-    m_ok = false;
-
-    m_cmap = gtk_widget_get_default_colormap();
-
-    m_context = gdk_pango_context_get();
-    pango_context_set_language( m_context, gtk_get_default_language() );
-    m_layout = pango_layout_new( m_context );
-    m_fontdesc = pango_font_description_copy( pango_context_get_font_description( m_context ) );
+    Init();
 }

@@ -58,7 +47,13 @@
 }

-void wxMemoryDC::SelectObject( const wxBitmap& bitmap )
+void wxMemoryDC::SelectObject( wxBitmap& bitmap )
 {
     Destroy();
+
+    // make sure that the given wxBitmap is not sharing its data with other
+    // wxBitmap instances as its contents will be modified by any drawing
+    // operation done on this DC
+    if (bitmap.IsOk()) ((wxBitmap&)bitmap).UnShare();
+
     m_selected = bitmap;
     if (m_selected.Ok())
Index: src/gtk1/dcmemory.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk1/dcmemory.cpp,v
retrieving revision 1.33
diff -bu2 -r1.33 src/gtk1/dcmemory.cpp
--- src/gtk1/dcmemory.cpp
+++ src/gtk1/dcmemory.cpp
@@ -22,13 +22,9 @@
 IMPLEMENT_DYNAMIC_CLASS(wxMemoryDC,wxWindowDC)

-wxMemoryDC::wxMemoryDC( const wxBitmap& bitmap )
-    : wxWindowDC()
+void wxMemoryDC::Init()
 {
     m_ok = false;

     m_cmap = gtk_widget_get_default_colormap();
-
-    if ( bitmap.IsOk() )
-        SelectObject(bitmap);
 }

@@ -36,8 +32,5 @@
           : wxWindowDC()
 {
-    m_ok = false;
-
-    m_cmap = gtk_widget_get_default_colormap();
-
+    Init();
 }

@@ -46,7 +39,13 @@
 }

-void wxMemoryDC::SelectObject( const wxBitmap& bitmap )
+void wxMemoryDC::SelectObject( wxBitmap& bitmap )
 {
     Destroy();
+
+    // make sure that the given wxBitmap is not sharing its data with other
+    // wxBitmap instances as its contents will be modified by any drawing
+    // operation done on this DC
+    if (bitmap.IsOk()) bitmap.UnShare();
+
     m_selected = bitmap;
     if (m_selected.Ok())
Index: src/mac/carbon/dcmemory.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/dcmemory.cpp,v
retrieving revision 1.26
diff -bu2 -r1.26 src/mac/carbon/dcmemory.cpp
--- src/mac/carbon/dcmemory.cpp
+++ src/mac/carbon/dcmemory.cpp
@@ -23,6 +23,5 @@
 IMPLEMENT_DYNAMIC_CLASS(wxMemoryDC,wxPaintDC)

-wxMemoryDC::wxMemoryDC( const wxBitmap& bitmap )
-: m_selected()
+void wxMemoryDC::Init()
 {
     m_ok = true;
@@ -32,7 +31,4 @@
     SetFont(*wxNORMAL_FONT);
     m_ok = false;
-
-    if ( bitmap.IsOk() )
-        SelectObject(bitmap);
 }

@@ -40,10 +36,5 @@
 : m_selected()
 {
-    m_ok = true;
-    SetBackground(*wxWHITE_BRUSH);
-    SetBrush(*wxWHITE_BRUSH);
-    SetPen(*wxBLACK_PEN);
-    SetFont(*wxNORMAL_FONT);
-    m_ok = false;
+    Init();
 }

@@ -64,5 +55,5 @@
 }

-void wxMemoryDC::SelectObject( const wxBitmap& bitmap )
+void wxMemoryDC::SelectObject( wxBitmap& bitmap )
 {
     if ( m_selected.Ok() )
@@ -79,4 +70,9 @@
     }

+    // make sure that the given wxBitmap is not sharing its data with other
+    // wxBitmap instances as its contents will be modified by any drawing
+    // operation done on this DC
+    if (bitmap.IsOk()) bitmap.UnShare();
+
     m_selected = bitmap;
     if (m_selected.Ok())
Index: src/mgl/dcmemory.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mgl/dcmemory.cpp,v
retrieving revision 1.10
diff -bu2 -r1.10 src/mgl/dcmemory.cpp
--- src/mgl/dcmemory.cpp
+++ src/mgl/dcmemory.cpp
@@ -25,16 +25,12 @@
 IMPLEMENT_DYNAMIC_CLASS(wxMemoryDC,wxWindowDC)

-wxMemoryDC::wxMemoryDC( const wxBitmap& bitmap )
-    : wxDC()
+void wxMemoryDC::Init()
 {
     m_isMemDC = true;
-
-    if ( bitmap.IsOk() )
-        SelectObject(bitmap);
 }

 wxMemoryDC::wxMemoryDC(wxDC *WXUNUSED(dc)) : wxDC()
 {
-    m_isMemDC = true;
+    Init();
 }

@@ -43,8 +39,13 @@
 }

-void wxMemoryDC::SelectObject(const wxBitmap& bitmap)
+void wxMemoryDC::SelectObject(wxBitmap& bitmap)
 {
     if ( bitmap.Ok() )
     {
+        // make sure that the given wxBitmap is not sharing its data with other
+        // wxBitmap instances as its contents will be modified by any drawing
+        // operation done on this DC
+        bitmap.UnShare();
+
         m_selected = bitmap;
         SetMGLDC(m_selected.CreateTmpDC(), TRUE);
Index: src/motif/dcmemory.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/dcmemory.cpp,v
retrieving revision 1.26
diff -bu2 -r1.26 src/motif/dcmemory.cpp
--- src/motif/dcmemory.cpp
+++ src/motif/dcmemory.cpp
@@ -36,5 +36,5 @@
 IMPLEMENT_DYNAMIC_CLASS(wxMemoryDC, wxWindowDC)

-wxMemoryDC::wxMemoryDC( const wxBitmap& bitmap )
+void wxMemoryDC::Init()
 {
     m_ok = true;
@@ -58,7 +58,4 @@
     SetPen (* wxBLACK_PEN);
     SetFont(wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT));
-
-    if ( bitmap.IsOk() )
-        SelectObject(bitmap);
 }

@@ -93,6 +90,11 @@
 }

-void wxMemoryDC::SelectObject( const wxBitmap& bitmap )
+void wxMemoryDC::SelectObject( wxBitmap& bitmap )
 {
+    // make sure that the given wxBitmap is not sharing its data with other
+    // wxBitmap instances as its contents will be modified by any drawing
+    // operation done on this DC
+    if (bitmap.IsOk()) bitmap.UnShare();
+
     m_bitmap = bitmap;

Index: src/msw/dc.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/dc.cpp,v
retrieving revision 1.213
diff -bu2 -r1.213 src/msw/dc.cpp
--- src/msw/dc.cpp
+++ src/msw/dc.cpp
@@ -1246,5 +1246,10 @@
             // level
             wxMemoryDC memDC;
-            memDC.SelectObject(bmp);
+
+            // NOTE: we are selecting the bitmap only to do a blitting and thus
+            //       the wx_const_cast is safe: the bitmap data won't be modified.
+            //       Also note that we cannot use DrawBitmap() since we are inside
+            //       DoDrawBitmap() !
+            memDC.SelectObject(wx_const_cast(wxBitmap&, bmp));

             Blit(x, y, width, height, &memDC, 0, 0, wxCOPY, useMask);
Index: src/msw/dcmemory.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/dcmemory.cpp,v
retrieving revision 1.36
diff -bu2 -r1.36 src/msw/dcmemory.cpp
--- src/msw/dcmemory.cpp
+++ src/msw/dcmemory.cpp
@@ -48,14 +48,4 @@
 // ----------------------------------------------------------------------------

-wxMemoryDC::wxMemoryDC( const wxBitmap& bitmap )
-{
-    CreateCompatible(NULL);
-
-    Init();
-
-    if ( bitmap.IsOk() )
-        SelectObject(bitmap);
-}
-
 wxMemoryDC::wxMemoryDC(wxDC *dc)
 {
@@ -92,5 +82,5 @@
 }

-void wxMemoryDC::SelectObject(const wxBitmap& bitmap)
+void wxMemoryDC::SelectObject(wxBitmap& bitmap)
 {
     // select old bitmap out of the device context
@@ -112,4 +102,9 @@
                   wxT("Bitmap is selected in another wxMemoryDC, delete the first wxMemoryDC or use SelectObject(NULL)") );

+    // make sure that the given wxBitmap is not sharing its data with other
+    // wxBitmap instances as its contents will be modified by any drawing
+    // operation done on this DC
+    if (bitmap.IsOk()) bitmap.UnShare();
+
     m_selectedBitmap = bitmap;
     WXHBITMAP hBmp = m_selectedBitmap.GetHBITMAP();
Index: src/msw/dcprint.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/dcprint.cpp,v
retrieving revision 1.65
diff -bu2 -r1.65 src/msw/dcprint.cpp
--- src/msw/dcprint.cpp
+++ src/msw/dcprint.cpp
@@ -387,5 +387,10 @@
         // no support for StretchDIBits() or an error occurred if we got here
         wxMemoryDC memDC;
-        memDC.SelectObject(bmp);
+
+        // NOTE: we are selecting the bitmap only to do a blitting and thus
+        //       the wx_const_cast is safe: the bitmap data won't be modified.
+        //       Also note that we cannot use DrawBitmap() since we are inside
+        //       DoDrawBitmap() !
+        memDC.SelectObject(wx_const_cast(wxBitmap&, bmp));

         Blit(x, y, width, height, &memDC, 0, 0, wxCOPY, useMask);
Index: src/os2/dcmemory.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/dcmemory.cpp,v
retrieving revision 1.26
diff -bu2 -r1.26 src/os2/dcmemory.cpp
--- src/os2/dcmemory.cpp
+++ src/os2/dcmemory.cpp
@@ -29,13 +29,4 @@
 /////////////////////////////////////////////////////////////////////////////

-wxMemoryDC::wxMemoryDC( const wxBitmap& bitmap )
-{
-    CreateCompatible(NULL);
-    Init();
-
-    if ( bitmap.IsOk() )
-        SelectObject(bitmap);
-} // end of wxMemoryDC::wxMemoryDC
-
 wxMemoryDC::wxMemoryDC(
   wxDC*                             pOldDC
@@ -123,5 +114,5 @@

 void wxMemoryDC::SelectObject(
-  const wxBitmap&                   rBitmap
+  wxBitmap&                   rBitmap
 )
 {
@@ -169,4 +160,10 @@
         m_vSelectedBitmap.SetSelectedInto(NULL);
     }
+
+    // make sure that the given wxBitmap is not sharing its data with other
+    // wxBitmap instances as its contents will be modified by any drawing
+    // operation done on this DC
+    if (rBitmap.IsOk()) rBitmap.UnShare();
+
     m_vSelectedBitmap = rBitmap;

Index: src/palmos/dcmemory.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/palmos/dcmemory.cpp,v
retrieving revision 1.5
diff -bu2 -r1.5 src/palmos/dcmemory.cpp
--- src/palmos/dcmemory.cpp
+++ src/palmos/dcmemory.cpp
@@ -46,10 +46,4 @@
 // ----------------------------------------------------------------------------

-wxMemoryDC::wxMemoryDC( const wxBitmap& bitmap )
-{
-    if ( bitmap.IsOk() )
-        SelectObject(bitmap);
-}
-
 wxMemoryDC::wxMemoryDC(wxDC *dc)
 {
@@ -65,6 +59,10 @@
 }

-void wxMemoryDC::SelectObject(const wxBitmap& bitmap)
+void wxMemoryDC::SelectObject(wxBitmap& bitmap)
 {
+    // make sure that the given wxBitmap is not sharing its data with other
+    // wxBitmap instances as its contents will be modified by any drawing
+    // operation done on this DC
+    if (bitmap.IsOk()) bitmap.UnShare();
 }

Index: src/x11/dcmemory.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/x11/dcmemory.cpp,v
retrieving revision 1.12
diff -bu2 -r1.12 src/x11/dcmemory.cpp
--- src/x11/dcmemory.cpp
+++ src/x11/dcmemory.cpp
@@ -24,6 +24,5 @@
 IMPLEMENT_DYNAMIC_CLASS(wxMemoryDC,wxWindowDC)

-wxMemoryDC::wxMemoryDC( const wxBitmap& bitmap )
-    : wxWindowDC()
+void wxMemoryDC::Init()
 {
     m_ok = false;
@@ -33,7 +32,4 @@
     int screen = DefaultScreen( wxGlobalDisplay() );
     m_cmap = (WXColormap) DefaultColormap( wxGlobalDisplay(), screen );
-
-    if ( bitmap.IsOk() )
-        SelectObject(bitmap);
 }

@@ -41,10 +37,5 @@
   : wxWindowDC()
 {
-    m_ok = false;
-
-    m_display = (WXDisplay *) wxGlobalDisplay();
-
-    int screen = DefaultScreen( wxGlobalDisplay() );
-    m_cmap = (WXColormap) DefaultColormap( wxGlobalDisplay(), screen );
+    Init();
 }

@@ -53,8 +44,13 @@
 }

-void wxMemoryDC::SelectObject( const wxBitmap& bitmap )
+void wxMemoryDC::SelectObject( wxBitmap& bitmap )
 {
     Destroy();

+    // make sure that the given wxBitmap is not sharing its data with other
+    // wxBitmap instances as its contents will be modified by any drawing
+    // operation done on this DC
+    if (bitmap.IsOk()) bitmap.UnShare();
+
     m_selected = bitmap;
     if (m_selected.Ok())
Index: src/common/effects.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/effects.cpp,v
retrieving revision 1.16
diff -bu2 -r1.16 src/common/effects.cpp
--- src/common/effects.cpp
+++ src/common/effects.cpp
@@ -103,5 +103,7 @@
 #endif // wxUSE_PALETTE

-    dcMem.SelectObject(bitmap);
+    // NOTE: we are selecting the bitmap only to do a Blit() and thus
+    //       the wx_const_cast is safe: the bitmap data won't be modified.
+    dcMem.SelectObject(wx_const_cast(wxBitmap&, bitmap));

     int i, j;
Index: src/generic/splash.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/splash.cpp,v
retrieving revision 1.30
diff -bu2 -r1.30 src/generic/splash.cpp
--- src/generic/splash.cpp
+++ src/generic/splash.cpp
@@ -150,5 +150,7 @@
 #endif // USE_PALETTE_IN_SPLASH

-    dcMem.SelectObject(bitmap);
+    // NOTE: we are selecting the bitmap only to do a Blit() and thus
+    //       the wx_const_cast is safe: the bitmap data won't be modified.
+    dcMem.SelectObject(wx_const_cast(wxBitmap&, bitmap));
     dc.Blit(0, 0, bitmap.GetWidth(), bitmap.GetHeight(), &
 	  	 
