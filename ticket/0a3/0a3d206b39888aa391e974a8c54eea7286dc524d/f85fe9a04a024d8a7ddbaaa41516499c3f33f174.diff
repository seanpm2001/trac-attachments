--- wx/include/wx/wfstream.h	2005-01-20 21:47:13.000000000 +0300
+++ wx/include/wx/wfstream.h	2005-02-28 11:44:01.000000000 +0300
@@ -88,6 +88,33 @@
     DECLARE_NO_COPY_CLASS(wxFileOutputStream)
 };
 
+class WXDLLIMPEXP_BASE wxTempFileOutputStream : public wxOutputStream
+{
+public:
+    wxTempFileOutputStream(const wxString& fileName);
+    wxTempFileOutputStream(wxTempFile& file);
+    virtual ~wxTempFileOutputStream();
+
+    bool Close();
+    bool Commit() { return m_file->Commit(); }
+    wxFileOffset GetLength() const { return m_file->Length(); }
+
+    bool Ok() const { return m_file->IsOpened(); }
+    bool IsSeekable() const { return true; }
+
+protected:
+    size_t OnSysWrite(const void *buffer, size_t size);
+    wxFileOffset OnSysSeek(wxFileOffset pos, wxSeekMode mode)
+	{ return m_file->Seek(pos, mode); }
+    wxFileOffset OnSysTell() const { return m_file->Tell(); }
+
+protected:
+    wxTempFile *m_file;
+    bool m_file_destroy;
+
+    DECLARE_NO_COPY_CLASS(wxTempFileOutputStream)
+};
+
 class WXDLLIMPEXP_BASE wxFileStream : public wxFileInputStream,
                                       public wxFileOutputStream
 {
--- wx/include/wx/file.h	2005-01-20 21:47:11.000000000 +0300
+++ wx/include/wx/file.h	2005-02-25 14:36:36.000000000 +0300
@@ -164,9 +164,18 @@
 
   // is the file opened?
   bool IsOpened() const { return m_file.IsOpened(); }
+    // get current file length
+  wxFileOffset Length() const { return m_file.Length(); }
+    // move ptr ofs bytes related to start/current offset/end of file
+  wxFileOffset Seek(wxFileOffset ofs, wxSeekMode mode = wxFromStart)
+	{ return m_file.Seek(ofs, mode); }
+    // get current offset
+  wxFileOffset Tell() const { return m_file.Tell(); }
+    // has an error occured?
+  bool Error() const { return m_file.Error(); }
 
   // I/O (both functions return true on success, false on failure)
-  bool Write(const void *p, size_t n) { return m_file.Write(p, n) == n; }
+  size_t Write(const void *p, size_t n) { return m_file.Write(p, n); }
   bool Write(const wxString& str, wxMBConv& conv = wxConvUTF8)
     { return m_file.Write(str, conv); }
 
--- wx/src/common/wfstream.cpp	2005-01-20 21:48:14.000000000 +0300
+++ wx/src/common/wfstream.cpp	2005-02-28 11:43:38.000000000 +0300
@@ -184,6 +184,52 @@
 }
 
 // ----------------------------------------------------------------------------
+// wxTempFileOutputStream
+// ----------------------------------------------------------------------------
+
+wxTempFileOutputStream::wxTempFileOutputStream(const wxString& fileName)
+{
+    m_file = new wxTempFile(fileName);
+    m_file_destroy = true;
+
+    if (!m_file->IsOpened())
+    {
+        m_lasterror = wxSTREAM_WRITE_ERROR;
+    }
+}
+
+wxTempFileOutputStream::wxTempFileOutputStream(wxTempFile& file)
+{
+    m_file = &file;
+    m_file_destroy = false;
+}
+
+wxTempFileOutputStream::~wxTempFileOutputStream()
+{
+    if (m_file_destroy)
+    {
+        delete m_file;
+    }
+}
+
+size_t wxTempFileOutputStream::OnSysWrite(const void *buffer, size_t size)
+{
+    size_t ret = m_file->Write(buffer, size);
+
+    m_lasterror = m_file->Error() ? wxSTREAM_WRITE_ERROR : wxSTREAM_NO_ERROR;
+
+    return ret;
+}
+
+bool wxTempFileOutputStream::Close()
+{
+    if ( !m_file->IsOpened() )
+	return false;
+    m_file->Discard();
+    return true;
+}
+
+// ----------------------------------------------------------------------------
 // wxFileStream
 // ----------------------------------------------------------------------------
 

 	  	 
