--- makefile.orig	2011-03-22 04:59:51.000000000 -0700
+++ makefile.vc	2011-05-23 11:49:46.589629000 -0700
@@ -300,6 +300,10 @@
 	wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_core.lib
 !endif
 !if "$(MONOLITHIC)" == "0"
+__WXLIB_ADV_p = \
+	wx$(PORTNAME)$(WXUNIVNAME)$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR)_adv.lib
+!endif
+!if "$(MONOLITHIC)" == "0"
 __WXLIB_BASE_p = \
 	wxbase$(WX_RELEASE_NODOT)$(WXUNICODEFLAG)$(WXDEBUGFLAG)$(WX_LIB_FLAVOUR).lib
 !endif
@@ -348,7 +352,7 @@
 
 $(OBJS)\controls.exe: $(CONTROLS_OBJECTS) $(OBJS)\controls_controls.res
 	link /NOLOGO /OUT:$@  $(__DEBUGINFO_1) /pdb:"$(OBJS)\controls.pdb" $(__DEBUGINFO_2)  $(LINK_TARGET_CPU) /LIBPATH:$(LIBDIRNAME) /SUBSYSTEM:WINDOWS $(____CAIRO_LIBDIR_FILENAMES_p) $(LDFLAGS) @<<
-	$(CONTROLS_OBJECTS) $(CONTROLS_RESOURCES)  $(__WXLIB_CORE_p)  $(__WXLIB_BASE_p)  $(__WXLIB_MONO_p) $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  wxzlib$(WXDEBUGFLAG).lib  wxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).lib wxexpat$(WXDEBUGFLAG).lib $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) $(__CAIRO_LIB_p) kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib odbc32.lib
+	$(CONTROLS_OBJECTS) $(CONTROLS_RESOURCES)  $(__WXLIB_CORE_p)  $(__WXLIB_ADV_p)  $(__WXLIB_BASE_p)  $(__WXLIB_MONO_p) $(__LIB_TIFF_p) $(__LIB_JPEG_p) $(__LIB_PNG_p)  wxzlib$(WXDEBUGFLAG).lib  wxregex$(WXUNICODEFLAG)$(WXDEBUGFLAG).lib wxexpat$(WXDEBUGFLAG).lib $(EXTRALIBS_FOR_BASE) $(__UNICOWS_LIB_p) $(__GDIPLUS_LIB_p) $(__CAIRO_LIB_p) kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib odbc32.lib
 <<
 
 data: 
--- controls.orig	2011-03-22 11:59:52.000000000 -0700
+++ controls.cpp	2011-05-23 11:55:47.975592400 -0700
@@ -19,6 +19,7 @@
     #include "wx/wx.h"
 #endif
 
+#include "wx/bmpcbox.h"
 #include "wx/spinbutt.h"
 #include "wx/tglbtn.h"
 #include "wx/bookctrl.h"
@@ -128,7 +129,8 @@
                   *m_choiceSorted;
 #endif // wxUSE_CHOICE
 
-    wxComboBox    *m_combo;
+    //wxComboBox    *m_combo;
+    wxBitmapComboBox    *m_combo;
     wxRadioBox    *m_radio;
 #if wxUSE_GAUGE
     wxGauge       *m_gauge,
@@ -793,10 +795,10 @@
     panel = new wxPanel(m_book);
     (void)new wxStaticBox( panel, wxID_ANY, _T("&Box around combobox"),
                            wxPoint(5, 5), wxSize(150, 100));
-    m_combo = new MyComboBox( panel, ID_COMBO, _T("This"),
+    m_combo = new wxBitmapComboBox( panel, ID_COMBO, wxString(),
                               wxPoint(20,25), wxSize(120, wxDefaultCoord),
-                              5, choices,
-                              wxTE_PROCESS_ENTER);
+                              0, NULL,
+                              wxCB_DROPDOWN|wxCB_READONLY|wxCB_SORT);
 
     (void)new wxButton( panel, ID_COMBO_SEL_NUM, _T("Select #&2"), wxPoint(180,30), wxSize(140,30) );
     (void)new wxButton( panel, ID_COMBO_SEL_STR, _T("&Select 'This'"), wxPoint(340,30), wxSize(140,30) );
@@ -1435,6 +1437,87 @@
         case ID_COMBO_CLEAR:
             {
                 m_combo->Clear();
+
+    static wxChar* s_Choices[] =
+    {
+      wxT("AKC"),
+      wxT("Bay Team"),
+      wxT("Border Terrier"),
+      wxT("CVASC"),
+      wxT("Contact Point Agility"),
+      wxT("County Wide Dog Training Club"),
+      wxT("DART"),
+      wxT("Davis Dog Training Club"),
+      wxT("Del Monte"),
+      wxT("Del Valle"),
+      wxT("Fresno Dog Training"),
+      wxT("Fun Paws"),
+      wxT("Golden Gate PWCF"),
+      wxT("Happy Dog"),
+      wxT("Haute Dawgs"),
+      wxT("Haute TRACS"),
+      wxT("Haute-Tracs"),
+      wxT("Heart Dog"),
+      wxT("Humboldt Dog Obedience Group"),
+      wxT("Irish Setter Club"),
+      wxT("Lost Coast KC"),
+      wxT("Mensona Kennel Club"),
+      wxT("Monterey Bay Dog Training Club"),
+      wxT("Mt Diablo"),
+      wxT("NNASC"),
+      wxT("Napa Valley"),
+      wxT("NorCal Bearded Collie Fanciers"),
+      wxT("NorCal Golden Retriever Club"),
+      wxT("Nunes Agility Field"),
+      wxT("Oakland Dog Training Club"),
+      wxT("PASA"),
+      wxT("Puli Club"),
+      wxT("Quicksilver"),
+      wxT("Redwood Belgian Tervuren Fanciers"),
+      wxT("SF Bay Weimaraner Club"),
+      wxT("SMART"),
+      wxT("SacVal Shetland Sheepdog Club"),
+      wxT("Sacramento Dog Training Club"),
+      wxT("Salinas-Monterey Agility Racing Team"),
+      wxT("Santa Clara Dog Training Club"),
+      wxT("Shetland SCNC"),
+      wxT("Sierra-Tuolumne Kennel Club"),
+      wxT("Sir Francis Drake KC"),
+      wxT("Sun Maid Kennel Club"),
+      wxT("TRACS"),
+      wxT("The Bay Team"),
+      wxT("Truckee Meadows DTC"),
+      wxT("Two Rivers Agility Club of Sacramento"),
+      wxT("USDAA"),
+      wxT("VAST"),
+      wxT("Vallejo Dog Training"),
+      wxT("Valley Agility Sports Team"),
+      wxT("Vizsla Club"),
+      wxT("WAG"),
+      wxT("WVDS"),
+      wxT("Weimaraner"),
+      wxT("Weimaraner/Puli"),
+      wxT("Workin Paws")
+    };
+    size_t numChoices = WXSIZEOF(s_Choices);
+    for (size_t idx = 0; idx < numChoices; ++idx)
+    {
+        wxString x = wxString::Format(wxT("%d %s\n"), (int)idx, s_Choices[idx]);
+        OutputDebugString(x.c_str());
+        int index = m_combo->Append(s_Choices[idx]);
+        m_combo->SetClientData(index, (void*)idx);
+    }
+    {
+        OutputDebugString(L"DUMP\n");
+        unsigned int n = m_combo->GetCount();
+        for (unsigned int index = 0; index < n; ++index)
+        {
+            wxString s = m_combo->GetString(index);
+            size_t idx = reinterpret_cast<size_t>(m_combo->GetClientData(index));
+            wxString x = wxString::Format(wxT("%d %s\n"), (int)idx, s.c_str());
+            OutputDebugString(x.c_str());
+        }
+    }
                 break;
             }
         case ID_COMBO_APPEND:
@@ -1450,7 +1533,7 @@
             }
         case ID_COMBO_FONT:
             {
-                m_combo->SetFont( *wxITALIC_FONT );
+                //m_combo->SetFont( *wxITALIC_FONT );
                 break;
             }
         case ID_COMBO_SET_TEXT:
