wxTextLayout

wxTextLayout is a utility class to layout plain text in a variety of different shapes that 
can then be output to some device.

wxTextLayout is in fact comprised from a number of classes as follows:

wxTextShape - an abstract class from which shape clases can be derived that describe the shape 
within which the text should be laid out.

wxRectTextShape - derived from wxTextShape to describe a rectangle
wxEllipseTextShape - derived from wxTextShape to describe an ellipse

At a simple level these shapes only need to implement two methods:
1) GetHeight() - returns the overall height of the shape (needed for centering text vertically etc.)
2) GetFitAtY() - returns the largest width of a line that will fit at all y values between two bounds.

However the supplied shapes also implement a third method SetGeometry() which allows the size and other
geometric aspects of the shape to be set. In the case of a rectangle and an ellipse, this is just the 
size but in the case of a parallelogram the slope can also be set. Because the signature of this function
is so specific to each shape it is not declared in the abstract base class.

wxTextLayoutEngine - the core routines to layout the text. The text layout engine would
not normally be touched by a user of the wxTextLayout class (should it perhaps be wxTextLayoutImpl
and follow a similar pattern to wxSVGFileDC etc?). Any instantiation of wxTextLayoutEngine requires
the following two things:

1) A method for measuring a section of text (i.e. GetTextExtents if the class is being used with a wxDC).
2) A shape definition that is derived from wxTextShape.

At the moment the method for measuring a section of text is achieved by passing the constructor of wxTextLayoutEngine
a pointer to a wxTextLayout class. This class must implement a function called GetTokenExtent(wxString token)
returns an integer containing the length of the token string in whatever units are applicable to the
device context.

It has been implemented in this way as it means that only the wxTextLayout class (or one of its derivatives)
need know anything about the context upon which the text is going to be drawn.

wxTextLayout is a base class for laying out text but it is not abstract. By default it will layout text
within a defined rectangle on either a wxDC or a wxGraphicsContext.

wxEllipseTextLayout is derived from wxTextLayout but overrides the constructor to pass a wxEllipseTextShape class
instead.

wxDiamondTextLayout is derived from wxTextLayout but overrides the constructor to pass a wxDiamondTextShape class
instead.

wxParallelogramTextLayout is derived from wxTextLayout but overrides the constructor to pass a wxParallelogramTextShape class
instead.