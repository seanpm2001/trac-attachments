Index: build/bakefiles/files.bkl
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/build/bakefiles/files.bkl,v
retrieving revision 1.324
diff -bu2 -r1.324 build/bakefiles/files.bkl
--- build/bakefiles/files.bkl
+++ build/bakefiles/files.bkl
@@ -938,4 +938,5 @@
     src/gtk/control.cpp
     src/gtk/dialog.cpp
+    src/gtk/dirdlg.cpp
     src/gtk/filedlg.cpp
     src/gtk/fontdlg.cpp
@@ -983,4 +984,5 @@
     wx/gtk/control.h
     wx/gtk/dialog.h
+    wx/gtk/dirdlg.h
     wx/gtk/filedlg.h
     wx/gtk/fontdlg.h
Index: include/wx/dirdlg.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dirdlg.h,v
retrieving revision 1.41
diff -bu2 -r1.41 include/wx/dirdlg.h
--- include/wx/dirdlg.h
+++ include/wx/dirdlg.h
@@ -34,7 +34,7 @@
 #endif

-/*
-    The interface (TODO: make the other classes really derive from it!) is
-    something like this:
+//-------------------------------------------------------------------------
+// wxDirDialogBase
+//-------------------------------------------------------------------------

 class WXDLLEXPORT wxDirDialogBase : public wxDialog
@@ -42,21 +42,28 @@
 public:
     wxDirDialogBase(wxWindow *parent,
-                    const wxString& title = wxFileSelectorPromptStr,
+                    const wxString& title = wxDirSelectorPromptStr,
                     const wxString& defaultPath = wxEmptyString,
                     long style = wxDD_DEFAULT_STYLE,
                     const wxPoint& pos = wxDefaultPosition,
                     const wxSize& sz = wxDefaultSize,
-                    const wxString& name = _T("dirdialog"));
-
-    void SetMessage(const wxString& message);
-    void SetPath(const wxString& path);
-    void SetStyle(long style);
-
-    wxString GetMessage() const;
-    wxString GetPath() const;
-    long GetStyle() const;
+                    const wxString& name = wxDirDialogNameStr)
+        : wxDialog(parent, wxID_ANY, title, pos, sz, style, name) {}
+    wxDirDialogBase() {}
+
+    virtual ~wxDirDialogBase() {}
+
+    virtual void SetMessage(const wxString& message) { m_message = message; }
+    virtual void SetPath(const wxString& path) { m_path = path; }
+    virtual void SetStyle(long style) { SetWindowStyle(style); }
+
+    virtual wxString GetMessage() const { return m_message; }
+    virtual wxString GetPath() const { return m_path; }
+    virtual long GetStyle() const { return GetWindowStyle(); }
+
+protected:
+    wxString m_message;
+    wxString m_path;
 };

-*/

 // Universal and non-port related switches with need for generic implementation
@@ -80,4 +87,10 @@
     #include "wx/msw/dirdlg.h"

+// Native GTK
+#elif defined(__WXGTK__)
+
+    #include "wx/gtk/dirdlg.h"
+    #define wxDirDialog wxDirDialogGTK
+
 // Native Mac
 #elif defined(__WXMAC__)
@@ -92,5 +105,4 @@
 // Other ports use generic implementation
 #elif defined(__WXMOTIF__) || \
-      defined(__WXGTK__)   || \
       defined(__WXX11__)   || \
       defined(__WXMGL__)   || \
Index: include/wx/cocoa/dirdlg.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/cocoa/dirdlg.h,v
retrieving revision 1.1
diff -bu2 -r1.1 include/wx/cocoa/dirdlg.h
--- include/wx/cocoa/dirdlg.h
+++ include/wx/cocoa/dirdlg.h
@@ -20,5 +20,5 @@
 //-------------------------------------------------------------------------

-class WXDLLEXPORT wxDirDialog: public wxDialog
+class WXDLLEXPORT wxDirDialog: public wxDirDialogBase
 {
     DECLARE_DYNAMIC_CLASS(wxDirDialog)
@@ -34,6 +34,4 @@
     ~wxDirDialog();

-    wxString GetMessage() const { return m_message; }
-    wxString GetPath() const { return m_path; }
     long GetStyle() const { return m_dialogStyle; }

@@ -44,9 +42,7 @@

 protected:
-    wxString    m_message;
     long        m_dialogStyle;
     wxString    m_dir;
     wxWindow *  m_parent;
-    wxString    m_path;
     wxString    m_fileName;

Index: include/wx/generic/dirdlgg.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/generic/dirdlgg.h,v
retrieving revision 1.31
diff -bu2 -r1.31 include/wx/generic/dirdlgg.h
--- include/wx/generic/dirdlgg.h
+++ include/wx/generic/dirdlgg.h
@@ -40,8 +40,8 @@
 //-----------------------------------------------------------------------------

-class WXDLLEXPORT wxGenericDirDialog : public wxDialog
+class WXDLLEXPORT wxGenericDirDialog : public wxDirDialogBase
 {
 public:
-    wxGenericDirDialog() : wxDialog() { }
+    wxGenericDirDialog() : wxDirDialogBase() { }

     wxGenericDirDialog(wxWindow* parent,
@@ -50,13 +50,19 @@
                        long style = wxDD_DEFAULT_STYLE,
                        const wxPoint& pos = wxDefaultPosition,
-                       const wxSize& sz = wxSize(450, 550),
+                       const wxSize& sz = wxDefaultSize,//Size(450, 550),
+                       const wxString& name = wxDirDialogNameStr);
+
+    bool Create(wxWindow* parent,
+                const wxString& title = wxDirSelectorPromptStr,
+                const wxString& defaultPath = wxEmptyString,
+                long style = wxDD_DEFAULT_STYLE,
+                const wxPoint& pos = wxDefaultPosition,
+                const wxSize& sz = wxDefaultSize,//Size(450, 550),
                        const wxString& name = wxDirDialogNameStr);

     //// Accessors
-    void SetMessage(const wxString& message) { m_message = message; }
     void SetPath(const wxString& path);
     void SetStyle(long style) { m_dialogStyle = style; }

-    wxString GetMessage() const { return m_message; }
     wxString GetPath() const;
     long GetStyle() const { return m_dialogStyle; }
@@ -78,7 +84,5 @@
     void OnShowHidden(wxCommandEvent& event);

-    wxString          m_message;
     long              m_dialogStyle;
-    wxString          m_path;
     wxGenericDirCtrl* m_dirCtrl;
     wxTextCtrl*       m_input;
Index: include/wx/gtk/dirdlg.h
--- /dev/null
+++ include/wx/gtk/dirdlg.h
@@ -0,0 +1,61 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        dirdlg.h
+// Purpose:     wxDirDialogGTK
+// Author:      Francesco Montorsi
+// Id:          $Id$
+// Copyright:   (c) 2006 Francesco Montorsi
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef __GTKDIRDLGH__
+#define __GTKDIRDLGH__
+
+#include "wx/generic/dirdlgg.h"
+
+//-------------------------------------------------------------------------
+// wxDirDialogGTK
+//-------------------------------------------------------------------------
+
+class WXDLLIMPEXP_CORE wxDirDialogGTK : public wxGenericDirDialog
+{
+public:
+    wxDirDialogGTK() { }
+
+    wxDirDialogGTK(wxWindow *parent,
+                const wxString& message = wxDirSelectorPromptStr,
+                const wxString& defaultPath = _T(""),
+                long style = wxDD_DEFAULT_STYLE,
+                const wxPoint& pos = wxDefaultPosition,
+                const wxSize& size = wxDefaultSize,
+                const wxString& name = wxDirDialogNameStr);
+
+    virtual ~wxDirDialogGTK();
+
+
+public:     // overrides from wxGenericDirDialog
+
+    wxString GetPath() const;
+    void SetPath(const wxString& path);
+
+    virtual int ShowModal();
+    virtual bool Show( bool show = true );
+
+
+//private:      must be accessible by GTK callback
+    bool m_destroyed_by_delete;
+
+protected:
+    // override this from wxTLW since the native
+    // form doesn't have any m_wxwindow
+    virtual void DoSetSize(int x, int y,
+                           int width, int height,
+                           int sizeFlags = wxSIZE_AUTO);
+
+
+private:
+    DECLARE_DYNAMIC_CLASS(wxDirDialogGTK)
+    DECLARE_EVENT_TABLE()
+    void OnFakeOk( wxCommandEvent &event );
+};
+
+#endif // __GTKDIRDLGH__
Index: include/wx/mac/carbon/dirdlg.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/dirdlg.h,v
retrieving revision 1.6
diff -bu2 -r1.6 include/wx/mac/carbon/dirdlg.h
--- include/wx/mac/carbon/dirdlg.h
+++ include/wx/mac/carbon/dirdlg.h
@@ -13,5 +13,5 @@
 #define _WX_DIRDLG_H_

-class WXDLLEXPORT wxDirDialog : public wxDialog
+class WXDLLEXPORT wxDirDialog : public wxDirDialogBase
 {
 public:
@@ -24,10 +24,5 @@
                 const wxString& name = wxDirDialogNameStr);

-    void SetMessage(const wxString& message) { m_message = message; }
-    void SetPath(const wxString& path) { m_path = path; }
     void SetStyle(long style) { m_dialogStyle = style; }
-
-    wxString GetMessage() const { return m_message; }
-    wxString GetPath() const { return m_path; }
     long GetStyle() const { return m_dialogStyle; }

@@ -35,8 +30,6 @@

 protected:
-    wxString    m_message;
     long        m_dialogStyle;
     wxWindow *  m_parent;
-    wxString    m_path;

     DECLARE_DYNAMIC_CLASS(wxDirDialog)
Index: include/wx/mac/classic/dirdlg.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/classic/dirdlg.h,v
retrieving revision 1.5
diff -bu2 -r1.5 include/wx/mac/classic/dirdlg.h
--- include/wx/mac/classic/dirdlg.h
+++ include/wx/mac/classic/dirdlg.h
@@ -13,5 +13,5 @@
 #define _WX_DIRDLG_H_

-class WXDLLEXPORT wxDirDialog : public wxDialog
+class WXDLLEXPORT wxDirDialog : public wxDirDialogBase
 {
 public:
@@ -24,10 +24,5 @@
                 const wxString& name = wxDirDialogNameStr);

-    void SetMessage(const wxString& message) { m_message = message; }
-    void SetPath(const wxString& path) { m_path = path; }
     void SetStyle(long style) { m_dialogStyle = style; }
-
-    wxString GetMessage() const { return m_message; }
-    wxString GetPath() const { return m_path; }
     long GetStyle() const { return m_dialogStyle; }

@@ -35,8 +30,6 @@

 protected:
-    wxString    m_message;
     long        m_dialogStyle;
     wxWindow *  m_parent;
-    wxString    m_path;

     DECLARE_DYNAMIC_CLASS(wxDirDialog)
Index: include/wx/msw/dirdlg.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/dirdlg.h,v
retrieving revision 1.16
diff -bu2 -r1.16 include/wx/msw/dirdlg.h
--- include/wx/msw/dirdlg.h
+++ include/wx/msw/dirdlg.h
@@ -13,5 +13,5 @@
 #define _WX_DIRDLG_H_

-class WXDLLEXPORT wxDirDialog : public wxDialog
+class WXDLLEXPORT wxDirDialog : public wxDirDialogBase
 {
 public:
@@ -24,18 +24,8 @@
                 const wxString& name = wxDirDialogNameStr);

-    void SetMessage(const wxString& message) { m_message = message; }
     void SetPath(const wxString& path);
-    void SetStyle(long style) { SetWindowStyle(style); }
-
-    wxString GetMessage() const { return m_message; }
-    wxString GetPath() const { return m_path; }
-    long GetStyle() const { return GetWindowStyle(); }

     virtual int ShowModal();

-protected:
-    wxString    m_message;
-    wxString    m_path;
-
 private:
     DECLARE_DYNAMIC_CLASS_NO_COPY(wxDirDialog)
Index: include/wx/os2/dirdlg.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/dirdlg.h,v
retrieving revision 1.6
diff -bu2 -r1.6 include/wx/os2/dirdlg.h
--- include/wx/os2/dirdlg.h
+++ include/wx/os2/dirdlg.h
@@ -17,5 +17,5 @@
 WXDLLEXPORT_DATA(extern const wxChar) wxFileSelectorPromptStr[];

-class WXDLLEXPORT wxDirDialog: public wxDialog
+class WXDLLEXPORT wxDirDialog: public wxDirDialogBase
 {
 DECLARE_DYNAMIC_CLASS(wxDirDialog)
@@ -25,10 +25,5 @@
         long style = 0, const wxPoint& pos = wxDefaultPosition);

-    inline void SetMessage(const wxString& message) { m_message = message; }
-    inline void SetPath(const wxString& path) { m_path = path; }
     inline void SetStyle(long style) { m_dialogStyle = style; }
-
-    inline wxString GetMessage() const { return m_message; }
-    inline wxString GetPath() const { return m_path; }
     inline long GetStyle() const { return m_dialogStyle; }

@@ -36,8 +31,6 @@

 protected:
-    wxString    m_message;
     long        m_dialogStyle;
     wxWindow *  m_parent;
-    wxString    m_path;
 };

Index: include/wx/palmos/dirdlg.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/dirdlg.h,v
retrieving revision 1.3
diff -bu2 -r1.3 include/wx/palmos/dirdlg.h
--- include/wx/palmos/dirdlg.h
+++ include/wx/palmos/dirdlg.h
@@ -13,5 +13,5 @@
 #define _WX_DIRDLG_H_

-class WXDLLEXPORT wxDirDialog : public wxDialog
+class WXDLLEXPORT wxDirDialog : public wxDirDialogBase
 {
 public:
@@ -24,18 +24,8 @@
                 const wxString& name = wxDirDialogNameStr);

-    void SetMessage(const wxString& message) { m_message = message; }
     void SetPath(const wxString& path);
-    void SetStyle(long style) { SetWindowStyle(style); }
-
-    wxString GetMessage() const { return m_message; }
-    wxString GetPath() const { return m_path; }
-    long GetStyle() const { return GetWindowStyle(); }

     virtual int ShowModal();

-protected:
-    wxString    m_message;
-    wxString    m_path;
-
 private:
     DECLARE_DYNAMIC_CLASS_NO_COPY(wxDirDialog)
Index: src/generic/dirdlgg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/dirdlgg.cpp,v
retrieving revision 1.65
diff -bu2 -r1.65 src/generic/dirdlgg.cpp
--- src/generic/dirdlgg.cpp
+++ src/generic/dirdlgg.cpp
@@ -80,5 +80,13 @@
                                        const wxPoint& pos, const wxSize& sz,
                                        const wxString& name):
-                wxDialog(parent, ID_DIRCTRL, title, pos, sz, style, name)
+                wxDirDialogBase(parent, title, defaultPath, style, pos, sz, name)
+{
+    Create(parent, title, defaultPath, style, pos, sz, name);
+}
+
+bool wxGenericDirDialog::Create(wxWindow* parent, const wxString& title,
+                                       const wxString& defaultPath, long style,
+                                       const wxPoint& pos, const wxSize& sz,
+                                       const wxString& name)
 {
     wxBusyCursor cursor;
@@ -200,4 +208,6 @@
     Centre( wxBOTH );
 #endif
+
+    return true;
 }

Index: src/gtk/dirdlg.cpp
--- /dev/null
+++ src/gtk/dirdlg.cpp
@@ -0,0 +1,272 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        src/gtk/dirdlg.cpp
+// Purpose:     native implementation of wxDirDialog
+// Author:      Robert Roebling, Zbigniew Zagorski, Mart Raudsepp, Francesco Montorsi
+// Id:          $Id$
+// Copyright:   (c) 1998 Robert Roebling, 2004 Zbigniew Zagorski, 2005 Mart Raudsepp
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+
+
+/*
+  NOTE: the GtkFileChooser interface can be used both for wxFileDialog and for wxDirDialog.
+        Thus following code is very similar (even if not identic) to src/gtk/filedlg.cpp
+        If you find a problem in this code, remember to check also that file !
+*/
+
+
+
+#if wxUSE_DIRDLG
+
+#include "wx/dirdlg.h"
+
+#ifndef WX_PRECOMP
+    #include "wx/intl.h"
+#endif
+
+#ifdef __WXGTK24__
+
+#include <gtk/gtk.h>
+#include "wx/gtk/private.h"
+
+#include <unistd.h> // chdir
+
+#include "wx/filename.h" // wxFilename
+#include "wx/tokenzr.h" // wxStringTokenizer
+#include "wx/filefn.h" // ::wxGetCwd
+#include "wx/msgdlg.h" // wxMessageDialog
+
+//-----------------------------------------------------------------------------
+// idle system
+//-----------------------------------------------------------------------------
+
+extern void wxapp_install_idle_handler();
+
+//-----------------------------------------------------------------------------
+// "clicked" for OK-button
+//-----------------------------------------------------------------------------
+
+extern "C" {
+static void gtk_filedialog_ok_callback(GtkWidget *widget, wxDirDialog *dialog)
+{
+    int style = dialog->GetStyle();
+    gchar* filename = gtk_file_chooser_get_filename(GTK_FILE_CHOOSER(widget));
+
+    // gtk version numbers must be identical with the one in ctor (that calls set_do_overwrite_confirmation)
+#if GTK_CHECK_VERSION(2,7,3)
+    if(gtk_check_version(2,7,3) != NULL)
+#endif
+    if ((style & wxSAVE) && (style & wxOVERWRITE_PROMPT))
+    {
+        if ( g_file_test(filename, G_FILE_TEST_EXISTS) )
+        {
+            wxString msg;
+
+            msg.Printf(
+                _("File '%s' already exists, do you really want to overwrite it?"),
+                wxString(wxConvFileName->cMB2WX(filename)).c_str());
+
+            wxMessageDialog dlg(dialog, msg, _("Confirm"),
+                               wxYES_NO | wxICON_QUESTION);
+            if (dlg.ShowModal() != wxID_YES)
+                return;
+        }
+    }
+
+    // change to the directory where the user went if asked
+    if (style & wxCHANGE_DIR)
+    {
+        // Use chdir to not care about filename encodings
+        gchar* folder = g_path_get_dirname(filename);
+        chdir(folder);
+        g_free(folder);
+    }
+
+    g_free(filename);
+
+    wxCommandEvent event(wxEVT_COMMAND_BUTTON_CLICKED, wxID_OK);
+    event.SetEventObject(dialog);
+    dialog->GetEventHandler()->ProcessEvent(event);
+}
+}
+
+//-----------------------------------------------------------------------------
+// "clicked" for Cancel-button
+//-----------------------------------------------------------------------------
+
+extern "C" {
+static void gtk_filedialog_cancel_callback(GtkWidget *WXUNUSED(w),
+                                           wxDirDialog *dialog)
+{
+    wxCommandEvent event(wxEVT_COMMAND_BUTTON_CLICKED, wxID_CANCEL);
+    event.SetEventObject(dialog);
+    dialog->GetEventHandler()->ProcessEvent(event);
+}
+}
+
+extern "C" {
+static void gtk_filedialog_response_callback(GtkWidget *w,
+                                             gint response,
+                                             wxDirDialog *dialog)
+{
+    wxapp_install_idle_handler();
+
+    if (response == GTK_RESPONSE_ACCEPT)
+        gtk_filedialog_ok_callback(w, dialog);
+    else if (response == GTK_RESPONSE_CANCEL)
+        gtk_filedialog_cancel_callback(w, dialog);
+    else // "delete"
+    {
+        gtk_filedialog_cancel_callback(w, dialog);
+        dialog->m_destroyed_by_delete = true;
+    }
+}
+}
+
+#endif // __WXGTK24__
+
+//-----------------------------------------------------------------------------
+// wxDirDialog
+//-----------------------------------------------------------------------------
+
+IMPLEMENT_DYNAMIC_CLASS(wxDirDialog,wxGenericDirDialog)
+
+BEGIN_EVENT_TABLE(wxDirDialog,wxGenericDirDialog)
+    EVT_BUTTON(wxID_OK, wxDirDialog::OnFakeOk)
+END_EVENT_TABLE()
+
+wxDirDialog::wxDirDialog(wxWindow* parent, const wxString& title,
+                        const wxString& defaultPath, long style,
+                        const wxPoint& pos, const wxSize& sz,
+                        const wxString& name)
+{
+#ifdef __WXGTK24__
+    if (!gtk_check_version(2,4,0))
+    {
+        m_message = title;
+        m_needParent = false;
+        m_destroyed_by_delete = false;
+
+        if (!PreCreation(parent, pos, wxDefaultSize) ||
+            !CreateBase(parent, wxID_ANY, pos, wxDefaultSize, style,
+                    wxDefaultValidator, wxT("filedialog")))
+        {
+            wxFAIL_MSG( wxT("wxDirDialog creation failed") );
+            return;
+        }
+
+        GtkFileChooserAction gtk_action;
+        GtkWindow* gtk_parent = NULL;
+        if (parent)
+            gtk_parent = GTK_WINDOW( gtk_widget_get_toplevel(parent->m_widget) );
+
+        gtk_action = GTK_FILE_CHOOSER_ACTION_SELECT_FOLDER;
+        if (style & wxDD_NEW_DIR_BUTTON)
+            gtk_action = GTK_FILE_CHOOSER_ACTION_CREATE_FOLDER;
+
+        m_widget = gtk_file_chooser_dialog_new(
+                       wxGTK_CONV(m_message),
+                       gtk_parent,
+                       gtk_action,
+                       GTK_STOCK_CANCEL, GTK_RESPONSE_CANCEL,
+                       GTK_STOCK_OPEN, GTK_RESPONSE_ACCEPT,
+                       NULL);
+
+        // local-only property could be set to false to allow non-local files to be loaded.
+        // In that case get/set_uri(s) should be used instead of get/set_filename(s) everywhere
+        // and the GtkFileChooserDialog should probably also be created with a backend,
+        // e.g "gnome-vfs", "default", ... (gtk_file_chooser_dialog_new_with_backend).
+        // Currently local-only is kept as the default - true:
+        // gtk_file_chooser_set_local_only(GTK_FILE_CHOOSER(m_widget), true);
+
+        g_signal_connect(G_OBJECT(m_widget), "response",
+            GTK_SIGNAL_FUNC(gtk_filedialog_response_callback), (gpointer)this);
+
+        if ( !defaultPath.empty() )
+            gtk_file_chooser_set_current_folder( GTK_FILE_CHOOSER(m_widget),
+                    wxConvFileName->cWX2MB(defaultPath) );
+    }
+    else
+#endif
+        wxGenericDirDialog::Create(parent, title, defaultPath, style, pos, sz, name);
+}
+
+wxDirDialog::~wxDirDialog()
+{
+#ifdef __WXGTK24__
+    if (!gtk_check_version(2,4,0))
+    {
+        if (m_destroyed_by_delete)
+            m_widget = NULL;
+    }
+#endif
+}
+
+void wxDirDialog::OnFakeOk( wxCommandEvent &event )
+{
+#ifdef __WXGTK24__
+    if (!gtk_check_version(2,4,0))
+        wxDialog::OnOK( event );
+    else
+#endif
+        wxGenericDirDialog::OnOK( event );
+}
+
+int wxDirDialog::ShowModal()
+{
+#ifdef __WXGTK24__
+    if (!gtk_check_version(2,4,0))
+        return wxDialog::ShowModal();
+    else
+#endif
+        return wxGenericDirDialog::ShowModal();
+}
+
+bool wxDirDialog::Show( bool show )
+{
+#ifdef __WXGTK24__
+    if (!gtk_check_version(2,4,0))
+        return wxDialog::Show( show );
+    else
+#endif
+        return wxGenericDirDialog::Show( show );
+}
+
+void wxDirDialog::DoSetSize(int x, int y, int width, int height, int sizeFlags )
+{
+    if (!m_wxwindow)
+        return;
+    else
+        wxGenericDirDialog::DoSetSize( x, y, width, height, sizeFlags );
+}
+
+void wxDirDialog::SetPath(const wxString& dir)
+{
+#ifdef __WXGTK24__
+    if (!gtk_check_version(2,4,0))
+    {
+        if (wxDirExists(dir))
+        {
+            gtk_file_chooser_set_filename(GTK_FILE_CHOOSER(m_widget), wxConvFileName->cWX2MB(dir));
+        }
+    }
+    else
+#endif
+        wxGenericDirDialog::SetPath( dir );
+}
+
+wxString wxDirDialog::GetPath() const
+{
+#ifdef __WXGTK24__
+    if (!gtk_check_version(2,4,0))
+        return wxConvFileName->cMB2WX( gtk_file_chooser_get_filename( GTK_FILE_CHOOSER(m_widget) ) );
+    else
+#endif
+        return wxGenericDirDialog::GetPath();
+}
+
+#endif // wxUSE_DIRDLG

 	  	 
