Index: include/wx/msw/textctrl.h
===================================================================
--- include/wx/msw/textctrl.h	(revision 72991)
+++ include/wx/msw/textctrl.h	(working copy)
@@ -12,6 +12,11 @@
 #ifndef _WX_TEXTCTRL_H_
 #define _WX_TEXTCTRL_H_
 
+#if defined(__INTELC__)
+#   pragma warning( push )
+#   pragma warning( disable : 809 ) /* warning #809: exception specification for virtual function XXX is incompatible with that of overridden function BASE::XXX */
+#endif
+
 class WXDLLIMPEXP_CORE wxTextCtrl : public wxTextCtrlBase
 {
 public:
@@ -31,7 +36,7 @@
 
         Create(parent, id, value, pos, size, style, validator, name);
     }
-    virtual ~wxTextCtrl() wxNOEXCEPT;
+    virtual ~wxTextCtrl();
 
     bool Create(wxWindow *parent, wxWindowID id,
                 const wxString& value = wxEmptyString,
@@ -288,4 +293,8 @@
 
 };
 
+#if defined(__INTELC__)
+#   pragma warning( pop )
+#endif
+
 #endif // _WX_TEXTCTRL_H_
Index: include/wx/stdstream.h
===================================================================
--- include/wx/stdstream.h	(revision 72991)
+++ include/wx/stdstream.h	(working copy)
@@ -24,11 +24,16 @@
 // wxStdInputStreamBuffer
 // ==========================================================================
 
+#if defined(__INTELC__)
+#   pragma warning( push )
+#   pragma warning( disable : 809 ) /* warning #809: exception specification for virtual function XXX is incompatible with that of overridden function BASE::XXX */
+#endif
+
 class WXDLLIMPEXP_BASE wxStdInputStreamBuffer : public std::streambuf
 {
 public:
     wxStdInputStreamBuffer(wxInputStream& stream);
-    virtual ~wxStdInputStreamBuffer() wxNOEXCEPT { }
+    virtual ~wxStdInputStreamBuffer() { }
 
 protected:
     virtual std::streambuf *setbuf(char *s, std::streamsize n);
@@ -63,29 +68,47 @@
     int m_lastChar;
 };
 
+#if defined(__INTELC__)
+#   pragma warning( pop )
+#endif
+
 // ==========================================================================
 // wxStdInputStream
 // ==========================================================================
 
+#if defined(__INTELC__)
+#   pragma warning( push )
+#   pragma warning( disable : 809 ) /* warning #809: exception specification for virtual function XXX is incompatible with that of overridden function BASE::XXX */
+#endif
+
 class WXDLLIMPEXP_BASE wxStdInputStream : public std::istream
 {
 public:
     wxStdInputStream(wxInputStream& stream);
-    virtual ~wxStdInputStream() wxNOEXCEPT { }
+    virtual ~wxStdInputStream() { }
 
 protected:
     wxStdInputStreamBuffer m_streamBuffer;
 };
 
+#if defined(__INTELC__)
+#   pragma warning( pop )
+#endif
+
 // ==========================================================================
 // wxStdOutputStreamBuffer
 // ==========================================================================
 
+#if defined(__INTELC__)
+#   pragma warning( push )
+#   pragma warning( disable : 809 ) /* warning #809: exception specification for virtual function XXX is incompatible with that of overridden function BASE::XXX */
+#endif
+
 class WXDLLIMPEXP_BASE wxStdOutputStreamBuffer : public std::streambuf
 {
 public:
     wxStdOutputStreamBuffer(wxOutputStream& stream);
-    virtual ~wxStdOutputStreamBuffer() wxNOEXCEPT { }
+    virtual ~wxStdOutputStreamBuffer() { }
 
 protected:
     virtual std::streambuf *setbuf(char *s, std::streamsize n);
@@ -104,20 +127,33 @@
     wxOutputStream& m_stream;
 };
 
+#if defined(__INTELC__)
+#   pragma warning( pop )
+#endif
+
 // ==========================================================================
 // wxStdOutputStream
 // ==========================================================================
 
+#if defined(__INTELC__)
+#   pragma warning( push )
+#   pragma warning( disable : 809 ) /* warning #809: exception specification for virtual function XXX is incompatible with that of overridden function BASE::XXX */
+#endif
+
 class WXDLLIMPEXP_BASE wxStdOutputStream : public std::ostream
 {
 public:
     wxStdOutputStream(wxOutputStream& stream);
-    virtual ~wxStdOutputStream() wxNOEXCEPT { }
+    virtual ~wxStdOutputStream() { }
 
 protected:
     wxStdOutputStreamBuffer m_streamBuffer;
 };
 
+#if defined(__INTELC__)
+#   pragma warning( pop )
+#endif
+
 #endif // wxUSE_STREAMS && wxUSE_STD_IOSTREAM
 
 #endif // _WX_STDSTREAM_H_
Index: include/wx/textctrl.h
===================================================================
--- include/wx/textctrl.h	(revision 72991)
+++ include/wx/textctrl.h	(working copy)
@@ -667,6 +667,11 @@
 // wxTextCtrl: a single or multiple line text zone where user can edit text
 // ----------------------------------------------------------------------------
 
+#if defined(__INTELC__)
+#   pragma warning( push )
+#   pragma warning( disable : 809 ) /* warning #809: exception specification for virtual function XXX is incompatible with that of overridden function BASE::XXX */
+#endif
+
 class WXDLLIMPEXP_CORE wxTextCtrlBase : public wxControl,
 #if wxHAS_TEXT_WINDOW_STREAM
                                    public wxSTD streambuf,
@@ -679,7 +684,7 @@
     // --------
 
     wxTextCtrlBase() { }
-    virtual ~wxTextCtrlBase() wxNOEXCEPT { }
+    virtual ~wxTextCtrlBase() { }
 
 
     // more readable flag testing methods
@@ -770,6 +775,10 @@
     DECLARE_ABSTRACT_CLASS(wxTextCtrlBase)
 };
 
+#if defined(__INTELC__)
+#   pragma warning( pop )
+#endif
+
 // ----------------------------------------------------------------------------
 // include the platform-dependent class definition
 // ----------------------------------------------------------------------------
Index: include/wx/univ/textctrl.h
===================================================================
--- include/wx/univ/textctrl.h	(revision 72991)
+++ include/wx/univ/textctrl.h	(working copy)
@@ -66,6 +66,11 @@
 // wxTextCtrl
 // ----------------------------------------------------------------------------
 
+#if defined(__INTELC__)
+#   pragma warning( push )
+#   pragma warning( disable : 809 ) /* warning #809: exception specification for virtual function XXX is incompatible with that of overridden function BASE::XXX */
+#endif
+
 class WXDLLIMPEXP_CORE wxTextCtrl : public wxTextCtrlBase,
                                public wxScrollHelper
 {
@@ -99,7 +104,7 @@
                 const wxValidator& validator = wxDefaultValidator,
                 const wxString& name = wxTextCtrlNameStr);
 
-    virtual ~wxTextCtrl() wxNOEXCEPT;
+    virtual ~wxTextCtrl();
 
     // implement base class pure virtuals
     // ----------------------------------
@@ -529,5 +534,9 @@
     friend class wxWrappedLineData;
 };
 
+#if defined(__INTELC__)
+#   pragma warning( pop )
+#endif
+
 #endif // _WX_UNIV_TEXTCTRL_H_
 
Index: src/common/combocmn.cpp
===================================================================
--- src/common/combocmn.cpp	(revision 72991)
+++ src/common/combocmn.cpp	(working copy)
@@ -936,11 +936,16 @@
 // wxComboCtrlTextCtrl
 // ----------------------------------------------------------------------------
 
+#if defined(__INTELC__)
+#   pragma warning( push )
+#   pragma warning( disable : 809 ) /* warning #809: exception specification for virtual function XXX is incompatible with that of overridden function BASE::XXX */
+#endif
+
 class wxComboCtrlTextCtrl : public wxTextCtrl
 {
 public:
     wxComboCtrlTextCtrl() : wxTextCtrl() { }
-    virtual ~wxComboCtrlTextCtrl() wxNOEXCEPT { }
+    virtual ~wxComboCtrlTextCtrl() { }
 
     virtual wxWindow *GetMainWindowOfCompositeControl()
     {
@@ -953,6 +958,10 @@
     }
 };
 
+#if defined(__INTELC__)
+#   pragma warning( pop )
+#endif
+
 // ----------------------------------------------------------------------------
 // wxComboCtrlBase
 // ----------------------------------------------------------------------------
Index: src/generic/spinctlg.cpp
===================================================================
--- src/generic/spinctlg.cpp	(revision 72991)
+++ src/generic/spinctlg.cpp	(working copy)
@@ -60,6 +60,11 @@
 // wxSpinCtrlTextGeneric: text control used by spin control
 // ----------------------------------------------------------------------------
 
+#if defined(__INTELC__)
+#   pragma warning( push )
+#   pragma warning( disable : 809 ) /* warning #809: exception specification for virtual function XXX is incompatible with that of overridden function BASE::XXX */
+#endif
+
 class wxSpinCtrlTextGeneric : public wxTextCtrl
 {
 public:
@@ -77,7 +82,7 @@
         SetSizeHints(wxDefaultCoord, wxDefaultCoord);
     }
 
-    virtual ~wxSpinCtrlTextGeneric() wxNOEXCEPT
+    virtual ~wxSpinCtrlTextGeneric()
     {
         // MSW sends extra kill focus event on destroy
         if (m_spin)
@@ -114,6 +119,10 @@
     DECLARE_EVENT_TABLE()
 };
 
+#if defined(__INTELC__)
+#   pragma warning( pop )
+#endif
+
 BEGIN_EVENT_TABLE(wxSpinCtrlTextGeneric, wxTextCtrl)
     EVT_CHAR(wxSpinCtrlTextGeneric::OnChar)
 
Index: src/generic/treectlg.cpp
===================================================================
--- src/generic/treectlg.cpp	(revision 72991)
+++ src/generic/treectlg.cpp	(working copy)
@@ -71,6 +71,11 @@
 // private classes
 // -----------------------------------------------------------------------------
 
+#if defined(__INTELC__)
+#   pragma warning( push )
+#   pragma warning( disable : 809 ) /* warning #809: exception specification for virtual function XXX is incompatible with that of overridden function BASE::XXX */
+#endif
+
 // timer used for enabling in-place edit
 class WXDLLEXPORT wxTreeRenameTimer: public wxTimer
 {
@@ -89,13 +94,22 @@
     wxDECLARE_NO_COPY_CLASS(wxTreeRenameTimer);
 };
 
+#if defined(__INTELC__)
+#   pragma warning( pop )
+#endif
+
+#if defined(__INTELC__)
+#   pragma warning( push )
+#   pragma warning( disable : 809 ) /* warning #809: exception specification for virtual function XXX is incompatible with that of overridden function BASE::XXX */
+#endif
+
 // control used for in-place edit
 class WXDLLEXPORT wxTreeTextCtrl: public wxTextCtrl
 {
 public:
     wxTreeTextCtrl(wxGenericTreeCtrl *owner, wxGenericTreeItem *item);
 
-    virtual ~wxTreeTextCtrl() wxNOEXCEPT {}
+    virtual ~wxTreeTextCtrl() {}
 
     void EndEdit( bool discardChanges );
 
@@ -119,6 +133,10 @@
     wxDECLARE_NO_COPY_CLASS(wxTreeTextCtrl);
 };
 
+#if defined(__INTELC__)
+#   pragma warning( pop )
+#endif
+
 // timer used to clear wxGenericTreeCtrl::m_findPrefix if no key was pressed
 // for a sufficiently long time
 class WXDLLEXPORT wxTreeFindTimer : public wxTimer
Index: src/univ/textctrl.cpp
===================================================================
--- src/univ/textctrl.cpp	(revision 72991)
+++ src/univ/textctrl.cpp	(working copy)
@@ -764,7 +764,12 @@
     return true;
 }
 
-wxTextCtrl::~wxTextCtrl() wxNOEXCEPT
+#if defined(__INTELC__)
+#   pragma warning( push )
+#   pragma warning( disable : 809 ) /* warning #809: exception specification for virtual function XXX is incompatible with that of overridden function BASE::XXX */
+#endif
+
+wxTextCtrl::~wxTextCtrl()
 {
     delete m_cmdProcessor;
 
@@ -779,6 +784,10 @@
     }
 }
 
+#if defined(__INTELC__)
+#   pragma warning( pop )
+#endif
+
 // ----------------------------------------------------------------------------
 // set/get the value
 // ----------------------------------------------------------------------------
