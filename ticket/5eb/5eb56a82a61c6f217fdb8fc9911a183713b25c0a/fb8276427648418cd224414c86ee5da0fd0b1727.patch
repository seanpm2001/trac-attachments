Index: src/gtk/window.cpp
===================================================================
--- src/gtk/window.cpp	(revision 66404)
+++ src/gtk/window.cpp	(working copy)
@@ -3782,30 +3782,23 @@
     {
         GtkWidget *w = GetConnectWidget();
         wxToolTip::GTKApply(w, NULL);
-#if GTK_CHECK_VERSION(2, 12, 0)
-        // Just applying NULL doesn't work on 2.12.0, so also use
-        // gtk_widget_set_has_tooltip. It is part of the new GtkTooltip API
-        // but seems also to work with the old GtkTooltips.
-        if (gtk_check_version(2, 12, 0) == NULL)
-            gtk_widget_set_has_tooltip(w, FALSE);
-#endif
     }
 }
 
 void wxWindowGTK::GTKApplyToolTip( GtkTooltips *tips, const gchar *tip )
 {
     GtkWidget *w = GetConnectWidget();
-    gtk_tooltips_set_tip(tips, w, tip, NULL);
-
+    
 #if GTK_CHECK_VERSION(2, 12, 0)
-    if ( !tip || tip[0] == '\0' )
+    if (!gtk_check_version(2, 12, 0))
     {
-        // Just applying empty tool tip doesn't work on 2.12.0, so also use
-        // gtk_widget_set_has_tooltip.
-        if (gtk_check_version(2, 12, 0) == NULL)
-            gtk_widget_set_has_tooltip(w, FALSE);
+        gtk_widget_set_tooltip_text (w, tip);
     }
+    else
 #endif
+    {
+        gtk_tooltips_set_tip(tips, w, tip, NULL);
+    }
 }
 #endif // wxUSE_TOOLTIPS
 
Index: src/gtk/toolbar.cpp
===================================================================
--- src/gtk/toolbar.cpp	(revision 66404)
+++ src/gtk/toolbar.cpp	(working copy)
@@ -351,7 +351,7 @@
 
 wxToolBar::~wxToolBar()
 {
-    if (m_tooltips)
+    if (m_tooltips) // always NULL if GTK >= 2.12
     {
         gtk_object_destroy(GTK_OBJECT(m_tooltips));
         g_object_unref(m_tooltips);
@@ -376,9 +376,12 @@
     FixupStyle();
 
     m_toolbar = GTK_TOOLBAR( gtk_toolbar_new() );
-    m_tooltips = gtk_tooltips_new();
-    g_object_ref(m_tooltips);
-    gtk_object_sink(GTK_OBJECT(m_tooltips));
+    if (gtk_check_version(2, 12, 0))
+    {
+        m_tooltips = gtk_tooltips_new();
+        g_object_ref(m_tooltips);
+        gtk_object_sink(GTK_OBJECT(m_tooltips));
+    }
     GtkSetStyle();
 
     if (style & wxTB_DOCKABLE)
@@ -528,8 +531,18 @@
             }
             if (!HasFlag(wxTB_NO_TOOLTIPS) && !tool->GetShortHelp().empty())
             {
-                gtk_tool_item_set_tooltip(tool->m_item,
-                    m_tooltips, wxGTK_CONV(tool->GetShortHelp()), "");
+#if GTK_CHECK_VERSION(2, 12, 0)
+                if (!gtk_check_version(2, 12, 0))
+                {
+                    gtk_tool_item_set_tooltip_text(tool->m_item,
+                        wxGTK_CONV(tool->GetShortHelp()));
+                }
+                else
+#endif
+                {
+                    gtk_tool_item_set_tooltip(tool->m_item,
+                        m_tooltips, wxGTK_CONV(tool->GetShortHelp()), "");
+                }
             }
             g_signal_connect(GTK_BIN(tool->m_item)->child, "button_press_event",
                 G_CALLBACK(button_press_event), tool);
@@ -695,8 +708,18 @@
         (void)tool->SetShortHelp(helpString);
         if (tool->m_item)
         {
-            gtk_tool_item_set_tooltip(tool->m_item,
-                m_tooltips, wxGTK_CONV(helpString), "");
+#if GTK_CHECK_VERSION(2, 12, 0)
+            if (!gtk_check_version(2, 12, 0))
+            {
+                gtk_tool_item_set_tooltip_text(tool->m_item,
+                    wxGTK_CONV(helpString));
+            }
+            else
+#endif
+            {
+                gtk_tool_item_set_tooltip(tool->m_item,
+                    m_tooltips, wxGTK_CONV(helpString), "");
+            }
         }
     }
 }
Index: src/gtk/listbox.cpp
===================================================================
--- src/gtk/listbox.cpp	(revision 66404)
+++ src/gtk/listbox.cpp	(working copy)
@@ -848,8 +848,17 @@
 #if wxUSE_TOOLTIPS
 void wxListBox::GTKApplyToolTip( GtkTooltips *tips, const gchar *tip )
 {
-    // RN: Is this needed anymore?
-    gtk_tooltips_set_tip( tips, GTK_WIDGET( m_treeview ), tip, NULL );
+#if GTK_CHECK_VERSION(2, 12, 0)
+    if (!gtk_check_version(2, 12, 0))
+    {
+        gtk_widget_set_tooltip_text(GTK_WIDGET( m_treeview ), tip);
+    }
+    else
+#endif
+    {
+        // RN: Is this needed anymore?
+        gtk_tooltips_set_tip( tips, GTK_WIDGET( m_treeview ), tip, NULL );
+    }
 }
 #endif // wxUSE_TOOLTIPS
 
Index: src/gtk/tooltip.cpp
===================================================================
--- src/gtk/tooltip.cpp	(revision 66404)
+++ src/gtk/tooltip.cpp	(working copy)
@@ -63,21 +63,42 @@
 /* static */
 void wxToolTip::GTKApply(GtkWidget *w, const gchar *tip)
 {
-    if ( !gs_tooltips )
-        gs_tooltips = gtk_tooltips_new();
+#if GTK_CHECK_VERSION(2, 12, 0)
+    if (!gtk_check_version(2, 12, 0))
+    {
+        gtk_widget_set_tooltip_text(w, tip);
+    }
+    else
+#endif
+    {
+        if ( !gs_tooltips )
+            gs_tooltips = gtk_tooltips_new();
 
-    gtk_tooltips_set_tip(gs_tooltips, w, tip, NULL);
+        gtk_tooltips_set_tip(gs_tooltips, w, tip, NULL);
+    }
 }
 
 void wxToolTip::Enable( bool flag )
 {
-    if (!gs_tooltips)
-        return;
+#if GTK_CHECK_VERSION(2, 12, 0)
+    if (!gtk_check_version(2, 12, 0))
+    {
+        GtkSettings* settings = gtk_settings_get_default();
+        if(!settings)
+            return;
+        gtk_settings_set_long_property(settings, "gtk-enable-tooltips", flag?TRUE:FALSE, NULL);
+    }
+    else
+#endif
+    {
+        if (!gs_tooltips)
+            return;
 
-    if (flag)
-        gtk_tooltips_enable( gs_tooltips );
-    else
-        gtk_tooltips_disable( gs_tooltips );
+        if (flag)
+            gtk_tooltips_enable( gs_tooltips );
+        else
+            gtk_tooltips_disable( gs_tooltips );
+    }
 }
 
 G_BEGIN_DECLS
@@ -87,12 +108,24 @@
 
 void wxToolTip::SetDelay( long msecs )
 {
-    if (!gs_tooltips)
-        return;
+#if GTK_CHECK_VERSION(2, 12, 0)
+    if (!gtk_check_version(2, 12, 0))
+    {
+        GtkSettings* settings = gtk_settings_get_default();
+        if(!settings)
+            return;
+        gtk_settings_set_long_property(settings, "gtk-tooltip-timeout", msecs, NULL);
+    }
+    else
+#endif
+    {
+        if (!gs_tooltips)
+            return;
 
-    // FIXME: This is a deprecated function and might not even have an effect.
-    // Try to not use it, after which remove the prototype above.
-    gtk_tooltips_set_delay( gs_tooltips, (int)msecs );
+        // FIXME: This is a deprecated function and might not even have an effect.
+        // Try to not use it, after which remove the prototype above.
+        gtk_tooltips_set_delay( gs_tooltips, (int)msecs );
+    }
 }
 
 void wxToolTip::SetAutoPop( long WXUNUSED(msecs) )
