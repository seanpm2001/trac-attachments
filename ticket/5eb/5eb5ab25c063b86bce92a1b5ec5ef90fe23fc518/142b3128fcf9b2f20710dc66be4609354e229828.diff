commit 0784c5af06c5f881f7a2c9e147abc77ef98f730b
Author: Jens Lody <jens@codeblocks.org>
Date:   Fri Oct 26 15:10:58 2012 +0200

    * fix to calculate the tabs size instead of using fixed width and default height

diff --git a/include/wx/aui/auibook.h b/include/wx/aui/auibook.h
index fa04c51..a38e8b9 100644
--- a/include/wx/aui/auibook.h
+++ b/include/wx/aui/auibook.h
@@ -38,6 +38,7 @@ enum wxAuiNotebookOption
     wxAUI_NB_TAB_MOVE            = wxAUI_MGR_NB_TAB_MOVE,
     wxAUI_NB_TAB_EXTERNAL_MOVE   = wxAUI_MGR_ALLOW_EXTERNAL_MOVE,
     wxAUI_NB_TAB_FIXED_WIDTH     = wxAUI_MGR_NB_TAB_FIXED_WIDTH,
+    wxAUI_NB_TAB_FIXED_HEIGHT    = wxAUI_MGR_NB_TAB_FIXED_HEIGHT,
     wxAUI_NB_SCROLL_BUTTONS      = wxAUI_MGR_NB_SCROLL_BUTTONS,
     wxAUI_NB_WINDOWLIST_BUTTON   = wxAUI_MGR_NB_WINDOWLIST_BUTTON,
     wxAUI_NB_CLOSE_BUTTON        = wxAUI_MGR_NB_CLOSE_BUTTON,
diff --git a/include/wx/aui/framemanager.h b/include/wx/aui/framemanager.h
index b6c9da2..92157ca 100644
--- a/include/wx/aui/framemanager.h
+++ b/include/wx/aui/framemanager.h
@@ -57,6 +57,7 @@ enum wxAuiManagerOption
     wxAUI_MGR_NB_TAB_MOVE              = 1 << 14,
     wxAUI_MGR_ALLOW_EXTERNAL_MOVE      = 1 << 15,
     wxAUI_MGR_NB_TAB_FIXED_WIDTH       = 1 << 16,
+    wxAUI_MGR_NB_TAB_FIXED_HEIGHT      = wxAUI_MGR_NB_TAB_FIXED_WIDTH,
     wxAUI_MGR_NB_SCROLL_BUTTONS        = 1 << 17,
     wxAUI_MGR_NB_WINDOWLIST_BUTTON     = 1 << 18,
     wxAUI_MGR_NB_CLOSE_BUTTON          = 1 << 19,
diff --git a/include/wx/aui/tabart.h b/include/wx/aui/tabart.h
index bbcc971..9b25e61 100644
--- a/include/wx/aui/tabart.h
+++ b/include/wx/aui/tabart.h
@@ -110,7 +110,7 @@ public:
                          const wxAuiPaneInfoPtrArray& pages,
                          const wxSize& requiredBmpSize) = 0;
 
-    int m_fixedTabWidth;
+    int m_fixedTabSize;
     int m_tabCtrlHeight;
     int m_tabCtrlWidth;
     unsigned int m_flags;
diff --git a/src/aui/framemanager.cpp b/src/aui/framemanager.cpp
index 82f98ac..a357939 100644
--- a/src/aui/framemanager.cpp
+++ b/src/aui/framemanager.cpp
@@ -114,7 +114,7 @@ bool TabHasCloseButton(unsigned int flags,wxAuiPaneInfo& page)
 
 const int auiToolBarLayer = 10;
 //fixme: (MJM) This should be set by the art somewhere not hardcoded, temporary hardcoding while we iron out some issues with the tab art providers.
-const int notebookTabHeight = 30;
+const int notebookTabHeight = 42;
 
 
 wxAuiPaneInfo::wxAuiPaneInfo()
@@ -2383,10 +2383,15 @@ void wxAuiManager::LayoutAddNotebook(wxAuiTabArt* tabArt,wxAuiTabContainer* note
     {
         //fixme: (MJM) This should be set via the art provider not hardcoded, temporary hardcoding while we iron out some issues with the tab art providers.
         sizerItem = notebookSizer->Add(m_art->GetMetric(wxAUI_DOCKART_SASH_SIZE), /*tabArt->m_tabCtrlHeight*/notebookTabHeight, 0, wxEXPAND);
+        if(!HasFlag(wxAUI_MGR_NB_TAB_FIXED_HEIGHT))
+        {
+            tabContainerRecalcList.Add(notebookContainer);
+            tabContainerRecalcSizers.Add(sizerItem);
+        }
     }
     else
     {
-        sizerItem = notebookSizer->Add(tabArt->m_fixedTabWidth, m_art->GetMetric(wxAUI_DOCKART_SASH_SIZE), 0, wxEXPAND);
+        sizerItem = notebookSizer->Add(tabArt->m_fixedTabSize, m_art->GetMetric(wxAUI_DOCKART_SASH_SIZE), 0, wxEXPAND);
         if(!HasFlag(wxAUI_MGR_NB_TAB_FIXED_WIDTH))
         {
             tabContainerRecalcList.Add(notebookContainer);
@@ -2862,14 +2867,11 @@ void wxAuiManager::LayoutAddDock(wxSizer* cont, wxAuiDockInfo& dock, wxAuiDockUI
         }
     }
 
-    unsigned int recalcTabWidthIndex;
-    for(recalcTabWidthIndex=0;recalcTabWidthIndex<tabContainerRecalcList.size();recalcTabWidthIndex++)
+    unsigned int recalcTabSizeIndex;
+    for(recalcTabSizeIndex=0; recalcTabSizeIndex < tabContainerRecalcList.size(); recalcTabSizeIndex++)
     {
-        int totalSize = 0;
-        int visibleSize = 0;
-        wxMemoryDC dc;
-        tabContainerRecalcList[recalcTabWidthIndex]->CalculateRequiredWidth(dc,m_frame,totalSize,visibleSize);
-        tabContainerRecalcSizers[recalcTabWidthIndex]->SetInitSize(totalSize,-1);
+        wxSize tabSize = m_tab_art->GetBestTabSize(m_frame, tabContainerRecalcList[recalcTabSizeIndex]->GetPages(), wxSize(16,16));
+        tabContainerRecalcSizers[recalcTabSizeIndex]->SetMinSize(tabSize);
     }
 
     if (dock.dock_direction == wxAUI_DOCK_CENTER || hasMaximizedPane)
diff --git a/src/aui/tabart.cpp b/src/aui/tabart.cpp
index 801ff48..fbf9cce 100644
--- a/src/aui/tabart.cpp
+++ b/src/aui/tabart.cpp
@@ -166,7 +166,7 @@ wxAuiGenericTabArt::wxAuiGenericTabArt()
     m_selectedFont.SetWeight(wxBOLD);
     m_measuringFont = m_selectedFont;
 
-    m_fixedTabWidth = 100;
+    m_fixedTabSize = 20;
     m_tabCtrlHeight = 0;
 
 #if defined( __WXMAC__ ) && wxOSX_USE_COCOA_OR_CARBON
@@ -231,55 +231,56 @@ void wxAuiGenericTabArt::SetSizingInfo(const wxSize& tabCtrlSize, size_t tabCoun
 {
     if (IsHorizontal())
     {
-        m_fixedTabWidth = 100;
-        int totWidth = (int)tabCtrlSize.x - GetIndentSize() - 4;
+        m_fixedTabSize = 100;
+
+        int tot_width = (int)tabCtrlSize.x - GetIndentSize() - 4;
 
         if (m_flags & wxAUI_NB_CLOSE_BUTTON)
-            totWidth -= m_activeCloseBmp.GetWidth();
+            tot_width -= m_activeCloseBmp.GetWidth();
         if (m_flags & wxAUI_NB_WINDOWLIST_BUTTON)
-            totWidth -= m_activeWindowListBmp.GetWidth();
+            tot_width -= m_activeWindowListBmp.GetWidth();
 
         if (tabCount > 0)
         {
-            m_fixedTabWidth = totWidth/(int)tabCount;
+                m_fixedTabSize = tot_width/(int)tabCount;
         }
 
+        if (m_fixedTabSize < 100)
+            m_fixedTabSize = 100;
 
-        if (m_fixedTabWidth < 100)
-            m_fixedTabWidth = 100;
-
-        if (m_fixedTabWidth > totWidth/2)
-            m_fixedTabWidth = totWidth/2;
+        if (m_fixedTabSize > tot_width/2)
+            m_fixedTabSize = tot_width/2;
 
-        if (m_fixedTabWidth > 220)
-            m_fixedTabWidth = 220;
+        if (m_fixedTabSize > 220)
+            m_fixedTabSize = 220;
 
         m_tabCtrlHeight = tabCtrlSize.y;
     }
     else
     {
-        m_fixedTabWidth = 100;
+        m_fixedTabSize = 20;
+
+        int tot_height = (int)tabCtrlSize.y - GetIndentSize() - 4;
 
-        //Below is only necessary for left/right notebooks where the tabs themselves run upwards (instead of left to right) - we don't support this currently so commenting it out.
-        #if 0
-        int totHeight = (int)tabCtrlSize.y - GetIndentSize() - 4;
         if (m_flags & wxAUI_NB_CLOSE_BUTTON)
-            totHeight -= m_activeCloseBmp.GetHeight();
+            tot_height -= m_activeCloseBmp.GetHeight();
         if (m_flags & wxAUI_NB_WINDOWLIST_BUTTON)
-            totHeight -= m_activeWindowListBmp.GetHeight();
+            tot_height -= m_activeWindowListBmp.GetHeight();
 
         if (tabCount > 0)
         {
-            m_fixedTabWidth = totHeight/(int)tabCount;
+            m_fixedTabSize = tot_height/(int)tabCount;
         }
-        if (m_fixedTabWidth < 20)
-           m_fixedTabWidth = 20;
-        if (m_fixedTabWidth > totHeight/2)
-           m_fixedTabWidth = totHeight/2;
 
-        if (m_fixedTabWidth > 60)
-            m_fixedTabWidth = 60;
-        #endif
+
+        if (m_fixedTabSize < 20)
+            m_fixedTabSize = 20;
+
+        if (m_fixedTabSize > tot_height/2)
+            m_fixedTabSize = tot_height/2;
+
+        if (m_fixedTabSize > 60)
+            m_fixedTabSize = 60;
 
         m_tabCtrlWidth = tabCtrlSize.x;
     }
@@ -786,15 +787,15 @@ wxSize wxAuiGenericTabArt::GetTabSize(wxDC& dc, wxWindow* WXUNUSED(wnd), const w
     {
         if (m_flags & wxAUI_NB_TAB_FIXED_WIDTH)
         {
-            tabWidth = m_fixedTabWidth;
+            tabWidth = m_fixedTabSize;
         }
         *extent = tabWidth;
     }
     else
     {
-        if (m_flags & wxAUI_MGR_NB_TAB_FIXED_WIDTH)
+        if (m_flags & wxAUI_NB_TAB_FIXED_HEIGHT)
         {
-            tabWidth = m_fixedTabWidth;
+            tabHeight = m_fixedTabSize;
         }
         *extent = tabHeight;
     }
@@ -1015,7 +1016,7 @@ wxAuiSimpleTabArt::wxAuiSimpleTabArt()
     m_measuringFont = m_selectedFont;
 
     m_flags = 0;
-    m_fixedTabWidth = 100;
+    m_fixedTabSize = 20;
 
     wxColour baseColour = wxSystemSettings::GetColour(wxSYS_COLOUR_3DFACE);
 
@@ -1067,57 +1068,55 @@ void wxAuiSimpleTabArt::SetSizingInfo(const wxSize& tabCtrlSize, size_t tabCount
 {
     if (IsHorizontal())
     {
-        m_fixedTabWidth = 100;
+        m_fixedTabSize = 100;
 
-        int totWidth = (int)tabCtrlSize.x - GetIndentSize() - 4;
+        int tot_width = (int)tabCtrlSize.x - GetIndentSize() - 4;
 
         if (m_flags & wxAUI_NB_CLOSE_BUTTON)
-            totWidth -= m_activeCloseBmp.GetWidth();
+            tot_width -= m_activeCloseBmp.GetWidth();
         if (m_flags & wxAUI_NB_WINDOWLIST_BUTTON)
-            totWidth -= m_activeWindowListBmp.GetWidth();
+            tot_width -= m_activeWindowListBmp.GetWidth();
 
         if (tabCount > 0)
         {
-            m_fixedTabWidth = totWidth/(int)tabCount;
+                m_fixedTabSize = tot_width/(int)tabCount;
         }
 
 
-        if (m_fixedTabWidth < 100)
-            m_fixedTabWidth = 100;
+        if (m_fixedTabSize < 100)
+            m_fixedTabSize = 100;
 
-        if (m_fixedTabWidth > totWidth/2)
-            m_fixedTabWidth = totWidth/2;
+        if (m_fixedTabSize > tot_width/2)
+            m_fixedTabSize = tot_width/2;
 
-        if (m_fixedTabWidth > 220)
-            m_fixedTabWidth = 220;
+        if (m_fixedTabSize > 220)
+            m_fixedTabSize = 220;
     }
     else
     {
-        m_fixedTabWidth = 100;
+        m_fixedTabSize = 20;
+
+        int tot_height = (int)tabCtrlSize.y - GetIndentSize() - 4;
 
-        //Below is only necessary for left/right notebooks where the tabs themselves run upwards (instead of left to right) - we don't support this currently so commenting it out.
-        #if 0
-        int totHeight = (int)tabCtrlSize.y - GetIndentSize() - 4;
         if (m_flags & wxAUI_NB_CLOSE_BUTTON)
-            totHeight -= m_activeCloseBmp.GetHeight();
+            tot_height -= m_activeCloseBmp.GetHeight();
         if (m_flags & wxAUI_NB_WINDOWLIST_BUTTON)
-            totHeight -= m_activeWindowListBmp.GetHeight();
+            tot_height -= m_activeWindowListBmp.GetHeight();
 
         if (tabCount > 0)
         {
-            m_fixedTabWidth = totHeight/(int)tabCount;
+            m_fixedTabSize = tot_height/(int)tabCount;
         }
 
 
-        if (m_fixedTabWidth < 20)
-            m_fixedTabWidth = 20;
+        if (m_fixedTabSize < 20)
+            m_fixedTabSize = 20;
 
-        if (m_fixedTabWidth > totHeight/2)
-            m_fixedTabWidth = totHeight/2;
+        if (m_fixedTabSize > tot_height/2)
+            m_fixedTabSize = tot_height/2;
 
-        if (m_fixedTabWidth > 60)
-            m_fixedTabWidth = 60;
-        #endif
+        if (m_fixedTabSize > 60)
+            m_fixedTabSize = 60;
     }
 }
 
@@ -1403,20 +1402,15 @@ wxSize wxAuiSimpleTabArt::GetTabSize(wxDC& dc, wxWindow* WXUNUSED(wnd), const wx
     {
         if (m_flags & wxAUI_MGR_NB_TAB_FIXED_WIDTH)
         {
-            tabWidth = m_fixedTabWidth;
+            tabWidth = m_fixedTabSize;
         }
         *extent = tabWidth - (tabHeight/2) - 1;
     }
     else
     {
         if (m_flags & wxAUI_MGR_NB_TAB_FIXED_WIDTH)
-        {
-             tabWidth = m_fixedTabWidth;
-        }
-        else
-        {
-            tabWidth += 16;
-        }
+             tabWidth = m_fixedTabSize;
+        tabWidth += 16;
         *extent = tabHeight + 2;
     }
 
