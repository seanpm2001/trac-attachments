commit c49f5b0ee93a12948ab8e4398c7e73a7be687b7f
Author: Jens Lody <jens@codeblocks.org>
Date:   Sun Oct 21 09:55:09 2012 +0200

    * first fixes for left/right tabs

diff --git a/src/aui/dockart.cpp b/src/aui/dockart.cpp
index db986e5..d362cf7 100644
--- a/src/aui/dockart.cpp
+++ b/src/aui/dockart.cpp
@@ -1326,27 +1326,20 @@ void wxAuiTabContainer::Render(wxDC* rawDC, wxWindow* wnd)
     // afforded on screen
     int totalSize = 0;
     int visibleSize = 0;
+    int btn_size;
     if(IsHorizontal())
     {
         CalculateRequiredWidth(dc,wnd,totalSize,visibleSize);
-    }
-    else
-    {
-        CalculateRequiredHeight(dc,wnd,totalSize,visibleSize);
-    }
-
-    size_t tabOffset=m_tabOffset;
-    int btn_size;
-    if (IsHorizontal())
-    {
         btn_size = forwButtonsSize;
     }
     else
     {
-        // If all tabs can fit on screen then we don't want to apply offset even if we still have an offset, so set to 0.
-        tabOffset=0;
+        CalculateRequiredHeight(dc,wnd,totalSize,visibleSize);
         btn_size = backwButtonsSize;
     }
+    // ensure, we show as max tabs as possible
+    while (m_tabOffset > 0 && IsTabVisible(pageCount-1, m_tabOffset-1, &dc, wnd) )
+            --m_tabOffset;
 
     // show up/down buttons
     for (i = 0; i < buttonCount; ++i)
@@ -1367,7 +1360,7 @@ void wxAuiTabContainer::Render(wxDC* rawDC, wxWindow* wnd)
         wxAuiTabContainerButton& button = m_buttons.Item(i);
         if (button.id == wxAUI_BUTTON_LEFT || button.id == wxAUI_BUTTON_UP)
         {
-            if (tabOffset == 0)
+            if (m_tabOffset == 0)
                 button.curState |= wxAUI_BUTTON_STATE_DISABLED;
             else
                 button.curState &= ~wxAUI_BUTTON_STATE_DISABLED;
@@ -1485,7 +1478,7 @@ void wxAuiTabContainer::Render(wxDC* rawDC, wxWindow* wnd)
 
 
     // buttons before the tab offset must be set to hidden
-    for (i = 0; i < tabOffset; ++i)
+    for (i = 0; i < m_tabOffset; ++i)
     {
         m_tabCloseButtons.Item(i).curState = wxAUI_BUTTON_STATE_HIDDEN;
     }
@@ -1530,7 +1523,7 @@ void wxAuiTabContainer::Render(wxDC* rawDC, wxWindow* wnd)
         rect.width = m_rect.width;
     }
 
-    for (i = tabOffset; i < pageCount; ++i)
+    for (i = m_tabOffset; i < pageCount; ++i)
     {
         wxAuiPaneInfo& page = *m_pages.Item(i);
         wxAuiTabContainerButton& tab_button = m_tabCloseButtons.Item(i);
@@ -1594,7 +1587,7 @@ void wxAuiTabContainer::Render(wxDC* rawDC, wxWindow* wnd)
 
 
     // draw the active tab again so it stands in the foreground
-    if (active >= tabOffset && active < m_pages.GetCount())
+    if (active >= m_tabOffset && active < m_pages.GetCount())
     {
         wxAuiPaneInfo& page = *m_pages.Item(active);
 
@@ -1835,28 +1828,9 @@ bool wxAuiTabContainer::TabHitTest(int x, int y, wxAuiPaneInfo** hit) const
             return false;
     }
 
-    // find out if size of tabs is larger than can be
-    // afforded on screen
-    int totalSize = 0;
-    int visibleSize = 0;
-    wxMemoryDC dc;
-    if(IsHorizontal())
-    {
-        CalculateRequiredWidth(dc,m_pages.Item(0)->GetWindow(),totalSize,visibleSize);
-    }
-    else
-    {
-        CalculateRequiredHeight(dc,m_pages.Item(0)->GetWindow(),totalSize,visibleSize);
-    }
-
-    size_t tabOffset=m_tabOffset;
-    if (totalSize <= m_rect.GetWidth())
-    {
-        tabOffset=0;
-    }
 
     size_t i, pageCount = m_pages.GetCount();
-    for (i = tabOffset; i < pageCount; ++i)
+    for (i = m_tabOffset; i < pageCount; ++i)
     {
         wxAuiPaneInfo& page = *m_pages.Item(i);
         if (page.rect.Contains(x,y))
diff --git a/src/aui/framemanager.cpp b/src/aui/framemanager.cpp
index 82f98ac..745d9ac 100644
--- a/src/aui/framemanager.cpp
+++ b/src/aui/framemanager.cpp
@@ -114,7 +114,7 @@ bool TabHasCloseButton(unsigned int flags,wxAuiPaneInfo& page)
 
 const int auiToolBarLayer = 10;
 //fixme: (MJM) This should be set by the art somewhere not hardcoded, temporary hardcoding while we iron out some issues with the tab art providers.
-const int notebookTabHeight = 30;
+const int notebookTabHeight = 42;
 
 
 wxAuiPaneInfo::wxAuiPaneInfo()
diff --git a/src/aui/tabart.cpp b/src/aui/tabart.cpp
index 801ff48..0ca8133 100644
--- a/src/aui/tabart.cpp
+++ b/src/aui/tabart.cpp
@@ -261,7 +261,6 @@ void wxAuiGenericTabArt::SetSizingInfo(const wxSize& tabCtrlSize, size_t tabCoun
         m_fixedTabWidth = 100;
 
         //Below is only necessary for left/right notebooks where the tabs themselves run upwards (instead of left to right) - we don't support this currently so commenting it out.
-        #if 0
         int totHeight = (int)tabCtrlSize.y - GetIndentSize() - 4;
         if (m_flags & wxAUI_NB_CLOSE_BUTTON)
             totHeight -= m_activeCloseBmp.GetHeight();
@@ -279,7 +278,6 @@ void wxAuiGenericTabArt::SetSizingInfo(const wxSize& tabCtrlSize, size_t tabCoun
 
         if (m_fixedTabWidth > 60)
             m_fixedTabWidth = 60;
-        #endif
 
         m_tabCtrlWidth = tabCtrlSize.x;
     }
diff --git a/src/aui/tabartgtk.cpp b/src/aui/tabartgtk.cpp
index 8914580..76b4304 100644
--- a/src/aui/tabartgtk.cpp
+++ b/src/aui/tabartgtk.cpp
@@ -444,7 +444,7 @@ void wxAuiGtkTabArt::DrawButton(wxDC& dc, wxWindow* wnd, const wxRect& inRect, i
             break;
 
         case wxAUI_BUTTON_UP:
-            rect.width = wnd->GetRect().GetWidth();
+            rect.width = dc.GetSize().GetWidth();
             rect = DrawSimpleArrow(dc, widget, buttonState, rect, orientation, GTK_ARROW_UP);
             break;
 
