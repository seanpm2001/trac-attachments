commit 45559eb52a00a01414b8e0aafc1ba556d44e6ef5
Author: Jens Lody <jens@codeblocks.org>
Date:   Sun Oct 21 14:23:34 2012 +0200

    * first fixes for fixed tabwidth and -height

diff --git a/include/wx/aui/auibook.h b/include/wx/aui/auibook.h
index fa04c51..5dffb6a 100644
--- a/include/wx/aui/auibook.h
+++ b/include/wx/aui/auibook.h
@@ -38,6 +38,7 @@ enum wxAuiNotebookOption
     wxAUI_NB_TAB_MOVE            = wxAUI_MGR_NB_TAB_MOVE,
     wxAUI_NB_TAB_EXTERNAL_MOVE   = wxAUI_MGR_ALLOW_EXTERNAL_MOVE,
     wxAUI_NB_TAB_FIXED_WIDTH     = wxAUI_MGR_NB_TAB_FIXED_WIDTH,
+    wxAUI_NB_TAB_FIXED_HEIGHT    = wxAUI_NB_TAB_FIXED_WIDTH,
     wxAUI_NB_SCROLL_BUTTONS      = wxAUI_MGR_NB_SCROLL_BUTTONS,
     wxAUI_NB_WINDOWLIST_BUTTON   = wxAUI_MGR_NB_WINDOWLIST_BUTTON,
     wxAUI_NB_CLOSE_BUTTON        = wxAUI_MGR_NB_CLOSE_BUTTON,
diff --git a/include/wx/aui/tabart.h b/include/wx/aui/tabart.h
index bbcc971..9b25e61 100644
--- a/include/wx/aui/tabart.h
+++ b/include/wx/aui/tabart.h
@@ -110,7 +110,7 @@ public:
                          const wxAuiPaneInfoPtrArray& pages,
                          const wxSize& requiredBmpSize) = 0;
 
-    int m_fixedTabWidth;
+    int m_fixedTabSize;
     int m_tabCtrlHeight;
     int m_tabCtrlWidth;
     unsigned int m_flags;
diff --git a/src/aui/dockart.cpp b/src/aui/dockart.cpp
index d362cf7..9135f45 100644
--- a/src/aui/dockart.cpp
+++ b/src/aui/dockart.cpp
@@ -1158,7 +1158,10 @@ void wxAuiTabContainer::CalculateRequiredHeight(wxDC& dc,wxWindow* wnd,int& tota
         }
         else
         {
-            totalSize += size.y;
+            if (i+1 < pageCount)
+                totalSize += extent;
+            else
+                totalSize += size.y;
         }
         if (i >= m_tabOffset)
         {
@@ -1168,7 +1171,10 @@ void wxAuiTabContainer::CalculateRequiredHeight(wxDC& dc,wxWindow* wnd,int& tota
             }
             else
             {
-                visibleSize += size.y;
+                if (i+1 < pageCount)
+                    visibleSize += extent;
+                else
+                    visibleSize += size.y;
             }
         }
     }
@@ -1202,17 +1208,24 @@ void wxAuiTabContainer::CalculateRequiredWidth(wxDC& dc,wxWindow* wnd,int& total
 
         if (IsHorizontal())
         {
-            totalSize += size.x;
+            if (i+1 < pageCount)
+                totalSize += extent;
+            else
+                totalSize += size.x;
         }
         else
         {
              totalSize = std::max(totalSize,size.x);
         }
+
         if (i >= m_tabOffset)
         {
             if (IsHorizontal())
             {
-                visibleSize += size.x;
+                if (i+1 < pageCount)
+                    visibleSize += extent;
+                else
+                    visibleSize += size.x;
             }
             else
             {
@@ -1284,7 +1297,7 @@ void wxAuiTabContainer::Render(wxDC* rawDC, wxWindow* wnd)
     }
 
 
-    // draw the forward buttons on the top
+    // draw the forward buttons on the right/top
     offset = m_rect.x + m_rect.width;
     for (i = buttonCount; i > 0 ; --i)
     {
@@ -1412,7 +1425,7 @@ void wxAuiTabContainer::Render(wxDC* rawDC, wxWindow* wnd)
     }
 
 
-    offset = 0;
+    offset = 1;
 
     // draw the buttons on the bottom side
 
@@ -1426,7 +1439,7 @@ void wxAuiTabContainer::Render(wxDC* rawDC, wxWindow* wnd)
             continue;
 
         wxRect button_rect = m_rect;
-        button_rect.SetX(1);
+        button_rect.SetX(offset);
         button_rect.width -= offset;
         button_rect.SetY(1);
 
diff --git a/src/aui/framemanager.cpp b/src/aui/framemanager.cpp
index 745d9ac..6f40257 100644
--- a/src/aui/framemanager.cpp
+++ b/src/aui/framemanager.cpp
@@ -2386,7 +2386,7 @@ void wxAuiManager::LayoutAddNotebook(wxAuiTabArt* tabArt,wxAuiTabContainer* note
     }
     else
     {
-        sizerItem = notebookSizer->Add(tabArt->m_fixedTabWidth, m_art->GetMetric(wxAUI_DOCKART_SASH_SIZE), 0, wxEXPAND);
+        sizerItem = notebookSizer->Add(tabArt->m_fixedTabSize, m_art->GetMetric(wxAUI_DOCKART_SASH_SIZE), 0, wxEXPAND);
         if(!HasFlag(wxAUI_MGR_NB_TAB_FIXED_WIDTH))
         {
             tabContainerRecalcList.Add(notebookContainer);
diff --git a/src/aui/tabart.cpp b/src/aui/tabart.cpp
index 0ca8133..ca3b86c 100644
--- a/src/aui/tabart.cpp
+++ b/src/aui/tabart.cpp
@@ -166,7 +166,7 @@ wxAuiGenericTabArt::wxAuiGenericTabArt()
     m_selectedFont.SetWeight(wxBOLD);
     m_measuringFont = m_selectedFont;
 
-    m_fixedTabWidth = 100;
+    m_fixedTabSize = 20;
     m_tabCtrlHeight = 0;
 
 #if defined( __WXMAC__ ) && wxOSX_USE_COCOA_OR_CARBON
@@ -231,53 +231,56 @@ void wxAuiGenericTabArt::SetSizingInfo(const wxSize& tabCtrlSize, size_t tabCoun
 {
     if (IsHorizontal())
     {
-        m_fixedTabWidth = 100;
-        int totWidth = (int)tabCtrlSize.x - GetIndentSize() - 4;
+        m_fixedTabSize = 100;
+
+        int tot_width = (int)tabCtrlSize.x - GetIndentSize() - 4;
 
         if (m_flags & wxAUI_NB_CLOSE_BUTTON)
-            totWidth -= m_activeCloseBmp.GetWidth();
+            tot_width -= m_activeCloseBmp.GetWidth();
         if (m_flags & wxAUI_NB_WINDOWLIST_BUTTON)
-            totWidth -= m_activeWindowListBmp.GetWidth();
+            tot_width -= m_activeWindowListBmp.GetWidth();
 
         if (tabCount > 0)
         {
-            m_fixedTabWidth = totWidth/(int)tabCount;
+                m_fixedTabSize = tot_width/(int)tabCount;
         }
 
+        if (m_fixedTabSize < 100)
+            m_fixedTabSize = 100;
 
-        if (m_fixedTabWidth < 100)
-            m_fixedTabWidth = 100;
-
-        if (m_fixedTabWidth > totWidth/2)
-            m_fixedTabWidth = totWidth/2;
+        if (m_fixedTabSize > tot_width/2)
+            m_fixedTabSize = tot_width/2;
 
-        if (m_fixedTabWidth > 220)
-            m_fixedTabWidth = 220;
+        if (m_fixedTabSize > 220)
+            m_fixedTabSize = 220;
 
         m_tabCtrlHeight = tabCtrlSize.y;
     }
     else
     {
-        m_fixedTabWidth = 100;
+        m_fixedTabSize = 20;
+
+        int tot_height = (int)tabCtrlSize.y - GetIndentSize() - 4;
 
-        //Below is only necessary for left/right notebooks where the tabs themselves run upwards (instead of left to right) - we don't support this currently so commenting it out.
-        int totHeight = (int)tabCtrlSize.y - GetIndentSize() - 4;
         if (m_flags & wxAUI_NB_CLOSE_BUTTON)
-            totHeight -= m_activeCloseBmp.GetHeight();
+            tot_height -= m_activeCloseBmp.GetHeight();
         if (m_flags & wxAUI_NB_WINDOWLIST_BUTTON)
-            totHeight -= m_activeWindowListBmp.GetHeight();
+            tot_height -= m_activeWindowListBmp.GetHeight();
 
         if (tabCount > 0)
         {
-            m_fixedTabWidth = totHeight/(int)tabCount;
+            m_fixedTabSize = tot_height/(int)tabCount;
         }
-        if (m_fixedTabWidth < 20)
-           m_fixedTabWidth = 20;
-        if (m_fixedTabWidth > totHeight/2)
-           m_fixedTabWidth = totHeight/2;
 
-        if (m_fixedTabWidth > 60)
-            m_fixedTabWidth = 60;
+
+        if (m_fixedTabSize < 20)
+            m_fixedTabSize = 20;
+
+        if (m_fixedTabSize > tot_height/2)
+            m_fixedTabSize = tot_height/2;
+
+        if (m_fixedTabSize > 60)
+            m_fixedTabSize = 60;
 
         m_tabCtrlWidth = tabCtrlSize.x;
     }
@@ -761,7 +764,7 @@ wxSize wxAuiGenericTabArt::GetTabSize(wxDC& dc, wxWindow* WXUNUSED(wnd), const w
 
     // if the close button is showing or the tab-position is left or right,
     //  add space for it
-    if ((closeButtonState != wxAUI_BUTTON_STATE_HIDDEN) || (!IsHorizontal() && !(m_flags & wxAUI_NB_CLOSE_BUTTON)))
+    if ((closeButtonState != wxAUI_BUTTON_STATE_HIDDEN) || (!IsHorizontal() && !HasFlag(wxAUI_NB_CLOSE_BUTTON)))
      {
          tabWidth += m_activeCloseBmp.GetWidth();
          tabWidth += 3;
@@ -782,17 +785,17 @@ wxSize wxAuiGenericTabArt::GetTabSize(wxDC& dc, wxWindow* WXUNUSED(wnd), const w
 
     if (IsHorizontal())
     {
-        if (m_flags & wxAUI_NB_TAB_FIXED_WIDTH)
+        if (HasFlag(wxAUI_NB_TAB_FIXED_WIDTH))
         {
-            tabWidth = m_fixedTabWidth;
+            tabWidth = m_fixedTabSize;
         }
         *extent = tabWidth;
     }
     else
     {
-        if (m_flags & wxAUI_MGR_NB_TAB_FIXED_WIDTH)
+        if (HasFlag(wxAUI_NB_TAB_FIXED_HEIGHT))
         {
-            tabWidth = m_fixedTabWidth;
+            tabHeight = m_fixedTabSize;
         }
         *extent = tabHeight;
     }
@@ -1013,7 +1016,7 @@ wxAuiSimpleTabArt::wxAuiSimpleTabArt()
     m_measuringFont = m_selectedFont;
 
     m_flags = 0;
-    m_fixedTabWidth = 100;
+    m_fixedTabSize = 20;
 
     wxColour baseColour = wxSystemSettings::GetColour(wxSYS_COLOUR_3DFACE);
 
@@ -1065,57 +1068,55 @@ void wxAuiSimpleTabArt::SetSizingInfo(const wxSize& tabCtrlSize, size_t tabCount
 {
     if (IsHorizontal())
     {
-        m_fixedTabWidth = 100;
+        m_fixedTabSize = 100;
 
-        int totWidth = (int)tabCtrlSize.x - GetIndentSize() - 4;
+        int tot_width = (int)tabCtrlSize.x - GetIndentSize() - 4;
 
         if (m_flags & wxAUI_NB_CLOSE_BUTTON)
-            totWidth -= m_activeCloseBmp.GetWidth();
+            tot_width -= m_activeCloseBmp.GetWidth();
         if (m_flags & wxAUI_NB_WINDOWLIST_BUTTON)
-            totWidth -= m_activeWindowListBmp.GetWidth();
+            tot_width -= m_activeWindowListBmp.GetWidth();
 
         if (tabCount > 0)
         {
-            m_fixedTabWidth = totWidth/(int)tabCount;
+                m_fixedTabSize = tot_width/(int)tabCount;
         }
 
 
-        if (m_fixedTabWidth < 100)
-            m_fixedTabWidth = 100;
+        if (m_fixedTabSize < 100)
+            m_fixedTabSize = 100;
 
-        if (m_fixedTabWidth > totWidth/2)
-            m_fixedTabWidth = totWidth/2;
+        if (m_fixedTabSize > tot_width/2)
+            m_fixedTabSize = tot_width/2;
 
-        if (m_fixedTabWidth > 220)
-            m_fixedTabWidth = 220;
+        if (m_fixedTabSize > 220)
+            m_fixedTabSize = 220;
     }
     else
     {
-        m_fixedTabWidth = 100;
+        m_fixedTabSize = 20;
+
+        int tot_height = (int)tabCtrlSize.y - GetIndentSize() - 4;
 
-        //Below is only necessary for left/right notebooks where the tabs themselves run upwards (instead of left to right) - we don't support this currently so commenting it out.
-        #if 0
-        int totHeight = (int)tabCtrlSize.y - GetIndentSize() - 4;
         if (m_flags & wxAUI_NB_CLOSE_BUTTON)
-            totHeight -= m_activeCloseBmp.GetHeight();
+            tot_height -= m_activeCloseBmp.GetHeight();
         if (m_flags & wxAUI_NB_WINDOWLIST_BUTTON)
-            totHeight -= m_activeWindowListBmp.GetHeight();
+            tot_height -= m_activeWindowListBmp.GetHeight();
 
         if (tabCount > 0)
         {
-            m_fixedTabWidth = totHeight/(int)tabCount;
+            m_fixedTabSize = tot_height/(int)tabCount;
         }
 
 
-        if (m_fixedTabWidth < 20)
-            m_fixedTabWidth = 20;
+        if (m_fixedTabSize < 20)
+            m_fixedTabSize = 20;
 
-        if (m_fixedTabWidth > totHeight/2)
-            m_fixedTabWidth = totHeight/2;
+        if (m_fixedTabSize > tot_height/2)
+            m_fixedTabSize = tot_height/2;
 
-        if (m_fixedTabWidth > 60)
-            m_fixedTabWidth = 60;
-        #endif
+        if (m_fixedTabSize > 60)
+            m_fixedTabSize = 60;
     }
 }
 
@@ -1399,22 +1400,17 @@ wxSize wxAuiSimpleTabArt::GetTabSize(wxDC& dc, wxWindow* WXUNUSED(wnd), const wx
 
     if (IsHorizontal())
     {
-        if (m_flags & wxAUI_MGR_NB_TAB_FIXED_WIDTH)
+        if (HasFlag(wxAUI_MGR_NB_TAB_FIXED_WIDTH))
         {
-            tabWidth = m_fixedTabWidth;
+            tabWidth = m_fixedTabSize;
         }
         *extent = tabWidth - (tabHeight/2) - 1;
     }
     else
     {
-        if (m_flags & wxAUI_MGR_NB_TAB_FIXED_WIDTH)
-        {
-             tabWidth = m_fixedTabWidth;
-        }
-        else
-        {
-            tabWidth += 16;
-        }
+        if (HasFlag(wxAUI_NB_TAB_FIXED_HEIGHT))
+             tabWidth = m_fixedTabSize;
+        tabWidth += 16;
         *extent = tabHeight + 2;
     }
 
