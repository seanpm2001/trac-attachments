diff -bru wxWidgets.orig/include/wx/gtk/menu.h wxWidgets/include/wx/gtk/menu.h
--- wxWidgets.orig/include/wx/gtk/menu.h	2012-01-14 17:44:58.000000000 -0800
+++ wxWidgets/include/wx/gtk/menu.h	2012-01-14 01:04:40.000000000 -0800
@@ -33,6 +33,7 @@
     virtual wxMenuItem* FindItem( int id, wxMenu **menu = NULL ) const;
 
     virtual void EnableTop( size_t pos, bool flag );
+    virtual bool IsEnabledTop(size_t pos) const;
     virtual void SetMenuLabel( size_t pos, const wxString& label );
     virtual wxString GetMenuLabel( size_t pos ) const;
 
diff -bru wxWidgets.orig/include/wx/msw/menu.h wxWidgets/include/wx/msw/menu.h
--- wxWidgets.orig/include/wx/msw/menu.h	2012-01-13 21:18:49.000000000 -0800
+++ wxWidgets/include/wx/msw/menu.h	2012-01-14 17:32:49.000000000 -0800
@@ -197,6 +197,7 @@
     virtual wxMenu *Remove(size_t pos);
 
     virtual void EnableTop( size_t pos, bool flag );
+    virtual bool IsEnabledTop(size_t pos) const;
     virtual void SetMenuLabel( size_t pos, const wxString& label );
     virtual wxString GetMenuLabel( size_t pos ) const;
 
diff -bru wxWidgets.orig/interface/wx/menu.h wxWidgets/interface/wx/menu.h
--- wxWidgets.orig/interface/wx/menu.h	2012-01-14 19:18:26.000000000 -0800
+++ wxWidgets/interface/wx/menu.h	2012-01-14 19:19:28.000000000 -0800
@@ -108,6 +108,18 @@
     void Enable(int id, bool enable);
 
     /**
+        Returns TRUE if the menu is enabled.
+
+        @param pos
+            The menu position (0-based)
+
+        @remarks Implemented under MSW, GTK and Universal
+
+        @since 2.9.4
+    */
+    bool IsEnabledTop(size_t pos) const;
+
+    /**
         Enables or disables a whole menu.
 
         @param pos
diff -bru wxWidgets.orig/samples/menu/menu.cpp wxWidgets/samples/menu/menu.cpp
--- wxWidgets.orig/samples/menu/menu.cpp	2012-01-13 21:19:24.000000000 -0800
+++ wxWidgets/samples/menu/menu.cpp	2012-01-14 18:00:10.000000000 -0800
@@ -741,6 +741,7 @@
     size_t count = mbar->GetMenuCount();
 
     mbar->EnableTop(count - 1, event.IsChecked());
+    bool isEnabled = mbar->IsEnabledTop( count - 1 );
 }
 
 void MyFrame::OnGetLabelMenu(wxCommandEvent& WXUNUSED(event))
diff -bru wxWidgets.orig/src/gtk/menu.cpp wxWidgets/src/gtk/menu.cpp
--- wxWidgets.orig/src/gtk/menu.cpp	2012-01-14 17:43:29.000000000 -0800
+++ wxWidgets/src/gtk/menu.cpp	2012-01-14 01:10:14.000000000 -0800
@@ -416,6 +416,20 @@
         gtk_widget_set_sensitive( menu->m_owner, flag );
 }
 
+bool wxMenuBar::IsEnabledTop(size_t pos) const
+{
+    wxMenuList::compatibility_iterator node = m_menus.Item( pos );
+    wxCHECK_MSG( node, wxT( "invalid" ), wxT( "invalid index in IsEnabledTop" ) );
+    wxMenu *menu = node->GetData();
+    if( menu->m_owner )
+    {
+        if( !gtk_check_version( 2, 18, 0 ) )
+            return gtk_widget_is_sensitive( menu->m_owner );
+        else
+            return GTK_WIDGET_IS_SENSITIVE( menu->m_owner );
+    }
+}
+
 wxString wxMenuBar::GetMenuLabel( size_t pos ) const
 {
     wxMenuList::compatibility_iterator node = m_menus.Item( pos );
diff -bru wxWidgets.orig/src/msw/menu.cpp wxWidgets/src/msw/menu.cpp
--- wxWidgets.orig/src/msw/menu.cpp	2012-01-13 21:18:04.000000000 -0800
+++ wxWidgets/src/msw/menu.cpp	2012-01-14 17:31:57.000000000 -0800
@@ -1221,6 +1221,17 @@
     Refresh();
 }
 
+bool wxMenuBar::IsEnabledTop(size_t pos) const
+{
+    wxCHECK_MSG( pos < GetMenuCount(), wxEmptyString, wxT( "invalid menu index" ) );
+	MENUITEMINFO info;
+    wxZeroMemory( info );
+    info.cbSize = sizeof( info );
+    info.fMask = MIIM_STATE;
+    GetMenuItemInfo( (HMENU) m_hMenu, pos, TRUE, &info );
+    return !info.fState;
+}
+
 void wxMenuBar::SetMenuLabel(size_t pos, const wxString& label)
 {
     wxCHECK_RET( pos < GetMenuCount(), wxT("invalid menu index") );
diff -bru wxWidgets.orig/tests/menu/menu.cpp wxWidgets/tests/menu/menu.cpp
--- wxWidgets.orig/tests/menu/menu.cpp	2012-01-13 21:18:37.000000000 -0800
+++ wxWidgets/tests/menu/menu.cpp	2012-01-14 18:14:18.000000000 -0800
@@ -82,6 +82,7 @@
     CPPUNIT_TEST_SUITE( MenuTestCase );
         CPPUNIT_TEST( FindInMenubar );
         CPPUNIT_TEST( FindInMenu );
+        CPPUNIT_TEST(MenuBarEnable);
         CPPUNIT_TEST( Count );
         CPPUNIT_TEST( Labels );
         CPPUNIT_TEST( RadioItems );
@@ -92,6 +93,7 @@
 
     void FindInMenubar();
     void FindInMenu();
+    void MenuBarEnable();
     void Count();
     void Labels();
     void RadioItems();
@@ -258,6 +260,15 @@
     }
 }
 
+void MenuTestCase::MenuBarEnable()
+{
+    wxMenuBar* bar = m_frame->GetMenuBar();
+    bar->Enable( 0, false );
+    CPPUNIT_ASSERT( false, bar->IsEnabledTop( 0 ) );
+    bar->Enable( 0, true );
+    CPPUNIT_ASSERT( true, bar->IsEnabledTop( 0 ) );
+}
+
 void MenuTestCase::Count()
 {
     wxMenuBar* bar = m_frame->GetMenuBar();
