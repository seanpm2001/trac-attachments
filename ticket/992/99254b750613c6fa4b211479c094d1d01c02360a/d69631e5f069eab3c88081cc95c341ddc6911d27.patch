diff -uNrBb -x setup.h wxWidgets-trunk\include/wx/msw/mdi.h wxWidgets-work\include/wx/msw/mdi.h
--- wxWidgets-trunk\include/wx/msw/mdi.h	2013-12-29
+++ wxWidgets-work\include/wx/msw/mdi.h	2014-02-18
@@ -225,7 +225,6 @@
     void Init();
 
 private:
-    bool m_needsInitialShow; // Show must be called in idle time after Creation
     bool m_needsResize; // flag which tells us to artificially resize the frame
 
     DECLARE_EVENT_TABLE()
diff -uNrb wxWidgets-trunk\src/msw/mdi.cpp wxWidgets-work\src/msw/mdi.cpp
--- wxWidgets-trunk\src/msw/mdi.cpp	2013-12-29
+++ wxWidgets-work\src/msw/mdi.cpp	2014-02-18
@@ -757,7 +757,6 @@
 void wxMDIChildFrame::Init()
 {
     m_needsResize = true;
-    m_needsInitialShow = true;
 }
 
 bool wxMDIChildFrame::Create(wxMDIParentFrame *parent,
@@ -881,8 +880,6 @@
 
 bool wxMDIChildFrame::Show(bool show)
 {
-    m_needsInitialShow = false;
-
     if (!wxFrame::Show(show))
         return false;
 
@@ -1015,9 +1012,25 @@
     wxMDIParentFrame * const parent = GetMDIParent();
     if ( parent && parent->GetClientWindow() )
     {
+        if( IsShown() )
+        {
+            ::SendMessage(GetWinHwnd(parent->GetClientWindow()),
+                      maximize ? WM_MDIMAXIMIZE : WM_MDIRESTORE,
+                      (WPARAM)GetHwnd(), 0);
+        }
+        else
+        {
+            // Turn off redrawing in the MDI client window.
+            ::SendMessage(GetWinHwnd(parent->GetClientWindow()), WM_SETREDRAW, FALSE, 0L);
+            // Maximize/restore child window.
         ::SendMessage(GetWinHwnd(parent->GetClientWindow()),
                       maximize ? WM_MDIMAXIMIZE : WM_MDIRESTORE,
                       (WPARAM)GetHwnd(), 0);
+            // Hide child window back on.
+            ::ShowWindow(GetHwnd(), SW_HIDE);
+            // Turn redrawing in the MDI client back on.
+            ::SendMessage(GetWinHwnd(parent->GetClientWindow()), WM_SETREDRAW, TRUE, 0L);
+        }
     }
 }
 
@@ -1395,16 +1408,6 @@
 
 void wxMDIChildFrame::OnIdle(wxIdleEvent& event)
 {
-    // wxMSW prior to 2.5.3 created MDI child frames as visible, which resulted
-    // in flicker e.g. when the frame contained controls with non-trivial
-    // layout. Since 2.5.3, the frame is created hidden as all other top level
-    // windows. In order to maintain backward compatibility, the frame is shown
-    // in OnIdle, unless Show(false) was called by the programmer before.
-    if ( m_needsInitialShow )
-    {
-        Show(true);
-    }
-
     // MDI child frames get their WM_SIZE when they're constructed but at this
     // moment they don't have any children yet so all child windows will be
     // positioned incorrectly when they are added later - to fix this, we
