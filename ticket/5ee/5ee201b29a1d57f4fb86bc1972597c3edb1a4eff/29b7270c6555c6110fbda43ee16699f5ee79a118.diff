Index: docs/latex/wx/scrolevt.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/docs/latex/wx/scrolevt.tex,v
retrieving revision 1.9
diff -b -u -2 -r1.9 scrolevt.tex
--- docs/latex/wx/scrolevt.tex	2004/05/04 08:25:47	1.9
+++ docs/latex/wx/scrolevt.tex	2004/06/03 05:01:30
@@ -27,4 +27,8 @@
 horizontal and vertical scroll events are processed using the same event handler.
 
+When sent by a \helpref{wxSlider}{wxslider}, a scroll event may contain the value
+label string. This may be read with \helpref{GetString}{wxcommandeventgetstring}
+and changed with \helpref{SetString}{wxcommandeventsetstring}.
+
 \wxheading{See also}
 
Index: docs/latex/wx/slider.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/docs/latex/wx/slider.tex,v
retrieving revision 1.6
diff -b -u -2 -r1.6 slider.tex
--- docs/latex/wx/slider.tex	2002/07/09 23:34:31	1.6
+++ docs/latex/wx/slider.tex	2004/06/03 05:01:32
@@ -9,4 +9,11 @@
 Slider events are handled in the same way as a scrollbar.
 
+There are several ways to customize the slider's labels. First, you can use
+SetMaxLabel(), SetMinLabel(), and SetValueLabel(). Second, you can change
+the value label in the wxScrollEvent object passed to the event handler 
+(call wxScrollEvent::SetString(wxString)).  Finally, you can define a virtual
+subclass of \helpref{wxSliderLabelFormatter}{wxsliderlabelformatter} and 
+override methods to convert from integer value to label string.
+
 \wxheading{Derived from}
 
@@ -35,5 +42,5 @@
 \end{twocollist}
 
-See also \helpref{window styles overview}{windowstyles}.
+See also \helpref{window styles overview}{windowstyles},
 
 \input scrolevt.inc
@@ -41,5 +48,7 @@
 \wxheading{See also}
 
-\helpref{Event handling overview}{eventhandlingoverview}, \helpref{wxScrollBar}{wxscrollbar}
+\helpref{Event handling overview}{eventhandlingoverview},
+\helpref{wxScrollBar}{wxscrollbar},
+\helpref{wxSliderLabelFormatter}{wxsliderlabelformatter}.
 
 \latexignore{\rtfignore{\wxheading{Members}}}
@@ -357,3 +366,117 @@
 
 \helpref{wxSlider::GetValue}{wxslidergetvalue}
+
+
+
+\membersection{wxSlider::SetValueLabel}\label{wxslidersetvaluelabel}
+
+\func{void}{SetValueLabel}{\param{wxString}{ label}}
+
+Set the value label, overriding existing label, if the slider has labels.
+
+\wxheading{Parameters}
+
+\docparam{label}{The new label text}
+
+
+
+\membersection{wxSlider::SetMaxLabel}\label{wxslidersetmaxlabel}
+
+\func{void}{SetMaxLabel}{\param{wxString}{ label}}
+
+Set the label for the slider maximum, overriding existing label, if the slider has labels.
+
+\wxheading{Parameters}
+
+\docparam{label}{The new label text}
+
+
+
+\membersection{wxSlider::SetMinLabel}\label{wxslidersetminlabel}
+
+\func{void}{SetMaxLabel}{\param{wxString}{ label}}
+
+Set the label for the slider maximum, overriding existing label, if the slider has labels.
+
+\wxheading{Parameters}
+
+\docparam{label}{The new label text}
+
+
+
+\membersection{wxSlider::SetLabelFormatter}\label{wxslidersetlabelformatter}
+
+\func{void}{SetLabelFormatter}{\param{wxSliderLabelFormatter*}{ formatter}}
+
+Set the \helpref{wxSliderLabelFormatter}{wxsliderlabelformatter} object used
+to convert integer value to label text strings. If a label formatter already
+exists, it is replaced and destroyed. Any existing label formatter object is
+also destroyed when this wxSlider is destroyed.  You can set a NULL label
+formatter to revert to default labels.
+
+\wxheading{Parameters}
+
+\docparam{formatter}{The new formatter object}
+
+\wxheading{See also}
+
+\helpref{wxSliderLabelFormatter}{wxsliderlabelformatter}
+
+\helpref{wxScrollEvent}{wxscrollevent} The string in a wxScrollEvent may be changed to set a new value label as well.
+
+
+
+\membersection{wxSlider::GetLabelFormatter}\label{wxslidergetlabelformatter}
+
+\func{wxSliderLabelFormatter*}{GetLabelFormatter}{\param{void}{}}
+
+Returns the label formatter, if set, otherwise 0.
+
+
+
+\section{\class{wxSliderLabelFormatter}}\label{wxsliderlabelformatter}
+
+Use a class derived from wxSliderLabelFormatter to customize the labels
+of a \helpref{wxSlider}{wxslider}. It contains three virtual methods
+that format the Max, Min and Value labels for the slider given those three
+values, which you may override in your subclass.
+
+\wxheading{Include files}
+
+<wx/slider.h>
+
+\wxheading{See also}
+
+\helpref{wxSlider}{wxslider}
+
+\latexignore{\rtfignore{\wxheading{Members}}}
+
+\membersection{wxSliderLabelFormatter::FormatMaxLabel}\label{wxsliderlabelformatterformatmaxlabel}
+\func{wxString}{FormatMaxLabel}{\param{int}{ value}}
+
+Return max label for slider.
+
+\wxheading{Parameters}
+
+\docparam{value}{Maximum value}
+
+
+\membersection{wxSliderLabelFormatter::FormatMinLabel}\label{wxsliderlabelformatterformatminlabel}
+\func{wxString}{FormatMinLabel}{\param{int}{ value}}
+
+Return min label for slider.
+
+\wxheading{Parameters}
+
+\docparam{value}{Minimum value}
+
+
+\membersection{wxSliderLabelFormatter::FormatValueLabel}\label{wxsliderlabelformatterformatvaluelabel}
+\func{wxString}{FormatValueLabel}{\param{int}{ value}}
+
+Return value label for slider.
+
+\wxheading{Parameters}
+
+\docparam{value}{Value}
 
Index: include/wx/slider.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/include/wx/slider.h,v
retrieving revision 1.17
diff -b -u -2 -r1.17 slider.h
--- include/wx/slider.h	2004/05/23 20:50:24	1.17
+++ include/wx/slider.h	2004/06/03 05:01:35
@@ -25,4 +25,22 @@
 WXDLLEXPORT_DATA(extern const wxChar*) wxSliderNameStr;
 
+
+// -----------------------------------------
+// wxSliderLabelFormatter: used by all ports
+// -----------------------------------------
+
+class WXDLLEXPORT wxSliderLabelFormatter {
+public:
+    virtual wxString FormatMaxLabel(int value) {
+        return wxString::Format(wxT("%d"), value);
+    }
+    virtual wxString FormatMinLabel(int value) {
+        return wxString::Format(wxT("%d"), value);
+    }
+    virtual wxString FormatValueLabel(int value) {
+        return wxString::Format(wxT("%d"), value);
+    }
+};
+
 // ----------------------------------------------------------------------------
 // wxSliderBase: define wxSlider interface
@@ -43,5 +61,5 @@
              const wxString& name = wxSliderNameStr);
     */
-    wxSliderBase() { }
+    wxSliderBase() : labelFormatter(0) { }
 
     // get/set the current slider value (should be in range)
@@ -88,4 +106,49 @@
 private:
     DECLARE_NO_COPY_CLASS(wxSliderBase)
+
+public:
+    virtual void SetMaxLabel(const wxString& label) = 0;
+    virtual void SetMinLabel(const wxString& label) = 0;
+    virtual void SetValueLabel(const wxString& label) = 0;
+
+private:
+    // NB: the derived class must delete this in its destructor!
+    wxSliderLabelFormatter* labelFormatter;
+
+public:
+    void SetLabelFormatter(wxSliderLabelFormatter* f) {
+        if(labelFormatter)
+            delete labelFormatter;
+        labelFormatter = f;
+    }
+
+    wxSliderLabelFormatter* GetLabelFormatter() {
+        return labelFormatter;
+    }
+
+
+protected:
+    wxString FormatMaxLabel(int value) {
+        if(labelFormatter)
+            return labelFormatter->FormatMaxLabel(value);       
+        else
+            return wxString::Format(wxT("%d"), value);
+    }
+
+    wxString FormatMinLabel(int value) {
+        if(labelFormatter)
+            return labelFormatter->FormatMinLabel(value);       
+        else
+            return wxString::Format(wxT("%d"), value);
+    }
+
+    wxString FormatValueLabel(int value) {
+        if(labelFormatter)
+            return labelFormatter->FormatValueLabel(value);       
+        else
+            return wxString::Format(wxT("%d"), value);
+    }
+
+
 };
 
Index: include/wx/mac/carbon/slider.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/include/wx/mac/carbon/slider.h,v
retrieving revision 1.5
diff -b -u -2 -r1.5 slider.h
--- include/wx/mac/carbon/slider.h	2004/05/23 20:51:03	1.5
+++ include/wx/mac/carbon/slider.h	2004/06/03 05:01:37
@@ -85,6 +85,7 @@
                                 int incW = -1, int incH = -1 );
  
+ 
    protected:
-     virtual wxSize DoGetBestSize() const;
+     virtual wxSize DoGetBestSize(); //const;
      virtual void   DoSetSize(int x, int y, int w, int h, int sizeFlags);
      virtual void   DoMoveWindow(int x, int y, int w, int h);
@@ -105,4 +106,30 @@
 private :
 DECLARE_EVENT_TABLE()
+
+public:
+
+    /* Change (override) label values, if they exist. */
+    virtual void SetMaxLabel(const wxString& label);
+    virtual void SetMinLabel(const wxString& label);
+    virtual void SetValueLabel(const wxString& label);
+
+private:
+    /* Get dimensions that text labels make on screen */
+    void GetMaxLabelExtent(int* w, int* h);
+    void GetMinLabelExtent(int* w, int* h);
+    void GetValueLabelExtent(int* w, int* h);
+
+    /* Label Formatter (from wxSliderBase, which is *not* a parent class of
+     * this) */
+    wxSliderLabelFormatter* m_labelFormatter;
+
+public:
+    void SetLabelFormatter(wxSliderLabelFormatter* f);
+    wxSliderLabelFormatter* GetLabelFormatter();
+
+protected:
+    wxString FormatMaxLabel(int value);
+    wxString FormatMinLabel(int value);
+    wxString FormatValueLabel(int value);
 };
 
Index: samples/minimal/minimal.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/samples/minimal/minimal.cpp,v
retrieving revision 1.66
diff -b -u -2 -r1.66 minimal.cpp
--- samples/minimal/minimal.cpp	2004/05/25 11:18:01	1.66
+++ samples/minimal/minimal.cpp	2004/06/03 05:01:46
@@ -123,4 +123,10 @@
     MyFrame *frame = new MyFrame(_T("Minimal wxWidgets App"));
 
+
+    wxLocale* locale = new wxLocale(wxLANGUAGE_ENGLISH_US); // sets the locale
+    wxString s;
+    s.Printf(wxT("$%#'.2f"), 123456.0);
+    wxStaticText* text = new wxStaticText(frame, -1, s);
+
     // and show it (the frames, unlike simple controls, are not shown when
     // created initially)
Index: samples/widgets/slider.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/samples/widgets/slider.cpp,v
retrieving revision 1.17
diff -b -u -2 -r1.17 slider.cpp
--- samples/widgets/slider.cpp	2004/05/25 11:19:43	1.17
+++ samples/widgets/slider.cpp	2004/06/03 05:01:52
@@ -69,5 +69,7 @@
     SliderPage_RadioSides,
     SliderPage_BothSides,
-    SliderPage_Slider
+    SliderPage_Slider,
+    SliderPage_AddFormatter,
+    SliderPage_RemoveFormatter
 };
 
@@ -99,4 +101,6 @@
     void OnButtonSetTickFreq(wxCommandEvent& event);
     void OnButtonSetThumbLen(wxCommandEvent& event);
+    void OnButtonAddFormatter(wxCommandEvent& event);
+    void OnButtonRemoveFormatter(wxCommandEvent& event);
 
     void OnCheckOrRadioBox(wxCommandEvent& event);
@@ -171,4 +175,6 @@
     EVT_BUTTON(SliderPage_SetTickFreq, SliderWidgetsPage::OnButtonSetTickFreq)
     EVT_BUTTON(SliderPage_SetThumbLen, SliderWidgetsPage::OnButtonSetThumbLen)
+    EVT_BUTTON(SliderPage_AddFormatter, SliderWidgetsPage::OnButtonAddFormatter)
+    EVT_BUTTON(SliderPage_RemoveFormatter, SliderWidgetsPage::OnButtonRemoveFormatter)
 
     EVT_UPDATE_UI(SliderPage_SetValue, SliderWidgetsPage::OnUpdateUIValueButton)
@@ -289,5 +295,5 @@
 
     sizerRow = CreateSizerWithTextAndButton(SliderPage_SetThumbLen,
-                                            _T("Thumb &lenght"),
+                                            _T("Thumb &length"),
                                             SliderPage_ThumbLenText,
                                             &m_textThumbLen);
@@ -295,4 +301,9 @@
     sizerMiddle->Add(sizerRow, 0, wxALL | wxGROW, 5);
 
+    sizerMiddle->Add( new wxButton(this, SliderPage_AddFormatter, 
+        _T("Add Label Formatter")), 0, wxALL | wxGROW, 5);
+    sizerMiddle->Add( new wxButton(this, SliderPage_RemoveFormatter, 
+        _T("Remove Label Formatter")), 0, wxALL | wxGROW, 5);
+
     // right pane
     wxSizer *sizerRight = new wxBoxSizer(wxHORIZONTAL);
@@ -401,5 +412,11 @@
                             wxDefaultPosition, wxDefaultSize,
                             flags);
+    if(m_chkLabels->GetValue()) {
+        m_slider->SetMaxLabel(wxString::Format(wxT("Max=%d/%.2f"), m_max, m_max/100.0));
+        m_slider->SetMinLabel(wxString::Format(wxT("Min=%d/%.2f"), m_min, m_min/100.0));
+        m_slider->SetValueLabel(wxString::Format(wxT("Value=%d/%.2f"), val, val/100.0));
+    }
 
+
     if ( isVert )
     {
@@ -468,4 +485,5 @@
 }
 
+
 void SliderWidgetsPage::OnButtonSetMinAndMax(wxCommandEvent& WXUNUSED(event))
 {
@@ -485,4 +503,6 @@
 
     m_slider->SetRange(minNew, maxNew);
+    m_slider->SetMaxLabel(wxString::Format("Max=%ld/%.2f", maxNew, maxNew/100.0));
+    m_slider->SetMinLabel(wxString::Format("Min=%ld/%.2f", minNew, minNew/100.0));
 }
 
@@ -500,4 +520,31 @@
 }
 
+
+class TestSliderLabelFormatter : public virtual wxSliderLabelFormatter {
+public:
+    virtual wxString FormatMaxLabel(int value) {
+        return wxString::Format(wxT("0x%X"), value);
+    }
+    virtual wxString FormatMinLabel(int value) {
+        return wxString::Format(wxT("0x%X"), value);
+    }
+    virtual wxString FormatValueLabel(int value) {
+        return wxString::Format(wxT("0x%X"), value);
+    }
+};
+
+void SliderWidgetsPage::OnButtonAddFormatter(wxCommandEvent& event) {
+    wxLogMessage(wxT("Setting label formatter..."));
+    m_slider->SetLabelFormatter(new TestSliderLabelFormatter());
+    // wxSlider will delete the formatter object when it no longer wants it.
+    m_slider->SetRange(m_slider->GetMin(), m_slider->GetMax());
+    m_slider->SetValue(m_slider->GetValue());
+}
+
+void SliderWidgetsPage::OnButtonRemoveFormatter(wxCommandEvent& event) {
+    wxLogMessage(wxT("Clearing label formatter..."));
+    m_slider->SetLabelFormatter(0);
+}
+
 void SliderWidgetsPage::OnUpdateUIValueButton(wxUpdateUIEvent& event)
 {
@@ -601,4 +648,8 @@
                  eventNames[index],
                  event.GetPosition());
+
+    if( !(m_slider->GetLabelFormatter()))
+        event.SetString(wxString::Format(wxT("Value=%d/%.2f"), 
+            event.GetPosition(), (event.GetPosition()/100.0) ));
 }
 
Index: src/mac/carbon/slider.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/src/mac/carbon/slider.cpp,v
retrieving revision 1.25
diff -b -u -2 -r1.25 slider.cpp
--- src/mac/carbon/slider.cpp	2004/05/23 20:52:32	1.25
+++ src/mac/carbon/slider.cpp	2004/06/03 05:01:58
@@ -67,4 +67,5 @@
     m_macValueStatic = NULL ;
     
+    m_labelFormatter = 0;
     
     m_lineSize = 1;
@@ -115,4 +116,5 @@
     delete m_macMaximumStatic ;
     delete m_macValueStatic ;
+    if(m_labelFormatter) delete m_labelFormatter;
 }
 
@@ -124,8 +126,8 @@
 void wxSlider::SetValue(int value)
 {
-    wxString valuestring ;
-    valuestring.Printf( wxT("%d") , value ) ;    
+//    wxString valuestring ;
+//    valuestring.Printf( wxT("%d") , value ) ;    
     if ( m_macValueStatic )
-        m_macValueStatic->SetLabel( valuestring ) ;
+        m_macValueStatic->SetLabel( FormatValueLabel(value) ) ;
     SetControl32BitValue( (ControlRef) m_macControl , value ) ;
 }
@@ -133,5 +135,5 @@
 void wxSlider::SetRange(int minValue, int maxValue)
 {
-    wxString value;
+//    wxString value;
     
     m_rangeMin = minValue;
@@ -142,14 +144,16 @@
     
     if(m_macMinimumStatic) {
-        value.Printf(wxT("%d"), m_rangeMin);
-        m_macMinimumStatic->SetLabel(value);
+        m_macMinimumStatic->SetLabel(FormatMinLabel(m_rangeMin));
     }
     if(m_macMaximumStatic) {
-        value.Printf(wxT("%d"), m_rangeMax);
-        m_macMaximumStatic->SetLabel(value);
+        m_macMaximumStatic->SetLabel(FormatMaxLabel(m_rangeMax));
     }
+    if(GetValue() < m_rangeMin)
     SetValue(m_rangeMin);
+    else if(GetValue() > m_rangeMax)
+        SetValue(m_rangeMax);
 }
 
+
 // For trackbars only
 void wxSlider::SetTickFreq(int n, int pos)
@@ -235,20 +239,25 @@
     SInt16 value = ::GetControl32BitValue( (ControlRef) m_macControl ) ;
     
-    SetValue( value ) ;        
+    //SetValue( value ) ; // unneeded: label is set after processing command event.       
+    wxString valueLabel = FormatValueLabel(value);
     
     wxEventType scrollEvent = wxEVT_NULL ;
-    
     scrollEvent = wxEVT_SCROLL_THUMBTRACK;
-    
     wxScrollEvent event(scrollEvent, m_windowId);
     event.SetPosition(value);
     event.SetEventObject( this );
+    event.SetString(valueLabel);
     GetEventHandler()->ProcessEvent(event);
+    valueLabel = event.GetString();
     
+    
     wxCommandEvent cevent( wxEVT_COMMAND_SLIDER_UPDATED, m_windowId );
     cevent.SetInt( value );
     cevent.SetEventObject( this );
-    
+    cevent.SetString(valueLabel);
     GetEventHandler()->ProcessEvent( cevent );
+    valueLabel = cevent.GetString();
+
+    SetValueLabel(valueLabel);
 }
 
@@ -257,20 +266,25 @@
     SInt16 value = ::GetControl32BitValue( (ControlRef) m_macControl ) ;
     
-    SetValue( value ) ;        
+    //SetValue( value ) ;  // unneeded; label is set below
+    wxString valueLabel = FormatValueLabel(value);
     
     wxEventType scrollEvent = wxEVT_NULL ;
-    
     scrollEvent = wxEVT_SCROLL_THUMBRELEASE;
-    
     wxScrollEvent event(scrollEvent, m_windowId);
     event.SetPosition(value);
     event.SetEventObject( this );
+    event.SetString(valueLabel);
     GetEventHandler()->ProcessEvent(event);
+    valueLabel = event.GetString();
     
     wxCommandEvent cevent( wxEVT_COMMAND_SLIDER_UPDATED, m_windowId );
     cevent.SetInt( value );
     cevent.SetEventObject( this );
-    
+    cevent.SetString(valueLabel);
     GetEventHandler()->ProcessEvent( cevent );
+    valueLabel = cevent.GetString();
+
+    SetValueLabel(valueLabel);
+
     return noErr ;
 }
@@ -293,19 +307,40 @@
 }
 
-wxSize wxSlider::DoGetBestSize() const
+void wxSlider::GetMaxLabelExtent(int* w, int* h) {
+    if(m_macMaximumStatic) 
+        GetTextExtent(m_macMaximumStatic->GetLabel(), w, h);
+    else 
+        GetTextExtent(FormatMinLabel(m_rangeMin), w, h);
+}
+
+void wxSlider::GetMinLabelExtent(int* w, int* h) {
+    if(m_macMinimumStatic)
+        GetTextExtent(m_macMinimumStatic->GetLabel(), w, h);
+    else 
+        GetTextExtent(FormatMaxLabel(m_rangeMax), w, h);
+}
+
+void wxSlider::GetValueLabelExtent(int* w, int* h) {
+    if(m_macValueStatic)
+        GetTextExtent(m_macValueStatic->GetLabel(), w, h);
+    else
+        GetTextExtent(FormatValueLabel(GetValue()), w, h);
+}
+
+wxSize wxSlider::DoGetBestSize() //const// can't be const because virtual
+                                 // methods FormatXXXLabel are called on 'this'.
 {
     wxSize size;
     int textwidth, textheight;
+    textwidth = textheight = 0;
     
     if(GetWindowStyle() & wxSL_LABELS)
     {
-        wxString text;
         int ht, wd;
         
         // Get maximum text label width and height
-        text.Printf(wxT("%d"), m_rangeMin);
-        GetTextExtent(text, &textwidth, &textheight);
-        text.Printf(wxT("%d"), m_rangeMax);
-        GetTextExtent(text, &wd, &ht);
+        GetMaxLabelExtent(&textwidth, &textheight);
+        GetMinLabelExtent(&wd, &ht);
+
         if(ht > textheight) {
             textheight = ht;
@@ -314,4 +349,9 @@
             textwidth = wd;
         }
+
+        // what about value label?
+        GetValueLabelExtent(&wd, &ht);
+        if(ht > textheight) textheight = ht;
+        if(wd > textwidth) textwidth = wd;
     }
     
@@ -348,5 +388,5 @@
 {
     int  xborder, yborder;
-    int  minValWidth, maxValWidth, textwidth, textheight;
+    int  minValWidth, maxValWidth, valueWidth, textwidth, textheight;
     int  sliderBreadth;
     
@@ -355,12 +395,8 @@
     if (GetWindowStyle() & wxSL_LABELS)
     {
-        wxString text;
-        int ht;
-        
-        // Get maximum text label width and height
-        text.Printf(wxT("%d"), m_rangeMin);
-        GetTextExtent(text, &minValWidth, &textheight);
-        text.Printf(wxT("%d"), m_rangeMax);
-        GetTextExtent(text, &maxValWidth, &ht);
+        int ht, foo;
+        GetMinLabelExtent(&minValWidth, &textheight);
+        GetMaxLabelExtent(&maxValWidth, &ht);
+        GetValueLabelExtent(&valueWidth, &foo);
         if(ht > textheight) {
             textheight = ht;
@@ -388,5 +424,5 @@
                 m_macMaximumStatic->Move(x + sliderBreadth + wxSLIDER_BORDERTEXT, y + 0);
             if ( m_macValueStatic )
-                m_macValueStatic->Move(0, y + h - textheight);
+                m_macValueStatic->Move(x - (valueWidth/2) , y + h - textheight);
             h = h - yborder ;
         }
@@ -411,2 +447,50 @@
     wxControl::DoMoveWindow(x,y,width,height) ;
 }
+
+void wxSlider::SetMaxLabel(const wxString& label) {
+    if(m_macMaximumStatic)
+        m_macMaximumStatic->SetLabel(label);
+}
+
+void wxSlider::SetMinLabel(const wxString& label) {
+    if(m_macMinimumStatic)
+        m_macMinimumStatic->SetLabel(label);
+}
+
+void wxSlider::SetValueLabel(const wxString& label) {
+    if(m_macValueStatic)
+        m_macValueStatic->SetLabel(label);
+}
+
+void wxSlider::SetLabelFormatter(wxSliderLabelFormatter* f) {
+    if(m_labelFormatter)
+        delete m_labelFormatter;
+    m_labelFormatter = f;
+}
+
+
+wxSliderLabelFormatter* wxSlider::GetLabelFormatter() {
+    return m_labelFormatter;
+}
+
+wxString wxSlider::FormatMaxLabel(int value) {
+    if(m_labelFormatter)
+        return m_labelFormatter->FormatMaxLabel(value);       
+    else
+        return wxString::Format(wxT("%d"), value);
+}
+
+wxString wxSlider::FormatMinLabel(int value) {
+    if(m_labelFormatter)
+        return m_labelFormatter->FormatMinLabel(value);       
+    else
+        return wxString::Format(wxT("%d"), value);
+}
+
+wxString wxSlider::FormatValueLabel(int value) {
+    if(m_labelFormatter)
+        return m_labelFormatter->FormatValueLabel(value);       
+    else
+        return wxString::Format(wxT("%d"), value);
+}
+

 	  	 
