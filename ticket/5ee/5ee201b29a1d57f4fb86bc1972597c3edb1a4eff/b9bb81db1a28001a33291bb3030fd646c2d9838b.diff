Index: docs/latex/wx/scrolevt.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/docs/latex/wx/scrolevt.tex,v
retrieving revision 1.9
diff -b -u -2 -r1.9 scrolevt.tex
--- docs/latex/wx/scrolevt.tex	2004/05/04 08:25:47	1.9
+++ docs/latex/wx/scrolevt.tex	2004/06/01 14:13:12
@@ -27,4 +27,8 @@
 horizontal and vertical scroll events are processed using the same event handler.
 
+When sent by a \helpref{wxSlider}{wxslider}, a scroll event may contain the value
+label string. This may be read with \helpref{GetString}{wxcommandeventgetstring}
+and changed with \helpref{SetString}{wxcommandeventsetstring}.
+
 \wxheading{See also}
 
Index: docs/latex/wx/slider.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/docs/latex/wx/slider.tex,v
retrieving revision 1.6
diff -b -u -2 -r1.6 slider.tex
--- docs/latex/wx/slider.tex	2002/07/09 23:34:31	1.6
+++ docs/latex/wx/slider.tex	2004/06/01 14:13:14
@@ -358,2 +358,83 @@
 \helpref{wxSlider::GetValue}{wxslidergetvalue}
 
+
+
+\membersection{wxSlider::SetValueLabel}\label{wxslidersetvaluelabel}
+
+\func{void}{SetValueLabel}{\param{wxString}{ label}}
+
+Set the value label, overriding existing label, if the slider has labels.
+
+\wxheading{Parameters}
+
+\docparam{label}{The new label text}
+
+
+
+\membersection{wxSlider::SetMaxLabel}\label{wxslidersetmaxlabel}
+
+\func{void}{SetMaxLabel}{\param{wxString}{ label}}
+
+Set the label for the slider maximum, overriding existing label, if the slider has labels.
+
+\wxheading{Parameters}
+
+\docparam{label}{The new label text}
+
+
+
+\membersection{wxSlider::SetMinLabel}\label{wxslidersetminlabel}
+
+\func{void}{SetMaxLabel}{\param{wxString}{ label}}
+
+Set the label for the slider maximum, overriding existing label, if the slider has labels.
+
+\wxheading{Parameters}
+
+\docparam{label}{The new label text}
+
+
+
+\membersection{wxSlider::FormatValueLabel}\label{wxsliderformatvaluelabel}
+
+\func{virtual wxString}{FormatValueLabel}{\param{int}{ value}}
+
+This is a protected virtual method, which a subclass may override to change
+the default value label text.
+
+\wxheading{Parameters}
+
+\docparam{value}{The slider's value}
+
+\wxheading{See also}
+
+\helpref{wxScrollEvent}{wxscrollevent} The string in a wxScrollEvent may be changed to set a new value label as well.
+
+
+
+\membersection{wxSlider::FormatMaxLabel}\label{wxsliderformatmaxlabel}
+
+\func{virtual wxString}{FormatMaxLabel}{\param{int}{ value}}
+
+This is a protected virtual method, which a subclass may override to change
+the default maximum label text.
+
+\wxheading{Parameters}
+
+\docparam{value}{The slider's maximum}
+
+
+
+\membersection{wxSlider::FormatMinLabel}\label{wxsliderformatminlabel}
+
+\func{virtual wxString}{FormatMinLabel}{\param{int}{ value}}
+
+This is a protected virtual method, which a subclass may override to change
+the default minimum label text.
+
+\wxheading{Parameters}
+
+\docparam{value}{The slider's minimum}
+
+
+
Index: include/wx/slider.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/include/wx/slider.h,v
retrieving revision 1.17
diff -b -u -2 -r1.17 slider.h
--- include/wx/slider.h	2004/05/23 20:50:24	1.17
+++ include/wx/slider.h	2004/06/01 14:13:17
@@ -88,4 +88,39 @@
 private:
     DECLARE_NO_COPY_CLASS(wxSliderBase)
+
+protected:
+    // Do label formatting. By default, these simply print the integer
+    // values into strings, but you may override these to do other conversions/
+    // formats. e.g.: 
+    //
+    // virtual wxString FormatMaxLabel(int value) {
+    //      wxString s; 
+    //      s.Printf(wxT("%.2f meters"), (float)(value / 100)
+    //      return s;
+    // } 
+
+    virtual wxString FormatMaxLabel(int value) {
+        wxString s;
+        s.Printf(wxT("%d"), value);
+        return s;
+    }
+
+    virtual wxString FormatMinLabel(int value) {
+        wxString s;
+        s.Printf(wxT("%d"), value);
+        return s;
+    }
+
+    virtual wxString FormatValueLabel(int value) {
+        wxString s;
+        s.Printf(wxT("%d"), value);
+        return s;
+    }
+
+public:
+    virtual void SetMaxLabel(const wxString& label) = 0;
+    virtual void SetMinLabel(const wxString& label) = 0;
+    virtual void SetValueLabel(const wxString& label) = 0;
+
 };
 
Index: include/wx/mac/carbon/slider.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/include/wx/mac/carbon/slider.h,v
retrieving revision 1.5
diff -b -u -2 -r1.5 slider.h
--- include/wx/mac/carbon/slider.h	2004/05/23 20:51:03	1.5
+++ include/wx/mac/carbon/slider.h	2004/06/01 14:13:19
@@ -85,6 +85,21 @@
                                 int incW = -1, int incH = -1 );
  
+protected:
+    // Set label format strings. By default, these simply print the integer
+    // values into strings, but you may override these to do other conversions/
+    // formats. e.g.: 
+    //
+    // virtual wxString FormatMaxLabel(int value) {
+    //      wxString s; 
+    //      s.Printf(wxT("%.2f meters"), (float)(value / 100)
+    //      return s;
+    // } 
+
+    virtual wxString FormatMaxLabel(int value);
+    virtual wxString FormatMinLabel(int value);
+    virtual wxString FormatValueLabel(int value);
+ 
    protected:
-     virtual wxSize DoGetBestSize() const;
+     virtual wxSize DoGetBestSize(); //const;
      virtual void   DoSetSize(int x, int y, int w, int h, int sizeFlags);
      virtual void   DoMoveWindow(int x, int y, int w, int h);
@@ -105,4 +120,17 @@
 private :
 DECLARE_EVENT_TABLE()
+
+public:
+
+    /* Change (override) label values, if they exist. */
+    virtual void SetMaxLabel(const wxString& label);
+    virtual void SetMinLabel(const wxString& label);
+    virtual void SetValueLabel(const wxString& label);
+
+private:
+    /* Get dimensions that text labels make on screen */
+    void GetMaxLabelExtent(int* w, int* h);
+    void GetMinLabelExtent(int* w, int* h);
+    void GetValueLabelExtent(int* w, int* h);
 };
 
Index: samples/widgets/slider.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/samples/widgets/slider.cpp,v
retrieving revision 1.17
diff -b -u -2 -r1.17 slider.cpp
--- samples/widgets/slider.cpp	2004/05/25 11:19:43	1.17
+++ samples/widgets/slider.cpp	2004/06/01 14:13:34
@@ -401,4 +401,10 @@
                             wxDefaultPosition, wxDefaultSize,
                             flags);
+    if(m_chkLabels->GetValue()) {
+        m_slider->SetMaxLabel(wxString::Format(wxT("Max=%d/%.2f"), m_max, m_max/100.0));
+        m_slider->SetMinLabel(wxString::Format(wxT("Min=%d/%.2f"), m_min, m_min/100.0));
+        m_slider->SetValueLabel(wxString::Format(wxT("Value=%d/%.2f"), val, val/100.0));
+    }
+        
 
     if ( isVert )
@@ -485,4 +491,6 @@
 
     m_slider->SetRange(minNew, maxNew);
+    m_slider->SetMaxLabel(wxString::Format(wxT("Max=%ld/%.2f"), maxNew, maxNew/100.0));
+    m_slider->SetMinLabel(wxString::Format(wxT("Min=%ld/%.2f"), minNew, minNew/100.0));
 }
 
@@ -498,4 +506,5 @@
 
     m_slider->SetValue(val);
+    m_slider->SetValueLabel(wxString::Format(wxT("Value=%ld/%.2f"), val, val/100.0));
 }
 
@@ -601,4 +610,6 @@
                  eventNames[index],
                  event.GetPosition());
+
+    event.SetString(wxString::Format(wxT("Value=%d/%.2f"), event.GetPosition(), (event.GetPosition()/100.0) ));
 }
 
Index: src/mac/carbon/slider.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/src/mac/carbon/slider.cpp,v
retrieving revision 1.25
diff -b -u -2 -r1.25 slider.cpp
--- src/mac/carbon/slider.cpp	2004/05/23 20:52:32	1.25
+++ src/mac/carbon/slider.cpp	2004/06/01 14:13:40
@@ -124,8 +124,8 @@
 void wxSlider::SetValue(int value)
 {
-    wxString valuestring ;
-    valuestring.Printf( wxT("%d") , value ) ;    
+//    wxString valuestring ;
+//    valuestring.Printf( wxT("%d") , value ) ;    
     if ( m_macValueStatic )
-        m_macValueStatic->SetLabel( valuestring ) ;
+        m_macValueStatic->SetLabel( FormatValueLabel(value) ) ;
     SetControl32BitValue( (ControlRef) m_macControl , value ) ;
 }
@@ -133,5 +133,5 @@
 void wxSlider::SetRange(int minValue, int maxValue)
 {
-    wxString value;
+//    wxString value;
     
     m_rangeMin = minValue;
@@ -142,14 +142,18 @@
     
     if(m_macMinimumStatic) {
-        value.Printf(wxT("%d"), m_rangeMin);
-        m_macMinimumStatic->SetLabel(value);
+//        value.Printf(wxT("%d"), m_rangeMin);
+        m_macMinimumStatic->SetLabel(FormatMinLabel(m_rangeMin));
     }
     if(m_macMaximumStatic) {
-        value.Printf(wxT("%d"), m_rangeMax);
-        m_macMaximumStatic->SetLabel(value);
+//        value.Printf(wxT("%d"), m_rangeMax);
+        m_macMaximumStatic->SetLabel(FormatMaxLabel(m_rangeMax));
     }
+    if(GetValue() < m_rangeMin)
     SetValue(m_rangeMin);
+    else if(GetValue() > m_rangeMax)
+        SetValue(m_rangeMax);
 }
 
+
 // For trackbars only
 void wxSlider::SetTickFreq(int n, int pos)
@@ -235,20 +239,25 @@
     SInt16 value = ::GetControl32BitValue( (ControlRef) m_macControl ) ;
     
-    SetValue( value ) ;        
+    //SetValue( value ) ; // unneeded: label is set after processing command event.       
+    wxString valueLabel = FormatValueLabel(value);
     
     wxEventType scrollEvent = wxEVT_NULL ;
-    
     scrollEvent = wxEVT_SCROLL_THUMBTRACK;
-    
     wxScrollEvent event(scrollEvent, m_windowId);
     event.SetPosition(value);
     event.SetEventObject( this );
+    event.SetString(valueLabel);
     GetEventHandler()->ProcessEvent(event);
+    valueLabel = event.GetString();
     
+    
     wxCommandEvent cevent( wxEVT_COMMAND_SLIDER_UPDATED, m_windowId );
     cevent.SetInt( value );
     cevent.SetEventObject( this );
-    
+    cevent.SetString(valueLabel);
     GetEventHandler()->ProcessEvent( cevent );
+    valueLabel = cevent.GetString();
+
+    SetValueLabel(valueLabel);
 }
 
@@ -257,20 +266,25 @@
     SInt16 value = ::GetControl32BitValue( (ControlRef) m_macControl ) ;
     
-    SetValue( value ) ;        
+    //SetValue( value ) ;  // unneeded; label is set below
+    wxString valueLabel = FormatValueLabel(value);
     
     wxEventType scrollEvent = wxEVT_NULL ;
-    
     scrollEvent = wxEVT_SCROLL_THUMBRELEASE;
-    
     wxScrollEvent event(scrollEvent, m_windowId);
     event.SetPosition(value);
     event.SetEventObject( this );
+    event.SetString(valueLabel);
     GetEventHandler()->ProcessEvent(event);
+    valueLabel = event.GetString();
     
     wxCommandEvent cevent( wxEVT_COMMAND_SLIDER_UPDATED, m_windowId );
     cevent.SetInt( value );
     cevent.SetEventObject( this );
-    
+    cevent.SetString(valueLabel);
     GetEventHandler()->ProcessEvent( cevent );
+    valueLabel = cevent.GetString();
+
+    SetValueLabel(valueLabel);
+
     return noErr ;
 }
@@ -292,20 +306,41 @@
     }
 }
+
+void wxSlider::GetMaxLabelExtent(int* w, int* h) {
+    if(m_macMaximumStatic) 
+        GetTextExtent(m_macMaximumStatic->GetLabel(), w, h);
+    else 
+        GetTextExtent(FormatMinLabel(m_rangeMin), w, h);
+}
 
-wxSize wxSlider::DoGetBestSize() const
+void wxSlider::GetMinLabelExtent(int* w, int* h) {
+    if(m_macMinimumStatic)
+        GetTextExtent(m_macMinimumStatic->GetLabel(), w, h);
+    else 
+        GetTextExtent(FormatMaxLabel(m_rangeMax), w, h);
+}
+
+void wxSlider::GetValueLabelExtent(int* w, int* h) {
+    if(m_macValueStatic)
+        GetTextExtent(m_macValueStatic->GetLabel(), w, h);
+    else
+        GetTextExtent(FormatValueLabel(GetValue()), w, h);
+}
+
+wxSize wxSlider::DoGetBestSize() //const// can't be const because virtual
+                                 // methods FormatXXXLabel are called on 'this'.
 {
     wxSize size;
     int textwidth, textheight;
+    textwidth = textheight = 0;
     
     if(GetWindowStyle() & wxSL_LABELS)
     {
-        wxString text;
         int ht, wd;
         
         // Get maximum text label width and height
-        text.Printf(wxT("%d"), m_rangeMin);
-        GetTextExtent(text, &textwidth, &textheight);
-        text.Printf(wxT("%d"), m_rangeMax);
-        GetTextExtent(text, &wd, &ht);
+        GetMaxLabelExtent(&textwidth, &textheight);
+        GetMinLabelExtent(&wd, &ht);
+
         if(ht > textheight) {
             textheight = ht;
@@ -314,4 +349,9 @@
             textwidth = wd;
         }
+
+        // what about value label?
+        GetValueLabelExtent(&wd, &ht);
+        if(ht > textheight) textheight = ht;
+        if(wd > textwidth) textwidth = wd;
     }
     
@@ -348,5 +388,5 @@
 {
     int  xborder, yborder;
-    int  minValWidth, maxValWidth, textwidth, textheight;
+    int  minValWidth, maxValWidth, valueWidth, textwidth, textheight;
     int  sliderBreadth;
     
@@ -355,12 +395,8 @@
     if (GetWindowStyle() & wxSL_LABELS)
     {
-        wxString text;
-        int ht;
-        
-        // Get maximum text label width and height
-        text.Printf(wxT("%d"), m_rangeMin);
-        GetTextExtent(text, &minValWidth, &textheight);
-        text.Printf(wxT("%d"), m_rangeMax);
-        GetTextExtent(text, &maxValWidth, &ht);
+        int ht, foo;
+        GetMinLabelExtent(&minValWidth, &textheight);
+        GetMaxLabelExtent(&maxValWidth, &ht);
+        GetValueLabelExtent(&valueWidth, &foo);
         if(ht > textheight) {
             textheight = ht;
@@ -388,5 +424,5 @@
                 m_macMaximumStatic->Move(x + sliderBreadth + wxSLIDER_BORDERTEXT, y + 0);
             if ( m_macValueStatic )
-                m_macValueStatic->Move(0, y + h - textheight);
+                m_macValueStatic->Move(x - (valueWidth/2) , y + h - textheight);
             h = h - yborder ;
         }
@@ -411,2 +447,34 @@
     wxControl::DoMoveWindow(x,y,width,height) ;
 }
+
+void wxSlider::SetMaxLabel(const wxString& label) {
+    if(m_macMaximumStatic)
+        m_macMaximumStatic->SetLabel(label);
+}
+void wxSlider::SetMinLabel(const wxString& label) {
+    if(m_macMinimumStatic)
+        m_macMinimumStatic->SetLabel(label);
+}
+void wxSlider::SetValueLabel(const wxString& label) {
+    if(m_macValueStatic)
+        m_macValueStatic->SetLabel(label);
+}
+
+wxString wxSlider::FormatMaxLabel(int value) {
+    wxString s;
+    s.Printf(wxT("%d"), value);
+    return s;
+}
+
+wxString wxSlider::FormatMinLabel(int value) {
+    wxString s;
+    s.Printf(wxT("%d"), value);
+    return s;
+}
+
+wxString wxSlider::FormatValueLabel(int value) {
+    wxString s;
+    s.Printf(wxT("%d"), value);
+    return s;
+}
+

 	  	 
