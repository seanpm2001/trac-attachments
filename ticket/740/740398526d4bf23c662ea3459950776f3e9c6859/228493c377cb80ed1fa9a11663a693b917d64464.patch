diff --git a/src/osx/cocoa/overlay.mm b/src/osx/cocoa/overlay.mm
index 5506c18..d0b1906 100644
--- a/src/osx/cocoa/overlay.mm
+++ b/src/osx/cocoa/overlay.mm
@@ -139,7 +139,7 @@ - (instancetype)initWithFrame:(NSRect)frameRect
 
 bool wxOverlayImpl::IsOk()
 {
-    return m_overlayWindow != NULL ;
+    return m_overlayWindow != NULL && m_width >= 0 && m_height >= 0;
 }
 
 void wxOverlayImpl::CreateOverlayWindow( wxDC* dc )
@@ -159,11 +159,18 @@ - (instancetype)initWithFrame:(NSRect)frameRect
         NSRect overlayRect = wxToNSRect(NULL, wxRect(origin, size));
         overlayRect = [NSWindow contentRectForFrameRect:overlayRect styleMask:NSBorderlessWindowMask];
 
-        m_overlayWindow = [[wxOSXOverlayWindow alloc] initWithContentRect:overlayRect
-                                                      styleMask:NSBorderlessWindowMask
-                                                        backing:NSBackingStoreBuffered
-                                                          defer:YES];
-        [m_overlayParentWindow addChildWindow:m_overlayWindow ordered:NSWindowAbove];
+        if (m_overlayWindow == NULL)
+        {
+            m_overlayWindow = [[wxOSXOverlayWindow alloc] initWithContentRect:overlayRect
+                                                          styleMask:NSBorderlessWindowMask
+                                                            backing:NSBackingStoreBuffered
+                                                              defer:YES];
+            [m_overlayParentWindow addChildWindow:m_overlayWindow ordered:NSWindowAbove];
+        }
+	else
+	{
+            [m_overlayWindow setFrame:overlayRect display:YES];
+	}
     }
     else
     {
@@ -171,12 +178,15 @@ - (instancetype)initWithFrame:(NSRect)frameRect
         CGRect cgbounds;
         cgbounds = CGDisplayBounds(CGMainDisplayID());
 
-        m_overlayWindow = [[wxOSXOverlayWindow alloc] initWithContentRect:NSMakeRect(cgbounds.origin.x, cgbounds.origin.y,
-                                                                    cgbounds.size.width,
-                                                                    cgbounds.size.height)
-                                                      styleMask:NSBorderlessWindowMask
-                                                        backing:NSBackingStoreBuffered
-                                                          defer:YES];
+        if (m_overlayWindow == NULL)
+        {
+            m_overlayWindow = [[wxOSXOverlayWindow alloc] initWithContentRect:NSMakeRect(cgbounds.origin.x, cgbounds.origin.y,
+                                                                        cgbounds.size.width,
+                                                                        cgbounds.size.height)
+                                                          styleMask:NSBorderlessWindowMask
+                                                            backing:NSBackingStoreBuffered
+                                                              defer:YES];
+        }
     }
     [m_overlayWindow orderFront:nil];
 }
@@ -258,12 +268,20 @@ - (instancetype)initWithFrame:(NSRect)frameRect
         m_overlayContext = NULL ;
     }
 
-    // todo : don't dispose, only hide and reposition on next run
     if (m_overlayWindow)
     {
-        [m_overlayParentWindow removeChildWindow:m_overlayWindow];
-        [m_overlayWindow release];
-        m_overlayWindow = NULL ;
+	// Would hide the window with following code, but:
+        // A. This is unnecessary for caret operation
+	// B. This causes VoiceOver to announce "[ApplicationName] has new window" when
+	//    the overlay is shown again, with [m_overlayWindow orderFront:nil] call
+	//    at end of CreateOverlayWindow. A better approach will be to override
+	//    NSAccessibility message(s) in wxOSXOverlayWindow class to instruct
+	//    VoiceOver to ignore the overlay window.
+	// [m_overlayWindow orderOut:m_overlayWindow];
+        // Set m_width and m_height to invalid values, forcing new call to CreateOverlayWindow()
+	// when drawing is next needed.
+	m_width = -1;
+	m_height = -1;
     }
 }
 
