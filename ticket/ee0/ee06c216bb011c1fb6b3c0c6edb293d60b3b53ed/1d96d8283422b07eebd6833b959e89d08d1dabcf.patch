diff --git a/include/wx/generic/richmsgdlgg.h b/include/wx/generic/richmsgdlgg.h
index 5446f87..cb5e583 100644
--- a/include/wx/generic/richmsgdlgg.h
+++ b/include/wx/generic/richmsgdlgg.h
@@ -21,11 +21,7 @@ public:
     wxGenericRichMessageDialog(wxWindow *parent,
                                const wxString& message,
                                const wxString& caption,
-                               long style)
-        : wxRichMessageDialogBase( parent, message, caption, style ),
-          m_checkBox(NULL),
-          m_detailsPane(NULL)
-    { }
+                               long style);
 
     virtual bool IsCheckBoxChecked() const;
 
diff --git a/src/common/dlgcmn.cpp b/src/common/dlgcmn.cpp
index 6eecb6d..5e50fca 100644
--- a/src/common/dlgcmn.cpp
+++ b/src/common/dlgcmn.cpp
@@ -207,9 +207,9 @@ wxSizer *wxDialogBase::CreateTextSizer(const wxString& message)
 wxSizer *wxDialogBase::CreateTextSizer(const wxString& message,
                                        wxTextSizerWrapper& wrapper)
 {
+    int widthMax = wxGetDisplaySize().GetWidth() / 2;
     // I admit that this is complete bogus, but it makes
     // message boxes work for pda screens temporarily..
-    int widthMax = -1;
     const bool is_pda = wxSystemSettings::GetScreenType() <= wxSYS_SCREEN_PDA;
     if (is_pda)
     {
diff --git a/src/generic/msgdlgg.cpp b/src/generic/msgdlgg.cpp
index a85840e..5312181 100644
--- a/src/generic/msgdlgg.cpp
+++ b/src/generic/msgdlgg.cpp
@@ -183,6 +183,11 @@ void wxGenericMessageDialog::DoCreateMsgdialog()
             topsizer->Add( icon, 0, wxTOP|wxLEFT|wxRIGHT | wxALIGN_LEFT, 10 );
         else
             icon_text->Add(icon, wxSizerFlags().Top().Border(wxRIGHT, 20));
+
+        if ( m_icons.IsEmpty() )
+        {
+            SetIcon(wxArtProvider::GetMessageBoxIcon(m_dialogStyle));
+        }
     }
 #endif // wxUSE_STATBMP
 
@@ -191,21 +196,40 @@ void wxGenericMessageDialog::DoCreateMsgdialog()
 
     wxBoxSizer * const textsizer = new wxBoxSizer(wxVERTICAL);
 
+    wxString lowerMessage = GetMessage();
+    wxString extendedMessage = GetExtendedMessage();
+
+    // Before wxMessageDialog added support for extended message it was common
+    // practice to have long multiline texts in the message box with the first
+    // line playing the role of the main message and the rest of the extended
+    // one. Try to detect such usage automatically here by synthesizing the
+    // extended message on our own if it wasn't given.
+    if ( extendedMessage.empty() )
+    {
+        // Check if there is a blank separating line after the first line (this
+        // is not the same as searching for "\n\n" as we want the automatically
+        // recognized main message be single line to avoid embarrassing false
+        // positives).
+        const size_t posNL = lowerMessage.find('\n');
+        if ( posNL != wxString::npos &&
+                posNL < lowerMessage.length() - 1 &&
+                    lowerMessage[posNL + 1 ] == '\n' )
+        {
+            extendedMessage.assign(lowerMessage, posNL + 2, wxString::npos);
+            lowerMessage.erase(posNL);
+        }
+    }
+
     // We want to show the main message in a different font to make it stand
     // out if the extended message is used as well. This looks better and is
     // more consistent with the native dialogs under MSW and GTK.
-    wxString lowerMessage;
-    if ( !m_extendedMessage.empty() )
+    if ( !extendedMessage.empty() )
     {
         wxTitleTextWrapper titleWrapper(this);
-        textsizer->Add(CreateTextSizer(GetMessage(), titleWrapper),
+        textsizer->Add(CreateTextSizer(lowerMessage, titleWrapper),
                        wxSizerFlags().Border(wxBOTTOM, 20));
 
-        lowerMessage = GetExtendedMessage();
-    }
-    else // no extended message
-    {
-        lowerMessage = GetMessage();
+        lowerMessage = extendedMessage;
     }
 
     textsizer->Add(CreateTextSizer(lowerMessage));
diff --git a/src/generic/richmsgdlgg.cpp b/src/generic/richmsgdlgg.cpp
index 397cfd0..d4250f0 100644
--- a/src/generic/richmsgdlgg.cpp
+++ b/src/generic/richmsgdlgg.cpp
@@ -36,6 +36,27 @@ BEGIN_EVENT_TABLE(wxGenericRichMessageDialog, wxRichMessageDialogBase)
                                 wxGenericRichMessageDialog::OnPaneChanged)
 END_EVENT_TABLE()
 
+// ----------------------------------------------------------------------------
+// wxGenericRichMessageDialog
+// ----------------------------------------------------------------------------
+
+wxGenericRichMessageDialog::wxGenericRichMessageDialog(wxWindow *parent,
+                                                const wxString& message,
+                                                const wxString& caption,
+                                                long style)
+                      : wxRichMessageDialogBase(parent,
+                                            message,
+                                            caption,
+                                            style),
+                        m_checkBox(NULL),
+                        m_detailsPane(NULL)
+{
+    if( !(m_dialogStyle & wxICON_MASK) )
+    {
+        m_dialogStyle |= wxICON_INFORMATION;
+    }
+}
+
 void wxGenericRichMessageDialog::OnPaneChanged(wxCollapsiblePaneEvent& event)
 {
     if ( event.GetCollapsed() )
@@ -44,10 +65,6 @@ void wxGenericRichMessageDialog::OnPaneChanged(wxCollapsiblePaneEvent& event)
         m_detailsPane->SetLabel( m_detailsExpanderExpandedLabel );
 }
 
-// ----------------------------------------------------------------------------
-// wxGenericRichMessageDialog
-// ----------------------------------------------------------------------------
-
 void wxGenericRichMessageDialog::AddMessageDialogCheckBox(wxSizer *sizer)
 {
     if ( !m_checkBoxText.empty() )
