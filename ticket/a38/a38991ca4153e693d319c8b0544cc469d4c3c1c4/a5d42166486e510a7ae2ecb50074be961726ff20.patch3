Index: docs/latex/wx/notebook.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/notebook.tex,v
retrieving revision 1.34
diff -u2 -r1.34 docs/latex/wx/notebook.tex
--- docs/latex/wx/notebook.tex
+++ docs/latex/wx/notebook.tex
@@ -405,4 +405,7 @@
 The call to this function generates the page changing events.

+This function is deprecated and should not be used in new code. Please use the
+\helpref{ChangeSelection}{wxnotebookchangeselection} function instead.
+
 \wxheading{See also}

@@ -410,2 +413,12 @@


+
+\membersection{wxNotebook::ChangeSelection}\label{wxnotebookchangeselection}
+
+\func{int}{ChangeSelection}{\param{size\_t}{ page}}
+
+Changes the selection for the given page, returning the previous selection.
+
+The call to this function DOES NOT generate the page changing events.
+This is the only difference with \helpref{SetSelection}{wxnotebooksetselection}.
+See \helpref{this topic}{progevent} for more info.
Index: docs/latex/wx/tevent.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/tevent.tex,v
retrieving revision 1.25
diff -u2 -r1.25 docs/latex/wx/tevent.tex
--- docs/latex/wx/tevent.tex
+++ docs/latex/wx/tevent.tex
@@ -220,9 +220,30 @@
 all events (or any selection of them) to the parent window.

+
+\subsection{Events generated by the user and events programmatically generated}\label{progevent}
+
+While generically \helpref{wxEvents}{wxevent} can be generated both by user
+actions (e.g. resize of a \helpref{wxWindow}{wxwindow}) and by calls to functions
+(e.g. \helpref{wxWindow::SetSize}{wxwindowsetsize}), wxWidgets controls will send
+ \helpref{wxCommandEvent}{wxcommandevent}-derived events only for {\bf user-generated events}.
+The only {\bf exceptions} to this rule are:
+
+\begin{twocollist}\itemsep=0pt
+\twocolitem{\helpref{wxNotebook::AddPage}{wxnotebookaddpage}}{No event-free alternatives}
+\twocolitem{\helpref{wxNotebook::AdvanceSelection}{wxnotebookadvanceselection}}{No event-free alternatives}
+\twocolitem{\helpref{wxNotebook::DeletePage}{wxnotebookdeletepage}}{No event-free alternatives}
+\twocolitem{\helpref{wxNotebook::SetSelection}{wxnotebooksetselection}}{Use \helpref{wxNotebook::ChangeSelection}{wxnotebookchangeselection} instead, as \helpref{wxNotebook::SetSelection}{wxnotebooksetselection} is deprecated}
+\twocolitem{\helpref{wxTreeCtrl::Delete}{wxtreectrldelete}}{No event-free alternatives}
+\twocolitem{\helpref{wxTreeCtrl::DeleteAllItems}{wxtreectrldeleteallitems}}{No event-free alternatives}
+\twocolitem{\helpref{wxTreeCtrl::EditLabel}{wxtreectrleditlabel}}{No event-free alternatives}
+\twocolitem{\helpref{wxTextCtrl::SetValue}{wxtextctrlsetvalue}}{Use \helpref{wxTextCtrl::ChangeValue}{wxtextctrlchangevalue} instead, as \helpref{wxTextCtrl::SetValue}{wxtextctrlsetvalue} is deprecated}
+\end{twocollist}
+
+
 % VZ: it doesn't work like this, but just in case we ever reenable this
 %     behaviour, I leave it here
 %
 % \subsection{Redirection of command events to the window with the focus}
-%
+%
 % The usual upward search through the window hierarchy for command event
 % handlers does not always meet an application's requirements. Say you have two
Index: docs/latex/wx/treebook.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/treebook.tex,v
retrieving revision 1.2
diff -u2 -r1.2 docs/latex/wx/treebook.tex
--- docs/latex/wx/treebook.tex
+++ docs/latex/wx/treebook.tex
@@ -272,6 +272,20 @@
 The call to this function generates the page changing events.

+This function is deprecated and should not be used in new code. Please use the
+\helpref{ChangeSelection}{wxtreebookchangeselection} function instead.
+
 \wxheading{See also}

 \helpref{wxTreebook::GetSelection}{wxtreebookgetselection}

+
+
+\membersection{wxTreebook::ChangeSelection}\label{wxtreebookchangeselection}
+
+\func{int}{ChangeSelection}{\param{size\_t}{ page}}
+
+Changes the selection for the given page, returning the previous selection.
+
+The call to this function DOES NOT generate the page changing events.
+This is the only difference with \helpref{SetSelection}{wxtreebooksetselection}.
+See \helpref{this topic}{progevent} for more info.
Index: include/wx/bookctrl.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/bookctrl.h,v
retrieving revision 1.38
diff -u2 -r1.38 include/wx/bookctrl.h
--- include/wx/bookctrl.h
+++ include/wx/bookctrl.h
@@ -27,4 +27,5 @@

 class WXDLLEXPORT wxImageList;
+class WXDLLEXPORT wxBookCtrlBaseEvent;

 // ----------------------------------------------------------------------------
@@ -195,4 +196,7 @@
     virtual int SetSelection(size_t n) = 0;

+    // acts as SetSelection but does not generate events
+    virtual int ChangeSelection(size_t n) = 0;
+

     // cycle thru the pages
@@ -219,4 +223,21 @@

 protected:
+    // typically, wxBookCtrl-derived classes will use DoSetSelection() function
+    // to implement SetSelection() and ChangeSelection() functions.
+    // these flags make DoSetSelection() more readable
+    enum wxEventMode
+    {
+        wxDontSendEvent = 0,
+        wxSendEvent = 1
+    };
+
+    // if using DoSetSelection() for implementing [Set|Change]Selection,
+    // then override UpdateSelectedPage() and MakeChangedEvent()
+    virtual int DoSetSelection(size_t nPage, wxEventMode send_event, wxBookCtrlBaseEvent &event);
+    virtual void UpdateSelectedPage(size_t newsel)
+        { wxFAIL_MSG(wxT("Override this function!")); }
+    virtual void MakeChangedEvent(wxBookCtrlBaseEvent &event)
+        { wxFAIL_MSG(wxT("Override this function!")); }
+
     // Should we accept NULL page pointers in Add/InsertPage()?
     //
Index: include/wx/choicebk.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/choicebk.h,v
retrieving revision 1.9
diff -u2 -r1.9 include/wx/choicebk.h
--- include/wx/choicebk.h
+++ include/wx/choicebk.h
@@ -21,4 +21,8 @@
 class WXDLLEXPORT wxChoice;

+extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED;
+extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING;
+
+
 // ----------------------------------------------------------------------------
 // wxChoicebook
@@ -65,5 +69,6 @@
                             bool bSelect = false,
                             int imageId = -1);
-    virtual int SetSelection(size_t n);
+    virtual int SetSelection(size_t n) { return DoSetSelection(n, wxSendEvent); }
+    virtual int ChangeSelection(size_t n) { return DoSetSelection(n, wxDontSendEvent); }
     virtual void SetImageList(wxImageList *imageList);

@@ -79,4 +84,17 @@
     virtual wxSize GetControllerSize() const;

+    int DoSetSelection(size_t nPage, wxEventMode send_event);
+
+    void UpdateSelectedPage(size_t newsel)
+    {
+        m_selection = newsel;
+        GetChoiceCtrl()->Select(newsel);
+    }
+
+    void MakeChangedEvent(wxBookCtrlBaseEvent &event)
+    {
+        event.SetEventType(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED);
+    }
+
     // event handlers
     void OnChoiceSelected(wxCommandEvent& event);
@@ -117,7 +135,4 @@
 };

-extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED;
-extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING;
-
 typedef void (wxEvtHandler::*wxChoicebookEventFunction)(wxChoicebookEvent&);

Index: include/wx/listbook.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/listbook.h,v
retrieving revision 1.16
diff -u -r1.16 listbook.h
--- include/wx/listbook.h	2006/05/26 02:09:41	1.16
+++ include/wx/listbook.h	2006/09/30 12:08:57
@@ -17,10 +17,14 @@
 #if wxUSE_LISTBOOK
 
 #include "wx/bookctrl.h"
+#include "wx/listctrl.h"
 
 class WXDLLEXPORT wxListView;
 class WXDLLEXPORT wxListEvent;
 
+extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_LISTBOOK_PAGE_CHANGED;
+extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_LISTBOOK_PAGE_CHANGING;
+
 // ----------------------------------------------------------------------------
 // wxListbook
 // ----------------------------------------------------------------------------
@@ -65,7 +69,8 @@
                             const wxString& text,
                             bool bSelect = false,
                             int imageId = -1);
-    virtual int SetSelection(size_t n);
+    virtual int SetSelection(size_t n) { return DoSetSelection(n, wxSendEvent); }
+    virtual int ChangeSelection(size_t n) { return DoSetSelection(n, wxDontSendEvent); }
     virtual void SetImageList(wxImageList *imageList);
 
     virtual bool DeleteAllPages();
@@ -81,6 +86,20 @@
     // return the page corresponding to the tab at the specified position
     virtual int HitTest(const wxPoint& pt, long *flags = NULL) const;
 
+    int DoSetSelection(size_t nPage, wxEventMode send_event);
+
+    void UpdateSelectedPage(size_t newsel)
+    {
+        m_selection = newsel;
+        GetListView()->Select(newsel);
+        GetListView()->Focus(newsel);
+    }
+
+    void MakeChangedEvent(wxBookCtrlBaseEvent &event)
+    {
+        event.SetEventType(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGED);
+    }
+
     // event handlers
     void OnListSelected(wxListEvent& event);
     void OnSize(wxSizeEvent& event);
@@ -119,9 +138,6 @@
 private:
     DECLARE_DYNAMIC_CLASS_NO_ASSIGN(wxListbookEvent)
 };
-
-extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_LISTBOOK_PAGE_CHANGED;
-extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_LISTBOOK_PAGE_CHANGING;
 
 typedef void (wxEvtHandler::*wxListbookEventFunction)(wxListbookEvent&);
 
Index: include/wx/toolbook.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/toolbook.h,v
retrieving revision 1.3
diff -u2 -r1.3 include/wx/toolbook.h
--- include/wx/toolbook.h
+++ include/wx/toolbook.h
@@ -22,4 +22,8 @@
 class WXDLLEXPORT wxCommandEvent;

+extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGED;
+extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGING;
+
+
 // Use wxButtonToolBar
 #define wxBK_BUTTONBAR            0x0100
@@ -70,5 +74,6 @@
                             bool bSelect = false,
                             int imageId = -1);
-    virtual int SetSelection(size_t n);
+    virtual int SetSelection(size_t n) { return DoSetSelection(n, wxSendEvent); }
+    virtual int ChangeSelection(size_t n) { return DoSetSelection(n, wxDontSendEvent); }
     virtual void SetImageList(wxImageList *imageList);

@@ -97,4 +102,17 @@
     void OnIdle(wxIdleEvent& event);

+    int DoSetSelection(size_t nPage, wxEventMode send_event);
+
+    void UpdateSelectedPage(size_t newsel)
+    {
+        m_selection = newsel;
+        GetToolBar()->ToggleTool(newsel + 1, true);
+    }
+
+    void MakeChangedEvent(wxBookCtrlBaseEvent &event)
+    {
+        event.SetEventType(wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGED);
+    }
+
     // the currently selected page or wxNOT_FOUND if none
     int m_selection;
@@ -138,7 +156,4 @@
 };

-extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGED;
-extern WXDLLIMPEXP_CORE const wxEventType wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGING;
-
 typedef void (wxEvtHandler::*wxToolbookEventFunction)(wxToolbookEvent&);

Index: include/wx/treebook.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/treebook.h,v
retrieving revision 1.7
diff -u2 -r1.7 include/wx/treebook.h
--- include/wx/treebook.h
+++ include/wx/treebook.h
@@ -134,5 +134,6 @@
     virtual bool SetPageImage(size_t n, int imageId);
     virtual wxSize CalcSizeFromPage(const wxSize& sizePage) const;
-    virtual int SetSelection(size_t n);
+    virtual int SetSelection(size_t n) { return DoSetSelection(n, wxSendEvent); }
+    virtual int ChangeSelection(size_t n) { return DoSetSelection(n, wxDontSendEvent); }
     virtual void SetImageList(wxImageList *imageList);
     virtual void AssignImageList(wxImageList *imageList);
@@ -189,5 +190,8 @@

     // Sets selection in the tree control and updates the page being shown.
-    int DoSetSelection(size_t pos);
+    int DoSetSelection(size_t pos, wxEventMode send_event);
+
+    // as above but event-free
+    int DoChangeSelection(size_t pagePos);

     // Returns currently shown page. In a case when selected the node
Index: include/wx/cocoa/notebook.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/cocoa/notebook.h,v
retrieving revision 1.4
diff -u2 -r1.4 include/wx/cocoa/notebook.h
--- include/wx/cocoa/notebook.h
+++ include/wx/cocoa/notebook.h
@@ -63,4 +63,7 @@
     int GetSelection() const;

+    // like SetSelection but event-free
+    int ChangeSelection(size_t nPage);
+
     // set/get the title of a page
     bool SetPageText(size_t nPage, const wxString& strText);
Index: include/wx/generic/notebook.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/generic/notebook.h,v
retrieving revision 1.22
diff -u2 -r1.22 include/wx/generic/notebook.h
--- include/wx/generic/notebook.h
+++ include/wx/generic/notebook.h
@@ -69,4 +69,7 @@
   int GetSelection() const { return m_nSelection; }

+    // like SetSelection but event-free
+  int ChangeSelection(size_t nPage);
+
     // set/get the title of a page
   bool SetPageText(size_t nPage, const wxString& strText);
Index: include/wx/gtk/notebook.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/notebook.h,v
retrieving revision 1.61
diff -u2 -r1.61 include/wx/gtk/notebook.h
--- include/wx/gtk/notebook.h
+++ include/wx/gtk/notebook.h
@@ -53,8 +53,11 @@
     // selected one (or -1 on error)
     // NB: this function will _not_ generate wxEVT_NOTEBOOK_PAGE_xxx events
-  int SetSelection(size_t nPage);
+    int SetSelection(size_t nPage) { return DoSetSelection(nPage, wxSendEvent); }
     // get the currently selected page
   int GetSelection() const;

+    // like SetSelection but event-free
+  int ChangeSelection(size_t nPage) { return DoSetSelection(nPage, wxDontSendEvent); }
+
     // set/get the title of a page
   bool SetPageText(size_t nPage, const wxString& strText);
@@ -121,4 +124,7 @@
     bool m_inSwitchPage;

+    // flag set to true when the switch-page signal has been programatically generated
+    bool m_bSkipNextSwitchEvent;
+
 protected:
     // set all page's attributes
@@ -129,4 +135,6 @@
     virtual wxNotebookPage *DoRemovePage(size_t nPage);

+    int DoSetSelection(size_t nPage, wxEventMode send_event);
+
 private:
     // the padding set by SetPadding()
Index: include/wx/gtk1/notebook.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk1/notebook.h,v
retrieving revision 1.60
diff -u2 -r1.60 include/wx/gtk1/notebook.h
--- include/wx/gtk1/notebook.h
+++ include/wx/gtk1/notebook.h
@@ -53,7 +53,10 @@
     // selected one (or -1 on error)
     // NB: this function will _not_ generate wxEVT_NOTEBOOK_PAGE_xxx events
-  int SetSelection(size_t nPage);
+    int SetSelection(size_t nPage) { return DoSetSelection(nPage, wxSendEvent); }
     // get the currently selected page
-  int GetSelection() const;
+    int GetSelection() const;
+
+    // like SetSelection but event-free
+    int ChangeSelection(size_t nPage) { return DoSetSelection(nPage, wxDontSendEvent); }

     // set/get the title of a page
@@ -127,8 +130,13 @@
     bool m_inSwitchPage;

+    // flag set to true when the switch-page signal has been programatically generated
+    bool m_bSkipNextSwitchEvent;
+
 protected:
     // remove one page from the notebook but do not destroy it
     virtual wxNotebookPage *DoRemovePage(size_t nPage);

+    int DoSetSelection(size_t nPage, wxEventMode send_event);
+
 private:
     // the padding set by SetPadding()
Index: include/wx/mac/carbon/notebook.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/notebook.h,v
retrieving revision 1.12
diff -u2 -r1.12 include/wx/mac/carbon/notebook.h
--- include/wx/mac/carbon/notebook.h
+++ include/wx/mac/carbon/notebook.h
@@ -58,8 +58,11 @@
     // selected one (or -1 on error)
     // NB: this function will _not_ generate wxEVT_NOTEBOOK_PAGE_xxx events
-  int SetSelection(size_t nPage);
+  int SetSelection(size_t nPage) { return DoSetSelection(nPage, wxSendEvent); }
     // get the currently selected page
   int GetSelection() const { return m_nSelection; }

+    // like SetSelection but event-free
+  int ChangeSelection(size_t nPage) { return DoSetSelection(nPage, wxDontSendEvent); }
+
     // set/get the title of a page
   bool SetPageText(size_t nPage, const wxString& strText);
@@ -80,5 +83,5 @@
   // hit test
   virtual int HitTest(const wxPoint& pt, long *flags = NULL) const;
-
+
   // calculate size for wxNotebookSizer
   wxSize CalcSizeFromPage(const wxSize& sizePage) const;
@@ -126,4 +129,6 @@
   void MacSetupTabs();

+  int DoSetSelection(size_t nPage, wxEventMode send_event);
+
   // the icon indices
   wxArrayInt m_images;
Index: include/wx/msw/notebook.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/notebook.h,v
retrieving revision 1.69
diff -u2 -r1.69 include/wx/msw/notebook.h
--- include/wx/msw/notebook.h
+++ include/wx/msw/notebook.h
@@ -93,4 +93,7 @@
   int GetSelection() const { return m_nSelection; }

+    // like SetSelection but event-free
+  int ChangeSelection(size_t nPage);
+
     // set/get the title of a page
   bool SetPageText(size_t nPage, const wxString& strText);
@@ -194,4 +197,7 @@
   void Init();

+  // hides m_nSelection-th page, shows the newsel-th one and updates m_nSelection
+  void UpdateSelection(size_t newsel);
+
   // remove one page from the notebook, without deleting
   virtual wxNotebookPage *DoRemovePage(size_t nPage);
Index: include/wx/os2/notebook.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/notebook.h,v
retrieving revision 1.14
diff -u2 -r1.14 include/wx/os2/notebook.h
--- include/wx/os2/notebook.h
+++ include/wx/os2/notebook.h
@@ -67,4 +67,7 @@
     int      SetSelection(size_t nPage);

+    // like SetSelection but event-free
+    int ChangeSelection(size_t nPage);
+
     //
     // Get the currently selected page
Index: include/wx/palmos/notebook.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/notebook.h,v
retrieving revision 1.4
diff -u2 -r1.4 include/wx/palmos/notebook.h
--- include/wx/palmos/notebook.h
+++ include/wx/palmos/notebook.h
@@ -88,4 +88,7 @@
     int GetSelection() const { return m_nSelection; }

+    // like SetSelection but event-free
+    int ChangeSelection(size_t nPage);
+
     // set/get the title of a page
     bool SetPageText(size_t nPage, const wxString& strText);
Index: include/wx/univ/notebook.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/univ/notebook.h,v
retrieving revision 1.23
diff -u2 -r1.23 include/wx/univ/notebook.h
--- include/wx/univ/notebook.h
+++ include/wx/univ/notebook.h
@@ -64,7 +64,10 @@
     // --------------------------------------

-    virtual int SetSelection(size_t nPage);
+    virtual int SetSelection(size_t nPage) { return DoSetSelection(nPage, wxSendEvent); }
     virtual int GetSelection() const { return (int) m_sel; }

+    // like SetSelection but event-free
+    int ChangeSelection(size_t nPage) { return DoSetSelection(nPage, wxDontSendEvent); }
+
     virtual bool SetPageText(size_t nPage, const wxString& strText);
     virtual wxString GetPageText(size_t nPage) const;
@@ -135,4 +138,6 @@
                            int sizeFlags = wxSIZE_AUTO);

+    int DoSetSelection(size_t nPage, wxEventMode send_event);
+
     // common part of all ctors
     void Init();
Index: samples/notebook/notebook.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/notebook/notebook.cpp,v
retrieving revision 1.47
diff -u2 -r1.47 samples/notebook/notebook.cpp
--- samples/notebook/notebook.cpp
+++ samples/notebook/notebook.cpp
@@ -266,4 +266,6 @@
     menuPageOperations->Append(ID_ADD_SUB_PAGE, wxT("Add s&ub page\tAlt-U"));
 #endif
+    menuPageOperations->AppendSeparator();
+    menuPageOperations->Append(ID_GO_HOME, wxT("Go to the first page\tCtrl-F"));

     wxMenu *menuOperations = new wxMenu;
@@ -518,4 +520,5 @@
     EVT_MENU(ID_DELETE_LAST_PAGE, MyFrame::OnDeleteLastPage)
     EVT_MENU(ID_NEXT_PAGE, MyFrame::OnNextPage)
+    EVT_MENU(ID_GO_HOME, MyFrame::OnGoHome)

 #if wxUSE_HELP
@@ -789,4 +792,16 @@
 }

+void MyFrame::OnGoHome(wxCommandEvent& WXUNUSED(event))
+{
+    wxBookCtrlBase *currBook = GetCurrentBook();
+
+    if ( currBook )
+    {
+        // test ChangeSelection
+        currBook->ChangeSelection(0);
+        //currBook->SetSelection(0);
+    }
+}
+
 void MyFrame::OnIdle( wxIdleEvent& WXUNUSED(event) )
 {
Index: samples/notebook/notebook.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/notebook/notebook.h,v
retrieving revision 1.21
diff -u2 -r1.21 samples/notebook/notebook.h
--- samples/notebook/notebook.h
+++ samples/notebook/notebook.h
@@ -49,4 +49,5 @@
     void OnDeleteLastPage(wxCommandEvent& event);
     void OnNextPage(wxCommandEvent& event);
+    void OnGoHome(wxCommandEvent &event);

     void OnAddSubPage(wxCommandEvent& event);
@@ -148,4 +149,5 @@
     ID_ADD_PAGE_BEFORE,
     ID_ADD_SUB_PAGE,
+    ID_GO_HOME,

 #if wxUSE_HELP
Index: src/common/bookctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/bookctrl.cpp,v
retrieving revision 1.31
diff -u2 -r1.31 src/common/bookctrl.cpp
--- src/common/bookctrl.cpp
+++ src/common/bookctrl.cpp
@@ -424,3 +424,48 @@
 }

+int wxBookCtrlBase::DoSetSelection(size_t n, wxEventMode send_event, wxBookCtrlBaseEvent &event)
+{
+    wxCHECK_MSG( n < GetPageCount(), wxNOT_FOUND,
+                 wxT("invalid page index in wxBookCtrlBase::DoSetSelection()") );
+
+    const int oldSel = GetSelection();
+
+    if ( int(n) != oldSel )
+    {
+        bool allowed = false;
+
+        if (send_event)
+        {
+            event.SetSelection(n);
+            event.SetOldSelection(oldSel);
+            event.SetEventObject(this);
+
+            allowed = !GetEventHandler()->ProcessEvent(event) || event.IsAllowed();
+        }
+
+        if ( !send_event || allowed)
+        {
+            if ( oldSel != wxNOT_FOUND )
+                m_pages[oldSel]->Hide();
+
+            wxWindow *page = m_pages[n];
+            page->SetSize(GetPageRect());
+            page->Show();
+
+            // change selection now to ignore the selection change event
+            UpdateSelectedPage(n);
+
+            if (send_event)
+            {
+                // program allows the page change
+                MakeChangedEvent(event);
+                (void)GetEventHandler()->ProcessEvent(event);
+            }
+        }
+    }
+
+    return oldSel;
+}
+
+
 #endif // wxUSE_BOOKCTRL
Index: src/generic/choicbkg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/choicbkg.cpp,v
retrieving revision 1.19
diff -u2 -r1.19 src/generic/choicbkg.cpp
--- src/generic/choicbkg.cpp
+++ src/generic/choicbkg.cpp
@@ -210,37 +210,8 @@
 }

-int wxChoicebook::SetSelection(size_t n)
+int wxChoicebook::DoSetSelection(size_t n, wxEventMode send_event)
 {
-    wxCHECK_MSG( IS_VALID_PAGE(n), wxNOT_FOUND,
-                 wxT("invalid page index in wxChoicebook::SetSelection()") );
-
-    const int oldSel = m_selection;
-
-    if ( int(n) != m_selection )
-    {
-        wxChoicebookEvent event(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING, m_windowId);
-        event.SetSelection(n);
-        event.SetOldSelection(m_selection);
-        event.SetEventObject(this);
-        if ( !GetEventHandler()->ProcessEvent(event) || event.IsAllowed() )
-        {
-            if ( m_selection != wxNOT_FOUND )
-                m_pages[m_selection]->Hide();
-
-            wxWindow *page = m_pages[n];
-            page->SetSize(GetPageRect());
-            page->Show();
-
-            // change m_selection now to ignore the selection change event
-            m_selection = n;
-            GetChoiceCtrl()->Select(n);
-
-            // program allows the page change
-            event.SetEventType(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGED);
-            (void)GetEventHandler()->ProcessEvent(event);
-        }
-    }
-
-    return oldSel;
+    wxChoicebookEvent event(wxEVT_COMMAND_CHOICEBOOK_PAGE_CHANGING, m_windowId);
+    return wxBookCtrlBase::DoSetSelection(n, send_event, event);
 }

Index: src/generic/listbkg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/listbkg.cpp,v
retrieving revision 1.40
diff -u2 -r1.40 src/generic/listbkg.cpp
--- src/generic/listbkg.cpp
+++ src/generic/listbkg.cpp
@@ -268,40 +268,11 @@
 }

-int wxListbook::SetSelection(size_t n)
+int wxListbook::DoSetSelection(size_t n, wxEventMode send_event)
 {
-    wxCHECK_MSG( IS_VALID_PAGE(n), wxNOT_FOUND,
-                 wxT("invalid page index in wxListbook::SetSelection()") );
-
-    const int oldSel = m_selection;
-
-    if ( int(n) != m_selection )
-    {
-        wxListbookEvent event(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGING, m_windowId);
-        event.SetSelection(n);
-        event.SetOldSelection(m_selection);
-        event.SetEventObject(this);
-        if ( !GetEventHandler()->ProcessEvent(event) || event.IsAllowed() )
-        {
-            if ( m_selection != wxNOT_FOUND )
-                m_pages[m_selection]->Hide();
-
-            wxWindow *page = m_pages[n];
-            page->SetSize(GetPageRect());
-            page->Show();
-
-            // change m_selection now to ignore the selection change event
-            m_selection = n;
-            GetListView()->Select(n);
-            GetListView()->Focus(n);
-
-            // program allows the page change
-            event.SetEventType(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGED);
-            (void)GetEventHandler()->ProcessEvent(event);
-        }
-    }
-
-    return oldSel;
+    wxListbookEvent event(wxEVT_COMMAND_LISTBOOK_PAGE_CHANGING, m_windowId);
+    return wxBookCtrlBase::DoSetSelection(n, send_event, event);
 }

+
 // ----------------------------------------------------------------------------
 // adding/removing the pages
Index: src/generic/toolbkg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/toolbkg.cpp,v
retrieving revision 1.16
diff -u2 -r1.16 src/generic/toolbkg.cpp
--- src/generic/toolbkg.cpp
+++ src/generic/toolbkg.cpp
@@ -246,37 +246,8 @@
 }

-int wxToolbook::SetSelection(size_t n)
+int wxToolbook::DoSetSelection(size_t n, wxEventMode send_event)
 {
-    wxCHECK_MSG( IS_VALID_PAGE(n), wxNOT_FOUND,
-                 wxT("invalid page index in wxToolbook::SetSelection()") );
-
-    const int oldSel = m_selection;
-
-    if ( int(n) != m_selection )
-    {
-        wxToolbookEvent event(wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGING, m_windowId);
-        event.SetSelection(n);
-        event.SetOldSelection(m_selection);
-        event.SetEventObject(this);
-        if ( !GetEventHandler()->ProcessEvent(event) || event.IsAllowed() )
-        {
-            if ( m_selection != wxNOT_FOUND )
-                m_pages[m_selection]->Hide();
-
-            wxWindow *page = m_pages[n];
-            page->SetSize(GetPageRect());
-            page->Show();
-
-            // change m_selection now to ignore the selection change event
-            m_selection = n;
-            GetToolBar()->ToggleTool(n + 1, true);
-
-            // program allows the page change
-            event.SetEventType(wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGED);
-            (void)GetEventHandler()->ProcessEvent(event);
-        }
-    }
-
-    return oldSel;
+    wxToolbookEvent event(wxEVT_COMMAND_TOOLBOOK_PAGE_CHANGING, m_windowId);
+    return wxBookCtrlBase::DoSetSelection(n, send_event, event);
 }

Index: src/generic/treebkg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/treebkg.cpp,v
retrieving revision 1.16
diff -u2 -r1.16 src/generic/treebkg.cpp
--- src/generic/treebkg.cpp
+++ src/generic/treebkg.cpp
@@ -367,5 +367,5 @@
                     newPos <= (size_t)m_actualSelection )
         {
-            DoSetSelection(m_selection);
+            DoSetSelection(m_selection, wxDontSendEvent);
         }
     }
@@ -433,5 +433,7 @@
             // already deleted
             m_actualSelection = m_selection;
-            DoSetSelection(m_selection);
+
+            // send event as documented
+            DoSetSelection(m_selection, wxSendEvent);
         }
         //else: nothing to do -- selection is before the deleted node
@@ -584,32 +586,30 @@
 }

-int wxTreebook::SetSelection(size_t pagePos)
-{
-   if ( (size_t)m_selection != pagePos )
-       return DoSetSelection(pagePos);
-
-   return m_selection;
-}
-
-int wxTreebook::DoSetSelection(size_t pagePos)
+int wxTreebook::DoSetSelection(size_t pagePos, wxEventMode send_event)
 {
     wxCHECK_MSG( IS_VALID_PAGE(pagePos), wxNOT_FOUND,
-                 wxT("invalid page index in wxListbook::SetSelection()") );
+                 wxT("invalid page index in wxListbook::DoSetSelection()") );
     wxASSERT_MSG( GetPageCount() == DoInternalGetPageCount(),
                   wxT("wxTreebook logic error: m_treeIds and m_pages not in sync!"));

+    wxTreebookEvent event(wxEVT_COMMAND_TREEBOOK_PAGE_CHANGING, m_windowId);
     const int oldSel = m_selection;
     wxTreeCtrl *tree = GetTreeCtrl();
+    bool allowed = false;

-    wxTreebookEvent event(wxEVT_COMMAND_TREEBOOK_PAGE_CHANGING, m_windowId);
-    event.SetEventObject(this);
-    event.SetSelection(pagePos);
-    event.SetOldSelection(m_selection);
-
-    // don't send the event if the old and new pages are the same; do send it
-    // otherwise and be prepared for it to be vetoed
-    if ( (int)pagePos == m_selection ||
-            !GetEventHandler()->ProcessEvent(event) ||
-                event.IsAllowed() )
+    if (send_event)
+    {
+        event.SetEventObject(this);
+        event.SetSelection(pagePos);
+        event.SetOldSelection(m_selection);
+
+        // don't send the event if the old and new pages are the same; do send it
+        // otherwise and be prepared for it to be vetoed
+        allowed = (int)pagePos == m_selection ||
+                  !GetEventHandler()->ProcessEvent(event) ||
+                  event.IsAllowed();
+    }
+
+    if ( !send_event || allowed )
     {
         // hide the previously shown page
@@ -645,9 +645,12 @@
         tree->SelectItem(DoInternalGetPage(pagePos));

-        // notify about the (now completed) page change
-        event.SetEventType(wxEVT_COMMAND_TREEBOOK_PAGE_CHANGED);
-        (void)GetEventHandler()->ProcessEvent(event);
+        if (send_event)
+        {
+            // notify about the (now completed) page change
+            event.SetEventType(wxEVT_COMMAND_TREEBOOK_PAGE_CHANGED);
+            (void)GetEventHandler()->ProcessEvent(event);
+        }
     }
-    else // page change vetoed
+    else if (send_event && !allowed) // page change vetoed
     {
         // tree selection might have already had changed
Index: src/gtk/notebook.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/notebook.cpp,v
retrieving revision 1.148
diff -u2 -r1.148 src/gtk/notebook.cpp
--- src/gtk/notebook.cpp
+++ src/gtk/notebook.cpp
@@ -105,26 +105,41 @@
     int old = notebook->GetSelection();

-    wxNotebookEvent eventChanging( wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING,
-                                   notebook->GetId(), page, old );
-    eventChanging.SetEventObject( notebook );
-
-    if ( (notebook->GetEventHandler()->ProcessEvent(eventChanging)) &&
-         !eventChanging.IsAllowed() )
-    {
-        /* program doesn't allow the page change */
-        g_signal_stop_emission_by_name (notebook->m_widget,
-                                        "switch_page");
-    }
-    else // change allowed
+
+    if (notebook->m_bSkipNextSwitchEvent)
     {
+        // this event was programatically generated by ChangeSelection() and thus must
+        // be skipped
+        notebook->m_bSkipNextSwitchEvent = false;
+
         // make wxNotebook::GetSelection() return the correct (i.e. consistent
         // with wxNotebookEvent::GetSelection()) value even though the page is
         // not really changed in GTK+
         notebook->m_selection = page;
+    }
+    else
+    {
+        wxNotebookEvent eventChanging( wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING,
+                                    notebook->GetId(), page, old );
+        eventChanging.SetEventObject( notebook );

-        wxNotebookEvent eventChanged( wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED,
-                                      notebook->GetId(), page, old );
-        eventChanged.SetEventObject( notebook );
-        notebook->GetEventHandler()->ProcessEvent( eventChanged );
+        if ( (notebook->GetEventHandler()->ProcessEvent(eventChanging)) &&
+            !eventChanging.IsAllowed() )
+        {
+            /* program doesn't allow the page change */
+            g_signal_stop_emission_by_name (notebook->m_widget,
+                                            "switch_page");
+        }
+        else // change allowed
+        {
+            // make wxNotebook::GetSelection() return the correct (i.e. consistent
+            // with wxNotebookEvent::GetSelection()) value even though the page is
+            // not really changed in GTK+
+            notebook->m_selection = page;
+
+            wxNotebookEvent eventChanged( wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED,
+                                        notebook->GetId(), page, old );
+            eventChanged.SetEventObject( notebook );
+            notebook->GetEventHandler()->ProcessEvent( eventChanged );
+        }
     }

@@ -290,4 +305,5 @@
     m_padding = 0;
     m_inSwitchPage = false;
+    m_bSkipNextSwitchEvent = false;

     m_imageList = (wxImageList *) NULL;
@@ -415,5 +431,5 @@
 }

-int wxNotebook::SetSelection( size_t page )
+int wxNotebook::DoSetSelection( size_t page, wxEventMode send_event )
 {
     wxCHECK_MSG( m_widget != NULL, -1, wxT("invalid notebook") );
@@ -423,8 +439,21 @@
     int selOld = GetSelection();

+    if (!send_event)
+        m_bSkipNextSwitchEvent = true;
+
     // cache the selection
     m_selection = page;
     gtk_notebook_set_current_page( GTK_NOTEBOOK(m_widget), page );

+#ifdef __WXDEBUG__
+    if (!send_event)
+    {
+        // gtk_notebook_set_current_page will emit the switch-page signal which will be
+        // catched by our gtk_notebook_page_change_callback which should have reset the
+        // flag to false:
+        wxASSERT(!m_bSkipNextSwitchEvent);
+    }
+#endif
+
     wxNotebookPage *client = GetPage(page);
     if ( client )
Index: src/gtk1/notebook.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk1/notebook.cpp,v
retrieving revision 1.134
diff -u2 -r1.134 src/gtk1/notebook.cpp
--- src/gtk1/notebook.cpp
+++ src/gtk1/notebook.cpp
@@ -106,26 +106,40 @@
     int old = notebook->GetSelection();

-    wxNotebookEvent eventChanging( wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING,
-                                   notebook->GetId(), page, old );
-    eventChanging.SetEventObject( notebook );
-
-    if ( (notebook->GetEventHandler()->ProcessEvent(eventChanging)) &&
-         !eventChanging.IsAllowed() )
-    {
-        /* program doesn't allow the page change */
-        gtk_signal_emit_stop_by_name( GTK_OBJECT(notebook->m_widget),
-                                      "switch_page" );
-    }
-    else // change allowed
+    if (notebook->m_bSkipNextSwitchEvent)
     {
+        // this event was programatically generated by ChangeSelection() and thus must
+        // be skipped
+        notebook->m_bSkipNextSwitchEvent = false;
+
         // make wxNotebook::GetSelection() return the correct (i.e. consistent
         // with wxNotebookEvent::GetSelection()) value even though the page is
         // not really changed in GTK+
         notebook->m_selection = page;
+    }
+    else
+    {
+        wxNotebookEvent eventChanging( wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING,
+                                       notebook->GetId(), page, old );
+        eventChanging.SetEventObject( notebook );

-        wxNotebookEvent eventChanged( wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED,
-                                      notebook->GetId(), page, old );
-        eventChanged.SetEventObject( notebook );
-        notebook->GetEventHandler()->ProcessEvent( eventChanged );
+        if ( (notebook->GetEventHandler()->ProcessEvent(eventChanging)) &&
+              !eventChanging.IsAllowed() )
+        {
+            /* program doesn't allow the page change */
+            g_signal_stop_emission_by_name (notebook->m_widget,
+                                            "switch_page");
+        }
+        else // change allowed
+        {
+            // make wxNotebook::GetSelection() return the correct (i.e. consistent
+            // with wxNotebookEvent::GetSelection()) value even though the page is
+            // not really changed in GTK+
+            notebook->m_selection = page;
+
+            wxNotebookEvent eventChanged( wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED,
+                                          notebook->GetId(), page, old );
+            eventChanged.SetEventObject( notebook );
+            notebook->GetEventHandler()->ProcessEvent( eventChanged );
+        }
     }

@@ -418,5 +432,5 @@
 }

-int wxNotebook::SetSelection( size_t page )
+int wxNotebook::DoSetSelection( size_t page, wxEventMode send_event )
 {
     wxCHECK_MSG( m_widget != NULL, -1, wxT("invalid notebook") );
@@ -426,8 +440,21 @@
     int selOld = GetSelection();

+    if (send_event == wxDontSend)
+        m_bSkipNextSwitchEvent = true;
+
     // cache the selection
     m_selection = page;
     gtk_notebook_set_page( GTK_NOTEBOOK(m_widget), page );

+#ifdef __WXDEBUG__
+    if (send_event == wxDontSend)
+    {
+            // gtk_notebook_set_current_page will emit the switch-page signal which will be
+            // catched by our gtk_notebook_page_change_callback which should have reset the
+            // flag to false:
+        wxASSERT(!m_bSkipNextSwitchEvent);
+    }
+#endif
+
     wxNotebookPage *client = GetPage(page);
     if ( client )
Index: src/mac/carbon/notebmac.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/notebmac.cpp,v
retrieving revision 1.74
diff -u2 -r1.74 src/mac/carbon/notebmac.cpp
--- src/mac/carbon/notebmac.cpp
+++ src/mac/carbon/notebmac.cpp
@@ -161,20 +161,27 @@
 }

-int wxNotebook::SetSelection(size_t nPage)
+int wxNotebook::DoSetSelection(size_t nPage, wxEventMode send_event)
 {
-    wxCHECK_MSG( IS_VALID_PAGE(nPage), wxNOT_FOUND, wxT("SetSelection: invalid notebook page") );
+    wxCHECK_MSG( IS_VALID_PAGE(nPage), wxNOT_FOUND, wxT("DoSetSelection: invalid notebook page") );

     if ( int(nPage) != m_nSelection )
     {
-        wxNotebookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, m_windowId);
-        event.SetSelection(nPage);
-        event.SetOldSelection(m_nSelection);
-        event.SetEventObject(this);
-        if ( !GetEventHandler()->ProcessEvent(event) || event.IsAllowed() )
+        if (send_event)
         {
-            // program allows the page change
-            event.SetEventType(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED);
-            (void)GetEventHandler()->ProcessEvent(event);
+            wxNotebookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, m_windowId);
+            event.SetSelection(nPage);
+            event.SetOldSelection(m_nSelection);
+            event.SetEventObject(this);
+            if ( !GetEventHandler()->ProcessEvent(event) || event.IsAllowed() )
+            {
+                // program allows the page change
+                event.SetEventType(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED);
+                (void)GetEventHandler()->ProcessEvent(event);

+                ChangePage(m_nSelection, nPage);
+            }
+        }
+        else
+        {
             ChangePage(m_nSelection, nPage);
         }
Index: src/msw/notebook.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/notebook.cpp,v
retrieving revision 1.184
diff -u2 -r1.184 src/msw/notebook.cpp
--- src/msw/notebook.cpp
+++ src/msw/notebook.cpp
@@ -463,4 +463,42 @@
 }

+void wxNotebook::UpdateSelection(size_t newsel)
+{
+    if ( m_nSelection != -1 )
+        m_pages[m_nSelection]->Show(false);
+
+    if ( newsel != -1 )
+    {
+        wxNotebookPage *pPage = m_pages[newsel];
+        pPage->Show(true);
+    }
+
+    // Changing the page should give the focus to it but, as per bug report
+    // http://sf.net/tracker/index.php?func=detail&aid=1150659&group_id=9863&atid=109863,
+    // we should not set the focus to it directly since it erroneously
+    // selects radio buttons and breaks keyboard handling for a notebook's
+    // scroll buttons. So give focus to the notebook and not the page.
+
+    // but don't do this is the notebook is hidden
+    if ( ::IsWindowVisible(GetHwnd()) )
+        SetFocus();
+
+    m_nSelection = newsel;
+}
+
+int wxNotebook::ChangeSelection(size_t nPage)
+{
+    wxCHECK_MSG( IS_VALID_PAGE(nPage), wxNOT_FOUND, wxT("notebook page out of range") );
+
+    if ( int(nPage) != m_nSelection )
+    {
+        TabCtrl_SetCurSel(GetHwnd(), nPage);
+
+        UpdateSelection(nPage);
+    }
+
+    return m_nSelection;
+}
+
 bool wxNotebook::SetPageText(size_t nPage, const wxString& strText)
 {
@@ -1024,33 +1062,12 @@
 void wxNotebook::OnSelChange(wxNotebookEvent& event)
 {
-  // is it our tab control?
-  if ( event.GetEventObject() == this )
-  {
-      int sel = event.GetOldSelection();
-      if ( sel != -1 )
-        m_pages[sel]->Show(false);
-
-      sel = event.GetSelection();
-      if ( sel != -1 )
-      {
-        wxNotebookPage *pPage = m_pages[sel];
-        pPage->Show(true);
-      }
-
-      // Changing the page should give the focus to it but, as per bug report
-      // http://sf.net/tracker/index.php?func=detail&aid=1150659&group_id=9863&atid=109863,
-      // we should not set the focus to it directly since it erroneously
-      // selects radio buttons and breaks keyboard handling for a notebook's
-      // scroll buttons. So give focus to the notebook and not the page.
-
-      // but don't do this is the notebook is hidden
-      if ( ::IsWindowVisible(GetHwnd()) )
-        SetFocus();
-
-      m_nSelection = sel;
-  }
+    // is it our tab control?
+    if ( event.GetEventObject() == this )
+    {
+        UpdateSelection(event.GetSelection());
+    }

-  // we want to give others a chance to process this message as well
-  event.Skip();
+    // we want to give others a chance to process this message as well
+    event.Skip();
 }

Index: src/os2/notebook.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/notebook.cpp,v
retrieving revision 1.29
diff -u2 -r1.29 src/os2/notebook.cpp
--- src/os2/notebook.cpp
+++ src/os2/notebook.cpp
@@ -244,4 +244,20 @@
 } // end of wxNotebook::SetSelection

+int wxNotebook::ChangeSelection( size_t nPage )
+{
+    wxCHECK_MSG( IS_VALID_PAGE(nPage), wxNOT_FOUND, wxT("notebook page out of range") );
+
+    if (nPage != (size_t)m_nSelection)
+    {
+        ::WinSendMsg( GetHWND()
+                ,BKM_TURNTOPAGE
+                ,MPFROMLONG((ULONG)m_alPageId[nPage])
+                        ,(MPARAM)0
+                    );
+    }
+    m_nSelection = nPage;
+    return nPage;
+}
+
 bool wxNotebook::SetPageText( size_t nPage,
                               const wxString& rsStrText )
Index: src/palmos/notebook.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/palmos/notebook.cpp,v
retrieving revision 1.7
diff -u2 -r1.7 src/palmos/notebook.cpp
--- src/palmos/notebook.cpp
+++ src/palmos/notebook.cpp
@@ -195,4 +195,9 @@
 }

+int wxNotebook::ChangeSelection(size_t nPage)
+{
+    return 0;
+}
+
 bool wxNotebook::SetPageText(size_t nPage, const wxString& strText)
 {
Index: src/univ/notebook.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/univ/notebook.cpp,v
retrieving revision 1.43
diff -u2 -r1.43 src/univ/notebook.cpp
--- src/univ/notebook.cpp
+++ src/univ/notebook.cpp
@@ -234,5 +234,5 @@
 // ----------------------------------------------------------------------------

-int wxNotebook::SetSelection(size_t nPage)
+int wxNotebook::DoSetSelection(size_t nPage, wxEventMode send_event)
 {
     wxCHECK_MSG( IS_VALID_PAGE(nPage), wxNOT_FOUND, _T("invalid notebook page") );
@@ -244,13 +244,16 @@
     }

-    // event handling
     wxNotebookEvent event(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGING, m_windowId);
-    event.SetSelection(nPage);
-    event.SetOldSelection(m_sel);
-    event.SetEventObject(this);
-    if ( GetEventHandler()->ProcessEvent(event) && !event.IsAllowed() )
+    if (send_event)
     {
-        // program doesn't allow the page change
-        return m_sel;
+        // event handling
+        event.SetSelection(nPage);
+        event.SetOldSelection(m_sel);
+        event.SetEventObject(this);
+        if ( GetEventHandler()->ProcessEvent(event) && !event.IsAllowed() )
+        {
+            // program doesn't allow the page change
+            return m_sel;
+        }
     }

@@ -298,7 +301,10 @@
     }

-    // event handling
-    event.SetEventType(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED);
-    GetEventHandler()->ProcessEvent(event);
+    if (send_event)
+    {
+        // event handling
+        event.SetEventType(wxEVT_COMMAND_NOTEBOOK_PAGE_CHANGED);
+        GetEventHandler()->ProcessEvent(event);
+    }

     return selOld;

 	  	 
