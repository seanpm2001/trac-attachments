Index: include/wx/datectrl.h
===================================================================
--- include/wx/datectrl.h	(revision 53987)
+++ include/wx/datectrl.h	(working copy)
@@ -16,13 +16,6 @@
 
 #if wxUSE_DATEPICKCTRL
 
-// this is currently defined in wx/msw/setup.h but not for MSW configure builds
-// and other ports which only have the generic version anyhow, so provide a
-// fallback definition here for them
-#ifndef wxUSE_DATEPICKCTRL_GENERIC
-    #define wxUSE_DATEPICKCTRL_GENERIC 0
-#endif
-
 #include "wx/control.h"         // the base class
 #include "wx/datetime.h"
 
@@ -83,34 +76,13 @@
 
 #if defined(__WXPALMOS__)
     #include "wx/palmos/datectrl.h"
-
     #define wxHAS_NATIVE_DATEPICKCTRL
 #elif defined(__WXMSW__) && !defined(__WXUNIVERSAL__)
     #include "wx/msw/datectrl.h"
-
     #define wxHAS_NATIVE_DATEPICKCTRL
 #else
     #include "wx/generic/datectrl.h"
-
-    class WXDLLIMPEXP_ADV wxDatePickerCtrl : public wxDatePickerCtrlGeneric
-    {
-    public:
-        wxDatePickerCtrl() { }
-        wxDatePickerCtrl(wxWindow *parent,
-                         wxWindowID id,
-                         const wxDateTime& date = wxDefaultDateTime,
-                         const wxPoint& pos = wxDefaultPosition,
-                         const wxSize& size = wxDefaultSize,
-                         long style = wxDP_DEFAULT | wxDP_SHOWCENTURY,
-                         const wxValidator& validator = wxDefaultValidator,
-                         const wxString& name = wxDatePickerCtrlNameStr)
-            : wxDatePickerCtrlGeneric(parent, id, date, pos, size, style, validator, name)
-        {
-        }
-
-    private:
-        DECLARE_DYNAMIC_CLASS_NO_COPY(wxDatePickerCtrl)
-    };
+    #define wxDatePickerCtrl wxDatePickerCtrlGeneric
 #endif
 
 #endif // wxUSE_DATEPICKCTRL
Index: include/wx/generic/datectrl.h
===================================================================
--- include/wx/generic/datectrl.h	(revision 53987)
+++ include/wx/generic/datectrl.h	(working copy)
@@ -12,10 +12,9 @@
 #ifndef _WX_GENERIC_DATECTRL_H_
 #define _WX_GENERIC_DATECTRL_H_
 
-class WXDLLIMPEXP_FWD_ADV wxCalendarDateAttr;
-class WXDLLIMPEXP_FWD_ADV wxGenericCalendarCtrl;
-class WXDLLIMPEXP_FWD_ADV wxCalendarEvent;
-class WXDLLIMPEXP_FWD_CORE wxComboCtrl;
+#include "wx/calctrl.h"
+#include "wx/combo.h"
+
 class WXDLLIMPEXP_FWD_ADV wxCalendarComboPopup;
 
 class WXDLLIMPEXP_ADV wxDatePickerCtrlGeneric : public wxDatePickerCtrlBase
@@ -59,7 +58,7 @@
 
     // extra methods available only in this (generic) implementation
     bool SetFormat(const wxString& fmt);
-    wxGenericCalendarCtrl *GetCalendar() const;
+    wxCalendarCtrl *GetCalendar() const;
 
 
     // implementation only from now on
@@ -81,7 +80,7 @@
     wxComboCtrl* m_combo;
     wxCalendarComboPopup* m_popup;
 
-
+    DECLARE_DYNAMIC_CLASS(wxDatePickerCtrlGeneric)
     DECLARE_EVENT_TABLE()
     DECLARE_NO_COPY_CLASS(wxDatePickerCtrlGeneric)
 };
Index: src/generic/datectlg.cpp
===================================================================
--- src/generic/datectlg.cpp	(revision 53987)
+++ src/generic/datectlg.cpp	(working copy)
@@ -25,13 +25,6 @@
 
 #if wxUSE_DATEPICKCTRL
 
-#include "wx/datectrl.h"
-
-// use this version if we're explicitly requested to do it or if it's the only
-// one we have
-#if !defined(wxHAS_NATIVE_DATEPICKCTRL) || \
-        (defined(wxUSE_DATEPICKCTRL_GENERIC) && wxUSE_DATEPICKCTRL_GENERIC)
-
 #ifndef WX_PRECOMP
     #include "wx/dialog.h"
     #include "wx/dcmemory.h"
@@ -40,27 +33,14 @@
     #include "wx/valtext.h"
 #endif
 
-#ifdef wxHAS_NATIVE_DATEPICKCTRL
-    // this header is not included from wx/datectrl.h if we have a native
-    // version, but we do need it here
-    #include "wx/generic/datectrl.h"
-#endif
+#include "wx/datectrl.h"
+#include "wx/generic/datectrl.h"
 
-#include "wx/dateevt.h"
 
-#include "wx/calctrl.h"
-#include "wx/generic/calctrlg.h"
-#include "wx/combo.h"
-
 // ----------------------------------------------------------------------------
 // constants
 // ----------------------------------------------------------------------------
 
-#if defined(__WXMSW__)
-    #define CALBORDER         0
-#else
-    #define CALBORDER         4
-#endif
 
 // ----------------------------------------------------------------------------
 // global variables
@@ -71,12 +51,12 @@
 // local classes
 // ----------------------------------------------------------------------------
 
-class wxCalendarComboPopup : public wxGenericCalendarCtrl,
+class wxCalendarComboPopup : public wxCalendarCtrl,
                              public wxComboPopup
 {
 public:
 
-    wxCalendarComboPopup() : wxGenericCalendarCtrl(),
+    wxCalendarComboPopup() : wxCalendarCtrl(),
                              wxComboPopup()
     {
     }
@@ -90,45 +70,16 @@
     //     certainly introduce new bugs.
     virtual bool Create(wxWindow* parent)
     {
-        if ( !wxGenericCalendarCtrl::Create(parent, wxID_ANY, wxDefaultDateTime,
+        if ( !wxCalendarCtrl::Create(parent, wxID_ANY, wxDefaultDateTime,
                               wxPoint(0, 0), wxDefaultSize,
-                              wxCAL_SHOW_HOLIDAYS | wxBORDER_SUNKEN) )
+                              wxCAL_SEQUENTIAL_MONTH_SELECTION 
+                              | wxCAL_SHOW_HOLIDAYS | wxBORDER_SUNKEN) )
             return false;
 
-        wxWindow *yearControl = wxGenericCalendarCtrl::GetYearControl();
-
-        wxClientDC dc(yearControl);
-        dc.SetFont(yearControl->GetFont());
-        wxCoord width, dummy;
-        dc.GetTextExtent(wxT("2000"), &width, &dummy);
-        width += ConvertDialogToPixels(wxSize(20, 0)).x;
-
-        wxSize calSize = wxGenericCalendarCtrl::GetBestSize();
-        wxSize yearSize = yearControl->GetSize();
-        yearSize.x = width;
-
-        wxPoint yearPosition = yearControl->GetPosition();
-
         SetFormat("%x");
 
-        width = yearPosition.x + yearSize.x+2+CALBORDER/2;
-        if (width < calSize.x-4)
-            width = calSize.x-4;
+        m_useSize  = wxCalendarCtrl::GetBestSize();
 
-        int calPos = (width-calSize.x)/2;
-        if (calPos == -1)
-        {
-            calPos = 0;
-            width += 2;
-        }
-        wxGenericCalendarCtrl::SetSize(calPos, 0, calSize.x, calSize.y);
-        yearControl->SetSize(width-yearSize.x-CALBORDER/2, yearPosition.y,
-                             yearSize.x, yearSize.y);
-        wxGenericCalendarCtrl::GetMonthControl()->Move(0, 0);
-
-        m_useSize.x = width+CALBORDER/2;
-        m_useSize.y = calSize.y-2+CALBORDER;
-
         wxWindow* tx = m_combo->GetTextCtrl();
         if ( !tx )
             tx = m_combo;
@@ -345,7 +305,7 @@
 };
 
 
-BEGIN_EVENT_TABLE(wxCalendarComboPopup, wxGenericCalendarCtrl)
+BEGIN_EVENT_TABLE(wxCalendarComboPopup, wxCalendarCtrl)
     EVT_KEY_DOWN(wxCalendarComboPopup::OnCalKey)
     EVT_CALENDAR_SEL_CHANGED(wxID_ANY, wxCalendarComboPopup::OnSelChange)
     EVT_CALENDAR_PAGE_CHANGED(wxID_ANY, wxCalendarComboPopup::OnSelChange)
@@ -363,9 +323,7 @@
     EVT_SET_FOCUS(wxDatePickerCtrlGeneric::OnFocus)
 END_EVENT_TABLE()
 
-#ifndef wxHAS_NATIVE_DATEPICKCTRL
-    IMPLEMENT_DYNAMIC_CLASS(wxDatePickerCtrl, wxControl)
-#endif
+IMPLEMENT_DYNAMIC_CLASS(wxDatePickerCtrlGeneric, wxDatePickerCtrlBase)
 
 // ----------------------------------------------------------------------------
 // creation
@@ -469,11 +427,7 @@
 
 bool wxDatePickerCtrlGeneric::GetRange(wxDateTime *dt1, wxDateTime *dt2) const
 {
-    if (dt1)
-        *dt1 = m_popup->GetLowerDateLimit();
-    if (dt2)
-        *dt2 = m_popup->GetUpperDateLimit();
-    return true;
+    return m_popup->GetDateRange(dt1, dt2);
 }
 
 
@@ -483,7 +437,7 @@
     m_popup->SetDateRange(dt1, dt2);
 }
 
-wxGenericCalendarCtrl *wxDatePickerCtrlGeneric::GetCalendar() const
+wxCalendarCtrl *wxDatePickerCtrlGeneric::GetCalendar() const
 {
     return m_popup;
 }
@@ -524,7 +478,5 @@
 }
 
 
-#endif // wxUSE_DATEPICKCTRL_GENERIC
-
 #endif // wxUSE_DATEPICKCTRL
 
