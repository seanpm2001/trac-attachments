Index: samples/grid/griddemo.cpp
===================================================================
--- samples/grid/griddemo.cpp	(revision 73350)
+++ samples/grid/griddemo.cpp	(working copy)
@@ -211,6 +211,11 @@
     EVT_MENU( ID_SIZE_LABELS_ROW, GridFrame::AutoSizeLabelsRow )
     EVT_MENU( ID_SIZE_GRID, GridFrame::AutoSizeTable )
 
+    EVT_MENU( ID_HIDECOL, GridFrame::HideCol )
+    EVT_MENU( ID_SHOWCOL, GridFrame::ShowCol )
+    EVT_MENU( ID_HIDEROW, GridFrame::HideRow )
+    EVT_MENU( ID_SHOWROW, GridFrame::ShowRow )
+
     EVT_MENU( ID_SET_HIGHLIGHT_WIDTH, GridFrame::OnSetHighlightWidth)
     EVT_MENU( ID_SET_RO_HIGHLIGHT_WIDTH, GridFrame::OnSetROHighlightWidth)
 
@@ -293,7 +298,10 @@
     viewMenu->AppendCheckItem(ID_AUTOSIZECOLS, "&Auto-size cols");
     viewMenu->AppendCheckItem(ID_CELLOVERFLOW, "&Overflow cells");
     viewMenu->AppendCheckItem(ID_RESIZECELL, "&Resize cell (7,1)");
-
+    viewMenu->Append(ID_HIDECOL, "&Hide Column A");
+    viewMenu->Append(ID_SHOWCOL, "&Show Column A");
+    viewMenu->Append(ID_HIDEROW, "&Hide Row 2");
+    viewMenu->Append(ID_SHOWROW, "&Show Row 2");
     wxMenu *rowLabelMenu = new wxMenu;
 
     viewMenu->Append( ID_ROWLABELALIGN, wxT("R&ow label alignment"),
@@ -2309,3 +2317,23 @@
              m_gridBitmap.GetHeight(),
              &memDc, 0, 0 );
 }
+
+void GridFrame::HideCol( wxCommandEvent& WXUNUSED(event) )
+{
+    grid->HideCol(0);  
+}
+
+void GridFrame::ShowCol( wxCommandEvent& WXUNUSED(event) )
+{
+    grid->ShowCol(0);  
+}
+
+void GridFrame::HideRow( wxCommandEvent& WXUNUSED(event) )
+{
+    grid->HideRow(1);
+}
+
+void GridFrame::ShowRow( wxCommandEvent& WXUNUSED(event) )
+{
+    grid->ShowRow(1);
+}
Index: samples/grid/griddemo.h
===================================================================
--- samples/grid/griddemo.h	(revision 73350)
+++ samples/grid/griddemo.h	(working copy)
@@ -88,6 +88,12 @@
     void AutoSizeLabelsRow(wxCommandEvent& event);
     void AutoSizeTable(wxCommandEvent& event);
 
+    void HideCol(wxCommandEvent& event);
+    void ShowCol(wxCommandEvent& event);
+    void HideRow(wxCommandEvent& event);
+    void ShowRow(wxCommandEvent& event);
+
+
     void OnLabelLeftClick( wxGridEvent& );
     void OnCellLeftClick( wxGridEvent& );
     void OnRowSize( wxGridSizeEvent& );
@@ -131,6 +137,10 @@
         ID_TOGGLEGRIDLINES,
         ID_AUTOSIZECOLS,
         ID_CELLOVERFLOW,
+        ID_HIDECOL,
+        ID_SHOWCOL,
+        ID_HIDEROW,
+        ID_SHOWROW,
         ID_RESIZECELL,
         ID_SETLABELCOLOUR,
         ID_SETLABELTEXTCOLOUR,
Index: src/generic/grid.cpp
===================================================================
--- src/generic/grid.cpp	(revision 73350)
+++ src/generic/grid.cpp	(working copy)
@@ -8106,7 +8106,8 @@
         // We're showing back a previously hidden row/column.
         wxASSERT_MSG( sizeNew == -1, wxS("New size must be positive or -1.") );
 
-        wxASSERT_MSG( sizeCurrent < 0, wxS("May only show back if hidden.") );
+        // it's already visible so do nothing
+        if ( sizeCurrent>=0 ) return 0;
 
         sizeCurrent = -sizeCurrent;
 
@@ -8116,8 +8117,10 @@
     else if ( sizeNew == 0 )
     {
         // We're hiding a row/column.
-        wxASSERT_MSG( sizeCurrent > 0, wxS("Can't hide if already hidden.") );
 
+        // it's already hidden so do nothing
+        if ( sizeCurrent<1 ) return 0;
+
         sizeCurrent = -sizeCurrent;
 
         // This is negative which is correct.
