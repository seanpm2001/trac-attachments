Index: src/msw/filedlg.cpp
===================================================================
--- src/msw/filedlg.cpp	(revision 55204)
+++ src/msw/filedlg.cpp	(working copy)
@@ -86,6 +86,13 @@
 {
     switch ( iMsg )
     {
+		case WM_INITDIALOG:
+			{
+				wxFileDialog *const fd = wx_reinterpret_cast(wxFileDialog *, wx_reinterpret_cast(OPENFILENAME *, lParam)->lCustData);
+				fd->MSWOnInitDialogHook(hDlg);
+			}
+			break;
+
         case WM_NOTIFY:
             {
                 OFNOTIFY *pNotifyCode = wx_reinterpret_cast(OFNOTIFY *, lParam);
@@ -354,6 +361,21 @@
     return true;
 }
 
+void wxFileDialog::MSWOnInitDialogHook(WXHWND hwnd)
+{
+	SetHWND(hwnd);
+
+	const bool b = CreateExtraControl();
+	wxASSERT(b);
+
+	//m_extraControl->GetSizer()->RecalcSizes();
+	//const wxSize s = m_extraControl->GetSize();
+
+	//this->SetSize(s);
+
+	SetHWND(NULL);
+}
+
 int wxFileDialog::ShowModal()
 {
     HWND hWnd = 0;
@@ -415,6 +437,50 @@
     of.lpstrFileTitle    = titleBuffer;
     of.nMaxFileTitle     = wxMAXFILE + 1 + wxMAXEXT;
 
+	if ( m_extraControlCreator )
+	{
+		msw_flags |= OFN_ENABLETEMPLATEHANDLE|OFN_EXPLORER|OFN_ENABLEHOOK
+			|OFN_ENABLESIZING;	// must be specified when OFN_ENABLEHOOK is, see docs
+
+		//extraControl->GetSizer()->RecalcSizes();
+		//const wxSize s = extraControl->GetSize();
+		const wxSize s(300, 100);
+
+		HGLOBAL hgbl;
+		LPDLGTEMPLATE lpdt;
+		LPDLGITEMTEMPLATE lpdit;
+		LPWORD lpw;
+		LPWSTR lpwsz;
+		//LRESULT ret;
+		int nchar;
+
+		// TODO: Free this
+		hgbl = GlobalAlloc(GMEM_ZEROINIT, 256);
+		wxASSERT(hgbl);
+		//if (!hgbl)
+			//return LPDLGTEMPLATE(-1);
+	 
+		lpdt = (LPDLGTEMPLATE)GlobalLock(hgbl);
+	 
+		// Define a dialog box.
+	 
+		lpdt->style = DS_CONTROL | WS_CHILD | WS_CLIPSIBLINGS;
+		lpdt->cdit = 0;         // Number of controls
+		lpdt->x  = 0;  lpdt->y  = 0;
+		lpdt->cx = s.GetWidth();	// not really needed(doesn't affect dialog size) but do it anyway.
+		lpdt->cy = s.GetHeight();
+		//lpdt->dwExtendedStyle = WS_EX_STATICEDGE;
+		
+		lpw = (LPWORD)(lpdt + 1);
+		*lpw++ = 0;             // No menu
+		*lpw++ = 0;             // Predefined dialog box class (by default)
+		*lpw++ = 0;				// No title
+		
+		GlobalUnlock(hgbl);
+
+		of.hInstance = (HINSTANCE)(LPDLGTEMPLATE)hgbl;
+	}
+
     // Convert forward slashes to backslashes (file selector doesn't like
     // forward slashes) and also squeeze multiple consecutive slashes into one
     // as it doesn't like two backslashes in a row neither
Index: include/wx/msw/filedlg.h
===================================================================
--- include/wx/msw/filedlg.h	(revision 55204)
+++ include/wx/msw/filedlg.h	(working copy)
@@ -32,6 +32,8 @@
     virtual void SetPath(const wxString& path);
     virtual void GetPaths(wxArrayString& paths) const;
     virtual void GetFilenames(wxArrayString& files) const;
+    virtual bool SupportsExtraControl() const { return true; }
+	void MSWOnInitDialogHook(WXHWND hwnd);
 
     virtual int ShowModal();
 
Index: include/wx/filedlg.h
===================================================================
--- include/wx/filedlg.h	(revision 55204)
+++ include/wx/filedlg.h	(working copy)
@@ -156,8 +156,8 @@
     // returns true if control is created (if it already exists returns false)
     bool CreateExtraControl();
 
+	ExtraControlCreatorFunction m_extraControlCreator;
 private:
-    ExtraControlCreatorFunction m_extraControlCreator;
 
     void Init();
     DECLARE_DYNAMIC_CLASS(wxFileDialogBase)
