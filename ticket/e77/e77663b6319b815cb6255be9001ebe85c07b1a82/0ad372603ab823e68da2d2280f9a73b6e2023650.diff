Index: src/msw/filedlg.cpp
===================================================================
--- src/msw/filedlg.cpp	(revision 57237)
+++ src/msw/filedlg.cpp	(working copy)
@@ -86,6 +86,14 @@
 {
     switch ( iMsg )
     {
+        case WM_INITDIALOG:
+            {
+                OPENFILENAME* ofn = reinterpret_cast<OPENFILENAME *>(lParam);
+                reinterpret_cast<wxFileDialog *>(ofn->lCustData)
+                    ->MSWOnInitDialogHook((WXHWND)hDlg);
+            }
+            break;
+
         case WM_NOTIFY:
             {
                 OFNOTIFY *pNotifyCode = reinterpret_cast<OFNOTIFY *>(lParam);
@@ -360,6 +368,15 @@
     return true;
 }
 
+void wxFileDialog::MSWOnInitDialogHook(WXHWND hwnd)
+{
+   SetHWND(hwnd);
+
+   CreateExtraControl();
+
+   SetHWND(NULL);
+}
+
 int wxFileDialog::ShowModal()
 {
     HWND hWnd = 0;
@@ -385,7 +402,7 @@
         in the upper left of the frame, it does not center
         automatically.
     */
-    if (m_bMovedWindow) // we need these flags.
+    if (m_bMovedWindow || m_extraControlCreator) // we need these flags.
     {
         msw_flags |= OFN_EXPLORER|OFN_ENABLEHOOK;
 #ifndef __WXWINCE__
@@ -421,6 +438,34 @@
     of.lpstrFileTitle    = titleBuffer;
     of.nMaxFileTitle     = wxMAXFILE + 1 + wxMAXEXT;
 
+   if ( m_extraControlCreator )
+   {
+       msw_flags |= OFN_ENABLETEMPLATEHANDLE; 
+
+       // TODO: call GlobalFree()
+       HGLOBAL hgbl = GlobalAlloc(GMEM_ZEROINIT, 256);
+       wxASSERT(hgbl);
+
+       LPDLGTEMPLATE lpdt = (LPDLGTEMPLATE)GlobalLock(hgbl);
+ 
+       // Define a dialog box.
+
+       lpdt->style = DS_CONTROL | /*DS_3DLOOK |*/ WS_CHILD | WS_CLIPSIBLINGS;
+       lpdt->cdit = 0;         // Number of controls
+       lpdt->x = 0;  
+       lpdt->y = 0;
+       // apparently changing cx and cy does not has any effect
+       lpdt->cx = gs_rectDialog.width; 
+       lpdt->cy = 100;
+
+       // after the DLGTEMPLATE there are 3 additional WORDs for dialog menu, 
+       // class and title, all three set to zeros.
+
+       GlobalUnlock(hgbl);
+
+       of.hInstance = (HINSTANCE)(LPDLGTEMPLATE)hgbl;
+   }
+
     // Convert forward slashes to backslashes (file selector doesn't like
     // forward slashes) and also squeeze multiple consecutive slashes into one
     // as it doesn't like two backslashes in a row neither
Index: include/wx/msw/filedlg.h
===================================================================
--- include/wx/msw/filedlg.h	(revision 57237)
+++ include/wx/msw/filedlg.h	(working copy)
@@ -32,6 +32,8 @@
     virtual void SetPath(const wxString& path);
     virtual void GetPaths(wxArrayString& paths) const;
     virtual void GetFilenames(wxArrayString& files) const;
+    virtual bool SupportsExtraControl() const { return true; }
+    void MSWOnInitDialogHook(WXHWND hwnd);
 
     virtual int ShowModal();
 
Index: include/wx/filedlg.h
===================================================================
--- include/wx/filedlg.h	(revision 57237)
+++ include/wx/filedlg.h	(working copy)
@@ -152,12 +152,12 @@
     wxString      m_wildCard;
     int           m_filterIndex;
     wxWindow*     m_extraControl;
+    ExtraControlCreatorFunction m_extraControlCreator;
 
     // returns true if control is created (if it already exists returns false)
     bool CreateExtraControl();
 
 private:
-    ExtraControlCreatorFunction m_extraControlCreator;
 
     void Init();
     DECLARE_DYNAMIC_CLASS(wxFileDialogBase)
