Index: wxWidgets-trunk/src/common/wfstream.cpp
===================================================================
--- wxWidgets-trunk/src/common/wfstream.cpp	(revision 62953)
+++ wxWidgets-trunk/src/common/wfstream.cpp	(working copy)
@@ -237,6 +237,21 @@
     return wxFileOutputStream::IsOk() && wxFileInputStream::IsOk();
 }
 
+wxFileOffset wxFileStream::GetLength() const
+{
+    return wxFileInputStream::m_file->Length();
+}
+
+wxFileOffset wxFileStream::OnSysSeek(wxFileOffset pos, wxSeekMode mode)
+{
+    return wxFileInputStream::m_file->Seek(pos, mode);
+}
+
+wxFileOffset wxFileStream::OnSysTell() const
+{
+    return wxFileInputStream::m_file->Tell();
+}
+
 #endif // wxUSE_FILE
 
 #if wxUSE_FFILE
Index: wxWidgets-trunk/include/wx/wfstream.h
===================================================================
--- wxWidgets-trunk/include/wx/wfstream.h	(revision 62953)
+++ wxWidgets-trunk/include/wx/wfstream.h	(working copy)
@@ -117,7 +117,13 @@
 public:
     wxFileStream(const wxString& fileName);
     virtual bool IsOk() const;
+    bool IsSeekable() const { return wxFileInputStream::m_file->GetKind() == wxFILE_KIND_DISK; }
+    wxFileOffset GetLength() const;
 
+protected:
+    wxFileOffset OnSysSeek(wxFileOffset pos, wxSeekMode mode);
+    wxFileOffset OnSysTell() const;
+
 private:
     wxDECLARE_NO_COPY_CLASS(wxFileStream);
 };
Index: wxWidgets-trunk/interface/wx/wfstream.h
===================================================================
--- wxWidgets-trunk/interface/wx/wfstream.h	(revision 62953)
+++ wxWidgets-trunk/interface/wx/wfstream.h	(working copy)
@@ -278,14 +278,16 @@
 /**
     @class wxFileStream
 
-    @todo describe this class.
+    This class represents data that can be both read from and written to a file.
+    There are actually two such groups of classes: this one is based on wxFile
+    whereas wxFFileStream is based in the wxFFile class.
 
     @library{wxbase}
     @category{streams}
 
-    @see wxStreamBuffer
+    @see wxFileInputStream, wxFileOutputStream, wxFFileStream
 */
-class wxFileStream : public wxFileOutputStream
+class wxFileStream : public wxFileOutputStream, wxFileInputStream
 {
 public:
     /**
@@ -293,8 +295,13 @@
         @a iofileName name.
         
         @warning
-        You should use wxStreamBase::IsOk() to verify if the constructor succeeded.
+        You should use IsOk() to verify if the constructor succeeded.
     */
     wxFileStream(const wxString& iofileName);
+
+    /**
+        Returns @true if the stream is initialized and ready.
+    */
+    bool IsOk() const;
 };
 
