From 102e5e42ac74c90d2df2b90ef8cc904a45cb7537 Mon Sep 17 00:00:00 2001
From: Carsten Fuchs <carsten.fuchs@cafu.de>
Date: Thu, 14 Aug 2014 19:50:19 +0200
Subject: [PATCH 1/8] Re-implement wxDataViewTreeNode::GetSubTreeCount() to
 find the answer dynamically.

The yield of this change is smaller than initially expected, but it removes
any danger of mismatches between the previously kept member
m_branchData->subTreeCount and the actual count, and it liberates all other
code from the responsibility of properly maintaining the correct count itself.
---
 src/generic/datavgen.cpp | 55 ++++++++++++------------------------------------
 1 file changed, 14 insertions(+), 41 deletions(-)

diff --git a/src/generic/datavgen.cpp b/src/generic/datavgen.cpp
index 4e15c71..60d9901 100644
--- a/src/generic/datavgen.cpp
+++ b/src/generic/datavgen.cpp
@@ -483,23 +483,7 @@ public:
 
         wxCHECK_RET( m_branchData != NULL, "can't open leaf node" );
 
-        int sum = 0;
-
-        const wxDataViewTreeNodes& nodes = m_branchData->children;
-        const int len = nodes.GetCount();
-        for ( int i = 0;i < len; i ++)
-            sum += 1 + nodes[i]->GetSubTreeCount();
-
-        if (m_branchData->open)
-        {
-            ChangeSubTreeCount(-sum);
-            m_branchData->open = !m_branchData->open;
-        }
-        else
-        {
-            m_branchData->open = !m_branchData->open;
-            ChangeSubTreeCount(+sum);
-        }
+        m_branchData->open = !m_branchData->open;
     }
 
     // "HasChildren" property corresponds to model's IsContainer(). Note that it may be true
@@ -526,23 +510,22 @@ public:
         }
     }
 
+    // Total count of expanded (i.e. visible with the help of some
+    // scrolling) items in the subtree, but excluding this node. I.e. it is
+    // 0 for leaves and is the number of rows the subtree occupies for
+    // branch nodes.
     int GetSubTreeCount() const
     {
-        return m_branchData ? m_branchData->subTreeCount : 0;
-    }
+        if (!m_branchData) return 0;        // It's a leaf.
+        if (!m_branchData->open) return 0;  // It's a node, but closed.
 
-    void ChangeSubTreeCount( int num )
-    {
-        wxASSERT( m_branchData != NULL );
+        const wxDataViewTreeNodes& children = m_branchData->children;
+        int count = children.GetCount();
 
-        if( !m_branchData->open )
-            return;
-
-        m_branchData->subTreeCount += num;
-        wxASSERT( m_branchData->subTreeCount >= 0 );
+        for (size_t i = 0; i < children.GetCount(); i++)
+            count += children[i]->GetSubTreeCount();
 
-        if( m_parent )
-            m_parent->ChangeSubTreeCount(num);
+        return count;
     }
 
     void Resort()
@@ -576,8 +559,7 @@ private:
     struct BranchNodeData
     {
         BranchNodeData()
-            : open(false),
-              subTreeCount(0)
+            : open(false)
         {
         }
 
@@ -587,12 +569,6 @@ private:
 
         // Is the branch node currently open (expanded)?
         bool                 open;
-
-        // Total count of expanded (i.e. visible with the help of some
-        // scrolling) items in the subtree, but excluding this node. I.e. it is
-        // 0 for leaves and is the number of rows the subtree occupies for
-        // branch nodes.
-        int                  subTreeCount;
     };
 
     BranchNodeData *m_branchData;
@@ -2349,7 +2325,6 @@ bool wxDataViewMainWindow::ItemAdded(const wxDataViewItem & parent, const wxData
             }
         }
 
-        parentNode->ChangeSubTreeCount(+1);
         parentNode->InsertChild(itemNode, nodePos);
 
         m_count = -1;
@@ -2438,7 +2413,6 @@ bool wxDataViewMainWindow::ItemDeleted(const wxDataViewItem& parent,
 
         parentNode->RemoveChild(itemNode);
         delete itemNode;
-        parentNode->ChangeSubTreeCount(-itemsDeleted);
 
         // Make the row number invalid and get a new valid one when user call GetRowCount
         m_count = -1;
@@ -3536,7 +3510,7 @@ static void BuildTreeHelper( const wxDataViewModel * model,  const wxDataViewIte
         return;
 
     wxDataViewItemArray children;
-    unsigned int num = model->GetChildren( item, children);
+    const unsigned int num = model->GetChildren( item, children);
 
     for ( unsigned int index = 0; index < num; index++ )
     {
@@ -3549,7 +3523,6 @@ static void BuildTreeHelper( const wxDataViewModel * model,  const wxDataViewIte
     }
 
     wxASSERT( node->IsOpen() );
-    node->ChangeSubTreeCount(+num);
 }
 
 void wxDataViewMainWindow::BuildTree(wxDataViewModel * model)
-- 
1.8.4.msysgit.0

