From 27267855f89a3a2036b906d159a93fdeb46bf826 Mon Sep 17 00:00:00 2001
From: Carsten Fuchs <carsten.fuchs@cafu.de>
Date: Fri, 15 Aug 2014 11:36:47 +0200
Subject: [PATCH 8/8] Remove wxDataViewTreeNode related code that is no longer
 needed.

The wxDataViewTreeNode is always kept matching the same structure as the
user's model, no more lazy "realization" on expansion anymore, so the
code removed in this commit is no longer needed.
---
 src/generic/datavgen.cpp | 43 ++-----------------------------------------
 1 file changed, 2 insertions(+), 41 deletions(-)

diff --git a/src/generic/datavgen.cpp b/src/generic/datavgen.cpp
index 47732ee..2b2c18c 100644
--- a/src/generic/datavgen.cpp
+++ b/src/generic/datavgen.cpp
@@ -472,6 +472,7 @@ public:
     }
 
     // returns position of child node for given item in children list or wxNOT_FOUND
+    // (ItemAdded() is the only user of this method.)
     int FindChildByItem(const wxDataViewItem& item) const
     {
         const int len = m_children.size();
@@ -564,7 +565,7 @@ private:
     // This children of this node. Zero children indicates that this is a leaf node.
     wxDataViewTreeNodes  m_children;
 
-    // Is the branch node currently open (expanded)?
+    // Is the node currently open (expanded)?
     bool                 m_open;
 };
 
@@ -1407,10 +1408,6 @@ void wxDataViewRenameTimer::Notify()
 // wxDataViewMainWindow
 //-----------------------------------------------------------------------------
 
-// The tree building helper, declared firstly
-static void BuildTreeHelper( const wxDataViewModel * model,  const wxDataViewItem & item,
-                             wxDataViewTreeNode * node);
-
 int LINKAGEMODE wxDataViewSelectionCmp( unsigned int row1, unsigned int row2 )
 {
     if (row1 > row2) return 1;
@@ -3144,13 +3141,6 @@ void wxDataViewMainWindow::Expand( unsigned int row )
 
         node->ToggleOpen();
 
-        // build the children of current node
-        if( node->GetChildNodes().empty() )
-        {
-            SortPrepare();
-            ::BuildTreeHelper(GetModel(), node->GetItem(), node);
-        }
-
         // By expanding the node all row indices that are currently in the selection list
         // and are greater than our node have become invalid. So we have to correct that now.
         const unsigned rowAdjustment = node->GetSubTreeCount();
@@ -3273,15 +3263,6 @@ wxDataViewTreeNode * wxDataViewMainWindow::FindNode( const wxDataViewItem & item
     {
         if( node->HasChildren() )
         {
-            if( node->GetChildNodes().empty() )
-            {
-                // Even though the item is a container, it doesn't have any
-                // child nodes in the control's representation yet. We have
-                // to realize its subtree now.
-                SortPrepare();
-                ::BuildTreeHelper(model, node->GetItem(), node);
-            }
-
             const wxDataViewTreeNodes& nodes = node->GetChildNodes();
             bool found = false;
 
@@ -3489,25 +3470,6 @@ int wxDataViewMainWindow::GetRowByItem(const wxDataViewItem & item) const
     }
 }
 
-static void BuildTreeHelper( const wxDataViewModel * model,  const wxDataViewItem & item,
-                             wxDataViewTreeNode * node)
-{
-    if( !model->IsContainer( item ) )
-        return;
-
-    wxDataViewItemArray children;
-    const unsigned int num = model->GetChildren( item, children);
-
-    for ( unsigned int index = 0; index < num; index++ )
-    {
-        wxDataViewTreeNode *n = new wxDataViewTreeNode(node, children[index]);
-
-        node->InsertChild(n, index);
-    }
-
-    wxASSERT( node->IsOpen() );
-}
-
 void wxDataViewMainWindow::BuildTree(wxDataViewModel * model)
 {
     DestroyTree();
@@ -3520,7 +3482,6 @@ void wxDataViewMainWindow::BuildTree(wxDataViewModel * model)
 
     m_root = wxDataViewTreeNode::CreateRootNode();
 
-    // First we define a invalid item to fetch the top-level elements
     SortPrepare();
     m_root->AlignTree(model);
     m_count = -1;
-- 
1.8.4.msysgit.0

