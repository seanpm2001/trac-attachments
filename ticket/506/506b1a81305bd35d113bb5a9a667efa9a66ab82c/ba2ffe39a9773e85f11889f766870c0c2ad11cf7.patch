From 57bead1ca321cfa60d38f6116c6953737ee05d21 Mon Sep 17 00:00:00 2001
From: Carsten Fuchs <carsten.fuchs@cafu.de>
Date: Sat, 16 Aug 2014 11:57:20 +0200
Subject: [PATCH 9/9] Move the FindNode() method from wxDataViewMainWindow to
 wxDataViewTreeNode, and replace the implementation.

The key issue here is that the previous implementation tried to exploit the
relationship of the internal wxDataViewTreeNode tree to the user's model for
the sake of better performance. However, as before, this only works if the
user's implementation of the wxDataViewModel is highly conformant to the
intrinsics of the implementation, which is almost impossible to achieve in the
general case.

The new implementation does not take any shortcuts, but it is easy to
understand and obviously cannot be mislead by uncertain input from the user's
model.
---
 src/generic/datavgen.cpp | 75 ++++++++++++------------------------------------
 1 file changed, 18 insertions(+), 57 deletions(-)

diff --git a/src/generic/datavgen.cpp b/src/generic/datavgen.cpp
index 2b2c18c..18b7bc8 100644
--- a/src/generic/datavgen.cpp
+++ b/src/generic/datavgen.cpp
@@ -488,6 +488,22 @@ public:
 
     const wxDataViewItem & GetItem() const { return m_item; }
 
+    // Returns the node in the (sub-)tree of this node that has the given item, or NULL for none.
+    wxDataViewTreeNode* FindNode(const wxDataViewItem& item)
+    {
+        if (m_item.GetID() == item.GetID())
+            return this;
+
+        for (size_t i = 0; i < m_children.GetCount(); i++)
+        {
+            wxDataViewTreeNode* node = m_children[i]->FindNode(item);
+
+            if (node) return node;
+        }
+
+        return NULL;
+    }
+
     int GetIndentLevel() const
     {
         int ret = 0;
@@ -784,8 +800,6 @@ private:
     // Return false only if the event was vetoed by its handler.
     bool SendExpanderEvent(wxEventType type, const wxDataViewItem& item);
 
-    wxDataViewTreeNode * FindNode( const wxDataViewItem & item );
-
     wxDataViewColumn *FindColumnForEditing(const wxDataViewItem& item, wxDataViewCellMode mode);
 
     bool IsCellEditableInMode(const wxDataViewItem& item, const wxDataViewColumn *col, wxDataViewCellMode mode) const;
@@ -2260,7 +2274,7 @@ bool wxDataViewMainWindow::ItemAdded(const wxDataViewItem & parent, const wxData
     {
         SortPrepare();
 
-        wxDataViewTreeNode *parentNode = FindNode(parent);
+        wxDataViewTreeNode* parentNode = m_root->FindNode(parent);
 
         if ( !parentNode )
             return false;
@@ -2355,7 +2369,7 @@ bool wxDataViewMainWindow::ItemDeleted(const wxDataViewItem& parent,
     }
     else // general case
     {
-        wxDataViewTreeNode *parentNode = FindNode(parent);
+        wxDataViewTreeNode *parentNode = m_root->FindNode(parent);
 
         // Notice that it is possible that the item being deleted is not in the
         // tree at all, for example we could be deleting a never shown (because
@@ -3238,59 +3252,6 @@ void wxDataViewMainWindow::Collapse(unsigned int row)
         }
 }
 
-wxDataViewTreeNode * wxDataViewMainWindow::FindNode( const wxDataViewItem & item )
-{
-    const wxDataViewModel * model = GetModel();
-    if( model == NULL )
-        return NULL;
-
-    if (!item.IsOk())
-        return m_root;
-
-    // Compose the parent-chain for the item we are looking for
-    wxVector<wxDataViewItem> parentChain;
-    wxDataViewItem it( item );
-    while( it.IsOk() )
-    {
-        parentChain.push_back(it);
-        it = model->GetParent(it);
-    }
-
-    // Find the item along the parent-chain.
-    // This algorithm is designed to speed up the node-finding method
-    wxDataViewTreeNode* node = m_root;
-    for( unsigned iter = parentChain.size()-1; ; --iter )
-    {
-        if( node->HasChildren() )
-        {
-            const wxDataViewTreeNodes& nodes = node->GetChildNodes();
-            bool found = false;
-
-            for (unsigned i = 0; i < nodes.GetCount(); ++i)
-            {
-                wxDataViewTreeNode* currentNode = nodes[i];
-                if (currentNode->GetItem() == parentChain[iter])
-                {
-                    if (currentNode->GetItem() == item)
-                        return currentNode;
-
-                    node = currentNode;
-                    found = true;
-                    break;
-                }
-            }
-            if (!found)
-                return NULL;
-        }
-        else
-            return NULL;
-
-        if ( !iter )
-            break;
-    }
-    return NULL;
-}
-
 void wxDataViewMainWindow::HitTest( const wxPoint & point, wxDataViewItem & item,
                                     wxDataViewColumn* &column )
 {
-- 
1.8.4.msysgit.0

