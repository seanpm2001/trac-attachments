diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*.dsw -x*~ wxWidgets.orig/include/wx/odcombo.h wxWidgets/include/wx/odcombo.h
--- wxWidgets.orig/include/wx/odcombo.h	Fri May 12 23:53:20 2006
+++ wxWidgets/include/wx/odcombo.h	Tue May 16 17:46:56 2006
@@ -110,5 +110,4 @@
     int GetSelection() const;
 
-    //void Populate( int n, const wxString choices[] );
     void Populate( const wxArrayString& choices );
     void ClearClientDatas();
@@ -154,5 +153,4 @@
     wxFont                  m_useFont;
 
-    //wxString                m_stringValue; // displayed text (may be different than m_strings[m_value])
     int                     m_value; // selection
     int                     m_itemHover; // on which item the cursor is
@@ -222,5 +220,5 @@
                          const wxSize& size,
                          const wxArrayString& choices,
-                         long style = 0,
+                         long style,
                          const wxValidator& validator = wxDefaultValidator,
                          const wxString& name = wxComboBoxNameStr);
@@ -249,6 +247,14 @@
     virtual ~wxOwnerDrawnComboBox();
 
-    // NULL popup can be used to indicate default interface
-    virtual void SetPopupControl( wxComboPopup* popup );
+    // Prevent app from using wxComboPopup
+    void SetPopupControl( wxComboPopup* WXUNUSED(popup) )
+    {
+        wxFAIL_MSG(wxT("wxOwnerDrawnComboBox requires wxVListBoxComboPopup popup"));
+    }
+
+    void SetPopupControl( wxVListBoxComboPopup* popup )
+    {
+        DoSetPopupControl(popup);
+    }
 
     // wxControlWithItems methods
@@ -263,8 +269,17 @@
     virtual void SetSelection(int n) { Select(n); }
 
+    // Avoid hiding a virtual
+    virtual void SetSelection(long from, long to)
+    {
+        wxComboControl::SetSelection(from,to);
+    }
+
     wxCONTROL_ITEMCONTAINER_CLIENTDATAOBJECT_RECAST
 
 protected:
 
+    // NULL popup can be used to indicate default interface
+    virtual void DoSetPopupControl( wxComboPopup* popup );
+
     // clears all allocated client datas
     void ClearClientDatas();
@@ -277,10 +292,7 @@
     virtual wxClientData* DoGetItemClientObject(unsigned int n) const;
 
-    // overload m_popupInterface member so we can access specific popup interface easier
-    wxVListBoxComboPopup*   m_popupInterface;
+    wxVListBoxComboPopup*   m_odcbInterface;
 
     // temporary storage for the initial choices
-    //const wxString*         m_baseChoices;
-    //int                     m_baseChoicesCount;
     wxArrayString           m_initChs;
 
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*.dsw -x*~ wxWidgets.orig/src/generic/odcombo.cpp wxWidgets/src/generic/odcombo.cpp
--- wxWidgets.orig/src/generic/odcombo.cpp	Mon May 15 16:52:03 2006
+++ wxWidgets/src/generic/odcombo.cpp	Mon May 15 19:04:16 2006
@@ -566,5 +566,5 @@
 void wxOwnerDrawnComboBox::Init()
 {
-    m_popupInterface = NULL;
+    m_odcbInterface = NULL;
 }
 
@@ -608,8 +608,5 @@
 {
     m_initChs = choices;
-    //wxCArrayString chs(choices);
 
-    //return Create(parent, id, value, pos, size, chs.GetCount(),
-    //              chs.GetStrings(), style, validator, name);
     return Create(parent, id, value, pos, size, 0,
                   NULL, style, validator, name);
@@ -643,9 +640,9 @@
 wxOwnerDrawnComboBox::~wxOwnerDrawnComboBox()
 {
-    if ( m_popupInterface )
-        m_popupInterface->ClearClientDatas();
+    if ( m_odcbInterface )
+        m_odcbInterface->ClearClientDatas();
 }
 
-void wxOwnerDrawnComboBox::SetPopupControl( wxComboPopup* popup )
+void wxOwnerDrawnComboBox::DoSetPopupControl( wxComboPopup* popup )
 {
     if ( !popup )
@@ -654,14 +651,13 @@
     }
 
-    wxComboControl::SetPopupControl(popup);
+    wxComboControl::DoSetPopupControl(popup);
 
     wxASSERT(popup);
-    m_popupInterface = (wxVListBoxComboPopup*) popup;
+    m_odcbInterface = (wxVListBoxComboPopup*) popup;
 
     // Add initial choices to the wxVListBox
-    if ( !m_popupInterface->GetCount() )
+    if ( !m_odcbInterface->GetCount() )
     {
-        //m_popupInterface->Populate(m_initChs.GetCount(),m_initChs.GetStrings());
-        m_popupInterface->Populate(m_initChs);
+        m_odcbInterface->Populate(m_initChs);
         m_initChs.Clear();
     }
@@ -676,7 +672,8 @@
     EnsurePopupControl();
 
-    m_popupInterface->Clear();
+    m_odcbInterface->Clear();
 
-    GetTextCtrl()->SetValue(wxEmptyString);
+    if ( m_text )
+        m_text->SetValue(wxEmptyString);
 }
 
@@ -688,11 +685,13 @@
         SetValue(wxEmptyString);
 
-    m_popupInterface->Delete(n);
+    m_odcbInterface->Delete(n);
 }
 
 unsigned int wxOwnerDrawnComboBox::GetCount() const
 {
-    wxASSERT_MSG( m_popupInterface, wxT("no popup interface") );
-    return m_popupInterface->GetCount();
+    if ( !m_odcbInterface )
+        return 0;
+
+    return m_odcbInterface->GetCount();
 }
 
@@ -700,5 +699,9 @@
 {
     wxCHECK_MSG( IsValid(n), wxEmptyString, _T("invalid index in wxOwnerDrawnComboBox::GetString") );
-    return m_popupInterface->GetString(n);
+
+    if ( !m_odcbInterface )
+        return m_initChs.Item(n);
+
+    return m_odcbInterface->GetString(n);
 }
 
@@ -706,23 +709,26 @@
 {
     wxCHECK_RET( IsValid(n), _T("invalid index in wxOwnerDrawnComboBox::SetString") );
-    m_popupInterface->SetString(n,s);
+    m_odcbInterface->SetString(n,s);
 }
 
 int wxOwnerDrawnComboBox::FindString(const wxString& s) const
 {
-    wxASSERT_MSG( m_popupInterface, wxT("no popup interface") );
-    return m_popupInterface->FindString(s);
+    if ( !m_odcbInterface )
+        return m_initChs.Index(s);
+
+    return m_odcbInterface->FindString(s);
 }
 
 void wxOwnerDrawnComboBox::Select(int n)
 {
-    wxCHECK_RET( (n == wxNOT_FOUND) || IsValid(n), _T("invalid index in wxOwnerDrawnComboBox::Select") );
     EnsurePopupControl();
 
-    m_popupInterface->SetSelection(n);
+    wxCHECK_RET( (n == wxNOT_FOUND) || IsValid(n), _T("invalid index in wxOwnerDrawnComboBox::Select") );
+
+    m_odcbInterface->SetSelection(n);
 
     wxString str;
     if ( n >= 0 )
-        str = m_popupInterface->GetString(n);
+        str = m_odcbInterface->GetString(n);
 
     // Refresh text portion in control
@@ -737,6 +743,8 @@
 int wxOwnerDrawnComboBox::GetSelection() const
 {
-    wxASSERT_MSG( m_popupInterface, wxT("no popup interface") );
-    return m_popupInterface->GetSelection();
+    if ( !m_odcbInterface )
+        return m_initChs.Index(m_valueString);
+
+    return m_odcbInterface->GetSelection();
 }
 
@@ -744,15 +752,16 @@
 {
     EnsurePopupControl();
-    wxASSERT(m_popupInterface);
-    return m_popupInterface->Append(item);
+    wxASSERT(m_odcbInterface);
+    return m_odcbInterface->Append(item);
 }
 
 int wxOwnerDrawnComboBox::DoInsert(const wxString& item, unsigned int pos)
 {
+    EnsurePopupControl();
+
     wxCHECK_MSG(!(GetWindowStyle() & wxCB_SORT), -1, wxT("can't insert into sorted list"));
     wxCHECK_MSG(IsValidInsert(pos), -1, wxT("invalid index"));
 
-    EnsurePopupControl();
-    m_popupInterface->Insert(item,pos);
+    m_odcbInterface->Insert(item,pos);
 
     return pos;
@@ -762,11 +771,13 @@
 {
     EnsurePopupControl();
-    m_popupInterface->SetItemClientData(n,clientData,m_clientDataItemsType);
+    m_odcbInterface->SetItemClientData(n,clientData,m_clientDataItemsType);
 }
 
 void* wxOwnerDrawnComboBox::DoGetItemClientData(unsigned int n) const
 {
-    wxASSERT_MSG( m_popupInterface, wxT("no popup interface") );
-    return m_popupInterface->GetItemClientData(n);
+    if ( !m_odcbInterface )
+        return NULL;
+
+    return m_odcbInterface->GetItemClientData(n);
 }
 

 	  	 
