From ed418346569c64366cea5c929af0bedac5ab6502 Mon Sep 17 00:00:00 2001
From: ARATA Mizuki <minorinoki@gmail.com>
Date: Wed, 6 May 2015 20:26:55 +0900
Subject: [PATCH] OSX/Cocoa: Correctly handle non-BMP characters when
 generating char events.

Since [NSString characterAtIndex:] return UTF-16 values, we can't use it for the char event.
Converting the text to wxString fixes the problem, because indexing and iterating wxString return Unicode code points (if wxChar is 4 bytes, which is the case on OSX).
---
 src/osx/cocoa/window.mm | 5 +++--
 1 file changed, 3 insertions(+), 2 deletions(-)

diff --git a/src/osx/cocoa/window.mm b/src/osx/cocoa/window.mm
index 3cd9d2c..e215ee1 100644
--- a/src/osx/cocoa/window.mm
+++ b/src/osx/cocoa/window.mm
@@ -2730,7 +2730,8 @@ bool wxWidgetCocoaImpl::DoHandleCharEvent(NSEvent *event, NSString *text)
     int length = [text length];
     if ( peer )
     {
-        for (NSUInteger i = 0; i < length; ++i)
+        wxString str = wxCFStringRef([text retain]).AsString();
+        for (wxString::iterator it = str.begin(); it != str.end(); ++it)
         {
             wxKeyEvent wxevent(wxEVT_CHAR);
             
@@ -2749,7 +2750,7 @@ bool wxWidgetCocoaImpl::DoHandleCharEvent(NSEvent *event, NSString *text)
                 wxevent.m_rawCode = 0;
                 wxevent.m_rawFlags = 0;
 
-                unichar aunichar = [text characterAtIndex:i];
+                wxChar aunichar = *it;
 #if wxUSE_UNICODE
                 wxevent.m_uniChar = aunichar;
 #endif
-- 
2.4.0

