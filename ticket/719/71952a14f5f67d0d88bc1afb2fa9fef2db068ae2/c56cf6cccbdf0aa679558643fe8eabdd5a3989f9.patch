diff -ru wxWidgets.orig/samples/minimal/minimal.cpp wxWidgets/samples/minimal/minimal.cpp
--- wxWidgets.orig/samples/minimal/minimal.cpp	2005-02-21 03:14:03.000000000 +1100
+++ wxWidgets/samples/minimal/minimal.cpp	2005-08-29 01:28:41.278690888 +1000
@@ -65,10 +65,13 @@
     MyFrame(const wxString& title);
 
     // event handlers (these functions should _not_ be virtual)
+    void OnSize(wxSizeEvent& event);
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
 
 private:
+    wxStatusBar *m_sbns;
+
     // any class wishing to process wxWidgets events must use this macro
     DECLARE_EVENT_TABLE()
 };
@@ -97,6 +100,7 @@
 // handlers) which process them. It can be also done at run-time, but for the
 // simple menu events like this the static method is much simpler.
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
+    EVT_SIZE(MyFrame::OnSize)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
 END_EVENT_TABLE()
@@ -138,8 +142,10 @@
 
 // frame constructor
 MyFrame::MyFrame(const wxString& title)
-       : wxFrame(NULL, wxID_ANY, title)
+       : wxFrame(NULL, wxID_ANY, title, wxDefaultPosition, wxSize(500, 500))
 {
+    m_sbns = NULL;
+
     // set the frame icon
     SetIcon(wxICON(sample));
 
@@ -162,6 +168,66 @@
     SetMenuBar(menuBar);
 #endif // wxUSE_MENUS
 
+    wxPanel *p = new wxPanel(this);
+    wxPanel *pns = new wxPanel(p, -1, wxPoint(50, 50), wxSize(500, 500));
+    pns->SetBackgroundStyle(wxBG_STYLE_COLOUR);
+    pns->SetBackgroundColour(*wxRED);
+
+    wxBoxSizer *sizer = new wxBoxSizer(wxVERTICAL);
+
+    for ( int i = 0; i < 2; ++i )
+    {
+        wxBoxSizer *s = new wxBoxSizer(wxHORIZONTAL);
+        wxButton *b = new wxButton(this, -1, _T("Button"));
+        wxStatusBar *sb = new wxStatusBar(this, -1, wxST_SIZEGRIP);
+        sb->SetStatusText(wxString::Format(_T("StatusBar %d"), i));
+        sb->SetFieldsCount(3);
+
+        if ( i % 2 == 0 )
+        {
+            s->Add(b, 0, 0);
+            s->Add(sb, 1, wxGROW);
+        }
+        else
+        {
+            s->Add(sb, 1, wxGROW);
+            s->Add(b, 0, 0);
+        }
+
+        sizer->Add(s, 0, wxGROW);
+    }
+
+    sizer->Add(p, 1, wxGROW);
+
+    for ( int i = 0; i < 2; ++i )
+    {
+        wxBoxSizer *s = new wxBoxSizer(wxHORIZONTAL);
+        wxButton *b = new wxButton(this, -1, _T("Button"));
+        wxStatusBar *sb = new wxStatusBar(this, -1, wxST_SIZEGRIP);
+        sb->SetStatusText(wxString::Format(_T("StatusBar %d"), i));
+        sb->SetFieldsCount(3);
+
+        if ( i % 2 == 0 )
+        {
+            s->Add(b, 0, 0);
+            s->Add(sb, 1, wxGROW);
+        }
+        else
+        {
+            s->Add(sb, 1, wxGROW);
+            s->Add(b, 0, 0);
+        }
+
+        sizer->Add(s, 0, wxGROW);
+    }
+
+    SetSizer(sizer);
+
+    m_sbns = new wxStatusBar(pns, -1, wxST_SIZEGRIP);
+    m_sbns->SetSize(50, 50, 200, 100);
+    m_sbns->SetStatusText(_T("No sizer StatusBar"));
+    m_sbns->SetFieldsCount(3);
+
 #if wxUSE_STATUSBAR
     // create a status bar just for fun (by default with 1 pane only)
     CreateStatusBar(2);
@@ -172,6 +238,14 @@
 
 // event handlers
 
+void MyFrame::OnSize(wxSizeEvent& event)
+{
+    if ( m_sbns )
+        m_sbns->SetSize(event.GetSize().GetWidth() - 200, 20);
+
+    event.Skip();
+}
+
 void MyFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
 {
     // true is to force the frame to close

 	  	 
