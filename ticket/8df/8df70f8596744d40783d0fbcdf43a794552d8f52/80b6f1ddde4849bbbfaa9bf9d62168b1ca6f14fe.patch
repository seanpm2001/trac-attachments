? docs/up.log
Index: docs/gtk/install.txt
===================================================================
RCS file: /home/wxcvs/wxWindows/docs/gtk/install.txt,v
retrieving revision 1.42
diff -p -u -u -r1.42 install.txt
--- docs/gtk/install.txt	7 Jun 2002 20:15:21 -0000	1.42
+++ docs/gtk/install.txt	13 Sep 2002 13:11:11 -0000
@@ -1,10 +1,20 @@
+wxWindows 2.3 for GTK installation
+----------------------------------
 
-  !!! When sending bug reports tell us what version of wxWindows you are
-      using (including the beta) and what compiler on what system. One
-      example: wxGTK 2.3.0, egcs 1.1.1, Redhat 6.2 !!!
+IMPORTANT NOTE:
 
-* The most simple case
------------------------
+  If you experience problems installing, please re-read these
+  instructions and other related files (todo.txt, bugs.txt and
+  osname.txt for your platform if it exists) carefully before
+  mailing wxwin-users or the author. Preferably, try to fix the
+  problem first and then send a patch to the author.
+
+  When sending bug reports tell us what version of wxWindows you are
+  using (including the beta) and what compiler on what system. One
+  example: wxGTK 2.3.3, gcc 2.95.4, Redhat 6.2
+
+* The simplest case
+-------------------
 
 If you compile wxWindows on Linux for the first time and don't like to read
 install instructions just do (in the base dir):
@@ -64,8 +74,8 @@ cd buildgtkd
 make
 cd ..
 
-* The most simple errors
-------------------------
+* The simplest errors
+---------------------
 
 For any configure errors: please look at config.log file which was generated
 during configure run, it usually contains some useful information.
@@ -85,43 +95,44 @@ Solaris make. Other versions might work 
 support definitely won't).
 
 You get errors during compilation: The reason is that you probably have a
-broken compiler, which includes a lot of old gcc versions. In particular, if
-you use gcc 2.8 you have to disable optimisation as the compiler will give up
-with an internal compiler error.
+broken compiler.  GCC 2.8 and earlier versions and egcs are likely to cause
+problems due to incomplete support for C++ and optimisation bugs.  Best to use
+GCC 2.95 or later.
 
 You get immediate segfault when starting any sample or application: This is
 either due to having compiled the library with different flags or options than
 your program - typically you might have the __WXDEBUG__ option set for the
-library but not for your program - or due to using a broken compiler (and its
-optimisation) such as gcc 2.8.
+library but not for your program - or due to using a compiler with optimisation
+bugs.
 
 Linker complains about missing PROIO_yy_flex_alloc and similar symbols: you
 probably have an old version of flex, 2.5.4 is recommended.
 
-* The most simple program
--------------------------
+* The simplest program
+----------------------
 
-Now create your super-application myfoo.app and compile anywhere with
+Now create your super-application myfoo.cpp and compile anywhere with
 
-gcc myfoo.cpp `wx-config --libs --cflags` -o myfoo
+gcc myfoo.cpp `wx-config --libs --cxxflags` -o myfoo
 
 * General
------------------------
+---------
 
-The Unix variants of wxWindows use GNU configure. If you have problems with your
-make use GNU make instead.
+The Unix variants of wxWindows use GNU configure. If you have problems with
+your make use GNU make instead.
 
 If you have general problems with installation, read my homepage at
 
-  http://wesley.informatik.uni-freiburg.de/~wxxt
+  http://wesley.informatik.uni-freiburg.de/~wxxt/
 
 for newest information. If you still don't have any success, please send a bug
 report to one of our mailing lists (see my homepage) INCLUDING A DESCRIPTION OF
-YOUR SYSTEM AND YOUR PROBLEM, SUCH AS YOUR VERSION OF GTK, WXGTK, WHAT DISTRIBUTION
-YOU USE AND WHAT ERROR WAS REPORTED. I know this has no effect, but I tried...
+YOUR SYSTEM AND YOUR PROBLEM, SUCH AS YOUR VERSION OF GTK, WXGTK, WHAT
+DISTRIBUTION YOU USE AND WHAT ERROR WAS REPORTED. I know this has no effect,
+but I tried...
 
 * GUI libraries
------------------------
+---------------
 
 wxWindows/GTK requires the GTK+ library to be installed on your system. It has
 to be a stable version, preferably version 1.2.10 (at least 1.2.3 is required,
@@ -135,15 +146,16 @@ We also mirror GTK+ at my ftp site. You'
 at my homepage.
 
 * Additional libraries
------------------------
+----------------------
 
-wxWindows/Gtk requires a thread library and X libraries known to work with threads.
-This is the case on all commercial Unix-Variants and all Linux-Versions that are
-based on glibc 2 except RedHat 5.0 which is broken in many aspects. As of writing
-this, these Linux distributions have correct glibc 2 support:
+wxWindows/Gtk requires a thread library and X libraries known to work with
+threads.  This is the case on all commercial Unix-Variants and all
+Linux-Versions that are based on glibc 2 except RedHat 5.0 which is broken in
+many aspects. As of writing this, these Linux distributions have correct glibc
+2 support:
 
  - RedHat 5.1
- - Debian 2.0
+ - Debian 2.0 and 3.0
  - Stampede
  - DLD 6.0
  - SuSE 6.0
@@ -157,11 +169,8 @@ make install
 ldconfig
 exit
 
-NB: DO NOT COMPILE WXGTK WITH GCC 2.7 AND THREADS, SINCE ALL PROGRAMS WILL CRASH UPON
-START-UP! Just always use egcs and be happy.
-
 * Building wxGTK on OS/2
---------------------------
+------------------------
 
 Please send comments and question about the OS/2 installation
 to Andrea Venturoli <a.ventu@flashnet.it> and patches to
@@ -199,7 +208,7 @@ generate "lex.yy.c", you need to manuall
 makefile.
 
 * Building wxGTK on SGI
---------------------------
+-----------------------
 
 Using the SGI native compilers, it is recommended that you
 also set CFLAGS and CXXFLAGS before running configure. These
@@ -217,7 +226,7 @@ untested).
 The SGI native compiler support has only been tested on Irix 6.5.
 
 * Create your configuration
------------------------------
+---------------------------
 
 Usage:
     ./configure options
@@ -226,8 +235,8 @@ If you want to use system's C and C++ co
 set environment variables CC and CCC as
 
     % setenv CC cc
-    % setenv CCC CC
-    % ./configure options
+    % setenv CXX CC
+    % ./configure [options]
 
 to see all the options please use:
 
@@ -240,7 +249,7 @@ and Motif) simultaneously.
 
 
 * General options
--------------------
+-----------------
 
 Given below are the commands to change the default behaviour,
 i.e. if it says "--disable-threads" it means that threads
@@ -309,7 +318,7 @@ The following options handle the kind of
                             options.
 
 * Feature Options
--------------------
+-----------------
 
 When producing an executable that is linked statically with wxGTK
 you'll be surprised at its immense size. This can sometimes be
@@ -365,7 +374,7 @@ the program of its debugging information
 reduction in size.
 
 * Compiling
--------------
+-----------
 
 The following must be done in the base directory (e.g. ~/wxGTK
 or ~/wxWin or whatever)
@@ -406,7 +415,7 @@ in the various directories will do the w
 1) The first way uses the installed libraries and header files
 automatically using wx-config
 
-gcc myfoo.cpp `wx-config --cflags --libs` -o myfoo
+gcc myfoo.cpp `wx-config --cxxflags --libs` -o myfoo
 
 Using this way, a make file for the minimal sample would look
 like this
@@ -417,7 +426,7 @@ minimal: minimal.o
 	$(CC) -o minimal minimal.o `wx-config --libs`
 
 minimal.o: minimal.cpp mondrian.xpm
-	$(CC) `wx-config --cflags` -c minimal.cpp -o minimal.o
+	$(CC) `wx-config --cxxflags` -c minimal.cpp -o minimal.o
 
 clean:
 	rm -f *.o minimal
Index: docs/motif/install.txt
===================================================================
RCS file: /home/wxcvs/wxWindows/docs/motif/install.txt,v
retrieving revision 1.31
diff -p -u -u -r1.31 install.txt
--- docs/motif/install.txt	7 Jun 2002 20:15:27 -0000	1.31
+++ docs/motif/install.txt	13 Sep 2002 13:11:15 -0000
@@ -11,7 +11,7 @@ IMPORTANT NOTE:
   
   When sending bug reports tell us what version of wxWindows you are 
   using (including the beta) and what compiler on what system. One 
-  example: wxMotif 2.3.0, egcs 1.1.1, Redhat 5.0
+  example: wxMotif 2.3.3, gcc 2.95.4, Redhat 6.1
 
 First steps
 -----------
@@ -42,8 +42,8 @@ First steps
 COMPILING USING CONFIGURE
 =========================
 
-* The most simple case
------------------------
+* The simplest case
+-------------------
 
 If you compile wxWindows on Linux for the first time and don't like to read 
 install instructions just do (in the base dir):
@@ -78,10 +78,10 @@ such as for GTK and Motif, you can now b
 them concurrently. For this end, you have to create a directory for each build 
 of wxWindows - you may also want to create different versions of wxWindows
 and test them concurrently. Most typically, this would be a version configured 
-with --enable-debug_flag and one without. Note, that only one build can currently 
-be installed, so you'd have to use local version of the library for that purpose.
-For building three versions (one GTK, one Motif and a debug version of the GTK 
-source) you'd do this:
+with --enable-debug_flag and one without. Note, that only one build can
+currently be installed, so you'd have to use local version of the library for
+that purpose.  For building three versions (one GTK, one Motif and a debug
+version of the GTK source) you'd do this:
 
 md buildmotif
 cd buildmotif
@@ -101,45 +101,45 @@ cd buildgtkd
 make
 cd ..
 
-* The most simple errors
-------------------------
+* The simplest errors
+---------------------
 
-You get errors during compilation: The reason is that you probably have a broken 
-compiler, which includes almost everything that is called gcc. If you use gcc 2.8 
-you have to disable optimisation as the compiler will give up with an internal 
-compiler error.
-
-If there is just any way for you to use egcs, use egcs. We cannot fix gcc.
-
-You get immediate segfault when starting any sample or application: This is either 
-due to having compiled the library with different flags or options than your program - 
-typically you might have the __WXDEBUG__ option set for the library but not for your 
-program - or due to using a broken compiler (and its optimisation) such as GCC 2.8.
+You get errors during compilation: The reason is that you probably have a
+broken compiler.  GCC 2.8 and earlier versions and egcs are likely to cause
+problems due to incomplete support for C++ and optimisation bugs.  Best to use
+GCC 2.95 or later.
+
+You get immediate segfault when starting any sample or application: This is
+either due to having compiled the library with different flags or options than
+your program - typically you might have the __WXDEBUG__ option set for the
+library but not for your program - or due to using a compiler with optimisation
+bugs.
 
-* The most simple program
--------------------------
+* The simplest program
+----------------------
 
 Now create your super-application myfoo.app and compile anywhere with
 
-g++ myfoo.cpp `wx-config --libs --cflags` -o myfoo
+g++ myfoo.cpp `wx-config --libs --cxxflags` -o myfoo
 
 * General
------------------------
+---------
 
-The Unix variants of wxWindows use GNU configure. If you have problems with your 
-make use GNU make instead.
+The Unix variants of wxWindows use GNU configure. If you have problems with
+your make use GNU make instead.
 
-If you have general problems with installation, read my homepage at 
+If you have general problems with installation, see the wxWindows website at 
 
-  http://wesley.informatik.uni-freiburg.de/~wxxt
+  http://www.wxwindows.org/
   
 for newest information. If you still don't have any success, please send a bug 
 report to one of our mailing lists (see my homepage) INCLUDING A DESCRIPTION OF 
-YOUR SYSTEM AND YOUR PROBLEM, SUCH AS YOUR VERSION OF GTK, WXGTK, WHAT DISTRIBUTION 
-YOU USE AND WHAT ERROR WAS REPORTED. I know this has no effect, but I tried...
+YOUR SYSTEM AND YOUR PROBLEM, SUCH AS YOUR VERSION OF MOTIF, WXMOTIF, WHAT
+DISTRIBUTION YOU USE AND WHAT ERROR WAS REPORTED. I know this has no effect,
+but I tried...
 
 * GUI libraries
------------------------
+---------------
 
 wxWindows/Motif requires the Motif library to be installed on your system. As
 an alternative, you may also use the free library "lesstif" which implements
@@ -150,32 +150,30 @@ You can get the newest version of the Le
   http://www.lesstif.org
   
 * Additional libraries
------------------------
+----------------------
 
-wxWindows/Motif requires a thread library and X libraries known to work with threads. 
-This is the case on all commercial Unix-Variants and all Linux-Versions that are 
-based on glibc 2 except RedHat 5.0 which is broken in many aspects. As of writing 
-this, these Linux distributions have correct glibc 2 support:
+wxWindows/Motif requires a thread library and X libraries known to work with
+threads.  This is the case on all commercial Unix-Variants and all
+Linux-Versions that are based on glibc 2 except RedHat 5.0 which is broken in
+many aspects. As of writing this, these Linux distributions have correct glibc
+2 support:
 
  - RedHat 5.1
- - Debian 2.0
+ - Debian 2.0 and 3.0
  - Stampede
  - DLD 6.0
  - SuSE 6.0
  
 You can disable thread support by running 
 
-./configure "--disable-threads"
+./configure --disable-threads
 make
 su <type root password>
 make install
 ldconfig
 exit
   
-NB: DO NOT COMPILE WXGTK WITH GCC AND THREADS, SINCE ALL PROGRAMS WILL
-CRASH UPON START-UP! Just always use egcs and be happy.
-
-* Building wxGTK on OS/2
+* Building wxMotif on OS/2
 --------------------------
 
 Please send comments and question about the OS/2 installation
@@ -219,7 +217,7 @@ generate "lex.yy.c", you need to manuall
 makefile.
 
 * Building wxMotif on SGI
---------------------------
+-------------------------
 
 Using the SGI native compilers, it is recommended that you
 also set CFLAGS and CXXFLAGS before running configure. These 
@@ -237,10 +235,10 @@ untested).
 The SGI native compiler support has only been tested on Irix 6.5.
 
 * Create your configuration
------------------------------
+---------------------------
 
 Usage:
-	./configure options
+	./configure [options]
 
 If you want to use system's C and C++ compiler,
 set environment variables CXX and CC as
@@ -280,8 +278,6 @@ in wxWindows snapshot 6, but not yet all
 You have to add --with-motif on platforms, where Motif is
 not the default (on Linux, configure will default to GTK).
 
-        --without-gtk            Don't use the GIMP ToolKit (GTK)
-	
 	--with-motif             Use either Motif or Lesstif
 	                         Configure will look for both. 
 
@@ -339,7 +335,7 @@ The following options handle the kind of
 				options.
 
 * Feature Options
--------------------
+-----------------
 
 Many of the configure options have been thoroughly tested
 in wxWindows snapshot 6, but not yet all (ODBC not).
@@ -387,9 +383,9 @@ the program of its debugging information
 reduction in size.
 
 * Compiling
--------------
+-----------
 
-The following must be done in the base directory (e.g. ~/wxGTK
+The following must be done in the base directory (e.g. ~/wxMotif
 or ~/wxWin or whatever)
 
 Now the makefiles are created (by configure) and you can compile 
@@ -423,12 +419,12 @@ object-files:
 in the various directories will do the work for you.
 
 * Creating a new Project
---------------------------
+------------------------
 
 1) The first way uses the installed libraries and header files
 automatically using wx-config
 
-g++ myfoo.cpp `wx-config --libs` `wx-config --cflags` -o myfoo
+g++ myfoo.cpp `wx-config --libs` `wx-config --cxxflags` -o myfoo
 
 Using this way, a make file for the minimal sample would look
 like this
@@ -439,7 +435,7 @@ minimal: minimal.o
     $(CXX) -o minimal minimal.o `wx-config --libs` 
 
 minimal.o: minimal.cpp mondrian.xpm
-    $(CXX) `wx-config --cflags` -c minimal.cpp -o minimal.o
+    $(CXX) `wx-config --cxxflags` -c minimal.cpp -o minimal.o
 
 clean: 
 	rm -f *.o minimal
@@ -482,9 +478,9 @@ and configure before you can type make.
 Troubleshooting
 ---------------
 
-- Solaris compilation with gcc: if the compiler has problems with the variable argument
-  functions, try putting the gcc fixinclude file paths early in the include
-  path.
+- Solaris compilation with gcc: if the compiler has problems with the variable
+  argument functions, try putting the gcc fixinclude file paths early in the
+  include path.
 
 - If you operator-related compile errors or strange memory problems
   (for example in deletion of string arrays), set wxUSE_GLOBAL_MEMORY_OPERATORS
Index: docs/x11/install.txt
===================================================================
RCS file: /home/wxcvs/wxWindows/docs/x11/install.txt,v
retrieving revision 1.4
diff -p -u -u -r1.4 install.txt
--- docs/x11/install.txt	7 Jun 2002 20:15:28 -0000	1.4
+++ docs/x11/install.txt	13 Sep 2002 13:11:16 -0000
@@ -1,5 +1,5 @@
 wxWindows 2.3 for X11 installation
-------------------------------------
+----------------------------------
 
 IMPORTANT NOTE:
 
@@ -8,10 +8,10 @@ IMPORTANT NOTE:
   osname.txt for your platform if it exists) carefully before
   mailing wxwin-users or the author. Preferably, try to fix the
   problem first and then send a patch to the author.
-  
+
   When sending bug reports tell us what version of wxWindows you are 
   using (including the beta) and what compiler on what system. One 
-  example: wxX11 2.3.0, egcs 1.1.1, Redhat 5.0
+  example: wxX11 2.3.3, gcc 2.95.4, Redhat 6.2
 
 First steps
 -----------
@@ -37,8 +37,8 @@ First steps
 COMPILING USING CONFIGURE
 =========================
 
-* The most simple case
------------------------
+* The simplest case
+-------------------
 
 If you compile wxWindows on Linux for the first time and don't like to read 
 install instructions just do (in the base dir):
@@ -73,14 +73,16 @@ such as for GTK and X11, you can now bui
 them concurrently. For this end, you have to create a directory for each build 
 of wxWindows - you may also want to create different versions of wxWindows
 and test them concurrently. Most typically, this would be a version configured 
-with --enable-debug_flag and one without. Note, that only one build can currently 
-be installed, so you'd have to use local version of the library for that purpose.
+with --enable-debug_flag and one without. Note, that only one build can
+currently be installed, so you'd have to use local version of the library for
+that purpose.
+
 For building three versions (one GTK, one X11 and a debug version of the GTK 
 source) you'd do this:
 
 md buildx11
 cd buildx11
-../configure --with-x11 --with-universal
+../configure --with-x11
 make
 cd ..
 
@@ -96,91 +98,81 @@ cd buildgtkd
 make
 cd ..
 
-* The most simple errors
-------------------------
-
-You get errors during compilation: The reason is that you probably have a broken 
-compiler, which includes almost everything that is called gcc. If you use gcc 2.8 
-you have to disable optimisation as the compiler will give up with an internal 
-compiler error.
+* The simplest errors
+---------------------
 
-If there is just any way for you to use egcs, use egcs. We cannot fix gcc.
+You get errors during compilation: The reason is that you probably have a
+broken compiler.  GCC 2.8 and earlier versions and egcs are likely to cause
+problems due to incomplete support for C++ and optimisation bugs.  Best to use
+GCC 2.95 or later.
+
+You get immediate segfault when starting any sample or application: This is
+either due to having compiled the library with different flags or options than
+your program - typically you might have the __WXDEBUG__ option set for the
+library but not for your program - or due to using a compiler with optimisation
+bugs.
 
-You get immediate segfault when starting any sample or application: This is either 
-due to having compiled the library with different flags or options than your program - 
-typically you might have the __WXDEBUG__ option set for the library but not for your 
-program - or due to using a broken compiler (and its optimisation) such as GCC 2.8.
+* The simplest program
+----------------------
 
-* The most simple program
--------------------------
+Now create your super-application myfoo.cpp and compile anywhere with
 
-Now create your super-application myfoo.app and compile anywhere with
-
-g++ myfoo.cpp `wx-config --libs --cflags` -o myfoo
+g++ myfoo.cpp `wx-config --libs --cxxflags` -o myfoo
 
 * General
------------------------
+---------
 
-The Unix variants of wxWindows use GNU configure. If you have problems with your 
-make use GNU make instead.
+The Unix variants of wxWindows use GNU configure. If you have problems with
+your make use GNU make instead.
 
-If you have general problems with installation, read my homepage at 
+If you have general problems with installation, see the wxWindows website at 
 
-  http://wesley.informatik.uni-freiburg.de/~wxxt
+  http://www.wxwindows.org/
   
 for newest information. If you still don't have any success, please send a bug 
 report to one of our mailing lists (see my homepage) INCLUDING A DESCRIPTION OF 
-YOUR SYSTEM AND YOUR PROBLEM, SUCH AS YOUR VERSION OF GTK, WXGTK, WHAT DISTRIBUTION 
+YOUR SYSTEM AND YOUR PROBLEM, SUCH AS YOUR VERSION OF X, WHAT DISTRIBUTION 
 YOU USE AND WHAT ERROR WAS REPORTED. I know this has no effect, but I tried...
 
 * GUI libraries
------------------------
-
-wxWindows/X11 requires the X11 library to be installed on your system. As
-an alternative, you may also use the free library "lesstif" which implements
-most of the X11 API without the licence restrictions of X11.
-
-You can get the newest version of the Lesstif from the lesstif homepage at:
+---------------
 
-  http://www.lesstif.org
+wxWindows/X11 requires the X11 library to be installed on your system.
   
 * Additional libraries
------------------------
+----------------------
 
-wxWindows/X11 requires a thread library and X libraries known to work with threads. 
-This is the case on all commercial Unix-Variants and all Linux-Versions that are 
-based on glibc 2 except RedHat 5.0 which is broken in many aspects. As of writing 
-this, these Linux distributions have correct glibc 2 support:
+wxWindows/X11 requires a thread library and X libraries known to work with
+threads.  This is the case on all commercial Unix-Variants and all
+Linux-Versions that are based on glibc 2 except RedHat 5.0 which is broken in
+many aspects. As of writing this, these Linux distributions have correct glibc
+2 support:
 
  - RedHat 5.1
- - Debian 2.0
+ - Debian 2.0 and 3.0
  - Stampede
  - DLD 6.0
  - SuSE 6.0
  
 You can disable thread support by running 
 
-./configure "--disable-threads"
+./configure --disable-threads
 make
 su <type root password>
 make install
 ldconfig
 exit
   
-NB: DO NOT COMPILE WXGTK WITH GCC AND THREADS, SINCE ALL PROGRAMS WILL
-CRASH UPON START-UP! Just always use egcs and be happy.
-
-* Building wxGTK on OS/2
---------------------------
+* Building wxX11 on OS/2
+------------------------
 
 Please send comments and question about the OS/2 installation
 to Andrea Venturoli <a.ventu@flashnet.it> and patches to
 the wxWindows mailing list.
 
 You'll need OS/2 Warp (4.00FP#6), X-Free86/2 (3.3.3 or newer), 
-Lesstif (0.89.1 or newer), emx (0.9d fix 1), flex (2.5.4),
-yacc (1.8), unix like shell, e.g. korn shell (5.2.13),
-Autoconf (2.13),  GNU file utilities (3.6),
+emx (0.9d fix 1), flex (2.5.4), yacc (1.8), unix like shell,
+e.g. korn shell (5.2.13), Autoconf (2.13),  GNU file utilities (3.6),
 GNU text utilities (1.3), GNU shell utilites (1.12), m4 (1.4), 
 sed (2.05), grep (2.0), Awk (3.0.3), GNU Make (3.76.1).
 
@@ -200,7 +192,7 @@ versions of the configure scripts. Now r
     configure --with-x11
 as described above.
 
-To verify Lesstif installation, configure will try to compile a
+To verify X11 installation, configure will try to compile a
 sample program that requires X headers/libraries to be either
 available via C_INCLUDE_PATH and LIBRARY_PATH or you need to
 explicitly set CFLAGS prior to running configure.
@@ -214,7 +206,7 @@ generate "lex.yy.c", you need to manuall
 makefile.
 
 * Building wxX11 on SGI
---------------------------
+-----------------------
 
 Using the SGI native compilers, it is recommended that you
 also set CFLAGS and CXXFLAGS before running configure. These 
@@ -232,17 +224,17 @@ untested).
 The SGI native compiler support has only been tested on Irix 6.5.
 
 * Create your configuration
------------------------------
+---------------------------
 
 Usage:
-	./configure options
+	./configure [options]
 
 If you want to use system's C and C++ compiler,
 set environment variables CXX and CC as
 
 	% setenv CC cc
 	% setenv CXX CC
-	% ./configure options
+	% ./configure [options]
 
 to see all the options please use:
 
@@ -263,23 +255,16 @@ not been defined. And Make in some circu
 
 
 * General options
--------------------
+-----------------
 
 Given below are the commands to change the default behaviour,
 i.e. if it says "--disable-threads" it means that threads
 are enabled by default.
 
-Many of the configure options have been thoroughly tested
-in wxWindows snapshot 6, but not yet all (ODBC not).
-
 You have to add --with-x11 on platforms, where X11 is
 not the default (on Linux, configure will default to GTK).
 
-    --without-gtk            Don't use the GIMP ToolKit (GTK).
-	
-	--with-x11               Use X11.
-
-	--with-universal         Needs to be specified with X11.
+	--with-x11              Use X11.
 
 The following options handle the kind of library you want to build.
 
@@ -335,12 +320,12 @@ The following options handle the kind of
 				options.
 
 * Feature Options
--------------------
+-----------------
 
 Many of the configure options have been thoroughly tested
 in wxWindows snapshot 6, but not yet all (ODBC not).
 
-When producing an executable that is linked statically with wxGTK
+When producing an executable that is linked statically with wxX11
 you'll be surprised at its immense size. This can sometimes be
 drastically reduced by removing features from wxWindows that 
 are not used in your program. The most relevant such features
@@ -383,10 +368,10 @@ the program of its debugging information
 reduction in size.
 
 * Compiling
--------------
+-----------
 
-The following must be done in the base directory (e.g. ~/wxGTK
-or ~/wxWin or whatever)
+The following must be done in the base directory (e.g. ~/wxX11
+or whatever)
 
 Now the makefiles are created (by configure) and you can compile 
 the library by typing:
@@ -414,17 +399,17 @@ You can remove any traces of wxWindows b
 If you want to save disk space by removing unnecessary
 object-files:
 
-	 make clean
+	make clean
 
 in the various directories will do the work for you.
 
 * Creating a new Project
---------------------------
+------------------------
 
 1) The first way uses the installed libraries and header files
 automatically using wx-config
 
-g++ myfoo.cpp `wx-config --libs` `wx-config --cflags` -o myfoo
+g++ myfoo.cpp `wx-config --libs` `wx-config --cxxflags` -o myfoo
 
 Using this way, a make file for the minimal sample would look
 like this
@@ -435,7 +420,7 @@ minimal: minimal.o
     $(CXX) -o minimal minimal.o `wx-config --libs` 
 
 minimal.o: minimal.cpp mondrian.xpm
-    $(CXX) `wx-config --cflags` -c minimal.cpp -o minimal.o
+    $(CXX) `wx-config --cxxflags` -c minimal.cpp -o minimal.o
 
 clean: 
 	rm -f *.o minimal
@@ -450,7 +435,7 @@ to the bottom of the configure.in script
 and configure before you can type make.
 
 * Further notes by Julian Smart
----------------------------------
+-------------------------------
 
 - You may find the following script useful for compiling wxX11,
   especially if installing from zips (which don't preserve file
@@ -468,7 +453,7 @@ and configure before you can type make.
   # anyhow
   # -- Julian Smart
   chmod a+x configure config.sub config.guess
-  ./configure --with-shared --with-x11 --with-universal --without-gtk --with-debug_flag --with-debug_info --enable-debug --without-threads --without-sockets --without-odbc
+  ./configure --with-x11 --with-shared --with-debug_flag --with-debug_info --enable-debug --without-threads --without-sockets --without-odbc
   make
   -------:x-----Cut here-----:x-----
 
@@ -478,9 +463,9 @@ and configure before you can type make.
 Troubleshooting
 ---------------
 
-- Solaris compilation with gcc: if the compiler has problems with the variable argument
-  functions, try putting the gcc fixinclude file paths early in the include
-  path.
+- Solaris compilation with gcc: if the compiler has problems with the variable
+  argument functions, try putting the gcc fixinclude file paths early in the
+  include path.
 
 - If you operator-related compile errors or strange memory problems
   (for example in deletion of string arrays), set wxUSE_GLOBAL_MEMORY_OPERATORS
@@ -501,7 +486,7 @@ Other Notes
   recommended to use --with-debug_info and --with-debug_flag configure
   switches while developing your application. To compile in non-debug
   mode, remove the -D__WXDEBUG__ switch in make.env (or if using the
-  configure system, change --with-debug_flag to --without_debug_flag
+  configure system, change --with-debug_flag to --without-debug_flag
   and --with-debug_info to --without-debug_info in the makewxx11
   script).
 
Index: docs/x11/readme.txt
===================================================================
RCS file: /home/wxcvs/wxWindows/docs/x11/readme.txt,v
retrieving revision 1.5
diff -p -u -u -r1.5 readme.txt
--- docs/x11/readme.txt	19 Aug 2002 16:09:40 -0000	1.5
+++ docs/x11/readme.txt	13 Sep 2002 13:11:16 -0000
@@ -16,7 +16,7 @@ Information on how to install can be fou
 install.txt, but if you cannot wait, this should work on
 many systems:
 
-./configure --with-x11 --disable-shared --with-x11 --with-debug_flag --enable-log --with-debug_info --enable-debug --without-threads --without-sockets -without-odbc -with-libjpeg --enable-debug_cntxt --disable-no_rtti"
+./configure --with-x11 --disable-shared --with-debug_flag --enable-log --with-debug_info --enable-debug --without-threads --without-sockets -without-odbc -with-libjpeg --enable-debug_cntxt --disable-no_rtti
 
 make
 su <type root password>
@@ -28,10 +28,9 @@ When you run into problems, please read 
 follow those instructions. If you still don't have any success,
 please send a bug report to one of our mailing lists (see
 the wxWindows homepage) INCLUDING A DESCRIPTION OF YOUR SYSTEM AND
-YOUR PROBLEM, SUCH AS YOUR VERSION OF MOTIF, WXMOTIF, WHAT
-DISTRIBUTION YOU USE AND WHAT ERROR WAS REPORTED.
-Alternatively, you may also use the bug reporting system
-linked from the wxWindows web page.
+YOUR PROBLEM, SUCH AS YOUR VERSION OF X, WHAT DISTRIBUTION YOU USE
+AND WHAT ERROR WAS REPORTED. Alternatively, you may also use the bug
+reporting system linked from the wxWindows web page.
 
 The library produced by the install process will be called 
 libwx_x11univ[d].a (static) and libwx_x11univ[d]-2.3.so.0.0.0
@@ -63,8 +62,7 @@ Some remaining issues:
 - wxToggleButton implementation missing
 - wxSpinCtrl implementation missing
 - tooltips implementation missing
-- code common to the Motif and X11 ports needs to be
-  merged
+- code common to the Motif and X11 ports needs to be merged
 - need thread safety in event loop
 
   Regards,

 	  	 
