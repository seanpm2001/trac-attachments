Index: docs/latex/wx/config.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/config.tex,v
retrieving revision 1.45
diff -u -r1.45 config.tex
--- docs/latex/wx/config.tex	2006/07/14 22:08:35	1.45
+++ docs/latex/wx/config.tex	2007/01/08 12:44:41
@@ -383,12 +383,22 @@
 parameter is present but the style flag not, the relevant flag will be added
 to the style. For wxFileConfig you can also add wxCONFIG\_USE\_RELATIVE\_PATH 
 by logically or'ing it to either of the \_FILE options to tell wxFileConfig to 
-use relative instead of absolute paths.  For wxFileConfig, you can also 
-add wxCONFIG\_USE\_NO\_ESCAPE\_CHARACTERS which will turn off character 
-escaping for the values of entries stored in the config file: for example 
-a {\it foo} key with some backslash characters will be stored as {\tt foo=C:$\backslash$mydir} instead
-of the usual storage of {\tt foo=C:$\backslash\backslash$mydir}.
-For wxRegConfig, this flag refers to HKLM, and provides read-only access.
+use relative instead of absolute paths.
+
+On non-VMS Unix systems, the default local configuration file will be
+\tt{~/.appname}. However, this path may be used as user data dir
+(\helpref{wxStandardPaths::GetUserDataDir}{wxstandardpathsgetuserdatadir}). To
+work around this, it's possible to add the flag wxCONFIG\_USE\_SUBDIR which
+will change the default local configuration file to \tt{~/.appname/appname}.
+The flag is ignored on VMS, on non-Unix system or if a \textit{localFilename}
+is~provided. This flag is new since wxWidgets version 2.8.1
+
+For wxFileConfig, you can also add wxCONFIG\_USE\_NO\_ESCAPE\_CHARACTERS which
+will turn off character escaping for the values of entries stored in the config
+file: for example a {\it foo} key with some backslash characters will be stored
+as {\tt foo=C:$\backslash$mydir} instead of the usual storage of {\tt
+foo=C:$\backslash\backslash$mydir}. For wxRegConfig, this flag refers to HKLM,
+and provides read-only access.
 
 The wxCONFIG\_USE\_NO\_ESCAPE\_CHARACTERS style can be helpful if your config 
 file must be read or written to by a non-wxWidgets program (which might not 
Index: include/wx/confbase.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/confbase.h,v
retrieving revision 1.56
diff -u -r1.56 confbase.h
--- include/wx/confbase.h	2007/01/07 16:36:44	1.56
+++ include/wx/confbase.h	2007/01/08 12:44:42
@@ -56,7 +56,8 @@
     wxCONFIG_USE_LOCAL_FILE = 1,
     wxCONFIG_USE_GLOBAL_FILE = 2,
     wxCONFIG_USE_RELATIVE_PATH = 4,
-    wxCONFIG_USE_NO_ESCAPE_CHARACTERS = 8
+    wxCONFIG_USE_NO_ESCAPE_CHARACTERS = 8,
+    wxCONFIG_USE_SUBDIR = 16
 };
 
 // ----------------------------------------------------------------------------
Index: src/common/fileconf.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/fileconf.cpp,v
retrieving revision 1.161
diff -u -r1.161 fileconf.cpp
--- src/common/fileconf.cpp	2007/01/07 16:36:47	1.161
+++ src/common/fileconf.cpp	2007/01/08 12:44:47
@@ -435,7 +435,13 @@
 {
     // Make up names for files if empty
     if ( m_strLocalFile.empty() && (style & wxCONFIG_USE_LOCAL_FILE) )
+    {
         m_strLocalFile = GetLocalFileName(GetAppName());
+#if defined(__UNIX__) && !defined(__VMS)
+        if (style & wxCONFIG_USE_SUBDIR)
+            m_strLocalFile << wxT("/") << GetAppName();
+#endif
+    }
 
     if ( m_strGlobalFile.empty() && (style & wxCONFIG_USE_GLOBAL_FILE) )
         m_strGlobalFile = GetGlobalFileName(GetAppName());

 	  	 
