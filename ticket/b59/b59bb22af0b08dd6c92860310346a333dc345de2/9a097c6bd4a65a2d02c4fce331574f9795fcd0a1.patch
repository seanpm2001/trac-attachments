Index: src/unix/mediactrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/unix/mediactrl.cpp,v
retrieving revision 1.8
diff -b -u -2 -r1.8 mediactrl.cpp
--- src/unix/mediactrl.cpp	2005/07/28 23:56:56	1.8
+++ src/unix/mediactrl.cpp	2006/03/08 16:54:37
@@ -114,4 +114,5 @@
     void Cleanup();
 
+    bool DoLoad(const wxString& locstring);
     static void OnFinish(GstElement *play,  gpointer data);
     static void OnError (GstElement *play,  GstElement *src,
@@ -282,6 +283,6 @@
         if (par)
         {
-            int num = gst_value_get_fraction_numerator (par),
-                den = gst_value_get_fraction_denominator (par);
+            int num = par->data[0].v_int,
+                den = par->data[1].v_int;
 
             //TODO: maybe better fraction normalization...
@@ -369,16 +370,36 @@
 
 
-//---------------------------------------------------------------------------
+//-----------------------------------------------------------------------------
 // wxGStreamerMediaBackend::Load (File version)
 //
-// Just calls the URI version
-//---------------------------------------------------------------------------
+// Just calls DoLoad() with a prepended file scheme
+//-----------------------------------------------------------------------------
 bool wxGStreamerMediaBackend::Load(const wxString& fileName)
 {
-    return Load( 
-                    wxURI( 
-                            wxString( wxT("file://") ) + fileName 
-                         ) 
+    return DoLoad(wxString( wxT("file://") ) + fileName);
+}
+
+//-----------------------------------------------------------------------------
+// wxGStreamerMediaBackend::Load (URI version)
+//
+// In the case of a file URI passes it unencoded -
+// also, as of 0.10.3 and earlier GstURI (the uri parser for gstreamer)
+// is sort of broken and only accepts uris with at least two slashes
+// after the scheme (i.e. file: == not ok, file:// == ok)
+//-----------------------------------------------------------------------------
+bool wxGStreamerMediaBackend::Load(const wxURI& location)
+{
+    if(location.GetScheme().CmpNoCase(wxT("file")) == 0)
+    {
+        wxString uristring = location.BuildUnescapedURI();
+
+        //Workaround GstURI leading "//" problem and make sure it leads
+        //with that
+        return DoLoad(wxString(wxT("file://")) + 
+                      uristring.Right(uristring.Length() - 5)
                );
+    }
+    else 
+        return DoLoad(location.BuildURI());
 }
 
@@ -394,5 +415,5 @@
 
 //---------------------------------------------------------------------------
-// wxGStreamerMediaBackend::Load (URI version)
+// wxGStreamerMediaBackend::DoLoad
 //
 // 1) Stops/Cleanups the previous instance if there is any
@@ -405,5 +426,5 @@
 // 8) Get the video size - pause required to set the stream in action
 //---------------------------------------------------------------------------
-bool wxGStreamerMediaBackend::Load(const wxURI& location)
+bool wxGStreamerMediaBackend::DoLoad(const wxString& locstring)
 {
     //1
@@ -424,4 +445,5 @@
     GstElement* overlay = NULL;
     GstElement* videosink;
+    GstElement* audiosink = NULL; //NULL usually autodetects on gstreamer
 
 #if defined(__WXGTK__) && wxUSE_DYNLIB_CLASS
@@ -434,7 +456,11 @@
     {
         typedef GstElement* (*LPgst_gconf_get_default_video_sink) (void);
+        typedef GstElement* (*LPgst_gconf_get_default_audio_sink) (void);
         LPgst_gconf_get_default_video_sink pGst_gconf_get_default_video_sink = 
         (LPgst_gconf_get_default_video_sink)
             gstgconf.GetSymbol(wxT("gst_gconf_get_default_video_sink"));
+        LPgst_gconf_get_default_audio_sink pGst_gconf_get_default_audio_sink = 
+        (LPgst_gconf_get_default_audio_sink)
+            gstgconf.GetSymbol(wxT("gst_gconf_get_default_audio_sink"));
 
         if (pGst_gconf_get_default_video_sink)        
@@ -445,4 +471,8 @@
                                             GST_TYPE_X_OVERLAY);
         }
+        if (pGst_gconf_get_default_audio_sink)        
+        {
+            audiosink = (*pGst_gconf_get_default_audio_sink) ();
+        }
         
         gstgconf.Detach();
@@ -468,9 +498,8 @@
     g_object_set (G_OBJECT (m_player),
                     "video-sink", videosink,
-//                    "audio-sink", m_audiosink,
+                    "audio-sink", audiosink,
                     NULL);    
 
     //6
-    wxString locstring = location.BuildUnescapedURI();
     wxASSERT(gst_uri_protocol_is_valid("file"));
     wxASSERT(gst_uri_is_valid(locstring.mb_str()));

 	  	 
