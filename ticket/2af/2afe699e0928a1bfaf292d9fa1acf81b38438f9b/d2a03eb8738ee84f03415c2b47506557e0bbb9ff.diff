Index: include/wx/cmdproc.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/cmdproc.h,v
retrieving revision 1.9
diff -u -r1.9 cmdproc.h
--- include/wx/cmdproc.h	2003/02/25 12:43:06	1.9
+++ include/wx/cmdproc.h	2003/06/26 13:25:53
@@ -28,7 +28,7 @@
 class WXDLLEXPORT wxCommand : public wxObject
 {
 public:
-    wxCommand(bool canUndoIt = FALSE, const wxString& name = wxT(""));
+    wxCommand(bool canUndoIt = FALSE, const wxString& name = wxEmptyString);
     ~wxCommand();
 
     // Override this to perform a command
Index: include/wx/ffile.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/ffile.h,v
retrieving revision 1.10
diff -u -r1.10 ffile.h
--- include/wx/ffile.h	2003/03/17 10:33:30	1.10
+++ include/wx/ffile.h	2003/06/26 13:25:54
@@ -53,7 +53,7 @@
   bool Close();
 
   // assign an existing file descriptor and get it back from wxFFile object
-  void Attach(FILE *fp, const wxString& name = wxT(""))
+  void Attach(FILE *fp, const wxString& name = wxEmptyString)
     { Close(); m_fp = fp; m_name = name; }
   void Detach() { m_fp = NULL; }
   FILE *fp() const { return m_fp; }
Index: include/wx/fileconf.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/fileconf.h,v
retrieving revision 1.42
diff -u -r1.42 fileconf.h
--- include/wx/fileconf.h	2003/06/22 22:45:05	1.42
+++ include/wx/fileconf.h	2003/06/26 13:25:55
@@ -116,10 +116,10 @@
   // ctor & dtor
     // New constructor: one size fits all. Specify wxCONFIG_USE_LOCAL_FILE or
     // wxCONFIG_USE_GLOBAL_FILE to say which files should be used.
-  wxFileConfig(const wxString& appName = wxT(""),
-               const wxString& vendorName = wxT(""),
-               const wxString& localFilename = wxT(""),
-               const wxString& globalFilename = wxT(""),
+  wxFileConfig(const wxString& appName = wxEmptyString,
+               const wxString& vendorName = wxEmptyString,
+               const wxString& localFilename = wxEmptyString,
+               const wxString& globalFilename = wxEmptyString,
                long style = wxCONFIG_USE_LOCAL_FILE,
                wxMBConv& conv = wxConvUTF8);
 
Index: include/wx/filename.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/filename.h,v
retrieving revision 1.38
diff -u -r1.38 filename.h
--- include/wx/filename.h	2003/04/19 18:12:30	1.38
+++ include/wx/filename.h	2003/06/26 13:25:55
@@ -149,7 +149,7 @@
                 wxPathFormat format = wxPATH_NATIVE)
     {
         // empty volume
-        Assign(_T(""), path, name, ext, format);
+        Assign(wxEmptyString, path, name, ext, format);
     }
 
     void AssignDir(const wxString& dir, wxPathFormat format = wxPATH_NATIVE);
@@ -269,7 +269,7 @@
         // returns TRUE if the file name was modified, FALSE if we failed to do
         // anything with it (happens when the file is on a different volume,
         // for example)
-    bool MakeRelativeTo(const wxString& pathBase = _T(""),
+    bool MakeRelativeTo(const wxString& pathBase = wxEmptyString,
                         wxPathFormat format = wxPATH_NATIVE);
 
         // make the path absolute
Index: include/wx/fontenum.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/fontenum.h,v
retrieving revision 1.12
diff -u -r1.12 fontenum.h
--- include/wx/fontenum.h	2003/02/12 20:34:44	1.12
+++ include/wx/fontenum.h	2003/06/26 13:25:55
@@ -42,7 +42,7 @@
     // enumerate the different encodings either for given font facename or for
     // all facenames - will result in OnFontEncoding() being called for each
     // available (facename, encoding) couple
-    virtual bool EnumerateEncodings(const wxString& facename = wxT(""));
+    virtual bool EnumerateEncodings(const wxString& facename = wxEmptyString);
 
     // callbacks which are called after one of EnumerateXXX() functions from
     // above is invoked - all of them may return FALSE to stop enumeration or
Index: include/wx/helpbase.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/helpbase.h,v
retrieving revision 1.24
diff -u -r1.24 helpbase.h
--- include/wx/helpbase.h	2003/03/17 10:33:30	1.24
+++ include/wx/helpbase.h	2003/06/26 13:25:55
@@ -45,7 +45,7 @@
     virtual void SetViewer(const wxString& WXUNUSED(viewer), long WXUNUSED(flags) = 0) {}
 
     // If file is "", reloads file given  in Initialize
-    virtual bool LoadFile(const wxString& file = wxT("")) = 0;
+    virtual bool LoadFile(const wxString& file = wxEmptyString) = 0;
 
     // Displays the contents
     virtual bool DisplayContents(void) = 0;
Index: include/wx/image.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/image.h,v
retrieving revision 1.85
diff -u -r1.85 image.h
--- include/wx/image.h	2003/06/18 21:38:28	1.85
+++ include/wx/image.h	2003/06/26 13:25:55
@@ -51,7 +51,7 @@
 {
 public:
     wxImageHandler()
-        : m_name(wxT("")), m_extension(wxT("")), m_mime(), m_type(0)
+        : m_name(wxEmptyString), m_extension(wxEmptyString), m_mime(), m_type(0)
         { }
 
 #if wxUSE_STREAMS
Index: include/wx/log.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/log.h,v
retrieving revision 1.82
diff -u -r1.82 log.h
--- include/wx/log.h	2003/06/25 16:28:47	1.82
+++ include/wx/log.h	2003/06/26 13:25:56
@@ -442,7 +442,7 @@
 #define wxSysErrorMsg( X ) (const wxChar*)NULL
 
 // Fake symbolic trace masks... for those that are used frequently
-#define wxTRACE_OleCalls wxT("") // OLE interface calls
+#define wxTRACE_OleCalls wxEmptyString // OLE interface calls
 
 #endif // wxUSE_LOG/!wxUSE_LOG
 
Index: include/wx/mimetype.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/mimetype.h,v
retrieving revision 1.27
diff -u -r1.27 mimetype.h
--- include/wx/mimetype.h	2003/06/23 15:27:17	1.27
+++ include/wx/mimetype.h	2003/06/26 13:25:57
@@ -182,7 +182,7 @@
         // ctors
         MessageParameters() { }
         MessageParameters(const wxString& filename,
-                          const wxString& mimetype = _T(""))
+                          const wxString& mimetype = wxEmptyString)
             : m_filename(filename), m_mimetype(mimetype) { }
 
         // accessors (called by GetOpenCommand)
Index: include/wx/msw/regconf.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/msw/regconf.h,v
retrieving revision 1.23
diff -u -r1.23 regconf.h
--- include/wx/msw/regconf.h	2002/03/05 00:32:46	1.23
+++ include/wx/msw/regconf.h	2003/06/26 13:26:06
@@ -30,10 +30,10 @@
 public:
   // ctor & dtor
     // will store data in HKLM\appName and HKCU\appName
-  wxRegConfig(const wxString& appName = _T(""),
-              const wxString& vendorName = _T(""),
-              const wxString& localFilename = _T(""),
-              const wxString& globalFilename = _T(""),
+  wxRegConfig(const wxString& appName = wxEmptyString,
+              const wxString& vendorName = wxEmptyString,
+              const wxString& localFilename = wxEmptyString,
+              const wxString& globalFilename = wxEmptyString,
               long style = 0);
 
     // dtor will save unsaved data
Index: src/msw/app.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/app.cpp,v
retrieving revision 1.188
diff -u -r1.188 app.cpp
--- src/msw/app.cpp	2003/06/24 00:56:01	1.188
+++ src/msw/app.cpp	2003/06/26 13:27:58
@@ -213,8 +213,8 @@
     wxWindow *winActive = new wxFrame
                     (
                         wxTheApp->GetTopWindow(),
-                        -1,
-                        _T(""),
+                        wxID_ANY,
+                        wxEmptyString,
                         wxPoint(32600, 32600),
                         wxSize(1, 1),
                         wxDEFAULT_FRAME_STYLE | wxFRAME_NO_TASKBAR
Index: src/msw/bmpbuttn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/bmpbuttn.cpp,v
retrieving revision 1.32
diff -u -r1.32 bmpbuttn.cpp
--- src/msw/bmpbuttn.cpp	2003/06/02 10:27:03	1.32
+++ src/msw/bmpbuttn.cpp	2003/06/26 13:27:58
@@ -95,7 +95,7 @@
                    (
                     0,
                     wxT("BUTTON"),
-                    wxT(""),
+                    wxEmptyString,
                     msStyle,
                     0, 0, 0, 0,
                     GetWinHwnd(parent),
Index: src/msw/combobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/combobox.cpp,v
retrieving revision 1.57
diff -u -r1.57 combobox.cpp
--- src/msw/combobox.cpp	2003/05/06 21:57:32	1.57
+++ src/msw/combobox.cpp	2003/06/26 13:27:58
@@ -415,7 +415,7 @@
         // Scroll insertion point into view
         SendMessage(hEditWnd, EM_SCROLLCARET, (WPARAM)0, (LPARAM)0);
         // Why is this necessary? (Copied from wxTextCtrl::SetInsertionPoint)
-        SendMessage(hEditWnd, EM_REPLACESEL, 0, (LPARAM)_T(""));
+        SendMessage(hEditWnd, EM_REPLACESEL, 0, (LPARAM) wxEmptyString);
     }
 #endif // __WIN32__
 }
Index: src/msw/dcprint.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/dcprint.cpp,v
retrieving revision 1.38
diff -u -r1.38 dcprint.cpp
--- src/msw/dcprint.cpp	2003/04/03 13:19:15	1.38
+++ src/msw/dcprint.cpp	2003/06/26 13:27:58
@@ -276,7 +276,7 @@
         GlobalFree(pd.hDevMode);
         pd.hDevMode=NULL;
     }
-    return ( deviceName != wxT("") );
+    return ( deviceName != wxEmptyString );
 }
 
 // Gets an HDC for the specified printer configuration
Index: src/msw/filedlg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/filedlg.cpp,v
retrieving revision 1.51
diff -u -r1.51 filedlg.cpp
--- src/msw/filedlg.cpp	2003/06/14 13:31:42	1.51
+++ src/msw/filedlg.cpp	2003/06/26 13:27:59
@@ -99,7 +99,7 @@
     if ( ( m_dialogStyle & wxMULTIPLE ) && ( m_dialogStyle & wxSAVE ) )
         m_dialogStyle &= ~wxMULTIPLE;
     m_parent = parent;
-    m_path = wxT("");
+    m_path = wxEmptyString;
     m_fileName = defaultFileName;
     m_dir = defaultDir;
     m_wildCard = wildCard;
Index: src/msw/font.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/font.cpp,v
retrieving revision 1.51
diff -u -r1.51 font.cpp
--- src/msw/font.cpp	2003/02/12 15:42:24	1.51
+++ src/msw/font.cpp	2003/06/26 13:28:00
@@ -64,7 +64,7 @@
     wxFontRefData()
     {
         Init(-1, wxFONTFAMILY_DEFAULT, wxFONTSTYLE_NORMAL, wxFONTWEIGHT_NORMAL,
-             FALSE, _T(""), wxFONTENCODING_DEFAULT);
+             FALSE, wxEmptyString, wxFONTENCODING_DEFAULT);
     }
 
     wxFontRefData(int size,
@@ -891,7 +891,7 @@
 
 wxString wxFont::GetFaceName() const
 {
-    wxCHECK_MSG( Ok(), wxT(""), wxT("invalid font") );
+    wxCHECK_MSG( Ok(), wxEmptyString, wxT("invalid font") );
 
     return M_FONTDATA->GetFaceName();
 }
Index: src/msw/iniconf.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/iniconf.cpp,v
retrieving revision 1.22
diff -u -r1.22 iniconf.cpp
--- src/msw/iniconf.cpp	2003/03/17 11:21:53	1.22
+++ src/msw/iniconf.cpp	2003/06/26 13:28:00
@@ -95,7 +95,7 @@
     }
 
     // set root path
-    SetPath(wxT(""));
+    SetPath(wxEmptyString);
 }
 
 wxIniConfig::~wxIniConfig()
Index: src/msw/listctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/listctrl.cpp,v
retrieving revision 1.161
diff -u -r1.161 listctrl.cpp
--- src/msw/listctrl.cpp	2003/06/03 21:22:35	1.161
+++ src/msw/listctrl.cpp	2003/06/26 13:28:01
@@ -313,7 +313,7 @@
     // Create the ListView control.
     m_hWnd = (WXHWND)CreateWindowEx(exStyle,
                                     WC_LISTVIEW,
-                                    wxT(""),
+                                    wxEmptyString,
                                     wstyle,
                                     x, y, w, h,
                                     GetWinHwnd(GetParent()),
Index: src/msw/metafile.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/metafile.cpp,v
retrieving revision 1.22
diff -u -r1.22 metafile.cpp
--- src/msw/metafile.cpp	2003/03/17 11:21:53	1.22
+++ src/msw/metafile.cpp	2003/06/26 13:28:01
@@ -94,7 +94,7 @@
 
     M_METAFILEDATA->m_windowsMappingMode = wxMM_ANISOTROPIC;
     M_METAFILEDATA->m_metafile = 0;
-    if (!file.IsNull() && (file.Cmp(wxT("")) == 0))
+    if (!file.IsNull() && (file.Cmp(wxEmptyString) == 0))
         M_METAFILEDATA->m_metafile = (WXHANDLE) GetMetaFile(file);
 }
 
@@ -180,7 +180,7 @@
     if (!file.IsNull() && wxFileExists(file))
         wxRemoveFile(file);
 
-    if (!file.IsNull() && (file != wxT("")))
+    if (!file.IsNull() && (file != wxEmptyString))
         m_hDC = (WXHDC) CreateMetaFile(file);
     else
         m_hDC = (WXHDC) CreateMetaFile(NULL);
Index: src/msw/mimetype.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/mimetype.cpp,v
retrieving revision 1.21
diff -u -r1.21 mimetype.cpp
--- src/msw/mimetype.cpp	2003/06/23 13:49:15	1.21
+++ src/msw/mimetype.cpp	2003/06/26 13:28:01
@@ -111,7 +111,7 @@
         // get it from the registry
         wxFileTypeImpl *self = wxConstCast(this, wxFileTypeImpl);
         wxRegKey rkey(wxRegKey::HKCR, m_ext);
-        if ( !rkey.Exists() || !rkey.QueryValue(_T(""), self->m_strFileType) )
+        if ( !rkey.Exists() || !rkey.QueryValue(wxEmptyString, self->m_strFileType) )
         {
             wxLogDebug(_T("Can't get the filetype for extension '%s'."),
                        m_ext.c_str());
@@ -164,7 +164,7 @@
     wxRegKey rkey(wxRegKey::HKCR, m_ext);
     if ( !rkey.Exists() )
     {
-        if ( !rkey.Create() || !rkey.SetValue(_T(""), m_strFileType) )
+        if ( !rkey.Create() || !rkey.SetValue(wxEmptyString, m_strFileType) )
         {
             wxLogError(_("Failed to create registry entry for '%s' files."),
                        m_ext.c_str());
@@ -201,7 +201,7 @@
     wxString command;
     if ( key.Open() ) {
         // it's the default value of the key
-        if ( key.QueryValue(wxT(""), command) ) {
+        if ( key.QueryValue(wxEmptyString, command) ) {
             // transform it from '%1' to '%s' style format string (now also
             // test for %L - apparently MS started using it as well for the
             // same purpose)
@@ -230,13 +230,13 @@
             wxRegKey keyDDE(wxRegKey::HKCR, strKey);
             if ( keyDDE.Open() ) {
                 wxString ddeCommand, ddeServer, ddeTopic;
-                keyDDE.QueryValue(_T(""), ddeCommand);
+                keyDDE.QueryValue(wxEmptyString, ddeCommand);
                 ddeCommand.Replace(_T("%1"), _T("%s"));
 
                 wxRegKey(wxRegKey::HKCR, strKey + _T("\\Application")).
-                    QueryValue(_T(""), ddeServer);
+                    QueryValue(wxEmptyString, ddeServer);
                 wxRegKey(wxRegKey::HKCR, strKey + _T("\\Topic")).
-                    QueryValue(_T(""), ddeTopic);
+                    QueryValue(wxEmptyString, ddeTopic);
 
                 if (ddeTopic.IsEmpty())
                     ddeTopic = wxT("System");
@@ -347,7 +347,7 @@
     if ( key.Open() ) {
         wxString strIcon;
         // it's the default value of the key
-        if ( key.QueryValue(wxT(""), strIcon) ) {
+        if ( key.QueryValue(wxEmptyString, strIcon) ) {
             // the format is the following: <full path to file>, <icon index>
             // NB: icon index may be negative as well as positive and the full
             //     path may contain the environment variables inside '%'
@@ -384,7 +384,7 @@
 
     if ( key.Open() ) {
         // it's the default value of the key
-        if ( key.QueryValue(wxT(""), *desc) ) {
+        if ( key.QueryValue(wxEmptyString, *desc) ) {
             return TRUE;
         }
     }
@@ -421,7 +421,7 @@
     wxRegKey key(wxRegKey::HKCR, str);
     if ( key.Open() ) {
         // it's the default value of the key
-        if ( key.QueryValue(wxT(""), strFileType) ) {
+        if ( key.QueryValue(wxEmptyString, strFileType) ) {
             // create the new wxFileType object
             return CreateFileType(strFileType, ext);
         }
@@ -542,7 +542,7 @@
                 filetype = filetypeOrig;
             }
 
-            ok = key.SetValue(_T(""), filetype);
+            ok = key.SetValue(wxEmptyString, filetype);
         }
         }
         else
@@ -551,11 +551,11 @@
             if (!filetypeOrig.empty())
                 {
                     filetype = filetypeOrig;
-                    ok = key.SetValue(_T(""), filetype);
+                    ok = key.SetValue(wxEmptyString, filetype);
                 }
             else
                 {
-                    ok = key.QueryValue(_T(""), filetype);
+                    ok = key.QueryValue(wxEmptyString, filetype);
                 }
         }
         // now set a mimetypeif we have it, but ignore it if none
@@ -593,7 +593,7 @@
 
             wxRegKey key(wxRegKey::HKCR, extWithDot);
             if ( !key.Exists() ) ok = key.Create();
-            ok = key.SetValue(_T(""), filetype);
+            ok = key.SetValue(wxEmptyString, filetype);
 
         // now set any mimetypes we may have, but ignore it if none
         const wxString& mimetype = ftInfo.GetMimeType();
@@ -657,7 +657,7 @@
     {
 #if wxUSE_GUI
         wxString old;
-        rkey.QueryValue(wxT(""), old);
+        rkey.QueryValue(wxEmptyString, old);
         if ( wxMessageBox
              (
                 wxString::Format(
@@ -681,7 +681,7 @@
     // TODO:
     // 1. translate '%s' to '%1' instead of always adding it
     // 2. create DDEExec value if needed (undo GetCommand)
-    return rkey.Create() && rkey.SetValue(_T(""), cmd + _T(" \"%1\"") );
+    return rkey.Create() && rkey.SetValue(wxEmptyString, cmd + _T(" \"%1\"") );
 }
 
 /* // no longer used
@@ -724,7 +724,7 @@
     wxRegKey rkey(wxRegKey::HKCR, m_strFileType + _T("\\DefaultIcon"));
 
     return rkey.Create() &&
-           rkey.SetValue(_T(""),
+           rkey.SetValue(wxEmptyString,
                          wxString::Format(_T("%s,%d"), cmd.c_str(), index));
 }
 
@@ -739,7 +739,7 @@
     wxRegKey rkey(wxRegKey::HKCR, m_strFileType );
 
     return rkey.Create() &&
-           rkey.SetValue(_T(""), desc);
+           rkey.SetValue(wxEmptyString, desc);
 }
 
 // ----------------------------------------------------------------------------
Index: src/msw/notebook.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/notebook.cpp,v
retrieving revision 1.77
diff -u -r1.77 notebook.cpp
--- src/msw/notebook.cpp	2003/06/05 13:35:50	1.77
+++ src/msw/notebook.cpp	2003/06/26 13:28:01
@@ -175,7 +175,7 @@
                         wxDefaultValidator, name) )
         return FALSE;
 
-    if ( !MSWCreateControl(WC_TABCONTROL, _T(""), pos, size) )
+    if ( !MSWCreateControl(WC_TABCONTROL, wxEmptyString, pos, size) )
         return FALSE;
 
     SetBackgroundColour(wxColour(::GetSysColor(COLOR_BTNFACE)));
@@ -265,7 +265,7 @@
 
 wxString wxNotebook::GetPageText(int nPage) const
 {
-  wxCHECK_MSG( IS_VALID_PAGE(nPage), wxT(""), wxT("notebook page out of range") );
+  wxCHECK_MSG( IS_VALID_PAGE(nPage), wxEmptyString, wxT("notebook page out of range") );
 
   wxChar buf[256];
   TC_ITEM tcItem;
Index: src/msw/radiobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/radiobox.cpp,v
retrieving revision 1.69
diff -u -r1.69 radiobox.cpp
--- src/msw/radiobox.cpp	2003/03/17 11:21:54	1.69
+++ src/msw/radiobox.cpp	2003/06/26 13:28:02
@@ -300,7 +300,7 @@
 
     // Create a dummy radio control to end the group.
     (void)::CreateWindow(_T("BUTTON"),
-                         _T(""),
+                         wxEmptyString,
                          WS_GROUP | BS_AUTORADIOBUTTON | WS_CHILD,
                          0, 0, 0, 0, hwndParent,
                          (HMENU)NewControlId(), wxGetInstance(), NULL);
Index: src/msw/regconf.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/regconf.cpp,v
retrieving revision 1.44
diff -u -r1.44 regconf.cpp
--- src/msw/regconf.cpp	2003/03/17 11:21:54	1.44
+++ src/msw/regconf.cpp	2003/06/26 13:28:02
@@ -124,7 +124,7 @@
   m_keyLocal.ReserveMemoryForName(MEMORY_PREALLOC);
 
   m_keyLocalRoot.SetName(wxRegKey::HKCU, SOFTWARE_KEY + str);
-  m_keyLocal.SetName(m_keyLocalRoot, _T(""));
+  m_keyLocal.SetName(m_keyLocalRoot, wxEmptyString);
 
   if ( bDoUseGlobal )
   {
@@ -134,7 +134,7 @@
     m_keyGlobal.ReserveMemoryForName(MEMORY_PREALLOC);
 
     m_keyGlobalRoot.SetName(wxRegKey::HKLM, SOFTWARE_KEY + str);
-    m_keyGlobal.SetName(m_keyGlobalRoot, _T(""));
+    m_keyGlobal.SetName(m_keyGlobalRoot, wxEmptyString);
   }
 
   // Create() will Open() if key already exists
Index: src/msw/registry.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/registry.cpp,v
retrieving revision 1.49
diff -u -r1.49 registry.cpp
--- src/msw/registry.cpp	2003/05/23 19:16:44	1.49
+++ src/msw/registry.cpp	2003/06/26 13:28:02
@@ -127,7 +127,7 @@
 const wxChar *wxRegKey::GetStdKeyName(size_t key)
 {
   // return empty string if key is invalid
-  wxCHECK_MSG( key < nStdKeys, wxT(""), wxT("invalid key in wxRegKey::GetStdKeyName") );
+  wxCHECK_MSG( key < nStdKeys, wxEmptyString, wxT("invalid key in wxRegKey::GetStdKeyName") );
 
   return aStdKeys[key].szName;
 }
@@ -135,7 +135,7 @@
 const wxChar *wxRegKey::GetStdKeyShortName(size_t key)
 {
   // return empty string if key is invalid
-  wxCHECK( key < nStdKeys, wxT("") );
+  wxCHECK( key < nStdKeys, wxEmptyString );
 
   return aStdKeys[key].szShortName;
 }
Index: src/msw/slider95.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/slider95.cpp,v
retrieving revision 1.39
diff -u -r1.39 slider95.cpp
--- src/msw/slider95.cpp	2003/05/26 22:57:51	1.39
+++ src/msw/slider95.cpp	2003/06/26 13:28:02
@@ -155,7 +155,7 @@
 
     HWND scroll_bar = CreateWindowEx
         (
-            exStyle, TRACKBAR_CLASS, wxT(""),
+            exStyle, TRACKBAR_CLASS, wxEmptyString,
             msStyle,
             0, 0, 0, 0, (HWND) parent->GetHWND(), (HMENU)m_windowId,
             wxGetInstance(), NULL
@@ -174,7 +174,7 @@
 
     SubclassWin(GetHWND());
 
-    ::SetWindowText((HWND) m_hWnd, wxT(""));
+    ::SetWindowText((HWND) m_hWnd, wxEmptyString);
 
     SetFont(parent->GetFont());
 
Index: src/msw/slidrmsw.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/slidrmsw.cpp,v
retrieving revision 1.26
diff -u -r1.26 slidrmsw.cpp
--- src/msw/slidrmsw.cpp	2003/05/07 08:32:57	1.26
+++ src/msw/slidrmsw.cpp	2003/06/26 13:28:02
@@ -108,7 +108,7 @@
   else
     msStyle = SBS_HORZ | WS_CHILD | WS_VISIBLE | WS_TABSTOP ;
 
-  HWND scroll_bar = CreateWindowEx(exStyle, wxT("SCROLLBAR"), wxT(""),
+  HWND scroll_bar = CreateWindowEx(exStyle, wxT("SCROLLBAR"), wxEmptyString,
                          msStyle,
                          0, 0, 0, 0, (HWND) parent->GetHWND(), (HMENU)m_windowId,
                          wxGetInstance(), NULL);
Index: src/msw/statbmp.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/statbmp.cpp,v
retrieving revision 1.37
diff -u -r1.37 statbmp.cpp
--- src/msw/statbmp.cpp	2003/05/26 22:13:56	1.37
+++ src/msw/statbmp.cpp	2003/06/26 13:28:02
@@ -128,7 +128,7 @@
 #else // Win16
                            _T("BUTTON"),
 #endif // Win32/16
-                           _T(""), pos, size) )
+                           wxEmptyString, pos, size) )
     {
         // control creation failed
         return FALSE;
Index: src/msw/statline.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/statline.cpp,v
retrieving revision 1.14
diff -u -r1.14 statline.cpp
--- src/msw/statline.cpp	2003/01/10 23:27:17	1.14
+++ src/msw/statline.cpp	2003/06/26 13:28:02
@@ -64,7 +64,7 @@
     if ( !CreateControl(parent, id, pos, size, style, wxDefaultValidator, name) )
         return FALSE;
 
-    return MSWCreateControl(_T("STATIC"), _T(""), pos, size);
+    return MSWCreateControl(_T("STATIC"), wxEmptyString, pos, size);
 }
 
 WXDWORD wxStaticLine::MSWGetStyle(long style, WXDWORD *exstyle) const
Index: src/msw/tabctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/tabctrl.cpp,v
retrieving revision 1.27
diff -u -r1.27 tabctrl.cpp
--- src/msw/tabctrl.cpp	2003/05/23 19:16:45	1.27
+++ src/msw/tabctrl.cpp	2003/06/26 13:28:02
@@ -106,7 +106,7 @@
   // Create the toolbar control.
   HWND hWndTabCtrl = CreateWindowEx(0L,     // No extended styles.
     WC_TABCONTROL,                          // Class name for the tab control
-    wxT(""),                                 // No default text.
+    wxEmptyString,                          // No default text.
     tabStyle,    // Styles and defaults.
     x, y, width, height,                    // Standard size and position.
     (HWND) parent->GetHWND(),               // Parent window
@@ -237,7 +237,7 @@
 wxString wxTabCtrl::GetItemText(int item) const
 {
     wxChar buf[256];
-    wxString str(wxT(""));
+    wxString str(wxEmptyString);
     TC_ITEM tcItem;
     tcItem.mask = TCIF_TEXT;
     tcItem.pszText = buf;
@@ -299,7 +299,7 @@
     TC_ITEM tcItem;
     tcItem.mask = TCIF_PARAM;
     tcItem.lParam = (long) data;
-    if (text != wxT(""))
+    if (text != wxEmptyString)
     {
         tcItem.mask |= TCIF_TEXT;
         wxStrcpy(buf, (const wxChar*) text);
Index: src/msw/tbar95.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/tbar95.cpp,v
retrieving revision 1.103
diff -u -r1.103 tbar95.cpp
--- src/msw/tbar95.cpp	2003/05/23 19:16:45	1.103
+++ src/msw/tbar95.cpp	2003/06/26 13:28:03
@@ -245,7 +245,7 @@
 
 bool wxToolBar::MSWCreateToolbar(const wxPoint& pos, const wxSize& size)
 {
-    if ( !MSWCreateControl(TOOLBARCLASSNAME, _T(""), pos, size) )
+    if ( !MSWCreateControl(TOOLBARCLASSNAME, wxEmptyString, pos, size) )
         return FALSE;
 
     // toolbar-specific post initialisation
Index: src/msw/textctrl.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/textctrl.cpp,v
retrieving revision 1.168
diff -u -r1.168 textctrl.cpp
--- src/msw/textctrl.cpp	2003/06/23 13:14:40	1.168
+++ src/msw/textctrl.cpp	2003/06/26 13:28:03
@@ -757,7 +757,7 @@
 
 void wxTextCtrl::Clear()
 {
-    ::SetWindowText(GetHwnd(), wxT(""));
+    ::SetWindowText(GetHwnd(), wxEmptyString);
 
 #if wxUSE_RICHEDIT
     if ( !IsRich() )
@@ -1072,7 +1072,7 @@
 
 void wxTextCtrl::Remove(long from, long to)
 {
-    Replace(from, to, _T(""));
+    Replace(from, to, wxEmptyString);
 }
 
 bool wxTextCtrl::LoadFile(const wxString& file)
Index: src/msw/toplevel.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/toplevel.cpp,v
retrieving revision 1.52
diff -u -r1.52 toplevel.cpp
--- src/msw/toplevel.cpp	2003/05/07 15:03:11	1.52
+++ src/msw/toplevel.cpp	2003/06/26 13:28:03
@@ -945,7 +945,7 @@
             }
         }
 
-        ms_hwnd = ::CreateWindow(ms_className, _T(""), 0, 0, 0, 0, 0, NULL,
+        ms_hwnd = ::CreateWindow(ms_className, wxEmptyString, 0, 0, 0, 0, 0, NULL,
                                  (HMENU)NULL, wxGetInstance(), NULL);
         if ( !ms_hwnd )
         {
Index: src/msw/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/utils.cpp,v
retrieving revision 1.114
diff -u -r1.114 utils.cpp
--- src/msw/utils.cpp	2003/06/24 00:56:01	1.114
+++ src/msw/utils.cpp	2003/06/26 13:28:04
@@ -311,7 +311,7 @@
 #else  // !USE_NET_API
         // Could use NIS, MS-Mail or other site specific programs
         // Use wxWindows configuration data
-        bool ok = GetProfileString(WX_SECTION, eUSERNAME, wxT(""), buf, maxSize - 1) != 0;
+        bool ok = GetProfileString(WX_SECTION, eUSERNAME, wxEmptyString, buf, maxSize - 1) != 0;
         if ( !ok )
         {
             ok = wxGetUserId(buf, maxSize);
Index: src/msw/utilsexc.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/utilsexc.cpp,v
retrieving revision 1.61
diff -u -r1.61 utilsexc.cpp
--- src/msw/utilsexc.cpp	2003/06/24 00:56:01	1.61
+++ src/msw/utilsexc.cpp	2003/06/26 13:28:04
@@ -454,7 +454,7 @@
     bool ok = FALSE;
 
     wxDDEClient client;
-    wxConnectionBase *conn = client.MakeConnection(_T(""),
+    wxConnectionBase *conn = client.MakeConnection(wxEmptyString,
                                                    ddeServer,
                                                    ddeTopic);
     if ( !conn )
Index: src/msw/utilsgui.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/utilsgui.cpp,v
retrieving revision 1.1
diff -u -r1.1 utilsgui.cpp
--- src/msw/utilsgui.cpp	2003/06/24 00:56:01	1.1
+++ src/msw/utilsgui.cpp	2003/06/26 13:28:04
@@ -43,7 +43,7 @@
 #if wxUSE_RESOURCES
 bool wxWriteResource(const wxString& section, const wxString& entry, const wxString& value, const wxString& file)
 {
-  if (file != wxT(""))
+  if (file != wxEmptyString)
 // Don't know what the correct cast should be, but it doesn't
 // compile in BC++/16-bit without this cast.
 #if !defined(__WIN32__)
@@ -82,7 +82,7 @@
 bool wxGetResource(const wxString& section, const wxString& entry, wxChar **value, const wxString& file)
 {
     static const wxChar defunkt[] = wxT("$$default");
-    if (file != wxT(""))
+    if (file != wxEmptyString)
     {
         int n = GetPrivateProfileString((LPCTSTR)WXSTRINGCAST section, (LPCTSTR)WXSTRINGCAST entry, (LPCTSTR)defunkt,
                 (LPTSTR)wxBuffer, 1000, (LPCTSTR)WXSTRINGCAST file);
Index: src/msw/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/window.cpp,v
retrieving revision 1.388
diff -u -r1.388 window.cpp
--- src/msw/window.cpp	2003/06/22 21:56:43	1.388
+++ src/msw/window.cpp	2003/06/26 13:28:04
@@ -2913,7 +2913,7 @@
                        (
                             extendedStyle,
                             className,
-                            title ? title : wxT(""),
+                            title ? title : wxEmptyString,
                             style,
                             x, y, w, h,
                             (HWND)MSWGetParent(),
Index: src/msw/ole/dataobj.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/ole/dataobj.cpp,v
retrieving revision 1.67
diff -u -r1.67 dataobj.cpp
--- src/msw/ole/dataobj.cpp	2003/06/18 12:09:01	1.67
+++ src/msw/ole/dataobj.cpp	2003/06/26 13:28:05
@@ -62,7 +62,7 @@
 #ifdef __WXDEBUG__
     static const wxChar *GetTymedName(DWORD tymed);
 #else // !Debug
-    #define GetTymedName(tymed) _T("")
+    #define GetTymedName(tymed) wxEmptyString
 #endif // Debug/!Debug
 
 // ----------------------------------------------------------------------------
Index: wxPython/distrib/mac/wxPythonOSX/PieShell.icns
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/wxPython/distrib/mac/wxPythonOSX/PieShell.icns,v
retrieving revision 1.4
diff -u -r1.4 PieShell.icns
Binary files /tmp/cvsLBAULaqnx and PieShell.icns differ
Index: wxPython/distrib/mac/wxPythonOSX/RunDemo.icns
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/wxPython/distrib/mac/wxPythonOSX/RunDemo.icns,v
retrieving revision 1.4
diff -u -r1.4 RunDemo.icns
Binary files /tmp/cvsMBAVLaqnx and RunDemo.icns differ
Index: wxPython/distrib/mac/wxPythonOSX/XRCed.icns
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/wxPython/distrib/mac/wxPythonOSX/XRCed.icns,v
retrieving revision 1.4
diff -u -r1.4 XRCed.icns
Binary files /tmp/cvsNBAWLaqnx and XRCed.icns differ

 	  	 
