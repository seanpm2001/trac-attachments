From 0e9bc4bcb3f8990f6e3a7462f409251220eea603 Mon Sep 17 00:00:00 2001
From: Martin Koegler <martin.koegler@chello.at>
Date: Thu, 23 Jul 2015 00:14:40 +0200
Subject: [PATCH 3/3] GTK3 touch support

---
 include/wx/gtk/window.h |  2 ++
 src/gtk/window.cpp      | 50 +++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 52 insertions(+)

diff --git a/include/wx/gtk/window.h b/include/wx/gtk/window.h
index ed7b804..962505e 100644
--- a/include/wx/gtk/window.h
+++ b/include/wx/gtk/window.h
@@ -271,6 +271,8 @@ public:
     void GTKDisableFocusOutEvent();
     void GTKEnableFocusOutEvent();
 
+    bool EnableTouchEvents();
+    void DisableTouchEvents();
 
     // Input method support
 
diff --git a/src/gtk/window.cpp b/src/gtk/window.cpp
index 743743a..6570919 100644
--- a/src/gtk/window.cpp
+++ b/src/gtk/window.cpp
@@ -1284,6 +1284,36 @@ wxWindowGTK *FindWindowForMouseEvent(wxWindowGTK *win, wxCoord& x, wxCoord& y)
     return win;
 }
 
+#ifdef __WXGTK3__
+static
+gboolean handle_touch(GtkWidget *widget, GdkEventTouch  *event, wxWindowGTK* win)
+{
+    wxEventType type;
+
+    switch(event->type)
+    {
+    case GDK_TOUCH_BEGIN:
+        type = wxEVT_TOUCH_DOWN;
+        break;
+
+    case GDK_TOUCH_UPDATE:
+        type = wxEVT_TOUCH_MOVE;
+        break;
+
+    case GDK_TOUCH_END:
+    case GDK_TOUCH_CANCEL:
+        type = wxEVT_TOUCH_UP;
+        break;
+
+    default:
+        return false;
+    }
+    wxTouchEvent e(type, wxPoint(event->x, event->y), event->sequence, event->emulating_pointer);
+    win->HandleWindowEvent(e);
+    return false;
+}
+#endif
+
 // ----------------------------------------------------------------------------
 // common event handlers helpers
 // ----------------------------------------------------------------------------
@@ -5056,6 +5086,26 @@ GdkWindow* wxWindowGTK::GTKGetDrawingWindow() const
     return window;
 }
 
+bool wxWindowGTK::EnableTouchEvents()
+{
+#ifdef __WXGTK3__
+    GtkWidget* widget = GetConnectWidget();
+    g_signal_connect(widget, "touch-event", G_CALLBACK(handle_touch), this);
+    gtk_widget_add_events(widget, GDK_TOUCH_MASK);
+    return true;
+#else
+    return false;
+#endif
+}
+
+void wxWindowGTK::DisableTouchEvents()
+{
+#ifdef __WXGTK3__
+    GtkWidget* widget = GetConnectWidget();
+    g_signal_handlers_disconnect_by_func(widget, (void*)handle_touch, this);
+#endif
+}
+
 // ----------------------------------------------------------------------------
 // freeze/thaw
 // ----------------------------------------------------------------------------
-- 
2.1.4

