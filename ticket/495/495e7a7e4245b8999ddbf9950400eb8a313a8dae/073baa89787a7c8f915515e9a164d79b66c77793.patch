From 76477bd1d9e3b9c1e5269c8e5bc62bb61fc73384 Mon Sep 17 00:00:00 2001
From: Martin Koegler <martin.koegler@chello.at>
Date: Thu, 23 Jul 2015 00:14:40 +0200
Subject: [PATCH 3/3] GTK3 touch support

---
 include/wx/gtk/window.h |  2 ++
 src/gtk/window.cpp      | 56 +++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 58 insertions(+)

diff --git a/include/wx/gtk/window.h b/include/wx/gtk/window.h
index ed7b804..3136214 100644
--- a/include/wx/gtk/window.h
+++ b/include/wx/gtk/window.h
@@ -271,6 +271,8 @@ public:
     void GTKDisableFocusOutEvent();
     void GTKEnableFocusOutEvent();
 
+    bool EnableTouchEvents(bool enable = false);
+    bool DisableTouchEvents() { return EnableTouchEvents(false); }
 
     // Input method support
 
diff --git a/src/gtk/window.cpp b/src/gtk/window.cpp
index 743743a..43283f4 100644
--- a/src/gtk/window.cpp
+++ b/src/gtk/window.cpp
@@ -1284,6 +1284,39 @@ wxWindowGTK *FindWindowForMouseEvent(wxWindowGTK *win, wxCoord& x, wxCoord& y)
     return win;
 }
 
+#ifdef __WXGTK3__
+static
+gboolean wxgtk_handle_touch(GtkWidget *widget, GdkEventTouch  *event, wxWindowGTK* win)
+{
+    wxEventType type;
+
+    switch(event->type)
+    {
+    case GDK_TOUCH_BEGIN:
+        type = wxEVT_TOUCH_BEGIN;
+        break;
+
+    case GDK_TOUCH_UPDATE:
+        type = wxEVT_TOUCH_MOVE;
+        break;
+
+    case GDK_TOUCH_END:
+        type = wxEVT_TOUCH_END;
+        break;
+
+    case GDK_TOUCH_CANCEL:
+        type = wxEVT_TOUCH_CANCEL;
+        break;
+
+    default:
+        return false;
+    }
+    wxTouchEvent e(type, wxPoint(event->x, event->y), wxTouchPointId(event->sequence), event->emulating_pointer);
+    win->HandleWindowEvent(e);
+    return false;
+}
+#endif
+
 // ----------------------------------------------------------------------------
 // common event handlers helpers
 // ----------------------------------------------------------------------------
@@ -5056,6 +5089,29 @@ GdkWindow* wxWindowGTK::GTKGetDrawingWindow() const
     return window;
 }
 
+bool wxWindowGTK::EnableTouchEvents(bool enable)
+{
+    if (enable)
+    {
+#ifdef __WXGTK3__
+        GtkWidget* widget = GetConnectWidget();
+        g_signal_connect(widget, "touch-event", G_CALLBACK(wxgtk_handle_touch), this);
+        gtk_widget_add_events(widget, GDK_TOUCH_MASK);
+        return true;
+#else
+        return false;
+#endif
+    }
+    else
+    {
+#ifdef __WXGTK3__
+        GtkWidget* widget = GetConnectWidget();
+        g_signal_handlers_disconnect_by_func(widget, (void*)wxgtk_handle_touch, this);
+#endif
+        return true;
+    }
+}
+
 // ----------------------------------------------------------------------------
 // freeze/thaw
 // ----------------------------------------------------------------------------
-- 
2.1.4

