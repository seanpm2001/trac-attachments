diff --git "a/C:\\Users\\FOREST~1\\AppData\\Local\\Temp\\TortoiseGit\\sof8BA6.tmp\\softwareupdate-14476d7-left.py" "b/E:\\PyDevSrc7\\wxPython\\wx\\lib\\softwareupdate.py"
index 0eac12f..4a70ffd 100644
--- "a/C:\\Users\\FOREST~1\\AppData\\Local\\Temp\\TortoiseGit\\sof8BA6.tmp\\softwareupdate-14476d7-left.py"
+++ "b/E:\\PyDevSrc7\\wxPython\\wx\\lib\\softwareupdate.py"
@@ -49,13 +49,17 @@ except AttributeError:
 SOT = 0
 #if 'wxMac' in wx.PlatformInfo:
 #    SOT = wx.STAY_ON_TOP
-    
-#----------------------------------------------------------------------
 
+def get_errortext():
+    """ Use traceback module to get a list of strings containing the full
+        traceback text of the current error. The last line is usually sufficient 
+    """
+    import traceback
+    exc_type, exc_value, exc_traceback = sys.exc_info()
+    text_list = traceback.format_exception(exc_type, exc_value, exc_traceback)
+    return text_list
 
-class UpdateAbortedError(RuntimeError):
-    pass
-
+#----------------------------------------------------------------------
 
 class SoftwareUpdate(object):
     """
@@ -225,14 +229,17 @@ class SoftwareUpdate(object):
                 # into component steps.
                 self._esky.auto_update(self._updateProgress)
                 
-            except UpdateAbortedError:
-                MultiMessageBox("Update canceled.", self._caption, 
-                                parent=parentWindow, icon=self._icon,
-                                style=wx.OK|SOT)
+            except Exception:
+                self.InitUpdates(self._updatesURL, self._changelogURL, self._icon)
                 if self._pd:
                     self._pd.Destroy()
-                    
-                self.InitUpdates(self._updatesURL, self._changelogURL, self._icon)
+                self._pd = None
+                errtext = ''
+                for line in get_errortext():
+                    errtext += line
+                MultiMessageBox("Update cancelled due to error(s)",
+                                self._caption, msg2=errtext,
+                                parent=parentWindow, icon=self._icon)
                 return              
     
             # Ask the user if they want the application to be restarted.
@@ -297,7 +304,8 @@ class SoftwareUpdate(object):
                          'retrying'    : 'Retrying...',
                          'ready'       : 'Download complete...',
                          'installing'  : 'Installing...',
-                         'cleaning up' : 'Cleaning up...',}
+                         'cleaning up' : 'Cleaning up...',
+                         'error'       : 'Error during update...'}
 
         if status.get('status') in simpleMsgMap:
             self._doUpdateProgress(True, simpleMsgMap[status.get('status')])
