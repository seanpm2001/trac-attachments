Index: interface/wx/list.h
===================================================================
--- interface/wx/list.h	(revision 70672)
+++ interface/wx/list.h	(working copy)
@@ -155,7 +155,7 @@
     void Erase(const compatibility_iterator& iter);
 
     /**
-        Returns the iterator refering to @a object or @NULL if none found.
+        Returns the iterator referring to @a object or @NULL if none found.
     */
     wxList<T>::compatibility_iterator Find(T* object) const;
 
@@ -203,7 +203,7 @@
     bool IsEmpty() const;
 
     /**
-        Returns the iterator refering to the object at the given
+        Returns the iterator referring to the object at the given
         @a index in the list.
     */
     wxList<T>::compatibility_iterator Item(size_t index) const;
Index: interface/wx/propgrid/manager.h
===================================================================
--- interface/wx/propgrid/manager.h	(revision 70672)
+++ interface/wx/propgrid/manager.h	(working copy)
@@ -147,7 +147,7 @@
     acquire the internal grid (GetGrid()) or wxPropertyGridPage object (GetPage()).
 
     wxPropertyGridManager constructor has exact same format as wxPropertyGrid
-    constructor, and basicly accepts same extra window style flags (albeit also
+    constructor, and basically accepts same extra window style flags (albeit also
     has some extra ones).
 
     Here's some example code for creating and populating a wxPropertyGridManager:
Index: interface/wx/bitmap.h
===================================================================
--- interface/wx/bitmap.h	(revision 70672)
+++ interface/wx/bitmap.h	(working copy)
@@ -165,7 +165,7 @@
     If you need direct access the bitmap data instead going through
     drawing to it using wxMemoryDC you need to use the wxPixelData
     class (either wxNativePixelData for RGB bitmaps or wxAlphaPixelData
-    for bitmaps with an additionaly alpha channel).
+    for bitmaps with an additionally alpha channel).
 
     Note that many wxBitmap functions take a @e type parameter, which is a 
     value of the ::wxBitmapType enumeration.
Index: interface/wx/xml/xml.h
===================================================================
--- interface/wx/xml/xml.h	(revision 70672)
+++ interface/wx/xml/xml.h	(working copy)
@@ -581,7 +581,7 @@
         any prologue nodes, but IsOk() will return @false since the root entity
         will be missing.
 
-        Note that the caller is reponsible for deleting the returned node in order
+        Note that the caller is responsible for deleting the returned node in order
         to avoid memory leaks.
     */
     wxXmlNode* DetachRoot();
Index: interface/wx/filesys.h
===================================================================
--- interface/wx/filesys.h	(revision 70672)
+++ interface/wx/filesys.h	(working copy)
@@ -243,7 +243,7 @@
 
     /**
         Detaches the stream from the wxFSFile object. That is, the
-        stream obtained with GetStream() will continue its existance
+        stream obtained with GetStream() will continue its existence
         after the wxFSFile object is deleted.
 
         You will have to delete the stream yourself.
Index: interface/wx/init.h
===================================================================
--- interface/wx/init.h	(revision 70672)
+++ interface/wx/init.h	(working copy)
@@ -51,7 +51,7 @@
     If the function returns true, the initialization was successful and the
     global wxApp object ::wxTheApp has been created. Moreover, wxEntryCleanup()
     must be called afterwards. If the function returns false, a catastrophic
-    initialization error occured and (at least the GUI part of) the library
+    initialization error occurred and (at least the GUI part of) the library
     can't be used at all.
 
     Notice that parameters @c argc and @c argv may be modified by this
Index: interface/wx/intl.h
===================================================================
--- interface/wx/intl.h	(revision 70672)
+++ interface/wx/intl.h	(working copy)
@@ -19,7 +19,7 @@
 };
 
 /**
-    Encapsulates a ::wxLanguage indentifier together with OS-specific information
+    Encapsulates a ::wxLanguage identifier together with OS-specific information
     related to that language.
 
     @beginWxPerlOnly
Index: interface/wx/ribbon/toolbar.h
===================================================================
--- interface/wx/ribbon/toolbar.h	(revision 70672)
+++ interface/wx/ribbon/toolbar.h	(working copy)
@@ -218,7 +218,7 @@
 
         @param pos
             Position of the new tool (number of tools and separators from the
-            begining of the toolbar).
+            beginning of the toolbar).
         @param tool_id
             ID of the new tool (used for event callbacks).
         @param bitmap
@@ -284,7 +284,7 @@
     /**
         This function behaves like DeleteTool() but it deletes the tool at the
         specified position and not the one with the given id.
-        Usefull to delete separators.
+        Useful to delete separators.
 
         @since 2.9.4
     */
Index: interface/wx/richtext/richtextctrl.h
===================================================================
--- interface/wx/richtext/richtextctrl.h	(revision 70672)
+++ interface/wx/richtext/richtextctrl.h	(working copy)
@@ -2247,7 +2247,7 @@
         { }
 
     /**
-        Returns the buffer position at which the event occured.
+        Returns the buffer position at which the event occurred.
     */
     long GetPosition() const { return m_position; }
 
Index: interface/wx/webviewarchivehandler.h
===================================================================
--- interface/wx/webviewarchivehandler.h	(revision 70672)
+++ interface/wx/webviewarchivehandler.h	(working copy)
@@ -12,7 +12,7 @@
     A custom handler for the file scheme which also supports loading from 
     archives. The syntax for wxWebViewArchiveHandler differs from virtual file 
     systems in the rest of wxWidgets by using a syntax such as
-    <code> scheme:///C:/exmaple/docs.zip;protocol=zip/main.htm </code> 
+    <code> scheme:///C:/example/docs.zip;protocol=zip/main.htm </code> 
     Currently the only supported protocol is @c zip. 
    
     @since 2.9.3
@@ -29,4 +29,4 @@
     */
     wxWebViewArchiveHandler(const wxString& scheme);
     virtual wxFSFile* GetFile(const wxString &uri);
-};
\ No newline at end of file
+};
Index: interface/wx/sizer.h
===================================================================
--- interface/wx/sizer.h	(revision 70672)
+++ interface/wx/sizer.h	(working copy)
@@ -410,7 +410,7 @@
 
     /**
        Inform sizer about the first direction that has been decided (by
-       parent item).  Returns true if it made use of the informtion (and
+       parent item).  Returns true if it made use of the information (and
        recalculated min size).
     */
     virtual bool InformFirstDirection(int direction, int size, int availableOtherDir);
Index: interface/wx/sharedptr.h
===================================================================
--- interface/wx/sharedptr.h	(revision 70672)
+++ interface/wx/sharedptr.h	(working copy)
@@ -9,7 +9,7 @@
 /**
     A smart pointer with non-intrusive reference counting.
 
-    It is modeled after @c boost::shared_ptr<> and can be used with STL
+    It is modelled after @c boost::shared_ptr<> and can be used with STL
     containers and wxVector<T> unlike @c std::auto_ptr<> and wxScopedPtr<T>.
 
     @library{wxbase}
