Index: toplevel.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWidgets/src/msw/toplevel.cpp,v
retrieving revision 1.72
diff -b -u -2 -r1.72 toplevel.cpp
--- toplevel.cpp	2004/03/13 21:35:58	1.72
+++ toplevel.cpp	2004/03/15 16:46:09
@@ -393,23 +393,11 @@
     // move the dialog to its initial position without forcing repainting
     int x, y, w, h;
-    if ( !MSWGetCreateWindowCoords(pos, size, x, y, w, h) )
-    {
-        x =
-        w = (int)CW_USEDEFAULT;
-    }
-
-    // we can't use CW_USEDEFAULT here as we're not calling CreateWindow()
-    // and passing CW_USEDEFAULT to MoveWindow() results in resizing the
-    // window to (0, 0) size which breaks quite a lot of things, e.g. the
-    // sizer calculation in wxSizer::Fit()
-    if ( w == (int)CW_USEDEFAULT )
-    {
-        // the exact number doesn't matter, the dialog will be resized
-        // again soon anyhow but it should be big enough to allow
-        // calculation relying on "totalSize - clientSize > 0" work, i.e.
-        // at least greater than the title bar height
-        w =
-        h = 100;
-    }
+    MSWGetCreateWindowCoords(pos, size, x, y, w, h);
+    // There was code to overwrite the values set by MSWGetCreateWindowCoords. 
+    // However because w was overwritten along with x if ANY default value was set 
+    // by MSWGetCreateWindowCoords this broke statically sized dialogs.
+    // (Example: the wxWidgets\samples\db\dbtest.cpp CparameterDlg::CparameterDlg)
+    // MSWGetCreateWindowCoords seems to do the job, also setting a default size 
+    // if w or h is -1. No further fiddling needed.
 
     if ( x == (int)CW_USEDEFAULT )

 	  	 
