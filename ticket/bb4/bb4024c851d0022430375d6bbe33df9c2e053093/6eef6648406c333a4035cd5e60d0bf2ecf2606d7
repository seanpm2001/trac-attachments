Index: include/wx/msw/enhmeta.h
===================================================================
RCS file: /cvsroot/wxwindows/wxWindows/include/wx/msw/enhmeta.h,v
retrieving revision 1.2
diff -b -w -r1.2 enhmeta.h
132a133,196
> 
> 
> // Patch for the problem, that wxEnhMetaFileDataObject is not derived from wxDataObjectSimple
> // so it can't be used together with  wxDataObjectComposite
> // 16.12.2000 Markus Greither
> 
> class WXDLLEXPORT wxEnhMetafileOnlyDataObject : public wxDataObjectSimple
> {
>  public:
>   // ctors
>   wxEnhMetafileOnlyDataObject() : wxDataObjectSimple(wxDF_ENHMETAFILE) { }
>   wxEnhMetafileOnlyDataObject(const wxEnhMetaFile& metafile)
>       : wxDataObjectSimple(wxDF_ENHMETAFILE), m_metafile(metafile) { }
> 
>   // virtual functions which you may override if you want to provide data on
>   // demand only - otherwise, the trivial default versions will be used
>   virtual void SetEnhMetafile(const wxEnhMetaFile& metafile)
>       { m_metafile = metafile; }
>   virtual wxEnhMetaFile GetEnhMetafile() const
>       { return m_metafile; }
> 
>   // implement base class pure virtuals
>   virtual size_t GetDataSize() const;
>   virtual bool GetDataHere(void *buf) const;
>   virtual bool SetData(size_t len, const void *buf);
> 
>  protected:
>   wxEnhMetaFile m_metafile;
> };
> 
> inline size_t wxEnhMetafileOnlyDataObject::GetDataSize() const
> {
>   // we pass data by handle and not HGLOBAL
>   return 0u;
> }
> 
> inline bool wxEnhMetafileOnlyDataObject::GetDataHere(void *buf) const
> {
>   wxCHECK_MSG( m_metafile.Ok(), FALSE, _T("copying invalid enh metafile") );
> 
>   HENHMETAFILE hEMF = (HENHMETAFILE)m_metafile.GetHENHMETAFILE();
> 
>   HENHMETAFILE hEMFCopy = ::CopyEnhMetaFile(hEMF, NULL);
>   if ( !hEMFCopy )
>   {
>     wxLogLastError(_T("CopyEnhMetaFile"));
> 
>     return FALSE;
>   }
> 
>   *(HENHMETAFILE *)buf = hEMFCopy;
>   return TRUE;
> }
> 
> inline bool wxEnhMetafileOnlyDataObject::SetData(size_t WXUNUSED(len),
>                                       const void *buf)
> {
>   HENHMETAFILE hEMF = *(HENHMETAFILE *)buf;
> 
>   wxCHECK_MSG( hEMF, FALSE, _T("pasting invalid enh metafile") );
>   m_metafile.SetHENHMETAFILE((WXHANDLE)hEMF);
> 
>   return TRUE;
> }

 	  	 
