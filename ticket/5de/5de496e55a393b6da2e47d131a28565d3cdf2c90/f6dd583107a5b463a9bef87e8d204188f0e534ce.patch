Index: wxWindows/samples/menu/menu.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/samples/menu/menu.cpp,v
retrieving revision 1.25
diff -r1.25 menu.cpp
63a64
>     wxMenuBar *CreateNewMenu();
69a71,72
>     
>     void OnCloseTest(wxCommandEvent& event);
199a203,204
>     Menu_Close_Test,
> 
212a218,219
>     EVT_MENU(Menu_Close_Test, MyFrame::OnCloseTest)
>     
303c310,353
<     // create the menubar
---
>      // associate the menu bar with the frame
>     SetMenuBar(CreateNewMenu());
> 
>     // intercept all menu events and log them in this custom event handler
>     PushEventHandler(new MyEvtHandler(this));
> 
>     // create the log text window
>     m_textctrl = new wxTextCtrl(this, -1, _T(""),
>                                 wxDefaultPosition, wxDefaultSize,
>                                 wxTE_MULTILINE);
>     m_textctrl->SetEditable(FALSE);
> 
>     wxLog::SetTimestamp(NULL);
>     m_logOld = wxLog::SetActiveTarget(new wxLogTextCtrl(m_textctrl));
> 
>     wxLogMessage(_T("Brief explanations: the commands or the \"Menu\" menu ")
>                  _T("append/insert/delete items to/from the last menu.\n")
>                  _T("The commands from \"Menubar\" menu work with the ")
>                  _T("menubar itself.\n\n")
>                  _T("Right click the band below to test popup menus.\n"));
> }
> 
> void MyFrame::OnCloseTest(wxCommandEvent& event)
> {
>     wxMenuBar *Oldmenubar = GetMenuBar();
>     wxMenuBar *Newmenubar = CreateNewMenu();
> 
>     wxMenu *CloseMenu = Oldmenubar->GetMenu(Oldmenubar->FindMenu("Close Test"));
> //    Oldmenubar->DismissMenu();
> //    CloseMenu->Dismiss();
>     Oldmenubar->Remove(Oldmenubar->FindMenu("Close Test"));
> 
>     delete Newmenubar->Remove(Newmenubar->FindMenu("Close Test"));
> 
>     Newmenubar->Append(CloseMenu, "Close Test");
> 
>     SetMenuBar(Newmenubar);
> 
>     delete Oldmenubar;
> }
> 
> wxMenuBar * MyFrame::CreateNewMenu()
> {
>    // create the menubar
365a416,418
>     wxMenu *closeMenu = new wxMenu;
>     closeMenu->Append(Menu_Close_Test, "Close", "Close test");
> 
372a426
>     menuBar->Append(closeMenu, "Close Test");
380,399c434
<     // associate the menu bar with the frame
<     SetMenuBar(menuBar);
< 
<     // intercept all menu events and log them in this custom event handler
<     PushEventHandler(new MyEvtHandler(this));
< 
<     // create the log text window
<     m_textctrl = new wxTextCtrl(this, -1, _T(""),
<                                 wxDefaultPosition, wxDefaultSize,
<                                 wxTE_MULTILINE);
<     m_textctrl->SetEditable(FALSE);
< 
<     wxLog::SetTimestamp(NULL);
<     m_logOld = wxLog::SetActiveTarget(new wxLogTextCtrl(m_textctrl));
< 
<     wxLogMessage(_T("Brief explanations: the commands or the \"Menu\" menu ")
<                  _T("append/insert/delete items to/from the last menu.\n")
<                  _T("The commands from \"Menubar\" menu work with the ")
<                  _T("menubar itself.\n\n")
<                  _T("Right click the band below to test popup menus.\n"));
---
>     return menuBar;
Index: wxWindows/src/univ/menu.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/univ/menu.cpp,v
retrieving revision 1.29
diff -r1.29 menu.cpp
316a317
>     m_menu->m_popupMenu = NULL;

 	  	 
