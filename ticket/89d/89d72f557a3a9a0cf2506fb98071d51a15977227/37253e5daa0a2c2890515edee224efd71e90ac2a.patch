Index: src/common/containr.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/containr.cpp,v
retrieving revision 1.32
diff -u -r1.32 containr.cpp
--- src/common/containr.cpp	2004/09/27 13:01:12	1.32
+++ src/common/containr.cpp	2004/10/01 08:15:42
@@ -475,6 +475,18 @@
 
         if ( child->AcceptsFocusFromKeyboard() && !child->IsTopLevel() )
         {
+#ifdef __WXMSW__
+            // If a radiobutton is the first focusable child, search for the 
+            // selected radiobutton in the same group
+            wxRadioButton* btn = wxDynamicCast(child, wxRadioButton);
+            if (btn)
+            {
+                wxRadioButton* selected = btn->GetSelectedButtonInGroup();
+                if (selected)
+                    child = selected;
+            }
+#endif
+
             wxLogTrace(_T("focus"),
                        _T("SetFocusToChild() => first child (0x%08lx)."),
                        (unsigned long)child->GetHandle());
Index: src/msw/radiobut.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/radiobut.cpp,v
retrieving revision 1.54
diff -u -r1.54 radiobut.cpp
--- src/msw/radiobut.cpp	2004/09/03 18:32:56	1.54
+++ src/msw/radiobut.cpp	2004/09/30 21:21:32
@@ -296,5 +296,76 @@
     return wxSize(wRadio, hRadio);
 }
 
+// The following functions are used to find other radio buttons 
+// within the same group
+wxRadioButton* wxRadioButton::GetPreviousButtonInGroup()
+{
+    if ( HasFlag(wxRB_GROUP) || HasFlag(wxRB_SINGLE) )
+        return NULL;
+
+    const wxWindowList& siblings = GetParent()->GetChildren();
+    wxWindowList::compatibility_iterator nodeThis = siblings.Find(this);
+    wxCHECK_MSG( nodeThis, NULL, _T("radio button not a child of its parent?") );
+
+    wxWindowList::compatibility_iterator nodeBefore = nodeThis->GetPrevious();
+    if (!nodeBefore)
+        return NULL;
+
+    // radio buttons in a group must be consecutive, wxDynamicCast ensured to return NULL on other controls
+    wxRadioButton *btn = wxDynamicCast(nodeBefore->GetData(), wxRadioButton);
+    if (btn->HasFlag(wxRB_SINGLE))
+        return NULL;
+    else
+        return btn;
+}
+
+wxRadioButton* wxRadioButton::GetNextButtonInGroup()
+{
+    if (HasFlag(wxRB_SINGLE))
+        return NULL;
+
+    const wxWindowList& siblings = GetParent()->GetChildren();
+    wxWindowList::compatibility_iterator nodeThis = siblings.Find(this);
+    wxCHECK_MSG( nodeThis, NULL, _T("radio button not a child of its parent?") );
+
+    wxWindowList::compatibility_iterator nodeAfter = nodeThis->GetNext();
+    if (!nodeAfter)
+        return NULL;
+
+    wxRadioButton *btn = wxDynamicCast(nodeAfter->GetData(), wxRadioButton);
+
+    if ( !btn || btn->HasFlag(wxRB_GROUP) || btn->HasFlag(wxRB_SINGLE) )
+    {
+        // no more buttons or the first button of the next group
+        return NULL;
+    }
+
+    return btn;
+}
+
+wxRadioButton* wxRadioButton::GetSelectedButtonInGroup()
+{
+    // Find currently selected button
+    if (GetValue())
+        return this;
+
+    if (HasFlag(wxRB_SINGLE))
+        return NULL;
+
+    wxRadioButton *btn;
+
+    // First check all previous buttons
+    for (btn = GetPreviousButtonInGroup(); btn; btn = btn->GetPreviousButtonInGroup())
+        if (btn->GetValue())
+            return btn;
+
+    // Now all following buttons
+    for (btn = GetNextButtonInGroup(); btn; btn = btn->GetNextButtonInGroup())
+        if (btn->GetValue())
+            return btn;
+
+    return NULL;
+}
+
 #endif // wxUSE_RADIOBTN
 
Index: include/wx/msw/radiobut.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/radiobut.h,v
retrieving revision 1.19
diff -u -r1.19 radiobut.h
--- include/wx/msw/radiobut.h	2004/05/23 20:51:29	1.19
+++ include/wx/msw/radiobut.h	2004/09/30 21:20:39
@@ -55,6 +55,11 @@
     virtual void ApplyParentThemeBackground(const wxColour& bg)
         { SetBackgroundColour(bg); }
 
+    // The following functions are used to find other radio buttons 
+    // within the same group
+    wxRadioButton* GetPreviousButtonInGroup();
+    wxRadioButton* GetNextButtonInGroup();
+    wxRadioButton* GetSelectedButtonInGroup();
 
 protected:
     virtual wxSize DoGetBestSize() const;

 	  	 
