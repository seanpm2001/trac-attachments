 include/wx/dataview.h    | 12 ++++++++----
 src/common/datavcmn.cpp  | 15 ++++----------
 src/generic/datavgen.cpp | 51 ++++++++++++------------------------------------
 3 files changed, 25 insertions(+), 53 deletions(-)

diff --git a/include/wx/dataview.h b/include/wx/dataview.h
index bf5554f..de456f2 100644
--- a/include/wx/dataview.h
+++ b/include/wx/dataview.h
@@ -765,13 +765,17 @@ protected:
 class WXDLLIMPEXP_ADV wxDataViewEvent : public wxNotifyEvent
 {
 public:
-    wxDataViewEvent(wxEventType commandType = wxEVT_NULL, int winid = 0)
+    wxDataViewEvent(wxEventType commandType = wxEVT_NULL,
+                    int winid = 0,
+                    wxDataViewModel* model = NULL,
+                    int col = -1,
+                    wxDataViewColumn* column = NULL)
         : wxNotifyEvent(commandType, winid),
         m_item(0),
-        m_col(-1),
-        m_model(NULL),
+        m_col(col),
+        m_model(model),
         m_value(wxNullVariant),
-        m_column(NULL),
+        m_column(column),
         m_pos(-1,-1),
         m_cacheFrom(0),
         m_cacheTo(0),
diff --git a/src/common/datavcmn.cpp b/src/common/datavcmn.cpp
index 53252c0..0a05c30 100644
--- a/src/common/datavcmn.cpp
+++ b/src/common/datavcmn.cpp
@@ -671,9 +671,8 @@ bool wxDataViewRendererBase::StartEditing( const wxDataViewItem &item, wxRect la
     wxDataViewCtrl* dv_ctrl = GetOwner()->GetOwner();
 
     // Before doing anything we send an event asking if editing of this item is really wanted.
-    wxDataViewEvent start_event( wxEVT_DATAVIEW_ITEM_START_EDITING, dv_ctrl->GetId() );
-    start_event.SetDataViewColumn( GetOwner() );
-    start_event.SetModel( dv_ctrl->GetModel() );
+    unsigned int col = GetOwner()->GetModelColumn();
+    wxDataViewEvent start_event( wxEVT_DATAVIEW_ITEM_START_EDITING, dv_ctrl->GetId(), dv_ctrl->GetModel(), col, GetOwner() );
     start_event.SetItem( item );
     start_event.SetEventObject( dv_ctrl );
     dv_ctrl->GetEventHandler()->ProcessEvent( start_event );
@@ -682,7 +681,6 @@ bool wxDataViewRendererBase::StartEditing( const wxDataViewItem &item, wxRect la
 
     m_item = item; // remember for later
 
-    unsigned int col = GetOwner()->GetModelColumn();
     wxVariant value;
     dv_ctrl->GetModel()->GetValue( value, item, col );
 
@@ -704,9 +702,7 @@ bool wxDataViewRendererBase::StartEditing( const wxDataViewItem &item, wxRect la
 #endif
 
     // Now we should send Editing Started event
-    wxDataViewEvent event( wxEVT_DATAVIEW_ITEM_EDITING_STARTED, dv_ctrl->GetId() );
-    event.SetDataViewColumn( GetOwner() );
-    event.SetModel( dv_ctrl->GetModel() );
+    wxDataViewEvent event( wxEVT_DATAVIEW_ITEM_EDITING_STARTED, dv_ctrl->GetId(), dv_ctrl->GetModel(), col, GetOwner() );
     event.SetItem( item );
     event.SetEventObject( dv_ctrl );
     dv_ctrl->GetEventHandler()->ProcessEvent( event );
@@ -759,12 +755,9 @@ bool wxDataViewRendererBase::FinishEditing()
     unsigned int col = GetOwner()->GetModelColumn();
 
     // Now we should send Editing Done event
-    wxDataViewEvent event( wxEVT_DATAVIEW_ITEM_EDITING_DONE, dv_ctrl->GetId() );
-    event.SetDataViewColumn( GetOwner() );
-    event.SetModel( dv_ctrl->GetModel() );
+    wxDataViewEvent event( wxEVT_DATAVIEW_ITEM_EDITING_DONE, dv_ctrl->GetId(), dv_ctrl->GetModel(), col, GetOwner() );
     event.SetItem( m_item );
     event.SetValue( value );
-    event.SetColumn( col );
     event.SetEditCanceled( !isValid );
     event.SetEventObject( dv_ctrl );
     dv_ctrl->GetEventHandler()->ProcessEvent( event );
diff --git a/src/generic/datavgen.cpp b/src/generic/datavgen.cpp
index c5bb710..9585066 100644
--- a/src/generic/datavgen.cpp
+++ b/src/generic/datavgen.cpp
@@ -284,12 +284,8 @@ private:
     bool SendEvent(wxEventType type, unsigned int n)
     {
         wxDataViewCtrl * const owner = GetOwner();
-        wxDataViewEvent event(type, owner->GetId());
-
+        wxDataViewEvent event(type, owner->GetId(), owner->GetModel(), n, owner->GetColumn(n));
         event.SetEventObject(owner);
-        event.SetColumn(n);
-        event.SetDataViewColumn(owner->GetColumn(n));
-        event.SetModel(owner->GetModel());
 
         // for events created by wxDataViewHeaderWindow the
         // row / value fields are not valid
@@ -1640,12 +1636,9 @@ wxDragResult wxDataViewMainWindow::OnDragOver( wxDataFormat format, wxCoord x,
     if ( row < GetRowCount() && xx <= GetEndOfLastCol() )
         item = GetItemByRow( row );
 
-    wxDataViewModel *model = GetModel();
-
-    wxDataViewEvent event( wxEVT_DATAVIEW_ITEM_DROP_POSSIBLE, m_owner->GetId() );
+    wxDataViewEvent event( wxEVT_DATAVIEW_ITEM_DROP_POSSIBLE, m_owner->GetId(), GetModel() );
     event.SetEventObject( m_owner );
     event.SetItem( item );
-    event.SetModel( model );
     event.SetDataFormat( format );
     event.SetDropEffect( def );
     if ( !m_owner->HandleWindowEvent( event ) || !event.IsAllowed() )
@@ -1684,12 +1677,9 @@ bool wxDataViewMainWindow::OnDrop( wxDataFormat format, wxCoord x, wxCoord y )
     if ( row < GetRowCount() && xx <= GetEndOfLastCol())
        item = GetItemByRow( row );
 
-    wxDataViewModel *model = GetModel();
-
-    wxDataViewEvent event( wxEVT_DATAVIEW_ITEM_DROP_POSSIBLE, m_owner->GetId() );
+    wxDataViewEvent event( wxEVT_DATAVIEW_ITEM_DROP_POSSIBLE, m_owner->GetId(), GetModel() );
     event.SetEventObject( m_owner );
     event.SetItem( item );
-    event.SetModel( model );
     event.SetDataFormat( format );
     if (!m_owner->HandleWindowEvent( event ) || !event.IsAllowed())
         return false;
@@ -1710,14 +1700,11 @@ wxDragResult wxDataViewMainWindow::OnData( wxDataFormat format, wxCoord x, wxCoo
     if ( row < GetRowCount() && xx <= GetEndOfLastCol() )
         item = GetItemByRow( row );
 
-    wxDataViewModel *model = GetModel();
-
     wxCustomDataObject *obj = (wxCustomDataObject *) GetDropTarget()->GetDataObject();
 
-    wxDataViewEvent event( wxEVT_DATAVIEW_ITEM_DROP, m_owner->GetId() );
+    wxDataViewEvent event( wxEVT_DATAVIEW_ITEM_DROP, m_owner->GetId(), GetModel() );
     event.SetEventObject( m_owner );
     event.SetItem( item );
-    event.SetModel( model );
     event.SetDataFormat( format );
     event.SetDataSize( obj->GetSize() );
     event.SetDataBuffer( obj->GetData() );
@@ -2545,9 +2532,8 @@ bool wxDataViewMainWindow::ItemChanged(const wxDataViewItem & item)
 
     // Send event
     wxWindow *parent = GetParent();
-    wxDataViewEvent le(wxEVT_DATAVIEW_ITEM_VALUE_CHANGED, parent->GetId());
+    wxDataViewEvent le(wxEVT_DATAVIEW_ITEM_VALUE_CHANGED, parent->GetId(), GetModel());
     le.SetEventObject(parent);
-    le.SetModel(GetModel());
     le.SetItem(item);
     parent->ProcessWindowEvent(le);
 
@@ -2576,12 +2562,10 @@ bool wxDataViewMainWindow::ValueChanged( const wxDataViewItem & item, unsigned i
 
     // Send event
     wxWindow *parent = GetParent();
-    wxDataViewEvent le(wxEVT_DATAVIEW_ITEM_VALUE_CHANGED, parent->GetId());
+    wxDataViewEvent le(wxEVT_DATAVIEW_ITEM_VALUE_CHANGED, parent->GetId(),
+        GetModel(), view_column, GetOwner()->GetColumn(view_column));
     le.SetEventObject(parent);
-    le.SetModel(GetModel());
     le.SetItem(item);
-    le.SetColumn(view_column);
-    le.SetDataViewColumn(GetOwner()->GetColumn(view_column));
     parent->ProcessWindowEvent(le);
 
     return true;
@@ -2821,10 +2805,9 @@ bool wxDataViewMainWindow::IsRowSelected( unsigned int row )
 void wxDataViewMainWindow::SendSelectionChangedEvent( const wxDataViewItem& item)
 {
     wxWindow *parent = GetParent();
-    wxDataViewEvent le(wxEVT_DATAVIEW_SELECTION_CHANGED, parent->GetId());
+    wxDataViewEvent le(wxEVT_DATAVIEW_SELECTION_CHANGED, parent->GetId(), GetModel());
 
     le.SetEventObject(parent);
-    le.SetModel(GetModel());
     le.SetItem( item );
 
     parent->ProcessWindowEvent(le);
@@ -3119,10 +3102,9 @@ wxDataViewMainWindow::SendExpanderEvent(wxEventType type,
                                         const wxDataViewItem& item)
 {
     wxWindow *parent = GetParent();
-    wxDataViewEvent le(type, parent->GetId());
+    wxDataViewEvent le(type, parent->GetId(), GetModel());
 
     le.SetEventObject(parent);
-    le.SetModel(GetModel());
     le.SetItem( item );
 
     return !parent->ProcessWindowEvent(le) || le.IsAllowed();
@@ -3695,11 +3677,9 @@ void wxDataViewMainWindow::OnChar( wxKeyEvent &event )
 
                 const wxDataViewItem item = GetItemByRow(m_currentRow);
 
-                wxDataViewEvent le(wxEVT_DATAVIEW_ITEM_ACTIVATED,
-                                   parent->GetId());
+                wxDataViewEvent le(wxEVT_DATAVIEW_ITEM_ACTIVATED, parent->GetId(), GetModel());
                 le.SetItem(item);
                 le.SetEventObject(parent);
-                le.SetModel(GetModel());
 
                 if ( parent->ProcessWindowEvent(le) )
                     break;
@@ -4107,9 +4087,8 @@ void wxDataViewMainWindow::OnMouse( wxMouseEvent &event )
     if (event.RightUp())
     {
         wxWindow *parent = GetParent();
-        wxDataViewEvent le(wxEVT_DATAVIEW_ITEM_CONTEXT_MENU, parent->GetId());
+        wxDataViewEvent le(wxEVT_DATAVIEW_ITEM_CONTEXT_MENU, parent->GetId(), model);
         le.SetEventObject(parent);
-        le.SetModel(model);
 
         if ( item.IsOk() && col )
         {
@@ -4147,10 +4126,9 @@ void wxDataViewMainWindow::OnMouse( wxMouseEvent &event )
             wxDataViewItem itemDragged = GetItemByRow( drag_item_row );
 
             // Notify cell about drag
-            wxDataViewEvent evt( wxEVT_DATAVIEW_ITEM_BEGIN_DRAG, m_owner->GetId() );
+            wxDataViewEvent evt( wxEVT_DATAVIEW_ITEM_BEGIN_DRAG, m_owner->GetId(), model );
             evt.SetEventObject( m_owner );
             evt.SetItem( itemDragged );
-            evt.SetModel( model );
             if (!m_owner->HandleWindowEvent( evt ))
                 return;
 
@@ -4270,12 +4248,9 @@ void wxDataViewMainWindow::OnMouse( wxMouseEvent &event )
         else if ( current == m_lineLastClicked )
         {
             wxWindow *parent = GetParent();
-            wxDataViewEvent le(wxEVT_DATAVIEW_ITEM_ACTIVATED, parent->GetId());
+            wxDataViewEvent le(wxEVT_DATAVIEW_ITEM_ACTIVATED, parent->GetId(), GetModel(), col->GetModelColumn(), col);
             le.SetItem( item );
-            le.SetColumn( col->GetModelColumn() );
-            le.SetDataViewColumn( col );
             le.SetEventObject(parent);
-            le.SetModel(GetModel());
 
             parent->ProcessWindowEvent(le);
             return;
