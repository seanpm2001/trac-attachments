diff -ru wxWidgets.orig/include/wx/msw/private.h wxWidgets/include/wx/msw/private.h
--- wxWidgets.orig/include/wx/msw/private.h	2007-11-15 04:54:52.000000000 +0100
+++ wxWidgets/include/wx/msw/private.h	2007-11-16 16:25:15.000000000 +0100
@@ -311,13 +311,13 @@
     #define GET_Y_LPARAM(lp) ((int)(short)HIWORD(lp))
 #endif // GET_X_LPARAM
 
-// get the current state of SHIFT/CTRL keys
+// get the current state of SHIFT/CTRL/ALT keys
 inline bool wxIsShiftDown()
 {
 //    return (::GetKeyState(VK_SHIFT) & 0x100) != 0;
     // Returns different negative values on WinME and WinNT,
     // so simply test for negative value.
-    return ::GetKeyState(VK_SHIFT) < 0;
+    return (GetKeyState(VK_SHIFT) < 0);
 }
 
 inline bool wxIsCtrlDown()
@@ -325,7 +325,17 @@
 //    return (::GetKeyState(VK_CONTROL) & 0x100) != 0;
     // Returns different negative values on WinME and WinNT,
     // so simply test for negative value.
-    return ::GetKeyState(VK_CONTROL) < 0;
+    return (GetKeyState(VK_CONTROL) < 0);
+}
+
+inline bool wxIsAltDown()
+{
+    return (GetKeyState(VK_MENU) < 0);
+}
+
+inline bool wxIsModifierDown()
+{
+    return wxIsShiftDown() || wxIsCtrlDown() || wxIsAltDown();
 }
 
 // wrapper around GetWindowRect() and GetClientRect() APIs doing error checking
diff -ru wxWidgets.orig/src/msw/listctrl.cpp wxWidgets/src/msw/listctrl.cpp
--- wxWidgets.orig/src/msw/listctrl.cpp	2007-11-08 04:54:34.000000000 +0100
+++ wxWidgets/src/msw/listctrl.cpp	2007-11-16 17:04:16.000000000 +0100
@@ -1740,12 +1740,12 @@
             // We need VK_RETURN to generate wxEVT_COMMAND_LIST_ITEM_ACTIVATED,
             // but only if none of the modifiers is down.  We'll let normal
             // accelerators handle those.
-            if ( !wxIsCtrlDown() && !wxIsCtrlDown() &&
-                 !((HIWORD(msg->lParam) & KF_ALTDOWN) == KF_ALTDOWN))
-            return false;
+            if (!::wxIsModifierDown())
+            {
+                return false;
+            }
         }
     }
-
     return wxControl::MSWShouldPreProcessMessage(msg);
 }
 
diff -ru wxWidgets.orig/src/msw/treectrl.cpp wxWidgets/src/msw/treectrl.cpp
--- wxWidgets.orig/src/msw/treectrl.cpp	2007-11-16 16:22:41.000000000 +0100
+++ wxWidgets/src/msw/treectrl.cpp	2007-11-16 17:07:54.000000000 +0100
@@ -1948,11 +1948,9 @@
 {
     if ( msg->message == WM_KEYDOWN )
     {
-        const bool isAltDown = ::GetKeyState(VK_MENU) < 0;
-
         // Only eat VK_RETURN if not being used by the application in conjunction with
         // modifiers
-        if ( msg->wParam == VK_RETURN && !wxIsCtrlDown() && !wxIsShiftDown() && !isAltDown)
+        if ( (msg->wParam == VK_RETURN) && !::wxIsModifierDown())
         {
             // we need VK_RETURN to generate wxEVT_COMMAND_TREE_ITEM_ACTIVATED
             return false;
@@ -2607,8 +2605,7 @@
                 // fabricate the lParam and wParam parameters sufficiently
                 // similar to the ones from a "real" WM_KEYDOWN so that
                 // CreateKeyEvent() works correctly
-                const bool isAltDown = ::GetKeyState(VK_MENU) < 0;
-                WXLPARAM lParam = (isAltDown ? KF_ALTDOWN : 0) << 16;
+                WXLPARAM lParam = (::wxIsAltDown() ? KF_ALTDOWN : 0) << 16;
 
                 WXWPARAM wParam = info->wVKey;
 
@@ -2626,7 +2623,7 @@
                                                 wParam);
 
                 // a separate event for Space/Return
-                if ( !wxIsCtrlDown() && !wxIsShiftDown() && !isAltDown &&
+                if ( (!::wxIsModifierDown()) &&
                      ((info->wVKey == VK_SPACE) || (info->wVKey == VK_RETURN)) )
                 {
                    wxTreeItemId item;
diff -ru wxWidgets.orig/src/msw/window.cpp wxWidgets/src/msw/window.cpp
--- wxWidgets.orig/src/msw/window.cpp	2007-11-16 16:36:17.000000000 +0100
+++ wxWidgets/src/msw/window.cpp	2007-11-16 16:37:10.000000000 +0100
@@ -4994,7 +4994,7 @@
     event.m_aux1Down = (flags & MK_XBUTTON1) != 0;
     event.m_aux2Down = (flags & MK_XBUTTON2) != 0;
 #endif // wxHAS_XBUTTON
-    event.m_altDown = ::GetKeyState(VK_MENU) < 0;
+    event.m_altDown = ::wxIsAltDown();
 
 #ifndef __WXWINCE__
     event.SetTimestamp(::GetMessageTime());
@@ -6035,9 +6035,9 @@
     ms.SetAux2Down(wxIsKeyDown(VK_XBUTTON2));
 #endif // wxHAS_XBUTTON
 
-    ms.SetControlDown(wxIsKeyDown(VK_CONTROL));
-    ms.SetShiftDown(wxIsKeyDown(VK_SHIFT));
-    ms.SetAltDown(wxIsKeyDown(VK_MENU));
+    ms.SetControlDown(wxIsCtrlDown ());
+    ms.SetShiftDown  (wxIsShiftDown());
+    ms.SetAltDown    (wxIsAltDown  ());
 //    ms.SetMetaDown();
 
     return ms;

 	  	 
