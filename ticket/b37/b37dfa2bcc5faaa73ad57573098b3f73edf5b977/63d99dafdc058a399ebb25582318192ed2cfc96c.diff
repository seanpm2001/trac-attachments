Index: include/wx/generic/grid.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWindows/include/wx/generic/grid.h,v
retrieving revision 1.160
diff -b -u -2 -r1.160 grid.h
--- include/wx/generic/grid.h	2006/10/28 13:57:33	1.160
+++ include/wx/generic/grid.h	2006/10/30 00:25:56
@@ -1106,4 +1106,7 @@
     wxGrid::wxGridSelectionModes GetSelectionMode() const;
 
+    void AllowMultipleSelection(bool allow = true) { m_allowMultipleSel = allow; }
+    bool IsMultipleSelectiionAllowed() const { return m_allowMultipleSel; }
+
     // ------ grid dimensions
     //
@@ -1945,4 +1948,8 @@
 
     bool    m_waitForSlowClick;
+
+    // if true (default), the selection works as usual, otherwise at most a
+    // single cell can be selected by the user
+    bool    m_allowMultipleSel;
 
     wxGridCellCoords m_selectionStart;
Index: src/generic/grid.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWindows/src/generic/grid.cpp,v
retrieving revision 1.398
diff -b -u -2 -r1.398 grid.cpp
--- src/generic/grid.cpp	2006/10/28 13:57:35	1.398
+++ src/generic/grid.cpp	2006/10/30 00:25:56
@@ -4210,4 +4210,5 @@
     m_typeRegistry = new wxGridTypeRegistry;
     m_selection = NULL;
+    m_allowMultipleSel = true;
 
     m_table = (wxGridTableBase *) NULL;
@@ -5215,5 +5216,5 @@
                     if ( (row = YToRow( y )) >= 0 )
                     {
-                        if ( m_selection )
+                        if ( m_selection && m_allowMultipleSel )
                         {
                             m_selection->SelectRow( row,
@@ -5269,5 +5270,5 @@
                 if ( !event.ShiftDown() && !event.CmdDown() )
                     ClearSelection();
-                if ( m_selection )
+                if ( m_selection && m_allowMultipleSel )
                 {
                     if ( event.ShiftDown() )
@@ -5436,5 +5437,5 @@
                     if ( (col = XToCol( x )) >= 0 )
                     {
-                        if ( m_selection )
+                        if ( m_selection && m_allowMultipleSel )
                         {
                             m_selection->SelectCol( col,
@@ -5561,5 +5562,5 @@
                     if ( !event.ShiftDown() && !event.CmdDown() )
                         ClearSelection();
-                    if ( m_selection )
+                    if ( m_selection && m_allowMultipleSel )
                     {
                         if ( event.ShiftDown() )
@@ -5965,5 +5966,5 @@
             if ( event.ShiftDown() )
             {
-                if ( m_selection )
+                if ( m_selection && m_allowMultipleSel )
                 {
                     m_selection->SelectBlock( m_currentCellCoords.GetRow(),
@@ -5985,5 +5986,5 @@
                 if ( event.CmdDown() )
                 {
-                    if ( m_selection )
+                    if ( m_selection && m_allowMultipleSel )
                     {
                         m_selection->ToggleCellSelection( coords.GetRow(),
@@ -6002,5 +6003,5 @@
                     m_waitForSlowClick = m_currentCellCoords == coords && coords != wxGridNoCellCoords;
                     SetCurrentCell( coords );
-                    if ( m_selection )
+                    if ( m_selection && m_allowMultipleSel )
                     {
                         if ( m_selection->GetSelectionMode() !=
@@ -6064,5 +6065,5 @@
                  m_selectingBottomRight != wxGridNoCellCoords )
             {
-                if ( m_selection )
+                if ( m_selection && m_allowMultipleSel )
                 {
                     m_selection->SelectBlock( m_selectingTopLeft.GetRow(),
@@ -6977,5 +6978,5 @@
                 if ( event.ControlDown() )
                 {
-                    if ( m_selection )
+                    if ( m_selection && m_allowMultipleSel )
                     {
                         m_selection->ToggleCellSelection(
@@ -7014,5 +7015,5 @@
              m_selectingBottomRight != wxGridNoCellCoords )
         {
-            if ( m_selection )
+            if ( m_selection && m_allowMultipleSel )
             {
                 m_selection->SelectBlock(
Index: samples/grid/griddemo.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWindows/samples/grid/griddemo.h,v
retrieving revision 1.11
diff -b -u -2 -r1.11 griddemo.h
--- samples/grid/griddemo.h	2006/10/28 13:46:18	1.11
+++ samples/grid/griddemo.h	2006/10/30 00:25:56
@@ -75,4 +75,5 @@
     void OnAddToSelectToggle(wxCommandEvent& event);
     void OnShowSelection(wxCommandEvent& event);
+    void OnToggleMultipleSel(wxCommandEvent& event);
 
     void OnLabelLeftClick( wxGridEvent& );
@@ -149,4 +150,5 @@
         ID_DESELECT_COL,
         ID_DESELECT_CELL,
+        ID_ALLOW_MULTIPLE_SEL,
 
         ID_SET_HIGHLIGHT_WIDTH,
Index: samples/grid/griddemo.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWindows/samples/grid/griddemo.cpp,v
retrieving revision 1.19
diff -b -u -2 -r1.19 griddemo.cpp
--- samples/grid/griddemo.cpp	2006/10/28 13:46:18	1.19
+++ samples/grid/griddemo.cpp	2006/10/30 00:25:56
@@ -112,4 +112,5 @@
     EVT_MENU( ID_SELECT_UNSELECT, GridFrame::OnAddToSelectToggle)
     EVT_MENU( ID_SHOW_SELECTION, GridFrame::OnShowSelection)
+    EVT_MENU( ID_ALLOW_MULTIPLE_SEL, GridFrame::OnToggleMultipleSel)
 
     EVT_MENU( ID_SET_HIGHLIGHT_WIDTH, GridFrame::OnSetHighlightWidth)
@@ -209,6 +210,5 @@
     wxMenu *selectionMenu = new wxMenu;
     selectMenu->Append( ID_CHANGESEL, _T("Change &selection mode"),
-                      selectionMenu,
-                      _T("Change selection mode") );
+                        selectionMenu, _T("Change selection mode") );
 
     selectionMenu->Append( ID_SELCELLS, _T("Select &Cells") );
@@ -216,4 +216,7 @@
     selectionMenu->Append( ID_SELCOLS, _T("Select C&ols") );
 
+    selectMenu->AppendSeparator();
+    selectMenu->Append(ID_ALLOW_MULTIPLE_SEL, _T("&Allow multiple cell selection"), _T(""), TRUE);
+    selectMenu->Check(ID_ALLOW_MULTIPLE_SEL, true);
 
     wxMenu *helpMenu = new wxMenu;
@@ -298,4 +301,6 @@
     grid->SetCellRenderer(4, 4, new MyGridCellRenderer);
 
+    // we can customize the string values of the checked/unchecked cell states
+    wxGridCellBoolEditor::UseStringValues(_T("checked"), _T("unchecked"));
     grid->SetCellValue(3, 0, _T("0"));
     grid->SetCellRenderer(3, 0, new wxGridCellBoolRenderer);
@@ -781,4 +786,9 @@
 {
       grid->SelectAll();
+}
+
+void GridFrame::OnToggleMultipleSel(wxCommandEvent& event)
+{
+    grid->AllowMultipleSelection(event.IsChecked());
 }
 

 	  	 
