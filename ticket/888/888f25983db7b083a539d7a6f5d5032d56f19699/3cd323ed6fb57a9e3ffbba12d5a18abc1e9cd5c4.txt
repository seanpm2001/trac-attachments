Index: wxWindows/include/wx/msw/listctrl.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/msw/listctrl.h,v
retrieving revision 1.31
diff -r1.31 listctrl.h
351,352c351,352
<     // free memory taken by all attributes and recreate the hash table
<     void FreeAllAttrs(bool dontRecreate = FALSE);
---
>     // free memory taken by all internal data
> 	void FreeAllInternalData();
366,367c366,367
<     // the hash table we use for storing pointers to the items attributes
<     wxHashTable m_attrs;
---
> 	// TRUE if we have any internal data (user data & attributes)
> 	bool m_AnyInternalData;
Index: wxWindows/src/msw/listctrl.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/msw/listctrl.cpp,v
retrieving revision 1.128
diff -r1.128 listctrl.cpp
228a229,249
> // class wxListItemInternalData
> class wxListItemInternalData
> {
> public:
>    wxListItemAttr *attr; 
>    LPARAM lParam; // user data
> 
>    wxListItemInternalData() : attr(NULL), lParam(0) {}
>    ~wxListItemInternalData()
>    {
> 	   if (attr)
> 		   delete attr;
>    };
> };
> 
> // Get the internal data structure
> static wxListItemInternalData *GetInternalData(HWND hwnd, long itemId);
> static wxListItemInternalData *GetInternalData(wxListCtrl *ctl, long itemId);
> static wxListItemAttr *GetInternalDataAttr(wxListCtrl *ctl, long itemId);
> 
> 
282a304
> 	m_AnyInternalData = FALSE;
408c430
< void wxListCtrl::FreeAllAttrs(bool dontRecreate)
---
> void wxListCtrl::FreeAllInternalData()
410,424c432,443
<     if ( m_hasAnyAttr )
<     {
<         for ( wxNode *node = m_attrs.Next(); node; node = m_attrs.Next() )
<         {
<             delete (wxListItemAttr *)node->Data();
<         }
< 
<         m_attrs.Destroy();
<         if ( !dontRecreate )
<         {
<             m_attrs.Create(wxKEY_INTEGER, 1000);        // just as def ctor
<         }
< 
<         m_hasAnyAttr = FALSE;
<     }
---
> 	if (m_AnyInternalData)
> 	{
> 		int n = GetItemCount();
> 		int i = 0;
> 
> 		for (i = 0; i < n; i++)
> 		{
> 			wxListItemInternalData *data = GetInternalData(this, i);
> 			if (data)
> 				delete data;
> 		};
> 	};
429c448
<     FreeAllAttrs(TRUE /* no need to recreate hash any more */);
---
>     FreeAllInternalData();
767a787,822
> 	
> 	// we never update the lParam if it contains our pointer
> 	// to the wxListItemInternalData structure
> 	item.mask &= ~LVIF_PARAM;
> 
> 	// check if setting attributes or lParam
> 	if (info.HasAttributes() || (info.m_mask  & wxLIST_MASK_DATA))
> 	{
> 		// get internal item data
> 		// perhaps a cache here ?
> 		wxListItemInternalData *data = GetInternalData(this, info.m_itemId);
> 		
> 		if (! data)
> 		{
> 			// need to set it
> 			m_AnyInternalData = TRUE;
> 			data = new wxListItemInternalData();
> 			item.lParam = (LPARAM) data;
> 			item.mask |= LVIF_PARAM;
> 		};
> 
> 
> 		// user data
> 		if (info.m_mask  & wxLIST_MASK_DATA)
> 			data->lParam = info.m_data;
> 
> 		// attributes
> 		if (info.HasAttributes())
> 		{
> 			if (data->attr)
> 				*data->attr = *info.GetAttributes();
> 			else
> 				data->attr = new wxListItemAttr(*info.GetAttributes());
> 		};
> 	};
> 
788,794d842
<         wxListItemAttr *attr = (wxListItemAttr *)m_attrs.Get(item.iItem);
< 
<         if ( attr == NULL )
<             m_attrs.Put(item.iItem, (wxObject *)new wxListItemAttr(*info.GetAttributes()));
<         else
<             *attr = *info.GetAttributes();
< 
1360a1409
> 	item.mask &= ~LVIF_PARAM;
1362,1367c1411,1431
<     // check whether it has any custom attributes
<     if ( info.HasAttributes() )
<     {
< 
<         wxListItemAttr *attr;
<         attr = (wxListItemAttr*) m_attrs.Get(item.iItem);
---
> 	// check wether we need to allocate our internal data
> 	bool needInternalData = ((info.m_mask & wxLIST_MASK_DATA) || info.HasAttributes());
> 	if (needInternalData)
> 	{
> 		m_AnyInternalData = TRUE;
> 		item.mask |= LVIF_PARAM;
> 
> 		// internal stucture that manages data
> 		wxListItemInternalData *data = new wxListItemInternalData();
> 		item.lParam = (LPARAM) data;
> 
> 		if (info.m_mask & wxLIST_MASK_DATA)
> 			data->lParam = info.m_data;
> 
> 	    // check whether it has any custom attributes
> 		if ( info.HasAttributes() )
> 		{
> 			// take copy of attributes
> 			data->attr = new wxListItemAttr(*info.GetAttributes());
> 		}
> 	};
1369,1376d1432
<         if (attr == NULL)
< 
<             m_attrs.Put(item.iItem, (wxObject *)new wxListItemAttr(*info.GetAttributes()));
< 
<         else *attr = *info.GetAttributes();
< 
<         m_hasAnyAttr = TRUE;
<     }
1495,1509c1551,1552
< // FIXME: this is horrible and MT-unsafe and everything else but I don't have
< //        time for anything better right now (VZ)
< static long gs_sortData = 0;
< static wxListCtrl *gs_sortCtrl = NULL;
< static wxListCtrlCompare gs_sortFunction = NULL;
< 
< int wxCMPFUNC_CONV wxListCtrlCompareFn(const void *arg1, const void *arg2)
< {
<     int n1 = *(const int *)arg1,
<         n2 = *(const int *)arg2;
< 
<     return gs_sortFunction(gs_sortCtrl->GetItemData(n1),
<                            gs_sortCtrl->GetItemData(n2),
<                            gs_sortData);
< }
---
> // Internal structures for proxying the user compare function
> // so that we can pass it the *real* user data
1511c1554,1555
< bool wxListCtrl::SortItems(wxListCtrlCompare fn, long data)
---
> // translate lParam data and call user func
> struct wxInternalDataSort
1513,1522c1557,1559
<     // sort the attributes too
<     if ( m_hasAnyAttr )
<     {
<         int n,
<             count = GetItemCount();
<         int *aItems = new int[count];
<         for ( n = 0; n < count; n++ )
<         {
<             aItems[n] = n;
<         }
---
>     wxListCtrlCompare user_fn;
>     long data;
> };
1524,1532c1561,1563
<         gs_sortData = data;
<         gs_sortCtrl = this;
<         gs_sortFunction = fn;
< 
<         qsort(aItems, count, sizeof(int), wxListCtrlCompareFn);
< 
<         gs_sortData = 0;
<         gs_sortCtrl = NULL;
<         gs_sortFunction = NULL;
---
> int CALLBACK wxInternalDataCompareFunc(LPARAM lParam1, LPARAM lParam2,  LPARAM lParamSort)
> {
>     struct wxInternalDataSort *internalData = (struct wxInternalDataSort *) lParamSort;
1534,1542c1565,1566
<         wxHashTable attrsNew(wxKEY_INTEGER, 1000);
<         for ( n = 0; n < count; n++ )
<         {
<             wxObject *attr = m_attrs.Delete(aItems[n]);
<             if ( attr )
<             {
<                 attrsNew.Put(n, attr);
<             }
<         }
---
> 	wxListItemInternalData *data1 = (wxListItemInternalData *) lParam1;
> 	wxListItemInternalData *data2 = (wxListItemInternalData *) lParam2;
1544,1545c1568,1569
<         m_attrs.Destroy();
<         m_attrs = attrsNew;
---
> 	long d1 = (data1 == NULL ? 0 : data1->lParam);
> 	long d2 = (data2 == NULL ? 0 : data2->lParam);
1547,1548c1571,1579
<         delete [] aItems;
<     }
---
> 	return internalData->user_fn(d1, d2, internalData->data);
>     
> };
> 
> bool wxListCtrl::SortItems(wxListCtrlCompare fn, long data)
> {
>     struct wxInternalDataSort internalData;
>     internalData.user_fn = fn;
>     internalData.data = data;
1550c1581
<     if ( !ListView_SortItems(GetHwnd(), (PFNLVCOMPARE)fn, data) )
---
>     if ( !ListView_SortItems(GetHwnd(), wxInternalDataCompareFunc, &internalData) )
1765,1767d1795
< 
<                 FreeAllAttrs();
< 
1774,1777c1802,1808
<                 if ( m_hasAnyAttr )
<                 {
<                     delete (wxListItemAttr *)m_attrs.Delete(nmLV->iItem);
<                 }
---
> 				// delete the assoicated internal data
> 				{
> 					wxListItemInternalData *data = 
> 						GetInternalData(this, nmLV->iItem);
> 					if (data)
> 						delete data;
> 				};
2068c2099
<                                 : (wxListItemAttr *)m_attrs.Get(item);
---
>                                 : GetInternalDataAttr(this, item);
2308a2340,2367
> static wxListItemInternalData *GetInternalData(HWND hwnd, long itemId)
> {
> 	LV_ITEM it;
> 	it.mask = LVIF_PARAM;
> 	it.iItem = itemId;
> 
> 	bool success = ListView_GetItem(hwnd, &it) != 0;
> 	if (success)
> 		return (wxListItemInternalData *) it.lParam;
> 	else
> 		return NULL;
> };
> 
> static wxListItemInternalData *GetInternalData(wxListCtrl *ctl, long itemId)
> {
> 	return GetInternalData((HWND) ctl->GetHWND(), itemId);
> };
> 
> static wxListItemAttr *GetInternalDataAttr(wxListCtrl *ctl, long itemId)
> {
> 	wxListItemInternalData *data = GetInternalData(ctl, itemId);
> 	if (data)
> 		return data->attr;
> 	else
> 		return NULL;
> };
> 
> 
2313c2372,2377
<     info.m_data = lvItem.lParam;
---
> 	wxListItemInternalData *internaldata = 
> 		(wxListItemInternalData *) lvItem.lParam;
> 
> 	if (internaldata)
> 		info.m_data = internaldata->lParam;
> 
2427d2490
<     lvItem.lParam = info.m_data;
2459,2460d2521
<     if (info.m_mask & wxLIST_MASK_DATA)
<         lvItem.mask |= LVIF_PARAM;

 	  	 
