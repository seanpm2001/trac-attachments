Index: include/wx/defs.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/defs.h,v
retrieving revision 1.261
diff -b -u -2 -r1.261 defs.h
--- include/wx/defs.h	2001/08/29 21:14:01	1.261
+++ include/wx/defs.h	2001/08/31 13:06:52
@@ -5,5 +5,5 @@
 // Modified by:
 // Created:     01/02/97
-// RCS-ID:      $Id: defs.h,v 1.261 2001/08/29 21:14:01 VS Exp $
+// RCS-ID:      $Id: defs.h,v 1.258 2001/08/02 19:02:16 VZ Exp $
 // Copyright:   (c)
 // Licence:     wxWindows licence
@@ -274,5 +274,5 @@
 #elif !defined(__WXMOTIF__) && !defined(__WXMSW__) && !defined(__WXGTK__) && \
       !defined(__WXPM__) && !defined(__WXMAC__) && !defined(__X__) && \
-      !defined(__WXMGL__) && wxUSE_GUI
+      !defined(__WXQT__) && !defined(__WXMGL__) && wxUSE_GUI
     #ifdef __UNIX__
         #error "No Target! You should use wx-config program for compilation flags!"
@@ -604,4 +604,5 @@
     wxGTK_OS2,                // GTK on OS/2
     wxGTK_BEOS,               // GTK on BeOS
+    wxQT,                     // Qt
     wxGEOS,                   // GEOS
     wxOS2_PM,                 // OS/2 Workplace
@@ -1171,4 +1172,20 @@
 
 /*
+ * wxTreeCtrl flags
+ */
+#define wxTR_HAS_BUTTONS     0x0004
+#define wxTR_EDIT_LABELS     0x0008
+#define wxTR_LINES_AT_ROOT   0x0010
+
+#define wxTR_SINGLE          0x0000
+#define wxTR_MULTIPLE        0x0020
+#define wxTR_EXTENDED        0x0040
+#define wxTR_HAS_VARIABLE_ROW_HEIGHT 0x0080
+#define wxTR_NO_LINES        0x0100
+#define wxTR_MAC_BUTTONS     0x0200
+#define wxTR_ROW_LINES       0x0400
+#define wxTR_AUTOSCROLL      0x0800
+
+/*
  * wxSpinButton flags.
  * Note that a wxSpinCtrl is sometimes defined as
@@ -2044,5 +2061,5 @@
 
 #ifdef __WXMGL__
-typedef struct window_t *WXWidget;
+typedef void *WXWidget; // FIXME_MGL - type-safe
 #endif // MGL
 
Index: src/msw/treectrl.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/msw/treectrl.cpp,v
retrieving revision 1.104
diff -b -u -2 -r1.104 treectrl.cpp
--- src/msw/treectrl.cpp	2001/08/02 19:02:17	1.104
+++ src/msw/treectrl.cpp	2001/08/31 13:06:54
@@ -93,4 +93,9 @@
 #define wxUSE_CHECKBOXES_IN_MULTI_SEL_TREE 0
 
+const UINT_PTR ID_AUTOSCROLLTIMER = 1; // Timer-ID is unique per HWND
+// Auto-scroll when inside this boundary top and bottom 
+const size_t AUTOSCROLL_BOUNDARY = 20;
+// Interval in ms for each auto-scroll event
+const UINT AUTOSCROLL_INTERVAL = 300;
 
 // ----------------------------------------------------------------------------
@@ -509,4 +514,6 @@
     m_htSelStart = 0;
 
+    m_timer = 0;
+
     // Initialize static array of events, because with the new event system,
     // they may not be initialized yet.
@@ -1790,4 +1797,30 @@
     bool isMultiple = (GetWindowStyle() & wxTR_MULTIPLE) != 0;
 
+    if ( nMsg == WM_TIMER )
+    {
+        if ( wParam == ID_AUTOSCROLLTIMER && (GetWindowStyle() & wxTR_AUTOSCROLL) )
+        {
+            POINT cursor;
+            ::GetCursorPos(&cursor);
+            ::ScreenToClient(GetHwnd(), &cursor);
+            bool up = false;
+            if ( (up = ( cursor.y < AUTOSCROLL_BOUNDARY )) || ( GetSize().GetHeight() - cursor.y ) < AUTOSCROLL_BOUNDARY )
+            {
+                // Set scroll position
+                if ( up ) 
+                { 
+                    LineUp(); 
+                }
+                else 
+                { 
+                    LineDown(); 
+                }
+                // Repaint window
+                Refresh();
+            }
+            processed = TRUE;
+        }
+    }
+
     if ( (nMsg >= WM_MOUSEFIRST) && (nMsg <= WM_MOUSELAST) )
     {
@@ -1857,4 +1890,13 @@
                 if ( m_dragImage )
                 {
+                    // Set up timer for auto-scroll
+                    if ( GetWindowStyle() & wxTR_AUTOSCROLL )
+                    {
+                        if ( !m_timer )
+                        {
+                            m_timer = SetTimer(GetHwnd(), ID_AUTOSCROLLTIMER, AUTOSCROLL_INTERVAL, NULL);
+                        }
+                    }
+
                     m_dragImage->Move(wxPoint(x, y));
                     if ( htItem )
@@ -1877,4 +1919,11 @@
                     m_dragImage = NULL;
 
+                    // Kill timer used for auto-scroll
+                    if ( m_timer )
+                    {
+                        KillTimer(GetHwnd(), ID_AUTOSCROLLTIMER);
+                        m_timer = 0;
+                    }
+
                     // generate the drag end event
                     wxTreeEvent event(wxEVT_COMMAND_TREE_END_DRAG, m_windowId);

 	  	 
