Index: samples/thread/thread.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/thread/thread.cpp,v
retrieving revision 1.25
diff -u -r1.25 thread.cpp
--- samples/thread/thread.cpp   2005/06/02 12:04:41   1.25
+++ samples/thread/thread.cpp   2006/07/16 07:27:21
@@ -110,6 +110,7 @@
     void OnIdle(wxIdleEvent &event);
 
 private:
+  void startThreads( size_t aantal );
     // helper function - creates a new thread (but doesn't run it)
     MyThread *CreateThread();
 
@@ -239,6 +240,7 @@
 
         // wxSleep() can't be called from non-GUI thread!
         wxThread::Sleep(1000);
+        m_frame->Close();
     }
 
     text.Printf(wxT("Thread 0x%lx finished.\n"), GetId());
@@ -353,10 +355,11 @@
 
     EVT_IDLE(MyFrame::OnIdle)
 END_EVENT_TABLE()
-
+#include <crtdbg.h>
 MyApp::MyApp()
      : m_semAllDone()
 {
+  _CrtSetBreakAlloc(2726);
     m_waitingUntilAllDone = false;
 }
 
@@ -430,6 +433,7 @@
     m_txtctrl = new wxTextCtrl(this, wxID_ANY, _T(""), wxPoint(0, 0), wxSize(0, 0),
                                wxTE_MULTILINE | wxTE_READONLY);
 
+    startThreads(1);
 }
 
 MyFrame::~MyFrame()
@@ -492,6 +496,42 @@
     return thread;
 }
 
+void MyFrame::startThreads( size_t count )
+{
+  wxArrayThread threads;
+  size_t n;
+
+  // first create them all...
+  for ( n = 0; n < count; n++ )
+  {
+    wxThread *thr = CreateThread();
+
+    // we want to show the effect of SetPriority(): the first thread will
+    // have the lowest priority, the second - the highest, all the rest
+    // the normal one
+    if ( n == 0 )
+      thr->SetPriority(WXTHREAD_MIN_PRIORITY);
+    else if ( n == 1 )
+      thr->SetPriority(WXTHREAD_MAX_PRIORITY);
+    else
+      thr->SetPriority(WXTHREAD_DEFAULT_PRIORITY);
+
+    threads.Add(thr);
+  }
+
+#if wxUSE_STATUSBAR
+  wxString msg;
+  msg.Printf(wxT("%d new threads created."), count);
+  SetStatusText(msg, 1);
+#endif // wxUSE_STATUSBAR
+
+  // ...and then start them
+  for ( n = 0; n < count; n++ )
+  {
+    threads[n]->Run();
+  }
+}
+
 void MyFrame::OnStartThreads(wxCommandEvent& WXUNUSED(event) )
 {
     static long s_num = 10;
@@ -504,40 +544,8 @@
 
         return;
     }
-
-    size_t count = (size_t)s_num, n;
-
-    wxArrayThread threads;
 
-    // first create them all...
-    for ( n = 0; n < count; n++ )
-    {
-        wxThread *thr = CreateThread();
-
-        // we want to show the effect of SetPriority(): the first thread will
-        // have the lowest priority, the second - the highest, all the rest
-        // the normal one
-        if ( n == 0 )
-            thr->SetPriority(WXTHREAD_MIN_PRIORITY);
-        else if ( n == 1 )
-            thr->SetPriority(WXTHREAD_MAX_PRIORITY);
-        else
-            thr->SetPriority(WXTHREAD_DEFAULT_PRIORITY);
-
-        threads.Add(thr);
-    }
-
-#if wxUSE_STATUSBAR
-    wxString msg;
-    msg.Printf(wxT("%d new threads created."), count);
-    SetStatusText(msg, 1);
-#endif // wxUSE_STATUSBAR
-
-    // ...and then start them
-    for ( n = 0; n < count; n++ )
-    {
-        threads[n]->Run();
-    }
+    startThreads((size_t)s_num);
 }
 
 void MyFrame::OnStartThread(wxCommandEvent& WXUNUSED(event) )

 	  	 
