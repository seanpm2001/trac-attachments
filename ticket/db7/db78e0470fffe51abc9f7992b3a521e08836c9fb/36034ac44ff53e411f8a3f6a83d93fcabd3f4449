Index: src/msw/glcanvas.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/msw/glcanvas.cpp,v
retrieving revision 1.4
diff -d -b -r1.4 glcanvas.cpp
337c337
< void wxGLCanvas::SetupPixelFormat(int *attribList) // (HDC hDC)
---
> static void AdjustPFDForAttributes(PIXELFORMATDESCRIPTOR& pfd, int *attribList)
339,360d338
<   int pixelFormat;
<   PIXELFORMATDESCRIPTOR pfd = {
< 		sizeof(PIXELFORMATDESCRIPTOR),	/* size */
< 		1,				/* version */
< 		PFD_SUPPORT_OPENGL |
< 		PFD_DRAW_TO_WINDOW |
< 		PFD_DOUBLEBUFFER,		/* support double-buffering */
< 		PFD_TYPE_RGBA,			/* color type */
< 		16,				/* prefered color depth */
< 		0, 0, 0, 0, 0, 0,		/* color bits (ignored) */
< 		0,				/* no alpha buffer */
< 		0,				/* alpha bits (ignored) */
< 		0,				/* no accumulation buffer */
< 		0, 0, 0, 0,			/* accum bits (ignored) */
< 		16,				/* depth buffer */
< 		0,				/* no stencil buffer */
< 		0,				/* no auxiliary buffers */
< 		PFD_MAIN_PLANE,			/* main layer */
< 		0,				/* reserved */
< 		0, 0, 0,			/* no layer, visible, damage masks */
< 	};
< 
432a411,438
> }
> 
> void wxGLCanvas::SetupPixelFormat(int *attribList) // (HDC hDC)
> {
>   int pixelFormat;
>   PIXELFORMATDESCRIPTOR pfd = {
> 		sizeof(PIXELFORMATDESCRIPTOR),	/* size */
> 		1,				/* version */
> 		PFD_SUPPORT_OPENGL |
> 		PFD_DRAW_TO_WINDOW |
> 		PFD_DOUBLEBUFFER,		/* support double-buffering */
> 		PFD_TYPE_RGBA,			/* color type */
> 		16,				/* prefered color depth */
> 		0, 0, 0, 0, 0, 0,		/* color bits (ignored) */
> 		0,				/* no alpha buffer */
> 		0,				/* alpha bits (ignored) */
> 		0,				/* no accumulation buffer */
> 		0, 0, 0, 0,			/* accum bits (ignored) */
> 		16,				/* depth buffer */
> 		0,				/* no stencil buffer */
> 		0,				/* no auxiliary buffers */
> 		PFD_MAIN_PLANE,			/* main layer */
> 		0,				/* reserved */
> 		0, 0, 0,			/* no layer, visible, damage masks */
> 	};
> 
>   AdjustPFDForAttributes(pfd, attribList);
> 
713a720,763
> }
> 
> 
> //---------------------------------------------------------------------------
> // wxGLApp
> //---------------------------------------------------------------------------
> 
> IMPLEMENT_CLASS(wxGLApp, wxApp)
> 
> bool wxGLApp::InitGLVisual(int *attribList)
> {
>   int pixelFormat;
>   PIXELFORMATDESCRIPTOR pfd = {
> 		sizeof(PIXELFORMATDESCRIPTOR),	/* size */
> 		1,				/* version */
> 		PFD_SUPPORT_OPENGL |
> 		PFD_DRAW_TO_WINDOW |
> 		PFD_DOUBLEBUFFER,		/* support double-buffering */
> 		PFD_TYPE_RGBA,			/* color type */
> 		16,				/* prefered color depth */
> 		0, 0, 0, 0, 0, 0,		/* color bits (ignored) */
> 		0,				/* no alpha buffer */
> 		0,				/* alpha bits (ignored) */
> 		0,				/* no accumulation buffer */
> 		0, 0, 0, 0,			/* accum bits (ignored) */
> 		16,				/* depth buffer */
> 		0,				/* no stencil buffer */
> 		0,				/* no auxiliary buffers */
> 		PFD_MAIN_PLANE,			/* main layer */
> 		0,				/* reserved */
> 		0, 0, 0,			/* no layer, visible, damage masks */
> 	};
> 
>   AdjustPFDForAttributes(pfd, attribList);
> 
>   // use DC for whole (root) screen, since no windows have yet been created
>   pixelFormat = ChoosePixelFormat((HDC) ::GetDC(NULL), &pfd);
> 
>   if (pixelFormat == 0) {
>     MessageBox(NULL, wxT("InitGLVisual failed."), wxT("Error"),
>                MB_ICONERROR | MB_OK);
>     return FALSE;
>   }
>   return TRUE;
Index: include/wx/msw/glcanvas.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/msw/glcanvas.h,v
retrieving revision 1.3
diff -d -b -r1.3 glcanvas.h
131a132,150
> };
> 
> //---------------------------------------------------------------------------
> // wxGLApp
> //---------------------------------------------------------------------------
> 
> class WXDLLEXPORT wxGLApp: public wxApp
> {
> public:
>     wxGLApp() : wxApp() { }
>     virtual ~wxGLApp() { }
> 
>     // use this in the constructor of the user-derived wxGLApp class to
>     // determine if an OpenGL rendering context with these attributes
>     // is available - returns TRUE if so, FALSE if not.
>     bool InitGLVisual(int *attribList);
> 
> private:
>     DECLARE_DYNAMIC_CLASS(wxGLApp)

 	  	 
