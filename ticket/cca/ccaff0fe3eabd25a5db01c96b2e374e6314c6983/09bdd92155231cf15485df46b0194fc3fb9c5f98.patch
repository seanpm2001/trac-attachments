diff -u -3 -P -r wxWidgets/.\samples\console\console.cpp wxW/.\samples\console\console.cpp
--- wxWidgets/.\samples\console\console.cpp	Mon Apr 26 07:52:44 2004
+++ wxW/.\samples\console\console.cpp	Wed Apr 28 13:42:18 2004
@@ -84,7 +84,6 @@
     #define TEST_TEXTSTREAM
     #define TEST_THREADS
     #define TEST_TIMER
-    #define TEST_UNICODE
     // #define TEST_VCARD            -- don't enable this (VZ)
 //    #define TEST_VOLUME   --FIXME! (RN)
     #define TEST_WCHAR
@@ -3823,43 +3822,6 @@
 // wide char and Unicode support
 // ----------------------------------------------------------------------------
 
-#ifdef TEST_UNICODE
-
-static void TestUnicodeToFromAscii()
-{
-    wxPuts(_T("Testing wxString::To/FromAscii()\n"));
-
-    static const char *msg = "Hello, world!";
-    wxString s = wxString::FromAscii(msg);
-
-    wxPrintf(_T("Message in Unicode: %s\n"), s.c_str());
-    printf("Message in ASCII: %s\n", (const char *)s.ToAscii());
-
-    wxPutchar(_T('\n'));
-}
-
-#include "wx/textfile.h"
-
-static void TestUnicodeTextFileRead()
-{
-    wxPuts(_T("Testing wxTextFile in Unicode build\n"));
-
-    wxTextFile file;
-    if ( file.Open(_T("testdata.fc"), wxConvLocal) )
-    {
-        const size_t count = file.GetLineCount();
-        for ( size_t n = 0; n < count; n++ )
-        {
-            const wxString& s = file[n];
-
-            wxPrintf(_T("Line %u: \"%s\" (len %u, last char = '%c')\n"),
-                     (unsigned)n, s.c_str(), (unsigned)s.length(), s.Last());
-        }
-    }
-}
-
-#endif // TEST_UNICODE
-
 #ifdef TEST_WCHAR
 
 #include "wx/strconv.h"
@@ -5904,13 +5866,6 @@
 #ifdef TEST_VOLUME
     TestFSVolume();
 #endif // TEST_VOLUME
-
-#ifdef TEST_UNICODE
-    TestUnicodeTextFileRead();
-    #if TEST_ALL
-        TestUnicodeToFromAscii();
-    #endif
-#endif // TEST_UNICODE
 
 #ifdef TEST_WCHAR
     TestUtf8();
diff -u -3 -P -r wxWidgets/.\tests\strings\unicode.cpp wxW/.\tests\strings\unicode.cpp
--- wxWidgets/.\tests\strings\unicode.cpp	Thu Jan 01 01:00:00 1970
+++ wxW/.\tests\strings\unicode.cpp	Wed Apr 28 21:19:44 2004
@@ -0,0 +1,98 @@
+///////////////////////////////////////////////////////////////////////////////
+// Name:        tests/strings/unicode.cpp
+// Purpose:     Unicode unit test
+// Author:      Vadim Zeitlin, Wlodzimierz ABX Skiba
+// Created:     2004-04-28
+// RCS-ID:      $Id: unicode.cpp,v 1.0 2004/04/28 11:00:00 ABX Exp $
+// Copyright:   (c) 2004 Vadim Zeitlin, Wlodzimierz Skiba
+///////////////////////////////////////////////////////////////////////////////
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+#ifndef WX_PRECOMP
+    #include "wx/wx.h"
+#endif // WX_PRECOMP
+
+#include "wx/textfile.h"
+
+#include "wx/cppunit.h"
+
+// ----------------------------------------------------------------------------
+// test class
+// ----------------------------------------------------------------------------
+
+class UnicodeTestCase : public CppUnit::TestCase
+{
+public:
+    UnicodeTestCase();
+
+private:
+    CPPUNIT_TEST_SUITE( UnicodeTestCase );
+        CPPUNIT_TEST( ToFromAscii );
+        CPPUNIT_TEST( TextFileRead );
+    CPPUNIT_TEST_SUITE_END();
+
+    void ToFromAscii();
+    void TextFileRead();
+
+    DECLARE_NO_COPY_CLASS(UnicodeTestCase)
+};
+
+// register in the unnamed registry so that these tests are run by default
+CPPUNIT_TEST_SUITE_REGISTRATION( UnicodeTestCase );
+
+// also include in it's own registry so that these tests can be run alone
+CPPUNIT_TEST_SUITE_NAMED_REGISTRATION( UnicodeTestCase, "UnicodeTestCase" );
+
+UnicodeTestCase::UnicodeTestCase()
+{
+}
+
+void UnicodeTestCase::ToFromAscii()
+{
+
+#define TEST_TO_FROM_ASCII(txt)                              \
+    {                                                        \
+        static const char *msg = txt;                        \
+        wxString s = wxString::FromAscii(msg);               \
+        CPPUNIT_ASSERT( strcmp( s.ToAscii() , msg ) == 0 );  \
+    }
+
+    TEST_TO_FROM_ASCII( "Hello, world!" );
+    TEST_TO_FROM_ASCII( "additional \" special \t test \\ component \n :-)" );
+}
+
+void UnicodeTestCase::TextFileRead()
+{
+    wxTextFile file;
+    bool file_opened = file.Open(_T("testdata.fc"), wxConvLocal);
+
+    CPPUNIT_ASSERT( file_opened );
+
+    static const wxChar *lines[6] = { 
+        _T("# this is the test data file for wxFileConfig tests"),
+        _T("value1=one"),
+        _T("# a comment here"),
+        _T("value2=two"),
+        _T("value\\ with\\ spaces\\ inside\\ it=nothing special"),
+        _T("path=$PATH")
+    };
+
+    if( file_opened )
+    {
+        const size_t count = file.GetLineCount();
+        CPPUNIT_ASSERT( count == 6 );
+        for ( size_t n = 0; n < count; n++ )
+        {
+            CPPUNIT_ASSERT( wxStrcmp( file[n].c_str() , lines[n] ) == 0 );
+        }
+    }
+}
diff -u -3 -P -r wxWidgets/.\tests\test.bkl wxW/.\tests\test.bkl
--- wxWidgets/.\tests\test.bkl	Thu Apr 22 07:48:25 2004
+++ wxW/.\tests\test.bkl	Wed Apr 28 13:43:01 2004
@@ -17,6 +17,7 @@
             arrays/arrays.cpp
             longlong/longlong.cpp
             strings/strings.cpp
+            strings/unicode.cpp
             streams/bstream.cpp
             streams/ffilestream.cpp
             streams/filestream.cpp
@@ -25,5 +26,9 @@
         </sources>
         <wx-lib>base</wx-lib>
     </exe>
+
+    <wx-data id="data">
+        <files>testdata.fc</files>
+    </wx-data>
 
 </makefile>
diff -u -3 -P -r wxWidgets/.\tests\testdata.fc wxW/.\tests\testdata.fc
--- wxWidgets/.\tests\testdata.fc	Thu Jan 01 01:00:00 1970
+++ wxW/.\tests\testdata.fc	Thu Nov 28 14:34:28 2002
@@ -0,0 +1,6 @@
+# this is the test data file for wxFileConfig tests
+value1=one
+# a comment here
+value2=two
+value\ with\ spaces\ inside\ it=nothing special
+path=$PATH

 	  	 
