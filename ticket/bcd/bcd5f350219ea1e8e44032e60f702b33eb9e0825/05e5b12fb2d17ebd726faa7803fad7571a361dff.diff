diff --git samples/minimal/minimal.cpp samples/minimal/minimal.cpp
index fb8f721..67bd375 100644
--- samples/minimal/minimal.cpp
+++ samples/minimal/minimal.cpp
@@ -67,8 +67,13 @@ public:
     // event handlers (these functions should _not_ be virtual)
     void OnQuit(wxCommandEvent& event);
     void OnAbout(wxCommandEvent& event);
+    void OnThis(wxCommandEvent& event);
+    void OnThat(wxCommandEvent& event);
+    void DoThisUpdateUI(wxUpdateUIEvent& event);
+    void DoThatUpdateUI(wxUpdateUIEvent& event);
 
 private:
+    bool m_bool;
     // any class wishing to process wxWidgets events must use this macro
     DECLARE_EVENT_TABLE()
 };
@@ -86,7 +91,8 @@ enum
     // it is important for the id corresponding to the "About" command to have
     // this standard value as otherwise it won't be handled properly under Mac
     // (where it is special and put into the "Apple" menu)
-    Minimal_About = wxID_ABOUT
+    Minimal_About = wxID_ABOUT,
+    Minimal_This = 10000, Minimal_That
 };
 
 // ----------------------------------------------------------------------------
@@ -99,6 +105,10 @@ enum
 BEGIN_EVENT_TABLE(MyFrame, wxFrame)
     EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
     EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_MENU(Minimal_This, MyFrame::OnThis)
+    EVT_MENU(Minimal_That, MyFrame::OnThat)
+    EVT_UPDATE_UI(Minimal_This, MyFrame::DoThisUpdateUI)
+    EVT_UPDATE_UI(Minimal_That, MyFrame::DoThatUpdateUI)
 END_EVENT_TABLE()
 
 // Create a new application object: this macro will allow wxWidgets to create
@@ -158,10 +168,15 @@ MyFrame::MyFrame(const wxString& title)
 
     fileMenu->Append(Minimal_Quit, "E&xit\tAlt-X", "Quit this program");
 
+    wxMenu *testMenu = new wxMenu;
+    testMenu->Append(Minimal_This, "This\tCtrl-Z", "Do this");
+    testMenu->Append(Minimal_That, "That\tCtrl-Y", "Do that");
+
     // now append the freshly created menu to the menu bar...
     wxMenuBar *menuBar = new wxMenuBar();
     menuBar->Append(fileMenu, "&File");
     menuBar->Append(helpMenu, "&Help");
+    menuBar->Append(testMenu, "&Test");
 
     // ... and attach this menu bar to the frame
     SetMenuBar(menuBar);
@@ -172,11 +187,34 @@ MyFrame::MyFrame(const wxString& title)
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+    m_bool = true;
 }
 
 
 // event handlers
 
+void MyFrame::OnThis(wxCommandEvent& WXUNUSED(event))
+{
+    m_bool = false;
+    SetStatusText("OnThis event");
+}
+
+void MyFrame::OnThat(wxCommandEvent& WXUNUSED(event))
+{
+    m_bool = true;
+    SetStatusText("OnThat event");
+}
+
+void MyFrame::DoThisUpdateUI(wxUpdateUIEvent& event)
+{
+    event.Enable(m_bool);
+}
+
+void MyFrame::DoThatUpdateUI(wxUpdateUIEvent& event)
+{
+    event.Enable(!m_bool);
+}
+
 void MyFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
 {
     // true is to force the frame to close
