Index: src/common/graphcmn.cpp
===================================================================
--- src/common/graphcmn.cpp	(revision 66398)
+++ src/common/graphcmn.cpp	(working copy)
@@ -879,9 +879,9 @@
 }
 #endif
 
-wxGraphicsContext* wxGraphicsContext::CreateFromNative( void * context )
+wxGraphicsContext* wxGraphicsContext::CreateFromNative( void * context, bool isForPrinting )
 {
-    return wxGraphicsRenderer::GetDefaultRenderer()->CreateContextFromNativeContext(context);
+    return wxGraphicsRenderer::GetDefaultRenderer()->CreateContextFromNativeContext(context, isForPrinting);
 }
 
 wxGraphicsContext* wxGraphicsContext::CreateFromNativeWindow( void * window )
Index: src/msw/graphics.cpp
===================================================================
--- src/msw/graphics.cpp	(revision 66398)
+++ src/msw/graphics.cpp	(working copy)
@@ -1640,7 +1640,7 @@
     virtual wxGraphicsContext * CreateContext( const wxEnhMetaFileDC& dc);
 #endif
 
-    virtual wxGraphicsContext * CreateContextFromNativeContext( void * context );
+    virtual wxGraphicsContext * CreateContextFromNativeContext( void * context, bool isForPrinting );
 
     virtual wxGraphicsContext * CreateContextFromNativeWindow( void * window );
 
@@ -1798,7 +1798,7 @@
     return new wxGDIPlusMeasuringContext(this);
 }
 
-wxGraphicsContext * wxGDIPlusRenderer::CreateContextFromNativeContext( void * context )
+wxGraphicsContext * wxGDIPlusRenderer::CreateContextFromNativeContext( void * context, bool isForPrinting )
 {
     ENSURE_LOADED_OR_RETURN(NULL);
     return new wxGDIPlusContext(this,(Graphics*) context);
Index: src/osx/cocoa/overlay.mm
===================================================================
--- src/osx/cocoa/overlay.mm	(revision 66398)
+++ src/osx/cocoa/overlay.mm	(working copy)
@@ -151,7 +151,7 @@
     wxGCDCImpl *win_impl = wxDynamicCast(impl,wxGCDCImpl);
     if (win_impl)
     {
-        win_impl->SetGraphicsContext( wxGraphicsContext::CreateFromNative( m_overlayContext ) );
+        win_impl->SetGraphicsContext( wxGraphicsContext::CreateFromNative( m_overlayContext, false ) );
         dc->SetClippingRegion( m_x , m_y , m_width , m_height ) ;
     }
 }
Index: src/osx/core/dcmemory.cpp
===================================================================
--- src/osx/core/dcmemory.cpp	(revision 66398)
+++ src/osx/core/dcmemory.cpp	(working copy)
@@ -85,7 +85,7 @@
         {
             CGContextSetFillColorSpace( bmCtx, genericColorSpace );
             CGContextSetStrokeColorSpace( bmCtx, genericColorSpace );
-            SetGraphicsContext( wxGraphicsContext::CreateFromNative( bmCtx ) );
+            SetGraphicsContext( wxGraphicsContext::CreateFromNative( bmCtx, false ) );
         }
         m_ok = (m_graphicContext != NULL) ;
     }
Index: src/osx/carbon/dcprint.cpp
===================================================================
--- src/osx/carbon/dcprint.cpp	(revision 66398)
+++ src/osx/carbon/dcprint.cpp	(working copy)
@@ -241,7 +241,7 @@
         // have to manually scale them later.
         CGContextScaleCTM( pageContext, 72.0 / (double)m_ppi.x, -72.0 / (double)m_ppi.y);
 
-        impl->SetGraphicsContext( wxGraphicsContext::CreateFromNative( pageContext ) );
+        impl->SetGraphicsContext( wxGraphicsContext::CreateFromNative( pageContext, true ) );
     }
 }
 
Index: src/osx/carbon/graphics.cpp
===================================================================
--- src/osx/carbon/graphics.cpp	(revision 66398)
+++ src/osx/carbon/graphics.cpp	(working copy)
@@ -1373,16 +1373,18 @@
 
 class WXDLLEXPORT wxMacCoreGraphicsContext : public wxGraphicsContext
 {
+    bool m_should_offset;
+    
 public:
-    wxMacCoreGraphicsContext( wxGraphicsRenderer* renderer, CGContextRef cgcontext, wxDouble width = 0, wxDouble height = 0 );
+    wxMacCoreGraphicsContext( wxGraphicsRenderer* renderer, CGContextRef cgcontext, bool shouldOffset, wxDouble width = 0, wxDouble height = 0 );
 
 #if wxOSX_USE_CARBON
-    wxMacCoreGraphicsContext( wxGraphicsRenderer* renderer, WindowRef window );
+    wxMacCoreGraphicsContext( wxGraphicsRenderer* renderer, WindowRef window, bool shouldOffset );
 #endif
 
-    wxMacCoreGraphicsContext( wxGraphicsRenderer* renderer, wxWindow* window );
+    wxMacCoreGraphicsContext( wxGraphicsRenderer* renderer, wxWindow* window, bool shouldOffset );
 
-    wxMacCoreGraphicsContext( wxGraphicsRenderer* renderer);
+    wxMacCoreGraphicsContext( wxGraphicsRenderer* renderer, bool shouldOffset );
 
     wxMacCoreGraphicsContext();
 
@@ -1460,6 +1462,8 @@
 
     virtual bool ShouldOffset() const
     {
+        if (!m_should_offset) return false;
+        
         int penwidth = 0 ;
         if ( !m_pen.IsNull() )
         {
@@ -1566,6 +1570,7 @@
 {
     m_cgContext = NULL;
     m_contextSynthesized = false;
+    m_should_offset = false;
     m_width = 0;
     m_height = 0;
 #if wxOSX_USE_CARBON
@@ -1577,29 +1582,32 @@
     m_invisible = false;
 }
 
-wxMacCoreGraphicsContext::wxMacCoreGraphicsContext( wxGraphicsRenderer* renderer, CGContextRef cgcontext, wxDouble width, wxDouble height ) : wxGraphicsContext(renderer)
+wxMacCoreGraphicsContext::wxMacCoreGraphicsContext( wxGraphicsRenderer* renderer, CGContextRef cgcontext, bool shouldOffset, wxDouble width, wxDouble height ) : wxGraphicsContext(renderer)
 {
     Init();
     SetNativeContext(cgcontext);
     m_width = width;
     m_height = height;
+    m_should_offset = shouldOffset;
 }
 
 #if wxOSX_USE_CARBON
-wxMacCoreGraphicsContext::wxMacCoreGraphicsContext( wxGraphicsRenderer* renderer, WindowRef window ): wxGraphicsContext(renderer)
+wxMacCoreGraphicsContext::wxMacCoreGraphicsContext( wxGraphicsRenderer* renderer, WindowRef window, bool shouldOffset ): wxGraphicsContext(renderer)
 {
     Init();
     m_windowRef = window;
+    m_should_offset = shouldOffset;
 }
 #endif
 
-wxMacCoreGraphicsContext::wxMacCoreGraphicsContext( wxGraphicsRenderer* renderer, wxWindow* window ): wxGraphicsContext(renderer)
+wxMacCoreGraphicsContext::wxMacCoreGraphicsContext( wxGraphicsRenderer* renderer, wxWindow* window, bool shouldOffset ): wxGraphicsContext(renderer)
 {
     Init();
 
     wxSize sz = window->GetSize();
     m_width = sz.x;
     m_height = sz.y;
+    m_should_offset = shouldOffset;
 
 #if wxOSX_USE_COCOA_OR_IPHONE
     m_view = window->GetHandle();
@@ -1628,9 +1636,10 @@
 #endif
 }
 
-wxMacCoreGraphicsContext::wxMacCoreGraphicsContext(wxGraphicsRenderer* renderer) : wxGraphicsContext(renderer)
+wxMacCoreGraphicsContext::wxMacCoreGraphicsContext(wxGraphicsRenderer* renderer, bool shouldOffset) : wxGraphicsContext(renderer)
 {
     Init();
+    m_should_offset = shouldOffset;
 }
 
 wxMacCoreGraphicsContext::wxMacCoreGraphicsContext() : wxGraphicsContext(NULL)
@@ -2681,7 +2690,7 @@
     virtual wxGraphicsContext * CreateContext( const wxPrinterDC& dc);
 #endif
 
-    virtual wxGraphicsContext * CreateContextFromNativeContext( void * context );
+    virtual wxGraphicsContext * CreateContextFromNativeContext( void * context, bool isForPrinting );
 
     virtual wxGraphicsContext * CreateContextFromNativeWindow( void * window );
 
@@ -2757,13 +2767,14 @@
             cgctx =  (CGContextRef)(win_impl->GetWindow()->MacGetCGContextRef());
 
         if (cgctx != 0)
-            return new wxMacCoreGraphicsContext( this, cgctx, (wxDouble) w, (wxDouble) h );
+            return new wxMacCoreGraphicsContext( this, cgctx, true, (wxDouble) w, (wxDouble) h );
     }
     return NULL;
 }
@@ -2772,7 +2783,7 @@
         int w, h;
         mem_impl->GetSize( &w, &h );
         return new wxMacCoreGraphicsContext( this,
-            (CGContextRef)(mem_impl->GetGraphicsContext()->GetNativeContext()), (wxDouble) w, (wxDouble) h );
+            (CGContextRef)(mem_impl->GetGraphicsContext()->GetNativeContext()), true, (wxDouble) w, (wxDouble) h );
     }
 #endif
     return NULL;
@@ -2789,22 +2801,25 @@
         int w, h;
         print_impl->GetSize( &w, &h );
         return new wxMacCoreGraphicsContext( this,
-            (CGContextRef)(print_impl->GetGraphicsContext()->GetNativeContext()), (wxDouble) w, (wxDouble) h );
+            (CGContextRef)(print_impl->GetGraphicsContext()->GetNativeContext()), false /* no offset when printing */,
+            (wxDouble) w, (wxDouble) h );
     }
 #endif
     return NULL;
 }
 #endif
 
-wxGraphicsContext * wxMacCoreGraphicsRenderer::CreateContextFromNativeContext( void * context )
+wxGraphicsContext * wxMacCoreGraphicsRenderer::CreateContextFromNativeContext( void * context, bool isForPrinting )
 {
-    return new wxMacCoreGraphicsContext(this,(CGContextRef)context);
+    return new wxMacCoreGraphicsContext(this,(CGContextRef)context, !isForPrinting);
 }
 
 wxGraphicsContext * wxMacCoreGraphicsRenderer::CreateContextFromNativeWindow( void * window )
 {
 #if wxOSX_USE_CARBON
-    return new wxMacCoreGraphicsContext(this,(WindowRef)window);
+    return new wxMacCoreGraphicsContext(this,(WindowRef)window, true);
 #else
     wxUnusedVar(window);
     return NULL;
@@ -2813,12 +2828,14 @@
 
 wxGraphicsContext * wxMacCoreGraphicsRenderer::CreateContext( wxWindow* window )
 {
-    return new wxMacCoreGraphicsContext(this, window );
+    return new wxMacCoreGraphicsContext(this, window, true);
 }
 
 wxGraphicsContext * wxMacCoreGraphicsRenderer::CreateMeasuringContext()
 {
-    return new wxMacCoreGraphicsContext(this);
+    return new wxMacCoreGraphicsContext(this, true);
 }
 
 // Path
Index: src/osx/carbon/dcclient.cpp
===================================================================
--- src/osx/carbon/dcclient.cpp	(revision 66398)
+++ src/osx/carbon/dcclient.cpp	(working copy)
@@ -68,7 +68,7 @@
         if ( window->MacGetLeftBorderSize() != 0 || window->MacGetTopBorderSize() != 0 )
             CGContextTranslateCTM( cg , -window->MacGetLeftBorderSize() , -window->MacGetTopBorderSize() );
 
-        SetGraphicsContext( wxGraphicsContext::CreateFromNative( cg ) );
+        SetGraphicsContext( wxGraphicsContext::CreateFromNative( cg, false ) );
     }
     DoSetClippingRegion( 0 , 0 , m_width , m_height ) ;
 
Index: src/osx/carbon/overlay.cpp
===================================================================
--- src/osx/carbon/overlay.cpp	(revision 66398)
+++ src/osx/carbon/overlay.cpp	(working copy)
@@ -136,7 +136,7 @@
     wxGCDCImpl *win_impl = wxDynamicCast(impl,wxGCDCImpl);
     if (win_impl)
     {
-        win_impl->SetGraphicsContext( wxGraphicsContext::CreateFromNative( m_overlayContext ) );
+        win_impl->SetGraphicsContext( wxGraphicsContext::CreateFromNative( m_overlayContext, false ) );
         dc->SetClippingRegion( m_x , m_y , m_width , m_height ) ;
     }
 }
Index: src/osx/carbon/metafile.cpp
===================================================================
--- src/osx/carbon/metafile.cpp	(revision 66398)
+++ src/osx/carbon/metafile.cpp	(working copy)
@@ -303,7 +303,7 @@
     m_metaFile->UnRef();
     m_metaFile->SetRefData( metafiledata );
 
-    SetGraphicsContext( wxGraphicsContext::CreateFromNative(metafiledata->GetContext()));
+    SetGraphicsContext( wxGraphicsContext::CreateFromNative(metafiledata->GetContext(), true));
     m_ok = (m_graphicContext != NULL) ;
 
     SetMapMode( wxMM_TEXT );
Index: src/osx/carbon/font.cpp
===================================================================
--- src/osx/carbon/font.cpp	(revision 66398)
+++ src/osx/carbon/font.cpp	(working copy)
@@ -721,7 +721,7 @@
 {
 #if wxUSE_GRAPHICS_CONTEXT
     // TODO: consider caching the value
-    wxGraphicsContext* dc = wxGraphicsContext::CreateFromNative((CGContextRef) NULL);
+    wxGraphicsContext* dc = wxGraphicsContext::CreateFromNative((CGContextRef) NULL, false);
     dc->SetFont(*(wxFont *)this,*wxBLACK);
     wxDouble width, height = 0;
     dc->GetTextExtent( wxT("g"), &width, &height, NULL, NULL);
Index: src/generic/graphicc.cpp
===================================================================
--- src/generic/graphicc.cpp	(revision 66398)
+++ src/generic/graphicc.cpp	(working copy)
@@ -1746,7 +1746,7 @@
     virtual wxGraphicsContext * CreateContext( const wxMemoryDC& dc);
     virtual wxGraphicsContext * CreateContext( const wxPrinterDC& dc);
 
-    virtual wxGraphicsContext * CreateContextFromNativeContext( void * context );
+    virtual wxGraphicsContext * CreateContextFromNativeContext( void * context, bool isForPrinting );
 
     virtual wxGraphicsContext * CreateContextFromNativeWindow( void * window );
 
@@ -1828,7 +1828,7 @@
        return NULL;
 }
 
-wxGraphicsContext * wxCairoRenderer::CreateContextFromNativeContext( void * context )
+wxGraphicsContext * wxCairoRenderer::CreateContextFromNativeContext( void * context, bool isForPrinting )
 {
 #ifdef __WXMSW__
     return new wxCairoContext(this,(HDC)context);
Index: include/wx/graphics.h
===================================================================
--- include/wx/graphics.h	(revision 66398)
+++ include/wx/graphics.h	(working copy)
@@ -400,7 +400,7 @@
     static wxGraphicsContext * Create( const wxEnhMetaFileDC& dc);
 #endif
 
-    static wxGraphicsContext* CreateFromNative( void * context );
+    static wxGraphicsContext* CreateFromNative( void * context, bool isForPrinting );
 
     static wxGraphicsContext* CreateFromNativeWindow( void * window );
 
@@ -721,7 +721,7 @@
     virtual wxGraphicsContext * CreateContext( const wxEnhMetaFileDC& dc) = 0;
 #endif
 
-    virtual wxGraphicsContext * CreateContextFromNativeContext( void * context ) = 0;
+    virtual wxGraphicsContext * CreateContextFromNativeContext( void * context, bool isForPrinting ) = 0;
 
     virtual wxGraphicsContext * CreateContextFromNativeWindow( void * window ) = 0;
 
Index: interface/wx/graphics.h
===================================================================
--- interface/wx/graphics.h	(revision 66398)
+++ interface/wx/graphics.h	(working copy)
@@ -351,7 +351,7 @@
 
         @see wxGraphicsRenderer::CreateContextFromNativeContext()
     */
-    static wxGraphicsContext* CreateFromNative(void* context);
+    static wxGraphicsContext* CreateFromNative(void* context, bool isForPrinting);
 
     /**
         Creates a wxGraphicsContext from a native window.
@@ -835,7 +835,7 @@
         must be a CGContextRef for Core Graphics, a Graphics pointer for
         GDIPlus, or a cairo_t pointer for cairo.
     */
-    virtual wxGraphicsContext* CreateContextFromNativeContext(void* context) = 0;
+    virtual wxGraphicsContext* CreateContextFromNativeContext(void* context, bool isForPrinting) = 0;
 
     /**
         Creates a wxGraphicsContext from a native window.