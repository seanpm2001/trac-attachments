--- C:/Documents and Settings/miche/Impostazioni locali/Temp/utilscmn.cpp-revBASE.svn000.tmp.cpp	Wed Nov 19 11:01:37 2008
+++ D:/libs/wxTrunk/src/common/utilscmn.cpp	Wed Nov 19 11:02:39 2008
@@ -960,19 +960,37 @@
             return true;
     }
 #elif defined(__WXMSW__)
-    const INT_PTR result = (INT_PTR)::ShellExecute
-                                      (
-                                        NULL,           // parent window
-                                        _T("open"),
-                                        document.wx_str(),
-                                        NULL,           // parameters
-                                        NULL,           // working directory
-                                        SW_SHOWDEFAULT
-                                      );
-    if ( result > 32 )
-        return true;
-#endif
 
+	WinStruct<SHELLEXECUTEINFO> sei;
+	sei.lpFile = document.wx_str();
+    sei.lpVerb = _T("open");
+    sei.nShow = SW_SHOWNORMAL;
+
+	BOOL nExecResult = TRUE;
+#ifdef __WXWINCE__
+	nExecResult = ::ShellExecuteEx(&sei);
+#else
+    ::ShellExecuteEx(&sei);
+#endif // __WXWINCE__
+
+	//From MSDN for wince
+	//hInstApp member is only valid if the function fails, in which case it
+	//receives one of the following error values, which are less than or
+	//equal to 32.
+    const int nResult = (int) sei.hInstApp;
+
+    // Firefox returns file not found for some reason, so make an exception
+    // for it
+    if ( nResult > 32 || nResult == SE_ERR_FNF  || nExecResult == TRUE )
+    {
+#ifdef __WXDEBUG__
+        // Log something if SE_ERR_FNF happens
+        if ( nResult == SE_ERR_FNF || nExecResult == FALSE )
+            wxLogDebug(wxT("SE_ERR_FNF from ShellExecute -- maybe FireFox?"));
+#endif // __WXDEBUG__
+        return true;
+    }
+#endif // __WXMSW__
     return false;
 }
 
@@ -1071,23 +1089,32 @@
     }
 #endif // wxUSE_IPC
 
+
     WinStruct<SHELLEXECUTEINFO> sei;
     sei.lpFile = url.c_str();
     sei.lpVerb = _T("open");
     sei.nShow = SW_SHOWNORMAL;
-    sei.fMask = SEE_MASK_FLAG_NO_UI; // we give error message ourselves
 
+	BOOL nExecResult = TRUE;
+#ifdef __WXWINCE__
+	nExecResult = ::ShellExecuteEx(&sei);
+#else
     ::ShellExecuteEx(&sei);
+#endif // __WXWINCE__
 
-    const INT_PTR nResult = (INT_PTR)sei.hInstApp;
+	//From MSDN for wince
+	//hInstApp member is only valid if the function fails, in which case it
+	//receives one of the following error values, which are less than or
+	//equal to 32.
+    const int nResult = (int) sei.hInstApp;
 
     // Firefox returns file not found for some reason, so make an exception
     // for it
-    if ( nResult > 32 || nResult == SE_ERR_FNF )
+    if ( nResult > 32 || nResult == SE_ERR_FNF  || nExecResult == TRUE )
     {
 #ifdef __WXDEBUG__
         // Log something if SE_ERR_FNF happens
-        if ( nResult == SE_ERR_FNF )
+        if ( nResult == SE_ERR_FNF || nExecResult == FALSE )
             wxLogDebug(wxT("SE_ERR_FNF from ShellExecute -- maybe FireFox?"));
 #endif // __WXDEBUG__
         return true;
