--- C:/3rdParty/wxMSW-2.9.3/src/msw/rendererorig.cpp	Fri May 25 16:11:35 2012
+++ C:/3rdParty/wxMSW-2.9.3/src/msw/renderer.cpp	Fri May 25 16:12:50 2012
@@ -229,10 +229,10 @@
 
 #if wxUSE_UXTHEME
 
-class wxRendererXP : public wxRendererMSWBase
+class wxRendererXP : public wxRendererMSW
 {
 public:
-    wxRendererXP() : wxRendererMSWBase(wxRendererMSW::Get()) { }
+    wxRendererXP() : wxRendererMSW() { }
 
     static wxRendererNative& Get();
 
@@ -267,7 +267,7 @@
                               int flags = 0)
     {
         if ( !DoDrawXPButton(BP_CHECKBOX, win, dc, rect, flags) )
-            m_rendererNative.DrawCheckBox(win, dc, rect, flags);
+            wxRendererMSW::DrawCheckBox(win, dc, rect, flags);
     }
 
     virtual void DrawPushButton(wxWindow *win,
@@ -276,7 +276,7 @@
                                 int flags = 0)
     {
         if ( !DoDrawXPButton(BP_PUSHBUTTON, win, dc, rect, flags) )
-            m_rendererNative.DrawPushButton(win, dc, rect, flags);
+            wxRendererMSW::DrawPushButton(win, dc, rect, flags);
     }
 
     virtual void DrawRadioBitmap(wxWindow *win,
@@ -285,7 +285,7 @@
                                  int flags = 0)
     {
         if ( !DoDrawXPButton(BP_RADIOBUTTON, win, dc, rect, flags) )
-            m_rendererNative.DrawRadioBitmap(win, dc, rect, flags);
+            wxRendererMSW::DrawRadioBitmap(win, dc, rect, flags);
     }
 
     virtual void DrawTitleBarBitmap(wxWindow *win,
@@ -625,7 +625,7 @@
     wxUxThemeHandle hTheme(win, L"COMBOBOX");
     if ( !hTheme )
     {
-        m_rendererNative.DrawComboBoxDropButton(win, dc, rect, flags);
+        wxRendererMSW::DrawComboBoxDropButton(win, dc, rect, flags);
         return;
     }
 
@@ -669,7 +669,7 @@
     wxUxThemeHandle hTheme(win, L"HEADER");
     if ( !hTheme )
     {
-        return m_rendererNative.DrawHeaderButton(win, dc, rect, flags, sortArrow, params);
+        return wxRendererMSW::DrawHeaderButton(win, dc, rect, flags, sortArrow, params);
     }
 
     wxCHECK_MSG( dc.GetImpl(), -1, wxT("Invalid wxDC") );
@@ -714,7 +714,7 @@
     wxUxThemeHandle hTheme(win, L"TREEVIEW");
     if ( !hTheme )
     {
-        m_rendererNative.DrawTreeItemButton(win, dc, rect, flags);
+        wxRendererMSW::DrawTreeItemButton(win, dc, rect, flags);
         return;
     }
 
@@ -820,7 +820,7 @@
     wxUxThemeHandle hTheme(win, L"WINDOW");
     if ( !hTheme )
     {
-        m_rendererNative.DrawTitleBarBitmap(win, dc, rect, button, flags);
+        wxRendererMSW::DrawTitleBarBitmap(win, dc, rect, button, flags);
         return;
     }
 
@@ -866,7 +866,7 @@
 wxRendererXP::GetSplitterParams(const wxWindow * win)
 {
     if ( win->HasFlag(wxSP_NO_XP_THEME) )
-        return m_rendererNative.GetSplitterParams(win);
+        return wxRendererMSW::GetSplitterParams(win);
     else
         return wxSplitterRenderParams(SASH_WIDTH, 0, false);
 }
@@ -879,7 +879,7 @@
 {
     if ( win->HasFlag(wxSP_NO_XP_THEME) )
     {
-        m_rendererNative.DrawSplitterBorder(win, dc, rect, flags);
+        wxRendererMSW::DrawSplitterBorder(win, dc, rect, flags);
     }
 }
 
@@ -907,7 +907,7 @@
         return;
     }
 
-    m_rendererNative.DrawSplitterSash(win, dc, size, position, orient, flags);
+    wxRendererMSW::DrawSplitterSash(win, dc, size, position, orient, flags);
 }
 
 #endif // wxUSE_UXTHEME
