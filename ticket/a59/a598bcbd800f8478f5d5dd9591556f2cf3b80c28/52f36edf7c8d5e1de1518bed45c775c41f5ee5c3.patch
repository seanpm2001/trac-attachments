Index: include/wx/stc/stc.h
===================================================================
--- include/wx/stc/stc.h	(revision 53094)
+++ include/wx/stc/stc.h	(working copy)
@@ -3679,6 +3679,38 @@
 #endif
 };
 
+// ----------------------------------------------------------------------------
+// wxStcEditMenuEvtHandler: wxStyledTextCtrl helper class, handling menu commands + updates
+// ----------------------------------------------------------------------------
+
+class WXDLLIMPEXP_STC wxStcEditMenuEvtHandler : public wxEvtHandler
+{
+protected:
+    wxStyledTextCtrl* m_edit;
+public:
+    wxStcEditMenuEvtHandler(wxStyledTextCtrl*);
+
+    bool HasSelection();
+    bool IsEmpty();
+protected:
+    void OnCopy(wxCommandEvent&);
+    void OnCut(wxCommandEvent&);
+    void OnPaste(wxCommandEvent&);
+    void OnUndo(wxCommandEvent&);
+    void OnRedo(wxCommandEvent&);
+    void OnDelete(wxCommandEvent&);
+    void OnSelectAll(wxCommandEvent&);
+
+    void OnUpdateCut(wxUpdateUIEvent&);
+    void OnUpdateCopy(wxUpdateUIEvent&);
+    void OnUpdatePaste(wxUpdateUIEvent&);
+    void OnUpdateUndo(wxUpdateUIEvent&);
+    void OnUpdateRedo(wxUpdateUIEvent&);
+    void OnUpdateDelete(wxUpdateUIEvent&);
+    void OnUpdateSelectAll(wxUpdateUIEvent&);
+    DECLARE_EVENT_TABLE()
+};
+
 //----------------------------------------------------------------------
 
 class WXDLLIMPEXP_STC wxStyledTextEvent : public wxCommandEvent {
Index: src/stc/stc.cpp
===================================================================
--- src/stc/stc.cpp	(revision 53094)
+++ src/stc/stc.cpp	(working copy)
@@ -3668,6 +3668,112 @@
 #endif
 }
 
+// ----------------------------------------------------------------------------
+// wxStcEditMenuEvtHandler: wxStyledTextCtrl helper class, handling menu commands + updates
+// ----------------------------------------------------------------------------
+
+BEGIN_EVENT_TABLE(wxStcEditMenuEvtHandler, wxEvtHandler)
+    EVT_MENU(wxID_CUT, wxStcEditMenuEvtHandler::OnCut)
+    EVT_MENU(wxID_COPY, wxStcEditMenuEvtHandler::OnCopy)
+    EVT_MENU(wxID_PASTE, wxStcEditMenuEvtHandler::OnPaste)
+    EVT_MENU(wxID_UNDO, wxStcEditMenuEvtHandler::OnUndo)
+    EVT_MENU(wxID_REDO, wxStcEditMenuEvtHandler::OnRedo)
+    EVT_MENU(wxID_CLEAR, wxStcEditMenuEvtHandler::OnDelete)
+    EVT_MENU(wxID_SELECTALL, wxStcEditMenuEvtHandler::OnSelectAll)
+
+    EVT_UPDATE_UI(wxID_CUT, wxStcEditMenuEvtHandler::OnUpdateCut)
+    EVT_UPDATE_UI(wxID_COPY, wxStcEditMenuEvtHandler::OnUpdateCopy)
+    EVT_UPDATE_UI(wxID_PASTE, wxStcEditMenuEvtHandler::OnUpdatePaste)
+    EVT_UPDATE_UI(wxID_UNDO, wxStcEditMenuEvtHandler::OnUpdateUndo)
+    EVT_UPDATE_UI(wxID_REDO, wxStcEditMenuEvtHandler::OnUpdateRedo)
+    EVT_UPDATE_UI(wxID_CLEAR, wxStcEditMenuEvtHandler::OnUpdateDelete)
+    EVT_UPDATE_UI(wxID_SELECTALL, wxStcEditMenuEvtHandler::OnUpdateSelectAll)
+END_EVENT_TABLE()
+
+wxStcEditMenuEvtHandler::wxStcEditMenuEvtHandler(wxStyledTextCtrl* edit) : wxEvtHandler(), m_edit(edit)
+{
+}
+
+bool wxStcEditMenuEvtHandler::HasSelection()
+{
+    return m_edit->GetSelectionStart() != m_edit->GetSelectionEnd();
+}
+
+bool wxStcEditMenuEvtHandler::IsEmpty()
+{
+    return 0 == m_edit->GetTextLength();
+}
+
+void wxStcEditMenuEvtHandler::OnCopy(wxCommandEvent&)
+{
+    m_edit->Copy();
+}
+
+void wxStcEditMenuEvtHandler::OnCut(wxCommandEvent&)
+{
+    m_edit->Cut();
+}
+
+void wxStcEditMenuEvtHandler::OnPaste(wxCommandEvent&)
+{
+    m_edit->Paste();
+}
+
+void wxStcEditMenuEvtHandler::OnUndo(wxCommandEvent&)
+{
+    m_edit->Undo();
+}
+
+void wxStcEditMenuEvtHandler::OnRedo(wxCommandEvent&)
+{
+    m_edit->Undo();
+}
+
+void wxStcEditMenuEvtHandler::OnDelete(wxCommandEvent&)
+{
+    m_edit->Clear();
+}
+
+void wxStcEditMenuEvtHandler::OnSelectAll(wxCommandEvent&)
+{
+    m_edit->SelectAll();
+}
+
+void wxStcEditMenuEvtHandler::OnUpdateCut(wxUpdateUIEvent& event)
+{
+    event.Enable(HasSelection() && !m_edit->GetReadOnly());
+}
+
+void wxStcEditMenuEvtHandler::OnUpdateCopy(wxUpdateUIEvent& event)
+{
+    event.Enable(HasSelection());
+}
+
+void wxStcEditMenuEvtHandler::OnUpdatePaste(wxUpdateUIEvent& event)
+{
+    event.Enable(m_edit->CanPaste());
+}
+
+void wxStcEditMenuEvtHandler::OnUpdateUndo(wxUpdateUIEvent& event)
+{
+    event.Enable(m_edit->CanUndo());
+}
+
+void wxStcEditMenuEvtHandler::OnUpdateRedo(wxUpdateUIEvent& event)
+{
+    event.Enable(m_edit->CanRedo());
+}
+
+void wxStcEditMenuEvtHandler::OnUpdateSelectAll(wxUpdateUIEvent& event)
+{
+    event.Enable(!IsEmpty());
+}
+
+void wxStcEditMenuEvtHandler::OnUpdateDelete(wxUpdateUIEvent& event)
+{ 
+    event.Enable(HasSelection() && !m_edit->GetReadOnly());
+}
+
 //----------------------------------------------------------------------
 //----------------------------------------------------------------------
 

 	  	 
