Index: src/common/image.cpp
===================================================================
--- src/common/image.cpp	(revision 66103)
+++ src/common/image.cpp	(working copy)
@@ -1068,26 +1068,31 @@
     unsigned char *source_data = M_IMGDATA->m_data;
     unsigned char *target_data;
     unsigned char *alpha_data = 0 ;
-    unsigned char *source_alpha = 0 ;
+    unsigned char *source_alpha = M_IMGDATA->m_alpha;
     unsigned char *target_alpha = 0 ;
 
-    if (M_IMGDATA->m_hasMask)
-    {
-        image.SetMaskColour( M_IMGDATA->m_maskRed, M_IMGDATA->m_maskGreen, M_IMGDATA->m_maskBlue );
+    if ( source_alpha ) {
+        image.SetAlpha() ;
+        alpha_data = image.GetAlpha() ;
+        wxCHECK_MSG( alpha_data, image, wxT("unable to create alpha channel") );
     }
-    else
-    {
-        source_alpha = M_IMGDATA->m_alpha ;
-        if ( source_alpha )
-        {
-            image.SetAlpha() ;
-            alpha_data = image.GetAlpha() ;
-        }
-    }
 
+    if ( M_IMGDATA->m_hasMask )
+        image.SetMaskColour( M_IMGDATA->m_maskRed, M_IMGDATA->m_maskGreen, M_IMGDATA->m_maskBlue );
+
     long height = M_IMGDATA->m_height;
     long width  = M_IMGDATA->m_width;
 
+    if ( HasOption( wxIMAGE_OPTION_CUR_HOTSPOT_X )) {
+        int hot_x = GetOptionInt( wxIMAGE_OPTION_CUR_HOTSPOT_X );
+        image.SetOption(wxIMAGE_OPTION_CUR_HOTSPOT_Y, clockwise ? hot_x : width-1-hot_x);
+    }
+
+    if ( HasOption( wxIMAGE_OPTION_CUR_HOTSPOT_Y )) {
+        int hot_y = GetOptionInt( wxIMAGE_OPTION_CUR_HOTSPOT_Y );
+        image.SetOption(wxIMAGE_OPTION_CUR_HOTSPOT_X, clockwise ? height-1-hot_y : hot_y);
+    }
+
     for (long j = 0; j < height; j++)
     {
         for (long i = 0; i < width; i++)
@@ -1095,19 +1100,19 @@
             if (clockwise)
             {
                 target_data = data + (((i+1)*height) - j - 1)*3;
-                if(source_alpha)
+                if (source_alpha)
                     target_alpha = alpha_data + (((i+1)*height) - j - 1);
             }
             else
             {
                 target_data = data + ((height*(width-1)) + j - (i*height))*3;
-                if(source_alpha)
+                if (source_alpha)
                     target_alpha = alpha_data + ((height*(width-1)) + j - (i*height));
             }
             memcpy( target_data, source_data, 3 );
             source_data += 3;
 
-            if(source_alpha)
+            if (source_alpha)
             {
                 memcpy( target_alpha, source_alpha, 1 );
                 source_alpha += 1;
