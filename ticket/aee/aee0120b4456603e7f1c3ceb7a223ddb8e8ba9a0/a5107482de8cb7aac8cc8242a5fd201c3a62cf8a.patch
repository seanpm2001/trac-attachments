diff -ru6 -xCVS -x.#* -x*.orig -x*.rej -x*.lib -x*.obj -x*.pch -x*.pdb -x*~ wxWindows.orig/src/msw/app.cpp wxWindows/src/msw/app.cpp
--- wxWindows.orig/src/msw/app.cpp	Tue Sep 10 08:54:36 2002
+++ wxWindows/src/msw/app.cpp	Mon Oct  7 08:00:52 2002
@@ -1185,12 +1185,23 @@
     {
         if (!GetTopWindow()->Close(!event.CanVeto()))
             event.Veto(TRUE);
     }
 }
 
+typedef struct _WXADllVersionInfo
+{
+        DWORD cbSize;
+        DWORD dwMajorVersion;                   // Major version
+        DWORD dwMinorVersion;                   // Minor version
+        DWORD dwBuildNumber;                    // Build number
+        DWORD dwPlatformID;                     // DLLVER_PLATFORM_*
+} WXADLLVERSIONINFO;
+
+typedef HRESULT (CALLBACK* WXADLLGETVERSIONPROC)(WXADLLVERSIONINFO *);
+
 /* static */
 int wxApp::GetComCtl32Version()
 {
 #ifdef __WXMICROWIN__
     return 0;
 #else
@@ -1204,23 +1215,31 @@
     {
         // initally assume no comctl32.dll at all
         s_verComCtl32 = 0;
 
         // do we have it?
         HMODULE hModuleComCtl32 = ::GetModuleHandle(wxT("COMCTL32"));
+        BOOL bFreeComCtl32 = FALSE ;
+        if(!hModuleComCtl32)
+        {
+            hModuleComCtl32 = ::LoadLibrary(wxT("COMCTL32.DLL")) ;
+            if(hModuleComCtl32)
+            {
+                bFreeComCtl32 = TRUE ;
+            }
+        }
 
         // if so, then we can check for the version
         if ( hModuleComCtl32 )
         {
             // try to use DllGetVersion() if available in _headers_
-            #ifdef DLLVER_PLATFORM_WINDOWS // defined in shlwapi.h
-                DLLGETVERSIONPROC pfnDllGetVersion = (DLLGETVERSIONPROC)
+                WXADLLGETVERSIONPROC pfnDllGetVersion = (WXADLLGETVERSIONPROC)
                     ::GetProcAddress(hModuleComCtl32, "DllGetVersion");
                 if ( pfnDllGetVersion )
                 {
-                    DLLVERSIONINFO dvi;
+                    WXADLLVERSIONINFO dvi;
                     dvi.cbSize = sizeof(dvi);
 
                     HRESULT hr = (*pfnDllGetVersion)(&dvi);
                     if ( FAILED(hr) )
                     {
                         wxLogApiError(_T("DllGetVersion"), hr);
@@ -1231,13 +1250,12 @@
                         // compatible with the other values returned by
                         // GetComCtl32Version()
                         s_verComCtl32 = 100*dvi.dwMajorVersion +
                                             dvi.dwMinorVersion;
                     }
                 }
-            #endif
                 // DllGetVersion() unavailable either during compile or
                 // run-time, try to guess the version otherwise
                 if ( !s_verComCtl32 )
                 {
                     // InitCommonControlsEx is unique to 4.70 and later
                     FARPROC theProc = ::GetProcAddress
@@ -1269,12 +1287,17 @@
                         {
                             // found, must be 4.71
                             s_verComCtl32 = 471;
                         }
                     }
                 }
+        }
+
+        if(bFreeComCtl32)
+        {
+            ::FreeLibrary(hModuleComCtl32) ;
         }
     }
 
     return s_verComCtl32;
 #endif
 }

 	  	 
