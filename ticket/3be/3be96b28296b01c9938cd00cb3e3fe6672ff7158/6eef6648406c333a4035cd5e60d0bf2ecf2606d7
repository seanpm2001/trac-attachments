bool wxICOFileHandler::LoadIcon(wxIcon *icon,
                                const wxString& name,
                                long flags,
                                int desiredWidth, int desiredHeight)
{
#if wxUSE_RESOURCE_LOADING_IN_MSW
    icon->UnRef();

    // actual size
    wxSize size;

#ifdef __WIN32__
    HICON hicon;
	int numextracted = 0;

	// large icon
	if (desiredWidth == ::GetSystemMetrics(SM_CXICON) &&  desiredHeight == ::GetSystemMetrics(SM_CYICON)) 
		numextracted = ::ExtractIconEx(name, 0, &hicon, NULL, 1); 

	// small icon
	else if (desiredWidth == ::GetSystemMetrics(SM_CXSMICON) &&  desiredHeight == ::GetSystemMetrics(SM_CYSMICON)) 
		numextracted = ::ExtractIconEx(name, 0, NULL, &hicon, 1); 

        // any icon
	if (numextracted == 0)
		hicon = ::ExtractIcon(wxGetInstance(), name, 0 /* first */);

    if ( !hicon )
    {
        wxLogSysError(_T("Failed to load icon from the file '%s'"),
                      name.c_str());

        return FALSE;
    }

    size = GetHiconSize(hicon);
#else // Win16
    HICON hicon = ReadIconFile((wxChar *)name.c_str(),
                               wxGetInstance(),
                               &size.x, &size.y);
#endif // Win32/Win16

    if ( (desiredWidth != -1 && desiredWidth != size.x) ||
         (desiredHeight != -1 && desiredHeight != size.y) )
    {
        wxLogDebug(_T("Returning FALSE from wxICOFileHandler::Load because of the size mismatch: actual (%d, %d), requested (%d, %d)"),
                      size.x, size.y,
                      desiredWidth, desiredHeight);

        ::DestroyIcon(hicon);

        return FALSE;
    }

    icon->SetHICON((WXHICON)hicon);
    icon->SetSize(size.x, size.y);

    return icon->Ok();
#else
    return FALSE;
#endif
}

 	  	 
