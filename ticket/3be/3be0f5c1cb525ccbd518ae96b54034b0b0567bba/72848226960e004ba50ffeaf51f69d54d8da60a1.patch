Index: include/wx/cocoa/sound.h
===================================================================
--- include/wx/cocoa/sound.h	(revision 69003)
+++ include/wx/cocoa/sound.h	(working copy)
@@ -25,7 +25,7 @@
     wxSound(const wxString& fileName, bool isResource = false)
     :   m_cocoaNSSound(NULL)
     {   Create(fileName, isResource); }
-    wxSound(int size, const wxByte* data)
+    wxSound(size_t size, const void* data)
     :   m_cocoaNSSound(NULL)
     {   LoadWAV(data,size,true); }
     wxSound(const wxSound& sound); // why not?
@@ -43,7 +43,7 @@
     {   return m_cocoaNSSound; }
 protected:
     bool DoPlay(unsigned flags) const;
-    bool LoadWAV(const wxUint8 *data, size_t length, bool copyData);
+    bool LoadWAV(const void* data, size_t length, bool copyData);
 private:
     WX_NSSound m_cocoaNSSound;
     static const wxObjcAutoRefFromAlloc<struct objc_object *> sm_cocoaDelegate;
Index: include/wx/msw/sound.h
===================================================================
--- include/wx/msw/sound.h	(revision 69003)
+++ include/wx/msw/sound.h	(working copy)
@@ -19,14 +19,14 @@
 public:
     wxSound();
     wxSound(const wxString& fileName, bool isResource = false);
-    wxSound(int size, const wxByte* data);
+    wxSound(size_t size, const void* data);
     virtual ~wxSound();
 
     // Create from resource or file
     bool Create(const wxString& fileName, bool isResource = false);
 
     // Create from data
-    bool Create(int size, const wxByte* data);
+    bool Create(size_t size, const void* data);
 
     bool IsOk() const { return m_data != NULL; }
 
Index: include/wx/os2/sound.h
===================================================================
--- include/wx/os2/sound.h	(revision 69003)
+++ include/wx/os2/sound.h	(working copy)
@@ -20,14 +20,14 @@
 public:
   wxSound();
   wxSound(const wxString& fileName, bool isResource = FALSE);
-  wxSound(int size, const wxByte* data);
+  wxSound(size_t size, const void* data);
   virtual ~wxSound();
 
 public:
   // Create from resource or file
   bool  Create(const wxString& fileName, bool isResource = FALSE);
   // Create from data
-  bool Create(int size, const wxByte* data);
+  bool Create(size_t size, const void* data);
 
   bool  IsOk() const { return (m_waveData ? TRUE : FALSE); };
 
Index: include/wx/osx/sound.h
===================================================================
--- include/wx/osx/sound.h	(revision 69003)
+++ include/wx/osx/sound.h	(working copy)
@@ -49,13 +49,13 @@
 public:
     wxSound();
     wxSound(const wxString& fileName, bool isResource = false);
-    wxSound(int size, const wxByte* data);
+    wxSound(size_t size, const void* data);
     virtual ~wxSound();
 
     // Create from resource or file
     bool  Create(const wxString& fileName, bool isResource = false);
     // Create from data
-    bool Create(int size, const wxByte* data);
+    bool Create(size_t size, const void* data);
 
     bool IsOk() const { return m_data != NULL; }
 
Index: include/wx/palmos/sound.h
===================================================================
--- include/wx/palmos/sound.h	(revision 69003)
+++ include/wx/palmos/sound.h	(working copy)
@@ -21,14 +21,14 @@
 public:
   wxSound();
   wxSound(const wxString& fileName, bool isResource = false);
-  wxSound(int size, const wxByte* data);
+  wxSound(size_t size, const void* data);
   virtual ~wxSound();
 
 public:
   // Create from resource or file
   bool  Create(const wxString& fileName, bool isResource = false);
   // Create from data
-  bool Create(int size, const wxByte* data);
+  bool Create(size_t size, const void* data);
 
   bool  IsOk() const { return (m_waveData ? true : false); };
 
Index: include/wx/unix/sound.h
===================================================================
--- include/wx/unix/sound.h	(revision 69003)
+++ include/wx/unix/sound.h	(working copy)
@@ -60,13 +60,13 @@
 public:
     wxSound();
     wxSound(const wxString& fileName, bool isResource = false);
-    wxSound(int size, const wxByte* data);
+    wxSound(size_t size, const void* data);
     virtual ~wxSound();
 
     // Create from resource or file
     bool Create(const wxString& fileName, bool isResource = false);
     // Create from data
-    bool Create(int size, const wxByte* data);
+    bool Create(size_t size, const void* data);
 
     bool IsOk() const { return m_data != NULL; }
 
@@ -84,7 +84,7 @@
 
     static void EnsureBackend();
     void Free();
-    bool LoadWAV(const wxUint8 *data, size_t length, bool copyData);
+    bool LoadWAV(const void* data, size_t length, bool copyData);
 
     static wxSoundBackend *ms_backend;
 #if wxUSE_LIBSDL && wxUSE_PLUGINS
Index: src/msw/sound.cpp
===================================================================
--- src/msw/sound.cpp	(revision 69003)
+++ src/msw/sound.cpp	(working copy)
@@ -58,7 +58,7 @@
 {
 public:
     // we copy the data
-    wxSoundDataMemory(int size, const wxByte *buf);
+    wxSoundDataMemory(size_t size, const void* buf);
 
     void *GetPtr() const { return m_waveDataPtr; }
 
@@ -101,7 +101,7 @@
 // wxSoundData-derived classes
 // ----------------------------------------------------------------------------
 
-wxSoundDataMemory::wxSoundDataMemory(int size, const wxByte *buf)
+wxSoundDataMemory::wxSoundDataMemory(size_t size, const void* buf)
                  : m_waveData(size),
                    m_waveDataPtr(m_waveData)
 {
@@ -131,7 +131,7 @@
     Create(filename, isResource);
 }
 
-wxSound::wxSound(int size, const wxByte *data)
+wxSound::wxSound(size_t size, const void* data)
 {
     Init();
     Create(size, data);
@@ -164,7 +164,7 @@
     return CheckCreatedOk();
 }
 
-bool wxSound::Create(int size, const wxByte* data)
+bool wxSound::Create(size_t size, const void* data)
 {
     Free();
 
Index: src/os2/sound.cpp
===================================================================
--- src/os2/sound.cpp	(revision 69003)
+++ src/os2/sound.cpp	(working copy)
@@ -42,7 +42,7 @@
   Create(sFileName, isResource);
 }
 
-wxSound::wxSound(int size, const wxByte* data)
+wxSound::wxSound(size_t size, const void* data)
   : m_waveData(NULL), m_waveLength(0), m_isResource(FALSE)
 {
   Create(size, data);
@@ -108,7 +108,7 @@
   }
 }
 
-bool wxSound::Create(int size, const wxByte* data)
+bool wxSound::Create(size_t size, const void* data)
 {
   Free();
   m_isResource = FALSE;
@@ -117,7 +117,7 @@
   if (!m_waveData)
      return FALSE;
 
-  for (int i=0; i<size; i++) m_waveData[i] = data[i];
+  memcpy(m_waveData, data, size);
   return TRUE;
 }
 
Index: src/osx/carbon/sound.cpp
===================================================================
--- src/osx/carbon/sound.cpp	(revision 69003)
+++ src/osx/carbon/sound.cpp	(working copy)
@@ -188,7 +188,7 @@
 {
 public:
     wxOSXQuickTimeSoundData(const wxString& fileName);
-    wxOSXQuickTimeSoundData(int size, const wxByte* data);
+    wxOSXQuickTimeSoundData(size_t size, const void* data);
     ~wxOSXQuickTimeSoundData();
 
     virtual bool Play(unsigned flags);
@@ -208,7 +208,7 @@
     m_sndname = fileName;
 }
 
-wxOSXQuickTimeSoundData::wxOSXQuickTimeSoundData(int size, const wxByte* data) :
+wxOSXQuickTimeSoundData::wxOSXQuickTimeSoundData(size_t size, const void* data) :
     m_movie(NULL)
 {
     m_soundHandle = NewHandleClear((Size)size);
@@ -354,7 +354,7 @@
         MoviesTask(m_movie, MOVIE_DELAY); //Give QT time to play movie
 }
 
-bool wxSound::Create(int size, const wxByte* data)
+bool wxSound::Create(size_t size, const void* data)
 {
     m_data = new wxOSXQuickTimeSoundData(size,data);
     return true;
Index: src/osx/core/sound.cpp
===================================================================
--- src/osx/core/sound.cpp	(revision 69003)
+++ src/osx/core/sound.cpp	(working copy)
@@ -129,7 +129,7 @@
     return true;
 }
 
-bool wxSound::Create(int WXUNUSED(size), const wxByte* WXUNUSED(data))
+bool wxSound::Create(size_t WXUNUSED(size), const void* WXUNUSED(data))
 {
     wxFAIL_MSG( "not implemented" );
 
Index: src/osx/sound_osx.cpp
===================================================================
--- src/osx/sound_osx.cpp	(revision 69003)
+++ src/osx/sound_osx.cpp	(working copy)
@@ -101,7 +101,7 @@
     Create(sFileName, isResource);
 }
 
-wxSound::wxSound(int size, const wxByte* data)
+wxSound::wxSound(size_t size, const void* data)
 {
     Init();
     Create( size, data );
Index: src/palmos/sound.cpp
===================================================================
--- src/palmos/sound.cpp	(revision 69003)
+++ src/palmos/sound.cpp	(working copy)
@@ -36,7 +36,7 @@
 {
 }
 
-wxSound::wxSound(int size, const wxByte* data)
+wxSound::wxSound(size_t size, const void* data)
   : m_waveData(NULL), m_waveLength(0), m_isResource(false)
 {
 }
@@ -50,7 +50,7 @@
     return false;
 }
 
-bool wxSound::Create(int size, const wxByte* data)
+bool wxSound::Create(size_t size, const void* data)
 {
     return false;
 }
Index: src/unix/sound.cpp
===================================================================
--- src/unix/sound.cpp	(revision 69003)
+++ src/unix/sound.cpp	(working copy)
@@ -435,7 +435,7 @@
     Create(sFileName, isResource);
 }
 
-wxSound::wxSound(int size, const wxByte* data) : m_data(NULL)
+wxSound::wxSound(size_t size, const void* data) : m_data(NULL)
 {
     Create(size, data);
 }
@@ -483,7 +483,7 @@
     return true;
 }
 
-bool wxSound::Create(int size, const wxByte* data)
+bool wxSound::Create(size_t size, const void* data)
 {
     wxASSERT( data != NULL );
 
@@ -623,7 +623,7 @@
 #define WAVE_INDEX       8
 #define FMT_INDEX       12
 
-bool wxSound::LoadWAV(const wxUint8 *data, size_t length, bool copyData)
+bool wxSound::LoadWAV(const void* _data, size_t length, bool copyData)
 {
     // the simplest wave file header consists of 44 bytes:
     //
@@ -648,6 +648,8 @@
     if ( length < 44 )
         return false;
 
+    const wxUint8* data = (const wxUint8*)_data;
+
     WAVEFORMAT waveformat;
     memcpy(&waveformat, &data[FMT_INDEX + 4], sizeof(WAVEFORMAT));
     waveformat.uiSize = wxUINT32_SWAP_ON_BE(waveformat.uiSize);
