Index: samples/dialogs/dialogs.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/samples/dialogs/dialogs.cpp,v
retrieving revision 1.146
diff -b -u -2 -r1.146 dialogs.cpp
--- samples/dialogs/dialogs.cpp	2006/04/21 13:10:51	1.146
+++ samples/dialogs/dialogs.cpp	2006/05/09 23:29:13
@@ -403,4 +403,7 @@
 }
 
+
+wxFileDialog *m_dlg;
+
 // My frame constructor
 MyFrame::MyFrame(wxWindow *parent,
@@ -433,4 +436,20 @@
     }
 #endif // wxUSE_COLOURDLG
+
+
+    m_dlg = new wxFileDialog
+                    (
+                        this,
+                        _T("Testing open file dialog"),
+                        wxEmptyString,
+                        wxEmptyString,
+    #ifdef __WXMOTIF__
+                        _T("C++ files (*.cpp)|*.cpp")
+    #else
+                        _T("C++ files (*.cpp;*.h)|*.cpp;*.h")
+    #endif
+                    );
+
+
 }
 
@@ -896,9 +915,16 @@
     wxGetHomeDir(&dirHome);
 
-    wxDirDialog dialog(this, _T("Testing directory picker"), dirHome, style);
+    // useful for testing wxCHANGE_DIR flag:
+    wxString cwdmsg = wxString::Format(_T("Current working directory (%s):\n\n  "),
+                                style & wxDD_CHANGE_DIR ? wxT("wxDD_CHANGE_DIR was given") :
+                                                          wxT("wxDD_CHANGE_DIR was NOT given"));
+    wxMessageBox(cwdmsg + wxGetCwd(), wxT("Before showing the dialog"), wxOK|wxICON_INFORMATION);
 
+
+    wxDirDialog dialog(this, _T("Testing directory picker"), dirHome, style);
     if (dialog.ShowModal() == wxID_OK)
     {
-        wxLogMessage(_T("Selected path: %s"), dialog.GetPath().c_str());
+        wxLogMessage(_T("Selected path: %s\n\n%s%s"),
+                     dialog.GetPath().c_str(), cwdmsg.c_str(), wxGetCwd().c_str());
     }
 }
@@ -906,10 +932,10 @@
 void MyFrame::DirChoose(wxCommandEvent& WXUNUSED(event) )
 {
-    DoDirChoose(wxDD_DEFAULT_STYLE & ~wxDD_NEW_DIR_BUTTON);
+    DoDirChoose((wxDD_DEFAULT_STYLE & ~wxDD_NEW_DIR_BUTTON) | wxDD_CHANGE_DIR);
 }
 
 void MyFrame::DirChooseNew(wxCommandEvent& WXUNUSED(event) )
 {
-    DoDirChoose(wxDD_DEFAULT_STYLE | wxDD_NEW_DIR_BUTTON);
+    DoDirChoose((wxDD_DEFAULT_STYLE | wxDD_NEW_DIR_BUTTON) & ~wxDD_CHANGE_DIR);
 }
 #endif // wxUSE_DIRDLG
@@ -1024,5 +1050,5 @@
 void MyFrame::OnRequestUserAttention(wxCommandEvent& WXUNUSED(event))
 {
-    wxLogStatus(_T("Sleeping for 3 seconds to allow you to switch to another window"));
+    wxMessageBox(_T("Going to sleep for 3 seconds to allow you to switch to another window"));
 
     wxSleep(3);
@@ -1388,4 +1414,8 @@
     else if ( event.GetEventObject() == m_btnModal )
     {
+
+
+
+/*
 #if wxUSE_TEXTDLG
         wxGetTextFromUser(_T("Dummy prompt"),
@@ -1395,4 +1425,40 @@
         wxMessageBox(_T("Modal dialog called from dialog"));
 #endif // wxUSE_TEXTDLG
+*/
+
+        m_dlg->CentreOnParent();
+        m_dlg->SetDirectory(wxGetHomeDir());
+/*
+        static bool first = true;
+        if (first) {
+        m_dlg->Connect(wxEVT_COMMAND_BUTTON_CLICKED,
+            wxCommandEventHandler(a::OnButtonClick),
+            NULL, this);
+        first = false;
+        }*/
+
+
+        int n = m_dlg->ShowModal();
+        if (n == wxID_OK)
+        {
+            wxString info;
+            info.Printf(_T("Full file name: %s\n")
+                        _T("Path: %s\n")
+                        _T("Name: %s"),
+                        m_dlg->GetPath().c_str(),
+                        m_dlg->GetDirectory().c_str(),
+                        m_dlg->GetFilename().c_str());
+            wxMessageDialog dialog2(this, info, _T("Selected file"));
+            dialog2.ShowModal();
+        } else if (n == wxID_CANCEL)
+        {
+
+        wxLogDebug("wxID_CANCEL");
+}
+
+
+
+
+
     }
     else if ( event.GetEventObject() == m_btnModeless )

 	  	 
