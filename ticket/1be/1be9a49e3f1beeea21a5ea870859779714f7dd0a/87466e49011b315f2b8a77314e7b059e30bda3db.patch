--- src/gtk_org/print.cpp	2010-09-22 14:51:46.721391969 +0800
+++ src/gtk/print.cpp	2010-09-22 15:15:28.899883701 +0800
@@ -36,6 +36,8 @@
 #include "wx/paper.h"
 
 #include <gtk/gtk.h>
+// Add headers for GtkPageSetupUnixDialog
+#include <gtk/gtkpagesetupunixdialog.h>
 
 #if wxUSE_GRAPHICS_CONTEXT
 #include "wx/graphics.h"
@@ -222,11 +224,13 @@
 wxGtkPrintNativeData::wxGtkPrintNativeData()
 {
     m_config = gtk_print_settings_new();
+    m_job = gtk_print_operation_new();
 }
 
 wxGtkPrintNativeData::~wxGtkPrintNativeData()
 {
     g_object_unref (m_config);
+    g_object_unref (m_job);
 }
 
 // Convert datas stored in m_config to a wxPrintData.
@@ -386,6 +390,10 @@
         data.SetPaperId( wxPAPER_FANFOLD_LGL_GERMAN);
     else
         data.SetPaperId(wxPAPER_NONE);
+
+    // Set Printer Name
+    data.SetPrinterName(gtk_print_settings_get_printer(m_config));
+
     return true;
 }
 
@@ -534,6 +542,9 @@
         default:                break;
     }
 
+    // Set Printer Name
+    gtk_print_settings_set_printer(m_config, data.GetPrinterName());
+
     return true;
 }
 
@@ -658,6 +669,12 @@
     native->SetPrintConfig(newSettings);
     data.ConvertFromNative();
 
+    // Set PrintDialogData variables
+    m_printDialogData.SetPrintData(data);
+    m_printDialogData.SetCollate(data.GetCollate());
+    m_printDialogData.SetNoCopies(data.GetNoCopies());
+    m_printDialogData.SetPrintToFile(data.GetPrinterName() == "Print to File");
+
     // Same problem as a few lines before.
     switch (gtk_print_settings_get_print_pages(newSettings))
     {
@@ -735,42 +752,64 @@
         }
     }
 
-    // Now show the dialog.
-    GtkPageSetup* newPageSetup = gtk_print_run_page_setup_dialog (GTK_WINDOW(m_parent->m_widget),
-                                                           oldPageSetup,
-                                                           nativeData);
-
-    int ret;
-    if (newPageSetup != oldPageSetup)
-    {
-        native->SetPageSetupToSettings(nativeData, newPageSetup);
-        m_pageDialogData.GetPrintData().ConvertFromNative();
 
-        // Store custom paper format if any.
-        if (m_pageDialogData.GetPrintData().GetPaperId() == wxPAPER_NONE)
-        {
-            gdouble ml,mr,mt,mb,pw,ph;
-            ml = gtk_page_setup_get_left_margin (newPageSetup, GTK_UNIT_MM);
-            mr = gtk_page_setup_get_right_margin (newPageSetup, GTK_UNIT_MM);
-            mt = gtk_page_setup_get_top_margin (newPageSetup, GTK_UNIT_MM);
-            mb = gtk_page_setup_get_bottom_margin (newPageSetup, GTK_UNIT_MM);
+    // Set selected printer
+    gtk_print_settings_set(nativeData, "format-for-printer", gtk_print_settings_get_printer(nativeData));
 
-            pw = gtk_page_setup_get_paper_width (newPageSetup, GTK_UNIT_MM);
-            ph = gtk_page_setup_get_paper_height (newPageSetup, GTK_UNIT_MM);
+    // Create custom dialog
+    GtkWidget* dlg = gtk_page_setup_unix_dialog_new(this->GetTitle().IsEmpty() ? "Page Setup" : this->GetTitle(), GTK_WINDOW(m_parent->m_widget));
+ 
+    gtk_page_setup_unix_dialog_set_print_settings(GTK_PAGE_SETUP_UNIX_DIALOG(dlg), nativeData);
+    gtk_page_setup_unix_dialog_set_page_setup(GTK_PAGE_SETUP_UNIX_DIALOG(dlg), oldPageSetup);
 
-            m_pageDialogData.SetMarginTopLeft( wxPoint( (int)(ml+0.5), (int)(mt+0.5)) );
-            m_pageDialogData.SetMarginBottomRight( wxPoint( (int)(mr+0.5), (int)(mb+0.5)) );
+    int result = gtk_dialog_run(GTK_DIALOG(dlg));
+    gtk_widget_hide(dlg);
 
-            m_pageDialogData.SetPaperSize( wxSize( (int)(pw+0.5), (int)(ph+0.5) ) );
-        }
+    int ret;
 
-        ret = wxID_OK;
-    }
-    else
-    {
-        ret = wxID_CANCEL;
+    switch (result) {
+       case GTK_RESPONSE_OK:
+       case GTK_RESPONSE_APPLY:
+           {
+		// Store Selected Printer Name
+		gtk_print_settings_set_printer(nativeData, gtk_print_settings_get(nativeData, "format-for-printer"));
+
+            	GtkPageSetup*      newPageSetup = gtk_page_setup_unix_dialog_get_page_setup(GTK_PAGE_SETUP_UNIX_DIALOG(dlg));
+	        native->SetPageSetupToSettings(nativeData, newPageSetup);
+
+	        m_pageDialogData.GetPrintData().ConvertFromNative();
+
+	        // Store custom paper format if any.
+	        if (m_pageDialogData.GetPrintData().GetPaperId() == wxPAPER_NONE)
+	        {
+	            gdouble ml,mr,mt,mb,pw,ph;
+	            ml = gtk_page_setup_get_left_margin (newPageSetup, GTK_UNIT_MM);
+	            mr = gtk_page_setup_get_right_margin (newPageSetup, GTK_UNIT_MM);
+	            mt = gtk_page_setup_get_top_margin (newPageSetup, GTK_UNIT_MM);
+	            mb = gtk_page_setup_get_bottom_margin (newPageSetup, GTK_UNIT_MM);
+
+	            pw = gtk_page_setup_get_paper_width (newPageSetup, GTK_UNIT_MM);
+	            ph = gtk_page_setup_get_paper_height (newPageSetup, GTK_UNIT_MM);
+	
+	            m_pageDialogData.SetMarginTopLeft( wxPoint( (int)(ml+0.5), (int)(mt+0.5)) );
+	            m_pageDialogData.SetMarginBottomRight( wxPoint( (int)(mr+0.5), (int)(mb+0.5)) );
+
+	            m_pageDialogData.SetPaperSize( wxSize( (int)(pw+0.5), (int)(ph+0.5) ) );
+	        }
+		g_object_unref(newPageSetup);
+
+	        ret = wxID_OK;
+           }
+           break;
+
+       default:
+       case GTK_RESPONSE_CANCEL:
+	   ret = wxID_CANCEL;
+           break;
     }
 
+    gtk_widget_destroy(dlg);
+
     return ret;
 }
 
