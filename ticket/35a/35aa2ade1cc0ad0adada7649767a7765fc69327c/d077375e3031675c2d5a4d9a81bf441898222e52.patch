Index: framemanager.h
===================================================================
--- framemanager.h	(revision 78355)
+++ framemanager.h	(working copy)
@@ -22,7 +22,7 @@
 
 
 /**
-    wxAuiManager behaviour and visual effects style flags.
+    wxAuiManager behavior and visual effects style flags.
 */
 enum wxAuiManagerOption
 {
@@ -60,7 +60,7 @@
 
     wxAuiManager manages the panes associated with it for a particular wxFrame,
     using a pane's wxAuiPaneInfo information to determine each pane's docking
-    and floating behaviour.
+    and floating behavior.
 
     wxAuiManager uses wxWidgets' sizer mechanism to plan the layout of each
     frame. It uses a replaceable dock art class to do all drawing, so all
@@ -179,7 +179,7 @@
         @param managed_wnd
             Specifies the wxFrame which should be managed.
         @param flags
-            Specifies the frame management behaviour and visual effects
+            Specifies the frame management behavior and visual effects
             with the ::wxAuiManagerOption's style flags.
     */
     wxAuiManager(wxWindow* managed_wnd = NULL,
@@ -208,6 +208,36 @@
     //@}
 
     /**
+        This function is used by controls to calculate the drop hint rectangle. The method first
+        calls DoDrop() to determine the exact position the pane would be at were if dropped.
+        @param paneWindow The window pointer of the pane being dragged.
+        @param pt The mouse position, in client coordinates.
+        @param offset Describes the offset that the mouse is from the upper-left
+            corner of the item being dragged.
+        @return The rectangle hint will be returned in screen coordinates if the pane
+            would indeed become docked at the specified drop point.
+            Otherwise, an empty rectangle is returned.
+    */
+    wxRect CalculateHintRect(wxWindow* paneWindow, const wxPoint& pt, const wxPoint& offset);
+
+    /**
+        Check if a key modifier is pressed (actually ::WXK_CONTROL or ::WXK_ALT)
+        while dragging the frame to not dock the window.
+    */
+    virtual bool CanDockPanel(const wxAuiPaneInfo & p);
+
+    /**
+        Destroys or hides the given pane depending on its flags.
+        @see wxAuiPaneInfo::DestroyOnClose
+    */
+    void ClosePane(wxAuiPaneInfo& paneInfo);
+
+    /**
+        Creates a floating frame in this wxAuiManager with the given parent and wxAuiPaneInfo.
+    */
+    virtual wxAuiFloatingFrame* CreateFloatingFrame(wxWindow* parent, const wxAuiPaneInfo& p);
+
+    /**
         Tells the wxAuiManager to stop managing the pane specified by window.
         The window, if in a floated frame, is reparented to the frame managed
         by wxAuiManager.
@@ -215,6 +245,13 @@
     bool DetachPane(wxWindow* window);
 
     /**
+        This function is used by controls to draw the hint window.
+        It is rarely called, and is mostly used by controls
+        implementing custom pane drag/drop behavior.
+    */
+    void DrawHintRect(wxWindow* paneWindow, const wxPoint& pt, const wxPoint& offset);
+
+    /**
         Returns an array of all panes managed by the frame manager.
     */
     wxAuiPaneInfoArray& GetAllPanes();
@@ -302,6 +339,21 @@
                          bool update = true);
 
     /**
+        Maximize the given pane.
+    */
+    void MaximizePane(wxAuiPaneInfo& paneInfo);
+
+    /**
+        Restore the last state of the given pane.
+    */
+    void RestorePane(wxAuiPaneInfo& paneInfo);
+
+    /**
+        Restore the previously maximized pane.
+    */
+    void RestoreMaximizedPane();
+
+    /**
         SavePaneInfo() is similar to SavePerspective, with the exception that it only
         saves information about a single pane.  It is used in combination with
         LoadPaneInfo().
@@ -320,7 +372,7 @@
     /**
         Instructs wxAuiManager to use art provider specified by parameter
         @a art_provider for all drawing calls.
-        This allows plugable look-and-feel features. The previous art provider object,
+        This allows pluggable look-and-feel features. The previous art provider object,
         if any, will be deleted by wxAuiManager.
 
         @see wxAuiDockArt.
@@ -329,7 +381,7 @@
 
     /**
         When a user creates a new dock by dragging a window into a docked position,
-        often times the large size of the window will create a dock that is unwieldly
+        often times the large size of the window will create a dock that is unwieldy
         large. wxAuiManager by default limits the size of any new dock to 1/3 of the
         window size.  For horizontal docks, this would be 1/3 of the window height.
         For vertical docks, 1/3 of the width.
@@ -343,7 +395,7 @@
 
     /**
         This method is used to specify ::wxAuiManagerOption's flags. @a flags
-        specifies options which allow the frame management behaviour to be modified.
+        specifies options which allow the frame management behavior to be modified.
     */
     void SetFlags(unsigned int flags);
 
@@ -357,12 +409,17 @@
     /**
         This function is used by controls to explicitly show a hint window at the
         specified rectangle. It is rarely called, and is mostly used by controls
-        implementing custom pane drag/drop behaviour.
+        implementing custom pane drag/drop behavior.
         The specified rectangle should be in screen coordinates.
     */
     virtual void ShowHint(const wxRect& rect);
 
     /**
+        Mostly used internally to define the drag action parameters.
+    */
+    void StartPaneDrag(wxWindow* paneWindow, const wxPoint& offset);
+
+    /**
         Uninitializes the framework and should be called before a managed frame or
         window is destroyed. UnInit() is usually called in the managed wxFrame's
         destructor.  It is necessary to call this function before the managed frame
