diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/build/bakefiles/files.bkl wxWidgets-2.8.0-wxapp/build/bakefiles/files.bkl
--- wxWidgets-2.8.0/build/bakefiles/files.bkl	2007-05-09 14:49:58.082182750 +0200
+++ wxWidgets-2.8.0-wxapp/build/bakefiles/files.bkl	2007-05-09 15:28:18.000000000 +0200
@@ -54,9 +54,13 @@
 <!--                               UNIX                                     -->
 <!-- =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- -->
 <set var="BASE_UNIX_SRC" hints="files">
+    src/common/selectdispatcher.cpp
+    src/unix/app.cpp
     src/unix/baseunix.cpp
     src/unix/dir.cpp
     src/unix/dlunix.cpp
+    src/unix/epolldispatcher.cpp
+    src/unix/evtloop.cpp
     src/unix/mimetype.cpp
     src/unix/snglinst.cpp
     src/unix/stackwalk.cpp
@@ -68,9 +72,11 @@
     src/unix/utilsunx.cpp
 </set>
 <set var="BASE_UNIX_HDR" hints="files">
+    wx/unix/app.h
     wx/unix/apptbase.h
     wx/unix/apptrait.h
     wx/unix/execute.h
+    wx/unix/evtloop.h
     wx/unix/mimetype.h
     wx/unix/pipe.h
     wx/unix/private.h
@@ -88,6 +94,7 @@
     src/msw/dde.cpp
     src/msw/dir.cpp
     src/msw/dlmsw.cpp
+    src/msw/evtloop.cpp
     src/msw/mimetype.cpp
     src/msw/power.cpp
     src/msw/regconf.cpp
@@ -308,6 +315,7 @@
     src/common/dynlib.cpp
     src/common/dynload.cpp
     src/common/encconv.cpp
+    src/common/evtloopcmn.cpp
     src/common/extended.c
     src/common/ffile.cpp
     src/common/file.cpp
@@ -613,7 +621,6 @@
     src/common/dpycmn.cpp
     src/common/dseldlg.cpp
     src/common/effects.cpp
-    src/common/evtloopcmn.cpp
     src/common/fddlgcmn.cpp
     src/common/filepickercmn.cpp
     src/common/fontpickercmn.cpp
@@ -1417,7 +1424,6 @@
 <set var="X11_LOWLEVEL_SRC" hints="files">
     $(XWIN_LOWLEVEL_SRC)
     src/common/gsocketiohandler.cpp
-    src/common/selectdispatcher.cpp
     src/generic/icon.cpp
     src/generic/timer.cpp
     src/x11/app.cpp
@@ -1835,7 +1841,6 @@
 <set var="DFB_LOWLEVEL_SRC" hints="files">
     src/common/fontmgrcmn.cpp
     src/common/gsocketiohandler.cpp
-    src/common/selectdispatcher.cpp
     src/generic/caret.cpp
     src/generic/colour.cpp
     src/generic/icon.cpp
Files wxWidgets-2.8.0/build/bakefiles/wxwin.pyc and wxWidgets-2.8.0-wxapp/build/bakefiles/wxwin.pyc differ
Files wxWidgets-2.8.0/build/msw/wx.ncb and wxWidgets-2.8.0-wxapp/build/msw/wx.ncb differ
Files wxWidgets-2.8.0/build/msw/wx.suo and wxWidgets-2.8.0-wxapp/build/msw/wx.suo differ
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/configure.in wxWidgets-2.8.0-wxapp/configure.in
--- wxWidgets-2.8.0/configure.in	2007-05-09 14:49:57.710159500 +0200
+++ wxWidgets-2.8.0-wxapp/configure.in	2007-05-07 10:03:50.000000000 +0200
@@ -1864,6 +1864,9 @@
     AC_CHECK_HEADER([sys/select.h],,, [AC_INCLUDES_DEFAULT()])
 fi
 
+dnl defines HAVE_SYS_EPOLL_H - for epoll mainloop implementation in wxbase
+AC_CHECK_HEADERS(sys/epoll.h)
+
 dnl ---------------------------------------------------------------------------
 dnl Checks for compiler characteristics
 dnl ---------------------------------------------------------------------------
Files wxWidgets-2.8.0/demos/dbbrowse/de/dbbrowse.mo and wxWidgets-2.8.0-wxapp/demos/dbbrowse/de/dbbrowse.mo differ
Files wxWidgets-2.8.0/demos/dbbrowse/de/help.mo and wxWidgets-2.8.0-wxapp/demos/dbbrowse/de/help.mo differ
Files wxWidgets-2.8.0/demos/dbbrowse/de/wxstd.mo and wxWidgets-2.8.0-wxapp/demos/dbbrowse/de/wxstd.mo differ
Files wxWidgets-2.8.0/demos/dbbrowse/fr/wxstd.mo and wxWidgets-2.8.0-wxapp/demos/dbbrowse/fr/wxstd.mo differ
Files wxWidgets-2.8.0/docs/word/odbc.doc and wxWidgets-2.8.0-wxapp/docs/word/odbc.doc differ
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/app.h wxWidgets-2.8.0-wxapp/include/wx/app.h
--- wxWidgets-2.8.0/include/wx/app.h	2007-05-09 14:50:10.522960250 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/app.h	2007-05-09 15:22:38.000000000 +0200
@@ -1,6 +1,6 @@
 /////////////////////////////////////////////////////////////////////////////
 // Name:        wx/app.h
-// Purpose:     wxAppBase class and macros used for declaration of wxApp
+// Purpose:     wxAppGUIBase class and macros used for declaration of wxApp
 //              derived class in the user code
 // Author:      Julian Smart
 // Modified by:
@@ -21,6 +21,7 @@
 #include "wx/build.h"
 #include "wx/init.h"        // we must declare wxEntry()
 #include "wx/intl.h"        // for wxLayoutDirection
+#include "wx/evtloop.h"
 
 class WXDLLIMPEXP_BASE wxAppConsole;
 class WXDLLIMPEXP_BASE wxAppTraits;
@@ -29,7 +30,6 @@
 class WXDLLIMPEXP_BASE wxMessageOutput;
 
 #if wxUSE_GUI
-    class WXDLLEXPORT wxEventLoop;
     struct WXDLLIMPEXP_CORE wxVideoMode;
 #endif
 
@@ -86,7 +86,7 @@
 
     // This is the replacement for the normal main(): all program work should
     // be done here. When OnRun() returns, the programs starts shutting down.
-    virtual int OnRun() = 0;
+    virtual int OnRun();
 
     // This is only called if OnInit() returned true so it's a good place to do
     // any cleanup matching the initializations done there.
@@ -170,7 +170,7 @@
     // either should be configurable by the user (then he can change the
     // default behaviour simply by overriding CreateTraits() and returning his
     // own traits object) or which is GUI/console dependent as then wxAppTraits
-    // allows us to abstract the differences behind the common façade
+    // allows us to abstract the differences behind the common faï¿½de
     wxAppTraits *GetTraits();
 
 
@@ -203,22 +203,61 @@
     virtual void OnUnhandledException() { }
 #endif // wxUSE_EXCEPTIONS
 
+    //event loop related functions
+    // -----------------
+
+    // return true if we're running main loop, i.e. if the events can
+    // (already) be dispatched
+    static bool IsMainLoopRunning()
+    {
+        wxAppConsole *app = GetInstance();
+        return app && app->m_mainLoop != NULL;
+    }
     // process all events in the wxPendingEvents list -- it is necessary to
     // call this function to process posted events. This happens during each
     // event loop iteration in GUI mode but if there is no main loop, it may be
     // also called directly.
     virtual void ProcessPendingEvents();
 
+    // check if there are pending events on global pending event list
+    bool HasPendingEvents() const;
+
     // doesn't do anything in this class, just a hook for GUI wxApp
     virtual bool Yield(bool WXUNUSED(onlyIfNeeded) = false) { return true; }
 
     // make sure that idle events are sent again
-    virtual void WakeUpIdle() { }
+    virtual void WakeUpIdle();
+
+        // execute the main GUI loop, the function returns when the loop ends
+    virtual int MainLoop();
+
+        // exit the main GUI loop during the next iteration (i.e. it does not
+        // stop the program immediately!)
+    virtual void ExitMainLoop();
+
+        // returns true if there are unprocessed events in the event queue
+    virtual bool Pending();
+
+        // process the first event in the event queue (blocks until an event
+        // appears if there are none currently, use Pending() if this is not
+        // wanted), returns false if the event loop should stop and true
+        // otherwise
+    virtual bool Dispatch();
 
-    // this is just a convenience: by providing its implementation here we
-    // avoid #ifdefs in the code using it
-    static bool IsMainLoopRunning() { return false; }
+        // this virtual function is called  when the application
+        // becomes idle and normally just sends wxIdleEvent to all interested
+        // parties
+        //
+        // it should return true if more idle events are needed, false if not
+    virtual bool ProcessIdle();
 
+#if wxUSE_EXCEPTIONS
+    // Function called if an uncaught exception is caught inside the main
+    // event loop: it may return true to continue running the event loop or
+    // false to stop it (in the latter case it may rethrow the exception as
+    // well)
+    virtual bool OnExceptionInMainLoop();
+#endif // wxUSE_EXCEPTIONS
 
     // debugging support
     // -----------------
@@ -284,6 +323,9 @@
     // the one and only global application object
     static wxAppConsole *ms_appInstance;
 
+    // create main loop from AppTraits or return NULL if 
+    // there is no main loop implementation
+    wxEventLoop *CreateMainLoop();
 
     // application info (must be set from the user code)
     wxString m_vendorName,      // vendor name (ACME Inc)
@@ -294,6 +336,9 @@
     // by GetTraits() when first needed
     wxAppTraits *m_traits;
 
+    // the main event loop of the application (may be NULL if the loop hasn't
+    // been started yet or has already terminated)
+    wxEventLoop *m_mainLoop;
 
     // the application object is a singleton anyhow, there is no sense in
     // copying it
@@ -301,16 +346,16 @@
 };
 
 // ----------------------------------------------------------------------------
-// wxAppBase: the common part of wxApp implementations for all platforms
+// wxAppGUIBase: the common part of wxApp implementations for all platforms
 // ----------------------------------------------------------------------------
 
 #if wxUSE_GUI
 
-class WXDLLIMPEXP_CORE wxAppBase : public wxAppConsole
+class WXDLLIMPEXP_CORE wxAppGUIBase : public wxAppConsole
 {
 public:
-    wxAppBase();
-    virtual ~wxAppBase();
+    wxAppGUIBase();
+    virtual ~wxAppGUIBase();
 
     // the virtual functions which may/must be overridden in the derived class
     // -----------------------------------------------------------------------
@@ -347,32 +392,7 @@
     // the worker functions - usually not used directly by the user code
     // -----------------------------------------------------------------
 
-        // return true if we're running main loop, i.e. if the events can
-        // (already) be dispatched
-    static bool IsMainLoopRunning()
-    {
-        wxAppBase *app = wx_static_cast(wxAppBase *, GetInstance());
-        return app && app->m_mainLoop != NULL;
-    }
-
-        // execute the main GUI loop, the function returns when the loop ends
-    virtual int MainLoop();
 
-        // exit the main loop thus terminating the application
-    virtual void Exit();
-
-        // exit the main GUI loop during the next iteration (i.e. it does not
-        // stop the program immediately!)
-    virtual void ExitMainLoop();
-
-        // returns true if there are unprocessed events in the event queue
-    virtual bool Pending();
-
-        // process the first event in the event queue (blocks until an event
-        // appears if there are none currently, use Pending() if this is not
-        // wanted), returns false if the event loop should stop and true
-        // otherwise
-    virtual bool Dispatch();
 
         // process all currently pending events right now
         //
@@ -397,15 +417,6 @@
     virtual bool SendIdleEvents(wxWindow* win, wxIdleEvent& event);
 
 
-#if wxUSE_EXCEPTIONS
-    // Function called if an uncaught exception is caught inside the main
-    // event loop: it may return true to continue running the event loop or
-    // false to stop it (in the latter case it may rethrow the exception as
-    // well)
-    virtual bool OnExceptionInMainLoop();
-#endif // wxUSE_EXCEPTIONS
-
-
     // top level window functions
     // --------------------------
 
@@ -494,10 +505,6 @@
     virtual wxAppTraits *CreateTraits();
 
 
-    // the main event loop of the application (may be NULL if the loop hasn't
-    // been started yet or has already terminated)
-    wxEventLoop *m_mainLoop;
-
     // the main top level window (may be NULL)
     wxWindow *m_topWindow;
 
@@ -522,11 +529,11 @@
     bool m_isActive;
 
 
-    DECLARE_NO_COPY_CLASS(wxAppBase)
+    DECLARE_NO_COPY_CLASS(wxAppGUIBase)
 };
 
 #if WXWIN_COMPATIBILITY_2_6
-    inline bool wxAppBase::Initialized() { return true; }
+    inline bool wxAppGUIBase::Initialized() { return true; }
 #endif // WXWIN_COMPATIBILITY_2_6
 
 #endif // wxUSE_GUI
@@ -560,8 +567,15 @@
         #include "wx/os2/app.h"
     #endif
 #else // !GUI
-    // allow using just wxApp (instead of wxAppConsole) in console programs
-    typedef wxAppConsole wxApp;
+    //wxApp is defined in core and we cannot define another one in wxBase
+    //We create different class and typedef it to wxApp instead
+    #if defined(__UNIX__)
+        #include "wx/unix/app.h"
+        typedef wxUnixAppConsole wxApp;
+    #else
+      // allow using just wxApp (instead of wxAppConsole) in console programs
+      typedef wxAppConsole wxApp;
+    #endif
 #endif // GUI/!GUI
 
 // ----------------------------------------------------------------------------
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/apptrait.h wxWidgets-2.8.0-wxapp/include/wx/apptrait.h
--- wxWidgets-2.8.0/include/wx/apptrait.h	2007-05-09 14:50:10.566963000 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/apptrait.h	2007-05-09 10:12:54.000000000 +0200
@@ -14,6 +14,7 @@
 
 #include "wx/string.h"
 #include "wx/platinfo.h"
+#include "wx/evtloop.h"
 
 class WXDLLIMPEXP_BASE wxArrayString;
 class WXDLLIMPEXP_BASE wxObject;
@@ -120,6 +121,9 @@
     virtual GSocketGUIFunctionsTable* GetSocketGUIFunctionsTable() = 0;
 #endif
 
+    // return port specific instance of main loop
+    virtual wxEventLoop* CreateEventLoop() = 0;
+
 #if wxUSE_TIMER
     // return platform and toolkit dependent wxTimer implementation
     virtual wxTimerImpl *CreateTimerImpl(wxTimer *timer) = 0;
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/cocoa/app.h wxWidgets-2.8.0-wxapp/include/wx/cocoa/app.h
--- wxWidgets-2.8.0/include/wx/cocoa/app.h	2007-05-09 14:50:21.495646000 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/cocoa/app.h	2007-05-07 10:21:48.000000000 +0200
@@ -17,7 +17,7 @@
 // ========================================================================
 // Represents the application. Derive OnInit and declare
 // a new App object to start application
-class WXDLLEXPORT wxApp: public wxAppBase
+class WXDLLEXPORT wxApp: public wxAppGUIBase
 {
     DECLARE_DYNAMIC_CLASS(wxApp)
     DECLARE_EVENT_TABLE()
@@ -46,7 +46,7 @@
 // Implementation
 // ------------------------------------------------------------------------
 public:
-    // Implement wxAppBase pure virtuals
+    // Implement wxAppGUIBase pure virtuals
     virtual void Exit();
 
     virtual bool Yield(bool onlyIfNeeded = FALSE);
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/dfb/app.h wxWidgets-2.8.0-wxapp/include/wx/dfb/app.h
--- wxWidgets-2.8.0/include/wx/dfb/app.h	2007-05-09 14:50:21.499646250 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/dfb/app.h	2007-05-07 10:21:18.000000000 +0200
@@ -21,7 +21,7 @@
 // wxApp
 //-----------------------------------------------------------------------------
 
-class WXDLLIMPEXP_CORE wxApp: public wxAppBase
+class WXDLLIMPEXP_CORE wxApp: public wxAppGUIBase
 {
 public:
     wxApp();
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/dfb/evtloop.h wxWidgets-2.8.0-wxapp/include/wx/dfb/evtloop.h
--- wxWidgets-2.8.0/include/wx/dfb/evtloop.h	2007-05-09 14:50:21.499646250 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/dfb/evtloop.h	2007-05-09 13:12:00.000000000 +0200
@@ -20,10 +20,10 @@
 // wxEventLoop
 // ----------------------------------------------------------------------------
 
-class WXDLLIMPEXP_CORE wxEventLoop : public wxEventLoopManual
+class WXDLLIMPEXP_CORE wxGUIEventLoop : public wxEventLoopManual
 {
 public:
-    wxEventLoop();
+    wxGUIEventLoop();
 
     virtual bool Pending() const;
     virtual bool Dispatch();
@@ -50,7 +50,7 @@
 private:
     static wxIDirectFBEventBufferPtr ms_buffer;
 
-    DECLARE_NO_COPY_CLASS(wxEventLoop)
+    DECLARE_NO_COPY_CLASS(wxGUIEventLoop)
 };
 
 #endif // _WX_DFB_EVTLOOP_H_
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/event.h wxWidgets-2.8.0-wxapp/include/wx/event.h
--- wxWidgets-2.8.0/include/wx/event.h	2007-05-09 14:50:21.451643250 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/event.h	2007-05-07 16:02:22.000000000 +0200
@@ -2065,6 +2065,8 @@
     DECLARE_DYNAMIC_CLASS_NO_ASSIGN(wxContextMenuEvent)
 };
 
+#endif // wxUSE_GUI
+
 // Idle event
 /*
  wxEVT_IDLE
@@ -2109,8 +2111,10 @@
     // Returns the idle event mode
     static wxIdleMode GetMode() { return sm_idleMode; }
 
+#if wxUSE_GUI
     // Can we send an idle event?
     static bool CanSend(wxWindow* win);
+#endif
 
 protected:
     bool m_requestMore;
@@ -2120,8 +2124,6 @@
     DECLARE_DYNAMIC_CLASS_NO_ASSIGN(wxIdleEvent)
 };
 
-#endif // wxUSE_GUI
-
 /* TODO
  wxEVT_MOUSE_CAPTURE_CHANGED,
  wxEVT_SETTING_CHANGED, // WM_WININICHANGE (NT) / WM_SETTINGCHANGE (Win95)
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/evtloop.h wxWidgets-2.8.0-wxapp/include/wx/evtloop.h
--- wxWidgets-2.8.0/include/wx/evtloop.h	2007-05-09 14:50:21.475644750 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/evtloop.h	2007-05-09 12:06:04.000000000 +0200
@@ -17,7 +17,7 @@
 class WXDLLEXPORT wxEventLoop;
 
 // ----------------------------------------------------------------------------
-// wxEventLoop: a GUI event loop
+// wxEventLoopBase: interface for wxEventLoop
 // ----------------------------------------------------------------------------
 
 class WXDLLEXPORT wxEventLoopBase
@@ -53,20 +53,23 @@
     // spawned a nested (e.g. modal) event loop, this would return false
     bool IsRunning() const;
 
+    // implement this to wake up the loop: usually done by posting a dummy event
+    // to it (can be called from non main thread)
+    virtual void WakeUp() = 0;
 protected:
     // this function should be called before the event loop terminates, whether
     // this happens normally (because of Exit() call) or abnormally (because of
     // an exception thrown from inside the loop)
     virtual void OnExit() { }
 
-
     // the pointer to currently active loop
+    // this has to be base class 
     static wxEventLoop *ms_activeLoop;
 
     DECLARE_NO_COPY_CLASS(wxEventLoopBase)
 };
 
-#if defined(__WXMSW__) || defined(__WXMAC__) || defined(__WXDFB__)
+#if defined(__WXMSW__) || defined(__WXMAC__) || defined(__WXDFB__) || defined(__UNIX__)
 
 // this class can be used to implement a standard event loop logic using
 // Pending() and Dispatch()
@@ -86,10 +89,6 @@
     virtual void Exit(int rc = 0);
 
 protected:
-    // implement this to wake up the loop: usually done by posting a dummy event
-    // to it (called from Exit())
-    virtual void WakeUp() = 0;
-
     // may be overridden to perform some action at the start of each new event
     // loop iteration
     virtual void OnNextIteration() { }
@@ -117,32 +116,51 @@
     #include "wx/mac/evtloop.h"
 #elif defined(__WXDFB__)
     #include "wx/dfb/evtloop.h"
+#elif defined(__UNIX__) && !wxUSE_GUI
+    #include "wx/unix/evtloop.h"
 #else // other platform
 
 class WXDLLEXPORT wxEventLoopImpl;
 
-class WXDLLEXPORT wxEventLoop : public wxEventLoopBase
+class WXDLLEXPORT wxGUIEventLoop : public wxEventLoopBase
 {
 public:
-    wxEventLoop() { m_impl = NULL; }
-    virtual ~wxEventLoop();
+    wxGUIEventLoop() { m_impl = NULL; }
+    virtual ~wxGUIEventLoop();
 
     virtual int Run();
     virtual void Exit(int rc = 0);
     virtual bool Pending() const;
     virtual bool Dispatch();
+    //this stub is needed for wxAppConsole
+    //but is never called by GUI ports
+    virtual void WakeUp() {};
 
 protected:
     // the pointer to the port specific implementation class
     wxEventLoopImpl *m_impl;
 
-    DECLARE_NO_COPY_CLASS(wxEventLoop)
+    DECLARE_NO_COPY_CLASS(wxGUIEventLoop)
 };
 
 #endif // platforms
 
+// cannot use typedef because VC gives linking errors from
+// wxEventLoopBase::GetActive()
+#if wxUSE_GUI
+class wxEventLoop : public wxGUIEventLoop 
+#else
+class wxEventLoop : public wxConsoleEventLoop 
+#endif
+{
+public:
+    wxEventLoop() {};
+    ~wxEventLoop() {};
+};
+
 inline bool wxEventLoopBase::IsRunning() const { return GetActive() == this; }
 
+#if wxUSE_GUI
 // ----------------------------------------------------------------------------
 // wxModalEventLoop
 // ----------------------------------------------------------------------------
@@ -151,7 +169,7 @@
 // implement modality, we will surely need platform-specific implementations
 // too, this generic implementation is here only temporarily to see how it
 // works
-class WXDLLEXPORT wxModalEventLoop : public wxEventLoop
+class WXDLLEXPORT wxModalEventLoop : public wxGUIEventLoop
 {
 public:
     wxModalEventLoop(wxWindow *winModal)
@@ -165,13 +183,18 @@
         delete m_windowDisabler;
         m_windowDisabler = NULL;
 
-        wxEventLoop::OnExit();
+        wxGUIEventLoop::OnExit();
     }
 
 private:
     wxWindowDisabler *m_windowDisabler;
 };
 
+//All GUI programs use GUI version of event loop
+#else
+
+#endif //wxUSE_GUI
+
 // ----------------------------------------------------------------------------
 // wxEventLoopActivator: helper class for wxEventLoop implementations
 // ----------------------------------------------------------------------------
@@ -184,14 +207,14 @@
 public:
     wxEventLoopActivator(wxEventLoop *evtLoop)
     {
-        m_evtLoopOld = wxEventLoop::GetActive();
-        wxEventLoop::SetActive(evtLoop);
+        m_evtLoopOld = wxEventLoopBase::GetActive();
+        wxEventLoopBase::SetActive(evtLoop);
     }
 
     ~wxEventLoopActivator()
     {
         // restore the previously active event loop
-        wxEventLoop::SetActive(m_evtLoopOld);
+        wxEventLoopBase::SetActive(m_evtLoopOld);
     }
 
 private:
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/gtk/app.h wxWidgets-2.8.0-wxapp/include/wx/gtk/app.h
--- wxWidgets-2.8.0/include/wx/gtk/app.h	2007-05-09 14:50:21.519647500 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/gtk/app.h	2007-05-07 10:21:38.000000000 +0200
@@ -22,7 +22,7 @@
 // wxApp
 //-----------------------------------------------------------------------------
 
-class WXDLLIMPEXP_CORE wxApp: public wxAppBase
+class WXDLLIMPEXP_CORE wxApp: public wxAppGUIBase
 {
 public:
     wxApp();
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/gtk1/app.h wxWidgets-2.8.0-wxapp/include/wx/gtk1/app.h
--- wxWidgets-2.8.0/include/wx/gtk1/app.h	2007-05-09 14:50:21.519647500 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/gtk1/app.h	2007-05-07 10:21:02.000000000 +0200
@@ -25,7 +25,7 @@
 // wxApp
 //-----------------------------------------------------------------------------
 
-class WXDLLIMPEXP_CORE wxApp: public wxAppBase
+class WXDLLIMPEXP_CORE wxApp: public wxAppGUIBase
 {
 public:
     wxApp();
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/mac/carbon/app.h wxWidgets-2.8.0-wxapp/include/wx/mac/carbon/app.h
--- wxWidgets-2.8.0/include/wx/mac/carbon/app.h	2007-05-09 14:50:21.539648750 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/mac/carbon/app.h	2007-05-07 10:21:10.000000000 +0200
@@ -35,7 +35,7 @@
 
 // Represents the application. Derive OnInit and declare
 // a new App object to start application
-class WXDLLEXPORT wxApp: public wxAppBase
+class WXDLLEXPORT wxApp: public wxAppGUIBase
 {
     DECLARE_DYNAMIC_CLASS(wxApp)
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/mac/carbon/evtloop.h wxWidgets-2.8.0-wxapp/include/wx/mac/carbon/evtloop.h
--- wxWidgets-2.8.0/include/wx/mac/carbon/evtloop.h	2007-05-09 14:50:21.539648750 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/mac/carbon/evtloop.h	2007-05-09 13:10:50.000000000 +0200
@@ -29,10 +29,10 @@
 
 #if wxMAC_USE_RUN_APP_EVENT_LOOP
 
-class WXDLLEXPORT wxEventLoop : public wxEventLoopBase
+class WXDLLEXPORT wxGUIEventLoop : public wxEventLoopBase
 {
 public:
-    wxEventLoop() { m_exitcode = 0; }
+    wxGUIEventLoop() { m_exitcode = 0; }
 
     // implement base class pure virtuals
     virtual int Run();
@@ -46,7 +46,7 @@
 
 #else // manual event loop
 
-class WXDLLEXPORT wxEventLoop : public wxEventLoopManual
+class WXDLLEXPORT wxGUIEventLoop : public wxEventLoopManual
 {
 public:
     wxEventLoop() { }
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/mgl/app.h wxWidgets-2.8.0-wxapp/include/wx/mgl/app.h
--- wxWidgets-2.8.0/include/wx/mgl/app.h	2007-05-09 14:50:21.547649250 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/mgl/app.h	2007-05-07 10:21:34.000000000 +0200
@@ -26,7 +26,7 @@
 // wxApp
 //-----------------------------------------------------------------------------
 
-class WXDLLEXPORT wxApp: public wxAppBase
+class WXDLLEXPORT wxApp: public wxAppGUIBase
 {
 public:
     wxApp();
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/motif/app.h wxWidgets-2.8.0-wxapp/include/wx/motif/app.h
--- wxWidgets-2.8.0/include/wx/motif/app.h	2007-05-09 14:50:21.867669250 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/motif/app.h	2007-05-09 10:06:20.000000000 +0200
@@ -18,6 +18,7 @@
 
 #include "wx/event.h"
 #include "wx/hashmap.h"
+#include "wx/evtloop.h"
 
 // ----------------------------------------------------------------------------
 // forward declarations
@@ -28,17 +29,16 @@
 class WXDLLEXPORT wxApp;
 class WXDLLEXPORT wxKeyEvent;
 class WXDLLEXPORT wxLog;
-class WXDLLEXPORT wxEventLoop;
 class WXDLLEXPORT wxXVisualInfo;
 class WXDLLEXPORT wxPerDisplayData;
 
 // ----------------------------------------------------------------------------
-// the wxApp class for Motif - see wxAppBase for more details
+// the wxApp class for Motif - see wxAppGUIBase for more details
 // ----------------------------------------------------------------------------
 
 WX_DECLARE_VOIDPTR_HASH_MAP( wxPerDisplayData*, wxPerDisplayDataMap );
 
-class WXDLLEXPORT wxApp : public wxAppBase
+class WXDLLEXPORT wxApp : public wxAppGUIBase
 {
     DECLARE_DYNAMIC_CLASS(wxApp)
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/motif/dialog.h wxWidgets-2.8.0-wxapp/include/wx/motif/dialog.h
--- wxWidgets-2.8.0/include/wx/motif/dialog.h	2007-05-09 14:50:21.867669250 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/motif/dialog.h	2007-05-09 10:06:30.000000000 +0200
@@ -12,7 +12,7 @@
 #ifndef _WX_DIALOG_H_
 #define _WX_DIALOG_H_
 
-class WXDLLEXPORT wxEventLoop;
+#include "wx/evtloop.h"
 
 // Dialog boxes
 class WXDLLEXPORT wxDialog : public wxDialogBase
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/motif/private.h wxWidgets-2.8.0-wxapp/include/wx/motif/private.h
--- wxWidgets-2.8.0/include/wx/motif/private.h	2007-05-09 14:50:21.891670750 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/motif/private.h	2007-05-09 12:57:12.000000000 +0200
@@ -14,6 +14,7 @@
 
 #include "wx/defs.h"
 #include "X11/Xlib.h"
+#include "wx/evtloop.h"
 
 class WXDLLEXPORT wxFont;
 class WXDLLEXPORT wxWindow;
@@ -185,11 +186,9 @@
 // event-related functions
 // ----------------------------------------------------------------------------
 
-class wxEventLoop;
-
 // executes one main loop iteration (implemented in src/motif/evtloop.cpp)
 // returns true if the loop should be exited
-bool wxDoEventLoopIteration( wxEventLoop& evtLoop );
+bool wxDoEventLoopIteration( wxGUIEventLoop& evtLoop );
 
 // Consume all events until no more left
 void wxFlushEvents(WXDisplay* display);
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/msw/app.h wxWidgets-2.8.0-wxapp/include/wx/msw/app.h
--- wxWidgets-2.8.0/include/wx/msw/app.h	2007-05-09 14:50:21.959675000 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/msw/app.h	2007-05-07 10:21:20.000000000 +0200
@@ -23,7 +23,7 @@
 
 // Represents the application. Derive OnInit and declare
 // a new App object to start application
-class WXDLLEXPORT wxApp : public wxAppBase
+class WXDLLEXPORT wxApp : public wxAppGUIBase
 {
     DECLARE_DYNAMIC_CLASS(wxApp)
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/msw/apptrait.h wxWidgets-2.8.0-wxapp/include/wx/msw/apptrait.h
--- wxWidgets-2.8.0/include/wx/msw/apptrait.h	2007-05-09 14:50:21.963675250 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/msw/apptrait.h	2007-05-08 10:09:40.000000000 +0200
@@ -19,6 +19,7 @@
 class WXDLLIMPEXP_BASE wxConsoleAppTraits : public wxConsoleAppTraitsBase
 {
 public:
+    virtual wxEventLoop* CreateEventLoop();
     virtual void *BeforeChildWaitLoop();
     virtual void AlwaysYield();
     virtual void AfterChildWaitLoop(void *data);
@@ -34,6 +35,7 @@
 class WXDLLIMPEXP_CORE wxGUIAppTraits : public wxGUIAppTraitsBase
 {
 public:
+    virtual wxEventLoop* CreateEventLoop();
     virtual void *BeforeChildWaitLoop();
     virtual void AlwaysYield();
     virtual void AfterChildWaitLoop(void *data);
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/msw/evtloop.h wxWidgets-2.8.0-wxapp/include/wx/msw/evtloop.h
--- wxWidgets-2.8.0/include/wx/msw/evtloop.h	2007-05-09 14:50:21.979676250 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/msw/evtloop.h	2007-05-09 11:47:40.000000000 +0200
@@ -12,31 +12,47 @@
 #ifndef _WX_MSW_EVTLOOP_H_
 #define _WX_MSW_EVTLOOP_H_
 
+#if wxUSE_GUI
 #include "wx/window.h"
+#endif
 
 // ----------------------------------------------------------------------------
 // wxEventLoop
 // ----------------------------------------------------------------------------
 
-class WXDLLEXPORT wxEventLoop : public wxEventLoopManual
+class WXDLLEXPORT wxMSWEventLoopBase : public wxEventLoopManual
 {
 public:
-    wxEventLoop();
+    wxMSWEventLoopBase();
 
     // implement base class pure virtuals
     virtual bool Pending() const;
-    virtual bool Dispatch();
+    virtual bool Dispatch() = 0;
 
     // MSW-specific methods
     // --------------------
+    
+    // default implementation does not preprocess message
+    virtual bool PreProcessMessage(WXMSG *WXUNUSED(msg)) { return false; };
+
+    // process a single message
+    virtual void ProcessMessage(WXMSG *msg);
+protected:
+    //get next messgae from queue. Return false if we got WM_QUIT or message 
+    //fetch failed
+    bool GetNextMessage(WXMSG *msg);
+};
 
+#if wxUSE_GUI
+
+class WXDLLEXPORT wxGUIEventLoop : public wxMSWEventLoopBase 
+{
+public:
+    wxGUIEventLoop() {};
     // preprocess a message, return true if processed (i.e. no further
     // dispatching required)
     virtual bool PreProcessMessage(WXMSG *msg);
 
-    // process a single message
-    virtual void ProcessMessage(WXMSG *msg);
-
     // set the critical window: this is the window such that all the events
     // except those to this window (and its children) stop to be processed
     // (typical examples: assert or crash report dialog)
@@ -51,8 +67,9 @@
     {
         return !ms_winCritical || IsChildOfCriticalWindow(win);
     }
-
-protected:
+    // override/implement base class virtuals
+    virtual bool Dispatch();
+private:
     // override/implement base class virtuals
     virtual void WakeUp();
     virtual void OnNextIteration();
@@ -66,4 +83,17 @@
     static wxWindowMSW *ms_winCritical;
 };
 
+#else
+class WXDLLEXPORT wxConsoleEventLoop : public wxMSWEventLoopBase 
+{
+public:
+    wxConsoleEventLoop() {};
+    // override/implement base class virtuals
+    virtual bool Dispatch();
+    virtual void WakeUp();
+private:
+    virtual void OnNextIteration();
+};
+#endif //wxUSE_GUI
+
 #endif // _WX_MSW_EVTLOOP_H_
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/os2/app.h wxWidgets-2.8.0-wxapp/include/wx/os2/app.h
--- wxWidgets-2.8.0/include/wx/os2/app.h	2007-05-09 14:50:21.983676500 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/os2/app.h	2007-05-07 10:21:30.000000000 +0200
@@ -61,7 +61,7 @@
 
 // Represents the application. Derive OnInit and declare
 // a new App object to start application
-class WXDLLEXPORT wxApp : public wxAppBase
+class WXDLLEXPORT wxApp : public wxAppGUIBase
 {
     DECLARE_DYNAMIC_CLASS(wxApp)
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/palmos/app.h wxWidgets-2.8.0-wxapp/include/wx/palmos/app.h
--- wxWidgets-2.8.0/include/wx/palmos/app.h	2007-05-09 14:50:21.987676750 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/palmos/app.h	2007-05-07 10:21:12.000000000 +0200
@@ -23,7 +23,7 @@
 
 // Represents the application. Derive OnInit and declare
 // a new App object to start application
-class WXDLLEXPORT wxApp : public wxAppBase
+class WXDLLEXPORT wxApp : public wxAppGUIBase
 {
     DECLARE_DYNAMIC_CLASS(wxApp)
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/palmos/evtloop.h wxWidgets-2.8.0-wxapp/include/wx/palmos/evtloop.h
--- wxWidgets-2.8.0/include/wx/palmos/evtloop.h	2007-05-09 14:50:22.023679000 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/palmos/evtloop.h	2007-05-09 13:14:54.000000000 +0200
@@ -16,10 +16,10 @@
 // wxEventLoop
 // ----------------------------------------------------------------------------
 
-class WXDLLEXPORT wxEventLoop : public wxEventLoopBase
+class WXDLLEXPORT wxGUIEventLoop : public wxEventLoopBase
 {
 public:
-    wxEventLoop();
+    wxGUIEventLoop();
 
     // implement base class pure virtuals
     virtual int Run();
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/private/fdiodispatcher.h wxWidgets-2.8.0-wxapp/include/wx/private/fdiodispatcher.h
--- wxWidgets-2.8.0/include/wx/private/fdiodispatcher.h	1970-01-01 01:00:00.000000000 +0100
+++ wxWidgets-2.8.0-wxapp/include/wx/private/fdiodispatcher.h	2007-04-20 14:30:52.000000000 +0200
@@ -0,0 +1,70 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        wx/private/selectdispatcher.h
+// Purpose:     wxSelectDispatcher class
+// Authors:     Lukasz Michalski
+// Modified by:
+// Created:     December 2006
+// Copyright:   (c) Lukasz Michalski
+// RCS-ID:      $Id: selectdispatcher.h,v 1.3 2007/03/19 02:27:34 VZ Exp $
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_PRIVATE_FDIODISPATCHER_H_
+#define _WX_PRIVATE_FDIODISPATCHER_H_
+
+#include "wx/defs.h"
+
+#include "wx/hashmap.h"
+
+
+// handler used to process events on descriptors
+class wxFDIOHandler
+{
+public:
+    // called when descriptor is available for non-blocking read
+    virtual void OnReadWaiting() = 0;
+
+    // called when descriptor is available  for non-blocking write
+    virtual void OnWriteWaiting() = 0;
+
+    // called when there is exception on descriptor
+    virtual void OnExceptionWaiting() = 0;
+
+    // virtual dtor for the base class
+    virtual ~wxFDIOHandler() { }
+};
+
+// those flags describes sets where descriptor should be added
+typedef enum {
+    wxFDIO_INPUT = 1,
+    wxFDIO_OUTPUT = 2,
+    wxFDIO_EXCEPTION = 4,
+    wxFDIO_ALL = wxFDIO_INPUT | wxFDIO_OUTPUT | wxFDIO_EXCEPTION
+} wxFDIODispatcherEntryFlags;
+
+// interface for SelectDispatcher and EpollDispatcher
+class WXDLLIMPEXP_CORE wxFDIODispatcher
+{
+public:
+    static const int FDIO_TIMEOUT_INFINITE = -1;
+
+    // register descriptor in sets.
+    virtual void RegisterFD(int fd, wxFDIOHandler* handler, int flags) = 0;
+
+    //modify descriptor flags or handler
+    virtual void ModifyFD(int fd, wxFDIOHandler* handler, int flags) = 0;
+
+    // unregister descriptor from sets and return handler for cleanup
+    virtual wxFDIOHandler* UnregisterFD(int fd, int flags) = 0;
+
+    // return handler for descriptor or null if fd is not registered
+    virtual wxFDIOHandler* FindHandler(int fd) = 0;
+
+    // calls select on registered descriptors
+    virtual void RunLoop(int timeout) = 0;
+
+    virtual ~wxFDIODispatcher() { };
+};
+
+
+#endif // _WX_PRIVATE_FDIODISPATCHER_H_
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/private/gsocketiohandler.h wxWidgets-2.8.0-wxapp/include/wx/private/gsocketiohandler.h
--- wxWidgets-2.8.0/include/wx/private/gsocketiohandler.h	2007-05-09 14:50:22.027679250 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/private/gsocketiohandler.h	2007-04-20 14:30:52.000000000 +0200
@@ -25,13 +25,13 @@
 public:
     wxGSocketIOHandler(GSocket* socket);
     int GetFlags() const;
-    void RemoveFlag(wxSelectDispatcherEntryFlags flag);
-    void AddFlag(wxSelectDispatcherEntryFlags flag);
+    void RemoveFlag(wxFDIODispatcherEntryFlags flag);
+    void AddFlag(wxFDIODispatcherEntryFlags flag);
 
 private:
-    virtual void OnReadWaiting(int fd);
-    virtual void OnWriteWaiting(int fd);
-    virtual void OnExceptionWaiting(int fd);
+    virtual void OnReadWaiting();
+    virtual void OnWriteWaiting();
+    virtual void OnExceptionWaiting();
 
     GSocket* m_socket;
     int m_flags;
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/private/selectdispatcher.h wxWidgets-2.8.0-wxapp/include/wx/private/selectdispatcher.h
--- wxWidgets-2.8.0/include/wx/private/selectdispatcher.h	2007-05-09 14:50:22.027679250 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/private/selectdispatcher.h	2007-04-20 13:12:02.000000000 +0200
@@ -13,36 +13,9 @@
 #define _WX_PRIVATE_SELECTDISPATCHER_H_
 
 #include "wx/defs.h"
-
 #include "wx/hashmap.h"
 
-static const int wxSELECT_TIMEOUT_INFINITE = -1;
-
-// handler used to process events on descriptors
-class wxFDIOHandler
-{
-public:
-    // called when descriptor is available for non-blocking read
-    virtual void OnReadWaiting(int fd) = 0;
-
-    // called when descriptor is available  for non-blocking write
-    virtual void OnWriteWaiting(int fd) = 0;
-
-    // called when there is exception on descriptor
-    virtual void OnExceptionWaiting(int fd) = 0;
-
-    // virtual dtor for the base class
-    virtual ~wxFDIOHandler() { }
-};
-
-// those flags describes sets where descriptor should be added
-enum wxSelectDispatcherEntryFlags
-{
-    wxSelectInput = 1,
-    wxSelectOutput = 2,
-    wxSelectException = 4,
-    wxSelectAll = wxSelectInput | wxSelectOutput | wxSelectException
-};
+#include "wx/private/fdiodispatcher.h"
 
 WX_DECLARE_HASH_MAP(
   int,
@@ -52,7 +25,7 @@
   wxFDIOHandlerMap
 );
 
-class WXDLLIMPEXP_CORE wxSelectDispatcher
+class WXDLLIMPEXP_CORE wxSelectDispatcher : public wxFDIODispatcher
 {
 public:
     // returns instance of the table
@@ -62,17 +35,11 @@
     {
     }
 
-    // register descriptor in sets.
-    void RegisterFD(int fd, wxFDIOHandler* handler, int flags = wxSelectAll);
-
-    // unregister descriptor from sets and return handler for cleanup
-    wxFDIOHandler* UnregisterFD(int fd, int flags = wxSelectAll);
-
-    // return handler for descriptor or null if fd is not registered
-    wxFDIOHandler* FindHandler(int fd);
-
-    // calls select on registered descriptors and
-    void RunLoop(int timeout = wxSELECT_TIMEOUT_INFINITE);
+    virtual void RegisterFD(int fd, wxFDIOHandler* handler, int flags = wxFDIO_ALL);
+    virtual void ModifyFD(int fd, wxFDIOHandler* handler, int flags = wxFDIO_ALL);
+    virtual wxFDIOHandler* UnregisterFD(int fd, int flags = wxFDIO_ALL);
+    virtual wxFDIOHandler* FindHandler(int fd);
+    virtual void RunLoop(int timeout = FDIO_TIMEOUT_INFINITE);
 
 protected:
     wxSelectDispatcher() { m_maxFD = -1; }
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/univ/dialog.h wxWidgets-2.8.0-wxapp/include/wx/univ/dialog.h
--- wxWidgets-2.8.0/include/wx/univ/dialog.h	2007-05-09 14:50:22.047680500 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/univ/dialog.h	2007-05-09 09:59:54.000000000 +0200
@@ -11,9 +11,9 @@
 #ifndef _WX_UNIV_DIALOG_H_
 #define _WX_UNIV_DIALOG_H_
 
+#include "wx/evtloop.h"
+
 extern WXDLLEXPORT_DATA(const wxChar) wxDialogNameStr[];
-class WXDLLEXPORT wxWindowDisabler;
-class WXDLLEXPORT wxEventLoop;
 
 // Dialog boxes
 class WXDLLEXPORT wxDialog : public wxDialogBase
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/univ/window.h wxWidgets-2.8.0-wxapp/include/wx/univ/window.h
--- wxWidgets-2.8.0/include/wx/univ/window.h	2007-05-09 14:50:22.091683250 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/univ/window.h	2007-05-09 10:00:16.000000000 +0200
@@ -15,9 +15,9 @@
 #define _WX_UNIV_WINDOW_H_
 
 #include "wx/bitmap.h"      // for m_bitmapBg
+#include "wx/evtloop.h"
 
 class WXDLLEXPORT wxControlRenderer;
-class WXDLLEXPORT wxEventLoop;
 
 #if wxUSE_MENUS
     class WXDLLEXPORT wxMenu;
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/unix/app.h wxWidgets-2.8.0-wxapp/include/wx/unix/app.h
--- wxWidgets-2.8.0/include/wx/unix/app.h	1970-01-01 01:00:00.000000000 +0100
+++ wxWidgets-2.8.0-wxapp/include/wx/unix/app.h	2007-05-09 17:18:56.757089000 +0200
@@ -0,0 +1,41 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        wx/unix/app.h
+// Purpose:     wxAppConsole with wxMainLoop implementation
+// Author:      Lukasz Michalski
+// Modified by:
+// Created:     28/01/2005
+// RCS-ID:      $Id: zork-mainloop-0.19.patch,v 1.1 2006/05/30 09:14:25 zork Exp $
+// Copyright:   (c) Lukasz Michalski
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+extern "C" {
+#include <signal.h>
+#include <stdio.h>
+#include <stdlib.h>
+};
+
+
+//flag for timer set in handler
+
+//Main application class
+class WXDLLIMPEXP_BASE wxUnixAppConsole : public wxAppConsole {
+    friend class GSocketGUIFunctionsTableBase;
+  public:
+    //Start program execution by entering main loop and waiting for events
+    virtual bool Initialize(int& argc, wxChar** argv);
+
+    // Some unix specific synchronous signal handler code
+    typedef void (*SignalHandler)(int);
+    // Can reset by setting handler to SIG_DFL or SIG_IGN
+    void SetSignalHandler(int signal, SignalHandler handler);
+    //check if any unix singnals arrived and cal handlers for them
+    void CheckSignal();
+  private:
+    // General unix signal handling code
+    sigset_t m_signalCatched;
+    WX_DECLARE_HASH_MAP(int, SignalHandler, wxIntegerHash, wxIntegerEqual, SignalHandlerHash );
+    SignalHandlerHash m_signalHandlerHash;
+
+    static void HandleSignal(int signal);
+};
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/unix/apptrait.h wxWidgets-2.8.0-wxapp/include/wx/unix/apptrait.h
--- wxWidgets-2.8.0/include/wx/unix/apptrait.h	2007-05-09 14:50:22.091683250 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/unix/apptrait.h	2007-05-09 10:00:48.000000000 +0200
@@ -19,6 +19,7 @@
 class WXDLLEXPORT wxConsoleAppTraits : public wxConsoleAppTraitsBase
 {
 public:
+    virtual wxEventLoop* CreateEventLoop();
     virtual bool CreateEndProcessPipe(wxExecuteData& execData);
     virtual bool IsWriteFDOfEndProcessPipe(wxExecuteData& execData, int fd);
     virtual void DetachWriteFDOfEndProcessPipe(wxExecuteData& execData);
@@ -33,6 +34,7 @@
 class WXDLLEXPORT wxGUIAppTraits : public wxGUIAppTraitsBase
 {
 public:
+    virtual wxEventLoop* CreateEventLoop();
     virtual bool CreateEndProcessPipe(wxExecuteData& execData);
     virtual bool IsWriteFDOfEndProcessPipe(wxExecuteData& execData, int fd);
     virtual void DetachWriteFDOfEndProcessPipe(wxExecuteData& execData);
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/unix/evtloop.h wxWidgets-2.8.0-wxapp/include/wx/unix/evtloop.h
--- wxWidgets-2.8.0/include/wx/unix/evtloop.h	1970-01-01 01:00:00.000000000 +0100
+++ wxWidgets-2.8.0-wxapp/include/wx/unix/evtloop.h	2007-05-09 09:41:36.000000000 +0200
@@ -0,0 +1,67 @@
+///////////////////////////////////////////////////////////////////////////////
+// Name:        wx/unix/evtloop.h
+// Purpose:     declares wxEventLoop class
+// Author:      Lukasz Michalski (lm@zork.pl)
+// Created:     2007-05-07
+// RCS-ID:      $Id: evtloop.h,v 1.4 2006/12/18 17:23:59 VS Exp $
+// Copyright:   (c) 2007 Lukasz Michalski
+// Licence:     wxWindows licence
+///////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_UNIX_EVTLOOP_H_
+#define _WX_UNIX_EVTLOOP_H_
+
+#include "wx/private/fdiodispatcher.h"
+#include "wx/unix/private/timer.h"
+
+// ----------------------------------------------------------------------------
+// wxEventLoop
+// ----------------------------------------------------------------------------
+
+class WXDLLIMPEXP_BASE wxConsoleEventLoop : public wxEventLoopManual
+{
+public:
+    wxConsoleEventLoop();
+
+    virtual bool Pending() const;
+    virtual bool Dispatch();
+    virtual void WakeUp();
+
+    bool Init();
+
+protected:
+    virtual void OnNextIteration();
+
+private:
+    //pipe for wake up messages.
+    //when child thread wants to wake up main thread it writes one byte to PipeIOHander fd.
+    //Main thread goes out of select() [or epoll_wait()] and start processing events.
+    class PipeIOHandler : public wxFDIOHandler 
+    {
+    public:
+        PipeIOHandler();
+        //initialize pipe descriptors
+        bool Init();
+        //this method can be called from different threads
+        //do not put wxLog* here: it will cause deadlocks on trace critical secions
+        void WakeUp() {
+            int size = write(m_wakeupPipe[1],"s",1);
+            if(size != 1)
+                perror("write");
+        };
+        int getReadFd() { return m_wakeupPipe[0]; };
+    private:
+        virtual void OnReadWaiting();
+        virtual void OnWriteWaiting() {};
+        virtual void OnExceptionWaiting() {};
+        int m_wakeupPipe[2];
+    };
+
+    PipeIOHandler m_wakeupPipe;
+    wxFDIODispatcher* m_FdDispatcher;
+
+    bool m_usingEpoll;
+    DECLARE_NO_COPY_CLASS(wxConsoleEventLoop)
+};
+
+#endif // _WX_UNIX_EVTLOOP_H_
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/unix/private/epolldispatcher.h wxWidgets-2.8.0-wxapp/include/wx/unix/private/epolldispatcher.h
--- wxWidgets-2.8.0/include/wx/unix/private/epolldispatcher.h	1970-01-01 01:00:00.000000000 +0100
+++ wxWidgets-2.8.0-wxapp/include/wx/unix/private/epolldispatcher.h	2007-05-07 14:50:20.000000000 +0200
@@ -0,0 +1,57 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        wx/private/epolldispatcher.h
+// Purpose:     wxEpollDispatcher class
+// Authors:     Lukasz Michalski
+// Modified by:
+// Created:     April 2007
+// Copyright:   (c) Lukasz Michalski
+// RCS-ID:      $Id: epolldispatcher.h,v 1.3 2007/03/19 02:27:34 VZ Exp $
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_PRIVATE_EPOLLDISPATCHER_H_
+#define _WX_PRIVATE_EPOLLDISPATCHER_H_
+
+#include "wx/defs.h"
+#include "wx/module.h"
+#include "wx/private/fdiodispatcher.h"
+
+#ifdef HAVE_SYS_EPOLL_H
+
+#include <sys/epoll.h>
+
+class WXDLLIMPEXP_CORE wxEpollDispatcher : public wxFDIODispatcher
+{
+public:
+    static wxEpollDispatcher& Get();
+    wxEpollDispatcher() { m_epollDescriptor = -1; }
+    bool Init();
+    virtual ~wxEpollDispatcher() {}
+    virtual void RegisterFD(int fd, wxFDIOHandler* handler, int flags = wxFDIO_ALL);
+    virtual void ModifyFD(int fd, wxFDIOHandler* handler, int flags = wxFDIO_ALL);
+    //UnregisterFD and FindHandler always returns NULL in this dispatcher
+    //because there is no way to fetch user data passed to epoll_ctl sys call
+    virtual wxFDIOHandler* UnregisterFD(int fd, int flags = wxFDIO_ALL);
+    virtual wxFDIOHandler* FindHandler(int fd);
+    virtual void RunLoop(int timeout = FDIO_TIMEOUT_INFINITE);
+
+private:
+    int m_epollDescriptor;
+    static wxEpollDispatcher *ms_instance;
+
+    friend class wxEpollDispatcherModule;
+};
+
+class wxEpollDispatcherModule : public wxModule 
+{
+public:
+    wxEpollDispatcherModule(wxEpollDispatcher* pInstance = NULL) { wxEpollDispatcher::ms_instance = pInstance; }
+private:
+    bool OnInit() { return true; }
+    void OnExit() { wxDELETE(wxEpollDispatcher::ms_instance); }
+    DECLARE_DYNAMIC_CLASS(wxEpollDispatcherModule)
+};
+
+#endif // HAVE_SYS_EPOLL_H
+
+#endif // _WX_PRIVATE_SOCKETEVTDISPATCH_H_
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/include/wx/x11/app.h wxWidgets-2.8.0-wxapp/include/wx/x11/app.h
--- wxWidgets-2.8.0/include/wx/x11/app.h	2007-05-09 14:50:22.103684000 +0200
+++ wxWidgets-2.8.0-wxapp/include/wx/x11/app.h	2007-05-07 10:21:26.000000000 +0200
@@ -31,10 +31,10 @@
 class WXDLLEXPORT wxXVisualInfo;
 
 // ----------------------------------------------------------------------------
-// the wxApp class for wxX11 - see wxAppBase for more details
+// the wxApp class for wxX11 - see wxAppGUIBase for more details
 // ----------------------------------------------------------------------------
 
-class WXDLLEXPORT wxApp : public wxAppBase
+class WXDLLEXPORT wxApp : public wxAppGUIBase
 {
 public:
     wxApp();
Files wxWidgets-2.8.0/samples/internat/cs/internat.mo and wxWidgets-2.8.0-wxapp/samples/internat/cs/internat.mo differ
Files wxWidgets-2.8.0/samples/internat/de/internat.mo and wxWidgets-2.8.0-wxapp/samples/internat/de/internat.mo differ
Files wxWidgets-2.8.0/samples/internat/fr/internat.mo and wxWidgets-2.8.0-wxapp/samples/internat/fr/internat.mo differ
Files wxWidgets-2.8.0/samples/internat/pl/internat.mo and wxWidgets-2.8.0-wxapp/samples/internat/pl/internat.mo differ
Files wxWidgets-2.8.0/samples/internat/sv/internat.mo and wxWidgets-2.8.0-wxapp/samples/internat/sv/internat.mo differ
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/setup.h.in wxWidgets-2.8.0-wxapp/setup.h.in
--- wxWidgets-2.8.0/setup.h.in	2007-05-09 14:49:57.810165750 +0200
+++ wxWidgets-2.8.0-wxapp/setup.h.in	2007-05-07 10:03:50.000000000 +0200
@@ -1143,6 +1143,9 @@
 /* Define if you have the <sys/select.h> header file.  */
 #undef HAVE_SYS_SELECT_H
 
+/* Define if you have the <sys/epoll.h> header file.  */
+#undef HAVE_SYS_EPOLL_H
+
 /* Define if fdopen is available.  */
 #undef HAVE_FDOPEN
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/cocoa/app.mm wxWidgets-2.8.0-wxapp/src/cocoa/app.mm
--- wxWidgets-2.8.0/src/cocoa/app.mm	2007-05-09 14:50:48.833354500 +0200
+++ wxWidgets-2.8.0-wxapp/src/cocoa/app.mm	2007-05-07 10:17:26.000000000 +0200
@@ -171,7 +171,7 @@
 // ----------------------------------------------------------------------------
 IMPLEMENT_DYNAMIC_CLASS(wxApp, wxEvtHandler)
 BEGIN_EVENT_TABLE(wxApp, wxEvtHandler)
-    EVT_IDLE(wxAppBase::OnIdle)
+    EVT_IDLE(wxAppGUIBase::OnIdle)
 //    EVT_END_SESSION(wxApp::OnEndSession)
 //    EVT_QUERY_END_SESSION(wxApp::OnQueryEndSession)
 END_EVENT_TABLE()
@@ -202,7 +202,7 @@
     // classes being posed as are created.
     wxPoseAsInitializer::InitializePosers();
 
-    return wxAppBase::Initialize(argc, argv);
+    return wxAppGUIBase::Initialize(argc, argv);
 }
 
 void wxApp::CleanUp()
@@ -218,7 +218,7 @@
     [m_cocoaAppDelegate release];
     m_cocoaAppDelegate = NULL;
 
-    wxAppBase::CleanUp();
+    wxAppGUIBase::CleanUp();
 }
 
 // ----------------------------------------------------------------------------
@@ -258,7 +258,7 @@
 bool wxApp::OnInitGui()
 {
     wxAutoNSAutoreleasePool pool;
-    if(!wxAppBase::OnInitGui())
+    if(!wxAppGUIBase::OnInitGui())
         return false;
 
     // Create the app using the sharedApplication method
@@ -283,7 +283,7 @@
 
 bool wxApp::OnInit()
 {
-    if(!wxAppBase::OnInit())
+    if(!wxAppGUIBase::OnInit())
         return false;
 
     return true;
@@ -356,7 +356,7 @@
 void wxApp::OnAssert(const wxChar *file, int line, const wxChar* cond, const wxChar *msg)
 {
     m_isInAssert = true;
-    wxAppBase::OnAssert(file, line, cond, msg);
+    wxAppGUIBase::OnAssert(file, line, cond, msg);
     m_isInAssert = false;
 }
 #endif // __WXDEBUG__
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/cocoa/evtloop.mm wxWidgets-2.8.0-wxapp/src/cocoa/evtloop.mm
--- wxWidgets-2.8.0/src/cocoa/evtloop.mm	2007-05-09 14:50:48.857356000 +0200
+++ wxWidgets-2.8.0-wxapp/src/cocoa/evtloop.mm	2007-05-09 13:15:42.000000000 +0200
@@ -41,24 +41,24 @@
 };
 
 // ========================================================================
-// wxEventLoop
+// wxGUIEventLoop
 // ========================================================================
 
 // ----------------------------------------------------------------------------
-// wxEventLoop running and exiting
+// wxGUIEventLoop running and exiting
 // ----------------------------------------------------------------------------
 
-wxEventLoop::~wxEventLoop()
+wxGUIEventLoop::~wxGUIEventLoop()
 {
     wxASSERT_MSG( !m_impl, _T("should have been deleted in Run()") );
 }
 
-int wxEventLoop::Run()
+int wxGUIEventLoop::Run()
 {
     // event loops are not recursive, you need to create another loop!
     wxCHECK_MSG( !IsRunning(), -1, _T("can't reenter a message loop") );
 
-    wxEventLoopActivator activate(this);
+    wxEventLoopActivator activate(wx_static_cast(wxEventLoop *, this));
 
     m_impl = new wxEventLoopImpl;
 
@@ -73,7 +73,7 @@
     return exitcode;
 }
 
-void wxEventLoop::Exit(int rc)
+void wxGUIEventLoop::Exit(int rc)
 {
     wxCHECK_RET( IsRunning(), _T("can't call Exit() if not running") );
 
@@ -101,7 +101,7 @@
 // wxEventLoop message processing dispatching
 // ----------------------------------------------------------------------------
 
-bool wxEventLoop::Pending() const
+bool wxGUIEventLoop::Pending() const
 {
     // a pointer to the event is returned if there is one, or nil if not
     return [[NSApplication sharedApplication]
@@ -111,7 +111,7 @@
             dequeue: NO];
 }
 
-bool wxEventLoop::Dispatch()
+bool wxGUIEventLoop::Dispatch()
 {
     // This check is required by wxGTK but probably not really for wxCocoa
     // Keep it here to encourage developers to write cross-platform code
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/common/appbase.cpp wxWidgets-2.8.0-wxapp/src/common/appbase.cpp
--- wxWidgets-2.8.0/src/common/appbase.cpp	2007-05-09 14:50:48.965362750 +0200
+++ wxWidgets-2.8.0-wxapp/src/common/appbase.cpp	2007-05-09 10:11:24.000000000 +0200
@@ -39,8 +39,10 @@
 #include "wx/apptrait.h"
 #include "wx/cmdline.h"
 #include "wx/confbase.h"
+#include "wx/evtloop.h"
 #include "wx/filename.h"
 #include "wx/msgout.h"
+#include "wx/ptr_scpd.h"
 #include "wx/tokenzr.h"
 
 #if !defined(__WXMSW__) || defined(__WXMICROWIN__)
@@ -112,6 +114,13 @@
 
 wxAppInitializerFunction wxAppConsole::ms_appInitFn = NULL;
 
+// ----------------------------------------------------------------------------
+// wxEventLoopPtr
+// ----------------------------------------------------------------------------
+
+// this defines wxEventLoopPtr
+wxDEFINE_TIED_SCOPED_PTR_TYPE(wxEventLoop)
+
 // ============================================================================
 // wxAppConsole implementation
 // ============================================================================
@@ -123,6 +132,7 @@
 wxAppConsole::wxAppConsole()
 {
     m_traits = NULL;
+    m_mainLoop = NULL;
 
     ms_appInstance = this;
 
@@ -157,6 +167,13 @@
     argc = argcOrig;
     argv = argvOrig;
 
+#if wxUSE_THREADS
+    wxPendingEventsLocker = new wxCriticalSection;
+#endif
+
+    //create port specific main loop
+    m_mainLoop = CreateMainLoop();
+
 #ifndef __WXPALMOS__
     if ( m_appName.empty() && argv )
     {
@@ -168,8 +185,20 @@
     return true;
 }
 
+wxEventLoop *wxAppConsole::CreateMainLoop()
+{
+    return GetTraits()->CreateEventLoop();
+}
+
 void wxAppConsole::CleanUp()
 {
+    delete wxPendingEvents;
+    wxPendingEvents = NULL;
+
+#if wxUSE_THREADS
+    delete wxPendingEventsLocker;
+    wxPendingEventsLocker = NULL;
+#endif // wxUSE_THREADS
 }
 
 // ----------------------------------------------------------------------------
@@ -206,6 +235,11 @@
     return true;
 }
 
+int wxAppConsole::OnRun() 
+{
+    return MainLoop();
+};
+
 int wxAppConsole::OnExit()
 {
 #if wxUSE_CONFIG
@@ -219,7 +253,10 @@
 
 void wxAppConsole::Exit()
 {
-    exit(-1);
+    if (m_mainLoop != NULL)
+        ExitMainLoop();
+    else
+        exit(-1);
 }
 
 // ----------------------------------------------------------------------------
@@ -248,21 +285,67 @@
 // event processing
 // ----------------------------------------------------------------------------
 
-void wxAppConsole::ProcessPendingEvents()
+int wxAppConsole::MainLoop()
 {
-#if wxUSE_THREADS
-    if ( !wxPendingEventsLocker )
-        return;
-#endif
+    
+    wxEventLoopTiedPtr mainLoop(&m_mainLoop, CreateMainLoop());
+
+    if (mainLoop.get() == NULL)
+        return 0; //TODO: EXIT_SUCCESS here?
+    return m_mainLoop->Run();
+}
+
+void wxAppConsole::ExitMainLoop()
+{
+    // we should exit from the main event loop, not just any currently active
+    // (e.g. modal dialog) event loop
+    if ( m_mainLoop && m_mainLoop->IsRunning() )
+    {
+        m_mainLoop->Exit(0);
+    }
+}
+
+bool wxAppConsole::Pending()
+{
+    // use the currently active message loop here, not m_mainLoop, because if
+    // we're showing a modal dialog (with its own event loop) currently the
+    // main event loop is not running anyhow
+    wxEventLoop * const loop = wxEventLoopBase::GetActive();
+
+    return loop && loop->Pending();
+}
+
+bool wxAppConsole::Dispatch()
+{
+    // see comment in Pending()
+    wxEventLoop * const loop = wxEventLoopBase::GetActive();
+
+    return loop && loop->Dispatch();
+}
 
+bool wxAppConsole::HasPendingEvents() const
+{
     // ensure that we're the only thread to modify the pending events list
     wxENTER_CRIT_SECT( *wxPendingEventsLocker );
 
     if ( !wxPendingEvents )
     {
         wxLEAVE_CRIT_SECT( *wxPendingEventsLocker );
-        return;
+        return false;
     }
+    wxLEAVE_CRIT_SECT( *wxPendingEventsLocker );
+    return true;
+};
+
+void wxAppConsole::ProcessPendingEvents()
+{
+#if wxUSE_THREADS
+    if ( !wxPendingEventsLocker )
+        return;
+#endif
+
+    if (!HasPendingEvents()) 
+        return;
 
     // iterate until the list becomes empty
     wxList::compatibility_iterator node = wxPendingEvents->GetFirst();
@@ -285,6 +368,24 @@
     wxLEAVE_CRIT_SECT( *wxPendingEventsLocker );
 }
 
+void wxAppConsole::WakeUpIdle()
+{
+    m_mainLoop->WakeUp();
+}
+
+bool wxAppConsole::ProcessIdle()
+{
+    wxIdleEvent event;
+    bool needMore = false;
+
+    event.SetEventObject(this);
+    (void) ProcessEvent(event);
+    if (event.MoreRequested())
+        needMore = true;
+
+    return needMore;
+}
+
 int wxAppConsole::FilterEvent(wxEvent& WXUNUSED(event))
 {
     // process the events normally by default
@@ -306,6 +407,25 @@
     (handler->*func)(event);
 }
 
+// ----------------------------------------------------------------------------
+// exceptions support
+// ----------------------------------------------------------------------------
+
+#if wxUSE_EXCEPTIONS
+
+bool wxAppConsole::OnExceptionInMainLoop()
+{
+    throw;
+
+    // some compilers are too stupid to know that we never return after throw
+#if defined(__DMC__) || (defined(_MSC_VER) && _MSC_VER < 1200)
+    return false;
+#endif
+}
+
+#endif // wxUSE_EXCEPTIONS
+
+
 #endif // wxUSE_EXCEPTIONS
 
 // ----------------------------------------------------------------------------
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/common/appcmn.cpp wxWidgets-2.8.0-wxapp/src/common/appcmn.cpp
--- wxWidgets-2.8.0/src/common/appcmn.cpp	2007-05-09 14:50:49.321385000 +0200
+++ wxWidgets-2.8.0-wxapp/src/common/appcmn.cpp	2007-05-09 11:32:54.000000000 +0200
@@ -1,6 +1,6 @@
 /////////////////////////////////////////////////////////////////////////////
 // Name:        src/common/appcmn.cpp
-// Purpose:     wxAppConsole and wxAppBase methods common to all platforms
+// Purpose:     wxAppConsole and wxAppGUIBase methods common to all platforms
 // Author:      Vadim Zeitlin
 // Modified by:
 // Created:     18.10.99
@@ -37,11 +37,9 @@
 
 #include "wx/apptrait.h"
 #include "wx/cmdline.h"
-#include "wx/evtloop.h"
 #include "wx/msgout.h"
 #include "wx/thread.h"
 #include "wx/vidmode.h"
-#include "wx/ptr_scpd.h"
 
 #ifdef __WXDEBUG__
     #if wxUSE_STACKWALKER
@@ -63,22 +61,15 @@
 
 WXDLLIMPEXP_DATA_CORE(wxList) wxPendingDelete;
 
-// ----------------------------------------------------------------------------
-// wxEventLoopPtr
-// ----------------------------------------------------------------------------
-
-// this defines wxEventLoopPtr
-wxDEFINE_TIED_SCOPED_PTR_TYPE(wxEventLoop)
-
 // ============================================================================
-// wxAppBase implementation
+// wxAppGUIBase implementation
 // ============================================================================
 
 // ----------------------------------------------------------------------------
 // initialization
 // ----------------------------------------------------------------------------
 
-wxAppBase::wxAppBase()
+wxAppGUIBase::wxAppGUIBase()
 {
     m_topWindow = (wxWindow *)NULL;
     
@@ -87,8 +78,6 @@
     
     m_isActive = true;
 
-    m_mainLoop = NULL;
-
     // We don't want to exit the app if the user code shows a dialog from its
     // OnInit() -- but this is what would happen if we set m_exitOnFrameDelete
     // to Yes initially as this dialog would be the last top level window.
@@ -104,15 +93,11 @@
     m_exitOnFrameDelete = Later;
 }
 
-bool wxAppBase::Initialize(int& argcOrig, wxChar **argvOrig)
+bool wxAppGUIBase::Initialize(int& argcOrig, wxChar **argvOrig)
 {
     if ( !wxAppConsole::Initialize(argcOrig, argvOrig) )
         return false;
 
-#if wxUSE_THREADS
-    wxPendingEventsLocker = new wxCriticalSection;
-#endif
-
     wxInitializeStockLists();
 
     wxBitmap::InitStandardHandlers();
@@ -124,12 +109,12 @@
 // cleanup
 // ----------------------------------------------------------------------------
 
-wxAppBase::~wxAppBase()
+wxAppGUIBase::~wxAppGUIBase()
 {
     // this destructor is required for Darwin
 }
 
-void wxAppBase::CleanUp()
+void wxAppGUIBase::CleanUp()
 {
     // clean up all the pending objects
     DeletePendingObjects();
@@ -157,9 +142,6 @@
     wxPendingEvents = NULL;
 
 #if wxUSE_THREADS
-    delete wxPendingEventsLocker;
-    wxPendingEventsLocker = NULL;
-
     #if wxUSE_VALIDATORS
         // If we don't do the following, we get an apparent memory leak.
         ((wxEvtHandler&) wxDefaultValidator).ClearEventLocker();
@@ -171,7 +153,7 @@
 // various accessors
 // ----------------------------------------------------------------------------
 
-wxWindow* wxAppBase::GetTopWindow() const
+wxWindow* wxAppGUIBase::GetTopWindow() const
 {
     wxWindow* window = m_topWindow;
     if (window == NULL && wxTopLevelWindows.GetCount() > 0)
@@ -179,12 +161,12 @@
     return window;
 }
 
-wxVideoMode wxAppBase::GetDisplayMode() const
+wxVideoMode wxAppGUIBase::GetDisplayMode() const
 {
     return wxVideoMode();
 }
 
-wxLayoutDirection wxAppBase::GetLayoutDirection() const
+wxLayoutDirection wxAppGUIBase::GetLayoutDirection() const
 {
 #if wxUSE_INTL
     const wxLocale *const locale = wxGetLocale();
@@ -211,7 +193,7 @@
 #define OPTION_THEME   _T("theme")
 #define OPTION_MODE    _T("mode")
 
-void wxAppBase::OnInitCmdLine(wxCmdLineParser& parser)
+void wxAppGUIBase::OnInitCmdLine(wxCmdLineParser& parser)
 {
     // first add the standard non GUI options
     wxAppConsole::OnInitCmdLine(parser);
@@ -258,7 +240,7 @@
     parser.SetDesc(cmdLineGUIDesc);
 }
 
-bool wxAppBase::OnCmdLineParsed(wxCmdLineParser& parser)
+bool wxAppGUIBase::OnCmdLineParsed(wxCmdLineParser& parser)
 {
 #ifdef __WXUNIVERSAL__
     wxString themeName;
@@ -299,49 +281,10 @@
 #endif // wxUSE_CMDLINE_PARSER
 
 // ----------------------------------------------------------------------------
-// main event loop implementation
-// ----------------------------------------------------------------------------
-
-int wxAppBase::MainLoop()
-{
-    wxEventLoopTiedPtr mainLoop(&m_mainLoop, new wxEventLoop);
-
-    return m_mainLoop->Run();
-}
-
-void wxAppBase::ExitMainLoop()
-{
-    // we should exit from the main event loop, not just any currently active
-    // (e.g. modal dialog) event loop
-    if ( m_mainLoop && m_mainLoop->IsRunning() )
-    {
-        m_mainLoop->Exit(0);
-    }
-}
-
-bool wxAppBase::Pending()
-{
-    // use the currently active message loop here, not m_mainLoop, because if
-    // we're showing a modal dialog (with its own event loop) currently the
-    // main event loop is not running anyhow
-    wxEventLoop * const loop = wxEventLoop::GetActive();
-
-    return loop && loop->Pending();
-}
-
-bool wxAppBase::Dispatch()
-{
-    // see comment in Pending()
-    wxEventLoop * const loop = wxEventLoop::GetActive();
-
-    return loop && loop->Dispatch();
-}
-
-// ----------------------------------------------------------------------------
 // OnXXX() hooks
 // ----------------------------------------------------------------------------
 
-bool wxAppBase::OnInitGui()
+bool wxAppGUIBase::OnInitGui()
 {
 #ifdef __WXUNIVERSAL__
     if ( !wxTheme::Get() && !wxTheme::CreateDefault() )
@@ -351,7 +294,7 @@
     return true;
 }
 
-int wxAppBase::OnRun()
+int wxAppGUIBase::OnRun()
 {
     // see the comment in ctor: if the initial value hasn't been changed, use
     // the default Yes from now on
@@ -361,10 +304,10 @@
     }
     //else: it has been changed, assume the user knows what he is doing
 
-    return MainLoop();
+    return wxAppConsole::OnRun();
 }
 
-int wxAppBase::OnExit()
+int wxAppGUIBase::OnExit()
 {
 #ifdef __WXUNIVERSAL__
     delete wxTheme::Set(NULL);
@@ -373,12 +316,7 @@
     return wxAppConsole::OnExit();
 }
 
-void wxAppBase::Exit()
-{
-    ExitMainLoop();
-}
-
-wxAppTraits *wxAppBase::CreateTraits()
+wxAppTraits *wxAppGUIBase::CreateTraits()
 {
     return new wxGUIAppTraits;
 }
@@ -387,7 +325,7 @@
 // misc
 // ----------------------------------------------------------------------------
 
-void wxAppBase::SetActive(bool active, wxWindow * WXUNUSED(lastFocus))
+void wxAppGUIBase::SetActive(bool active, wxWindow * WXUNUSED(lastFocus))
 {
     if ( active == m_isActive )
         return;
@@ -404,7 +342,7 @@
 // idle handling
 // ----------------------------------------------------------------------------
 
-void wxAppBase::DeletePendingObjects()
+void wxAppGUIBase::DeletePendingObjects()
 {
     wxList::compatibility_iterator node = wxPendingDelete.GetFirst();
     while (node)
@@ -426,7 +364,7 @@
 }
 
 // Returns true if more time is needed.
-bool wxAppBase::ProcessIdle()
+bool wxAppGUIBase::ProcessIdle()
 {
     wxIdleEvent event;
     bool needMore = false;
@@ -439,10 +377,7 @@
         node = node->GetNext();
     }
 
-    event.SetEventObject(this);
-    (void) ProcessEvent(event);
-    if (event.MoreRequested())
-        needMore = true;
+    needMore = wxAppConsole::ProcessIdle();
 
     wxUpdateUIEvent::ResetUpdateTime();
 
@@ -450,7 +385,7 @@
 }
 
 // Send idle event to window and all subwindows
-bool wxAppBase::SendIdleEvents(wxWindow* win, wxIdleEvent& event)
+bool wxAppGUIBase::SendIdleEvents(wxWindow* win, wxIdleEvent& event)
 {
     bool needMore = false;
 
@@ -477,7 +412,7 @@
     return needMore;
 }
 
-void wxAppBase::OnIdle(wxIdleEvent& WXUNUSED(event))
+void wxAppGUIBase::OnIdle(wxIdleEvent& WXUNUSED(event))
 {
     // If there are pending events, we must process them: pending events
     // are either events to the threads other than main or events posted
@@ -499,24 +434,6 @@
 }
 
 // ----------------------------------------------------------------------------
-// exceptions support
-// ----------------------------------------------------------------------------
-
-#if wxUSE_EXCEPTIONS
-
-bool wxAppBase::OnExceptionInMainLoop()
-{
-    throw;
-
-    // some compilers are too stupid to know that we never return after throw
-#if defined(__DMC__) || (defined(_MSC_VER) && _MSC_VER < 1200)
-    return false;
-#endif
-}
-
-#endif // wxUSE_EXCEPTIONS
-
-// ----------------------------------------------------------------------------
 // wxGUIAppTraitsBase
 // ----------------------------------------------------------------------------
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/common/event.cpp wxWidgets-2.8.0-wxapp/src/common/event.cpp
--- wxWidgets-2.8.0/src/common/event.cpp	2007-05-09 14:50:49.481395000 +0200
+++ wxWidgets-2.8.0-wxapp/src/common/event.cpp	2007-05-07 16:28:40.000000000 +0200
@@ -48,10 +48,10 @@
 #if wxUSE_BASE
     IMPLEMENT_DYNAMIC_CLASS(wxEvtHandler, wxObject)
     IMPLEMENT_ABSTRACT_CLASS(wxEvent, wxObject)
+    IMPLEMENT_DYNAMIC_CLASS(wxIdleEvent, wxEvent)
 #endif // wxUSE_BASE
 
 #if wxUSE_GUI
-    IMPLEMENT_DYNAMIC_CLASS(wxIdleEvent, wxEvent)
     IMPLEMENT_DYNAMIC_CLASS(wxCommandEvent, wxEvent)
     IMPLEMENT_DYNAMIC_CLASS(wxNotifyEvent, wxCommandEvent)
     IMPLEMENT_DYNAMIC_CLASS(wxScrollEvent, wxCommandEvent)
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/common/evtloopcmn.cpp wxWidgets-2.8.0-wxapp/src/common/evtloopcmn.cpp
--- wxWidgets-2.8.0/src/common/evtloopcmn.cpp	2007-05-09 14:50:49.493395750 +0200
+++ wxWidgets-2.8.0-wxapp/src/common/evtloopcmn.cpp	2007-05-09 12:06:54.000000000 +0200
@@ -37,7 +37,7 @@
 wxEventLoop *wxEventLoopBase::ms_activeLoop = NULL;
 
 // wxEventLoopManual is unused in the other ports
-#if defined(__WXMSW__) || defined(__WXMAC__) || defined(__WXDFB__)
+#if defined(__WXMSW__) || defined(__WXMAC__) || defined(__WXDFB__) || (defined(__UNIX__) && !wxUSE_GUI)
 
 // ============================================================================
 // wxEventLoopManual implementation
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/common/fdiodispatcher.cpp wxWidgets-2.8.0-wxapp/src/common/fdiodispatcher.cpp
--- wxWidgets-2.8.0/src/common/fdiodispatcher.cpp	1970-01-01 01:00:00.000000000 +0100
+++ wxWidgets-2.8.0-wxapp/src/common/fdiodispatcher.cpp	2007-04-20 11:48:30.000000000 +0200
@@ -0,0 +1,41 @@
+///////////////////////////////////////////////////////////////////////////////
+// Name:        src/common/socketevtdispatch.cpp
+// Purpose:     implements dispatcher for select() call
+// Author:      Lukasz Michalski
+// Created:     December 2006
+// RCS-ID:      $Id: selectdispatcher.cpp,v 1.2 2007/03/19 02:29:49 VZ Exp $
+// Copyright:   (c) 2006 Lukasz Michalski
+// License:     wxWindows licence
+///////////////////////////////////////////////////////////////////////////////
+
+// ============================================================================
+// declarations
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+// for compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#include "wx/private/selectdispatcher.h"
+#include "wx/unix/private.h"
+#include "wx/log.h"
+
+#ifndef WX_PRECOMP
+    #include "wx/hash.h"
+#endif
+
+#include <sys/time.h>
+#include <unistd.h>
+
+
+// ============================================================================
+// implementation
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// wxSelectDispatcher
+// ----------------------------------------------------------------------------
+
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/common/gsocketiohandler.cpp wxWidgets-2.8.0-wxapp/src/common/gsocketiohandler.cpp
--- wxWidgets-2.8.0/src/common/gsocketiohandler.cpp	2007-05-09 14:50:54.813728250 +0200
+++ wxWidgets-2.8.0-wxapp/src/common/gsocketiohandler.cpp	2007-04-20 14:38:12.000000000 +0200
@@ -42,17 +42,17 @@
 
 };
 
-void wxGSocketIOHandler::OnReadWaiting(int fd)
+void wxGSocketIOHandler::OnReadWaiting()
 {
     m_socket->Detected_Read();
 };
 
-void wxGSocketIOHandler::OnWriteWaiting(int fd) 
+void wxGSocketIOHandler::OnWriteWaiting() 
 {
     m_socket->Detected_Write();
 };
 
-void wxGSocketIOHandler::OnExceptionWaiting(int fd) 
+void wxGSocketIOHandler::OnExceptionWaiting() 
 {
     m_socket->Detected_Read();
 };
@@ -63,12 +63,12 @@
 };
 
 
-void wxGSocketIOHandler::RemoveFlag(wxSelectDispatcherEntryFlags flag)
+void wxGSocketIOHandler::RemoveFlag(wxFDIODispatcherEntryFlags flag)
 {
     m_flags &= ~flag;
 };
 
-void wxGSocketIOHandler::AddFlag(wxSelectDispatcherEntryFlags flag)
+void wxGSocketIOHandler::AddFlag(wxFDIODispatcherEntryFlags flag)
 {
     m_flags |= flag;
 };
@@ -136,12 +136,12 @@
   if (c == 0)
   {
       m_id[0] = socket->m_fd;
-      handler->AddFlag(wxSelectInput);
+      handler->AddFlag(wxFDIO_INPUT);
   }
   else
   {
       m_id[1] = socket->m_fd;
-      handler->AddFlag(wxSelectOutput);
+      handler->AddFlag(wxFDIO_OUTPUT);
   }
 
   wxSelectDispatcher::Get().RegisterFD(socket->m_fd,handler,handler->GetFlags());
@@ -167,15 +167,15 @@
   {
       if ( c == 0 )
       {
-          handler = (wxGSocketIOHandler*)wxSelectDispatcher::Get().UnregisterFD(m_id[c], wxSelectInput);
+          handler = (wxGSocketIOHandler*)wxSelectDispatcher::Get().UnregisterFD(m_id[c], wxFDIO_INPUT);
           if (handler != NULL)
-              handler->RemoveFlag(wxSelectInput);
+              handler->RemoveFlag(wxFDIO_INPUT);
       }
       else
       {
-          handler = (wxGSocketIOHandler*)wxSelectDispatcher::Get().UnregisterFD(m_id[c], wxSelectOutput);
+          handler = (wxGSocketIOHandler*)wxSelectDispatcher::Get().UnregisterFD(m_id[c], wxFDIO_OUTPUT);
           if (handler != NULL)
-              handler->RemoveFlag(wxSelectOutput);
+              handler->RemoveFlag(wxFDIO_OUTPUT);
       }
       if (handler && handler->GetFlags() == 0)
           delete handler;
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/common/init.cpp wxWidgets-2.8.0-wxapp/src/common/init.cpp
--- wxWidgets-2.8.0/src/common/init.cpp	2007-05-09 14:50:54.877732250 +0200
+++ wxWidgets-2.8.0-wxapp/src/common/init.cpp	2007-05-07 10:18:02.000000000 +0200
@@ -96,7 +96,7 @@
     DECLARE_NO_COPY_CLASS(wxAppPtr)
 };
 
-// class to ensure that wxAppBase::CleanUp() is called if our Initialize()
+// class to ensure that wxAppGUIBase::CleanUp() is called if our Initialize()
 // fails
 class wxCallAppCleanup
 {
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/common/selectdispatcher.cpp wxWidgets-2.8.0-wxapp/src/common/selectdispatcher.cpp
--- wxWidgets-2.8.0/src/common/selectdispatcher.cpp	2007-05-09 14:50:55.005740250 +0200
+++ wxWidgets-2.8.0-wxapp/src/common/selectdispatcher.cpp	2007-05-08 09:57:20.000000000 +0200
@@ -1,5 +1,5 @@
 ///////////////////////////////////////////////////////////////////////////////
-// Name:        src/common/socketevtdispatch.cpp
+// Name:        src/common/selectdispatcher.cpp
 // Purpose:     implements dispatcher for select() call
 // Author:      Lukasz Michalski
 // Created:     December 2006
@@ -29,8 +29,8 @@
     #include "wx/hash.h"
 #endif
 
-#include <sys/time.h>
-#include <unistd.h>
+//#include <sys/time.h>
+//#include <unistd.h>
 
 #ifdef HAVE_SYS_SELECT_H
 #   include <sys/select.h>
@@ -59,19 +59,19 @@
 void
 wxSelectDispatcher::RegisterFD(int fd, wxFDIOHandler* handler, int flags)
 {
-    if ((flags & wxSelectInput) == wxSelectInput) 
+    if ((flags & wxFDIO_INPUT) == wxFDIO_INPUT) 
     {
         wxFD_SET(fd, &m_readset);
         wxLogTrace(wxSelectDispatcher_Trace,wxT("Registered fd %d for input events"),fd);
     };
 
-    if ((flags & wxSelectOutput) == wxSelectOutput)
+    if ((flags & wxFDIO_OUTPUT) == wxFDIO_OUTPUT)
     {
         wxFD_SET(fd, &m_writeset);
         wxLogTrace(wxSelectDispatcher_Trace,wxT("Registered fd %d for output events"),fd);
     }
 
-    if ((flags & wxSelectException) == wxSelectException)
+    if ((flags & wxFDIO_EXCEPTION) == wxFDIO_EXCEPTION)
     {
         wxFD_SET(fd, &m_exeptset);
         wxLogTrace(wxSelectDispatcher_Trace,wxT("Registered fd %d for exception events"),fd);
@@ -82,6 +82,41 @@
       m_maxFD = fd;
 }
 
+void
+wxSelectDispatcher::ModifyFD(int fd, wxFDIOHandler* handler, int flags)
+{
+    wxASSERT(fd <= m_maxFD);
+    if ((flags & wxFDIO_INPUT) == wxFDIO_INPUT) 
+    {
+        wxFD_SET(fd, &m_readset);
+        wxLogTrace(wxSelectDispatcher_Trace,wxT("Modified fd %d: added input events"),fd);
+    } else {
+        wxFD_CLR(fd, &m_readset);
+        wxLogTrace(wxSelectDispatcher_Trace,wxT("Modified fd %d: removed input events"),fd);
+    };
+
+    if ((flags & wxFDIO_OUTPUT) == wxFDIO_OUTPUT)
+    {
+        wxFD_SET(fd, &m_writeset);
+        wxLogTrace(wxSelectDispatcher_Trace,wxT("Modified fd %d: added output events"),fd);
+    } else {
+        wxFD_CLR(fd, &m_writeset);
+        wxLogTrace(wxSelectDispatcher_Trace,wxT("Modified fd %d: removed output events"),fd);
+    };
+
+    if ((flags & wxFDIO_EXCEPTION) == wxFDIO_EXCEPTION)
+    {
+        wxFD_SET(fd, &m_exeptset);
+        wxLogTrace(wxSelectDispatcher_Trace,wxT("Modified fd %d: added exception events"),fd);
+    } else {
+        wxFD_CLR(fd, &m_exeptset);
+        wxLogTrace(wxSelectDispatcher_Trace,wxT("Modified fd %d: removed exception events"),fd);
+    };
+
+    m_handlers[fd] = handler;
+}
+
+
 wxFDIOHandler*
 wxSelectDispatcher::UnregisterFD(int fd, int flags)
 {
@@ -89,19 +124,19 @@
     if (fd == -1)
       return NULL;
 
-    if ((flags & wxSelectInput) == wxSelectInput)
+    if ((flags & wxFDIO_INPUT) == wxFDIO_INPUT)
     {
         wxLogTrace(wxSelectDispatcher_Trace,wxT("Unregistered fd %d from input events"),fd);
         wxFD_CLR(fd, &m_readset);
     }
 
-    if ((flags & wxSelectOutput) == wxSelectOutput)
+    if ((flags & wxFDIO_OUTPUT) == wxFDIO_OUTPUT)
     {
         wxLogTrace(wxSelectDispatcher_Trace,wxT("Unregistered fd %d from output events"),fd);
         wxFD_CLR(fd, &m_writeset);
     }
 
-    if ((flags & wxSelectException) == wxSelectException)
+    if ((flags & wxFDIO_EXCEPTION) == wxFDIO_EXCEPTION)
     {
         wxLogTrace(wxSelectDispatcher_Trace,wxT("Unregistered fd %d from exeption events"),fd);
         wxFD_CLR(fd, &m_exeptset);
@@ -135,7 +170,7 @@
             wxLogTrace(wxSelectDispatcher_Trace,wxT("Got read event on fd %d"),i);
             handler = FindHandler(i);
             if (handler != NULL && wxFD_ISSET(i,&m_readset))
-                handler->OnReadWaiting(i);
+                handler->OnReadWaiting();
             else
             {
               wxLogError(wxT("Lost fd in read fdset: %d, removing"),i);
@@ -149,7 +184,7 @@
             if (handler == NULL)
                 handler = FindHandler(i);
             if (handler != NULL && wxFD_ISSET(i,&m_writeset))
-                handler->OnWriteWaiting(i);
+                handler->OnWriteWaiting();
             else
             {
               wxLogError(wxT("Lost fd in write fdset: %d, removing"),i);
@@ -163,7 +198,7 @@
             if (handler == NULL)
                 handler = FindHandler(i);
             if (handler != NULL && wxFD_ISSET(i,&m_writeset))
-                handler->OnExceptionWaiting(i);
+                handler->OnExceptionWaiting();
             else
             {
               wxLogError(wxT("Lost fd in exept fdset: %d, removing"),i);
@@ -184,7 +219,7 @@
 void wxSelectDispatcher::RunLoop(int timeout)
 {
     struct timeval tv, *ptv = NULL;
-    if ( timeout != wxSELECT_TIMEOUT_INFINITE )
+    if ( timeout != FDIO_TIMEOUT_INFINITE )
     {
         ptv = &tv;
         tv.tv_sec = 0;
@@ -235,7 +270,7 @@
 class wxSelectDispatcherModule: public wxModule
 {
 public:
-    bool OnInit() { wxLog::AddTraceMask(wxSelectDispatcher_Trace); return true; }
+    bool OnInit() { return true; }
     void OnExit() { wxDELETE(wxSelectDispatcher::ms_instance); }
 
 private:
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/dfb/app.cpp wxWidgets-2.8.0-wxapp/src/dfb/app.cpp
--- wxWidgets-2.8.0/src/dfb/app.cpp	2007-05-09 14:50:55.009740500 +0200
+++ wxWidgets-2.8.0-wxapp/src/dfb/app.cpp	2007-05-07 10:19:56.000000000 +0200
@@ -29,7 +29,7 @@
 IMPLEMENT_DYNAMIC_CLASS(wxApp, wxEvtHandler)
 
 BEGIN_EVENT_TABLE(wxApp, wxEvtHandler)
-    EVT_IDLE(wxAppBase::OnIdle)
+    EVT_IDLE(wxAppGUIBase::OnIdle)
 END_EVENT_TABLE()
 
 wxApp::wxApp()
@@ -42,7 +42,7 @@
 
 bool wxApp::Initialize(int& argc, wxChar **argv)
 {
-    if ( !wxAppBase::Initialize(argc, argv) )
+    if ( !wxAppGUIBase::Initialize(argc, argv) )
         return false;
 
     if ( !wxDfbCheckReturn(DirectFBInit(&argc, &argv)) )
@@ -56,7 +56,7 @@
 
 void wxApp::CleanUp()
 {
-    wxAppBase::CleanUp();
+    wxAppGUIBase::CleanUp();
 
     wxFontsManager::CleanUp();
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/dfb/evtloop.cpp wxWidgets-2.8.0-wxapp/src/dfb/evtloop.cpp
--- wxWidgets-2.8.0/src/dfb/evtloop.cpp	2007-05-09 14:50:55.025741500 +0200
+++ wxWidgets-2.8.0-wxapp/src/dfb/evtloop.cpp	2007-05-09 13:12:38.000000000 +0200
@@ -43,20 +43,20 @@
 
 wxIDirectFBEventBufferPtr wxEventLoop::ms_buffer;
 
-wxEventLoop::wxEventLoop()
+wxGUIEventLoop::wxGUIEventLoop()
 {
     if ( !ms_buffer )
         InitBuffer();
 }
 
 /* static */
-void wxEventLoop::InitBuffer()
+void wxGUIEventLoop::InitBuffer()
 {
     ms_buffer = wxIDirectFB::Get()->CreateEventBuffer();
 }
 
 /* static */
-void wxEventLoop::CleanUp()
+void wxGUIEventLoop::CleanUp()
 {
     ms_buffer.Reset();
 }
@@ -74,14 +74,14 @@
 // events dispatch and loop handling
 //-----------------------------------------------------------------------------
 
-bool wxEventLoop::Pending() const
+bool wxGUIEventLoop::Pending() const
 {
     wxCHECK_MSG( ms_buffer, false, _T("invalid event buffer") );
 
     return ms_buffer->HasEvent();
 }
 
-bool wxEventLoop::Dispatch()
+bool wxGUIEventLoop::Dispatch()
 {
     wxCHECK_MSG( ms_buffer, false, _T("invalid event buffer") );
 
@@ -126,14 +126,14 @@
     return true;
 }
 
-void wxEventLoop::WakeUp()
+void wxGUIEventLoop::WakeUp()
 {
     wxCHECK_RET( ms_buffer, _T("invalid event buffer") );
 
     ms_buffer->WakeUp();
 }
 
-void wxEventLoop::OnNextIteration()
+void wxGUIEventLoop::OnNextIteration()
 {
 #if wxUSE_TIMER
     wxGenericTimerImpl::NotifyTimers();
@@ -145,7 +145,7 @@
 #endif
 }
 
-void wxEventLoop::Yield()
+void wxGUIEventLoop::Yield()
 {
     // process all pending events:
     while ( Pending() )
@@ -160,7 +160,7 @@
 // DirectFB -> wxWidgets events translation
 //-----------------------------------------------------------------------------
 
-void wxEventLoop::HandleDFBEvent(const wxDFBEvent& event)
+void wxGUIEventLoop::HandleDFBEvent(const wxDFBEvent& event)
 {
     switch ( event.GetClass() )
     {
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/dfb/utils.cpp wxWidgets-2.8.0-wxapp/src/dfb/utils.cpp
--- wxWidgets-2.8.0/src/dfb/utils.cpp	2007-05-09 14:50:55.053743250 +0200
+++ wxWidgets-2.8.0-wxapp/src/dfb/utils.cpp	2007-05-07 16:49:44.000000000 +0200
@@ -16,6 +16,7 @@
 #endif
 
 #include "wx/utils.h"
+#include "wx/evtloop.h"
 #include "wx/apptrait.h"
 #include "wx/unix/execute.h"
 
@@ -38,6 +39,11 @@
     return wxPORT_DFB;
 }
 
+
+wxEventLoop* wxGUIAppTraits::CreateEventLoop() 
+{
+    return new wxEventLoop;
+};
 // ----------------------------------------------------------------------------
 // display characteristics
 // ----------------------------------------------------------------------------
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/gtk/app.cpp wxWidgets-2.8.0-wxapp/src/gtk/app.cpp
--- wxWidgets-2.8.0/src/gtk/app.cpp	2007-05-09 14:50:55.117747250 +0200
+++ wxWidgets-2.8.0-wxapp/src/gtk/app.cpp	2007-05-07 10:16:02.000000000 +0200
@@ -267,7 +267,7 @@
 IMPLEMENT_DYNAMIC_CLASS(wxApp,wxEvtHandler)
 
 BEGIN_EVENT_TABLE(wxApp, wxEvtHandler)
-    EVT_IDLE(wxAppBase::OnIdle)
+    EVT_IDLE(wxAppGUIBase::OnIdle)
 END_EVENT_TABLE()
 
 wxApp::wxApp()
@@ -287,7 +287,7 @@
 
 bool wxApp::OnInitGui()
 {
-    if ( !wxAppBase::OnInitGui() )
+    if ( !wxAppGUIBase::OnInitGui() )
         return false;
 
     // if this is a wxGLApp (derived from wxApp), and we've already
@@ -348,7 +348,7 @@
 
 bool wxApp::Initialize(int& argc, wxChar **argv)
 {
-    if ( !wxAppBase::Initialize(argc, argv) )
+    if ( !wxAppGUIBase::Initialize(argc, argv) )
         return false;
 
 #if wxUSE_THREADS
@@ -527,7 +527,7 @@
 
     gdk_threads_leave();
 
-    wxAppBase::CleanUp();
+    wxAppGUIBase::CleanUp();
 }
 
 void wxApp::WakeUpIdle()
@@ -567,7 +567,7 @@
     // block wx idle events while assert dialog is showing
     m_isInAssert = true;
 
-    wxAppBase::OnAssertFailure(file, line, func, cond, msg);
+    wxAppGUIBase::OnAssertFailure(file, line, func, cond, msg);
 
     m_isInAssert = false;
 }
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/gtk/dialog.cpp wxWidgets-2.8.0-wxapp/src/gtk/dialog.cpp
--- wxWidgets-2.8.0/src/gtk/dialog.cpp	2007-05-09 14:50:55.141748750 +0200
+++ wxWidgets-2.8.0-wxapp/src/gtk/dialog.cpp	2007-05-08 11:23:50.000000000 +0200
@@ -135,7 +135,7 @@
     // NOTE: gtk_window_set_modal internally calls gtk_grab_add() !
     gtk_window_set_modal(GTK_WINDOW(m_widget), TRUE);
 
-    wxEventLoop().Run();
+    wxGUIEventLoop().Run();
 
     gtk_window_set_modal(GTK_WINDOW(m_widget), FALSE);
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/gtk/evtloop.cpp wxWidgets-2.8.0-wxapp/src/gtk/evtloop.cpp
--- wxWidgets-2.8.0/src/gtk/evtloop.cpp	2007-05-09 14:50:55.161750000 +0200
+++ wxWidgets-2.8.0-wxapp/src/gtk/evtloop.cpp	2007-05-09 12:59:44.000000000 +0200
@@ -62,17 +62,17 @@
 // wxEventLoop running and exiting
 // ----------------------------------------------------------------------------
 
-wxEventLoop::~wxEventLoop()
+wxGUIEventLoop::~wxGUIEventLoop()
 {
     wxASSERT_MSG( !m_impl, _T("should have been deleted in Run()") );
 }
 
-int wxEventLoop::Run()
+int wxGUIEventLoop::Run()
 {
     // event loops are not recursive, you need to create another loop!
     wxCHECK_MSG( !IsRunning(), -1, _T("can't reenter a message loop") );
 
-    wxEventLoopActivator activate(this);
+    wxEventLoopActivator activate(wx_static_cast(wxEventLoop *, this));
 
     wxEventLoopImplTiedPtr impl(&m_impl, new wxEventLoopImpl);
 
@@ -83,7 +83,7 @@
     return m_impl->GetExitCode();
 }
 
-void wxEventLoop::Exit(int rc)
+void wxGUIEventLoop::Exit(int rc)
 {
     wxCHECK_RET( IsRunning(), _T("can't call Exit() if not running") );
 
@@ -96,7 +96,7 @@
 // wxEventLoop message processing dispatching
 // ----------------------------------------------------------------------------
 
-bool wxEventLoop::Pending() const
+bool wxGUIEventLoop::Pending() const
 {
     bool pending;
     wxApp* app = wxTheApp;
@@ -108,7 +108,7 @@
     return pending;
 }
 
-bool wxEventLoop::Dispatch()
+bool wxGUIEventLoop::Dispatch()
 {
     wxCHECK_MSG( IsRunning(), false, _T("can't call Dispatch() if not running") );
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/gtk/toplevel.cpp wxWidgets-2.8.0-wxapp/src/gtk/toplevel.cpp
--- wxWidgets-2.8.0/src/gtk/toplevel.cpp	2007-05-09 14:50:55.417766000 +0200
+++ wxWidgets-2.8.0-wxapp/src/gtk/toplevel.cpp	2007-05-08 11:15:50.000000000 +0200
@@ -1173,7 +1173,7 @@
     {
         m_grabbed = true;
         gtk_grab_add( m_widget );
-        wxEventLoop().Run();
+        wxGUIEventLoop().Run();
         gtk_grab_remove( m_widget );
     }
 }
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/gtk/utilsgtk.cpp wxWidgets-2.8.0-wxapp/src/gtk/utilsgtk.cpp
--- wxWidgets-2.8.0/src/gtk/utilsgtk.cpp	2007-05-09 14:50:59.274007000 +0200
+++ wxWidgets-2.8.0-wxapp/src/gtk/utilsgtk.cpp	2007-05-09 12:39:22.000000000 +0200
@@ -26,6 +26,7 @@
 #include "wx/unix/execute.h"
 
 #include "wx/gtk/private/timer.h"
+#include "wx/evtloop.h"
 
 #ifdef __WXDEBUG__
     #include "wx/gtk/assertdlg_gtk.h"
@@ -363,6 +364,12 @@
 // wxGUIAppTraits
 //-----------------------------------------------------------------------------
 
+wxEventLoop *wxGUIAppTraits::CreateEventLoop()
+{
+    return new wxEventLoop();
+}
+
+
 #if wxUSE_INTL
 void wxGUIAppTraits::SetLocale()
 {
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/gtk1/app.cpp wxWidgets-2.8.0-wxapp/src/gtk1/app.cpp
--- wxWidgets-2.8.0/src/gtk1/app.cpp	2007-05-09 14:50:59.414015750 +0200
+++ wxWidgets-2.8.0-wxapp/src/gtk1/app.cpp	2007-05-07 10:20:34.000000000 +0200
@@ -426,7 +426,7 @@
 IMPLEMENT_DYNAMIC_CLASS(wxApp,wxEvtHandler)
 
 BEGIN_EVENT_TABLE(wxApp, wxEvtHandler)
-    EVT_IDLE(wxAppBase::OnIdle)
+    EVT_IDLE(wxAppGUIBase::OnIdle)
 END_EVENT_TABLE()
 
 wxApp::wxApp()
@@ -459,7 +459,7 @@
 
 bool wxApp::OnInitGui()
 {
-    if ( !wxAppBase::OnInitGui() )
+    if ( !wxAppGUIBase::OnInitGui() )
         return false;
 
     GdkVisual *visual = gdk_visual_get_system();
@@ -647,7 +647,7 @@
     // we can not enter threads before gtk_init is done
     gdk_threads_enter();
 
-    if ( !wxAppBase::Initialize(argc, argv) )
+    if ( !wxAppGUIBase::Initialize(argc, argv) )
     {
         gdk_threads_leave();
 
@@ -667,7 +667,7 @@
 {
     gdk_threads_leave();
 
-    wxAppBase::CleanUp();
+    wxAppGUIBase::CleanUp();
 }
 
 #ifdef __WXDEBUG__
@@ -676,7 +676,7 @@
 {
     m_isInAssert = true;
 
-    wxAppBase::OnAssert(file, line, cond, msg);
+    wxAppGUIBase::OnAssert(file, line, cond, msg);
 
     m_isInAssert = false;
 }
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/gtk1/evtloop.cpp wxWidgets-2.8.0-wxapp/src/gtk1/evtloop.cpp
--- wxWidgets-2.8.0/src/gtk1/evtloop.cpp	2007-05-09 14:50:59.418016000 +0200
+++ wxWidgets-2.8.0-wxapp/src/gtk1/evtloop.cpp	2007-05-09 13:16:34.000000000 +0200
@@ -52,24 +52,24 @@
 };
 
 // ============================================================================
-// wxEventLoop implementation
+// wxGUIEventLoop implementation
 // ============================================================================
 
 // ----------------------------------------------------------------------------
-// wxEventLoop running and exiting
+// wxGUIEventLoop running and exiting
 // ----------------------------------------------------------------------------
 
-wxEventLoop::~wxEventLoop()
+wxGUIEventLoop::~wxGUIEventLoop()
 {
     wxASSERT_MSG( !m_impl, _T("should have been deleted in Run()") );
 }
 
-int wxEventLoop::Run()
+int wxGUIEventLoop::Run()
 {
     // event loops are not recursive, you need to create another loop!
     wxCHECK_MSG( !IsRunning(), -1, _T("can't reenter a message loop") );
 
-    wxEventLoopActivator activate(this);
+    wxEventLoopActivator activate(wx_static_cast(wxEventLoop *, this));
 
     m_impl = new wxEventLoopImpl;
 
@@ -84,7 +84,7 @@
     return exitcode;
 }
 
-void wxEventLoop::Exit(int rc)
+void wxGUIEventLoop::Exit(int rc)
 {
     wxCHECK_RET( IsRunning(), _T("can't call Exit() if not running") );
 
@@ -97,7 +97,7 @@
 // wxEventLoop message processing dispatching
 // ----------------------------------------------------------------------------
 
-bool wxEventLoop::Pending() const
+bool wxGUIEventLoop::Pending() const
 {
     if (wxTheApp)
     {
@@ -109,7 +109,7 @@
     return gtk_events_pending();
 }
 
-bool wxEventLoop::Dispatch()
+bool wxGUIEventLoop::Dispatch()
 {
     wxCHECK_MSG( IsRunning(), false, _T("can't call Dispatch() if not running") );
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/gtk1/utilsgtk.cpp wxWidgets-2.8.0-wxapp/src/gtk1/utilsgtk.cpp
--- wxWidgets-2.8.0/src/gtk1/utilsgtk.cpp	2007-05-09 14:50:59.434017000 +0200
+++ wxWidgets-2.8.0-wxapp/src/gtk1/utilsgtk.cpp	2007-05-07 16:53:04.000000000 +0200
@@ -20,6 +20,7 @@
 
 #include "wx/apptrait.h"
 #include "wx/gtk1/private/timer.h"
+#include "wx/evtloop.h"
 #include "wx/process.h"
 
 #include "wx/unix/execute.h"
@@ -202,6 +203,11 @@
     return wxPORT_GTK;
 }
 
+wxEventLoop* wxGUIAppTraits::CreateEventLoop() 
+{
+    return new wxEventLoop;
+};
+
 wxString wxGUIAppTraits::GetDesktopEnvironment() const
 {
     return wxEmptyString;
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/mac/carbon/app.cpp wxWidgets-2.8.0-wxapp/src/mac/carbon/app.cpp
--- wxWidgets-2.8.0/src/mac/carbon/app.cpp	2007-05-09 14:50:59.658031000 +0200
+++ wxWidgets-2.8.0-wxapp/src/mac/carbon/app.cpp	2007-05-07 10:16:20.000000000 +0200
@@ -854,7 +854,7 @@
         }
     }
 
-    if ( !wxAppBase::Initialize(argc, argv) )
+    if ( !wxAppGUIBase::Initialize(argc, argv) )
         return false;
 
 #if wxUSE_INTL
@@ -903,7 +903,7 @@
 
 bool wxApp::OnInitGui()
 {
-    if ( !wxAppBase::OnInitGui() )
+    if ( !wxAppGUIBase::OnInitGui() )
         return false ;
 
     InstallStandardEventHandler( GetApplicationEventTarget() ) ;
@@ -995,7 +995,7 @@
         DisposeAEEventHandlerUPP( sQuitHandler ) ;
     }
 
-    wxAppBase::CleanUp();
+    wxAppGUIBase::CleanUp();
 }
 
 //----------------------------------------------------------------------
@@ -1136,7 +1136,7 @@
 
 void wxApp::OnIdle(wxIdleEvent& event)
 {
-    wxAppBase::OnIdle(event);
+    wxAppGUIBase::OnIdle(event);
 
     // If they are pending events, we must process them: pending events are
     // either events to the threads other than main or events posted with
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/mac/carbon/evtloop.cpp wxWidgets-2.8.0-wxapp/src/mac/carbon/evtloop.cpp
--- wxWidgets-2.8.0/src/mac/carbon/evtloop.cpp	2007-05-09 14:50:59.678032250 +0200
+++ wxWidgets-2.8.0-wxapp/src/mac/carbon/evtloop.cpp	2007-05-09 13:11:12.000000000 +0200
@@ -45,16 +45,16 @@
 
 #if wxMAC_USE_RUN_APP_EVENT_LOOP
 
-int wxEventLoop::Run()
+int wxGUIEventLoop::Run()
 {
-    wxEventLoopActivator activate(this);
+    wxEventLoopActivator activate(wx_static_cast(wxEventLoop *, this));
 
     RunApplicationEventLoop();
 
     return m_exitcode;
 }
 
-void wxEventLoop::Exit(int rc)
+void wxGUIEventLoop::Exit(int rc)
 {
     m_exitcode = rc;
 
@@ -69,7 +69,7 @@
 // functions only used by wxEventLoopManual-based implementation
 // ----------------------------------------------------------------------------
 
-void wxEventLoop::WakeUp()
+void wxGUIEventLoop::WakeUp()
 {
     extern void wxMacWakeUp();
 
@@ -82,7 +82,7 @@
 // low level functions used in both cases
 // ----------------------------------------------------------------------------
 
-bool wxEventLoop::Pending() const
+bool wxGUIEventLoop::Pending() const
 {
     EventRef theEvent;
 
@@ -96,7 +96,7 @@
            ) == noErr;
 }
 
-bool wxEventLoop::Dispatch()
+bool wxGUIEventLoop::Dispatch()
 {
     // TODO: we probably should do the dispatching directly from here but for
     //       now it's easier to forward to wxApp which has all the code to do
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/mac/carbon/utils.cpp wxWidgets-2.8.0-wxapp/src/mac/carbon/utils.cpp
--- wxWidgets-2.8.0/src/mac/carbon/utils.cpp	2007-05-09 14:51:03.122247500 +0200
+++ wxWidgets-2.8.0-wxapp/src/mac/carbon/utils.cpp	2007-05-07 16:54:06.000000000 +0200
@@ -61,6 +61,7 @@
 #include "wx/mac/private/timer.h"
 #endif // wxUSE_GUI
 
+#include "wx/evtloop.h"
 #include "wx/mac/private.h"
 
 #if defined(__MWERKS__) && wxUSE_UNICODE
@@ -380,6 +381,11 @@
     return wxPORT_MAC;
 }
 
+wxEventLoop* wxGUIAppTraits::CreateEventLoop() 
+{
+    return new wxEventLoop;
+};
+
 wxTimerImpl* wxGUIAppTraits::CreateTimerImpl(wxTimer *timer)
 {
     return new wxCarbonTimerImpl(timer);
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/mgl/app.cpp wxWidgets-2.8.0-wxapp/src/mgl/app.cpp
--- wxWidgets-2.8.0/src/mgl/app.cpp	2007-05-09 14:51:03.166250250 +0200
+++ wxWidgets-2.8.0-wxapp/src/mgl/app.cpp	2007-05-07 10:17:58.000000000 +0200
@@ -201,7 +201,7 @@
 IMPLEMENT_DYNAMIC_CLASS(wxApp,wxEvtHandler)
 
 BEGIN_EVENT_TABLE(wxApp, wxEvtHandler)
-    EVT_IDLE(wxAppBase::OnIdle)
+    EVT_IDLE(wxAppGUIBase::OnIdle)
 END_EVENT_TABLE()
 
 
@@ -252,7 +252,7 @@
 
 bool wxApp::OnInitGui()
 {
-    if ( !wxAppBase::OnInitGui() )
+    if ( !wxAppGUIBase::OnInitGui() )
         return false;
 
 #ifdef __WXDEBUG__
@@ -284,7 +284,7 @@
         return false;
     }
 
-    if ( !wxAppBase::Initialize(argc, argv) )
+    if ( !wxAppGUIBase::Initialize(argc, argv) )
     {
         MGL_exit();
         return false;
@@ -319,7 +319,7 @@
 {
     delete gs_rootWindow;
 
-    wxAppBase::CleanUp();
+    wxAppGUIBase::CleanUp();
 
     wxModule::RegisterModule(new wxMGLFinalCleanup);
 }
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/mgl/evtloop.cpp wxWidgets-2.8.0-wxapp/src/mgl/evtloop.cpp
--- wxWidgets-2.8.0/src/mgl/evtloop.cpp	2007-05-09 14:51:03.190251750 +0200
+++ wxWidgets-2.8.0-wxapp/src/mgl/evtloop.cpp	2007-05-09 13:17:06.000000000 +0200
@@ -97,26 +97,26 @@
 }
 
 // ============================================================================
-// wxEventLoop implementation
+// wxGUIEventLoop implementation
 // ============================================================================
 
 // ----------------------------------------------------------------------------
-// wxEventLoop running and exiting
+// wxGUIEventLoop running and exiting
 // ----------------------------------------------------------------------------
 
-wxEventLoop::~wxEventLoop()
+wxGUIEventLoop::~wxGUIEventLoop()
 {
     wxASSERT_MSG( !m_impl, _T("should have been deleted in Run()") );
 }
 
-int wxEventLoop::Run()
+int wxGUIEventLoop::Run()
 {
     // event loops are not recursive, you need to create another loop!
     wxCHECK_MSG( !IsRunning(), -1, _T("can't reenter a message loop") );
 
     m_impl = new wxEventLoopImpl;
 
-    wxEventLoopActivator activate(this);
+    wxEventLoopActivator activate(wx_static_cast(wxEventLoop *, this));
 
     for ( ;; )
     {
@@ -146,7 +146,7 @@
     return exitcode;
 }
 
-void wxEventLoop::Exit(int rc)
+void wxGUIEventLoop::Exit(int rc)
 {
     wxCHECK_RET( IsRunning(), _T("can't call Exit() if not running") );
 
@@ -162,7 +162,7 @@
 // wxEventLoop message processing dispatching
 // ----------------------------------------------------------------------------
 
-bool wxEventLoop::Pending() const
+bool wxGUIEventLoop::Pending() const
 {
     // update the display here, so that wxYield refreshes display and
     // changes take effect immediately, not after emptying events queue:
@@ -173,7 +173,7 @@
     return (bool)(EVT_peekNext(&evt, EVT_EVERYEVT));
 }
 
-bool wxEventLoop::Dispatch()
+bool wxGUIEventLoop::Dispatch()
 {
     wxCHECK_MSG( IsRunning(), false, _T("can't call Dispatch() if not running") );
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/mgl/utils.cpp wxWidgets-2.8.0-wxapp/src/mgl/utils.cpp
--- wxWidgets-2.8.0/src/mgl/utils.cpp	2007-05-09 14:51:03.214253250 +0200
+++ wxWidgets-2.8.0-wxapp/src/mgl/utils.cpp	2007-05-07 16:55:34.000000000 +0200
@@ -24,6 +24,7 @@
 
 #include "wx/apptrait.h"
 #include "wx/process.h"
+#include "wx/evtloop.h"
 
 #include <stdarg.h>
 #include <string.h>
@@ -122,6 +123,12 @@
     return wxPORT_MGL;
 }
 
+wxEventLoop* wxGUIAppTraits::CreateEventLoop() 
+{
+    return new wxEventLoop;
+};
+
+
 void wxGetMousePosition(int* x, int* y)
 {
     MS_getPos(x, y);
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/motif/app.cpp wxWidgets-2.8.0-wxapp/src/motif/app.cpp
--- wxWidgets-2.8.0/src/motif/app.cpp	2007-05-09 14:51:03.262256250 +0200
+++ wxWidgets-2.8.0-wxapp/src/motif/app.cpp	2007-05-07 10:17:42.000000000 +0200
@@ -74,7 +74,7 @@
 IMPLEMENT_DYNAMIC_CLASS(wxApp, wxEvtHandler)
 
 BEGIN_EVENT_TABLE(wxApp, wxEvtHandler)
-    EVT_IDLE(wxAppBase::OnIdle)
+    EVT_IDLE(wxAppGUIBase::OnIdle)
 END_EVENT_TABLE()
 
 #ifdef __WXDEBUG__
@@ -103,7 +103,7 @@
     wxFont::SetDefaultEncoding(wxLocale::GetSystemEncoding());
 #endif
 
-    if ( !wxAppBase::Initialize(argcOrig, argvOrig) )
+    if ( !wxAppGUIBase::Initialize(argcOrig, argvOrig) )
         return false;
 
     wxWidgetHashTable = new wxHashTable(wxKEY_INTEGER);
@@ -113,7 +113,7 @@
 
 void wxApp::CleanUp()
 {
-    wxAppBase::CleanUp();
+    wxAppGUIBase::CleanUp();
 
     delete wxWidgetHashTable;
     wxWidgetHashTable = NULL;
@@ -215,7 +215,7 @@
 // Create an application context
 bool wxApp::OnInitGui()
 {
-    if( !wxAppBase::OnInitGui() )
+    if( !wxAppGUIBase::OnInitGui() )
         return false;
 
 #ifdef __HPUX__
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/motif/evtloop.cpp wxWidgets-2.8.0-wxapp/src/motif/evtloop.cpp
--- wxWidgets-2.8.0/src/motif/evtloop.cpp	2007-05-09 14:51:03.302258750 +0200
+++ wxWidgets-2.8.0-wxapp/src/motif/evtloop.cpp	2007-05-09 12:58:46.000000000 +0200
@@ -101,17 +101,17 @@
 // wxEventLoop running and exiting
 // ----------------------------------------------------------------------------
 
-wxEventLoop::~wxEventLoop()
+wxGUIEventLoop::~wxGUIEventLoop()
 {
     wxASSERT_MSG( !m_impl, _T("should have been deleted in Run()") );
 }
 
-int wxEventLoop::Run()
+int wxGUIEventLoop::Run()
 {
     // event loops are not recursive, you need to create another loop!
     wxCHECK_MSG( !IsRunning(), -1, _T("can't reenter a message loop") );
 
-    wxEventLoopActivator activate(this);
+    wxEventLoopActivator activate(wx_static_cast(wxEventLoop *, this));
 
     m_impl = new wxEventLoopImpl;
     m_impl->SetKeepGoing( true );
@@ -131,7 +131,7 @@
     return exitcode;
 }
 
-void wxEventLoop::Exit(int rc)
+void wxGUIEventLoop::Exit(int rc)
 {
     wxCHECK_RET( IsRunning(), _T("can't call Exit() if not running") );
 
@@ -145,12 +145,12 @@
 // wxEventLoop message processing dispatching
 // ----------------------------------------------------------------------------
 
-bool wxEventLoop::Pending() const
+bool wxGUIEventLoop::Pending() const
 {
     return XtAppPending( (XtAppContext)wxTheApp->GetAppContext() ) != 0;
 }
 
-bool wxEventLoop::Dispatch()
+bool wxGUIEventLoop::Dispatch()
 {
     XEvent event;
     XtAppContext context = (XtAppContext)wxTheApp->GetAppContext();
@@ -338,7 +338,7 @@
 // executes one main loop iteration (declared in include/wx/motif/private.h)
 // ----------------------------------------------------------------------------
 
-bool wxDoEventLoopIteration( wxEventLoop& evtLoop )
+bool wxDoEventLoopIteration( wxGUIEventLoop& evtLoop )
 {
     bool moreRequested, pendingEvents;
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/motif/utils.cpp wxWidgets-2.8.0-wxapp/src/motif/utils.cpp
--- wxWidgets-2.8.0/src/motif/utils.cpp	2007-05-09 14:51:03.390264250 +0200
+++ wxWidgets-2.8.0-wxapp/src/motif/utils.cpp	2007-05-07 16:55:54.000000000 +0200
@@ -136,6 +136,11 @@
     return wxPORT_MOTIF;
 }
 
+wxEventLoop* wxGUIAppTraits::CreateEventLoop() 
+{
+    return new wxEventLoop;
+};
+
 wxTimerImpl* wxGUIAppTraits::CreateTimerImpl(wxTimer* timer)
 {
     return new wxMotifTimerImpl(timer);
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/msw/app.cpp wxWidgets-2.8.0-wxapp/src/msw/app.cpp
--- wxWidgets-2.8.0/src/msw/app.cpp	2007-05-09 14:51:04.246317750 +0200
+++ wxWidgets-2.8.0-wxapp/src/msw/app.cpp	2007-05-09 12:06:38.000000000 +0200
@@ -266,12 +266,16 @@
 #endif
 }
 
-wxTimerImpl *
-wxGUIAppTraits::CreateTimerImpl(wxTimer *timer)
+wxTimerImpl *wxGUIAppTraits::CreateTimerImpl(wxTimer *timer)
 {
-  return new wxMSWTimerImpl(timer);
+    return new wxMSWTimerImpl(timer);
 }
 
+wxEventLoop* wxGUIAppTraits::CreateEventLoop() 
+{
+    return new wxEventLoop;
+};
+
 // ===========================================================================
 // wxApp implementation
 // ===========================================================================
@@ -290,13 +294,13 @@
     EVT_QUERY_END_SESSION(wxApp::OnQueryEndSession)
 END_EVENT_TABLE()
 
-// class to ensure that wxAppBase::CleanUp() is called if our Initialize()
+// class to ensure that wxAppGUIBase::CleanUp() is called if our Initialize()
 // fails
 class wxCallBaseCleanup
 {
 public:
     wxCallBaseCleanup(wxApp *app) : m_app(app) { }
-    ~wxCallBaseCleanup() { if ( m_app ) m_app->wxAppBase::CleanUp(); }
+    ~wxCallBaseCleanup() { if ( m_app ) m_app->wxAppGUIBase::CleanUp(); }
 
     void Dismiss() { m_app = NULL; }
 
@@ -307,7 +311,7 @@
 //// Initialize
 bool wxApp::Initialize(int& argc, wxChar **argv)
 {
-    if ( !wxAppBase::Initialize(argc, argv) )
+    if ( !wxAppGUIBase::Initialize(argc, argv) )
         return false;
 
     // ensure that base cleanup is done if we return too early
@@ -504,7 +508,7 @@
     // would crash when they use wxWinHandleHash (and UnregisterWindowClasses()
     // call wouldn't succeed as long as any windows still exist), so call the
     // base class method first and only then do our clean up
-    wxAppBase::CleanUp();
+    wxAppGUIBase::CleanUp();
 
 #if !defined(__WXMICROWIN__) && !defined(__WXWINCE__)
     wxSetKeyboardHook(false);
@@ -546,7 +550,7 @@
 
 void wxApp::OnIdle(wxIdleEvent& event)
 {
-    wxAppBase::OnIdle(event);
+    wxAppGUIBase::OnIdle(event);
 
 #if wxUSE_DC_CACHEING
     // automated DC cache management: clear the cached DCs and bitmap
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/msw/basemsw.cpp wxWidgets-2.8.0-wxapp/src/msw/basemsw.cpp
--- wxWidgets-2.8.0/src/msw/basemsw.cpp	2007-05-09 14:51:04.270319250 +0200
+++ wxWidgets-2.8.0-wxapp/src/msw/basemsw.cpp	2007-05-09 11:58:16.000000000 +0200
@@ -28,6 +28,7 @@
 #endif //WX_PRECOMP
 
 #include "wx/apptrait.h"
+#include "wx/evtloop.h"
 #include "wx/msw/private/timer.h"
 // MBN: this is a workaround for MSVC 5: if it is not #included in
 // some wxBase file, wxRecursionGuard methods won't be exported from
@@ -81,12 +82,15 @@
     return true;
 }
 
-wxTimerImpl *
-wxConsoleAppTraits::CreateTimerImpl(wxTimer *timer)
+wxTimerImpl *wxConsoleAppTraits::CreateTimerImpl(wxTimer *timer)
 {
     return new wxMSWTimerImpl(timer);
 }
 
+wxEventLoop *wxConsoleAppTraits::CreateEventLoop()
+{
+    return new wxEventLoop();
+}
 
 WXDWORD wxConsoleAppTraits::WaitForThread(WXHANDLE hThread)
 {
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/msw/evtloop.cpp wxWidgets-2.8.0-wxapp/src/msw/evtloop.cpp
--- wxWidgets-2.8.0/src/msw/evtloop.cpp	2007-05-09 14:51:04.290320500 +0200
+++ wxWidgets-2.8.0-wxapp/src/msw/evtloop.cpp	2007-05-09 11:42:12.000000000 +0200
@@ -25,40 +25,44 @@
 #endif
 
 #ifndef WX_PRECOMP
-    #include "wx/window.h"
+    #if wxUSE_GUI
+        #include "wx/window.h"
+    #endif
     #include "wx/app.h"
 #endif //WX_PRECOMP
 
 #include "wx/evtloop.h"
 
-#include "wx/tooltip.h"
+
 #include "wx/except.h"
 #include "wx/ptr_scpd.h"
 
 #include "wx/msw/private.h"
 
-#if wxUSE_THREADS
-    #include "wx/thread.h"
+#if wxUSE_GUI
+    #include "wx/tooltip.h"
+    #if wxUSE_THREADS
+        #include "wx/thread.h"
 
-    // define the list of MSG strutures
-    WX_DECLARE_LIST(MSG, wxMsgList);
+        // define the list of MSG strutures
+        WX_DECLARE_LIST(MSG, wxMsgList);
 
-    #include "wx/listimpl.cpp"
+        #include "wx/listimpl.cpp"
 
-    WX_DEFINE_LIST(wxMsgList)
-#endif // wxUSE_THREADS
+        WX_DEFINE_LIST(wxMsgList)
+    #endif // wxUSE_THREADS
+#endif //wxUSE_GUI
+
+#if wxUSE_BASE
 
 // ============================================================================
-// wxEventLoop implementation
+// wxMSWEventLoopBase implementation
 // ============================================================================
-
-wxWindowMSW *wxEventLoop::ms_winCritical = NULL;
-
 // ----------------------------------------------------------------------------
 // ctor/dtor
 // ----------------------------------------------------------------------------
 
-wxEventLoop::wxEventLoop()
+wxMSWEventLoopBase::wxMSWEventLoopBase()
 {
     m_shouldExit = false;
     m_exitcode = 0;
@@ -68,7 +72,7 @@
 // wxEventLoop message processing
 // ----------------------------------------------------------------------------
 
-void wxEventLoop::ProcessMessage(WXMSG *msg)
+void wxMSWEventLoopBase::ProcessMessage(WXMSG *msg)
 {
     // give us the chance to preprocess the message first
     if ( !PreProcessMessage(msg) )
@@ -79,7 +83,49 @@
     }
 }
 
-bool wxEventLoop::IsChildOfCriticalWindow(wxWindowMSW *win)
+// ----------------------------------------------------------------------------
+// wxEventLoop message processing dispatching
+// ----------------------------------------------------------------------------
+
+bool wxMSWEventLoopBase::Pending() const
+{
+    MSG msg;
+    return ::PeekMessage(&msg, 0, 0, 0, PM_NOREMOVE) != 0;
+}
+
+bool wxMSWEventLoopBase::GetNextMessage(WXMSG* msg)
+{
+    wxCHECK_MSG( IsRunning(), false, _T("can't call Dispatch() if not running") );
+
+    BOOL rc = ::GetMessage(msg, (HWND) NULL, 0, 0);
+
+    if ( rc == 0 )
+    {
+        // got WM_QUIT
+        return false;
+    }
+
+    if ( rc == -1 )
+    {
+        // should never happen, but let's test for it nevertheless
+        wxLogLastError(wxT("GetMessage"));
+
+        // still break from the loop
+        return false;
+    }
+    return true;
+}
+#endif
+
+#if wxUSE_GUI
+
+// ============================================================================
+// GUI wxEventLoop implementation
+// ============================================================================
+
+wxWindowMSW *wxGUIEventLoop::ms_winCritical = NULL;
+
+bool wxGUIEventLoop::IsChildOfCriticalWindow(wxWindowMSW *win)
 {
     while ( win )
     {
@@ -92,7 +138,7 @@
     return false;
 }
 
-bool wxEventLoop::PreProcessMessage(WXMSG *msg)
+bool wxGUIEventLoop::PreProcessMessage(WXMSG *msg)
 {
     HWND hwnd = msg->hwnd;
     wxWindow *wndThis = wxGetWindowFromHWND((WXHWND)hwnd);
@@ -187,57 +233,11 @@
     return false;
 }
 
-// ----------------------------------------------------------------------------
-// wxEventLoop running and exiting
-// ----------------------------------------------------------------------------
-
-// ----------------------------------------------------------------------------
-// wxEventLoopManual customization
-// ----------------------------------------------------------------------------
-
-void wxEventLoop::OnNextIteration()
-{
-#if wxUSE_THREADS
-    wxMutexGuiLeaveOrEnter();
-#endif // wxUSE_THREADS
-}
-
-void wxEventLoop::WakeUp()
-{
-    ::PostMessage(NULL, WM_NULL, 0, 0);
-}
-
-// ----------------------------------------------------------------------------
-// wxEventLoop message processing dispatching
-// ----------------------------------------------------------------------------
-
-bool wxEventLoop::Pending() const
+bool wxGUIEventLoop::Dispatch() 
 {
     MSG msg;
-    return ::PeekMessage(&msg, 0, 0, 0, PM_NOREMOVE) != 0;
-}
-
-bool wxEventLoop::Dispatch()
-{
-    wxCHECK_MSG( IsRunning(), false, _T("can't call Dispatch() if not running") );
-
-    MSG msg;
-    BOOL rc = ::GetMessage(&msg, (HWND) NULL, 0, 0);
-
-    if ( rc == 0 )
-    {
-        // got WM_QUIT
-        return false;
-    }
-
-    if ( rc == -1 )
-    {
-        // should never happen, but let's test for it nevertheless
-        wxLogLastError(wxT("GetMessage"));
-
-        // still break from the loop
+    if (!GetNextMessage(&msg))
         return false;
-    }
 
 #if wxUSE_THREADS
     wxASSERT_MSG( wxThread::IsMain(),
@@ -292,5 +292,67 @@
     ProcessMessage(&msg);
 
     return true;
+};
+
+void wxGUIEventLoop::OnNextIteration()
+{
+#if wxUSE_THREADS
+    wxMutexGuiLeaveOrEnter();
+#endif // wxUSE_THREADS
+}
+
+void wxGUIEventLoop::WakeUp()
+{
+    ::PostMessage(NULL, WM_NULL, 0, 0);
 }
+#else
+
+void wxConsoleEventLoop::OnNextIteration()
+{
+    DWORD result;
+    HANDLE* lphObjects = NULL;
+    int cObjects = 0;
+
+    wxTheApp->ProcessPendingEvents();
+    result = MsgWaitForMultipleObjects(cObjects, lphObjects, FALSE, INFINITE, QS_ALLEVENTS);
+    if (result != (WAIT_OBJECT_0 + cObjects)) {
+      m_shouldExit = true;
+    };
+};
+
+void wxConsoleEventLoop::WakeUp()
+{
+    wxWakeUpMainThread();
+}
+
+bool wxConsoleEventLoop::Dispatch() 
+{
+    MSG msg;
+    if (!GetNextMessage(&msg))
+        return false;
+    
+    if (msg.message == WM_QUIT)
+      return false;
+    
+    if (msg.message == WM_TIMER) {
+      TIMERPROC proc = (TIMERPROC)msg.lParam;
+      (*proc)(NULL,0,msg.wParam,0);
+    } else {
+      ProcessMessage(&msg);
+    };
+    return m_shouldExit;
+};
+
+
+#endif //wxUSE_GUI
+
+
+// ----------------------------------------------------------------------------
+// wxEventLoop running and exiting
+// ----------------------------------------------------------------------------
+
+// ----------------------------------------------------------------------------
+// wxEventLoopManual customization
+// ----------------------------------------------------------------------------
+
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/msw/window.cpp wxWidgets-2.8.0-wxapp/src/msw/window.cpp
--- wxWidgets-2.8.0/src/msw/window.cpp	2007-05-09 14:51:12.362825000 +0200
+++ wxWidgets-2.8.0-wxapp/src/msw/window.cpp	2007-05-08 10:48:04.000000000 +0200
@@ -2471,7 +2471,7 @@
 
     LRESULT rc;
 
-    if ( wnd && wxEventLoop::AllowProcessing(wnd) )
+    if ( wnd && wxGUIEventLoop::AllowProcessing(wnd) )
         rc = wnd->MSWWindowProc(message, wParam, lParam);
     else
         rc = ::DefWindowProc(hWnd, message, wParam, lParam);
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/os2/app.cpp wxWidgets-2.8.0-wxapp/src/os2/app.cpp
--- wxWidgets-2.8.0/src/os2/app.cpp	2007-05-09 14:51:12.482832500 +0200
+++ wxWidgets-2.8.0-wxapp/src/os2/app.cpp	2007-05-07 10:17:00.000000000 +0200
@@ -190,7 +190,7 @@
 //
 bool wxApp::Initialize(int& argc, wxChar **argv)
 {
-    if ( !wxAppBase::Initialize(argc, argv) )
+    if ( !wxAppGUIBase::Initialize(argc, argv) )
         return false;
 
 #if defined(wxUSE_CONSOLEDEBUG)
@@ -225,7 +225,7 @@
     if (!vHabmain)
     {
         // TODO: at least give some error message here...
-        wxAppBase::CleanUp();
+        wxAppGUIBase::CleanUp();
 
         return false;
     }
@@ -422,7 +422,7 @@
     if (wxTheApp->m_hMq)
         ::WinDestroyMsgQueue(wxTheApp->m_hMq);
 
-    wxAppBase::CleanUp();
+    wxAppGUIBase::CleanUp();
 } // end of wxApp::CleanUp
 
 bool wxApp::OnInitGui()
@@ -430,7 +430,7 @@
     ERRORID vError;
     wxString sError;
 
-    if (!wxAppBase::OnInitGui())
+    if (!wxAppGUIBase::OnInitGui())
         return false;
 
     m_hMq = ::WinCreateMsgQueue(vHabmain, 0);
@@ -484,7 +484,7 @@
 
     gbInOnIdle = true;
 
-    wxAppBase::OnIdle(rEvent);
+    wxAppGUIBase::OnIdle(rEvent);
 
 #if wxUSE_DC_CACHEING
     // automated DC cache management: clear the cached DCs and bitmap
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/os2/evtloop.cpp wxWidgets-2.8.0-wxapp/src/os2/evtloop.cpp
--- wxWidgets-2.8.0/src/os2/evtloop.cpp	2007-05-09 14:51:12.550836750 +0200
+++ wxWidgets-2.8.0-wxapp/src/os2/evtloop.cpp	2007-05-09 13:18:54.000000000 +0200
@@ -1,6 +1,6 @@
 ///////////////////////////////////////////////////////////////////////////////
 // Name:        src/os2/evtloop.cpp
-// Purpose:     implements wxEventLoop for PM
+// Purpose:     implements wxGUIEventLoop for PM
 // Author:      Vadim Zeitlin
 // Modified by:
 // Created:     01.06.01
@@ -197,14 +197,14 @@
 }
 
 // ============================================================================
-// wxEventLoop implementation
+// wxGUIEventLoop implementation
 // ============================================================================
 
 // ----------------------------------------------------------------------------
-// wxEventLoop running and exiting
+// wxGUIEventLoop running and exiting
 // ----------------------------------------------------------------------------
 
-wxEventLoop::~wxEventLoop()
+wxGUIEventLoop::~wxGUIEventLoop()
 {
     wxASSERT_MSG( !m_impl, _T("should have been deleted in Run()") );
 }
@@ -227,18 +227,18 @@
 class CallEventLoopMethod
 {
 public:
-    typedef void (wxEventLoop::*FuncType)();
+    typedef void (wxGUIEventLoop::*FuncType)();
 
-    CallEventLoopMethod(wxEventLoop *evtLoop, FuncType fn)
+    CallEventLoopMethod(wxGUIEventLoop *evtLoop, FuncType fn)
         : m_evtLoop(evtLoop), m_fn(fn) { }
     ~CallEventLoopMethod() { (m_evtLoop->*m_fn)(); }
 
 private:
-    wxEventLoop *m_evtLoop;
+    wxGUIEventLoop *m_evtLoop;
     FuncType m_fn;
 };
 
-int wxEventLoop::Run()
+int wxGUIEventLoop::Run()
 {
     // event loops are not recursive, you need to create another loop!
     wxCHECK_MSG( !IsRunning(), -1, _T("can't reenter a message loop") );
@@ -246,10 +246,10 @@
     // SendIdleMessage() and Dispatch() below may throw so the code here should
     // be exception-safe, hence we must use local objects for all actions we
     // should undo
-    wxEventLoopActivator activate(this);
+    wxEventLoopActivator activate(wx_static_cast(wxEventLoop *, this));
     wxEventLoopImplTiedPtr impl(&m_impl, new wxEventLoopImpl);
 
-    CallEventLoopMethod  callOnExit(this, &wxEventLoop::OnExit);
+    CallEventLoopMethod  callOnExit(this, &wxGUIEventLoop::OnExit);
 
     for ( ;; )
     {
@@ -283,7 +283,7 @@
     return m_impl->GetExitCode();
 }
 
-void wxEventLoop::Exit(int rc)
+void wxGUIEventLoop::Exit(int rc)
 {
     wxCHECK_RET( IsRunning(), _T("can't call Exit() if not running") );
 
@@ -293,16 +293,16 @@
 }
 
 // ----------------------------------------------------------------------------
-// wxEventLoop message processing dispatching
+// wxGUIEventLoop message processing dispatching
 // ----------------------------------------------------------------------------
 
-bool wxEventLoop::Pending() const
+bool wxGUIEventLoop::Pending() const
 {
     QMSG msg;
     return ::WinPeekMsg(vHabmain, &msg, 0, 0, 0, PM_NOREMOVE) != 0;
 }
 
-bool wxEventLoop::Dispatch()
+bool wxGUIEventLoop::Dispatch()
 {
     wxCHECK_MSG( IsRunning(), false, _T("can't call Dispatch() if not running") );
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/os2/utilsgui.cpp wxWidgets-2.8.0-wxapp/src/os2/utilsgui.cpp
--- wxWidgets-2.8.0/src/os2/utilsgui.cpp	2007-05-09 14:51:12.642842500 +0200
+++ wxWidgets-2.8.0-wxapp/src/os2/utilsgui.cpp	2007-05-07 17:00:36.000000000 +0200
@@ -34,6 +34,7 @@
 
 #include "wx/apptrait.h"
 #include "wx/os2/private/timer.h"
+#include "wx/evtloop.h"
 
 #include "wx/os2/private.h"     // includes <windows.h>
 
@@ -267,6 +268,10 @@
     return new wxOS2TimerImpl(timer);
 }
 
+wxEventLoop* wxGUIAppTraits::CreateEventLoop() 
+{
+    return new wxEventLoop;
+};
 
 // ---------------------------------------------------------------------------
 // window information functions
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/palmos/app.cpp wxWidgets-2.8.0-wxapp/src/palmos/app.cpp
--- wxWidgets-2.8.0/src/palmos/app.cpp	2007-05-09 14:51:12.666844000 +0200
+++ wxWidgets-2.8.0-wxapp/src/palmos/app.cpp	2007-05-07 17:00:18.000000000 +0200
@@ -47,6 +47,7 @@
 #include "wx/apptrait.h"
 #include "wx/filename.h"
 #include "wx/dynlib.h"
+#include "wx/evtloop.h"
 
 #if wxUSE_TOOLTIPS
     #include "wx/tooltip.h"
@@ -123,6 +124,11 @@
 {
     return new wxPalmOSTimerImpl(timer);
 };
+
+wxEventLoop* wxGUIAppTraits::CreateEventLoop() 
+{
+    return new wxEventLoop;
+};
 // ===========================================================================
 // wxApp implementation
 // ===========================================================================
@@ -141,13 +147,13 @@
     EVT_QUERY_END_SESSION(wxApp::OnQueryEndSession)
 END_EVENT_TABLE()
 
-// class to ensure that wxAppBase::CleanUp() is called if our Initialize()
+// class to ensure that wxAppGUIBase::CleanUp() is called if our Initialize()
 // fails
 class wxCallBaseCleanup
 {
 public:
     wxCallBaseCleanup(wxApp *app) : m_app(app) { }
-    ~wxCallBaseCleanup() { if ( m_app ) m_app->wxAppBase::CleanUp(); }
+    ~wxCallBaseCleanup() { if ( m_app ) m_app->wxAppGUIBase::CleanUp(); }
 
     void Dismiss() { m_app = NULL; }
 
@@ -158,7 +164,7 @@
 //// Initialize
 bool wxApp::Initialize(int& argc, wxChar **argv)
 {
-    if ( !wxAppBase::Initialize(argc, argv) )
+    if ( !wxAppGUIBase::Initialize(argc, argv) )
         return false;
 
     // ensure that base cleanup is done if we return too early
@@ -199,7 +205,7 @@
     // would crash when they use wxWinHandleHash (and UnregisterWindowClasses()
     // call wouldn't succeed as long as any windows still exist), so call the
     // base class method first and only then do our clean up
-    wxAppBase::CleanUp();
+    wxAppGUIBase::CleanUp();
 
     // for an EXE the classes are unregistered when it terminates but DLL may
     // be loaded several times (load/unload/load) into the same process in
@@ -241,7 +247,7 @@
 
 void wxApp::OnIdle(wxIdleEvent& event)
 {
-    wxAppBase::OnIdle(event);
+    wxAppGUIBase::OnIdle(event);
 }
 
 void wxApp::WakeUpIdle()
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/palmos/evtloop.cpp wxWidgets-2.8.0-wxapp/src/palmos/evtloop.cpp
--- wxWidgets-2.8.0/src/palmos/evtloop.cpp	2007-05-09 14:51:12.686845250 +0200
+++ wxWidgets-2.8.0-wxapp/src/palmos/evtloop.cpp	2007-05-09 13:19:50.000000000 +0200
@@ -1,6 +1,6 @@
 ///////////////////////////////////////////////////////////////////////////////
 // Name:        src/palmos/evtloop.cpp
-// Purpose:     implements wxEventLoop for Palm OS
+// Purpose:     implements wxGUIEventLoop for Palm OS
 // Author:      William Osborne - minimal working wxPalmOS port
 // Modified by:
 // Created:     10.14.04
@@ -52,47 +52,47 @@
 #include <Form.h>
 
 // ============================================================================
-// wxEventLoop implementation
+// wxGUIEventLoop implementation
 // ============================================================================
 
 // ----------------------------------------------------------------------------
 // ctor/dtor
 // ----------------------------------------------------------------------------
 
-wxEventLoop::wxEventLoop()
+wxGUIEventLoop::wxGUIEventLoop()
 {
     m_shouldExit = false;
     m_exitcode = 0;
 }
 
 // ----------------------------------------------------------------------------
-// wxEventLoop message processing
+// wxGUIEventLoop message processing
 // ----------------------------------------------------------------------------
 
-void wxEventLoop::ProcessMessage(WXMSG *msg)
+void wxGUIEventLoop::ProcessMessage(WXMSG *msg)
 {
 }
 
-bool wxEventLoop::PreProcessMessage(WXMSG *msg)
+bool wxGUIEventLoop::PreProcessMessage(WXMSG *msg)
 {
     return false;
 }
 
 // ----------------------------------------------------------------------------
-// wxEventLoop running and exiting
+// wxGUIEventLoop running and exiting
 // ----------------------------------------------------------------------------
 
-bool wxEventLoop::IsRunning() const
+bool wxGUIEventLoop::IsRunning() const
 {
     return true;
 }
 
-int wxEventLoop::Run()
+int wxGUIEventLoop::Run()
 {
     status_t    error;
     EventType    event;
 
-    wxEventLoopActivator activate(this);
+    wxEventLoopActivator activate(wx_static_cast(wxEventLoop *, this));
 
     do {
         wxTheApp && wxTheApp->ProcessIdle();
@@ -112,7 +112,7 @@
     return 0;
 }
 
-void wxEventLoop::Exit(int rc)
+void wxGUIEventLoop::Exit(int rc)
 {
     FrmCloseAllForms();
 
@@ -122,15 +122,15 @@
 }
 
 // ----------------------------------------------------------------------------
-// wxEventLoop message processing dispatching
+// wxGUIEventLoop message processing dispatching
 // ----------------------------------------------------------------------------
 
-bool wxEventLoop::Pending() const
+bool wxGUIEventLoop::Pending() const
 {
     return false;
 }
 
-bool wxEventLoop::Dispatch()
+bool wxGUIEventLoop::Dispatch()
 {
     return false;
 }
Files wxWidgets-2.8.0/src/png/projects/beos/x86-shared.proj and wxWidgets-2.8.0-wxapp/src/png/projects/beos/x86-shared.proj differ
Files wxWidgets-2.8.0/src/png/projects/beos/x86-static.proj and wxWidgets-2.8.0-wxapp/src/png/projects/beos/x86-static.proj differ
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/unix/app.cpp wxWidgets-2.8.0-wxapp/src/unix/app.cpp
--- wxWidgets-2.8.0/src/unix/app.cpp	1970-01-01 01:00:00.000000000 +0100
+++ wxWidgets-2.8.0-wxapp/src/unix/app.cpp	2007-05-09 17:18:42.328187250 +0200
@@ -0,0 +1,77 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        wx/unix/app.cpp
+// Purpose:     wxAppConsole with wxMainLoop implementation
+// Author:      Lukasz Michalski
+// Modified by:
+// Created:     28/01/2005
+// RCS-ID:      $Id: zork-mainloop-0.19.patch,v 1.1 2006/05/30 09:14:25 zork Exp $
+// Copyright:   (c) Lukasz Michalski
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#include "wx/app.h"
+#include "wx/log.h"
+#include "wx/list.h"
+#include "wx/evtloop.h"
+#include <signal.h>
+#include <unistd.h>
+#include <fcntl.h>
+#include <unistd.h>
+
+
+bool 
+wxUnixAppConsole::Initialize(int& argc, wxChar** argv) {
+    if (!wxAppConsole::Initialize(argc,argv))
+        return false;
+
+    // initialize wakeup pipe and select proper FDIODispatcher
+    // for socket handling
+    if (!m_mainLoop->Init()) {
+        return false;
+    };
+
+    sigemptyset(&m_signalCatched);
+
+    return true;
+};
+
+void
+wxUnixAppConsole::HandleSignal(int signal) {
+    sigaddset(&(wxTheApp->m_signalCatched), signal);
+    wxTheApp->WakeUpIdle();
+}
+
+void
+wxUnixAppConsole::CheckSignal() {
+    SignalHandlerHash::iterator it;
+    for( it = m_signalHandlerHash.begin(); it != m_signalHandlerHash.end(); ++it )
+    {
+        int sig = it->first;
+        if (sigismember(&m_signalCatched, sig))
+        {
+        // FIXME There is a race hash between testing signal and clearing
+        // signal but it should not really matter
+        sigdelset(&m_signalCatched, sig);
+        SignalHandler h = it->second;
+        if (h != 0)
+            h(sig);
+        }
+    }
+}
+
+void
+wxUnixAppConsole::SetSignalHandler(int signal, SignalHandler handler)
+{
+    struct sigaction sa;
+    memset(&sa, 0, sizeof(sa));
+    sa.sa_handler = HandleSignal;
+    sa.sa_flags = SA_RESTART;
+    int res = sigaction(signal, &sa, 0);
+    if (res < 0)
+        wxLogFatalError(wxT("wxUnixApp: cannot install signal handler"));
+    
+    if (handler == SIG_DFL || handler == SIG_IGN)
+        m_signalHandlerHash[signal] = 0;
+    else
+        m_signalHandlerHash[signal] = handler;
+}
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/unix/baseunix.cpp wxWidgets-2.8.0-wxapp/src/unix/baseunix.cpp
--- wxWidgets-2.8.0/src/unix/baseunix.cpp	2007-05-09 14:51:12.694845750 +0200
+++ wxWidgets-2.8.0-wxapp/src/unix/baseunix.cpp	2007-05-09 12:38:54.000000000 +0200
@@ -32,6 +32,7 @@
 
 #include "wx/apptrait.h"
 #include "wx/unix/execute.h"
+#include "wx/evtloop.h"
 #include "wx/unix/private/timer.h"
 
 // for waitpid()
@@ -82,10 +83,15 @@
     return exitcode;
 }
 
-wxTimerImpl*
-wxConsoleAppTraits::CreateTimerImpl(wxTimer *timer)
+wxTimerImpl *wxConsoleAppTraits::CreateTimerImpl(wxTimer *timer)
 {
     // this doesn't work yet as there is no main loop in console applications
     // (but it will be added later)
     return new wxUnixTimerImpl(timer);
 }
+
+wxEventLoop *wxConsoleAppTraits::CreateEventLoop() 
+{
+    return new wxEventLoop();
+}
+
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/unix/epolldispatcher.cpp wxWidgets-2.8.0-wxapp/src/unix/epolldispatcher.cpp
--- wxWidgets-2.8.0/src/unix/epolldispatcher.cpp	1970-01-01 01:00:00.000000000 +0100
+++ wxWidgets-2.8.0-wxapp/src/unix/epolldispatcher.cpp	2007-05-07 14:54:44.000000000 +0200
@@ -0,0 +1,171 @@
+///////////////////////////////////////////////////////////////////////////////
+// Name:        src/common/epolldispatcher.cpp
+// Purpose:     implements dispatcher for epoll_wait() call
+// Author:      Lukasz Michalski
+// Created:     April 2007
+// RCS-ID:      $Id: epolldispatcher.cpp,v 1.2 2007/03/19 02:29:49 VZ Exp $
+// Copyright:   (c) 2007 Lukasz Michalski
+// License:     wxWindows licence
+///////////////////////////////////////////////////////////////////////////////
+
+// ============================================================================
+// declarations
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+// for compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#include "wx/unix/private/epolldispatcher.h"
+#include "wx/unix/private.h"
+#include "wx/log.h"
+
+#include <errno.h>
+
+#ifdef HAVE_SYS_EPOLL_H
+
+#define wxEpollDispatcher_Trace wxT("epolldispatcher")
+
+wxEpollDispatcher* wxEpollDispatcher::ms_instance = NULL;
+
+// ============================================================================
+// implementation
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// wxEpollDispatcher
+// ----------------------------------------------------------------------------
+
+bool 
+wxEpollDispatcher::Init() {
+    m_epollDescriptor = epoll_create(1024);
+    if (m_epollDescriptor == -1) {
+        wxLogError(wxT("Cannot create epoll descriptor: %s"),wxSysErrorMsg(errno));
+        return false;
+    };
+    return true;
+};
+
+void
+wxEpollDispatcher::RegisterFD(int fd, wxFDIOHandler* handler, int flags)
+{
+    epoll_event ev;
+    ev.events = 0;
+
+    if ((flags & wxFDIO_INPUT) == wxFDIO_INPUT) 
+    {
+        ev.events |= EPOLLIN;
+        wxLogTrace(wxEpollDispatcher_Trace,wxT("Registered fd %d for input events"),fd);
+    };
+
+    if ((flags & wxFDIO_OUTPUT) == wxFDIO_OUTPUT)
+    {
+        ev.events |= EPOLLOUT;
+        wxLogTrace(wxEpollDispatcher_Trace,wxT("Registered fd %d for output events"),fd);
+    }
+
+    //reduntant - epoll docs says that ERR and HUP are always set
+    if ((flags & wxFDIO_EXCEPTION) == wxFDIO_EXCEPTION)
+    {
+        ev.events = EPOLLERR | EPOLLHUP;
+        wxLogTrace(wxEpollDispatcher_Trace,wxT("Registered fd %d for exception events"),fd);
+    };
+
+    ev.data.ptr = (void*)handler;
+    int ret = epoll_ctl(m_epollDescriptor,EPOLL_CTL_ADD,fd,&ev);
+    if (ret != 0) {
+        wxLogSysError(wxT("Cannot register fd %d on epoll descriptor %d: %s"),fd,m_epollDescriptor,wxSysErrorMsg(errno));
+    };
+}
+
+void
+wxEpollDispatcher::ModifyFD(int fd, wxFDIOHandler* handler, int flags)
+{
+    epoll_event ev;
+    ev.events = 0;
+
+    if ((flags & wxFDIO_INPUT) == wxFDIO_INPUT) 
+    {
+        ev.events |= EPOLLIN;
+        wxLogTrace(wxEpollDispatcher_Trace,wxT("Registered fd %d for input events"),fd);
+    };
+
+    if ((flags & wxFDIO_OUTPUT) == wxFDIO_OUTPUT)
+    {
+        ev.events |= EPOLLOUT;
+        wxLogTrace(wxEpollDispatcher_Trace,wxT("Registered fd %d for output events"),fd);
+    }
+
+    //reduntant - epoll docs says that ERR and HUP are always set
+    if ((flags & wxFDIO_EXCEPTION) == wxFDIO_EXCEPTION)
+    {
+        ev.events = EPOLLERR | EPOLLHUP;
+        wxLogTrace(wxEpollDispatcher_Trace,wxT("Registered fd %d for exception events"),fd);
+    };
+
+    ev.data.ptr = (void*)handler;
+    int ret = epoll_ctl(m_epollDescriptor,EPOLL_CTL_MOD,fd,&ev);
+    if (ret != 0) {
+        wxLogSysError(wxT("Cannot register fd %d on epoll descriptor %d: %s"),fd,m_epollDescriptor,wxSysErrorMsg(errno));
+    };
+}
+
+wxFDIOHandler*
+wxEpollDispatcher::UnregisterFD(int fd, int flags)
+{
+    epoll_event ev;
+    ev.events = 0;
+    ev.data.ptr = NULL;
+    int ret = epoll_ctl(m_epollDescriptor,EPOLL_CTL_DEL,fd,&ev);
+    if (ret != 0) {
+        wxLogSysError(wxT("Cannot unregister fd %d on epoll descriptor %d: %s"),fd,m_epollDescriptor,wxSysErrorMsg(errno));
+    };
+    //it is not possible to get pointer to passed FDIOHandler
+    return NULL;
+}
+
+wxFDIOHandler* wxEpollDispatcher::FindHandler(int fd)
+{
+    wxASSERT_MSG(false,wxT("This dispatcher does not support FDIOHandler searching"));
+    return NULL;
+};
+
+void wxEpollDispatcher::RunLoop(int timeout)
+{
+    epoll_event events[10];
+
+    int e_num = epoll_wait(m_epollDescriptor,events,10,timeout);
+    if (e_num == -1) {
+        if (errno != EINTR) {
+            wxLogSysError(wxT("Call epoll_wait on epoll descriptor %d failed: %s"), m_epollDescriptor, wxSysErrorMsg(errno));
+            return;
+        } 
+    };
+    for(int n = 0; n < e_num; n++) {
+        wxFDIOHandler* handler = (wxFDIOHandler*)(events[n].data.ptr);
+        if ((events[n].events & EPOLLIN)) {
+            handler->OnExceptionWaiting();
+        };
+        if ((events[n].events & EPOLLIN)) {
+            handler->OnReadWaiting();
+        };
+        if ((events[n].events & EPOLLOUT)) {
+            handler->OnWriteWaiting();
+        };
+    };
+}
+
+/* static */
+wxEpollDispatcher& wxEpollDispatcher::Get()
+{
+    if ( !ms_instance )
+        ms_instance = new wxEpollDispatcher;
+    return *ms_instance;
+}
+
+IMPLEMENT_DYNAMIC_CLASS(wxEpollDispatcherModule, wxModule)
+
+#endif // HAVE_SYS_EPOLL_H
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/unix/evtloop.cpp wxWidgets-2.8.0-wxapp/src/unix/evtloop.cpp
--- wxWidgets-2.8.0/src/unix/evtloop.cpp	1970-01-01 01:00:00.000000000 +0100
+++ wxWidgets-2.8.0-wxapp/src/unix/evtloop.cpp	2007-05-09 09:45:46.000000000 +0200
@@ -0,0 +1,186 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        src/unix/evtloop.cpp
+// Purpose:     wxEventLoop implementation
+// Author:      Lukasz Michalski (lm@zork.pl)
+// Created:     2007-05-07
+// RCS-ID:      $Id: evtloop.cpp,v 1.10 2007/04/20 01:28:12 VZ Exp $
+// Copyright:   (c) 2006 Zork Lukasz Michalski
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+// ===========================================================================
+// declarations
+// ===========================================================================
+
+// ---------------------------------------------------------------------------
+// headers
+// ---------------------------------------------------------------------------
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#include "wx/evtloop.h"
+
+#ifndef WX_PRECOMP
+    #include "wx/app.h"
+    #include "wx/log.h"
+#endif
+
+#include <errno.h>
+#include "wx/thread.h"
+#include "wx/module.h"
+#include "wx/generic/private/timer.h"
+#include "wx/unix/private/epolldispatcher.h"
+#include "wx/private/selectdispatcher.h"
+
+#define TRACE_EVENTS _T("events")
+
+
+// ===========================================================================
+// wxEventLoop::PipeIOHandler implementation
+// ===========================================================================
+wxConsoleEventLoop::PipeIOHandler::PipeIOHandler() 
+{
+};
+
+//-----------------------------------------------------------------------------
+// initialization
+//-----------------------------------------------------------------------------
+bool wxConsoleEventLoop::PipeIOHandler::Init()
+{
+    int ret = pipe(m_wakeupPipe);
+    if (ret != 0) {
+        wxLogSysError(wxT("wxApp: cannot craete wakeup pipe. exiting."));
+        return false;
+    };
+    
+    int oldflags = fcntl(m_wakeupPipe[0],F_GETFL,0);
+    if (oldflags == -1) {
+        wxLogSysError(wxT("wxApp: Error reading file status flags on read pipe descriptor %d"),m_wakeupPipe[0]);
+        return false;
+    };
+    
+    oldflags |= O_NONBLOCK;
+    
+    if (fcntl(m_wakeupPipe[0],F_SETFL,oldflags) == -1) {
+        wxLogSysError(wxT("wxApp: Error setting O_NONBLOCK flag on read pipe descriptor %d"),m_wakeupPipe[0]);
+        return false;
+    };
+    wxLogTrace(TRACE_EVENTS,wxT("Creted pipe, read on %d, write on %d"),m_wakeupPipe[0],m_wakeupPipe[1]);
+    return true;
+};
+
+//-----------------------------------------------------------------------------
+// wakeup handling
+//-----------------------------------------------------------------------------
+void wxConsoleEventLoop::PipeIOHandler::OnReadWaiting()
+{
+    //got wakeup from child thread
+    //read all data available in pipe
+    //just to make it empty.
+    char s;
+    int size;
+    do {
+        errno = 0;
+        size = read(m_wakeupPipe[0],&s,4);
+        if (size == 0) {
+            //Unexpected EOF on wakeup pipe
+            break;
+        };
+        if (size < 4) {
+            //bytes read from wakeup pipe
+            break;
+        };
+        if ((size == -1)&&(errno != EAGAIN)) {
+            //"Error reading data from wakeup pipe
+            wxLogSysError(wxT("wxApp: Error reading data from wakeup pipe descriptor %d"),m_wakeupPipe[0]);
+            break;
+        };
+    } while (errno != EAGAIN);
+    //no matter if data was readed or not
+    //someone want to wake main thread
+    //so process pending events now
+    wxTheApp->ProcessPendingEvents();
+};
+
+// ===========================================================================
+// wxEventLoop implementation
+// ===========================================================================
+
+//-----------------------------------------------------------------------------
+// initialization
+//-----------------------------------------------------------------------------
+
+wxConsoleEventLoop::wxConsoleEventLoop()
+{
+}
+
+bool wxConsoleEventLoop::Init() 
+{
+    if (!m_wakeupPipe.Init())
+        return false;
+
+#ifdef HAVE_SYS_EPOLL_H
+    wxEpollDispatcher* disp = new wxEpollDispatcher();
+    if (!disp->Init()) {
+        wxLogWarning(wxT("Cannot initialize epoll descriptor on this system, falling back to select() based main loop"));
+        delete m_FdDispatcher;
+        m_FdDispatcher = &wxSelectDispatcher::Get();
+    } else {
+        wxModule::RegisterModule(new wxEpollDispatcherModule(disp));
+        m_FdDispatcher = disp;
+        //FIXME: we should uniregister wxSelectDispatcherModule here but 
+        //we don't have pointer to it
+    };
+#else
+    m_FdDispatcher = &wxSelectDispatcher::Get();
+#endif
+    m_FdDispatcher->RegisterFD(m_wakeupPipe.getReadFd(), &m_wakeupPipe, wxFDIO_INPUT);
+    return true;
+};
+
+//-----------------------------------------------------------------------------
+// events dispatch and loop handling
+//-----------------------------------------------------------------------------
+
+bool wxConsoleEventLoop::Pending() const
+{
+    return wxTheApp->HasPendingEvents();
+}
+
+bool wxConsoleEventLoop::Dispatch()
+{
+    wxTheApp->ProcessPendingEvents();
+    return true;
+}
+
+void wxConsoleEventLoop::WakeUp()
+{
+    m_wakeupPipe.WakeUp();
+}
+
+void wxConsoleEventLoop::OnNextIteration()
+{
+    // Calculate the time to the next wxTimer expiry. If no timers expiring
+    // then no select timeout
+    wxUsecClock_t timeout = 0;
+
+    if (m_FdDispatcher != NULL) 
+    {
+        #if wxUSE_TIMER
+        if (wxTimerScheduler::Get().GetNext(&timeout)) {
+            timeout = timeout/100;
+        };
+        #endif
+        //run event fd loop only to the next timer expiration
+        m_FdDispatcher->RunLoop(timeout.GetLo());
+    }
+
+    #if wxUSE_TIMER
+    wxTimerScheduler::Get().NotifyExpired();
+    #endif
+
+    //check if there are any unix signals pending
+    wxTheApp->CheckSignal();
+}
+
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/x11/app.cpp wxWidgets-2.8.0-wxapp/src/x11/app.cpp
--- wxWidgets-2.8.0/src/x11/app.cpp	2007-05-09 14:51:12.810853000 +0200
+++ wxWidgets-2.8.0-wxapp/src/x11/app.cpp	2007-05-07 10:20:50.000000000 +0200
@@ -87,7 +87,7 @@
 IMPLEMENT_DYNAMIC_CLASS(wxApp, wxEvtHandler)
 
 BEGIN_EVENT_TABLE(wxApp, wxEvtHandler)
-    EVT_IDLE(wxAppBase::OnIdle)
+    EVT_IDLE(wxAppGUIBase::OnIdle)
 END_EVENT_TABLE()
 
 bool wxApp::Initialize(int& argC, wxChar **argV)
@@ -180,7 +180,7 @@
     wxSetDetectableAutoRepeat( true );
 
 
-    if ( !wxAppBase::Initialize(argC, argV) )
+    if ( !wxAppGUIBase::Initialize(argC, argV) )
         return false;
 
 #if wxUSE_UNICODE
@@ -205,7 +205,7 @@
     delete wxClientWidgetHashTable;
     wxClientWidgetHashTable = NULL;
 
-    wxAppBase::CleanUp();
+    wxAppGUIBase::CleanUp();
 }
 
 wxApp::wxApp()
@@ -660,7 +660,7 @@
     delete wxLog::SetActiveTarget(new wxLogStderr);
 #endif
 
-    if (!wxAppBase::OnInitGui())
+    if (!wxAppGUIBase::OnInitGui())
         return false;
 
     Display *dpy = wxGlobalDisplay();
@@ -835,7 +835,7 @@
     // While the GUI isn't working that well, just print out the
     // message.
 #if 1
-    wxAppBase::OnAssert(file, line, cond, msg);
+    wxAppGUIBase::OnAssert(file, line, cond, msg);
 #else
     wxString msg2;
     msg2.Printf("At file %s:%d: %s", file, line, msg);
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/x11/evtloop.cpp wxWidgets-2.8.0-wxapp/src/x11/evtloop.cpp
--- wxWidgets-2.8.0/src/x11/evtloop.cpp	2007-05-09 14:51:12.826854000 +0200
+++ wxWidgets-2.8.0-wxapp/src/x11/evtloop.cpp	2007-05-09 13:01:10.000000000 +0200
@@ -143,19 +143,19 @@
 // wxEventLoop running and exiting
 // ----------------------------------------------------------------------------
 
-wxEventLoop::~wxEventLoop()
+wxGUIEventLoop::~wxGUIEventLoop()
 {
     wxASSERT_MSG( !m_impl, _T("should have been deleted in Run()") );
 }
 
-int wxEventLoop::Run()
+int wxGUIEventLoop::Run()
 {
     // event loops are not recursive, you need to create another loop!
     wxCHECK_MSG( !IsRunning(), -1, _T("can't reenter a message loop") );
 
     m_impl = new wxEventLoopImpl;
 
-    wxEventLoopActivator activate(this);
+    wxEventLoopActivator activate(wx_static_cast(wxEventLoop *, this));
 
     m_impl->m_keepGoing = true;
     while ( m_impl->m_keepGoing )
@@ -191,7 +191,7 @@
     return exitcode;
 }
 
-void wxEventLoop::Exit(int rc)
+void wxGUIEventLoop::Exit(int rc)
 {
     wxCHECK_RET( IsRunning(), _T("can't call Exit() if not running") );
 
@@ -203,13 +203,13 @@
 // wxEventLoop message processing dispatching
 // ----------------------------------------------------------------------------
 
-bool wxEventLoop::Pending() const
+bool wxGUIEventLoop::Pending() const
 {
     XFlush( wxGlobalDisplay() );
     return (XPending( wxGlobalDisplay() ) > 0);
 }
 
-bool wxEventLoop::Dispatch()
+bool wxGUIEventLoop::Dispatch()
 {
     XEvent event;
 
diff -ruN -xlibsample.bkl -xhtml2wxhelp -x'*.xml' -x'*.bak' -x'*.xpm' -x'*.r' -x'*.hqx' -x'*.po' -x'*.hhc' -x'*.hhp' -x'*.test' -xCVS -x '*.spec' -x'*.orig' -x'.#*' -x'*~' -x'makefile.*' -x'Makefile.*' -x'*.m4' -x'*.dsp' -x'*.kdev*' -x '.*' -xconfigure -x autom4te.cache -x '*.local.bkgen' -x '*.vc' -x '*.dsw' -x '*.vcproj' -x '*.sln' -x '.#*' -x autom4te.cache -x Doxyfile wxWidgets-2.8.0/src/x11/utils.cpp wxWidgets-2.8.0-wxapp/src/x11/utils.cpp
--- wxWidgets-2.8.0/src/x11/utils.cpp	2007-05-09 14:51:53.289382750 +0200
+++ wxWidgets-2.8.0-wxapp/src/x11/utils.cpp	2007-05-09 13:03:06.000000000 +0200
@@ -35,6 +35,7 @@
 
 #include "wx/apptrait.h"
 #include "wx/generic/private/timer.h"
+#include "wx/evtloop.h"
 
 #include <ctype.h>
 #include <stdarg.h>
@@ -170,6 +171,11 @@
     return wxPORT_X11;
 }
 
+wxEventLoop* wxGUIAppTraits::CreateEventLoop() 
+{
+    return new wxEventLoop;
+};
+
 // ----------------------------------------------------------------------------
 // display info
 // ----------------------------------------------------------------------------
Files wxWidgets-2.8.0/tests/intl/fr/internat.mo and wxWidgets-2.8.0-wxapp/tests/intl/fr/internat.mo differ
Files wxWidgets-2.8.0/wxPython/demo/data/resource.wdr and wxWidgets-2.8.0-wxapp/wxPython/demo/data/resource.wdr differ

 	  	 
