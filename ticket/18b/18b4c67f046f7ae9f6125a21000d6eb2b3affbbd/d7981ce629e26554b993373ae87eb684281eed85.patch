--- C:\dev\sdk\wxWidgets-2.6.3\src\msw\ole\dataobj.orig.cpp	2006-10-27 11:42:16.000 +0200
+++ C:\dev\sdk\wxWidgets-2.6.3\src\msw\ole\dataobj.cpp	2006-10-26 19:04:32.001 +0200
@@ -1039,14 +1039,32 @@
     if ( m_filenames.GetCount() == 0 )
         return 0;
 
-    // inital size of DROPFILES struct + null byte
-    size_t sz = sizeof(DROPFILES) + (1 * sizeof(wxChar));
+    size_t sz;
+#if wxUSE_UNICODE_MSLU
+    if ( wxGetOsVersion() == wxWIN95 )
+    {
+        // inital size of DROPFILES struct + null byte
+        sz = sizeof(DROPFILES) + 1;
 
-    size_t count = m_filenames.GetCount();
-    for ( size_t i = 0; i < count; i++ )
+        size_t count = m_filenames.GetCount();
+        for ( size_t i = 0; i < count; i++ )
+        {
+            // add filename length plus null byte
+            sz += strlen(wxConvFileName->cWC2MB(m_filenames[i])) + 1;
+        }
+    }
+    else
+#endif // wxUSE_UNICODE_MSLU
     {
-        // add filename length plus null byte
-        sz += (m_filenames[i].Len() + 1) * sizeof(wxChar);
+        // inital size of DROPFILES struct + null byte
+        sz = sizeof(DROPFILES) + (1 * sizeof(wxChar));
+
+        size_t count = m_filenames.GetCount();
+        for ( size_t i = 0; i < count; i++ )
+        {
+            // add filename length plus null byte
+            sz += (m_filenames[i].Len() + 1) * sizeof(wxChar);
+        }
     }
 
     return sz;
@@ -1072,27 +1090,55 @@
     pDrop->pFiles = sizeof(DROPFILES);
     pDrop->fNC = FALSE;                 // not non-client coords
 #if wxUSE_UNICODE
+#if wxUSE_UNICODE_MSLU
+    pDrop->fWide = ((wxGetOsVersion() != wxWIN95) ? TRUE : FALSE);
+#else
     pDrop->fWide = TRUE;
+#endif // wxUSE_UNICODE_MSLU
 #else // ANSI
     pDrop->fWide = FALSE;
 #endif // Unicode/Ansi
 
-    // set start of filenames list (null separated)
-    wxChar *pbuf = (wxChar*) ((BYTE *)pDrop + sizeof(DROPFILES));
+#if wxUSE_UNICODE_MSLU
+    if ( wxGetOsVersion() == wxWIN95 )
+    {
+        // set start of filenames list (null separated)
+        char *pbuf = (char*) ((BYTE *)pDrop + sizeof(DROPFILES));
 
-    size_t count = m_filenames.GetCount();
-    for (size_t i = 0; i < count; i++ )
+        size_t count = m_filenames.GetCount();
+        for (size_t i = 0; i < count; i++ )
+        {
+            // copy filename to pbuf and add null terminator
+            wxCharBuffer char_filename(wxConvFileName->cWC2MB(m_filenames[i]));
+
+            size_t len = strlen(char_filename.data())+1;
+            memcpy(pbuf, char_filename.data(), len);
+            pbuf += len;
+        }
+
+        // add final null terminator
+        *pbuf = '\0';
+    }
+    else
+#endif // wxUSE_UNICODE_MSLU
     {
-        // copy filename to pbuf and add null terminator
-        size_t len = m_filenames[i].Len();
-        memcpy(pbuf, m_filenames[i], len*sizeof(wxChar));
-        pbuf += len;
-        *pbuf++ = wxT('\0');
+        // set start of filenames list (null separated)
+        wxChar *pbuf = (wxChar*) ((BYTE *)pDrop + sizeof(DROPFILES));
+
+        size_t count = m_filenames.GetCount();
+        for (size_t i = 0; i < count; i++ )
+        {
+            // copy filename to pbuf and add null terminator
+            size_t len = m_filenames[i].Len();
+            memcpy(pbuf, m_filenames[i], len*sizeof(wxChar));
+            pbuf += len;
+            *pbuf++ = wxT('\0');
+        }
+
+        // add final null terminator
+        *pbuf = wxT('\0');
     }
 
-    // add final null terminator
-    *pbuf = wxT('\0');
-
     return true;
 #else
     return false;


 	  	 
