Index: src/unix/mediactrl.cpp
===================================================================
--- src/unix/mediactrl.cpp	(revision 69760)
+++ src/unix/mediactrl.cpp	(working copy)
@@ -1155,11 +1155,20 @@
 //-----------------------------------------------------------------------------
 // wxGStreamerMediaBackend::Load (File version)
 //
-// Just calls DoLoad() with a prepended file scheme
+// Escap some chars, then just call DoLoad() with a prepended file scheme.
+// gstreamer (I use 0.10.11) interprets '#' and '%' as special char in file
+// uris.
+// To work around this, we escape it here. Other special chars seem to behave
+// correctly like normal characters.
 //-----------------------------------------------------------------------------
 bool wxGStreamerMediaBackend::Load(const wxString& fileName)
 {
-    return DoLoad(wxString( wxT("file://") ) + fileName);
+   wxString uristring = wxT("file://") + fileName;
+
+   uristring.Replace('%', wxT("%25"));
+   uristring.Replace('#', wxT("%23"));
+
+   return DoLoad(uristring);
 }
 
 //-----------------------------------------------------------------------------
@@ -1172,18 +1181,20 @@
 //-----------------------------------------------------------------------------
 bool wxGStreamerMediaBackend::Load(const wxURI& location)
 {
+    wxString uristring = location.BuildURI();
+
     if(location.GetScheme().CmpNoCase(wxT("file")) == 0)
     {
-        wxString uristring = location.BuildUnescapedURI();
-
         //Workaround GstURI leading "//" problem and make sure it leads
         //with that
-        return DoLoad(wxString(wxT("file://")) +
-                      uristring.Right(uristring.length() - 5)
-                     );
+		// Assume file uri with one or no slash after "file:" as uri without a
+		// hostname - so we need three slashes!
+        if(uristring.Mid(5, 1) != "/")
+           uristring = wxT("file:///") + uristring.Mid(5);
+        else if(uristring.Mid(6, 1) != '/')
+           uristring = wxT("file:///") + uristring.Mid(6);
     }
-    else
-        return DoLoad(location.BuildURI());
+    return DoLoad(uristring);
 }
 
 //-----------------------------------------------------------------------------
