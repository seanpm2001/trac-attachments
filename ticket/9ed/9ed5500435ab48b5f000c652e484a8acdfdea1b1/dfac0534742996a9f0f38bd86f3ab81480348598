diff -ru2 wxWidgets-cvs-orig/include/wx/generic/progdlgg.h wxWidgets-cvs-patch/include/wx/generic/progdlgg.h
--- wxWidgets-cvs-orig/include/wx/generic/progdlgg.h	Sat Jul 10 17:44:36 2004
+++ wxWidgets-cvs-patch/include/wx/generic/progdlgg.h	Thu Jul 29 20:11:44 2004
@@ -93,4 +93,8 @@
    // time when the dialog was created
    unsigned long m_timeStart;
+   // time when the dialog was closed or cancelled
+   unsigned long m_timeStop;
+   // time between the moment the dialog was closed/cancelled and resume
+   unsigned long m_break;
 
    // parent top level window (may be NULL)
@@ -111,4 +115,15 @@
    // the maximum value
    int m_maximum;
+
+   // saves the time when elapsed time was updated so there is only one
+   // update per second
+   unsigned long m_last_timeupdate;
+   // tells how often a change of the estimated time has to be confirmed
+   // before it is actually displayed - this reduces the frequence of updates
+   // of estimated and remaining time
+   const int m_delay;
+   // counts the confirmations
+   int m_ctdelay;
+   unsigned long m_display_estimated;
 
 #if defined(__WXMSW__ ) || defined(__WXPM__)
diff -ru2 wxWidgets-cvs-orig/src/generic/progdlgg.cpp wxWidgets-cvs-patch/src/generic/progdlgg.cpp
--- wxWidgets-cvs-orig/src/generic/progdlgg.cpp	Sat Jul 10 17:46:06 2004
+++ wxWidgets-cvs-patch/src/generic/progdlgg.cpp	Thu Jul 29 20:20:54 2004
@@ -86,5 +86,6 @@
                                    wxWindow *parent,
                                    int style)
-                : wxDialog(parent, wxID_ANY, title)
+                : wxDialog(parent, wxID_ANY, title),
+                  m_delay(3)
 {
     // we may disappear at any moment, let the others know about it
@@ -165,4 +166,6 @@
     // create the estimated/remaining/total time zones if requested
     m_elapsed = m_estimated = m_remaining = (wxStaticText*)NULL;
+    m_display_estimated = m_last_timeupdate = m_break = 0;
+    m_ctdelay = 0;
 
     // if we are going to have at least one label, remmeber it in this var
@@ -331,10 +334,48 @@
     {
         unsigned long elapsed = wxGetCurrentTime() - m_timeStart;
-        unsigned long estimated = (unsigned long)(( (double) elapsed * m_maximum ) / ((double)value)) ;
-        unsigned long remaining = estimated - elapsed;
+        if (    m_last_timeupdate < elapsed
+             || value == m_maximum
+           )
+        {
+            m_last_timeupdate = elapsed;
+            unsigned long estimated = m_break +
+                  (unsigned long)(( (double) (elapsed-m_break) * m_maximum ) / ((double)value)) ;
+            if (    estimated > m_display_estimated
+                 && m_ctdelay >= 0
+               )
+            {
+                ++m_ctdelay;
+            }
+            else if (    estimated < m_display_estimated
+                      && m_ctdelay <= 0
+                    )
+            {
+                --m_ctdelay;
+            }
+            else
+            {
+                m_ctdelay = 0;
+            }
+            if (    m_ctdelay >= m_delay          // enough confirmations for a higher value
+                 || m_ctdelay <= (m_delay*-1)     // enough confirmations for a lower value
+                 || value == m_maximum            // to stay consistent
+                 || elapsed > m_display_estimated // to stay consistent
+                 || ( elapsed > 0 && elapsed < 4 ) // additional updates in the beginning
+               )
+            {
+                m_display_estimated = estimated;
+                m_ctdelay = 0;
+            }
+        }
+
+        unsigned long display_remaining = m_display_estimated - elapsed;
+        if ( display_remaining < 0 )
+        {
+            display_remaining = 0;
+        }
 
         SetTimeLabel(elapsed, m_elapsed);
-        SetTimeLabel(estimated, m_estimated);
-        SetTimeLabel(remaining, m_remaining);
+        SetTimeLabel(m_display_estimated, m_estimated);
+        SetTimeLabel(display_remaining, m_remaining);
     }
 
@@ -394,4 +435,6 @@
 {
     m_state = Continue;
+    m_ctdelay = m_delay; // force an update of the elapsed/estimated/remaining time
+    m_break += wxGetCurrentTime()-m_timeStop;
 
     // it may have been disabled by OnCancel(), so enable it back to let the
@@ -432,4 +475,7 @@
         // request has been noticed
         m_btnAbort->Disable();
+
+        // save the time when the dialog was stopped
+        m_timeStop = wxGetCurrentTime();
     }
 }
@@ -451,4 +497,6 @@
         // next Update() will notice it
         m_state = Canceled;
+        m_btnAbort->Disable();
+        m_timeStop = wxGetCurrentTime();
     }
 }

 	  	 
