Index: auibook.cpp
===================================================================
--- auibook.cpp	(revision 47901)
+++ auibook.cpp	(working copy)
@@ -1904,12 +1904,14 @@
 // as the Show() method on this class is "unplugged"
 static void ShowWnd(wxWindow* wnd, bool show)
 {
+#if wxUSE_MDI
     if (wnd->IsKindOf(CLASSINFO(wxAuiMDIChildFrame)))
     {
         wxAuiMDIChildFrame* cf = (wxAuiMDIChildFrame*)wnd;
         cf->DoShow(show);
     }
     else
+#endif
     {
         wnd->Show(show);
     }
@@ -2332,11 +2334,13 @@
             page.window->SetSize(m_rect.x, m_rect.y + m_tab_ctrl_height,
                                  m_rect.width, m_rect.height - m_tab_ctrl_height);
 
+#if wxUSE_MDI
             if (page.window->IsKindOf(CLASSINFO(wxAuiMDIChildFrame)))
             {
                 wxAuiMDIChildFrame* wnd = (wxAuiMDIChildFrame*)page.window;
                 wnd->ApplyMDIChildFrameRect();
             }
+#endif
         }
     }
 
@@ -2716,6 +2720,7 @@
         return false;
 
     // actually destroy the window now
+#if wxUSE_MDI
     if (wnd->IsKindOf(CLASSINFO(wxAuiMDIChildFrame)))
     {
         // delete the child frame with pending delete, as is
@@ -2724,6 +2729,7 @@
             wxPendingDelete.Append(wnd);
     }
     else
+#endif
     {
         wnd->Destroy();
     }
@@ -3725,12 +3731,13 @@
             if (!e.IsAllowed())
                 return;
 
-
+#if wxUSE_MDI
             if (close_wnd->IsKindOf(CLASSINFO(wxAuiMDIChildFrame)))
             {
                 close_wnd->Close();
             }
             else
+#endif
             {
                 int main_idx = m_tabs.GetIdxFromWindow(close_wnd);
                 wxCHECK_RET( main_idx != wxNOT_FOUND, _T("no page to delete?") );

 	  	 
