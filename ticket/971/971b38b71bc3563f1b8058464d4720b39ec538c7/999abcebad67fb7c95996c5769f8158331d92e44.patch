Index: src/common/filefn.cpp
===================================================================
--- src/common/filefn.cpp	(revision 69445)
+++ src/common/filefn.cpp	(working copy)
@@ -248,7 +248,7 @@
     if (!fn.Normalize(wxPATH_NORM_TILDE|wxPATH_NORM_LONG|wxPATH_NORM_ENV_VARS))
         return wxEmptyString;
 
-    wxASSERT_MSG(!fn.IsDir(), wxT("Cannot search for directories; only for files"));
+    wxASSERT_MSG(!fn.IsDir(), wxT("Cannot search for directories; only for files."));
     if (fn.IsAbsolute())
         strend = fn.GetFullName();      // search for the file name and ignore the path part
     else
@@ -1072,7 +1072,7 @@
     {
         // the file probably doesn't exist or we haven't the rights to read
         // from it anyhow
-        wxLogSysError(_("Impossible to get permissions for file '%s'"),
+        wxLogSysError(_("Impossible to get permissions for file '%s'."),
                       file1.c_str());
         return false;
     }
@@ -1086,7 +1086,7 @@
     // file2 with the correct permissions in the next step
     if ( wxFileExists(file2)  && (!overwrite || !wxRemoveFile(file2)))
     {
-        wxLogSysError(_("Impossible to overwrite the file '%s'"),
+        wxLogSysError(_("Impossible to overwrite the file '%s'."),
                       file2.c_str());
         return false;
     }
@@ -1140,7 +1140,7 @@
     // however
     if ( chmod(file2.fn_str(), fbuf.st_mode) != 0 )
     {
-        wxLogSysError(_("Impossible to set permissions for the file '%s'"),
+        wxLogSysError(_("Impossible to set permissions for the file '%s'."),
                       file2.c_str());
         return false;
     }
@@ -1185,6 +1185,7 @@
     return true;
   }
   // Give up
+  wxLogSysError(_("File '%s' couldn't be renamed '%s'."), file1, file2);
   return false;
 }
 
@@ -1205,7 +1206,7 @@
 #else
     int res = unlink(file.fn_str());
 #endif
-
+    if (res) wxLogSysError(_("File '%s' couldn't be removed."), file);
     return res == 0;
 }
 
@@ -1251,7 +1252,7 @@
   #endif
 #endif // !MSW/MSW
     {
-        wxLogSysError(_("Directory '%s' couldn't be created"), dir);
+        wxLogSysError(_("Directory '%s' couldn't be created."), dir);
         return false;
     }
 
@@ -1275,7 +1276,7 @@
     if ( wxRmDir(dir.fn_str()) != 0 )
   #endif
     {
-        wxLogSysError(_("Directory '%s' couldn't be deleted"), dir);
+        wxLogSysError(_("Directory '%s' couldn't be deleted."), dir);
         return false;
     }
 
@@ -1345,7 +1346,7 @@
 
     if ( !gs_dir->IsOpened() )
     {
-        wxLogSysError(_("Cannot enumerate files '%s'"), spec);
+        wxLogSysError(_("Cannot enumerate files '%s'."), spec);
         return wxEmptyString;
     }
 
@@ -1468,7 +1469,7 @@
 
     if ( !ok )
     {
-        wxLogSysError(_("Failed to get the working directory"));
+        wxLogSysError(_("Failed to get the working directory."));
 
         // VZ: the old code used to return "." on error which didn't make any
         //     sense at all to me - empty string is a better error indicator
@@ -1546,7 +1547,9 @@
     if (d.length() == 2)
         return true;
     }
-    return (::DosSetCurrentDir(d.c_str()) == 0);
+    bool os2Success = (::DosSetCurrentDir(d.c_str()) == 0);
+    if (!os2Success) wxLogSysError(_("Could not Set Working Directory.");
+    return os2Success;
 #elif defined(__UNIX__) || defined(__WXMAC__) || defined(__DOS__)
     return (chdir(wxFNSTRINGCAST d.fn_str()) == 0);
 #elif defined(__WINDOWS__)
@@ -1555,9 +1558,12 @@
 #ifdef __WXWINCE__
     // No equivalent in WinCE
     wxUnusedVar(d);
+    wxLogSysError(_("Could not Set Working Directory.");
     return false;
 #else
-    return (bool)(SetCurrentDirectory(d.fn_str()) != 0);
+    bool win32Success = (bool)(SetCurrentDirectory(d.fn_str()) != 0);
+    if (!win32Success) wxLogSysError(_("Could not Set Working Directory."));
+    return win32Success;
 #endif
 #else
     // Must change drive, too.
@@ -1579,7 +1585,7 @@
         }
     }
     bool success = (chdir(WXSTRINGCAST d) == 0);
-
+    if (!success) wxLogSysError(_("Could not Set Working Directory.");
     return success;
 #endif
 
