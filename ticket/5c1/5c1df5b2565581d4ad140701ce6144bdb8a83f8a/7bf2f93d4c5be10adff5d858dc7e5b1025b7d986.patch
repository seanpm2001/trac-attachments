Index: demo/agw/UltimateVirtualDemo.py
===================================================================
--- demo/agw/UltimateVirtualDemo.py	(revision 64596)
+++ demo/agw/UltimateVirtualDemo.py	(working copy)
@@ -63,7 +63,7 @@
         self.SetColumnWidth(2, ULC.ULC_AUTOSIZE_FILL)
 
         self.SetItemCount(1000000)
-
+        
         self.attr1 = ULC.UltimateListItemAttr()
         self.attr1.SetBackgroundColour(wx.NamedColour("yellow"))
 
@@ -108,7 +108,17 @@
     def OnGetItemText(self, item, col):
         return "Item %d, column %d" % (item, col)
 
+    def OnGetItemTextColour(self, item, col):
+        if item == 0 and col == 0:
+            return wx.Colour(255,0,0)
+        elif item == 0 and col == 1:
+            return wx.Colour(0,255,0)
+        elif item == 0 and col == 2:
+            return wx.Colour(0,0,255)
+        else:
+            return None
 
+
     def OnGetItemColumnImage(self, item, column):
 
         return self.randomLists[item%5]
Index: wx/lib/agw/ultimatelistctrl.py
===================================================================
--- wx/lib/agw/ultimatelistctrl.py	(revision 64832)
+++ wx/lib/agw/ultimatelistctrl.py	(working copy)
@@ -2559,9 +2559,10 @@
         :param `colour`: an instance of `wx.Colour`.
         """
 
-        if colour == wx.NullColour:
-            self._hasColour = False
-            del self._colour
+        if colour == wx.NullColour or colour == None:
+            if self._hasColour:
+                self._hasColour = False
+                del self._colour
             return
         
         self._hasColour = True
@@ -3844,7 +3845,7 @@
 
                 self._gi._rectHighlight.width = self._gi._rectIcon.width
                 self._gi._rectHighlight.height = self._gi._rectIcon.height
-
+                
         elif mode == ULC_LIST:
 
             s = item.GetTextForMeasuring()
@@ -3921,7 +3922,7 @@
                     self._gi._rectLabel.x = self._gi._rectAll.x + 2
                 else:
                     self._gi._rectLabel.x = self._gi._rectAll.x + 2 + (spacing/2) - (self._gi._rectLabel.width/2)
-
+                    
                 self._gi._rectLabel.y = self._gi._rectAll.y + self._gi._rectAll.height + 2 - self._gi._rectLabel.height
                 self._gi._rectHighlight.x = self._gi._rectLabel.x - 2
                 self._gi._rectHighlight.y = self._gi._rectLabel.y - 2
@@ -4396,7 +4397,7 @@
         boldFont.SetWeight(wx.BOLD)
 
         for col, item in enumerate(self._items):
-
+          
             if not self._owner.IsColumnShown(col):
                 self.HideItemWindow(item)
                 continue
@@ -4462,7 +4463,9 @@
             if item.HasText():
 
                 coloured = item.HasColour()
-                oldDC = dc.GetTextForeground()
+                
+                c = dc.GetTextForeground()
+                oldTF = wx.Colour(c.Red(),c.Green(),c.Blue())
                 oldFT = dc.GetFont()
 
                 font = item.HasFont()
@@ -4490,7 +4493,7 @@
                 self.DrawTextFormatted(dc, item.GetText(), line, col, itemRect, overflow)
 
                 if coloured:
-                    dc.SetTextForeground(oldDC)
+                    dc.SetTextForeground(oldTF)
 
                 if font:
                     dc.SetFont(oldFT)
@@ -6323,6 +6326,7 @@
         countCol = self.GetColumnCount()
         for col in xrange(countCol):
             ld.SetText(col, listctrl.OnGetItemText(line, col))
+            ld.SetColour(col, listctrl.OnGetItemTextColour(line, col))
             ld.SetImage(col, listctrl.OnGetItemColumnImage(line, col))
             kind = listctrl.OnGetItemColumnKind(line, col)
             ld.SetKind(col, kind)
@@ -7818,7 +7822,7 @@
         """
 
         parent = self.GetParent()
-
+        
         # we send a list_key event up        
         if self.HasCurrent():
             le = UltimateListEvent(wxEVT_COMMAND_LIST_KEY_DOWN, self.GetParent().GetId())
@@ -12229,8 +12233,23 @@
         # this is a pure virtual function, in fact - which is not really pure
         # because the controls which are not virtual don't need to implement it
         raise Exception("UltimateListCtrl.OnGetItemText not supposed to be called")
+    
+    
+    def OnGetItemTextColour(self, item, col):
+        """
+        This function **must** be overloaded in the derived class for a control with
+        ``ULC_VIRTUAL`` style. It should return a wx.Colour object or None for
+        the default color.
 
+        :param `item`: an integer specifying the item index;
+        :param `col`: the column index to which the item belongs to.
+        """
 
+        # this is a pure virtual function, in fact - which is not really pure
+        # because the controls which are not virtual don't need to implement it
+        raise Exception("UltimateListCtrl.OnGetItemTextColour not supposed to be called")
+
+
     def OnGetItemImage(self, item):
         """
         This function **must** be overloaded in the derived class for a control with
