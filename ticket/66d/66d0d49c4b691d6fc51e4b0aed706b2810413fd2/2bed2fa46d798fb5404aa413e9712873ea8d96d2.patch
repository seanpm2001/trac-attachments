diff --git a/src/gtk/textentry.cpp b/src/gtk/textentry.cpp
index 0a89c11..519087e 100644
--- a/src/gtk/textentry.cpp
+++ b/src/gtk/textentry.cpp
@@ -242,6 +242,19 @@ public:
         g_signal_handlers_disconnect_by_data(GetGtkEntry(), this);
     }
 
+    // Helper we use to ensure proper switching between different 
+    // wxTextAutoCompleteData types.
+    static void Delete(wxTextAutoCompleteData*& data)
+    {
+        if ( data )
+        {
+            data->DisableCompletion();
+
+            delete data;
+            data = NULL;
+        }
+    }
+
     virtual ~wxTextAutoCompleteData()
     {
         // Do not call DisableCompletion() here, it would result in problems
@@ -709,6 +722,9 @@ bool wxTextEntry::DoAutoCompleteStrings(const wxArrayString& choices)
     // Try to update the existing data first.
     if ( !m_autoCompleteData || !m_autoCompleteData->ChangeStrings(choices) )
     {
+        // Get rid of the old data, if any, or somthing horrible will happen !
+        wxTextAutoCompleteData::Delete( m_autoCompleteData );
+
         // If it failed, try creating a new object for fixed completion.
         wxTextAutoCompleteFixed* const ac = wxTextAutoCompleteFixed::New(this);
         if ( !ac )
@@ -716,7 +732,6 @@ bool wxTextEntry::DoAutoCompleteStrings(const wxArrayString& choices)
 
         ac->ChangeStrings(choices);
 
-        delete m_autoCompleteData;
         m_autoCompleteData = ac;
     }
 
@@ -728,26 +743,19 @@ bool wxTextEntry::DoAutoCompleteCustom(wxTextCompleter *completer)
     // First deal with the case when we just want to disable auto-completion.
     if ( !completer )
     {
-        if ( m_autoCompleteData )
-        {
-            // This is not done in dtor because it's unnecessary when replacing
-            // one completer with another one, and even dangerous, when the
-            // control is being destroyed anyhow, so we need to call it
-            // explicitly here to really disable completion.
-            m_autoCompleteData->DisableCompletion();
-
-            delete m_autoCompleteData;
-            m_autoCompleteData = NULL;
-        }
-        //else: Nothing to do, we hadn't used auto-completion even before.
+        // Get rid of the old data, if any, or somthing horrible will happen !
+        wxTextAutoCompleteData::Delete( m_autoCompleteData );
     }
     else // Have a valid completer.
     {
         // As above, try to update the completer of the existing object first
         // and fall back on creating a new one.
         if ( !m_autoCompleteData ||
-                !m_autoCompleteData->ChangeCompleter(completer) )
+             !m_autoCompleteData->ChangeCompleter(completer) )
         {
+            // Get rid of the old data, if any, or somthing horrible will happen !
+            wxTextAutoCompleteData::Delete( m_autoCompleteData );
+
             wxTextAutoCompleteDynamic* const
                 ac = wxTextAutoCompleteDynamic::New(this);
             if ( !ac )
@@ -755,7 +763,6 @@ bool wxTextEntry::DoAutoCompleteCustom(wxTextCompleter *completer)
 
             ac->ChangeCompleter(completer);
 
-            delete m_autoCompleteData;
             m_autoCompleteData = ac;
         }
     }
