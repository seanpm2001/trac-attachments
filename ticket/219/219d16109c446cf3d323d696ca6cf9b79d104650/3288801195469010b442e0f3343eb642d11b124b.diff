Index: wxWidgets-cvs/include/wx/evtloop.h
--- wxWidgets-cvs/include/wx/evtloop.h	2004-05-23 16:50:21.000000000 -0400
+++ wxWidgets/include/wx/evtloop.h	2004-07-14 14:08:58.031250000 -0400
@@ -19,6 +19,9 @@
 #include "wx/utils.h"
 
 class WXDLLEXPORT wxEventLoopImpl;
+class WXDLLEXPORT wxEventLoopActivator;
+class WXDLLEXPORT wxEventLoopImplTiedPtr;
+
 
 // ----------------------------------------------------------------------------
 // wxEventLoop: a GUI event loop
@@ -48,6 +51,12 @@
     // is the event loop running now?
     virtual bool IsRunning() const;
 
+    // perform any setup required by custom versions of Run()
+    virtual void StartRunning();
+
+    // perform any cleanup required by custom versions of Run()
+    virtual void StopRunning();
+
     // return currently active (running) event loop, may be NULL
     static wxEventLoop *GetActive() { return ms_activeLoop; }
 
@@ -60,6 +69,8 @@
     // an exception thrown from inside the loop)
     virtual void OnExit() { }
 
+    wxEventLoopActivator *m_activator;
+    wxEventLoopImplTiedPtr *m_implTie;
 
     // the pointer to currently active loop
     static wxEventLoop *ms_activeLoop;
Index: wxWidgets-cvs/src/msw/evtloop.cpp
--- wxWidgets-cvs/src/msw/evtloop.cpp	2004-05-23 16:52:58.000000000 -0400
+++ wxWidgets/src/msw/evtloop.cpp	2004-07-14 14:11:06.390625000 -0400
@@ -233,6 +233,18 @@
     return m_impl != NULL;
 }
 
+void wxEventLoop::StartRunning()
+{
+    m_activator = new wxEventLoopActivator(&ms_activeLoop, this);
+    m_implTie = new wxEventLoopImplTiedPtr(&m_impl, new wxEventLoopImpl);
+}
+
+void wxEventLoop::StopRunning()
+{
+    delete m_implTie;
+    delete m_activator;
+}
+
 int wxEventLoop::Run()
 {
     // event loops are not recursive, you need to create another loop!

 	  	 
