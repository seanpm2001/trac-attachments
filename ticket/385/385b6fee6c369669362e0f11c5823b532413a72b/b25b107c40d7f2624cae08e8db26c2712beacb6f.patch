Index: include/wx/xml/xml.h
===================================================================
--- include/wx/xml/xml.h	(revision 69019)
+++ include/wx/xml/xml.h	(working copy)
@@ -20,6 +20,7 @@
 #include "wx/object.h"
 #include "wx/list.h"
 #include "wx/versioninfo.h"
+#include "wx/clntdata.h"
 
 #ifdef WXMAKINGDLL_XML
     #define WXDLLIMPEXP_XML WXEXPORT
@@ -160,6 +161,9 @@
 
     int GetLineNumber() const { return m_lineNo; }
 
+    wxClientData* GetUserData() const { return m_userData; }
+    void SetUserData(wxClientData* data);
+
     void SetType(wxXmlNodeType type) { m_type = type; }
     void SetName(const wxString& name) { m_name = name; }
     void SetContent(const wxString& con) { m_content = con; }
@@ -208,6 +212,7 @@
 #endif // WXWIN_COMPATIBILITY_2_8/!WXWIN_COMPATIBILITY_2_8
 
 private:
+    wxClientData* m_userData;
     wxXmlNodeType m_type;
     wxString m_name;
     wxString m_content;
Index: src/xml/xml.cpp
===================================================================
--- src/xml/xml.cpp	(revision 69019)
+++ src/xml/xml.cpp	(working copy)
@@ -55,7 +55,7 @@
     : m_type(type), m_name(name), m_content(content),
       m_attrs(attrs), m_parent(parent),
       m_children(NULL), m_next(next),
-      m_lineNo(lineNo),
+      m_lineNo(lineNo), m_userData(NULL),
       m_noConversion(false)
 {
     wxASSERT_MSG ( type != wxXML_ELEMENT_NODE || content.empty(), "element nodes can't have content" );
@@ -77,7 +77,7 @@
                      int lineNo)
     : m_type(type), m_name(name), m_content(content),
       m_attrs(NULL), m_parent(NULL),
-      m_children(NULL), m_next(NULL),
+      m_children(NULL), m_next(NULL), m_userData(NULL),
       m_lineNo(lineNo), m_noConversion(false)
 {
     wxASSERT_MSG ( type != wxXML_ELEMENT_NODE || content.empty(), "element nodes can't have content" );
@@ -85,6 +85,7 @@
 
 wxXmlNode::wxXmlNode(const wxXmlNode& node)
 {
+    m_userData = NULL;
     m_next = NULL;
     m_parent = NULL;
     DoCopy(node);
@@ -92,6 +93,8 @@
 
 wxXmlNode::~wxXmlNode()
 {
+    wxDELETE(m_userData);
+
     wxXmlNode *c, *c2;
     for (c = m_children; c; c = c2)
     {
@@ -153,6 +156,12 @@
     return false;
 }
 
+void wxXmlNode::SetUserData(wxClientData* data)
+{
+    wxDELETE(m_userData);
+    m_userData = data;
+}
+
 bool wxXmlNode::GetAttribute(const wxString& attrName, wxString *value) const
 {
     wxCHECK_MSG( value, false, "value argument must not be NULL" );
