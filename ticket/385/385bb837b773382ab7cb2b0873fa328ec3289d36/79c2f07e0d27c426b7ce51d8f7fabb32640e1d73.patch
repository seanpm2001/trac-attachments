Index: wx/lib/agw/customtreectrl.py
===================================================================
--- wx/lib/agw/customtreectrl.py	(revision 72369)
+++ wx/lib/agw/customtreectrl.py	(working copy)
@@ -830,18 +830,20 @@
     :note: This class is inspired by the wxWidgets generic implementation of :class:`TreeItemAttr`.
     """
     
-    def __init__(self, colText=wx.NullColour, colBack=wx.NullColour, font=wx.NullFont):
+    def __init__(self, colText=wx.NullColour, colBack=wx.NullColour, colBorder=wx.NullColour,font=wx.NullFont):
         """
         Default class constructor.
         For internal use: do not call it in your code!
 
         :param `colText`: the text colour, an instance of :class:`Colour`;
         :param `colBack`: the tree item background colour, an instance of :class:`Colour`;
+        :param `colBorder`: the tree item border colour, an instance of :class:`Colour`;
         :param `font`: the tree item font, an instance of :class:`Font`.
         """
         
         self._colText = colText
         self._colBack = colBack
+        self._colBorder=colBorder
         self._font = font
 
     # setters
@@ -864,6 +866,14 @@
         
         self._colBack = colBack
 
+    def SetBorderColour(self,colBorder):
+        """
+        Sets the item border colour attribute.
+
+        :param `colBack`: an instance of `wx.Colour`.
+        """
+
+        self._colBorder = colBorder
         
     def SetFont(self, font):
         """
@@ -895,7 +905,15 @@
         
         return self._colBack != wx.NullColour
 
+    def HasBorderColour(self):
+        """
+        Returns whether the attribute has border colour.
 
+        :return: ``True`` if the background colour attribute has been set, ``False`` otherwise.
+        """
+
+        return self._colBorder != wx.NullColour
+
     def HasFont(self):
         """
         Returns whether the attribute has font.
@@ -926,6 +944,13 @@
 
         return self._colBack
 
+    def GetBorderColour(self):
+        """
+        Returns the attribute border colour.
+
+        :return: An instance of `wx.Colour`.
+        """
+        return self._colBorder
     
     def GetFont(self):
         """
@@ -6515,7 +6540,11 @@
                 colBg = self._backgroundColour
             
             dc.SetBrush(wx.Brush(colBg, wx.SOLID))
-            dc.SetPen(wx.TRANSPARENT_PEN)
+            if attr and attr.HasBorderColour():
+                colBorder=attr.GetBorderColour()
+                dc.SetPen(wx.Pen(colBorder,1, wx.SOLID))
+            else:
+                dc.SetPen(wx.TRANSPARENT_PEN)
         
         offset = (self.HasAGWFlag(TR_ROW_LINES) and [1] or [0])[0]
         
Index: wx/lib/agw/hypertreelist.py
===================================================================
--- wx/lib/agw/hypertreelist.py	(revision 72369)
+++ wx/lib/agw/hypertreelist.py	(working copy)
@@ -2770,8 +2770,13 @@
             colBg = self._backgroundColour
         
         dc.SetBrush(wx.Brush(colBg, wx.SOLID))
-        dc.SetPen(wx.TRANSPARENT_PEN)
 
+        if attr and attr.HasBorderColour():
+            colBorder=attr.GetBorderColour()
+            dc.SetPen(wx.Pen(colBorder,1, wx.SOLID))
+        else:
+            dc.SetPen(wx.TRANSPARENT_PEN)
+
         if self.HasAGWFlag(wx.TR_FULL_ROW_HIGHLIGHT):
 
             itemrect = wx.Rect(0, item.GetY() + off_h, total_w-1, total_h - off_h)
