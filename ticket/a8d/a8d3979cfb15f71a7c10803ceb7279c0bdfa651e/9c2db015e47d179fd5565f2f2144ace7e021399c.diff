Index: src/osx/textctrl_osx.cpp
===================================================================
--- src/osx/textctrl_osx.cpp	(revision 74618)
+++ src/osx/textctrl_osx.cpp	(working copy)
@@ -398,6 +398,10 @@
     switch ( key )
     {
         case WXK_RETURN:
+            if ( wxIsInputContextEnabled() )
+            {
+                break;
+            }
             if (m_windowStyle & wxTE_PROCESS_ENTER)
             {
                 wxCommandEvent event(wxEVT_TEXT_ENTER, m_windowId);
@@ -430,6 +434,10 @@
             break;
 
         case WXK_TAB:
+            if ( wxIsInputContextEnabled() )
+            {
+                break;
+            }
             if ( !(m_windowStyle & wxTE_PROCESS_TAB))
             {
                 int flags = 0;
Index: src/osx/cocoa/utils.mm
===================================================================
--- src/osx/cocoa/utils.mm	(revision 74618)
+++ src/osx/cocoa/utils.mm	(working copy)
@@ -483,6 +483,20 @@
     return bitmap;
 }
 
+bool wxIsInputContextEnabled()
+{
+    NSTextInputContext *context = [NSTextInputContext currentInputContext];
+    if ( context )
+    {
+        id<NSTextInputClient> client = [context client];
+        return [client hasMarkedText];
+    }
+    else
+    {
+        return false;
+    }
+}
+
 #endif // wxUSE_GUI
 
 #endif // wxOSX_USE_COCOA
Index: include/wx/utils.h
===================================================================
--- include/wx/utils.h	(revision 74618)
+++ include/wx/utils.h	(working copy)
@@ -843,5 +843,10 @@
                        WXHINSTANCE module = 0);
 #endif // __WINDOWS__
 
+#ifdef wxOSX_USE_COCOA
+// Return whether input context is enabled.
+bool wxIsInputContextEnabled();
+#endif // wxOSX_USE_COCOA
+
 #endif
     // _WX_UTILSH__
