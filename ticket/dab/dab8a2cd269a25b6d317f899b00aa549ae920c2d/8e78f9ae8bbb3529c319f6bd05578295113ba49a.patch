--- wxSVN\samples\validate\validate.h	2011-03-01 16:55:59.500000000 +0100
+++ mispatches\valnum_20110413\validate.h	2011-04-13 12:05:12.531250000 +0200
@@ -87,5 +87,6 @@
 {
 public:
-    MyComboBoxValidator(const MyComboBoxValidator& tocopy) { m_var=tocopy.m_var; }
+    MyComboBoxValidator(const MyComboBoxValidator& tocopy)
+	    : wxValidator() { m_var=tocopy.m_var; }
     MyComboBoxValidator(wxString* var) { m_var=var; }

--- wxSVN\samples\validate\validate.cpp	2011-03-01 16:55:59.921875000 +0100
+++ mispatches\valnum_20110413\validate.cpp	2011-04-12 12:46:08.281250000 +0200
@@ -66,5 +66,5 @@
     m_listbox_choices.Add(0);
     m_intValue = 0;
-    m_doubleValue = 12354.31;
+    m_doubleValue = 1234.567;
 }
 
@@ -306,8 +306,9 @@
     // ------------------------------------------------------
 
-    wxIntegerValidator<int> valInt(&g_data.m_intValue,
+    wxNumValidator<int> valInt(&g_data.m_intValue,
                                    wxNUM_VAL_THOUSANDS_SEPARATOR |
                                    wxNUM_VAL_ZERO_AS_BLANK);
-    valInt.SetMin(0); // Only allow positive numbers
+
+    valInt.SetMin(10); // Only allow positive numbers > 10
 
     m_numericTextInt = new wxTextCtrl
@@ -321,6 +322,6 @@
                                 valInt
                             );
-    m_numericTextInt->SetToolTip("uses wxIntegerValidator to accept positive "
-                                 "integers only");
+    m_numericTextInt->SetToolTip("uses wxNumValidator to accept positive "
+                                 "integers > 10 only");
 
     m_numericTextDouble = new wxTextCtrl
@@ -332,13 +333,14 @@
                                 wxDefaultSize,
                                 wxTE_RIGHT,
-                                wxMakeFloatingPointValidator
+                                wxMakeNumValidator
                                 (
-                                    3,
                                     &g_data.m_doubleValue,
                                     wxNUM_VAL_THOUSANDS_SEPARATOR |
-                                    wxNUM_VAL_NO_TRAILING_ZEROES
+                                    wxNUM_VAL_NO_TRAILING_ZEROES,
+                                    4
                                 )
                               );
-    m_numericTextDouble->SetToolTip("uses wxFloatingPointValidator with 3 decimals");
+    m_numericTextDouble->SetToolTip("uses wxNumValidator for a double "
+                                    "with at most 3 decimals");
     wxBoxSizer *numSizer = new wxBoxSizer( wxHORIZONTAL );
     numSizer->Add( m_numericTextInt, 1, wxALL, 10 ); 
