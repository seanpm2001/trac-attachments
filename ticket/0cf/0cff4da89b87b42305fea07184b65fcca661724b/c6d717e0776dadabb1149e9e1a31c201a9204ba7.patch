Index: docs/doxygen/Doxyfile_inc
===================================================================
--- docs/doxygen/Doxyfile_inc	(revision 54227)
+++ docs/doxygen/Doxyfile_inc	(working copy)
@@ -165,9 +165,24 @@
 # This is to get around a bug in Doxygen that prevents use of '{' or '}'
 # inside of any aliased command in parameters.
 ALIASES += leftCurly="{"
-ALIASES += rightCurly="}"
+ALIASES += rightCurly="}"
+
+# Sample documentation related aliases
+# For indicating the a directory containing a sample
+ALIASES += sampledir{1}="<b>Location:</b><PRE class='fragment'>samples/\1</PRE>"
+# For refering to the corresponding sample in a class document or a overview
+# Usually placed in the queue of @see
+ALIASES += sample{1}="\ref page_samples_\1"
+# For generating a general description for a sample
+# \1 could be a class or an overview or a descriptive sentence
+# Shall be replaced by manual written description soon
+ALIASES += sampleabout{1}="This sample demonstrates \1."
+# For indicating the necessary condition of a sample or a class
+# \1 is the wxUSE_XXX macro
+ALIASES += buildwith{1}="<b>Build Note:</b><br>You may need to build the wxWidgets library with <tt>\1</tt> being set to 1 to be able to make it work, please read comments in @c <wx/setup_inc.h> for more info."
+ALIASES += buildwith{2}="<b>Build Note:</b><br>You may need to build the wxWidgets library with <tt>\1</tt> and <tt>\2</tt> being set to 1 to be able to make it work, please read comments in @c <wx/setup_inc.h> for more info."
+
 
-
 #---------------------------------------------------------------------------
 # Build related configuration options
 #---------------------------------------------------------------------------
@@ -270,7 +285,7 @@
 BINARY_TOC             = NO
 TOC_EXPAND             = NO
 DISABLE_INDEX          = NO
-ENUM_VALUES_PER_LINE   = 4
+ENUM_VALUES_PER_LINE   = 1
 GENERATE_TREEVIEW      = NO
 TREEVIEW_WIDTH         = 250
 
Index: docs/doxygen/mainpages/samples.h
===================================================================
--- docs/doxygen/mainpages/samples.h	(revision 54227)
+++ docs/doxygen/mainpages/samples.h	(working copy)
@@ -10,7 +10,7 @@
 
 @page page_samples Included Samples
 
-Probably the best way to learn wxWidgets is by reading the source of some 70+
+Probably the best way to learn wxWidgets is by reading the source of some 80+
 samples provided with it. Many aspects of wxWidgets programming can be learnt
 from them, but sometimes it is not simple to just choose the right sample to
 look at. This overview aims at describing what each sample does/demonstrates to
@@ -18,7 +18,7 @@
 didn't help. They also provide some notes about using the samples and what
 features of wxWidgets are they supposed to test.
 
-There are currently more than 70 different samples as part of wxWidgets:
+There are currently more than 80 different samples as part of wxWidgets:
 the list in this page is not complete!
 You should start your tour of wxWidgets with the @ref page_samples_minimal
 which is the wxWidgets version of "Hello, world!".
@@ -40,151 +40,182 @@
 Finally, it might be helpful to do a search in the entire sample directory if
 you can't find the sample showing the control you are interested in by
 name. Most classes contained in wxWidgets occur in at least one of the samples.
+
+<!--
+The following sample list is generated by executing command
+
+ls | egrep '[a-z]+' | egrep '^[a-z]+$' | sed 's/^/@li @sample\{/' | sed 's/$/\}/'
+
+in wxWidgets/samples
+
+TODO: Organize them in a more human-readable way.
+-->
 
 @beginInvisibleTable
 <tr><td>
-@li @ref page_samples_access
-@li @ref page_samples_animate
-@li @ref page_samples_artprovider
-@li @ref page_samples_aui
-@li @ref page_samples_calendar
-@li @ref page_samples_config
-@li @ref page_samples_controls
-@li @ref page_samples_debugrpt
-@li @ref page_samples_dialogs
-@li @ref page_samples_dialup
-@li @ref page_samples_dnd
-@li @ref page_samples_docview
-@li @ref page_samples_dragimag
-@li @ref page_samples_event
-</td><td>
-@li @ref page_samples_except
-@li @ref page_samples_exec
-@li @ref page_samples_font
-@li @ref page_samples_grid
-@li @ref page_samples_html
-@li @ref page_samples_image
-@li @ref page_samples_internat
-@li @ref page_samples_layout
-@li @ref page_samples_listctrl
-@li @ref page_samples_mediaplayer
-@li @ref page_samples_minimal
-@li @ref page_samples_notebook
-@li @ref page_samples_render
-</td><td>
-@li @ref page_samples_scrollsub
-@li @ref page_samples_sockets
-@li @ref page_samples_sound
-@li @ref page_samples_statbar
-@li @ref page_samples_taborder
-@li @ref page_samples_text
-@li @ref page_samples_thread
-@li @ref page_samples_toolbar
-@li @ref page_samples_treectrl
-@li @ref page_samples_widgets
-@li @ref page_samples_wizard
+@li @sample{access}
+@li @sample{animate}
+@li @sample{artprov}
+@li @sample{aui}
+@li @sample{calendar}
+@li @sample{caret}
+@li @sample{collpane}
+@li @sample{combo}
+@li @sample{config}
+@li @sample{console}
+@li @sample{controls}
+@li @sample{dataview}
+@li @sample{debugrpt}
+@li @sample{dialogs}
+@li @sample{dialup}
+@li @sample{display}
+@li @sample{dnd}
+@li @sample{docview}
+@li @sample{docvwmdi}
+@li @sample{dragimag}
+@li @sample{drawing}
+@li @sample{editlbox}
+@li @sample{erase}
+@li @sample{event}
+@li @sample{except}
+@li @sample{exec}
+@li @sample{font}
+</td><td>
+@li @sample{grid}
+@li @sample{help}
+@li @sample{htlbox}
+@li @sample{html}
+@li @sample{image}
+@li @sample{internat}
+@li @sample{ipc}
+@li @sample{joytest}
+@li @sample{keyboard}
+@li @sample{layout}
+@li @sample{listctrl}
+@li @sample{mdi}
+@li @sample{mediaplayer}
+@li @sample{memcheck}
+@li @sample{menu}
+@li @sample{mfc}
+@li @sample{minimal}
+@li @sample{mobile}
+@li @sample{nativdlg}
+@li @sample{notebook}
+@li @sample{oleauto}
+@li @sample{opengl}
+@li @sample{ownerdrw}
+@li @sample{popup}
+@li @sample{power}
+@li @sample{printing}
+</td><td>
+@li @sample{regtest}
+@li @sample{render}
+@li @sample{richtext}
+@li @sample{sashtest}
+@li @sample{scroll}
+@li @sample{scrollsub}
+@li @sample{shaped}
+@li @sample{sockets}
+@li @sample{sound}
+@li @sample{splash}
+@li @sample{splitter}
+@li @sample{statbar}
+@li @sample{stc}
+@li @sample{svg}
+@li @sample{taborder}
+@li @sample{taskbar}
+@li @sample{text}
+@li @sample{thread}
+@li @sample{toolbar}
+@li @sample{treectrl}
+@li @sample{typetest}
+@li @sample{validate}
+@li @sample{vscroll}
+@li @sample{widgets}
+@li @sample{wizard}
+@li @sample{wrapsizer}
+@li @sample{xrc}
 </td></tr>
 @endTable
 
-
-<!--
-
-TODO: write descriptions for the samples:
-
-caret
-collpane
-combo
-console
-dataview
-display
-docvwmdi
-drawing
-editlbox
-erase
-event
-except
-help
-htlbox
-ipc
-joytest
-keyboard
-mdi
-memcheck
-menu
-mfc
-mobile
-nativdlg
-oleauto
-opengl
-ownerdrw
-popup
-power
-printing
-regtest
-richtext
-sashtest
-scroll
-shaped
-splash
-splitter
-stc
-svg
-taskbar
-typetest
-validate
-vscroll
-xrc
-
--->
-
-
-
-
+@todo Write descriptions for the samples who description started with
+ "This sample demonstrates", they are semi-auto generated.
 <hr>
 
-
 @section page_samples_access Accessibility Sample
 
-The @c access sample shows how you can use the wxAccessible classes in a
-simple GUI program.
+This sample shows how you can use the wxAccessible classes in a
+simple GUI program.
+
+@buildwith{wxUSE_ACCESSIBILITY}
+
+@sampledir{access}
 
+@section page_samples_animate Animation Sample
 
-@section page_samples_animate Animate Sample
-
-The @c animate sample shows how you can use wxAnimationCtrl
+This sample shows how you can use wxAnimationCtrl
 control and shows concept of a platform-dependent animation encapsulated
-in wxAnimation.
+in wxAnimation.
 
+@sampledir{animate}
 
-@section page_samples_artprovider Art Provider Sample
+@section page_samples_artprov Art Provider Sample
 
-The @c artprov sample shows how you can customize the look of standard
+This sample shows how you can customize the look of standard
 wxWidgets dialogs by replacing default bitmaps/icons with your own versions.
 It also shows how you can use wxArtProvider to
 get stock bitmaps for use in your application.
+
+@sampledir{artprov}
 
+@section page_samples_aui Advanced User Interface Sample
 
-@section page_samples_aui wxAUI Sample
+@sampleabout{@ref overview_aui "AUI classes"}
+
+@sampledir{aui}
 
-@todo Write sample description.
-
-
 @section page_samples_calendar Calendar Sample
 
-This font shows the calendar control in action. It
+This sample shows the calendar control in action. It
 shows how to configure the control (see the different options in the calendar
 menu) and also how to process the notifications from it.
 
+@sampledir{calendar}
+
+@section page_samples_caret Caret Sample
+
+@sampleabout{wxCaret}
+
+@sampledir{caret}
+
+@section page_samples_collpane Collapsible Pane Sample
+
+@sampleabout{wxCollapsiblePane}
+
+@sampledir{collpane}
+
+@section page_samples_combo Combo Sample
+
+@sampleabout{wxComboBox\, wxComboCtrl and wxOwnerDrawnComboBox etc}
+
+@sampledir{combo}
+
+@section page_samples_config Configuration Sample
 
-@section page_samples_config Config Sample
-
 This sample demonstrates the wxConfig classes in a platform
 independent way, i.e. it uses text based files to store a given configuration under
 Unix and uses the Registry under Windows.
 
-See @ref overview_config for the descriptions of all features of this class.
+See @ref overview_config for the descriptions of all features of this class.
+
+@sampledir{config}
+
+@section page_samples_console Console Program Sample
+
+@sampleabout{a console program}
+
+@sampledir{console}
 
-
 @section page_samples_controls Controls Sample
 
 The controls sample is the main test program for most simple controls used in
@@ -212,10 +243,17 @@
 @li wxStaticBitmap
 @li wxRadioBox
 @li wxRadioButton
-@li wxSlider
+@li wxSlider
+
+@sampledir{controls}
 
+@section page_samples_dataview wxDataViewCtrl Sample
+
+@sampleabout{wxDataViewCtrl}
+
+@sampledir{dataview}
 
-@section page_samples_debugrpt DebugRpt Sample
+@section page_samples_debugrpt Debug Reporter Sample
 
 This sample shows how to use wxDebugReport class to
 generate a debug report in case of a program crash or otherwise. On start up,
@@ -227,14 +265,18 @@
 
 For the report processing part of the sample to work you should make available
 a Web server accepting form uploads, otherwise
-wxDebugReportUpload will report an error.
+wxDebugReportUpload will report an error.
+
+@buildwith{wxUSE_DEBUGREPORT, wxUSE_ON_FATAL_EXCEPTION}
+
+@sampledir{debugrpt}
 
-
 @section page_samples_dialogs Dialogs Sample
 
 This sample shows how to use the common dialogs available from wxWidgets. These
 dialogs are described in detail in the @ref overview_cmndlg.
 
+@sampledir{dialogs}
 
 @section page_samples_dialup Dialup Sample
 
@@ -249,8 +291,15 @@
 modem attached and (this only makes sense for Windows) list the available
 connections.
 
+@sampledir{dialup}
+
+@section page_samples_display Display Sample
+
+@sampleabout{wxDisplay}
+
+@sampledir{display}
 
-@section page_samples_dnd DnD Sample
+@section page_samples_dnd Drag & Drop Sample
 
 This sample shows both clipboard and drag and drop in action. It is quite non
 trivial and may be safely used as a basis for implementing the clipboard and
@@ -286,42 +335,75 @@
 programs as well - try Write/Wordpad, for example).
 
 Take a look at DnDShapeDataObject class to see how you may use
-wxDataObject to achieve this.
-
-
+wxDataObject to achieve this.
+
+@sampledir{dnd}
+
 @section page_samples_docview Document/View Sample
 
-@todo Write sample description.
+@sampleabout{@ref overview_docview}
+
+@sampledir{docview}
+
+@see @sample{docvwmdi}, @sample{mdi}
+
+@section page_samples_docvwmdi Document/View MDI Sample
+
+@sampleabout{@ref overview_docview in MDI}
+
+@see @sample{docview}, @sample{mdi}
+
+@sampledir{docvwmdi}
 
+@section page_samples_dragimag Drag Image Sample
 
-@section page_samples_dragimag wxDragImage Sample
+@sampleabout{wxDragImage}
+
+@sampledir{dragimag}
+
+@section page_samples_drawing Drawing Sample
+
+@sampleabout{the drawing ability of wxDC}
+
+@sampledir{drawing}
 
-@todo Write sample description.
-
-
+@section page_samples_editlbox Editable List Box Sample
+
+@sampleabout{wxEditableListBox}
+
+@sampledir{editlbox}
+
+@section page_samples_erase Erase Event Sample
+
+@sampleabout{wxEraseEvent}
+
+@sampledir{erase}
+
 @section page_samples_event Event Sample
 
-The event sample demonstrates various features of the wxWidgets events. It
-shows using dynamic events and connecting/disconnecting the event handlers
-during run time and also using
-PushEventHandler() and
-PopEventHandler().
+This sample demonstrates various features of the wxWidgets events. It
+shows how to dynamic events and connecting/disconnecting the event handlers
+during run time by using wxEvtHandler::Connect() and wxEvtHandler::Disconnect(),
+and also how to use wxWindow::PushEventHandler() and wxWindow::PopEventHandler().
+
+@sampledir{event}
 
+@section page_samples_except Exception Sample
 
-@section page_samples_except Except(ions) Sample
-
 This very simple sample shows how to use C++ exceptions in wxWidgets programs,
 i.e. where to catch the exception which may be thrown by the program code. It
 doesn't do anything very exciting by itself, you need to study its code to
 understand what goes on.
-
+
+<b>Build Note:</b><br>
 You need to build the library with @c wxUSE_EXCEPTIONS being set to @c 1
 and compile your code with C++ exceptions support to be able to build this
 sample.
+
+@sampledir{except}
 
+@section page_samples_exec External Program Execution Sample
 
-@section page_samples_exec Exec Sample
-
 The exec sample demonstrates the wxExecute and
 wxShell functions. Both of them are used to execute the
 external programs and the sample shows how to do this synchronously (waiting
@@ -329,10 +411,11 @@
 
 It also shows how to capture the output of the child process in both
 synchronous and asynchronous cases and how to kill the processes with
-wxProcess::Kill and test for their existence with
-wxProcess::Exists.
-
-
+wxProcess::Kill() and test for their existence with
+wxProcess::Exists().
+
+@sampledir{exec}
+
 @section page_samples_font Font Sample
 
 The font sample demonstrates wxFont,
@@ -340,17 +423,24 @@
 wxFontMapper classes. It allows you to see the fonts
 available (to wxWidgets) on the computer and shows all characters of the
 chosen font as well.
+
+@sampledir{font}
 
-
 @section page_samples_grid Grid Sample
 
-@todo Write sample description.
+@sampleabout{wxGrid}
+
+@sampledir{grid}
+
+@section page_samples_help Help Sample
+
+@sampleabout{wxHelpController}
+
+@sampledir{help}
 
-
 @section page_samples_html HTML Sample
 
-Eight HTML samples (you can find them in directory @c samples/html)
-cover all features of the HTML sub-library.
+Eight HTML samples cover all features of the HTML sub-library.
 
 @li @b Test demonstrates how to create wxHtmlWindow
 and also shows most supported HTML tags.
@@ -376,8 +466,15 @@
 (compatible with MS HTML Help Workshop). @e Help shows how to embed
 wxHtmlHelpController in your application
 while @e Helpview is a simple tool that only pops up the help window and
-displays help books given at command line.
+displays help books given at command line.
+
+@sampledir{html}
 
+@section page_samples_htlbox HTML List Box Sample
+
+@sampleabout{wxHtmlListBox}
+
+@sampledir{htlbox}
 
 @section page_samples_image Image Sample
 
@@ -392,16 +489,17 @@
 At the bottom of the main frame there is a test for using a monochrome bitmap by
 drawing into a wxMemoryDC. The bitmap is then drawn
 specifying the foreground and background colours with
-wxDC::SetTextForeground and
-wxDC::SetTextBackground (on the left). The
+wxDC::SetTextForeground() and
+wxDC::SetTextBackground() (on the left). The
 bitmap is then converted to a wxImage and the foreground colour (black) is
-replaced with red using wxImage::Replace.
+replaced with red using wxImage::Replace().
 
 This sample also contains the code for testing the image rotation and resizing
 and using raw bitmap access, see the corresponding menu commands.
 
+@sampledir{image}
 
-@section page_samples_internat Internat(ionalization) Sample
+@section page_samples_internat Internationalization Sample
 
 The not very clearly named internat sample demonstrates the wxWidgets
 internationalization (i18n for short from now on) features. To be more
@@ -411,7 +509,26 @@
 
 More information about this sample can be found in the @c readme.txt file in
 its directory. Please also see the @ref overview_i18n.
+
+@sampledir{internat}
 
+@section page_samples_ipc Connection Sample
+
+@sampleabout{wxConnection}
+
+@sampledir{ipc}
+
+@section page_samples_joytest Joystick Sample
+
+@sampleabout{wxJoystick}
+
+@sampledir{joytest}
+
+@section page_samples_keyboard Key Event Sample
+
+@sampleabout{wxKeyEvent}
+
+@sampledir{keyboard}
 
 @section page_samples_layout Layout Sample
 
@@ -427,28 +544,65 @@
 The menu in this sample offers two more tests, one showing how to use
 a wxBoxSizer in a simple dialog and the other one
 showing how to use sizers in connection with a wxNotebook
-class. See also wxSizer.
+class. See also wxSizer.
+
+@sampledir{layout}
 
+@section page_samples_listctrl List Control Sample
 
-@section page_samples_listctrl Listctrl Sample
-
 This sample shows the wxListCtrl control. Different modes
 supported by the control (list, icons, small icons, report) may be chosen from
 the menu.
 
 The sample also provides some timings for adding/deleting/sorting a lot of
-(several thousands) items into the control.
+(several thousands) items into the control.
+
+@sampledir{listctrl}
+
+@section page_samples_mdi MDI Sample
+
+@sampleabout{MDI}
+
+@see @sample{docview}, @sample{docvwmdi}
+
+@sampledir{mdi}
 
-
 @section page_samples_mediaplayer Mediaplayer Sample
 
 This sample demonstrates how to use all the features of
 wxMediaCtrl and play various types of sound, video,
 and other files.
 
-It replaces the old dynamic sample.
+It replaces the old @c dynamic sample.
 
-
+@sampledir{mediaplayer}
+
+@section page_samples_memcheck Memory Checking Sample
+
+@sampleabout{memory tracing using wxDebugContext}
+
+@sampledir{memcheck}
+
+@buildwith{wxUSE_MEMORY_TRACING, wxUSE_DEBUG_CONTEXT}
+
+@section page_samples_menu Menu Sample
+
+@sampleabout{wxMenu classes}
+
+@sampledir{menu}
+
+@section page_samples_mfc MFC Sample
+
+@sampleabout{how to mix MFC and wxWidgets codes}
+It pops up an initial wxWidgets frame, with a menu item
+that allows a new MFC window to be created.
+
+For build instructions please read IMPORTANT NOTES in @c mfctest.cpp.
+
+@onlyfor{wxmsw}
+
+@sampledir{mfc}
+
 @section page_samples_minimal Minimal Sample
 
 The minimal sample is what most people will know under the term Hello World,
@@ -456,6 +610,22 @@
 needed to write a program that will display a "hello" dialog. This is usually
 a good starting point for learning how to use wxWidgets.
 
+@sampledir{minimal}
+
+@section page_samples_mobile Mobile Sample
+
+@todo Figure out what this sample is written for, maybe remove it from samples,
+since it seems to an incomplete test program (for mobile phone?)
+
+@sampledir{mobile}
+
+@section page_samples_nativdlg Native Windows Dialog Sample
+
+@sampleabout{native windows dialog}
+
+@onlyfor{wxmsw}
+
+@sampledir{nativdlg}
 
 @section page_samples_notebook Notebook Sample
 
@@ -465,15 +635,97 @@
 wxChoicebook and wxTreebook in action.
 Test each of the controls, their orientation, images and pages using
 commands through menu.
+
+@sampledir{notebook}
+
+@section page_samples_oleauto OLE Automation Sample
+
+@sampleabout{OLE automation using wxAutomationObject}
+
+@onlyfor{wxmsw}
+
+@sampledir{oleauto}
+
+@section page_samples_opengl OpenGL Sample
+
+@sampleabout{wxGLCanvas}
+
+@li @b cube Draws only a cube to demonstrate how to write a basic wxWidgets OpenGL program.
+@li @b isosurf Draws a surface by reading coordinates from a dat file.
+@li @b penguin Draws a rotatable penguin by reading data from a dxf file.
+
+@sampledir{opengl}
+
+@section page_samples_ownerdrw Owner-drawn Sample
+
+@sampleabout{owner-drawn wxMenuItem\, wxCheckList and wxListBox}
+
+<!--It's weird that it doesn't need <wx/ownerdrw.h> and class wxOwnerDrawn!-->
+
+@sampledir{ownerdrw}
+
+@section page_samples_popup Popup Transient Window Sample
+
+@sampleabout{wxPopupTransientWindow}
+
+@sampledir{popup}
+
+@section page_samples_power Power Management Sample
+
+@sampleabout{wxWidgets power management}
+
+@see wxPowerEvent
+
+@sampledir{power}
+
+@section page_samples_printing Printing Sample
+
+@sampleabout{printing}
+
+@see @ref overview_printing, @ref overview_unixprinting
+
+@buildwith{wxUSE_PRINTING_ARCHITECTURE}
+
+@sampledir{printing}
+
+@section page_samples_regtest Registry Sample
+
+@sampleabout{wxRegKey}
+
+<!--Its directory name doesn't seem to be proper.-->
+
+@onlyfor{wxmsw}
+
+@sampledir{regtest}
 
-
 @section page_samples_render Render Sample
 
 This sample shows how to replace the default wxWidgets
 renderer and also how to write a shared library
 (DLL) implementing a renderer and load and unload it during the run-time.
 
-
+@sampledir{render}
+
+@section page_samples_richtext wxRichTextCtrl Sample
+
+@sampleabout{wxRichTextCtrl}
+
+@sampledir{richtext}
+
+@section page_samples_sashtest Sash Sample
+
+@sampleabout{wxSashWindow classes}
+
+@sampledir{sashtest}
+
+@section page_samples_scroll Scroll Window Sample
+
+@sampleabout{wxScrolledWindow}
+
+@see @sample{scrollsub}
+
+@sampledir{scroll}
+
 @section page_samples_scrollsub Scroll Subwindow Sample
 
 This sample demonstrates use of the ::wxScrolledWindow
@@ -482,11 +734,21 @@
 of scrolling does not show in the scrolled window itself, but in one of its subwindows.
 
 Additionally, this samples demonstrates how to optimize drawing operations in wxWidgets,
-in particular using the wxWindow::IsExposed method with
+in particular using the wxWindow::IsExposed() method with
 the aim to prevent unnecessary drawing in the window and thus reducing or removing
-flicker on screen.
-
-
+flicker on screen.
+
+@sampledir{scrollsub}
+
+@section page_samples_shaped Shaped Window Sample
+
+@sampleabout{how to implement a shaped or transparent window, and a window showing/hiding with effect}
+
+@see wxTopLevelWindow::SetShape(), wxTopLevelWindow::SetTransparent(),
+wxWindow::ShowWithEffect(), wxWindow::HideWithEffect()
+
+@sampledir{shaped}
+
 @section page_samples_sockets Sockets Sample
 
 The sockets sample demonstrates how to use the communication facilities
@@ -519,8 +781,8 @@
 TCP port number is hard-coded as 3000). Once connected, a number of
 tests are possible. Currently, three tests are implemented. They show
 how to use the basic IO calls in wxSocketBase,
-such as wxSocketBase::Read, wxSocketBase::Write,
-wxSocketBase::ReadMsg and wxSocketBase::WriteMsg,
+such as wxSocketBase::Read(), wxSocketBase::Write(),
+wxSocketBase::ReadMsg() and wxSocketBase::WriteMsg(),
 and how to set up the correct IO flags depending on what you are going to
 do. See the comments in the code for more information. Note that because
 both clients and connection objects in the server set up an event handler
@@ -537,24 +799,51 @@
 @li Tests for the recently added (and still in alpha stage) datagram sockets.
 @li New samples which actually do something useful (suggestions accepted).
 
+@sampledir{sockets}
 
 @section page_samples_sound Sound Sample
 
 The @c sound sample shows how to use wxSound for simple
 audio output (e.g. notifications).
 
+@sampledir{sound}
+
+@section page_samples_splash Splash Screen Sample
+
+@sampleabout{wxSplashScreen}
+
+@sampledir{splash}
+
+@section page_samples_splitter Splitter Window Sample
+
+@sampleabout{wxSplitterWindow}
+
+@sampledir{splitter}
+
+@section page_samples_statbar Status Bar Sample
 
-@section page_samples_statbar Statbar Sample
-
 This sample shows how to create and use wxStatusBar. Although most of the
 samples have a statusbar, they usually only create a default one and only
 do it once.
 
 Here you can see how to recreate the statusbar (with possibly different number
 of fields) and how to use it to show icons/bitmaps and/or put arbitrary
-controls into it.
-
-
+controls into it.
+
+@sampledir{statbar}
+
+@section page_samples_stc wxStyledTextCtrl Sample
+
+@sampleabout{wxStyledTextCtrl}
+
+@sampledir{stc}
+
+@section page_samples_svg SVG Sample
+
+@sampleabout{wxSVGFileDC}
+
+@sampledir{svg}
+
 @section page_samples_taborder Tab Order Sample
 
 This sample allows to test keyboard navigation (mostly done using the
@@ -564,8 +853,15 @@
 the default order of the windows in the navigation chain and of
 wxWindow::Navigate() for moving focus along this
 chain.
+
+@sampledir{taborder}
+
+@section page_samples_taskbar Task Bar Icon Sample
+
+@sampleabout{wxTaskBarIcon}
+
+@sampledir{taskbar}
 
-
 @section page_samples_text Text Sample
 
 This sample demonstrates four features: firstly the use and many variants of
@@ -587,6 +883,7 @@
 Last not least: some of the text controls have tooltips and the sample also shows
 how tooltips can be centrally disabled and their latency controlled.
 
+@sampledir{text}
 
 @section page_samples_thread Thread Sample
 
@@ -608,19 +905,20 @@
 
 See also @ref overview_thread and wxThread.
 
+@sampledir{thread}
 
-@section page_samples_toolbar Toolbar Sample
+@section page_samples_toolbar Tool Bar Sample
 
 The toolbar sample shows the wxToolBar class in action.
 
 The following things are demonstrated:
 
-@li Creating the toolbar using wxToolBar::AddTool and wxToolBar::AddControl: see
-    MyApp::InitToolbar in the sample.
+@li Creating the toolbar using wxToolBar::AddTool() and wxToolBar::AddControl(): see
+    MyApp::InitToolbar() in the sample.
 @li Using @c EVT_UPDATE_UI handler for automatically enabling/disabling
     toolbar buttons without having to explicitly call EnableTool. This is done
-    in MyFrame::OnUpdateCopyAndCut.
-@li Using wxToolBar::DeleteTool and wxToolBar::InsertTool to dynamically update the
+    in MyFrame::OnUpdateCopyAndCut().
+@li Using wxToolBar::DeleteTool() and wxToolBar::InsertTool() to dynamically update the
     toolbar.
 
 Some buttons in the main toolbar are check buttons, i.e. they stay checked when
@@ -633,8 +931,9 @@
 group, i.e. checking any of them automatically unchecks the previously
 checked one.
 
+@sampledir{toolbar}
 
-@section page_samples_treectrl Treectrl Sample
+@section page_samples_treectrl wxTreeCtrl Sample
 
 This sample demonstrates using the wxTreeCtrl class. Here
 you may see how to process various notification messages sent by this control
@@ -645,6 +944,27 @@
 sorting (in default alphabetical order as well as in custom one) is
 demonstrated here as well - try the corresponding menu entries.
 
+@sampledir{treectrl}
+
+@section page_samples_typetest Types Sample
+
+@sampleabout{wxWidgets types}
+
+@todo Rewrite its description ASAP.
+
+@sampledir{typetest}
+
+@section page_samples_validate Validator Sample
+
+@sampleabout{wxValidator}
+
+@sampledir{validate}
+
+@section page_samples_vscroll VScrolled Window Sample
+
+@sampleabout{wxVScrolledWindow}
+
+@sampledir{vscroll}
 
 @section page_samples_widgets Widgets Sample
 
@@ -655,6 +975,7 @@
 the controls programmatically, such as adding an item to a list box etc.
 All widgets are categorized for easy browsing.
 
+@sampledir{widgets}
 
 @section page_samples_wizard Wizard Sample
 
@@ -676,7 +997,21 @@
 @li Normally, the order of the pages in the wizard is known at compile-time,
     but sometimes it depends on the user choices: wxCheckboxPage shows how to
     dynamically decide which page to display next (see also
-    wxWizardPage)
+    wxWizardPage)
+
+@sampledir{wizard}
+
+@section page_samples_wrapsizer  Sample
+
+@sampleabout{wxWrapSizer}
+
+@sampledir{wrapsizer}
+
+@section page_samples_xrc XRC Sample
+
+@sampleabout{@ref overview_xrc}
+
+@sampledir{xrc}
 
 */
 
Index: interface/access.h
===================================================================
--- interface/access.h	(revision 54227)
+++ interface/access.h	(working copy)
@@ -254,6 +254,8 @@
 
     @library{wxcore}
     @category{misc}
+
+    @see @sample{access}
 */
 class wxAccessible : public wxObject
 {
Index: interface/animate.h
===================================================================
--- interface/animate.h	(revision 54227)
+++ interface/animate.h	(working copy)
@@ -52,7 +52,7 @@
 
     <!-- @appearance{animationctrl.png} -->
 
-    @see wxAnimation
+    @see wxAnimation, @sample{animate}
 */
 class wxAnimationCtrl : public wxControl
 {
@@ -189,7 +189,7 @@
     @stdobjects
     ::wxNullAnimation
 
-    @see wxAnimationCtrl
+    @see wxAnimationCtrl, @sample{animate}
 */
 class wxAnimation : public wxGDIObject
 {
Index: samples/popup/popup.cpp
===================================================================
--- samples/popup/popup.cpp	(revision 54227)
+++ samples/popup/popup.cpp	(working copy)
@@ -1,5 +1,5 @@
 /////////////////////////////////////////////////////////////////////////////
-// Name:        minimal.cpp
+// Name:        popup.cpp
 // Purpose:     Popup wxWidgets sample
 // Author:      Robert Roebling
 // Modified by:
@@ -116,7 +116,7 @@
     m_panel = new wxScrolledWindow( this, wxID_ANY );
     m_panel->SetBackgroundColour( *wxLIGHT_GREY );
 
-    // Keep this code to verify if mouse events work, they're required if 
+    // Keep this code to verify if mouse events work, they're required if
     // you're making a control like a combobox where the items are highlighted
     // under the cursor, the m_panel is set focus in the Popup() function
     m_panel->Connect(wxEVT_MOTION,
@@ -133,7 +133,7 @@
 
     m_button = new wxButton(m_panel, Minimal_PopupButton, wxT("Press Me"));
     m_spinCtrl = new wxSpinCtrl(m_panel, Minimal_PopupSpinctrl, wxT("Hello"));
-    m_mouseText = new wxStaticText(m_panel, wxID_ANY, 
+    m_mouseText = new wxStaticText(m_panel, wxID_ANY,
                                    wxT("<- Test Mouse ->"));
 
     wxBoxSizer *topSizer = new wxBoxSizer( wxVERTICAL );
@@ -200,7 +200,7 @@
     wxColour colour(*wxLIGHT_GREY);
 
     if (rect.Contains(event.GetPosition()))
-    {       
+    {
         colour = wxSystemSettings::GetColour(wxSYS_COLOUR_HIGHLIGHT);
     wxLogMessage( wxT("0x%lx SimpleTransientPopup::OnMouse pos(%d, %d)"), long(event.GetEventObject()), event.GetX(), event.GetY());
     }
Index: samples/power/power.cpp
===================================================================
--- samples/power/power.cpp	(revision 54227)
+++ samples/power/power.cpp	(working copy)
@@ -25,6 +25,7 @@
 #ifndef WX_PRECOMP
     #include "wx/app.h"
     #include "wx/frame.h"
+    #include "wx/log.h"
 #endif
 
 #include "wx/textctrl.h"
