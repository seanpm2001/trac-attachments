Index: src/gtk/app.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/gtk/app.cpp,v
retrieving revision 1.172.2.3
diff -u -r1.172.2.3 app.cpp
--- src/gtk/app.cpp	2002/10/20 10:10:56	1.172.2.3
+++ src/gtk/app.cpp	2002/10/22 13:20:03
@@ -47,7 +47,9 @@
 
 // TODO: use configure test to detect which of select()/poll() is available!
 #if defined(__DARWIN__)
-    #warning "FIXME: select must be used instead of poll (GD)"
+    #include <sys/types.h>
+    #include <sys/time.h>
+    #include <unistd.h>
 #elif defined(__VMS)
     #include <poll.h>
 #else
@@ -276,7 +278,40 @@
     // FIXME: poll is not available under Darwin/Mac OS X and this needs
     //        to be implemented using select instead (GD)
     //        what about other BSD derived systems?
-    res = -1;
+    fd_set readfds;
+    fd_set writefds;
+    fd_set exceptfds;
+    /* Convert gint timeout (ms) to struct timeval (s/us) */
+    struct timeval tv_timeout;
+    tv_timeout.tv_sec = timeout/1000;
+    tv_timeout.tv_usec = (timeout%1000)*1000;
+    int select_nfds=-1;
+    for(guint i=0; i<nfds; i++) {
+        if(ufds[i].events & G_IO_IN)
+            FD_SET(ufds[i].fd,&readfds);
+        if(ufds[i].events & G_IO_PRI) {
+            wxLogDebug("Requested poll pri which is not available with select");
+            /* FIXME: Should I do the following? */
+            // FD_SET(ufds[i].fd,&readfds);
+        }
+        if(ufds[i].events & G_IO_OUT)
+            FD_SET(ufds[i].fd,&writefds);
+        FD_SET(ufds[i].fd,&exceptfds);
+        if(ufds[i].fd>select_nfds)
+            select_nfds = ufds[i].fd;
+    }
+    select_nfds++;
+    res = select(select_nfds, &readfds, &writefds, &exceptfds, &tv_timeout);
+    for(guint i=0; i<nfds; i++) {
+        wxASSERT(ufds[i].fd < FD_SETSIZE);
+        ufds[i].revents = 0;
+        if(FD_ISSET(ufds[i].fd, &readfds))
+            ufds[i].revents |= G_IO_IN;
+        if(FD_ISSET(ufds[i].fd, &writefds))
+            ufds[i].revents |= G_IO_OUT;
+        if(FD_ISSET(ufds[i].fd, &exceptfds))
+            ufds[i].revents |= G_IO_ERR; /* FIXME: Is this accurate? */
+    }
 #else
     res = poll( (struct pollfd*) ufds, nfds, timeout );
 #endif

 	  	 
