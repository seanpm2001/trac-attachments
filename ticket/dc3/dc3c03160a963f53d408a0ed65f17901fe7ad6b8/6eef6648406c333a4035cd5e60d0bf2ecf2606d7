diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/utils.cpp ./utils.cpp
18,21d17
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
34,35d29
< #ifndef __WXMAC_X__  // The following clash with unix/utilsunx.cpp
< 
125,126d118
< #endif // ! __WXMAC_X__
< 
278,279d269
< #ifndef __WXMAC_X__
< 
286,287d275
< #endif  // ! __WXMAC_X__
< 
342,346d329
< }
< 
< // HACK for wxMAC X wxDisplaySizeMM
< void wxDisplaySizeMM(int *width, int *height)
< {
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/utilsexc.cpp ./utilsexc.cpp
16,19d15
< #ifdef __WXMAC_X__
< #include <Carbon/Carbon.h>
< #endif
< 
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/wave.cpp ./wave.cpp
18c18
< #include "wx/wave.h"
---
> #include "wx/mac/wave.h"
diff /Users/mark/cvs/wxWindows/wxWindows/src/mac/window.cpp ./window.cpp
16,17d15
< 
< #include "wx/window.h"
30,31d27
< #include "wx/scrolbar.h"
< #include "wx/statbox.h"
38c34
< //#include "wx/mac/window.h"
---
> #include "wx/mac/window.h"
114,116d109
< WindowRef wxWindow::s_macWindowInUpdate;
< 
< 
729,730c722
<                              int *descent, int *externalLeading, 
<                              const wxFont *theFont ) const
---
>                            int *descent, int *externalLeading, const wxFont *theFont ) const
732,819c724,738
<    long lx, ly, ld, le;
<    const wxFont *fontToUse = theFont;
< 
<    if ( !fontToUse ) {
<       fontToUse = &m_font;
<    }
< #ifndef __WXMAC_X__
<    wxClientDC dc( this ) ;
< 
<    dc.GetTextExtent( string , &lx , &ly , &ld, &le, fontToUse ) ;
< #else
<    const wxFontRefData *font_ref = (wxFontRefData *)fontToUse->GetRefData();
< 
<    if(font_ref != NULL) {
<       ::TextFont( font_ref->m_macFontNum ) ;
<       ::TextSize( font_ref->m_macFontSize ) ;
<       ::TextFace( font_ref->m_macFontStyle ) ;
<    }
< 
<    FontInfo fi;
< 
<    ::GetFontInfo(&fi);
<    ly = fi.descent + fi.ascent;
<    ld = fi.descent;
<    le = fi.leading;
< 
<    if(x != NULL)
<    {
<       const char *text = NULL ;
<       int length = 0 ;
<       wxString macText ;
< 
<       if ( wxApp::s_macDefaultEncodingIsPC )
<       {
<          macText = wxMacMakeMacStringFromPC( string ) ;
<          text = macText ;
<          length = macText.Length() ;
<       }
<       else
<       {
<          text = string ;
<          length = string.Length() ;
<       }
<       int laststop = 0 ;
<       int i = 0 ;
<       int curwidth = 0 ;
< 
<       lx = 0 ;
< 
<       while( i < length )
<       {
<          if( text[i] == 13 || text[i] == 10)
<          {
<             ly += fi.descent + fi.ascent + fi.leading;
<             curwidth = ::TextWidth( text , laststop , i - laststop ) ;
<             if ( curwidth > lx ) {
<                lx = curwidth;
<             }
<             laststop = i+1 ;
<          }
<          i++ ;
<       }
<       curwidth = ::TextWidth( text , laststop , i - laststop ) ;
<       if ( curwidth > lx ) {
<          lx = curwidth;
<       }
<    }
<    // Replace existing window font
<    const wxFontRefData *font = (wxFontRefData *)m_font.GetRefData();
< 
<    if(font_ref != NULL) {
<       ::TextFont( font->m_macFontNum ) ;
<       ::TextSize( font->m_macFontSize ) ;
<       ::TextFace( font->m_macFontStyle ) ;
<    }
< #endif
<    if ( externalLeading ) {
<       *externalLeading = le;
<    }
<    if ( descent ) {
<       *descent = ld;
<    }
<    if ( x ) {
<       *x = lx;
<    }
<    if ( y ) {
<       *y = ly;
<    }
---
>     const wxFont *fontToUse = theFont;
>     if ( !fontToUse )
>         fontToUse = &m_font;
>         
>     wxClientDC dc( this ) ;
>     long lx,ly,ld,le ;
>     dc.GetTextExtent( string , &lx , &ly , &ld, &le, fontToUse ) ;
>     if ( externalLeading )
>     	*externalLeading = le ;
>     if ( descent )
>     	*descent = ld ;
>     if ( x )
>     	*x = lx ;
>     if ( y )
>     	*y = ly ;
824,826c743
< 	WindowRef window = GetMacRootWindow();
<    RGBColor backcolor;
< 
---
> 	WindowRef window = GetMacRootWindow() ;
833,836c750,751
< 		// on mac we have the difficult situation, that 3dface gray can be 
<       // different colours, depending whether
< 		// it is on a notebook panel or not, in order to take care of that we
<       // walk up the hierarchy until we have
---
> 		// on mac we have the difficult situation, that 3dface gray can be different colours, depending whether
> 		// it is on a notebook panel or not, in order to take care of that we walk up the hierarchy until we have
842,843c757
< 				if ( parent->m_backgroundColour !=
<                  wxSystemSettings::GetSystemColour(wxSYS_COLOUR_3DFACE ) )
---
> 				if ( parent->m_backgroundColour != wxSystemSettings::GetSystemColour(wxSYS_COLOUR_3DFACE ) )
846,848c760,761
<                backcolor = parent->m_backgroundColour.GetPixel();
<                RGBBackColor(&backcolor) ;
<                break ;
---
>   				RGBBackColor( &parent->m_backgroundColour.GetPixel()) ;
>   				break ;
850,851c763
< 				if( parent->IsKindOf( CLASSINFO( wxControl ) ) &&
<                 ((wxControl*)parent)->GetMacControl() )
---
> 				if( parent->IsKindOf( CLASSINFO( wxControl ) ) && ((wxControl*)parent)->GetMacControl() )
853,856c765,766
< 					// if we have the normal colours in the hierarchy but another
<                // control etc. -> use it's background
< 					if ( parent->IsKindOf( CLASSINFO( wxNotebook ) ) || 
<                     parent->IsKindOf( CLASSINFO( wxTabCtrl ) ))
---
> 					// if we have the normal colours in the hierarchy but another control etc. -> use it's background
> 					if ( parent->IsKindOf( CLASSINFO( wxNotebook ) ) || parent->IsKindOf( CLASSINFO( wxTabCtrl ) ))
858,859c768
< 						UMAApplyThemeBackground(kThemeBackgroundTabPane, rect, 
<                                           kThemeStateActive,8,true);
---
> 						UMAApplyThemeBackground(kThemeBackgroundTabPane, rect, kThemeStateActive,8,true);
874,876c783
< 				UMASetThemeWindowBackground( window , 
<                                          kThemeBrushDialogBackgroundActive ,
<                                          false ) ;
---
> 				UMASetThemeWindowBackground( window , kThemeBrushDialogBackgroundActive , false ) ;
879,881c786,788
< 	else {
<       backcolor = m_backgroundColour.GetPixel();
<   		RGBBackColor(&backcolor) ;
---
> 	else
> 	{
>   		RGBBackColor( &m_backgroundColour.GetPixel()) ;
1734a1642
> 	WindowPtr frontWindow ;
1737,1741c1645,1649
<     case inContent:		
<        {
<           MacFireMouseEvent( ev ) ;
<        }
<        break ;
---
> 		case inContent:		
> 			{
> 				MacFireMouseEvent( ev ) ;
> 			}
> 			break ;
1746a1655
> 	WindowPtr frontWindow ;
1749,1753c1658,1662
<     case inContent:		
<        {
<           MacFireMouseEvent( ev ) ;
<        }
<        break ;
---
> 		case inContent:		
> 			{
> 				MacFireMouseEvent( ev ) ;
> 			}
> 			break ;
1756d1664
< 
1773d1680
< 
1782,1783c1689
< 			if ( m_backgroundColour ==
<               wxSystemSettings::GetSystemColour(wxSYS_COLOUR_APPWORKSPACE) )
---
> 			if ( m_backgroundColour == wxSystemSettings::GetSystemColour(wxSYS_COLOUR_APPWORKSPACE) )
1785,1787c1691
<             UMASetThemeWindowBackground( window ,
<                                          kThemeBrushDocumentWindowBackground,
<                                          false ) ;
---
> 					UMASetThemeWindowBackground( window , kThemeBrushDocumentWindowBackground , false ) ;
1789,1790c1693
< 			else if (  m_backgroundColour == 
<                     wxSystemSettings::GetSystemColour(wxSYS_COLOUR_3DFACE ) )
---
> 			else if (  m_backgroundColour == wxSystemSettings::GetSystemColour(wxSYS_COLOUR_3DFACE ) )
1792,1796c1695,1698
<             // on mac we have the difficult situation, that 3dface gray
<             // can be different colours, depending whether
<             // it is on a notebook panel or not, in order to take care of
<             // that we walk up the hierarchy until we have
<             // either a non gray background color or a non control window
---
> 					// on mac we have the difficult situation, that 3dface gray can be different colours, depending whether
> 					// it is on a notebook panel or not, in order to take care of that we walk up the hierarchy until we have
> 					// either a non gray background color or a non control window
> 		
1798,1845c1700,1738
<             wxWindow* parent = GetParent() ;
<             while( parent )
<             {
<                if ( parent->GetMacRootWindow() != window )
<                {
<                   // we are in a different window on the mac system
<                   parent = NULL ;
<                   break ;
<                }
<                if( parent->IsKindOf( CLASSINFO( wxControl ) ) &&
<                    ((wxControl*)parent)->GetMacControl() )
<                {
<                   if (parent->m_backgroundColour != 
<                       wxSystemSettings::GetSystemColour(wxSYS_COLOUR_3DFACE))
<                   {
<                      // if we have any other colours in the hierarchy
<                      RGBColor backcolor;
< 
<                      backcolor = parent->m_backgroundColour.GetPixel();
<                      RGBBackColor(&backcolor) ;
<                      break ;
<                   }
<                   // if we have the normal colours in the hierarchy but
<                   // another control etc. -> use it's background
<                   if ( parent->IsKindOf( CLASSINFO( wxNotebook ) ) ||
<                        parent->IsKindOf( CLASSINFO( wxTabCtrl ) ))
<                   {
<                      Rect box ;
<                      GetRegionBounds( updatergn , &box) ;
<                      UMAApplyThemeBackground(kThemeBackgroundTabPane, &box ,
<                                              kThemeStateActive,8,true);
<                      break ;
<                   }
<                }
<                else
<                {
<                   parent = NULL ;
<                   break ;
<                }
<                parent = parent->GetParent() ;
<             }
<             if ( !parent )
<             {
<                // if there is nothing special -> use default
<                UMASetThemeWindowBackground( window , 
<                                             kThemeBrushDialogBackgroundActive,
<                                             false ) ;
<             }
---
> 					wxWindow* parent = GetParent() ;
> 					while( parent )
> 					{
> 						if ( parent->GetMacRootWindow() != window )
> 						{
> 							// we are in a different window on the mac system
> 							parent = NULL ;
> 							break ;
> 						}
> 						
> 						if( parent->IsKindOf( CLASSINFO( wxControl ) ) && ((wxControl*)parent)->GetMacControl() )
> 						{
> 							if ( parent->m_backgroundColour != wxSystemSettings::GetSystemColour(wxSYS_COLOUR_3DFACE ) )
> 							{
> 								// if we have any other colours in the hierarchy
> 			  					RGBBackColor( &parent->m_backgroundColour.GetPixel()) ;
> 			  					break ;
> 							}
> 							// if we have the normal colours in the hierarchy but another control etc. -> use it's background
> 							if ( parent->IsKindOf( CLASSINFO( wxNotebook ) ) || parent->IsKindOf( CLASSINFO( wxTabCtrl ) ))
> 							{
> 								Rect box ;
> 								GetRegionBounds( updatergn , &box) ;
> 								UMAApplyThemeBackground(kThemeBackgroundTabPane, &box , kThemeStateActive,8,true);
> 								break ;
> 							}
> 						}
> 						else
> 						{
> 							parent = NULL ;
> 							break ;
> 						}
> 						parent = parent->GetParent() ;
> 					}
> 					if ( !parent )
> 					{
> 						// if there is nothing special -> use default
> 						UMASetThemeWindowBackground( window , kThemeBrushDialogBackgroundActive , false ) ;
> 					}
1849,1850c1742
<             RGBColor backcolor = m_backgroundColour.GetPixel();
< 		  		RGBBackColor(&backcolor) ;
---
> 		  		RGBBackColor( &m_backgroundColour.GetPixel()) ;
1964a1857
> 	WindowRef window = NULL ;
1969c1862
< 		if ( iter->m_macWindowData ) {
---
> 		if ( iter->m_macWindowData )
1971c1864
<       }
---
> 
1973c1866
< 	}
---
> 	} 
2019,2020c1912
< 	bool hasBoth = ( m_hScrollBar && m_hScrollBar->IsShown()) && 
<       ( m_vScrollBar && m_vScrollBar->IsShown()) ;
---
> 	bool hasBoth = ( m_hScrollBar && m_hScrollBar->IsShown()) && ( m_vScrollBar && m_vScrollBar->IsShown()) ;
2022c1914
< 
---
> 	
2024c1916
< 
---
> 	
2043a1936
> 	WindowRef window = NULL ;
2054a1948
> 
2191,2193c2085
< bool wxWindow::MacSetPortDrawingParams(const Point &localOrigin, 
<                                        const Rect & clipRect, WindowRef window,
<                                        wxWindow* win ) 
---
> bool wxWindow::MacSetPortDrawingParams( const Point & localOrigin, const Rect & clipRect, WindowRef window , wxWindow* win ) 
2197c2089
< 
---
> 		
2200,2201d2091
<    RGBColor forecolor, backcolor;
< 
2211,2214c2101,2102
<    forecolor = win->GetForegroundColour().GetPixel();
<    backcolor = win->GetBackgroundColour().GetPixel();
< 	::RGBBackColor(&forecolor) ;
< 	::RGBForeColor(&backcolor) ;
---
> 	::RGBBackColor(& win->GetBackgroundColour().GetPixel() ) ;
> 	::RGBForeColor(& win->GetForegroundColour().GetPixel() ) ;
2216c2104
< 
---
> 	
2218,2221c2106
< 	::UMASetThemeWindowBackground(win->m_macWindowData->m_macWindow,
<                                  win->m_macWindowData->m_macWindowBackgroundTheme,
<                                  false ) ;
< 
---
> 	::UMASetThemeWindowBackground(  win->m_macWindowData->m_macWindow , win->m_macWindowData->m_macWindowBackgroundTheme ,  false ) ;
2335,2342c2220
< 
< // min:  Moved function here
< WindowRef wxWindow::MacGetWindowInUpdate()
< {
<    return s_macWindowInUpdate;
< }
< 
< #if 0   // Remove the following to functions
---
> /*
2372,2373c2250
< #endif  // Remove code
< 
---
> */
2411,2412c2288
< 
< #if 0    // Remove the following two functions
---
> /*
2443c2319
< #endif
---
> */
2499a2376
> 
Only in /Users/mark/cvs/wxWindows/wxWindows/src/mac/: xpm
Only in /Users/mark/cvs/wxWindows/wxWindows/src/mac/: xpm_hack.c

 	  	 
