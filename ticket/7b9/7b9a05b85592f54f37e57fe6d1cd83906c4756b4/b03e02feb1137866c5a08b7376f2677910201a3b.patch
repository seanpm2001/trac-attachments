Index: tests/benchmarks/printfbench.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/tests/benchmarks/printfbench.cpp,v
retrieving revision 1.1
diff -bu2 -r1.1 tests/benchmarks/printfbench.cpp
--- tests/benchmarks/printfbench.cpp
+++ tests/benchmarks/printfbench.cpp
@@ -18,5 +18,14 @@
 // ----------------------------------------------------------------------------

-#include <wx/string.h>
+#include "testprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+#ifndef WX_PRECOMP
+    #include <wx/string.h>
+#endif // WX_PRECOMP
+
 #include <wx/stopwatch.h>
 #include <wx/utils.h>
Index: tests/strings/vsnprintf.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/tests/strings/vsnprintf.cpp,v
retrieving revision 1.7
diff -bu2 -r1.7 tests/strings/vsnprintf.cpp
--- tests/strings/vsnprintf.cpp
+++ tests/strings/vsnprintf.cpp
@@ -77,4 +77,9 @@
 private:
     CPPUNIT_TEST_SUITE( VsnprintfTestCase );
+        CPPUNIT_TEST( D );
+        CPPUNIT_TEST( X );
+        CPPUNIT_TEST( O );
+        CPPUNIT_TEST( P );
+        CPPUNIT_TEST( N );
         CPPUNIT_TEST( E );
         CPPUNIT_TEST( F );
@@ -88,4 +93,9 @@
     CPPUNIT_TEST_SUITE_END();

+    void D();
+    void X();
+    void O();
+    void P();
+    void N();
     void E();
     void F();
@@ -113,4 +123,63 @@
 }

+void VsnprintfTestCase::D()
+{
+    CMP3("+123456", "%+d", 123456);
+    CMP3("-123456", "%d", -123456);
+    CMP3(" 123456", "% d", 123456);
+    CMP3("    123456", "%10d", 123456);
+    CMP3("0000123456", "%010d", 123456);
+    CMP3("-123456   ", "%-10d", -123456);
+}
+
+void VsnprintfTestCase::X()
+{
+    CMP3("ABCD", "%X", 0xABCD);
+    CMP3("0XABCD", "%#X", 0xABCD);
+    CMP3("0xabcd", "%#x", 0xABCD);
+}
+
+void VsnprintfTestCase::O()
+{
+    CMP3("1234567", "%o", 01234567);
+    CMP3("01234567", "%#o", 01234567);
+}
+
+void VsnprintfTestCase::P()
+{
+    // WARNING: printing of pointers is not fully standard.
+    //          GNU prints them as %#x except for NULL pointers which are
+    //          printed as '(nil)'.
+    //          MSVC always print them as %8X on 32 bit systems and as %16X
+    //          on 64 bit systems
+#ifdef __VISUALC__
+
+    if (sizeof(size_t) == 4)              // 32 bit compiler
+    {
+        CMP3("00ABCDEF", "%p", (void*)0xABCDEF);
+        CMP3("00000000", "%p", (void*)NULL);
+    }
+    else if (sizeof(size_t) == 8)         // 64 bit compiler
+    {
+        // FIXME: to test!
+        CMP3("0000ABCDEFABCDEF", "%p", (void*)0xABCDEFABCDEF);
+        CMP3("0000000000000000", "%p", (void*)NULL);
+    }
+
+#elif defined(__GNUG__)
+    // FIXME: to test !
+    CMP3("0xabcdef", "%p", (void*)0xABCDEF);
+    CMP3("(nil)", "%p", (void*)NULL);
+#endif
+}
+
+void VsnprintfTestCase::N()
+{
+    int nchar;
+
+    wxSnprintf(buf, MAX_TEST_LEN, "%d %s%n\n", 3, "bears", &nchar);
+    CPPUNIT_ASSERT_EQUAL( 7, nchar );
+}
+
 void VsnprintfTestCase::E()
 {

 	  	 
