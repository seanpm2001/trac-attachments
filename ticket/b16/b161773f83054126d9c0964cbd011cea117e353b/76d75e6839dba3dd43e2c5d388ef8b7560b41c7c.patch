Binary files wxWindows.orig\samples\mediaplayer\docs\classwxOgg.png and wxWindows\samples\mediaplayer\docs\classwxOgg.png differ
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\classwxWave-members.html wxWindows\samples\mediaplayer\docs\classwxWave-members.html
--- wxWindows.orig\samples\mediaplayer\docs\classwxWave-members.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\classwxWave-members.html	Mon Apr 28 14:00:25 2003
@@ -0,0 +1,53 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>Member List</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>wxWave Member List</h1>This is the complete list of members for <a class="el" href="classwxWave.html">wxWave</a>, including all inherited members.<table>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxWave.html#a3">Close</a>()</td><td><a class="el" href="classwxWave.html">wxWave</a></td><td><code> [virtual]</code></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxWave.html#a7">Create</a>(const char *szFile, bool bLoadFromResource=false)</td><td><a class="el" href="classwxWave.html">wxWave</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#b0">Entry</a>()</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td><code> [protected, virtual]</code></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a25">GetBuffers</a>()</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a7">GetBytesPerSecond</a>() const</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a8">GetBytesPerSecondPCM</a>() const</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a9">GetCompressionFactor</a>() const</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a10">GetCurrentPosition</a>() const</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a11">GetEndingPosition</a>() const</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a12">GetFormat</a>() const</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a13">GetPlayingTime</a>() const</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a15">GetRate</a>() const</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a24">GetSource</a>()</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a14">GetStartingPosition</a>() const</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a16">IsLooping</a>() const</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxWave.html#a8">IsOk</a>() const</td><td><a class="el" href="classwxWave.html">wxWave</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a17">IsPlaying</a>()</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a18">IsStreaming</a>() const</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#n2">kBuffers</a></td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td><code> [protected]</code></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#n0">kInfo</a></td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td><code> [protected]</code></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#n1">kSource</a></td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td><code> [protected]</code></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxWave.html#n0">kWS</a></td><td><a class="el" href="classwxWave.html">wxWave</a></td><td><code> [protected]</code></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a19">LengthPCM</a>() const</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxWave.html#a4">Open</a>(const char *szFile, OpenMode mode=wxFile::read)</td><td><a class="el" href="classwxWave.html">wxWave</a></td><td><code> [virtual]</code></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a20">Play</a>(double nStartPos=0, double nEndPos=-1, bool bLoop=false)</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxWave.html#a5">ReadPCM</a>(void *pData, off_t nNumToRead)</td><td><a class="el" href="classwxWave.html">wxWave</a></td><td><code> [virtual]</code></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a21">SeekPCM</a>(off_t where)</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxWave.html#a6">SeekTime</a>(double dWhere)</td><td><a class="el" href="classwxWave.html">wxWave</a></td><td><code> [virtual]</code></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a27">SetBuffers</a>(WXAUDIOBUFFER *kBuffers)</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a26">SetSource</a>(WXAUDIOSOURCE &amp;kSource)</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a22">Stop</a>()</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a23">Stream</a>(double nStartPos=0, double nEndPos=-1, bool bLoop=false, bool bSeperateThread=true)</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a0">wxAudioFile</a>()</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a1">wxAudioFile</a>(const char *szFile, OpenMode mode=wxFile::read)</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxWave.html#a0">wxWave</a>()</td><td><a class="el" href="classwxWave.html">wxWave</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxWave.html#a1">wxWave</a>(const char *szFile, OpenMode mode=wxFile::read)</td><td><a class="el" href="classwxWave.html">wxWave</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxAudioFile.html#a2">~wxAudioFile</a>()</td><td><a class="el" href="classwxAudioFile.html">wxAudioFile</a></td><td><code> [virtual]</code></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="classwxWave.html#a2">~wxWave</a>()</td><td><a class="el" href="classwxWave.html">wxWave</a></td><td><code> [virtual]</code></td></tr>
+</table><hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:32 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\classwxWave.html wxWindows\samples\mediaplayer\docs\classwxWave.html
--- wxWindows.orig\samples\mediaplayer\docs\classwxWave.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\classwxWave.html	Mon Apr 28 14:00:25 2003
@@ -0,0 +1,382 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>wxWave class Reference</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>wxWave Class Reference</h1><code>#include &lt;<a class="el" href="wave_8h-source.html">wave.h</a>&gt;</code>
+<p>
+<p>Inheritance diagram for wxWave:
+<p><center><img src="classwxWave.png" usemap="#wxWave_map" border="0" alt=""></center>
+<map name="wxWave_map">
+<area href="classwxAudioFile.html" alt="wxAudioFile" shape="rect" coords="0,0,81,24">
+</map>
+<a href="classwxWave-members.html">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
+<tr><td></td></tr>
+<tr><td colspan=2><br><h2>Public Member Functions</h2></td></tr>
+<tr><td nowrap align=right valign=top>&nbsp;</td><td valign=bottom><a class="el" href="classwxWave.html#a0">wxWave</a> ()</td></tr>
+<tr><td nowrap align=right valign=top>&nbsp;</td><td valign=bottom><a class="el" href="classwxWave.html#a1">wxWave</a> (const char *szFile, OpenMode mode=wxFile::read)</td></tr>
+<tr><td nowrap align=right valign=top>virtual&nbsp;</td><td valign=bottom><a class="el" href="classwxWave.html#a2">~wxWave</a> ()</td></tr>
+<tr><td nowrap align=right valign=top>virtual int&nbsp;</td><td valign=bottom><a class="el" href="classwxWave.html#a3">Close</a> ()</td></tr>
+<tr><td nowrap align=right valign=top>virtual bool&nbsp;</td><td valign=bottom><a class="el" href="classwxWave.html#a4">Open</a> (const char *szFile, OpenMode mode=wxFile::read)</td></tr>
+<tr><td nowrap align=right valign=top>virtual off_t&nbsp;</td><td valign=bottom><a class="el" href="classwxWave.html#a5">ReadPCM</a> (void *pData, off_t nNumToRead)</td></tr>
+<tr><td nowrap align=right valign=top>virtual double&nbsp;</td><td valign=bottom><a class="el" href="classwxWave.html#a6">SeekTime</a> (double dWhere)</td></tr>
+<tr><td nowrap align=right valign=top>bool&nbsp;</td><td valign=bottom><a class="el" href="classwxWave.html#a7">Create</a> (const char *szFile, bool bLoadFromResource=false)</td></tr>
+<tr><td nowrap align=right valign=top>bool&nbsp;</td><td valign=bottom><a class="el" href="classwxWave.html#a8">IsOk</a> () const</td></tr>
+<tr><td colspan=2><br><h2>Protected Attributes</h2></td></tr>
+<tr><td nowrap align=right valign=top><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a>&nbsp;</td><td valign=bottom><a class="el" href="classwxWave.html#n0">kWS</a></td></tr>
+</table>
+<hr><a name="_details"></a><h2>Detailed Description</h2>
+Plays WAVE files on any OS. Does not support compressed WAVE files (yet). 
+<p>
+<hr><h2>Constructor &amp; Destructor Documentation</h2>
+<a name="a0" doxytag="wxWave::wxWave"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> wxWave::wxWave </td>
+          <td class="md" valign="top">(&nbsp;</td>
+          <td class="mdname1" valign="top" nowrap>          </td>
+          <td class="md" valign="top">&nbsp;)&nbsp;</td>
+          <td class="md" nowrap></td>
+        </tr>
+
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+Initilizes the audio file     </td>
+  </tr>
+</table>
+<a name="a1" doxytag="wxWave::wxWave"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> wxWave::wxWave </td>
+          <td class="md" valign="top">(&nbsp;</td>
+          <td class="md" nowrap valign="top">const char *&nbsp;</td>
+          <td class="mdname" nowrap> <em>szFile</em>, </td>
+        </tr>
+        <tr>
+          <td></td>
+          <td></td>
+          <td class="md" nowrap>OpenMode&nbsp;</td>
+          <td class="mdname" nowrap> <em>mode</em> = wxFile::read</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td class="md">)&nbsp;</td>
+          <td class="md" colspan="2"></td>
+        </tr>
+
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+Initilizes and opens the audio file     </td>
+  </tr>
+</table>
+<a name="a2" doxytag="wxWave::~wxWave"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> wxWave::~wxWave </td>
+          <td class="md" valign="top">(&nbsp;</td>
+          <td class="mdname1" valign="top" nowrap>          </td>
+          <td class="md" valign="top">&nbsp;)&nbsp;</td>
+          <td class="md" nowrap><code> [virtual]</code></td>
+        </tr>
+
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+Closes and cleans up resources related to the file     </td>
+  </tr>
+</table>
+<hr><h2>Member Function Documentation</h2>
+<a name="a3" doxytag="wxWave::Close"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> int wxWave::Close </td>
+          <td class="md" valign="top">(&nbsp;</td>
+          <td class="mdname1" valign="top" nowrap>          </td>
+          <td class="md" valign="top">&nbsp;)&nbsp;</td>
+          <td class="md" nowrap><code> [virtual]</code></td>
+        </tr>
+
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+Closes the file. 
+<p>
+Reimplemented from <a class="el" href="classwxAudioFile.html#a3">wxAudioFile</a>.    </td>
+  </tr>
+</table>
+<a name="a7" doxytag="wxWave::Create"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> bool wxWave::Create </td>
+          <td class="md" valign="top">(&nbsp;</td>
+          <td class="md" nowrap valign="top">const char *&nbsp;</td>
+          <td class="mdname" nowrap> <em>szFile</em>, </td>
+        </tr>
+        <tr>
+          <td></td>
+          <td></td>
+          <td class="md" nowrap>bool&nbsp;</td>
+          <td class="mdname" nowrap> <em>bLoadFromResource</em> = false</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td class="md">)&nbsp;</td>
+          <td class="md" colspan="2"></td>
+        </tr>
+
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="a8" doxytag="wxWave::IsOk"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> bool wxWave::IsOk </td>
+          <td class="md" valign="top">(&nbsp;</td>
+          <td class="mdname1" valign="top" nowrap>          </td>
+          <td class="md" valign="top">&nbsp;)&nbsp;</td>
+          <td class="md" nowrap> const</td>
+        </tr>
+
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="a4" doxytag="wxWave::Open"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> bool wxWave::Open </td>
+          <td class="md" valign="top">(&nbsp;</td>
+          <td class="md" nowrap valign="top">const char *&nbsp;</td>
+          <td class="mdname" nowrap> <em>szFile</em>, </td>
+        </tr>
+        <tr>
+          <td></td>
+          <td></td>
+          <td class="md" nowrap>OpenMode&nbsp;</td>
+          <td class="mdname" nowrap> <em>mode</em> = wxFile::read</td>
+        </tr>
+        <tr>
+          <td></td>
+          <td class="md">)&nbsp;</td>
+          <td class="md" colspan="2"><code> [virtual]</code></td>
+        </tr>
+
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+Opens the file from a location on disk<p>
+Parameters identical to wxFile.<p>
+<dl compact><dt><b>Parameters:</b></dt><dd>
+  <table border="0" cellspacing="2" cellpadding="0">
+    <tr><td valign=top><em>szFile</em>&nbsp;</td><td>file to open (full or relative path) </td></tr>
+    <tr><td valign=top><em>mode</em>&nbsp;</td><td>Mode to open the file in. Only open with wxFile::read and wxFile::read_write </td></tr>
+  </table>
+</dl>
+
+<p>
+Reimplemented from <a class="el" href="classwxAudioFile.html#a4">wxAudioFile</a>.    </td>
+  </tr>
+</table>
+<a name="a5" doxytag="wxWave::ReadPCM"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> off_t wxWave::ReadPCM </td>
+          <td class="md" valign="top">(&nbsp;</td>
+          <td class="md" nowrap valign="top">void *&nbsp;</td>
+          <td class="mdname" nowrap> <em>pData</em>, </td>
+        </tr>
+        <tr>
+          <td></td>
+          <td></td>
+          <td class="md" nowrap>off_t&nbsp;</td>
+          <td class="mdname" nowrap> <em>nNumToRead</em></td>
+        </tr>
+        <tr>
+          <td></td>
+          <td class="md">)&nbsp;</td>
+          <td class="md" colspan="2"><code> [virtual]</code></td>
+        </tr>
+
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+Reads data converted to PCM.<p>
+<dl compact><dt><b>Parameters:</b></dt><dd>
+  <table border="0" cellspacing="2" cellpadding="0">
+    <tr><td valign=top><em>nNumToRead</em>&nbsp;</td><td>number of UNCOMPRESSED bytes to read </td></tr>
+  </table>
+</dl>
+<dl compact><dt><b>Returns:</b></dt><dd>number of UNCOMPRESSED bytes read </dd></dl>
+
+<p>
+Implements <a class="el" href="classwxAudioFile.html#a5">wxAudioFile</a>.    </td>
+  </tr>
+</table>
+<a name="a6" doxytag="wxWave::SeekTime"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> double wxWave::SeekTime </td>
+          <td class="md" valign="top">(&nbsp;</td>
+          <td class="md" nowrap valign="top">double&nbsp;</td>
+          <td class="mdname1" valign="top" nowrap> <em>dWhere</em>          </td>
+          <td class="md" valign="top">&nbsp;)&nbsp;</td>
+          <td class="md" nowrap><code> [virtual]</code></td>
+        </tr>
+
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+Seeks to a current time in the file 
+<p>
+Implements <a class="el" href="classwxAudioFile.html#a6">wxAudioFile</a>.    </td>
+  </tr>
+</table>
+<hr><h2>Member Data Documentation</h2>
+<a name="n0" doxytag="wxWave::kWS"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> <a class="el" href="structwxWaveStruct.html">wxWaveStruct</a> wxWave::kWS<code> [protected]</code>
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+Contains data related to the wave file     </td>
+  </tr>
+</table>
+<hr>The documentation for this class was generated from the following files:<ul>
+<li><a class="el" href="wave_8h-source.html">wave.h</a><li><a class="el" href="wave_8cpp.html">wave.cpp</a></ul>
+<hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:32 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
Binary files wxWindows.orig\samples\mediaplayer\docs\classwxWave.png and wxWindows\samples\mediaplayer\docs\classwxWave.png differ
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\doxygen.css wxWindows\samples\mediaplayer\docs\doxygen.css
--- wxWindows.orig\samples\mediaplayer\docs\doxygen.css	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\doxygen.css	Mon Apr 28 14:00:25 2003
@@ -0,0 +1,50 @@
+H1 { text-align: center; }
+CAPTION { font-weight: bold }
+A.qindex {}
+A.qindexRef {}
+A.el { text-decoration: none; font-weight: bold }
+A.elRef { font-weight: bold }
+A.code { text-decoration: none; font-weight: normal; color: #4444ee }
+A.codeRef { font-weight: normal; color: #4444ee }
+A:hover { text-decoration: none; background-color: #f2f2ff }
+DL.el { margin-left: -1cm }
+DIV.fragment { width: 100%; border: none; background-color: #eeeeee }
+DIV.ah { background-color: black; font-weight: bold; color: #ffffff; margin-bottom: 3px; margin-top: 3px }
+TD.md { background-color: #f2f2ff; font-weight: bold; }
+TD.mdname1 { background-color: #f2f2ff; font-weight: bold; color: #602020; }
+TD.mdname { background-color: #f2f2ff; font-weight: bold; color: #602020; width: 600px; }
+DIV.groupHeader { margin-left: 16px; margin-top: 12px; margin-bottom: 6px; font-weight: bold }
+DIV.groupText { margin-left: 16px; font-style: italic; font-size: smaller }
+BODY { background: white; color: black }
+EM.mdesc { font-size: smaller }
+TD.indexkey { 
+   background-color: #eeeeff; 
+   font-weight: bold; 
+   padding-right  : 10px; 
+   padding-top    : 2px; 
+   padding-left   : 10px; 
+   padding-bottom : 2px; 
+   margin-left    : 0px; 
+   margin-right   : 0px; 
+   margin-top     : 2px; 
+   margin-bottom  : 2px  
+}
+TD.indexvalue { 
+   background-color: #eeeeff; 
+   font-style: italic; 
+   padding-right  : 10px; 
+   padding-top    : 2px; 
+   padding-left   : 10px; 
+   padding-bottom : 2px; 
+   margin-left    : 0px; 
+   margin-right   : 0px; 
+   margin-top     : 2px; 
+   margin-bottom  : 2px  
+}
+span.keyword       { color: #008000 }
+span.keywordtype   { color: #604020 }
+span.keywordflow   { color: #e08000 }
+span.comment       { color: #800000 }
+span.preprocessor  { color: #806020 }
+span.stringliteral { color: #002080 }
+span.charliteral   { color: #008080 }
Binary files wxWindows.orig\samples\mediaplayer\docs\doxygen.png and wxWindows\samples\mediaplayer\docs\doxygen.png differ
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\files.html wxWindows\samples\mediaplayer\docs\files.html
--- wxWindows.orig\samples\mediaplayer\docs\files.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\files.html	Mon Apr 28 14:00:25 2003
@@ -0,0 +1,26 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>File Index</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>wxAudio File List</h1>Here is a list of all files with brief descriptions:<table>
+  <tr><td class="indexkey"><a class="el" href="_8#openal_8removed_8cpp.html">.#openal.removed.cpp</a></td><td class="indexvalue"></td></tr>
+  <tr><td class="indexkey"><a class="el" href="audio_8cpp.html">audio.cpp</a></td><td class="indexvalue"></td></tr>
+  <tr><td class="indexkey"><a class="el" href="audio_8h.html">audio.h</a> <a href="audio_8h-source.html">[code]</a></td><td class="indexvalue"></td></tr>
+  <tr><td class="indexkey"><a class="el" href="audiofile_8cpp.html">audiofile.cpp</a></td><td class="indexvalue"></td></tr>
+  <tr><td class="indexkey"><a class="el" href="audiofile_8h.html">audiofile.h</a> <a href="audiofile_8h-source.html">[code]</a></td><td class="indexvalue"></td></tr>
+  <tr><td class="indexkey"><a class="el" href="mediaplayer_8cpp.html">mediaplayer.cpp</a></td><td class="indexvalue"></td></tr>
+  <tr><td class="indexkey"><a class="el" href="ogg_8cpp.html">ogg.cpp</a></td><td class="indexvalue"></td></tr>
+  <tr><td class="indexkey"><a class="el" href="ogg_8h.html">ogg.h</a> <a href="ogg_8h-source.html">[code]</a></td><td class="indexvalue"></td></tr>
+  <tr><td class="indexkey"><a class="el" href="wave_8cpp.html">wave.cpp</a></td><td class="indexvalue"></td></tr>
+  <tr><td class="indexkey"><a class="el" href="wave_8h.html">wave.h</a> <a href="wave_8h-source.html">[code]</a></td><td class="indexvalue"></td></tr>
+</table>
+<hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:31 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\functions.html wxWindows\samples\mediaplayer\docs\functions.html
--- wxWindows.orig\samples\mediaplayer\docs\functions.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\functions.html	Mon Apr 28 14:00:25 2003
@@ -0,0 +1,162 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>Compound Member Index</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>wxAudio Compound Members</h1><center>
+<a href="#index_b">b</a>&nbsp;|&nbsp;<a href="#index_c">c</a>&nbsp;|&nbsp;<a href="#index_d">d</a>&nbsp;|&nbsp;<a href="#index_e">e</a>&nbsp;|&nbsp;<a href="#index_f">f</a>&nbsp;|&nbsp;<a href="#index_g">g</a>&nbsp;|&nbsp;<a href="#index_i">i</a>&nbsp;|&nbsp;<a href="#index_k">k</a>&nbsp;|&nbsp;<a href="#index_l">l</a>&nbsp;|&nbsp;<a href="#index_m">m</a>&nbsp;|&nbsp;<a href="#index_n">n</a>&nbsp;|&nbsp;<a href="#index_o">o</a>&nbsp;|&nbsp;<a href="#index_p">p</a>&nbsp;|&nbsp;<a href="#index_r">r</a>&nbsp;|&nbsp;<a href="#index_s">s</a>&nbsp;|&nbsp;<a href="#index_v">v</a>&nbsp;|&nbsp;<a href="#index_w">w</a>&nbsp;|&nbsp;<a href="#index_~">~</a></center>
+
+<p>
+Here is a list of all class members with links to the classes they belong to:<h3><a name="index_b">- b -</a>
+</h3><ul>
+<li>bInit
+: <a class="el" href="classwxAudio.html#q0">wxAudio</a><li>BitsPerSample
+: <a class="el" href="structwxWaveStruct.html#m10">wxWaveStruct</a><li>BlockAlign
+: <a class="el" href="structwxWaveStruct.html#m9">wxWaveStruct</a><li>bLoop
+: <a class="el" href="structwxAudioFileInfo.html#m5">wxAudioFileInfo</a><li>BytesPerSec
+: <a class="el" href="structwxWaveStruct.html#m8">wxWaveStruct</a></ul>
+<h3><a name="index_c">- c -</a>
+</h3><ul>
+<li>Channels
+: <a class="el" href="structwxWaveStruct.html#m6">wxWaveStruct</a><li>Close()
+: <a class="el" href="classwxOgg.html#a3">wxOgg</a>, <a class="el" href="classwxWave.html#a3">wxWave</a>, <a class="el" href="classwxAudioFile.html#a3">wxAudioFile</a><li>Create()
+: <a class="el" href="classwxWave.html#a7">wxWave</a></ul>
+<h3><a name="index_d">- d -</a>
+</h3><ul>
+<li>data
+: <a class="el" href="structwxWaveStruct.html#m11">wxWaveStruct</a><li>dataSize
+: <a class="el" href="structwxWaveStruct.html#m12">wxWaveStruct</a><li>dCurrentPos
+: <a class="el" href="structwxAudioFileInfo.html#m0">wxAudioFileInfo</a><li>dEndPos
+: <a class="el" href="structwxAudioFileInfo.html#m1">wxAudioFileInfo</a><li>dPlayingTime
+: <a class="el" href="structwxAudioFileInfo.html#m6">wxAudioFileInfo</a><li>dStartPos
+: <a class="el" href="structwxAudioFileInfo.html#m2">wxAudioFileInfo</a></ul>
+<h3><a name="index_e">- e -</a>
+</h3><ul>
+<li>Entry()
+: <a class="el" href="classwxAudioFile.html#b0">wxAudioFile</a></ul>
+<h3><a name="index_f">- f -</a>
+</h3><ul>
+<li>fmt
+: <a class="el" href="structwxWaveStruct.html#m3">wxWaveStruct</a><li>fmtSize
+: <a class="el" href="structwxWaveStruct.html#m4">wxWaveStruct</a><li>Format
+: <a class="el" href="structwxWaveStruct.html#m5">wxWaveStruct</a></ul>
+<h3><a name="index_g">- g -</a>
+</h3><ul>
+<li>GetBuffers()
+: <a class="el" href="classwxAudioFile.html#a25">wxAudioFile</a><li>GetBytesPerSecond()
+: <a class="el" href="classwxAudioFile.html#a7">wxAudioFile</a><li>GetBytesPerSecondPCM()
+: <a class="el" href="classwxAudioFile.html#a8">wxAudioFile</a><li>GetCompressionFactor()
+: <a class="el" href="classwxAudioFile.html#a9">wxAudioFile</a><li>GetCurrentPosition()
+: <a class="el" href="classwxAudioFile.html#a10">wxAudioFile</a><li>GetEAXLevel()
+: <a class="el" href="classwxAudio.html#d0">wxAudio</a><li>GetEndingPosition()
+: <a class="el" href="classwxAudioFile.html#a11">wxAudioFile</a><li>GetFormat()
+: <a class="el" href="classwxAudioFile.html#a12">wxAudioFile</a><li>GetPlayingTime()
+: <a class="el" href="classwxAudioFile.html#a13">wxAudioFile</a><li>GetRate()
+: <a class="el" href="classwxAudioFile.html#a15">wxAudioFile</a><li>GetSource()
+: <a class="el" href="classwxAudioFile.html#a24">wxAudioFile</a><li>GetStartingPosition()
+: <a class="el" href="classwxAudioFile.html#a14">wxAudioFile</a></ul>
+<h3><a name="index_i">- i -</a>
+</h3><ul>
+<li>Init()
+: <a class="el" href="classwxAudio.html#d1">wxAudio</a><li>IsFilePlaying()
+: <a class="el" href="classwxAudio.html#d3">wxAudio</a><li>IsInitialized()
+: <a class="el" href="classwxAudio.html#d2">wxAudio</a><li>IsLooping()
+: <a class="el" href="classwxAudioFile.html#a16">wxAudioFile</a><li>IsOk()
+: <a class="el" href="classwxWave.html#a8">wxWave</a><li>IsPlaying()
+: <a class="el" href="classwxAudioFile.html#a17">wxAudioFile</a><li>IsStreaming()
+: <a class="el" href="classwxAudioFile.html#a18">wxAudioFile</a></ul>
+<h3><a name="index_k">- k -</a>
+</h3><ul>
+<li>kAudioFile
+: <a class="el" href="classMyFrame.html#o3">MyFrame</a><li>kBuffers
+: <a class="el" href="classwxAudioFile.html#n2">wxAudioFile</a><li>kInfo
+: <a class="el" href="classwxAudioFile.html#n0">wxAudioFile</a><li>kSource
+: <a class="el" href="classwxAudioFile.html#n1">wxAudioFile</a><li>kWS
+: <a class="el" href="classwxWave.html#n0">wxWave</a></ul>
+<h3><a name="index_l">- l -</a>
+</h3><ul>
+<li>LengthPCM()
+: <a class="el" href="classwxAudioFile.html#a19">wxAudioFile</a></ul>
+<h3><a name="index_m">- m -</a>
+</h3><ul>
+<li>MyFrame()
+: <a class="el" href="classMyFrame.html#a6">MyFrame</a></ul>
+<h3><a name="index_n">- n -</a>
+</h3><ul>
+<li>nBytesPerSecPCM
+: <a class="el" href="structwxAudioFileInfo.html#m8">wxAudioFileInfo</a><li>nEAXLevel
+: <a class="el" href="classwxAudio.html#q1">wxAudio</a><li>nFormat
+: <a class="el" href="structwxAudioFileInfo.html#m3">wxAudioFileInfo</a><li>nPCMLength
+: <a class="el" href="structwxAudioFileInfo.html#m7">wxAudioFileInfo</a><li>nRate
+: <a class="el" href="structwxAudioFileInfo.html#m4">wxAudioFileInfo</a><li>nReadPos
+: <a class="el" href="classwxOgg.html#n3">wxOgg</a></ul>
+<h3><a name="index_o">- o -</a>
+</h3><ul>
+<li>OnAbout()
+: <a class="el" href="classMyFrame.html#a9">MyFrame</a><li>OnExit()
+: <a class="el" href="classMyApp.html#a3">MyApp</a>, <a class="el" href="classwxAudioApp.html#a1">wxAudioApp</a><li>OnInit()
+: <a class="el" href="classMyApp.html#a2">MyApp</a>, <a class="el" href="classwxAudioApp.html#a0">wxAudioApp</a><li>OnOpen()
+: <a class="el" href="classMyFrame.html#a7">MyFrame</a><li>OnPlay()
+: <a class="el" href="classMyFrame.html#a1">MyFrame</a><li>OnQuit()
+: <a class="el" href="classMyFrame.html#a8">MyFrame</a><li>OnSliderUpdate()
+: <a class="el" href="classMyFrame.html#a10">MyFrame</a><li>OnStream()
+: <a class="el" href="classMyFrame.html#a2">MyFrame</a><li>Open()
+: <a class="el" href="classwxOgg.html#a4">wxOgg</a>, <a class="el" href="classwxWave.html#a4">wxWave</a>, <a class="el" href="classwxAudioFile.html#a4">wxAudioFile</a><li>OpenFile()
+: <a class="el" href="classwxAudio.html#d4">wxAudio</a><li>operator OggVorbis_File *()
+: <a class="el" href="classwxOgg.html#a7">wxOgg</a></ul>
+<h3><a name="index_p">- p -</a>
+</h3><ul>
+<li>Play()
+: <a class="el" href="classwxAudioFile.html#a20">wxAudioFile</a><li>PlayFile()
+: <a class="el" href="classwxAudio.html#d5">wxAudio</a><li>pSlider
+: <a class="el" href="classMyFrame.html#o2">MyFrame</a></ul>
+<h3><a name="index_r">- r -</a>
+</h3><ul>
+<li>ReadPCM()
+: <a class="el" href="classwxOgg.html#a5">wxOgg</a>, <a class="el" href="classwxWave.html#a5">wxWave</a>, <a class="el" href="classwxAudioFile.html#a5">wxAudioFile</a><li>riff
+: <a class="el" href="structwxWaveStruct.html#m0">wxWaveStruct</a><li>riffSize
+: <a class="el" href="structwxWaveStruct.html#m1">wxWaveStruct</a></ul>
+<h3><a name="index_s">- s -</a>
+</h3><ul>
+<li>SamplesPerSec
+: <a class="el" href="structwxWaveStruct.html#m7">wxWaveStruct</a><li>SeekPCM()
+: <a class="el" href="classwxAudioFile.html#a21">wxAudioFile</a><li>SeekTime()
+: <a class="el" href="classwxOgg.html#a6">wxOgg</a>, <a class="el" href="classwxWave.html#a6">wxWave</a>, <a class="el" href="classwxAudioFile.html#a6">wxAudioFile</a><li>SetBuffers()
+: <a class="el" href="classwxAudioFile.html#a27">wxAudioFile</a><li>SetListener()
+: <a class="el" href="classwxAudio.html#d6">wxAudio</a><li>SetSource()
+: <a class="el" href="classwxAudioFile.html#a26">wxAudioFile</a><li>Shutdown()
+: <a class="el" href="classwxAudio.html#d7">wxAudio</a><li>Stop()
+: <a class="el" href="classwxAudioFile.html#a22">wxAudioFile</a><li>StopFile()
+: <a class="el" href="classwxAudio.html#d8">wxAudio</a><li>Stream()
+: <a class="el" href="classwxAudioFile.html#a23">wxAudioFile</a><li>StreamFile()
+: <a class="el" href="classwxAudio.html#d9">wxAudio</a></ul>
+<h3><a name="index_v">- v -</a>
+</h3><ul>
+<li>vc
+: <a class="el" href="classwxOgg.html#n1">wxOgg</a><li>vf
+: <a class="el" href="classwxOgg.html#n0">wxOgg</a><li>vi
+: <a class="el" href="classwxOgg.html#n2">wxOgg</a></ul>
+<h3><a name="index_w">- w -</a>
+</h3><ul>
+<li>wave
+: <a class="el" href="structwxWaveStruct.html#m2">wxWaveStruct</a><li>wxAudio
+: <a class="el" href="classwxAudio.html#a0">wxAudio</a>, <a class="el" href="classwxOgg.html#l0">wxOgg</a><li>wxAudioFile()
+: <a class="el" href="classwxAudioFile.html#a1">wxAudioFile</a><li>wxOgg()
+: <a class="el" href="classwxOgg.html#a1">wxOgg</a><li>wxWave()
+: <a class="el" href="classwxWave.html#a1">wxWave</a></ul>
+<h3><a name="index_~">- ~ -</a>
+</h3><ul>
+<li>~wxAudio()
+: <a class="el" href="classwxAudio.html#a1">wxAudio</a><li>~wxAudioFile()
+: <a class="el" href="classwxAudioFile.html#a2">wxAudioFile</a><li>~wxOgg()
+: <a class="el" href="classwxOgg.html#a2">wxOgg</a><li>~wxWave()
+: <a class="el" href="classwxWave.html#a2">wxWave</a></ul>
+<hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:32 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\globals.html wxWindows\samples\mediaplayer\docs\globals.html
--- wxWindows.orig\samples\mediaplayer\docs\globals.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\globals.html	Mon Apr 28 14:00:25 2003
@@ -0,0 +1,58 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>File Member Index</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>wxAudio File Members</h1><center>
+<a href="#index_h">h</a>&nbsp;|&nbsp;<a href="#index_i">i</a>&nbsp;|&nbsp;<a href="#index_m">m</a>&nbsp;|&nbsp;<a href="#index_n">n</a>&nbsp;|&nbsp;<a href="#index_o">o</a>&nbsp;|&nbsp;<a href="#index_w">w</a></center>
+
+<p>
+Here is a list of all file members with links to the files they belong to:<h3><a name="index_h">- h -</a>
+</h3><ul>
+<li>HeaderCheck()
+: <a class="el" href="_8#openal_8removed_8cpp.html#a10">.#openal.removed.cpp</a></ul>
+<h3><a name="index_i">- i -</a>
+</h3><ul>
+<li>ID_SLIDER
+: <a class="el" href="_8#openal_8removed_8cpp.html#a2">.#openal.removed.cpp</a>, <a class="el" href="mediaplayer_8cpp.html#a1">mediaplayer.cpp</a></ul>
+<h3><a name="index_m">- m -</a>
+</h3><ul>
+<li>Minimal_About
+: <a class="el" href="_8#openal_8removed_8cpp.html#a11a5">.#openal.removed.cpp</a>, <a class="el" href="mediaplayer_8cpp.html#a6a5">mediaplayer.cpp</a><li>Minimal_Open
+: <a class="el" href="_8#openal_8removed_8cpp.html#a11a3">.#openal.removed.cpp</a><li>Minimal_Play
+: <a class="el" href="mediaplayer_8cpp.html#a6a2">mediaplayer.cpp</a><li>Minimal_Quit
+: <a class="el" href="_8#openal_8removed_8cpp.html#a11a4">.#openal.removed.cpp</a>, <a class="el" href="mediaplayer_8cpp.html#a6a4">mediaplayer.cpp</a><li>Minimal_Stream
+: <a class="el" href="mediaplayer_8cpp.html#a6a3">mediaplayer.cpp</a></ul>
+<h3><a name="index_n">- n -</a>
+</h3><ul>
+<li>NUMBUFFERS
+: <a class="el" href="_8#openal_8removed_8cpp.html#a0">.#openal.removed.cpp</a>, <a class="el" href="audio_8h.html#a4">audio.h</a></ul>
+<h3><a name="index_o">- o -</a>
+</h3><ul>
+<li>ov_close_func()
+: <a class="el" href="_8#openal_8removed_8cpp.html#a8">.#openal.removed.cpp</a>, <a class="el" href="ogg_8cpp.html#a2">ogg.cpp</a><li>ov_read_func()
+: <a class="el" href="_8#openal_8removed_8cpp.html#a6">.#openal.removed.cpp</a>, <a class="el" href="ogg_8cpp.html#a0">ogg.cpp</a><li>ov_seek_func()
+: <a class="el" href="_8#openal_8removed_8cpp.html#a7">.#openal.removed.cpp</a>, <a class="el" href="ogg_8cpp.html#a1">ogg.cpp</a><li>ov_tell_func()
+: <a class="el" href="_8#openal_8removed_8cpp.html#a9">.#openal.removed.cpp</a>, <a class="el" href="ogg_8cpp.html#a3">ogg.cpp</a></ul>
+<h3><a name="index_w">- w -</a>
+</h3><ul>
+<li>WX_FORMAT_MONO16
+: <a class="el" href="audio_8h.html#a1">audio.h</a><li>WX_FORMAT_MONO8
+: <a class="el" href="audio_8h.html#a0">audio.h</a><li>WX_FORMAT_STEREO16
+: <a class="el" href="audio_8h.html#a3">audio.h</a><li>WX_FORMAT_STEREO8
+: <a class="el" href="audio_8h.html#a2">audio.h</a><li>wxASSERT
+: <a class="el" href="_8#openal_8removed_8cpp.html#a1">.#openal.removed.cpp</a>, <a class="el" href="mediaplayer_8cpp.html#a0">mediaplayer.cpp</a><li>WXAUDIOBUFFER
+: <a class="el" href="audio_8h.html#a9">audio.h</a><li>WXAUDIOSOURCE
+: <a class="el" href="audio_8h.html#a8">audio.h</a><li>wxCHECK_LOG
+: <a class="el" href="audio_8h.html#a7">audio.h</a><li>wxOPENAL_CHECK
+: <a class="el" href="audio_8h.html#a5">audio.h</a><li>wxOPENAL_CHECK2
+: <a class="el" href="audio_8h.html#a6">audio.h</a></ul>
+<hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:32 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\hierarchy.html wxWindows\samples\mediaplayer\docs\hierarchy.html
--- wxWindows.orig\samples\mediaplayer\docs\hierarchy.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\hierarchy.html	Mon Apr 28 14:00:25 2003
@@ -0,0 +1,27 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>Hierarchical Index</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>wxAudio Class Hierarchy</h1>This inheritance list is sorted roughly, but not completely, alphabetically:<ul>
+<li><a class="el" href="classMyApp.html">MyApp</a>
+<li><a class="el" href="classMyFrame.html">MyFrame</a>
+<li><a class="el" href="classwxAudio.html">wxAudio</a>
+<li><a class="el" href="classwxAudioApp.html">wxAudioApp</a>
+<li><a class="el" href="classwxAudioFile.html">wxAudioFile</a>
+<ul>
+<li><a class="el" href="classwxOgg.html">wxOgg</a>
+<li><a class="el" href="classwxWave.html">wxWave</a>
+</ul>
+<li><a class="el" href="structwxAudioFileInfo.html">wxAudioFileInfo</a>
+<li><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a>
+</ul>
+<hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:32 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\index.html wxWindows\samples\mediaplayer\docs\index.html
--- wxWindows.orig\samples\mediaplayer\docs\index.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\index.html	Mon Apr 28 14:00:25 2003
@@ -0,0 +1,16 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>Main Page</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>wxAudio Documentation</h1>
+<p>
+<hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:31 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\mediaplayer_8cpp.html wxWindows\samples\mediaplayer\docs\mediaplayer_8cpp.html
--- wxWindows.orig\samples\mediaplayer\docs\mediaplayer_8cpp.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\mediaplayer_8cpp.html	Mon Apr 28 14:00:26 2003
@@ -0,0 +1,128 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>mediaplayer.cpp File Reference</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>mediaplayer.cpp File Reference</h1><code>#include "wx/wxprec.h"</code><br>
+<code>#include "wx/wx.h"</code><br>
+<code>#include "<a class="el" href="audio_8h-source.html">wx/audio.h</a>"</code><br>
+<code>#include &lt;math.h&gt;</code><br>
+<table border=0 cellpadding=0 cellspacing=0>
+<tr><td></td></tr>
+<tr><td colspan=2><br><h2>Compounds</h2></td></tr>
+<tr><td nowrap align=right valign=top>class &nbsp;</td><td valign=bottom><a class="el" href="classMyApp.html">MyApp</a></td></tr>
+<tr><td nowrap align=right valign=top>class &nbsp;</td><td valign=bottom><a class="el" href="classMyFrame.html">MyFrame</a></td></tr>
+<tr><td colspan=2><br><h2>Defines</h2></td></tr>
+<tr><td nowrap align=right valign=top>#define&nbsp;</td><td valign=bottom><a class="el" href="mediaplayer_8cpp.html#a0">wxASSERT</a>(cond)</td></tr>
+<tr><td colspan=2><br><h2>Enumerations</h2></td></tr>
+<tr><td nowrap align=right valign=top>enum &nbsp;</td><td valign=bottom>{ <a class="el" href="mediaplayer_8cpp.html#a6a2">Minimal_Play</a> =  3, 
+<a class="el" href="mediaplayer_8cpp.html#a6a3">Minimal_Stream</a> =  4, 
+<a class="el" href="mediaplayer_8cpp.html#a6a4">Minimal_Quit</a> =  2, 
+<a class="el" href="mediaplayer_8cpp.html#a6a5">Minimal_About</a> =  wxID_ABOUT
+ }</td></tr>
+<tr><td colspan=2><br><h2>Variables</h2></td></tr>
+<tr><td nowrap align=right valign=top>const int&nbsp;</td><td valign=bottom><a class="el" href="mediaplayer_8cpp.html#a1">ID_SLIDER</a> = 181</td></tr>
+</table>
+<hr><h2>Define Documentation</h2>
+<a name="a0" doxytag="mediaplayer.cpp::wxASSERT"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> #define wxASSERT</td>
+          <td class="md" valign="top">(&nbsp;</td>
+          <td class="md" nowrap valign="top">cond&nbsp;</td>
+          <td class="mdname1" valign="top" nowrap>          </td>
+          <td class="md" valign="top">&nbsp;)&nbsp;</td>
+          <td class="md" nowrap>
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+<b>Value:</b><div class="fragment"><pre><span class="keywordflow">if</span> (!(cond)) \
+    {\
+    <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span> d = 1;\
+    alDeleteBuffers(1,&amp;d);\
+        wxMessageDialog(NULL, #cond).ShowModal();\
+        alutExit();\
+        <span class="keywordflow">return</span>;\
+    }
+</pre></div>    </td>
+  </tr>
+</table>
+<hr><h2>Enumeration Type Documentation</h2>
+<a name="a6" doxytag="mediaplayer.cpp::@0"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> anonymous enum
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+<dl compact><dt><b>Enumeration values: </b></dt><dd>
+<table border=0 cellspacing=2 cellpadding=0>
+<tr><td valign=top><em><a name="a6a2" doxytag="Minimal_Play"></a><em>Minimal_Play</em></em>&nbsp;</td><td>
+</td></tr>
+<tr><td valign=top><em><a name="a6a3" doxytag="Minimal_Stream"></a><em>Minimal_Stream</em></em>&nbsp;</td><td>
+</td></tr>
+<tr><td valign=top><em><a name="a6a4" doxytag="Minimal_Quit"></a><em>Minimal_Quit</em></em>&nbsp;</td><td>
+</td></tr>
+<tr><td valign=top><em><a name="a6a5" doxytag="Minimal_About"></a><em>Minimal_About</em></em>&nbsp;</td><td>
+</td></tr>
+</table>
+</dl>
+    </td>
+  </tr>
+</table>
+<hr><h2>Variable Documentation</h2>
+<a name="a1" doxytag="mediaplayer.cpp::ID_SLIDER"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> const int ID_SLIDER = 181
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:31 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\ogg_8cpp.html wxWindows\samples\mediaplayer\docs\ogg_8cpp.html
--- wxWindows.orig\samples\mediaplayer\docs\ogg_8cpp.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\ogg_8cpp.html	Mon Apr 28 14:00:26 2003
@@ -0,0 +1,179 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>ogg.cpp File Reference</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>ogg.cpp File Reference</h1><code>#include "wx/wxprec.h"</code><br>
+<code>#include "wx/file.h"</code><br>
+<code>#include "wx/thread.h"</code><br>
+<code>#include "<a class="el" href="audio_8h-source.html">wx/audio.h</a>"</code><br>
+<table border=0 cellpadding=0 cellspacing=0>
+<tr><td></td></tr>
+<tr><td colspan=2><br><h2>Functions</h2></td></tr>
+<tr><td nowrap align=right valign=top>size_t&nbsp;</td><td valign=bottom><a class="el" href="ogg_8cpp.html#a0">ov_read_func</a> (void *ptr, size_t size, size_t nmemb, void *datasource)</td></tr>
+<tr><td nowrap align=right valign=top>int&nbsp;</td><td valign=bottom><a class="el" href="ogg_8cpp.html#a1">ov_seek_func</a> (void *datasource, ogg_int64_t offset, int whence)</td></tr>
+<tr><td nowrap align=right valign=top>int&nbsp;</td><td valign=bottom><a class="el" href="ogg_8cpp.html#a2">ov_close_func</a> (void *datasource)</td></tr>
+<tr><td nowrap align=right valign=top>long&nbsp;</td><td valign=bottom><a class="el" href="ogg_8cpp.html#a3">ov_tell_func</a> (void *datasource)</td></tr>
+</table>
+<hr><h2>Function Documentation</h2>
+<a name="a2" doxytag="ogg.cpp::ov_close_func"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> int ov_close_func </td>
+          <td class="md" valign="top">(&nbsp;</td>
+          <td class="md" nowrap valign="top">void *&nbsp;</td>
+          <td class="mdname1" valign="top" nowrap> <em>datasource</em>          </td>
+          <td class="md" valign="top">&nbsp;)&nbsp;</td>
+          <td class="md" nowrap></td>
+        </tr>
+
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="a0" doxytag="ogg.cpp::ov_read_func"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> size_t ov_read_func </td>
+          <td class="md" valign="top">(&nbsp;</td>
+          <td class="md" nowrap valign="top">void *&nbsp;</td>
+          <td class="mdname" nowrap> <em>ptr</em>, </td>
+        </tr>
+        <tr>
+          <td></td>
+          <td></td>
+          <td class="md" nowrap>size_t&nbsp;</td>
+          <td class="mdname" nowrap> <em>size</em>, </td>
+        </tr>
+        <tr>
+          <td></td>
+          <td></td>
+          <td class="md" nowrap>size_t&nbsp;</td>
+          <td class="mdname" nowrap> <em>nmemb</em>, </td>
+        </tr>
+        <tr>
+          <td></td>
+          <td></td>
+          <td class="md" nowrap>void *&nbsp;</td>
+          <td class="mdname" nowrap> <em>datasource</em></td>
+        </tr>
+        <tr>
+          <td></td>
+          <td class="md">)&nbsp;</td>
+          <td class="md" colspan="2"></td>
+        </tr>
+
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="a1" doxytag="ogg.cpp::ov_seek_func"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> int ov_seek_func </td>
+          <td class="md" valign="top">(&nbsp;</td>
+          <td class="md" nowrap valign="top">void *&nbsp;</td>
+          <td class="mdname" nowrap> <em>datasource</em>, </td>
+        </tr>
+        <tr>
+          <td></td>
+          <td></td>
+          <td class="md" nowrap>ogg_int64_t&nbsp;</td>
+          <td class="mdname" nowrap> <em>offset</em>, </td>
+        </tr>
+        <tr>
+          <td></td>
+          <td></td>
+          <td class="md" nowrap>int&nbsp;</td>
+          <td class="mdname" nowrap> <em>whence</em></td>
+        </tr>
+        <tr>
+          <td></td>
+          <td class="md">)&nbsp;</td>
+          <td class="md" colspan="2"></td>
+        </tr>
+
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="a3" doxytag="ogg.cpp::ov_tell_func"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> long ov_tell_func </td>
+          <td class="md" valign="top">(&nbsp;</td>
+          <td class="md" nowrap valign="top">void *&nbsp;</td>
+          <td class="mdname1" valign="top" nowrap> <em>datasource</em>          </td>
+          <td class="md" valign="top">&nbsp;)&nbsp;</td>
+          <td class="md" nowrap></td>
+        </tr>
+
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:31 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\ogg_8h-source.html wxWindows\samples\mediaplayer\docs\ogg_8h-source.html
--- wxWindows.orig\samples\mediaplayer\docs\ogg_8h-source.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\ogg_8h-source.html	Mon Apr 28 14:00:26 2003
@@ -0,0 +1,54 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>ogg.h Source File</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>ogg.h</h1><a href="ogg_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre>00001 
+00002 <span class="comment">// Name:        ogg.h</span>
+00003 <span class="comment">// Purpose:     Plays ogg vorbis files</span>
+00004 <span class="comment">// Author:      Ryan Norton</span>
+00005 <span class="comment">// Modified by:</span>
+00006 <span class="comment">// RCS-ID:      $$</span>
+00007 <span class="comment">// Copyright:   (c) Ryan Norton, Julian Smart</span>
+00008 <span class="comment">// Licence:     wxWindows license</span>
+00010 <span class="comment"></span>
+<a name="l00014"></a><a class="code" href="classwxOgg.html">00014</a> <span class="keyword">class </span><a class="code" href="classwxOgg.html">wxOgg</a> : <span class="keyword">public</span> <a class="code" href="classwxAudioFile.html">wxAudioFile</a>
+00015 {
+<a name="l00016"></a><a class="code" href="classwxOgg.html#l0">00016</a>     <span class="keyword">friend</span> <span class="keyword">class </span><a class="code" href="classwxAudio.html">wxAudio</a>;
+00018                             <span class="keyword">protected</span>:
+00020 
+<a name="l00023"></a><a class="code" href="classwxOgg.html#n0">00023</a>     OggVorbis_File <a class="code" href="classwxOgg.html#n0">vf</a>;
+00024 
+<a name="l00028"></a><a class="code" href="classwxOgg.html#n1">00028</a>     vorbis_comment* <a class="code" href="classwxOgg.html#n1">vc</a>;
+00029 
+<a name="l00033"></a><a class="code" href="classwxOgg.html#n2">00033</a>     vorbis_info* <a class="code" href="classwxOgg.html#n2">vi</a>;
+00034 
+<a name="l00038"></a><a class="code" href="classwxOgg.html#n3">00038</a>     <span class="keywordtype">int</span> <a class="code" href="classwxOgg.html#n3">nReadPos</a>;
+00039 
+00041                             <span class="keyword">public</span>:
+00043 
+00046     <a class="code" href="classwxOgg.html#a0">wxOgg</a>();
+00047 
+00051     <a class="code" href="classwxOgg.html#a0">wxOgg</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFile, OpenMode mode = wxFile::read); 
+00052 
+00056     <span class="keyword">virtual</span> <a class="code" href="classwxOgg.html#a2">~wxOgg</a>();
+00057 
+00061     <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classwxOgg.html#a3">Close</a>();
+00062 
+00071     <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classwxOgg.html#a4">Open</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFile, OpenMode mode = wxFile::read);
+00072     
+00079     <span class="keyword">virtual</span> off_t <a class="code" href="classwxOgg.html#a5">ReadPCM</a> (<span class="keywordtype">void</span>* pData, off_t nNumToRead);
+00080 
+00084     <span class="keyword">virtual</span> <span class="keywordtype">double</span> <a class="code" href="classwxOgg.html#a6">SeekTime</a>(<span class="keywordtype">double</span> dWhere);
+00085 
+00089     <a class="code" href="classwxOgg.html#a7">operator OggVorbis_File* </a>();
+00090 };<span class="comment">//end of wxOgg</span>
+</pre></div><hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:31 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\ogg_8h.html wxWindows\samples\mediaplayer\docs\ogg_8h.html
--- wxWindows.orig\samples\mediaplayer\docs\ogg_8h.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\ogg_8h.html	Mon Apr 28 14:00:26 2003
@@ -0,0 +1,21 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>ogg.h File Reference</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>ogg.h File Reference</h1>
+<p>
+<a href="ogg_8h-source.html">Go to the source code of this file.</a><table border=0 cellpadding=0 cellspacing=0>
+<tr><td></td></tr>
+<tr><td colspan=2><br><h2>Compounds</h2></td></tr>
+<tr><td nowrap align=right valign=top>class &nbsp;</td><td valign=bottom><a class="el" href="classwxOgg.html">wxOgg</a></td></tr>
+</table>
+<hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:31 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\structwxAudioFileInfo-members.html wxWindows\samples\mediaplayer\docs\structwxAudioFileInfo-members.html
--- wxWindows.orig\samples\mediaplayer\docs\structwxAudioFileInfo-members.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\structwxAudioFileInfo-members.html	Mon Apr 28 14:00:26 2003
@@ -0,0 +1,24 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>Member List</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>wxAudioFileInfo Member List</h1>This is the complete list of members for <a class="el" href="structwxAudioFileInfo.html">wxAudioFileInfo</a>, including all inherited members.<table>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxAudioFileInfo.html#m5">bLoop</a></td><td><a class="el" href="structwxAudioFileInfo.html">wxAudioFileInfo</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxAudioFileInfo.html#m0">dCurrentPos</a></td><td><a class="el" href="structwxAudioFileInfo.html">wxAudioFileInfo</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxAudioFileInfo.html#m1">dEndPos</a></td><td><a class="el" href="structwxAudioFileInfo.html">wxAudioFileInfo</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxAudioFileInfo.html#m6">dPlayingTime</a></td><td><a class="el" href="structwxAudioFileInfo.html">wxAudioFileInfo</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxAudioFileInfo.html#m2">dStartPos</a></td><td><a class="el" href="structwxAudioFileInfo.html">wxAudioFileInfo</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxAudioFileInfo.html#m8">nBytesPerSecPCM</a></td><td><a class="el" href="structwxAudioFileInfo.html">wxAudioFileInfo</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxAudioFileInfo.html#m3">nFormat</a></td><td><a class="el" href="structwxAudioFileInfo.html">wxAudioFileInfo</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxAudioFileInfo.html#m7">nPCMLength</a></td><td><a class="el" href="structwxAudioFileInfo.html">wxAudioFileInfo</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxAudioFileInfo.html#m4">nRate</a></td><td><a class="el" href="structwxAudioFileInfo.html">wxAudioFileInfo</a></td><td></td></tr>
+</table><hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:32 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\structwxAudioFileInfo.html wxWindows\samples\mediaplayer\docs\structwxAudioFileInfo.html
--- wxWindows.orig\samples\mediaplayer\docs\structwxAudioFileInfo.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\structwxAudioFileInfo.html	Mon Apr 28 14:00:26 2003
@@ -0,0 +1,230 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>wxAudioFileInfo struct Reference</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>wxAudioFileInfo Struct Reference</h1><code>#include &lt;<a class="el" href="audiofile_8h-source.html">audiofile.h</a>&gt;</code>
+<p>
+<a href="structwxAudioFileInfo-members.html">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
+<tr><td></td></tr>
+<tr><td colspan=2><br><h2>Public Attributes</h2></td></tr>
+<tr><td nowrap align=right valign=top>double&nbsp;</td><td valign=bottom><a class="el" href="structwxAudioFileInfo.html#m0">dCurrentPos</a></td></tr>
+<tr><td nowrap align=right valign=top>double&nbsp;</td><td valign=bottom><a class="el" href="structwxAudioFileInfo.html#m1">dEndPos</a></td></tr>
+<tr><td nowrap align=right valign=top>double&nbsp;</td><td valign=bottom><a class="el" href="structwxAudioFileInfo.html#m2">dStartPos</a></td></tr>
+<tr><td nowrap align=right valign=top>int&nbsp;</td><td valign=bottom><a class="el" href="structwxAudioFileInfo.html#m3">nFormat</a></td></tr>
+<tr><td nowrap align=right valign=top>long&nbsp;</td><td valign=bottom><a class="el" href="structwxAudioFileInfo.html#m4">nRate</a></td></tr>
+<tr><td nowrap align=right valign=top>bool&nbsp;</td><td valign=bottom><a class="el" href="structwxAudioFileInfo.html#m5">bLoop</a></td></tr>
+<tr><td nowrap align=right valign=top>double&nbsp;</td><td valign=bottom><a class="el" href="structwxAudioFileInfo.html#m6">dPlayingTime</a></td></tr>
+<tr><td nowrap align=right valign=top>off_t&nbsp;</td><td valign=bottom><a class="el" href="structwxAudioFileInfo.html#m7">nPCMLength</a></td></tr>
+<tr><td nowrap align=right valign=top>off_t&nbsp;</td><td valign=bottom><a class="el" href="structwxAudioFileInfo.html#m8">nBytesPerSecPCM</a></td></tr>
+</table>
+<hr><h2>Member Data Documentation</h2>
+<a name="m5" doxytag="wxAudioFileInfo::bLoop"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> bool wxAudioFileInfo::bLoop
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m0" doxytag="wxAudioFileInfo::dCurrentPos"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> double wxAudioFileInfo::dCurrentPos
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m1" doxytag="wxAudioFileInfo::dEndPos"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> double wxAudioFileInfo::dEndPos
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m6" doxytag="wxAudioFileInfo::dPlayingTime"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> double wxAudioFileInfo::dPlayingTime
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m2" doxytag="wxAudioFileInfo::dStartPos"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> double wxAudioFileInfo::dStartPos
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m8" doxytag="wxAudioFileInfo::nBytesPerSecPCM"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> off_t wxAudioFileInfo::nBytesPerSecPCM
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m3" doxytag="wxAudioFileInfo::nFormat"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> int wxAudioFileInfo::nFormat
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m7" doxytag="wxAudioFileInfo::nPCMLength"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> off_t wxAudioFileInfo::nPCMLength
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m4" doxytag="wxAudioFileInfo::nRate"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> long wxAudioFileInfo::nRate
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<hr>The documentation for this struct was generated from the following file:<ul>
+<li><a class="el" href="audiofile_8h-source.html">audiofile.h</a></ul>
+<hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:32 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\structwxWaveStruct-members.html wxWindows\samples\mediaplayer\docs\structwxWaveStruct-members.html
--- wxWindows.orig\samples\mediaplayer\docs\structwxWaveStruct-members.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\structwxWaveStruct-members.html	Mon Apr 28 14:00:26 2003
@@ -0,0 +1,28 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>Member List</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>wxWaveStruct Member List</h1>This is the complete list of members for <a class="el" href="structwxWaveStruct.html">wxWaveStruct</a>, including all inherited members.<table>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxWaveStruct.html#m10">BitsPerSample</a></td><td><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxWaveStruct.html#m9">BlockAlign</a></td><td><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxWaveStruct.html#m8">BytesPerSec</a></td><td><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxWaveStruct.html#m6">Channels</a></td><td><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxWaveStruct.html#m11">data</a></td><td><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxWaveStruct.html#m12">dataSize</a></td><td><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxWaveStruct.html#m3">fmt</a></td><td><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxWaveStruct.html#m4">fmtSize</a></td><td><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxWaveStruct.html#m5">Format</a></td><td><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxWaveStruct.html#m0">riff</a></td><td><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxWaveStruct.html#m1">riffSize</a></td><td><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxWaveStruct.html#m7">SamplesPerSec</a></td><td><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a></td><td></td></tr>
+  <tr bgcolor="#f0f0f0"><td><a class="el" href="structwxWaveStruct.html#m2">wave</a></td><td><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a></td><td></td></tr>
+</table><hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:32 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\structwxWaveStruct.html wxWindows\samples\mediaplayer\docs\structwxWaveStruct.html
--- wxWindows.orig\samples\mediaplayer\docs\structwxWaveStruct.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\structwxWaveStruct.html	Mon Apr 28 14:00:26 2003
@@ -0,0 +1,322 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>wxWaveStruct struct Reference</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>wxWaveStruct Struct Reference</h1><code>#include &lt;<a class="el" href="wave_8h-source.html">wave.h</a>&gt;</code>
+<p>
+<a href="structwxWaveStruct-members.html">List of all members.</a><table border=0 cellpadding=0 cellspacing=0>
+<tr><td></td></tr>
+<tr><td colspan=2><br><h2>Public Attributes</h2></td></tr>
+<tr><td nowrap align=right valign=top>unsigned char&nbsp;</td><td valign=bottom><a class="el" href="structwxWaveStruct.html#m0">riff</a> [4]</td></tr>
+<tr><td nowrap align=right valign=top>unsigned int&nbsp;</td><td valign=bottom><a class="el" href="structwxWaveStruct.html#m1">riffSize</a></td></tr>
+<tr><td nowrap align=right valign=top>unsigned char&nbsp;</td><td valign=bottom><a class="el" href="structwxWaveStruct.html#m2">wave</a> [4]</td></tr>
+<tr><td nowrap align=right valign=top>unsigned char&nbsp;</td><td valign=bottom><a class="el" href="structwxWaveStruct.html#m3">fmt</a> [4]</td></tr>
+<tr><td nowrap align=right valign=top>unsigned&nbsp;</td><td valign=bottom><a class="el" href="structwxWaveStruct.html#m4">fmtSize</a></td></tr>
+<tr><td nowrap align=right valign=top>unsigned short&nbsp;</td><td valign=bottom><a class="el" href="structwxWaveStruct.html#m5">Format</a></td></tr>
+<tr><td nowrap align=right valign=top>unsigned short&nbsp;</td><td valign=bottom><a class="el" href="structwxWaveStruct.html#m6">Channels</a></td></tr>
+<tr><td nowrap align=right valign=top>unsigned&nbsp;</td><td valign=bottom><a class="el" href="structwxWaveStruct.html#m7">SamplesPerSec</a></td></tr>
+<tr><td nowrap align=right valign=top>unsigned&nbsp;</td><td valign=bottom><a class="el" href="structwxWaveStruct.html#m8">BytesPerSec</a></td></tr>
+<tr><td nowrap align=right valign=top>unsigned short&nbsp;</td><td valign=bottom><a class="el" href="structwxWaveStruct.html#m9">BlockAlign</a></td></tr>
+<tr><td nowrap align=right valign=top>unsigned short&nbsp;</td><td valign=bottom><a class="el" href="structwxWaveStruct.html#m10">BitsPerSample</a></td></tr>
+<tr><td nowrap align=right valign=top>unsigned char&nbsp;</td><td valign=bottom><a class="el" href="structwxWaveStruct.html#m11">data</a> [4]</td></tr>
+<tr><td nowrap align=right valign=top>unsigned&nbsp;</td><td valign=bottom><a class="el" href="structwxWaveStruct.html#m12">dataSize</a></td></tr>
+</table>
+<hr><h2>Member Data Documentation</h2>
+<a name="m10" doxytag="wxWaveStruct::BitsPerSample"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> unsigned short wxWaveStruct::BitsPerSample
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m9" doxytag="wxWaveStruct::BlockAlign"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> unsigned short wxWaveStruct::BlockAlign
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m8" doxytag="wxWaveStruct::BytesPerSec"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> unsigned wxWaveStruct::BytesPerSec
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m6" doxytag="wxWaveStruct::Channels"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> unsigned short wxWaveStruct::Channels
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m11" doxytag="wxWaveStruct::data"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> unsigned char wxWaveStruct::data[4]
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m12" doxytag="wxWaveStruct::dataSize"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> unsigned wxWaveStruct::dataSize
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m3" doxytag="wxWaveStruct::fmt"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> unsigned char wxWaveStruct::fmt[4]
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m4" doxytag="wxWaveStruct::fmtSize"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> unsigned wxWaveStruct::fmtSize
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m5" doxytag="wxWaveStruct::Format"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> unsigned short wxWaveStruct::Format
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m0" doxytag="wxWaveStruct::riff"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> unsigned char wxWaveStruct::riff[4]
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m1" doxytag="wxWaveStruct::riffSize"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> unsigned int wxWaveStruct::riffSize
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m7" doxytag="wxWaveStruct::SamplesPerSec"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> unsigned wxWaveStruct::SamplesPerSec
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<a name="m2" doxytag="wxWaveStruct::wave"></a><p>
+<table width="100%" cellpadding="2" cellspacing="0" border="0">
+  <tr>
+    <td class="md">
+      <table cellpadding="0" cellspacing="0" border="0">
+        <tr>
+          <td class="md" nowrap valign="top"> unsigned char wxWaveStruct::wave[4]
+      </table>
+    </td>
+  </tr>
+</table>
+<table cellspacing=5 cellpadding=0 border=0>
+  <tr>
+    <td>
+      &nbsp;
+    </td>
+    <td>
+
+<p>
+    </td>
+  </tr>
+</table>
+<hr>The documentation for this struct was generated from the following file:<ul>
+<li><a class="el" href="wave_8h-source.html">wave.h</a></ul>
+<hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:32 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\wave_8cpp.html wxWindows\samples\mediaplayer\docs\wave_8cpp.html
--- wxWindows.orig\samples\mediaplayer\docs\wave_8cpp.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\wave_8cpp.html	Mon Apr 28 14:00:26 2003
@@ -0,0 +1,21 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>wave.cpp File Reference</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>wave.cpp File Reference</h1><code>#include "wx/wxprec.h"</code><br>
+<code>#include "wx/file.h"</code><br>
+<code>#include "wx/thread.h"</code><br>
+<code>#include "<a class="el" href="audio_8h-source.html">wx/audio.h</a>"</code><br>
+<table border=0 cellpadding=0 cellspacing=0>
+<tr><td></td></tr>
+</table>
+<hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:31 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\wave_8h-source.html wxWindows\samples\mediaplayer\docs\wave_8h-source.html
--- wxWindows.orig\samples\mediaplayer\docs\wave_8h-source.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\wave_8h-source.html	Mon Apr 28 14:00:26 2003
@@ -0,0 +1,73 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>wave.h Source File</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>wave.h</h1><a href="wave_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre>00001 
+00002 <span class="comment">// Name:        wave.h</span>
+00003 <span class="comment">// Purpose:     Plays wave files using wxAudio</span>
+00004 <span class="comment">// Author:      Ryan Norton</span>
+00005 <span class="comment">// Modified by:</span>
+00006 <span class="comment">// RCS-ID:      $$</span>
+00007 <span class="comment">// Copyright:   (c) Ryan Norton, Julian Smart</span>
+00008 <span class="comment">// Licence:     wxWindows license</span>
+00010 <span class="comment"></span>
+00011 <span class="comment">//</span>
+00012 <span class="comment">//  Header for WAVE files.</span>
+00013 <span class="comment">//</span>
+<a name="l00014"></a><a class="code" href="structwxWaveStruct.html">00014</a> <span class="keyword">typedef</span> <span class="keyword">struct</span>
+00015 <span class="keyword"></span>{
+<a name="l00016"></a><a class="code" href="structwxWaveStruct.html#m0">00016</a>        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>        riff[4];             <span class="comment">// 'RIFF'</span>
+<a name="l00017"></a><a class="code" href="structwxWaveStruct.html#m1">00017</a>        <span class="keywordtype">unsigned</span> <span class="keywordtype">int</span>  riffSize;
+<a name="l00018"></a><a class="code" href="structwxWaveStruct.html#m2">00018</a>        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>        wave[4];             <span class="comment">// 'WAVE'</span>
+<a name="l00019"></a><a class="code" href="structwxWaveStruct.html#m3">00019</a>        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>        fmt[4];                     <span class="comment">// 'fmt '</span>
+<a name="l00020"></a><a class="code" href="structwxWaveStruct.html#m4">00020</a>        <span class="keywordtype">unsigned</span>             fmtSize;
+<a name="l00021"></a><a class="code" href="structwxWaveStruct.html#m5">00021</a>        <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>       Format;                              
+<a name="l00022"></a><a class="code" href="structwxWaveStruct.html#m6">00022</a>        <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>       Channels;
+<a name="l00023"></a><a class="code" href="structwxWaveStruct.html#m7">00023</a>        <span class="keywordtype">unsigned</span>             SamplesPerSec;
+<a name="l00024"></a><a class="code" href="structwxWaveStruct.html#m8">00024</a>        <span class="keywordtype">unsigned</span>             BytesPerSec;
+<a name="l00025"></a><a class="code" href="structwxWaveStruct.html#m9">00025</a>        <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>       BlockAlign;
+<a name="l00026"></a><a class="code" href="structwxWaveStruct.html#m10">00026</a>        <span class="keywordtype">unsigned</span> <span class="keywordtype">short</span>       BitsPerSample;
+<a name="l00027"></a><a class="code" href="structwxWaveStruct.html#m11">00027</a>        <span class="keywordtype">unsigned</span> <span class="keywordtype">char</span>        data[4];             <span class="comment">// 'data'</span>
+<a name="l00028"></a><a class="code" href="structwxWaveStruct.html#m12">00028</a>        <span class="keywordtype">unsigned</span>             dataSize;
+00029 } <a class="code" href="structwxWaveStruct.html">wxWaveStruct</a>;
+00030 
+<a name="l00034"></a><a class="code" href="classwxWave.html">00034</a> <span class="keyword">class </span><a class="code" href="classwxWave.html">wxWave</a> : <span class="keyword">public</span> <a class="code" href="classwxAudioFile.html">wxAudioFile</a>
+00035 {
+00037                             <span class="keyword">protected</span>:
+00039 
+<a name="l00042"></a><a class="code" href="classwxWave.html#n0">00042</a>     <a class="code" href="structwxWaveStruct.html">wxWaveStruct</a> <a class="code" href="classwxWave.html#n0">kWS</a>;
+00043 
+00045                             <span class="keyword">public</span>:
+00047 
+00050     <a class="code" href="classwxWave.html#a0">wxWave</a>();
+00051 
+00055     <a class="code" href="classwxWave.html#a0">wxWave</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFile, OpenMode mode = wxFile::read); 
+00056 
+00060     <span class="keyword">virtual</span> <a class="code" href="classwxWave.html#a2">~wxWave</a>();
+00061 
+00065     <span class="keyword">virtual</span> <span class="keywordtype">int</span> <a class="code" href="classwxWave.html#a3">Close</a>();
+00066 
+00075     <span class="keyword">virtual</span> <span class="keywordtype">bool</span> <a class="code" href="classwxWave.html#a4">Open</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFile, OpenMode mode = wxFile::read);
+00076     
+00083     <span class="keyword">virtual</span> off_t <a class="code" href="classwxWave.html#a5">ReadPCM</a> (<span class="keywordtype">void</span>* pData, off_t nNumToRead);
+00084 
+00088     <span class="keyword">virtual</span> <span class="keywordtype">double</span> <a class="code" href="classwxWave.html#a6">SeekTime</a>(<span class="keywordtype">double</span> dWhere);
+00089     
+00090 <span class="comment">//</span>
+00091 <span class="comment">//</span>
+00092 <span class="comment">//  Functions for backwards compatability (REMOVE?)</span>
+00093 <span class="comment">//</span>
+00094 <span class="comment">//</span>
+00095     <span class="keywordtype">bool</span> <a class="code" href="classwxWave.html#a7">Create</a>(<span class="keyword">const</span> <span class="keywordtype">char</span>* szFile, <span class="keywordtype">bool</span> bLoadFromResource = <span class="keyword">false</span>);
+00096     <span class="keywordtype">bool</span> <a class="code" href="classwxWave.html#a8">IsOk</a>() <span class="keyword">const</span>;                                
+00097 };<span class="comment">//end of wxWave</span>
+</pre></div><hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:31 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\docs\wave_8h.html wxWindows\samples\mediaplayer\docs\wave_8h.html
--- wxWindows.orig\samples\mediaplayer\docs\wave_8h.html	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\docs\wave_8h.html	Mon Apr 28 14:00:26 2003
@@ -0,0 +1,22 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
+<html><head><meta http-equiv="Content-Type" content="text/html;charset=iso-8859-1">
+<title>wave.h File Reference</title>
+<link href="doxygen.css" rel="stylesheet" type="text/css">
+</head><body>
+<!-- Generated by Doxygen 1.3 -->
+<center>
+<a class="qindex" href="index.html">Main Page</a> &nbsp; <a class="qindex" href="hierarchy.html">Class Hierarchy</a> &nbsp; <a class="qindex" href="annotated.html">Compound List</a> &nbsp; <a class="qindex" href="files.html">File List</a> &nbsp; <a class="qindex" href="functions.html">Compound Members</a> &nbsp; <a class="qindex" href="globals.html">File Members</a> &nbsp; </center>
+<hr><h1>wave.h File Reference</h1>
+<p>
+<a href="wave_8h-source.html">Go to the source code of this file.</a><table border=0 cellpadding=0 cellspacing=0>
+<tr><td></td></tr>
+<tr><td colspan=2><br><h2>Compounds</h2></td></tr>
+<tr><td nowrap align=right valign=top>class &nbsp;</td><td valign=bottom><a class="el" href="classwxWave.html">wxWave</a></td></tr>
+<tr><td nowrap align=right valign=top>struct &nbsp;</td><td valign=bottom><a class="el" href="structwxWaveStruct.html">wxWaveStruct</a></td></tr>
+</table>
+<hr><address style="align: right;"><small>Generated on Mon Apr 28 13:55:32 2003 for wxAudio by
+<a href="http://www.doxygen.org/index.html">
+<img src="doxygen.png" alt="doxygen" align="middle" border=0 
+width=110 height=53></a>1.3 </small></address>
+</body>
+</html>
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\mediaplayer.cpp wxWindows\samples\mediaplayer\mediaplayer.cpp
--- wxWindows.orig\samples\mediaplayer\mediaplayer.cpp	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\mediaplayer.cpp	Mon Apr 28 16:13:43 2003
@@ -0,0 +1,303 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        minimal.cpp
+// Purpose:     Minimal wxWindows sample
+// Author:      Julian Smart
+// Modified by:
+// Created:     04/01/98
+// RCS-ID:      $Id: mediaplayer.cpp,v 1.4 2003/04/28 22:49:12 Administrator Exp $
+// Copyright:   (c) Julian Smart
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+// ============================================================================
+// declarations
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+// For compilers that support precompilation, includes "wx/wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+// for all others, include the necessary headers (this file is usually all you
+// need because it includes almost all "standard" wxWindows headers)
+#ifndef WX_PRECOMP
+    #include "wx/wx.h"
+#endif
+
+#include "wx/audio.h"
+
+//required libraries
+#ifdef _MSC_VER 
+    #pragma comment(lib, "zlib.lib")
+    #pragma comment(lib, "regex.lib")
+    #pragma comment(lib, "jpeg.lib")
+    #pragma comment(lib, "tiff.lib")
+    #pragma comment(lib, "wxmsw.lib")
+    #pragma comment(lib, "png.lib") 
+    #pragma comment(lib, "comctl32.lib")
+    #pragma comment(lib, "rpcrt4.lib")
+    #pragma comment(lib, "wsock32.lib")  
+#endif
+   
+// ----------------------------------------------------------------------------
+// resources
+// ----------------------------------------------------------------------------
+
+// the application icon (under Windows and OS/2 it is in resources)
+#if defined(__WXGTK__) || defined(__WXMOTIF__) || defined(__WXMAC__) || defined(__WXMGL__) || defined(__WXX11__)
+    #include "mondrian.xpm"
+#endif
+
+// ----------------------------------------------------------------------------
+// private classes
+// ----------------------------------------------------------------------------
+
+// Define a new application type, each program should derive a class from wxApp
+class MyApp : public wxApp
+{
+public:
+    // override base class virtuals
+    // ----------------------------
+
+    // this one is called on application startup and is a good place for the app
+    // initialization (doing it here and not in the ctor allows to have an error
+    // return: if OnInit() returns false, the application terminates)
+    virtual bool OnInit();
+    int OnExit();
+};
+
+int MyApp::OnExit()
+{
+    wxAudio::Shutdown();
+
+    return 0;
+}
+// Define a new frame type: this is going to be our main frame
+class MyFrame : public wxFrame
+{
+public:
+    // ctor(s)
+    MyFrame(const wxString& title, const wxPoint& pos, const wxSize& size,
+            long style = wxDEFAULT_FRAME_STYLE);
+
+    // event handlers (these functions should _not_ be virtual)
+    void OnPlay(wxCommandEvent& event);
+    void OnStream(wxCommandEvent& event);
+    void OnQuit(wxCommandEvent& event);
+    void OnAbout(wxCommandEvent& event);
+
+    void OnSliderUpdate(wxCommandEvent& event);
+
+private:
+    // any class wishing to process wxWindows events must use this macro
+    DECLARE_EVENT_TABLE()
+        wxSlider* pSlider;
+    wxAudioFile* kAudioFile;
+};
+
+// ----------------------------------------------------------------------------
+// constants
+// ----------------------------------------------------------------------------
+
+// IDs for the controls and the menu commands
+enum
+{
+    Minimal_Play = 3,
+    Minimal_Stream = 4,
+
+    // menu items
+    Minimal_Quit = 2,
+
+    // it is important for the id corresponding to the "About" command to have
+    // this standard value as otherwise it won't be handled properly under Mac
+    // (where it is special and put into the "Apple" menu)
+    Minimal_About = wxID_ABOUT,
+};
+const int  ID_SLIDER            = 181;
+// ----------------------------------------------------------------------------
+// event tables and other macros for wxWindows
+// ----------------------------------------------------------------------------
+
+// the event tables connect the wxWindows events with the functions (event
+// handlers) which process them. It can be also done at run-time, but for the
+// simple menu events like this the static method is much simpler.
+BEGIN_EVENT_TABLE(MyFrame, wxFrame)
+    EVT_MENU(Minimal_Play,  MyFrame::OnPlay)
+    EVT_MENU(Minimal_Stream,  MyFrame::OnStream)
+    EVT_MENU(Minimal_Quit,  MyFrame::OnQuit)
+    EVT_MENU(Minimal_About, MyFrame::OnAbout)
+    EVT_SLIDER    (ID_SLIDER,               MyFrame::OnSliderUpdate)
+END_EVENT_TABLE()
+
+// Create a new application object: this macro will allow wxWindows to create
+// the application object during program execution (it's better than using a
+// static object for many reasons) and also declares the accessor function
+// wxGetApp() which will return the reference of the right type (i.e. MyApp and
+// not wxApp)
+IMPLEMENT_APP(MyApp)
+
+// ============================================================================
+// implementation
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// the application class
+// ----------------------------------------------------------------------------
+
+// 'Main program' equivalent: the program execution "starts" here
+bool MyApp::OnInit()
+{
+    // create the main application window
+    MyFrame *frame = new MyFrame(_T("Minimal wxWindows App"),
+                                 wxPoint(50, 50), wxSize(450, 340));
+
+    // and show it (the frames, unlike simple controls, are not shown when
+    // created initially)
+    frame->Show(TRUE);
+
+    wxAudio::Init();
+
+    // success: wxApp::OnRun() will be called which will enter the main message
+    // loop and the application will run. If we returned FALSE here, the
+    // application would exit immediately.
+    return TRUE;
+}
+
+// ----------------------------------------------------------------------------
+// main frame
+// ----------------------------------------------------------------------------
+
+// frame constructor
+MyFrame::MyFrame(const wxString& title, const wxPoint& pos, const wxSize& size, long style)
+: wxFrame(NULL, -1, title, pos, size, style) ,kAudioFile(NULL)
+{
+    // set the frame icon
+    SetIcon(wxICON(mondrian));
+
+#if wxUSE_MENUS
+    // create a menu bar
+    wxMenu *menuFile = new wxMenu;
+
+    // the "About" item should be in the help menu
+    wxMenu *helpMenu = new wxMenu;
+    helpMenu->Append(Minimal_About, _T("&About...\tF1"), _T("Show about dialog"));
+
+    menuFile->Append(Minimal_Play, _T("&Play"), _T("Open a file"));
+    menuFile->Append(Minimal_Stream, _T("&Stream"), _T("Open a file"));
+    menuFile->Append(Minimal_Quit, _T("E&xit\tAlt-X"), _T("Quit this program"));
+
+    // now append the freshly created menu to the menu bar...
+    wxMenuBar *menuBar = new wxMenuBar();
+    menuBar->Append(menuFile, _T("&File"));
+    menuBar->Append(helpMenu, _T("&Help"));
+
+    // ... and attach this menu bar to the frame
+    SetMenuBar(menuBar);
+#endif // wxUSE_MENUS
+
+#if wxUSE_STATUSBAR
+    // create a status bar just for fun (by default with 1 pane only)
+    CreateStatusBar(2);
+    SetStatusText(_T("Welcome to wxWindows!"));
+#endif // wxUSE_STATUSBAR
+    
+    pSlider = new wxSlider(this, -1, 0, 0, 0, wxPoint(100,50));
+
+}
+
+void MyFrame::OnSliderUpdate(wxCommandEvent& event)
+{
+//    kAudioFile.SetAudioPosition(pSlider->GetValue());
+}
+
+
+// event handlers
+#include <math.h>
+#undef wxASSERT
+#define wxASSERT(cond) \
+    if (!(cond)) \
+    {\
+    unsigned int d = 1;\
+    alDeleteBuffers(1,&d);\
+        wxMessageDialog(NULL, #cond).ShowModal();\
+        alutExit();\
+        return;\
+    }
+    void MyFrame::OnPlay(wxCommandEvent& event)
+{
+    wxFileDialog kFD (this);
+
+    if (kFD.ShowModal() == wxID_OK)
+    {
+//        if (kAudioFile != NULL)
+//            delete kAudioFile;
+
+        if ((kAudioFile = wxAudio::OpenFile(kFD.GetPath())) == NULL)
+            wxMessageBox("ERROR 1");
+        if (!kAudioFile->Play())
+            wxMessageBox("ERROR 2");
+
+        pSlider->SetRange(0, ceil(kAudioFile->GetPlayingTime()));
+
+/*
+        wxLogSysError(wxString::Format("Length:%u REALLENGTH:%u Bytes/Second:%i Bytes/SecondPCM:%i Factor:%f",
+            kAudioFile->Length(),
+            kAudioFile->LengthPCM(),
+            kAudioFile->GetBytesPerSecond(),
+            kAudioFile->GetBytesPerSecondPCM(),
+            kAudioFile->GetCompressionFactor()
+//            kAudioFile->LengthPCM() /
+  //          kAudioFile->Length() 
+            
+            
+            ));
+*/
+       
+       
+    }
+}
+
+       void MyFrame::OnStream(wxCommandEvent& event)
+{
+    wxFileDialog kFD (this);
+
+    if (kFD.ShowModal() == wxID_OK)
+    {
+//        if (kAudioFile != NULL)
+//            delete kAudioFile;
+
+        if ((kAudioFile = wxAudio::OpenFile(kFD.GetPath())) == NULL)
+            wxMessageBox("ERROR 1");
+        if (!kAudioFile->Stream())
+            wxMessageBox("ERROR 2");
+
+        pSlider->SetRange(0, ceil(kAudioFile->GetPlayingTime()));
+  
+    }
+}
+
+
+    void MyFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
+{
+    
+
+if (kAudioFile != NULL)
+    delete kAudioFile;
+    // TRUE is to force the frame to close
+    Close(TRUE);
+}
+
+void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
+{
+    wxString msg;
+    msg.Printf( _T("This is the About dialog of the minimal sample.\n")
+                _T("Welcome to %s"), wxVERSION_STRING);
+
+    wxMessageBox(msg, _T("About Minimal"), wxOK | wxICON_INFORMATION, this);
+}
\ No newline at end of file
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\readme.txt wxWindows\samples\mediaplayer\readme.txt
--- wxWindows.orig\samples\mediaplayer\readme.txt	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\readme.txt	Mon Apr 28 15:49:12 2003
@@ -0,0 +1,51 @@
+Things are layed out like they are wxwindows.
+
+Just include wx/audio.h to take advantage of the api.
+
+If you have a compiler other than msvc you'll need to include
+the appropriate libs (libvorbis, libvorbisfile etc - see audio.h pragmas).
+
+If you've got it, run doxygen :).
+
+-------------
+WHAT WORKS:
+Playing wave files using Play() or Stream() (playing from point a to b not supported with Stream() yet, 
+									Play() has static before and after playback)
+Playing ogg files with Stream() (Staticy) or Play() (PERFECT!)
+-------------
+Revision info:
+0.4 - Added thread support for Play() - initial patch release
+
+0.3 - wxOgg::ReadPCM() works correctly now (:)) (3:26)
+
+0.2 - wxOgg::GetBytesPerSecondPCM() works correctly now (:)) (3:20)
+
+0.1 - initial
+
+--------------
+Bugs:
+Ogg playback "staticy" (getting less worse now)
+
+doesn't play from a certain point to a certain point correctly yet,
+although waves do with wxWave::Play
+
+A few random crashes when closing up
+
+Play() with wxWaves is staticy before and after playback
+
+pBuffer still needs to be deleted (will probably be added to wxAudioFile)
+
+----------------
+Adding another audio format to wxAudio you need to do -3- things:
+Inherit wxAudioFile
+
+Implement 4 virtual functions-
+Open Close SeekTime ReadPCM
+
+fill the following members of the wxAudioInfo struct (kInfo) when opening:
+    nFormat              
+    nRate                
+    bLoop
+    dPlayingTime
+    nPCMLength
+   nBytesPerSecPCM
Binary files wxWindows.orig\samples\mediaplayer\Release\audio.obj and wxWindows\samples\mediaplayer\Release\audio.obj differ
Binary files wxWindows.orig\samples\mediaplayer\Release\audiofile.obj and wxWindows\samples\mediaplayer\Release\audiofile.obj differ
Binary files wxWindows.orig\samples\mediaplayer\Release\mediaplayer.obj and wxWindows\samples\mediaplayer\Release\mediaplayer.obj differ
Binary files wxWindows.orig\samples\mediaplayer\Release\minimal.pch and wxWindows\samples\mediaplayer\Release\minimal.pch differ
Binary files wxWindows.orig\samples\mediaplayer\Release\ogg.obj and wxWindows\samples\mediaplayer\Release\ogg.obj differ
Binary files wxWindows.orig\samples\mediaplayer\Release\vc60.idb and wxWindows\samples\mediaplayer\Release\vc60.idb differ
Binary files wxWindows.orig\samples\mediaplayer\Release\wave.obj and wxWindows\samples\mediaplayer\Release\wave.obj differ
Binary files wxWindows.orig\samples\mediaplayer\Release\wxSound.exe and wxWindows\samples\mediaplayer\Release\wxSound.exe differ
Binary files wxWindows.orig\samples\mediaplayer\Release\wxSound.pdb and wxWindows\samples\mediaplayer\Release\wxSound.pdb differ
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\Release\wxSound.RPT wxWindows\samples\mediaplayer\Release\wxSound.RPT
--- wxWindows.orig\samples\mediaplayer\Release\wxSound.RPT	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\Release\wxSound.RPT	Mon Apr 28 16:12:44 2003
@@ -0,0 +1,42 @@
+********************************
+
+Exception code: C0000005 ACCESS_VIOLATION
+Fault address:  77F87E4B 01:00006E4B C:\WINNT\system32\ntdll.dll
+
+Registers:
+EAX:00000008
+EBX:C0000000
+ECX:7FFDE000
+EDX:00000008
+ESI:00574020
+EDI:00574018
+CS:EIP:001B:77F87E4B
+SS:ESP:0023:0012FB84  EBP:0012FB90
+DS:0023  ES:0023  FS:0038  GS:0000
+Flags:00010202
+
+Call stack:
+Address   Frame     Logical addr  Module
+77F87E4B  0012FB90  0001:00006E4B C:\WINNT\system32\ntdll.dll
+0044212A  0012FBA8  0001:0004112A C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+00403E5C  0012FBB4  0001:00002E5C C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+004062F0  0012FBC4  0001:000052F0 C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+0040470E  0012FC14  0001:0000370E C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+00406490  0012FC24  0001:00005490 C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+00402BB7  0012FC3C  0001:00001BB7 C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+0040CE1D  0012FC68  0001:0000BE1D C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+0040CC30  0012FCBC  0001:0000BC30 C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+0041734E  0012FD28  0001:0001634E C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+00407B14  0012FD40  0001:00006B14 C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+00407DEF  0012FDA0  0001:00006DEF C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+0041CC85  0012FDBC  0001:0001BC85 C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+77E3A244  0012FDDC  0001:00029244 C:\WINNT\system32\USER32.dll
+77E145E5  0012FE68  0001:000035E5 C:\WINNT\system32\USER32.dll
+77E15B51  0012FE84  0001:00004B51 C:\WINNT\system32\USER32.dll
+00410C47  0012FEA4  0001:0000FC47 C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+00410CF7  0012FEB0  0001:0000FCF7 C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+004118A5  0012FEBC  0001:000108A5 C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+004108C5  0012FF18  0001:0000F8C5 C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+004597FA  0012FF34  0001:000587FA C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+0052B03F  0012FFC0  0001:0012A03F C:\Documents and Settings\Administrator\Desktop\New Folder (5)\wxWindows-2.4.0\samples\mediaplayer\Release\wxSound.exe
+77EA847C  0012FFF0  0001:0002747C C:\WINNT\system32\KERNEL32.dll
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\wxSound.dsp wxWindows\samples\mediaplayer\wxSound.dsp
--- wxWindows.orig\samples\mediaplayer\wxSound.dsp	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\wxSound.dsp	Mon Apr 28 16:15:35 2003
@@ -0,0 +1,139 @@
+# Microsoft Developer Studio Project File - Name="wxSound" - Package Owner=<4>
+# Microsoft Developer Studio Generated Build File, Format Version 6.00
+# ** DO NOT EDIT **
+
+# TARGTYPE "Win32 (x86) Application" 0x0101
+
+CFG=wxSound - Win32 Debug
+!MESSAGE This is not a valid makefile. To build this project using NMAKE,
+!MESSAGE use the Export Makefile command and run
+!MESSAGE 
+!MESSAGE NMAKE /f "wxSound.mak".
+!MESSAGE 
+!MESSAGE You can specify a configuration when running NMAKE
+!MESSAGE by defining the macro CFG on the command line. For example:
+!MESSAGE 
+!MESSAGE NMAKE /f "wxSound.mak" CFG="wxSound - Win32 Debug"
+!MESSAGE 
+!MESSAGE Possible choices for configuration are:
+!MESSAGE 
+!MESSAGE "wxSound - Win32 Release" (based on "Win32 (x86) Application")
+!MESSAGE "wxSound - Win32 Debug" (based on "Win32 (x86) Application")
+!MESSAGE 
+
+# Begin Project
+# PROP AllowPerConfigDependencies 0
+# PROP Scc_ProjName ""
+# PROP Scc_LocalPath ""
+CPP=cl.exe
+MTL=midl.exe
+RSC=rc.exe
+
+!IF  "$(CFG)" == "wxSound - Win32 Release"
+
+# PROP BASE Use_MFC 0
+# PROP BASE Use_Debug_Libraries 0
+# PROP BASE Output_Dir "Release"
+# PROP BASE Intermediate_Dir "Release"
+# PROP BASE Target_Dir ""
+# PROP Use_MFC 0
+# PROP Use_Debug_Libraries 0
+# PROP Output_Dir "Release"
+# PROP Intermediate_Dir "Release"
+# PROP Ignore_Export_Lib 0
+# PROP Target_Dir ""
+# ADD BASE CPP /nologo /W3 /GX /O2 /D "WIN32" /D "NDEBUG" /D "_WINDOWS" /D "_MBCS" /YX /FD /c
+# ADD CPP /nologo /MT /W4 /Z7 /O2 /I "../../include" /I "..\..\lib\msw" /D "NDEBUG" /D "WIN32" /D "_WINDOWS" /D WINVER=0x400 /D "_MT" /D wxUSE_GUI=1 /Fp"Release/minimal.pch" /YX /FD /c
+# ADD BASE MTL /nologo /D "NDEBUG" /mktyplib203 /win32
+# ADD MTL /nologo /D "NDEBUG" /mktyplib203 /win32
+# ADD BASE RSC /l 0x409 /d "NDEBUG"
+# ADD RSC /l 0x409 /d "NDEBUG"
+BSC32=bscmake.exe
+# ADD BASE BSC32 /nologo
+# ADD BSC32 /nologo
+LINK32=link.exe
+# ADD BASE LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:windows /machine:I386
+# ADD LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:windows /debug /machine:I386
+
+!ELSEIF  "$(CFG)" == "wxSound - Win32 Debug"
+
+# PROP BASE Use_MFC 0
+# PROP BASE Use_Debug_Libraries 1
+# PROP BASE Output_Dir "Debug"
+# PROP BASE Intermediate_Dir "Debug"
+# PROP BASE Target_Dir ""
+# PROP Use_MFC 0
+# PROP Use_Debug_Libraries 1
+# PROP Output_Dir "Debug"
+# PROP Intermediate_Dir "Debug"
+# PROP Ignore_Export_Lib 0
+# PROP Target_Dir ""
+# ADD BASE CPP /nologo /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "_MBCS" /YX /FD /GZ /c
+# ADD CPP /nologo /MT /W3 /Gm /GX /ZI /Od /D "WIN32" /D "_DEBUG" /D "_WINDOWS" /D "_MBCS" /YX /FD /GZ /c
+# ADD BASE MTL /nologo /D "_DEBUG" /mktyplib203 /win32
+# ADD MTL /nologo /D "_DEBUG" /mktyplib203 /win32
+# ADD BASE RSC /l 0x409 /d "_DEBUG"
+# ADD RSC /l 0x409 /d "_DEBUG"
+BSC32=bscmake.exe
+# ADD BASE BSC32 /nologo
+# ADD BSC32 /nologo
+LINK32=link.exe
+# ADD BASE LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:windows /debug /machine:I386 /pdbtype:sept
+# ADD LINK32 kernel32.lib user32.lib gdi32.lib winspool.lib comdlg32.lib advapi32.lib shell32.lib ole32.lib oleaut32.lib uuid.lib odbc32.lib odbccp32.lib /nologo /subsystem:windows /debug /machine:I386 /pdbtype:sept
+
+!ENDIF 
+
+# Begin Target
+
+# Name "wxSound - Win32 Release"
+# Name "wxSound - Win32 Debug"
+# Begin Group "Source Files"
+
+# PROP Default_Filter "cpp;c;cxx;rc;def;r;odl;idl;hpj;bat"
+# Begin Source File
+
+SOURCE=..\..\src\openal\audio.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=..\..\src\generic\audiofile.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=.\mediaplayer.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=..\..\src\ogg\ogg.cpp
+# End Source File
+# Begin Source File
+
+SOURCE=..\..\src\generic\wave.cpp
+# End Source File
+# End Group
+# Begin Group "Header Files"
+
+# PROP Default_Filter "h;hpp;hxx;hm;inl"
+# Begin Source File
+
+SOURCE=..\..\include\wx\audio.h
+# End Source File
+# Begin Source File
+
+SOURCE=..\..\include\wx\generic\audiofile.h
+# End Source File
+# Begin Source File
+
+SOURCE=..\..\include\wx\ogg\ogg.h
+# End Source File
+# Begin Source File
+
+SOURCE=..\..\include\wx\generic\wave.h
+# End Source File
+# End Group
+# Begin Group "Resource Files"
+
+# PROP Default_Filter "ico;cur;bmp;dlg;rc2;rct;bin;rgs;gif;jpg;jpeg;jpe"
+# End Group
+# End Target
+# End Project
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\samples\mediaplayer\wxSound.dsw wxWindows\samples\mediaplayer\wxSound.dsw
--- wxWindows.orig\samples\mediaplayer\wxSound.dsw	Wed Dec 31 16:00:00 1969
+++ wxWindows\samples\mediaplayer\wxSound.dsw	Sun Apr 27 20:36:32 2003
@@ -0,0 +1,29 @@
+Microsoft Developer Studio Workspace File, Format Version 6.00
+# WARNING: DO NOT EDIT OR DELETE THIS WORKSPACE FILE!
+
+###############################################################################
+
+Project: "wxSound"=".\wxSound.dsp" - Package Owner=<4>
+
+Package=<5>
+{{{
+}}}
+
+Package=<4>
+{{{
+}}}
+
+###############################################################################
+
+Global:
+
+Package=<5>
+{{{
+}}}
+
+Package=<3>
+{{{
+}}}
+
+###############################################################################
+
Binary files wxWindows.orig\samples\mediaplayer\wxSound.ncb and wxWindows\samples\mediaplayer\wxSound.ncb differ
Binary files wxWindows.orig\samples\mediaplayer\wxSound.opt and wxWindows\samples\mediaplayer\wxSound.opt differ
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\src\generic\audiofile.cpp wxWindows\src\generic\audiofile.cpp
--- wxWindows.orig\src\generic\audiofile.cpp	Wed Dec 31 16:00:00 1969
+++ wxWindows\src\generic\audiofile.cpp	Mon Apr 28 15:49:12 2003
@@ -0,0 +1,229 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        audiofile.cpp
+// Purpose:     wxAudioFile implementation
+// Author:      Ryan Norton
+// Modified by:
+// RCS-ID:      $$
+// Copyright:   (c) Ryan Norton
+// Licence:     wxWindows license
+/////////////////////////////////////////////////////////////////////////////                                                     
+
+//===========================================================================
+//                          HEADERS
+//===========================================================================
+
+#ifdef __GNUG__
+    #pragma implementation "audiofile.h"
+#endif
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+//#ifndef WX_PRECOMP
+    #include "wx/file.h"
+    #include "wx/thread.h"
+    #include "wx/audio.h"
+//#endif
+
+//===========================================================================
+//                          IMPLEMENTATION
+//===========================================================================
+
+wxAudioFile::wxAudioFile()
+{
+        wxThread::Create();
+}
+
+wxAudioFile::wxAudioFile(const char* szFile, OpenMode mode)
+{
+    wxCHECK_RET(Open(szFile, mode), "Opening of Sound File Failed")
+    wxThread::Create();
+
+}
+
+wxAudioFile::~wxAudioFile()
+{
+    Close();
+}
+
+int wxAudioFile::Close()
+{
+    wxFAIL_MSG("NOT IMPLEMENTED");
+
+    return 0;
+}
+
+unsigned int wxAudioFile::GetBytesPerSecond() const
+{
+    return (unsigned int) GetBytesPerSecondPCM() / (double) GetCompressionFactor();
+}
+
+unsigned int wxAudioFile::GetBytesPerSecondPCM() const
+{
+    return kInfo.nBytesPerSecPCM;
+}
+
+double wxAudioFile::GetCompressionFactor() const
+{
+    return LengthPCM() / Length();
+}
+
+double wxAudioFile::GetCurrentPosition()  const
+{
+    return kInfo.dCurrentPos;
+}
+
+double wxAudioFile::GetEndingPosition()  const
+{
+    return kInfo.dEndPos;
+}
+
+int wxAudioFile::GetFormat() const
+{
+    return kInfo.nFormat;
+}
+
+double wxAudioFile::GetPlayingTime() const
+{
+    return kInfo.dPlayingTime;
+}
+
+double wxAudioFile::GetStartingPosition()  const
+{
+    return kInfo.dStartPos;
+}
+
+long wxAudioFile::GetRate() const
+{
+    return kInfo.nRate;
+}
+
+bool wxAudioFile::IsLooping() const
+{
+    return kInfo.bLoop;
+}
+
+bool wxAudioFile::IsPlaying() 
+{
+    return wxAudio::IsFilePlaying(*this);
+}
+
+bool wxAudioFile::IsStreaming()
+{
+    return bStream && wxAudio::IsFilePlaying(*this);
+}
+
+off_t wxAudioFile::LengthPCM() const
+{
+    return kInfo.nPCMLength;
+}
+
+bool wxAudioFile::Play(double dStartPos, double dEndPos, bool bLoop, bool bSeperateThread)
+{
+    kInfo.dStartPos = dStartPos;
+
+    if (dEndPos == -1)
+        dEndPos = GetPlayingTime();
+
+    kInfo.dEndPos = dEndPos;
+    kInfo.bLoop = bLoop;
+
+    bStream = false;
+
+    if (bSeperateThread)//start the stream thread
+        return Run() == wxTHREAD_NO_ERROR;
+    else
+        return wxAudio::PlayFile(*this);
+}
+
+bool wxAudioFile::Open(const char* szFile, OpenMode mode)
+{
+    wxFAIL_MSG("NOT IMPLEMENTED");
+    return false;
+}
+
+off_t wxAudioFile::SeekPCM(off_t nWhere)
+{
+    off_t nNum;
+
+    //LOCK!
+if (IsRunning())
+    Pause();
+
+    SeekTime(0);
+
+    nNum = Seek( (off_t) (nWhere / GetCompressionFactor()) ); 
+
+if (IsRunning())
+    Resume();
+
+    return nNum;
+}
+
+void wxAudioFile::Stop()
+{
+    wxAudio::StopFile(*this);
+}
+
+bool wxAudioFile::Stream(
+               double dStartPos,
+               double dEndPos,
+               bool bLoop,
+               bool bSeperateThread)
+{
+    //assign member variables
+    kInfo.dStartPos = dStartPos;
+
+    if (dEndPos == -1)
+        dEndPos = GetPlayingTime();
+
+    kInfo.dEndPos = dEndPos;
+    kInfo.bLoop = bLoop;
+
+    bStream = true;
+
+    if (bSeperateThread)//start the stream thread
+        return Run() == wxTHREAD_NO_ERROR;
+    else
+        return wxAudio::StreamFile(*this);
+}
+
+wxThread::ExitCode wxAudioFile::Entry()
+{
+    //call child class's PlayStream()
+    if (bStream)
+    {
+        if(wxAudio::StreamFile(*this) == false) 
+            wxLogSysError("Error while streaming wxAudioFile");
+    }
+    else
+    {
+        if(wxAudio::PlayFile(*this) == false) 
+            wxLogSysError("Error while playing wxAudioFile");
+    }
+    return 0;
+}
+
+const WXAUDIOBUFFER*& wxAudioFile::GetBuffers()
+{
+    return kBuffers;
+}
+
+const WXAUDIOSOURCE& wxAudioFile::GetSource()
+{
+    return kSource;
+}
+
+void wxAudioFile::SetBuffers(WXAUDIOBUFFER* kBuffers)
+{
+    this->kBuffers = kBuffers;
+}
+
+void wxAudioFile::SetSource(WXAUDIOSOURCE& kSource)
+{
+    this->kSource = kSource;
+}
\ No newline at end of file
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\src\generic\wave.cpp wxWindows\src\generic\wave.cpp
--- wxWindows.orig\src\generic\wave.cpp	Wed Dec 31 16:00:00 1969
+++ wxWindows\src\generic\wave.cpp	Mon Apr 28 15:49:12 2003
@@ -0,0 +1,126 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        audiofile.cpp
+// Purpose:     wxAudioFile implementation
+// Author:      Ryan Norton
+// Modified by:
+// RCS-ID:      $$
+// Copyright:   (c) Ryan Norton
+// Licence:     wxWindows license
+/////////////////////////////////////////////////////////////////////////////                                                     
+
+//===========================================================================
+//                          HEADERS
+//===========================================================================
+
+#ifdef __GNUG__
+    #pragma implementation "wave.h"
+#endif
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+//#ifndef WX_PRECOMP
+    #include "wx/file.h"
+    #include "wx/thread.h"
+    #include "wx/audio.h"
+//#endif
+
+//===========================================================================
+//                          IMPLEMENTATION
+//===========================================================================
+
+wxWave::wxWave() : wxAudioFile()
+{
+}
+
+wxWave::wxWave(const char* szFile, OpenMode mode) : wxAudioFile(szFile, mode)
+{
+}
+
+wxWave::~wxWave()
+{
+}
+
+int wxWave::Close()
+{
+    Stop();
+
+    return wxFile::Close();
+}
+
+bool wxWave::Open(const char* szFile, OpenMode mode)
+{
+    wxCHECK_LOG(wxFile::Open(szFile, mode) == TRUE, "Parent Open() Failed")
+
+    wxCHECK_LOG(Read(&kWS, sizeof(wxWaveStruct)) == sizeof(wxWaveStruct), "Could not read in intial wavestruct")
+    wxCHECK_MSG(memcmp(kWS.riff, "RIFF", 4) == 0, false, "RIFF header does not exist") 
+    wxCHECK_MSG(memcmp(kWS.wave, "WAVE", 4) == 0, false, "WAVE header does not exist")
+
+    if (kWS.BitsPerSample == 8)
+    {
+        if (kWS.Channels == 1) 
+               kInfo.nFormat = WX_FORMAT_MONO8;
+        else
+               kInfo.nFormat = WX_FORMAT_STEREO8;
+    }
+    else
+    {
+        if (kWS.Channels == 1) 
+               kInfo.nFormat = WX_FORMAT_MONO16;
+        else
+               kInfo.nFormat = WX_FORMAT_STEREO16;
+    }
+
+    kInfo.nBytesPerSecPCM = kWS.BytesPerSec;
+    kInfo.nRate = kWS.SamplesPerSec;
+    kInfo.dPlayingTime = (Length() - sizeof(wxWaveStruct)) / (double)kWS.BytesPerSec;
+    kInfo.nPCMLength = Length() - sizeof(wxWaveStruct);
+
+    return true;
+}
+
+off_t wxWave::ReadPCM(void* pBuffer, off_t nNum)
+{
+    return Read(pBuffer, nNum);
+}
+
+double wxWave::SeekTime(double dTime)
+{
+ /*
+ //LOCK!
+if (IsRunning())
+    Pause();
+*/
+    double dRet =  Seek(sizeof(wxWaveStruct) + (off_t)(GetBytesPerSecondPCM() * dTime), wxFromStart) / 
+            (double) GetBytesPerSecondPCM();
+
+    /*
+if (IsRunning())
+    Resume();
+
+  */
+    return dRet;
+}
+
+//
+//  Backwards compatability
+//
+bool wxWave::Create(const char* szFile, bool bLoadFromResource)
+{
+    if (bLoadFromResource)
+    {
+       wxLogSysError("Loading from a resource is not implemented in wxWave");
+       return false;
+    }
+
+    return Open(szFile);
+}
+
+bool wxWave::IsOk() const
+{
+    return IsOpened();
+}
\ No newline at end of file
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\src\ogg\ogg.cpp wxWindows\src\ogg\ogg.cpp
--- wxWindows.orig\src\ogg\ogg.cpp	Wed Dec 31 16:00:00 1969
+++ wxWindows\src\ogg\ogg.cpp	Mon Apr 28 15:49:12 2003
@@ -0,0 +1,162 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        ogg.cpp
+// Purpose:     wxOgg implementation
+// Author:      Ryan Norton
+// Modified by:
+// RCS-ID:      $$
+// Copyright:   (c) Ryan Norton
+// Licence:     wxWindows license
+/////////////////////////////////////////////////////////////////////////////                                                     
+
+//===========================================================================
+//                          HEADERS
+//===========================================================================
+
+#ifdef __GNUG__
+    #pragma implementation "ogg.h"
+#endif
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+//#ifndef WX_PRECOMP
+    #include "wx/file.h"
+    #include "wx/thread.h"
+    #include "wx/audio.h"
+//#endif
+
+//===========================================================================
+//                          MISC OGG STUFF
+//===========================================================================
+
+size_t ov_read_func  (void *ptr, size_t size, size_t nmemb, void *datasource)
+{
+  return ((wxOgg*)datasource)->Read(ptr, size * nmemb);
+}
+
+int    ov_seek_func  (void *datasource, ogg_int64_t offset, int whence)
+{
+  wxSeekMode mode = wxFromCurrent;
+
+  if (whence == SEEK_CUR)
+      mode = wxFromCurrent;
+  else if (whence == SEEK_SET)
+      mode = wxFromStart;
+  else if (whence == SEEK_END)
+      mode = wxFromEnd;
+
+  return ((wxOgg*)datasource)->Seek(offset, mode);
+}
+
+int    ov_close_func (void *datasource)
+{
+  return ((wxOgg*)datasource)->Close();
+}
+
+long   ov_tell_func  (void *datasource)
+{
+  return ((wxOgg*)datasource)->Tell();
+}
+
+//===========================================================================
+//                          IMPLEMENTATION
+//===========================================================================
+
+wxOgg::wxOgg() : wxAudioFile()
+{
+}
+
+wxOgg::wxOgg(const char* szFile, OpenMode mode) : wxAudioFile(szFile, mode)
+{
+}
+
+wxOgg::~wxOgg()
+{
+}
+
+int wxOgg::Close()
+{
+    if (IsOpened())
+    {
+        Stop();
+        ov_clear(&vf);
+    }
+
+    return wxFile::Close();
+}
+
+off_t wxOgg::ReadPCM(void* pData, off_t nNumToRead)
+{
+    off_t nCur = 0, nTotal = 0;
+    
+    do
+    {
+        nCur = 
+            ov_read(&vf,  &((char*)pData)[nTotal], nNumToRead - nTotal, 0, 2, 1, &nReadPos);
+        nTotal += nCur;
+    }while(nCur != 0 && nTotal < nNumToRead);
+
+    return nTotal;
+}
+
+bool wxOgg::Open(const char* szFile, OpenMode mode)
+{
+    wxCHECK_MSG(wxFile::Open(szFile, mode) == TRUE, false, "Parent Open() Failed")
+
+    //
+    //  ogg specific
+    //
+    ov_callbacks callbacks;// = {ov_read_func, ov_seek_func, ov_close_func, ov_tell_func};
+    
+    callbacks.read_func = ov_read_func;
+    callbacks.seek_func = ov_seek_func;
+    callbacks.close_func = ov_close_func;
+    callbacks.tell_func = ov_tell_func;
+
+    if (ov_open_callbacks(this, &vf,  NULL, 0, callbacks) < 0)
+    {
+        if (ov_open_callbacks(this, &vf,  NULL, 0, callbacks) == OV_EREAD)
+            wxMessageBox("Error reading ogg file");
+        else if (ov_open_callbacks(this, &vf,  NULL, 0, callbacks) == OV_ENOTVORBIS)
+            wxMessageBox("Ogg file is not an Ogg file");
+        else if (ov_open_callbacks(this, &vf,  NULL, 0, callbacks) == OV_EBADHEADER)
+            wxMessageBox("Ogg file has a faulty header");
+        else if (ov_open_callbacks(this, &vf,  NULL, 0, callbacks) == OV_EFAULT)
+            wxMessageBox("Reading ogg file caused a fault");
+        
+        Close();
+        return false;
+    }
+    else
+    {
+        vc = ov_comment(&vf,-1);
+        
+        vi = ov_info(&vf, -1);
+    }
+
+    if (vi->channels == 1)
+       kInfo.nFormat = WX_FORMAT_MONO16;
+    else
+       kInfo.nFormat = WX_FORMAT_STEREO16;
+
+    kInfo.nPCMLength = ov_pcm_total(&vf, -1) * 3.95;
+    kInfo.dPlayingTime =  ov_time_total(&vf, -1);
+    kInfo.nRate = vi->rate;
+    kInfo.nBytesPerSecPCM = kInfo.nPCMLength / kInfo.dPlayingTime;//vi->rate;
+
+    return true;
+}
+
+double wxOgg::SeekTime(double dTime)
+{
+    return ov_time_seek(&vf, dTime);
+}
+
+wxOgg::operator OggVorbis_File* ()
+{
+    return &vf;
+}
diff -ru2 -N -xCVS -x.#* -x*.orig -x*.rej -x*~ wxWindows.orig\src\openal\audio.cpp wxWindows\src\openal\audio.cpp
--- wxWindows.orig\src\openal\audio.cpp	Wed Dec 31 16:00:00 1969
+++ wxWindows\src\openal\audio.cpp	Mon Apr 28 15:49:12 2003
@@ -0,0 +1,311 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        audio.cpp
+// Purpose:     wxAudio implementation.  Contains all openal specific stuff.
+// Author:      Ryan Norton
+// Modified by:
+// RCS-ID:      $$
+// Copyright:   (c) Ryan Norton
+// Licence:     wxWindows license
+/////////////////////////////////////////////////////////////////////////////                                                     
+
+//===========================================================================
+//                          HEADERS
+//===========================================================================
+
+#ifdef __GNUG__
+    #pragma implementation "audio.h"
+#endif
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+//#ifndef WX_PRECOMP
+    #include "wx/file.h"
+    #include "wx/thread.h"
+    #include "wx/audio.h"
+//#endif
+
+//===========================================================================
+//                          IMPLEMENTATION
+//===========================================================================
+//
+//  wxAudioEnv member variables
+//
+int wxAudio::nEAXLevel = 0;
+bool wxAudio::bInit = false;
+
+int wxAudio::GetEAXLevel()
+{
+    return nEAXLevel;
+}
+
+//initilize audio
+bool wxAudio::Init ()
+{
+    //initialize with default settings
+    wxOPENAL_CHECK(alutInit(0, NULL))
+
+    //check for extensions
+    if (alIsExtensionPresent((ALubyte*)"EAX3.0"))
+        nEAXLevel = 3;
+    else if (alIsExtensionPresent((ALubyte*)"EAX2.0"))
+        nEAXLevel = 2;
+    else if (alIsExtensionPresent((ALubyte*)"EAX"))
+        nEAXLevel = 1;
+    else
+        nEAXLevel = 0;        
+
+    //set listener to default values
+    if (!SetListener())
+        return false;
+    
+    bInit = true;
+    return true;
+}
+
+bool wxAudio::IsInitialized()
+{
+    return bInit;
+}
+
+bool wxAudio::IsFilePlaying(wxAudioFile& kFile)
+{
+    if (kFile.IsRunning())
+    {
+       return true;
+    }
+    else
+    {
+       ALint nPlaying;
+       
+       alGetSourcei(kFile.GetSource(), AL_SOURCE_STATE, &nPlaying);
+       
+       if (alGetError() != AL_NO_ERROR)    return false;
+       return nPlaying == AL_PLAYING;
+    }
+}
+
+wxAudioFile* wxAudio::OpenFile(const char* szFile)
+{
+    wxAudioFile* pFile = new wxWave();
+
+    if (pFile->Open(szFile) == false)
+    {
+        delete pFile;
+
+        pFile = new wxOgg();
+
+        wxCHECK_LOG(pFile->Open(szFile) == true,  
+                "Could not open audio file... may be an unsupported format"
+                )
+    }
+
+    return pFile;
+}
+
+bool wxAudio::PlayFile(wxAudioFile& kFile)
+{
+    WXAUDIOSOURCE kSource;
+    WXAUDIOBUFFER kBuffers[NUMBUFFERS];
+
+    off_t nSize = (off_t) kFile.GetBytesPerSecondPCM() *  
+        (kFile.GetEndingPosition() - kFile.GetStartingPosition());
+
+    void* pBuffer = new char[nSize];
+
+    //generate the buffer and source (only 1 since not streaming)
+    wxOPENAL_CHECK(alGenBuffers(NUMBUFFERS, kBuffers))
+    wxOPENAL_CHECK(alGenSources(1, &kSource))
+
+    kFile.SetSource(kSource);
+    kFile.SetBuffers(kBuffers);
+
+    //seek to the starting position
+    kFile.SeekTime(kFile.GetStartingPosition());
+
+    //read in the amount of data we want    
+    if (kFile.ReadPCM(pBuffer, nSize) != nSize)
+        wxLogSysError("Could not read enough for wxAudio::Play()");
+
+    //set up playing parameters
+    wxOPENAL_CHECK(alBufferData(kBuffers[0], kFile.GetFormat(), pBuffer, nSize, kFile.GetRate()))
+    wxOPENAL_CHECK(alSourcei(kSource, AL_BUFFER, kBuffers[0]))
+    wxOPENAL_CHECK(alSourcei(kSource, AL_LOOPING, kFile.IsLooping()))
+    wxOPENAL_CHECK(alSourcePlay(kSource)) 
+
+    while (kFile.IsPlaying())
+        ;
+
+    kFile.Stop();
+
+    delete pBuffer;
+
+    return true;
+}
+
+//not too much to say here...
+//standard 3d stuff :)
+bool wxAudio::SetListener(ALfloat dXPos, ALfloat dYPos , ALfloat dZPos ,
+                     ALfloat dXAt , ALfloat dYAt , ALfloat dZAt ,
+                     ALfloat dXUp , ALfloat dYUp , ALfloat dZUp )
+{
+    float pPosition[3];     // = {dXPos, dYPos, dZPos};
+    float pOrientation[6];  // = {   dXAt = 0.0, dYAt = 0.0, dZAt = -1.0,
+                            //      dXUp = 0.0, dYUp = 1.0, dZUp = 0.0};
+
+    pPosition[0] = dXPos;
+    pPosition[1] = dYPos;
+    pPosition[2] = dZPos;
+
+    pOrientation[0] = dXAt;
+    pOrientation[1] = dYAt;
+    pOrientation[2] = dZAt;
+    pOrientation[3] = dXUp;
+    pOrientation[4] = dYUp;
+    pOrientation[5] = dZUp;
+    
+    wxOPENAL_CHECK(alListenerfv(AL_POSITION, pPosition))
+    wxOPENAL_CHECK(alListenerfv(AL_ORIENTATION, pOrientation))
+
+    return true;
+}
+
+void wxAudio::Shutdown ()
+{
+    alutExit();
+
+    //really nasty failure :)
+    wxASSERT(alGetError() != AL_NO_ERROR);
+
+    bInit = false;
+}
+
+void wxAudio::StopFile(wxAudioFile& kFile)
+{
+    if (kFile.IsPlaying() == false)
+        return;
+    
+    wxOPENAL_CHECK2(alSourceStopv(1, (unsigned int*) &kFile.GetSource()))
+    wxOPENAL_CHECK2(alDeleteSources(1, (unsigned int*) &kFile.GetSource()))
+    wxOPENAL_CHECK2(alDeleteBuffers(NUMBUFFERS, (unsigned int*) kFile.GetBuffers()))
+}
+
+bool wxAudio::StreamFile(wxAudioFile& kFile)
+{    
+    ALuint nSize = kFile.GetBytesPerSecondPCM();//256;//20000;//ov_bitrate(&vf, -1) / 8;
+    ALint nPlaying,  processed;
+    ALuint nNumRead = 0, nBuffers[NUMBUFFERS], nBuffer;
+    
+
+    off_t  nTotalNumRead = 0;
+
+    ALuint nSource;
+
+    char* pBuffer = new char[nSize];
+
+    wxOPENAL_CHECK(alGenBuffers(NUMBUFFERS, nBuffers))
+    wxOPENAL_CHECK(alGenSources(1, &nSource))
+
+    kFile.SetSource(nSource);
+    kFile.SetBuffers(nBuffers);
+
+    kFile.SeekTime(kFile.GetStartingPosition());
+
+    for(int i = 0; i < NUMBUFFERS; ++i)
+    {
+        nNumRead = kFile.ReadPCM (pBuffer, nSize);
+
+        nTotalNumRead += nNumRead;
+
+        if (nNumRead == 0)/* || 
+                ((nTotalNumRead / kFile.GetBytesPerSecondPCM()) >= kFile.GetEndingPosition()))*/
+        {
+            break;
+        }
+
+        wxOPENAL_CHECK(alBufferData(nBuffers[i], kFile.GetFormat(), 
+                                        pBuffer, nSize, kFile.GetRate()))
+    }
+
+    wxOPENAL_CHECK(alSourceQueueBuffers(nSource, NUMBUFFERS, nBuffers))      
+    wxOPENAL_CHECK(alSourcei(nSource, AL_LOOPING, AL_FALSE))
+    wxOPENAL_CHECK(alSourcePlay(nSource)) 
+
+    // Pseudo code for Streaming with Open AL
+    // while (processed)
+    //		Unqueue a buffer
+    //		Load audio data into buffer (returned by UnQueueBuffers)
+    //		if successful
+    //			Queue buffer
+    //			processed--
+    //		else
+    //			buffersinqueue--
+    //			if buffersinqueue == 0
+    //				finished playing !        int nLastNumRead;
+
+    do
+    {
+        wxOPENAL_CHECK(alGetSourcei(nSource, AL_BUFFERS_PROCESSED, &processed))
+
+        while (processed)
+        {
+            wxOPENAL_CHECK(alSourceUnqueueBuffers(nSource, 1, &nBuffer))
+
+            nNumRead = kFile.ReadPCM(pBuffer, nSize);
+
+            nTotalNumRead += nNumRead;
+
+            if (nNumRead == 0)/* || 
+                    ((nTotalNumRead / kFile.GetBytesPerSecondPCM()) >= kFile.GetEndingPosition()))*/
+            {
+                break;
+            }
+
+            wxOPENAL_CHECK(alBufferData(nBuffer, kFile.GetFormat(), pBuffer, nSize, kFile.GetRate()))
+            wxOPENAL_CHECK(alSourceQueueBuffers(nSource, 1, &nBuffer))
+
+            --processed;
+
+        }
+    
+        if (nNumRead == 0 /*||
+            nTotalNumRead / kFile.GetBytesPerSecondPCM() >= kFile.GetEndingPosition()*/)
+        {
+            while(kFile.IsPlaying());
+
+            if (kFile.IsLooping())
+            {
+                kFile.Stop(); 
+                delete [] pBuffer;
+                return StreamFile(kFile);
+            }
+
+            break;
+       }
+
+        wxOPENAL_CHECK(alGetSourcei(nSource, AL_SOURCE_STATE, &nPlaying))
+
+    } while(nPlaying == AL_PLAYING);
+
+    kFile.Stop();
+
+    delete [] pBuffer;
+
+    return true;
+}
+
+bool wxAudioApp::OnInit()
+{
+	wxAudio::Init();
+	return true;
+}
+
+int wxAudioApp::OnExit()
+{
+	wxAudio::Shutdown();
+	return 0;
+}


 	  	 
