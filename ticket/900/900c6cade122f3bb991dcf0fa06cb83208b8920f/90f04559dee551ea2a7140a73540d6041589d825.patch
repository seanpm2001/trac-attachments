Index: include/wx/wfstream.h
===================================================================
--- include/wx/wfstream.h	(revision 47214)
+++ include/wx/wfstream.h	(working copy)
@@ -116,6 +116,7 @@
 {
 public:
     wxFileStream(const wxString& fileName);
+    virtual bool IsOk() const;
 
 private:
     DECLARE_NO_COPY_CLASS(wxFileStream)
Index: src/common/wfstream.cpp
===================================================================
--- src/common/wfstream.cpp	(revision 47214)
+++ src/common/wfstream.cpp	(working copy)
@@ -107,9 +107,9 @@
     return m_file->Tell();
 }
 
-bool wxFileInputStream::IsOk() const 
-{ 
-    return (wxStreamBase::IsOk() && m_file->IsOpened()); 
+bool wxFileInputStream::IsOk() const
+{
+    return (wxStreamBase::IsOk() && m_file->IsOpened());
 }
 
 // ----------------------------------------------------------------------------
@@ -183,9 +183,9 @@
     return m_file->Length();
 }
 
-bool wxFileOutputStream::IsOk() const 
-{ 
-    return (wxStreamBase::IsOk() && m_file->IsOpened()); 
+bool wxFileOutputStream::IsOk() const
+{
+    return (wxStreamBase::IsOk() && m_file->IsOpened());
 }
 
 // ----------------------------------------------------------------------------
@@ -225,6 +225,11 @@
     wxFileOutputStream::m_file = wxFileInputStream::m_file;
 }
 
+bool wxFileStream::IsOk() const
+{
+    return (wxStreamBase::IsOk() && wxFileInputStream::m_file->IsOpened());
+}
+
 #endif //wxUSE_FILE
 
 #if wxUSE_FFILE
@@ -300,9 +305,9 @@
     return m_file->Tell();
 }
 
-bool wxFFileInputStream::IsOk() const 
-{ 
-    return (wxStreamBase::IsOk() && m_file->IsOpened()); 
+bool wxFFileInputStream::IsOk() const
+{
+    return (wxStreamBase::IsOk() && m_file->IsOpened());
 }
 
 // ----------------------------------------------------------------------------
@@ -386,9 +391,9 @@
     return m_file->Length();
 }
 
-bool wxFFileOutputStream::IsOk() const 
-{ 
-    return (wxStreamBase::IsOk() && m_file->IsOpened()); 
+bool wxFFileOutputStream::IsOk() const
+{
+    return (wxStreamBase::IsOk() && m_file->IsOpened());
 }
 
 // ----------------------------------------------------------------------------

 	  	 
