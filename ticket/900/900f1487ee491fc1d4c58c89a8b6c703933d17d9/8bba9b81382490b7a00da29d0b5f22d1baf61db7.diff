diff --git a/src/unix/fswatcher_inotify.cpp b/src/unix/fswatcher_inotify.cpp
index 3d6e8eb..582df03 100644
--- a/src/unix/fswatcher_inotify.cpp
+++ b/src/unix/fswatcher_inotify.cpp
@@ -271,6 +271,22 @@ protected:
             return;
         }
 
+        if (inevt.wd == -1)
+        {
+            // We should have just dealt with IN_Q_OVERFLOW
+            // Maybe there are other warnings/errors where wd is -1, but I've
+            // had occasional -1 IN_ACCESS and IN_MODIFYs events too
+            wxString errMsg = wxString::Format
+                (
+                _("Inotify event with an invalid watch descriptor value\n%s"),
+                InotifyEventToString(inevt).c_str()
+                );
+
+            wxFileSystemWatcherEvent event(wxFSW_EVENT_WARNING, errMsg);
+            SendEvent(event);
+            return;
+        }
+
         wxFSWatchEntry& watch = *(it->second);
 
         // Now IN_UNMOUNT. We must do so here, as it's not in the watch flags
