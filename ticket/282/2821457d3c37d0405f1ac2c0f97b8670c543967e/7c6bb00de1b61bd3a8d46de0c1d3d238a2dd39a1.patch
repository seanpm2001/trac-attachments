Index: docs/latex/wx/accel.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/accel.tex,v
retrieving revision 1.12
diff -bu2 -r1.12 docs/latex/wx/accel.tex
--- docs/latex/wx/accel.tex
+++ docs/latex/wx/accel.tex
@@ -86,4 +86,10 @@
 <wx/accel.h>
 
+\wxheading{Predefined objects}
+
+Objects:
+
+{\bf wxNullAcceleratorTable}
+
 \wxheading{Example}
 
@@ -151,4 +157,5 @@
 
 Destroys the wxAcceleratorTable object.
+See \helpref{reference-counted object destruction}{refcountdestruct} for more info.
 
 \membersection{wxAcceleratorTable::IsOk}\label{wxacceleratortableisok}
@@ -171,34 +178,2 @@
 
 Returns reference to this object.
-
-\membersection{wxAcceleratorTable::operator $==$}\label{wxacceleratortableequal}
-
-\func{bool}{operator $==$}{\param{const wxAcceleratorTable\& }{accel}}
-
-Equality operator. This operator tests whether the internal data pointers are
-equal (a fast test).
-
-\wxheading{Parameters}
-
-\docparam{accel}{Accelerator table to compare with}
-
-\wxheading{Return value}
-
-Returns true if the accelerator tables were effectively equal, false otherwise.
-
-\membersection{wxAcceleratorTable::operator $!=$}\label{wxacceleratortablenotequal}
-
-\func{bool}{operator $!=$}{\param{const wxAcceleratorTable\& }{accel}}
-
-Inequality operator. This operator tests whether the internal data pointers are
-unequal (a fast test).
-
-\wxheading{Parameters}
-
-\docparam{accel}{Accelerator table to compare with}
-
-\wxheading{Return value}
-
-Returns true if the accelerator tables were unequal, false otherwise.
-
-
Index: include/wx/generic/accel.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/generic/accel.h,v
retrieving revision 1.13
diff -bu2 -r1.13 include/wx/generic/accel.h
--- include/wx/generic/accel.h
+++ include/wx/generic/accel.h
@@ -24,11 +24,4 @@
     virtual ~wxAcceleratorTable();
 
-#if WXWIN_COMPATIBILITY_2_4
-    bool operator==(const wxAcceleratorTable& accel) const
-        { return m_refData == accel.m_refData; }
-    bool operator!=(const wxAcceleratorTable& accel) const
-        { return !(*this == accel); }
-#endif
-
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
Index: include/wx/mac/carbon/accel.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/accel.h,v
retrieving revision 1.9
diff -bu2 -r1.9 include/wx/mac/carbon/accel.h
--- include/wx/mac/carbon/accel.h
+++ include/wx/mac/carbon/accel.h
@@ -25,9 +25,4 @@
     virtual ~wxAcceleratorTable();
 
-    bool operator == (const wxAcceleratorTable& accel) const
-    { return m_refData == accel.m_refData; }
-    bool operator != (const wxAcceleratorTable& accel) const
-    { return m_refData != accel.m_refData; }
-
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
Index: include/wx/motif/accel.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/motif/accel.h,v
retrieving revision 1.16
diff -bu2 -r1.16 include/wx/motif/accel.h
--- include/wx/motif/accel.h
+++ include/wx/motif/accel.h
@@ -27,7 +27,4 @@
     virtual ~wxAcceleratorTable();
 
-    bool operator == (const wxAcceleratorTable& accel) const { return m_refData == accel.m_refData; }
-    bool operator != (const wxAcceleratorTable& accel) const { return m_refData != accel.m_refData; }
-
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
Index: include/wx/msw/accel.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/accel.h,v
retrieving revision 1.18
diff -bu2 -r1.18 include/wx/msw/accel.h
--- include/wx/msw/accel.h
+++ include/wx/msw/accel.h
@@ -31,8 +31,4 @@
     wxAcceleratorTable(int n, const wxAcceleratorEntry entries[]);
 
-    bool operator==(const wxAcceleratorTable& accel) const;
-    bool operator!=(const wxAcceleratorTable& accel) const
-        { return !(*this == accel); }
-
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
Index: include/wx/os2/accel.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/accel.h,v
retrieving revision 1.14
diff -bu2 -r1.14 include/wx/os2/accel.h
--- include/wx/os2/accel.h
+++ include/wx/os2/accel.h
@@ -41,9 +41,4 @@
     virtual ~wxAcceleratorTable();
 
-    inline bool operator== (const wxAcceleratorTable& rAccel) const
-    { return m_refData == rAccel.m_refData; };
-    inline bool operator!= (const wxAcceleratorTable& rAccel) const
-    { return m_refData != rAccel.m_refData; };
-
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
Index: include/wx/palmos/accel.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/accel.h,v
retrieving revision 1.6
diff -bu2 -r1.6 include/wx/palmos/accel.h
--- include/wx/palmos/accel.h
+++ include/wx/palmos/accel.h
@@ -31,11 +31,4 @@
     virtual ~wxAcceleratorTable();
 
-#if WXWIN_COMPATIBILITY_2_4
-    bool operator==(const wxAcceleratorTable& accel) const
-        { return m_refData == accel.m_refData; }
-    bool operator!=(const wxAcceleratorTable& accel) const
-        { return !(*this == accel); }
-#endif
-
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
Index: src/generic/accel.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/accel.cpp,v
retrieving revision 1.18
diff -bu2 -r1.18 src/generic/accel.cpp
Index: src/mac/carbon/accel.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/accel.cpp,v
retrieving revision 1.21
diff -bu2 -r1.21 src/mac/carbon/accel.cpp
Index: src/motif/accel.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/accel.cpp,v
retrieving revision 1.19
diff -bu2 -r1.19 src/motif/accel.cpp
Index: src/msw/accel.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/accel.cpp,v
retrieving revision 1.34
diff -bu2 -r1.34 src/msw/accel.cpp
--- src/msw/accel.cpp
+++ src/msw/accel.cpp
@@ -131,14 +131,4 @@
 }
 
-bool wxAcceleratorTable::operator==(const wxAcceleratorTable& accel) const
-{
-    const wxAcceleratorRefData *
-        accelData = (wxAcceleratorRefData *)accel.m_refData;
-
-    return m_refData ? (accelData &&
-                           M_ACCELDATA->m_hAccel == accelData->m_hAccel)
-                     : !accelData;
-}
-
 bool wxAcceleratorTable::IsOk() const
 {
Index: src/os2/accel.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/accel.cpp,v
retrieving revision 1.24
diff -bu2 -r1.24 src/os2/accel.cpp
--- src/os2/accel.cpp
+++ src/os2/accel.cpp
@@ -203,4 +203,5 @@
 } // end of wxAcceleratorTable::Translate
 
+
 // ---------------------------------------------------------------------------
 // function for translating labels
Index: src/palmos/accel.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/palmos/accel.cpp,v
retrieving revision 1.5
diff -bu2 -r1.5 src/palmos/accel.cpp
Index: docs/latex/wx/animation.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/animation.tex,v
retrieving revision 1.2
diff -bu2 -r1.2 docs/latex/wx/animation.tex
--- docs/latex/wx/animation.tex
+++ docs/latex/wx/animation.tex
@@ -45,6 +45,5 @@
 \func{}{wxAnimation}{\param{const wxAnimation\& }{anim}}
 
-Copy constructor.
-wxAnimation objects are reference counted so that this operation is very fast.
+Copy constructor, uses \helpref{reference counting}{trefcount}.
 
 \func{}{wxAnimation}{\param{const wxString\& }{name}, \param{wxAnimationType}{ type = wxANIMATION\_TYPE\_ANY}}
@@ -61,8 +60,6 @@
 \func{}{\destruct{wxAnimation}}{\void}
 
-Destroys the wxAnimation object and possibly the underlying animation data.
-Because reference counting is used, the animation may not actually be
-destroyed at this point - only when the reference count is zero will the
-data be deleted.
+Destructor.
+See \helpref{reference-counted object destruction}{refcountdestruct} for more info.
 
 
@@ -152,2 +149,9 @@
 \true if the operation succeeded, \false otherwise.
 
+
+\membersection{wxAnimation::operator $=$}\label{wxanimationassignment}
+
+\func{wxAnimation\&}{operator $=$}{\param{const wxAnimation\& }{brush}}
+
+Assignment operator, using \helpref{reference counting}{trefcount}.
+
Index: include/wx/generic/animate.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/generic/animate.h,v
retrieving revision 1.7
diff -bu2 -r1.7 include/wx/generic/animate.h
--- include/wx/generic/animate.h
+++ include/wx/generic/animate.h
@@ -24,9 +24,4 @@
 {
 public:
-    bool operator == (const wxAnimation& anim) const
-        { return m_refData == anim.m_refData; }
-    bool operator != (const wxAnimation& anim) const
-        { return m_refData != anim.m_refData; }
-
     bool IsOk() const
         { return m_refData != NULL; }
Index: include/wx/gtk/animate.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/animate.h,v
retrieving revision 1.5
diff -bu2 -r1.5 include/wx/gtk/animate.h
--- include/wx/gtk/animate.h
+++ include/wx/gtk/animate.h
@@ -34,9 +34,4 @@
     wxAnimation& operator= (const wxAnimation&);
 
-    bool operator == (const wxAnimation& anim) const
-        { return m_pixbuf == anim.m_pixbuf; }
-    bool operator != (const wxAnimation& anim) const
-        { return m_pixbuf != anim.m_pixbuf; }
-
     virtual bool IsOk() const
         { return m_pixbuf != NULL; }
Index: src/gtk/animate.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/animate.cpp,v
retrieving revision 1.6
diff -bu2 -r1.6 src/gtk/animate.cpp
--- src/gtk/animate.cpp
+++ src/gtk/animate.cpp
@@ -214,5 +214,5 @@
     SetBestSize(size);
 
-    if (anim != wxNullAnimation)
+    if (anim.IsOk())
         SetAnimation(anim);
 
Index: docs/latex/wx/bitmap.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/bitmap.tex,v
retrieving revision 1.41
diff -bu2 -r1.41 docs/latex/wx/bitmap.tex
--- docs/latex/wx/bitmap.tex
+++ docs/latex/wx/bitmap.tex
@@ -207,8 +207,6 @@
 \func{}{\destruct{wxBitmap}}{\void}
 
-Destroys the wxBitmap object and possibly the underlying bitmap data.
-Because reference counting is used, the bitmap may not actually be
-destroyed at this point - only when the reference count is zero will the
-data be deleted.
+Destructor.
+See \helpref{reference-counted object destruction}{refcountdestruct} for more info.
 
 If the application omits to delete the bitmap explicitly, the bitmap will be
@@ -596,32 +594,3 @@
 Returns 'this' object.
 
-\membersection{wxBitmap::operator $==$}\label{wxbitmapequal}
-
-\func{bool}{operator $==$}{\param{const wxBitmap\& }{bitmap}}
-
-Equality operator. This operator tests whether the internal data pointers are
-equal (a fast test).
-
-\wxheading{Parameters}
-
-\docparam{bitmap}{Bitmap to compare with 'this'}
-
-\wxheading{Return value}
-
-Returns true if the bitmaps were effectively equal, false otherwise.
-
-\membersection{wxBitmap::operator $!=$}\label{wxbitmapnotequal}
-
-\func{bool}{operator $!=$}{\param{const wxBitmap\& }{bitmap}}
-
-Inequality operator. This operator tests whether the internal data pointers are
-unequal (a fast test).
-
-\wxheading{Parameters}
-
-\docparam{bitmap}{Bitmap to compare with 'this'}
-
-\wxheading{Return value}
-
-Returns true if the bitmaps were unequal, false otherwise.
 
Index: include/wx/bitmap.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/bitmap.h,v
retrieving revision 1.39
diff -bu2 -r1.39 include/wx/bitmap.h
--- include/wx/bitmap.h
+++ include/wx/bitmap.h
@@ -128,6 +128,4 @@
     wxBitmap(const wxString &filename, wxBitmapType type = wxBITMAP_TYPE_XPM);
     wxBitmap(const wxImage& image, int depth = -1);
-    bool operator == (const wxBitmap& bmp) const;
-    bool operator != (const wxBitmap& bmp) const;
 
     bool Create(int width, int height, int depth = -1);
Index: include/wx/cocoa/bitmap.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/cocoa/bitmap.h,v
retrieving revision 1.15
diff -bu2 -r1.15 include/wx/cocoa/bitmap.h
--- include/wx/cocoa/bitmap.h
+++ include/wx/cocoa/bitmap.h
@@ -133,9 +133,4 @@
     int GetBitmapType() const;
 
-    inline bool operator == (const wxBitmap& bitmap) const
-    {   return m_refData == bitmap.m_refData; }
-    inline bool operator != (const wxBitmap& bitmap) const
-    {   return m_refData != bitmap.m_refData; }
-
     // wxObjectRefData
     wxObjectRefData *CreateRefData() const;
Index: include/wx/dfb/bitmap.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dfb/bitmap.h,v
retrieving revision 1.6
diff -bu2 -r1.6 include/wx/dfb/bitmap.h
--- include/wx/dfb/bitmap.h
+++ include/wx/dfb/bitmap.h
@@ -40,6 +40,4 @@
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
-    bool operator==(const wxBitmap& bmp) const;
-    bool operator!=(const wxBitmap& bmp) const { return !(*this == bmp); }
 
     bool Create(const wxIDirectFBSurfacePtr& surface);
Index: include/wx/gtk/bitmap.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/bitmap.h,v
retrieving revision 1.61
diff -bu2 -r1.61 include/wx/gtk/bitmap.h
--- include/wx/gtk/bitmap.h
+++ include/wx/gtk/bitmap.h
@@ -58,6 +58,4 @@
     wxBitmap( const wxImage& image, int depth = -1 ) { (void)CreateFromImage(image, depth); }
     virtual ~wxBitmap();
-    bool operator == ( const wxBitmap& bmp ) const;
-    bool operator != ( const wxBitmap& bmp ) const { return !(*this == bmp); }
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
Index: include/wx/gtk1/bitmap.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk1/bitmap.h,v
retrieving revision 1.56
diff -bu2 -r1.56 include/wx/gtk1/bitmap.h
--- include/wx/gtk1/bitmap.h
+++ include/wx/gtk1/bitmap.h
@@ -72,6 +72,4 @@
     wxBitmap( const wxImage& image, int depth = -1 ) { (void)CreateFromImage(image, depth); }
     virtual ~wxBitmap();
-    bool operator == ( const wxBitmap& bmp ) const;
-    bool operator != ( const wxBitmap& bmp ) const;
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
Index: include/wx/mac/carbon/bitmap.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/bitmap.h,v
retrieving revision 1.15
diff -bu2 -r1.15 include/wx/mac/carbon/bitmap.h
--- include/wx/mac/carbon/bitmap.h
+++ include/wx/mac/carbon/bitmap.h
@@ -158,7 +158,4 @@
     void SetMask(wxMask *mask) ;
 
-    inline bool operator == (const wxBitmap& bitmap) const { return m_refData == bitmap.m_refData; }
-    inline bool operator != (const wxBitmap& bitmap) const { return m_refData != bitmap.m_refData; }
-
     static void InitStandardHandlers();
 
Index: include/wx/mac/classic/bitmap.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/classic/bitmap.h,v
retrieving revision 1.7
diff -bu2 -r1.7 include/wx/mac/classic/bitmap.h
--- include/wx/mac/classic/bitmap.h
+++ include/wx/mac/classic/bitmap.h
@@ -191,7 +191,4 @@
   int GetBitmapType() const;
   
-  inline bool operator == (const wxBitmap& bitmap) const { return m_refData == bitmap.m_refData; }
-  inline bool operator != (const wxBitmap& bitmap) const { return m_refData != bitmap.m_refData; }
-
   static void InitStandardHandlers();
 
Index: include/wx/mgl/bitmap.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mgl/bitmap.h,v
retrieving revision 1.15
diff -bu2 -r1.15 include/wx/mgl/bitmap.h
--- include/wx/mgl/bitmap.h
+++ include/wx/mgl/bitmap.h
@@ -39,6 +39,4 @@
     wxBitmap(const wxImage& image, int depth = -1);
     virtual ~wxBitmap() {}
-    bool operator == (const wxBitmap& bmp) const;
-    bool operator != (const wxBitmap& bmp) const;
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
Index: include/wx/msw/bitmap.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/bitmap.h,v
retrieving revision 1.55
diff -bu2 -r1.55 include/wx/msw/bitmap.h
--- include/wx/msw/bitmap.h
+++ include/wx/msw/bitmap.h
@@ -133,7 +133,4 @@
     void SetMask(wxMask *mask);
 
-    bool operator==(const wxBitmap& bitmap) const { return m_refData == bitmap.m_refData; }
-    bool operator!=(const wxBitmap& bitmap) const { return m_refData != bitmap.m_refData; }
-
     // these functions are internal and shouldn't be used, they risk to
     // disappear in the future
Index: include/wx/os2/bitmap.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/bitmap.h,v
retrieving revision 1.29
diff -bu2 -r1.29 include/wx/os2/bitmap.h
--- include/wx/os2/bitmap.h
+++ include/wx/os2/bitmap.h
@@ -181,10 +181,4 @@
     void SetMask(wxMask* pMask) ;
 
-    inline bool operator==(const wxBitmap& rBitmap) const
-      { return m_refData == rBitmap.m_refData; }
-
-    inline bool operator!=(const wxBitmap& rBitmap) const
-      { return m_refData != rBitmap.m_refData; }
-
     // Implementation
 public:
Index: include/wx/palmos/bitmap.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/bitmap.h,v
retrieving revision 1.7
diff -bu2 -r1.7 include/wx/palmos/bitmap.h
--- include/wx/palmos/bitmap.h
+++ include/wx/palmos/bitmap.h
@@ -133,7 +133,4 @@
     void SetMask(wxMask *mask);
 
-    bool operator==(const wxBitmap& bitmap) const { return m_refData == bitmap.m_refData; }
-    bool operator!=(const wxBitmap& bitmap) const { return m_refData != bitmap.m_refData; }
-
     // these functions are internal and shouldn't be used, they risk to
     // disappear in the future
Index: include/wx/x11/bitmap.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/x11/bitmap.h,v
retrieving revision 1.19
diff -bu2 -r1.19 include/wx/x11/bitmap.h
--- include/wx/x11/bitmap.h
+++ include/wx/x11/bitmap.h
@@ -78,6 +78,4 @@
     virtual ~wxBitmap();
 
-    bool operator == ( const wxBitmap& bmp ) const;
-    bool operator != ( const wxBitmap& bmp ) const;
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
Index: src/dfb/bitmap.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/dfb/bitmap.cpp,v
retrieving revision 1.10
diff -bu2 -r1.10 src/dfb/bitmap.cpp
--- src/dfb/bitmap.cpp
+++ src/dfb/bitmap.cpp
@@ -195,10 +195,4 @@
 }
 
-bool wxBitmap::operator==(const wxBitmap& bmp) const
-{
-    // FIXME: is this the right way to compare bitmaps?
-    return (m_refData == bmp.m_refData);
-}
-
 int wxBitmap::GetHeight() const
 {
@@ -237,4 +231,5 @@
     wxCHECK_RET( Ok(), wxT("invalid bitmap") );
 
+    AllocExclusive();
     delete M_BITMAP->m_mask;
     M_BITMAP->m_mask = mask;
@@ -329,4 +324,5 @@
     wxCHECK_RET( GetDepth() > 1 && GetDepth() <= 8, wxT("cannot set palette for bitmap of this depth") );
 
+    AllocExclusive();
     delete M_BITMAP->m_palette;
     M_BITMAP->m_palette = NULL;
Index: src/gtk/bitmap.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/bitmap.cpp,v
retrieving revision 1.139
diff -bu2 -r1.139 src/gtk/bitmap.cpp
--- src/gtk/bitmap.cpp
+++ src/gtk/bitmap.cpp
@@ -709,9 +709,4 @@
 }
 
-bool wxBitmap::operator == ( const wxBitmap& bmp ) const
-{
-    return m_refData == bmp.m_refData;
-}
-
 bool wxBitmap::IsOk() const
 {
Index: src/gtk1/bitmap.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk1/bitmap.cpp,v
retrieving revision 1.108
diff -bu2 -r1.108 src/gtk1/bitmap.cpp
--- src/gtk1/bitmap.cpp
+++ src/gtk1/bitmap.cpp
@@ -1067,14 +1067,4 @@
 }
 
-bool wxBitmap::operator == ( const wxBitmap& bmp ) const
-{
-    return m_refData == bmp.m_refData;
-}
-
-bool wxBitmap::operator != ( const wxBitmap& bmp ) const
-{
-    return m_refData != bmp.m_refData;
-}
-
 bool wxBitmap::IsOk() const
 {
@@ -1115,4 +1105,5 @@
     wxCHECK_RET( Ok(), wxT("invalid bitmap") );
 
+    AllocExclusive();
     if (M_BMPDATA->m_mask) delete M_BMPDATA->m_mask;
 
@@ -1249,7 +1240,5 @@
 void wxBitmap::SetHeight( int height )
 {
-    if (!m_refData)
-        m_refData = new wxBitmapRefData();
-
+    AllocExclusive();
     M_BMPDATA->m_height = height;
 }
@@ -1257,7 +1246,5 @@
 void wxBitmap::SetWidth( int width )
 {
-    if (!m_refData)
-        m_refData = new wxBitmapRefData();
-
+    AllocExclusive();
     M_BMPDATA->m_width = width;
 }
@@ -1265,7 +1252,5 @@
 void wxBitmap::SetDepth( int depth )
 {
-    if (!m_refData)
-        m_refData = new wxBitmapRefData();
-
+    AllocExclusive();
     M_BMPDATA->m_bpp = depth;
 }
Index: src/mac/carbon/bitmap.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/bitmap.cpp,v
retrieving revision 1.101
diff -bu2 -r1.101 src/mac/carbon/bitmap.cpp
--- src/mac/carbon/bitmap.cpp
+++ src/mac/carbon/bitmap.cpp
@@ -1282,7 +1282,5 @@
 void wxBitmap::SetWidth(int w)
 {
-    if (!M_BITMAPDATA)
-        m_refData = new wxBitmapRefData;
-
+    AllocExclusive();
     M_BITMAPDATA->SetWidth(w);
 }
@@ -1290,7 +1288,5 @@
 void wxBitmap::SetHeight(int h)
 {
-    if (!M_BITMAPDATA)
-        m_refData = new wxBitmapRefData;
-
+    AllocExclusive();
     M_BITMAPDATA->SetHeight(h);
 }
@@ -1298,7 +1294,5 @@
 void wxBitmap::SetDepth(int d)
 {
-    if (!M_BITMAPDATA)
-        m_refData = new wxBitmapRefData;
-
+    AllocExclusive();
     M_BITMAPDATA->SetDepth(d);
 }
@@ -1306,7 +1300,5 @@
 void wxBitmap::SetOk(bool isOk)
 {
-    if (!M_BITMAPDATA)
-        m_refData = new wxBitmapRefData;
-
+    AllocExclusive();
     M_BITMAPDATA->SetOk(isOk);
 }
@@ -1322,7 +1314,5 @@
 void wxBitmap::SetPalette(const wxPalette& palette)
 {
-    if (!M_BITMAPDATA)
-        m_refData = new wxBitmapRefData;
-
+    AllocExclusive();
     M_BITMAPDATA->m_bitmapPalette = palette ;
 }
@@ -1331,7 +1321,5 @@
 void wxBitmap::SetMask(wxMask *mask)
 {
-    if (!M_BITMAPDATA)
-        m_refData = new wxBitmapRefData;
-
+    AllocExclusive();
     // Remove existing mask if there is one.
     delete M_BITMAPDATA->m_bitmapMask;
Index: src/mac/classic/bitmap.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/classic/bitmap.cpp,v
retrieving revision 1.11
diff -bu2 -r1.11 src/mac/classic/bitmap.cpp
--- src/mac/classic/bitmap.cpp
+++ src/mac/classic/bitmap.cpp
@@ -1000,7 +1000,5 @@
 void wxBitmap::SetWidth(int w)
 {
-    if (!M_BITMAPDATA)
-        m_refData = new wxBitmapRefData;
-
+    AllocExclusive();
     M_BITMAPDATA->m_width = w;
 }
@@ -1008,7 +1006,5 @@
 void wxBitmap::SetHeight(int h)
 {
-    if (!M_BITMAPDATA)
-        m_refData = new wxBitmapRefData;
-
+    AllocExclusive();
     M_BITMAPDATA->m_height = h;
 }
@@ -1016,7 +1012,5 @@
 void wxBitmap::SetDepth(int d)
 {
-    if (!M_BITMAPDATA)
-        m_refData = new wxBitmapRefData;
-
+    AllocExclusive();
     M_BITMAPDATA->m_depth = d;
 }
Index: src/mgl/bitmap.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mgl/bitmap.cpp,v
retrieving revision 1.32
diff -bu2 -r1.32 src/mgl/bitmap.cpp
--- src/mgl/bitmap.cpp
+++ src/mgl/bitmap.cpp
@@ -268,14 +268,4 @@
 }
 
-bool wxBitmap::operator == (const wxBitmap& bmp) const
-{
-    return (m_refData == bmp.m_refData);
-}
-
-bool wxBitmap::operator != (const wxBitmap& bmp) const
-{
-    return (m_refData != bmp.m_refData);
-}
-
 bool wxBitmap::IsOk() const
 {
@@ -315,4 +305,5 @@
     wxCHECK_RET( Ok(), wxT("invalid bitmap") );
 
+    AllocExclusive();
     delete M_BMPDATA->m_mask;
     M_BMPDATA->m_mask = mask;
@@ -358,4 +349,5 @@
     wxCHECK_RET( Ok(), wxT("invalid bitmap") );
 
+    AllocExclusive();
     palette_t *mono = M_BMPDATA->m_bitmap->pal;
 
@@ -483,4 +475,5 @@
     wxCHECK_RET( GetDepth() > 1 && GetDepth() <= 8, wxT("cannot set palette for bitmap of this depth") );
 
+    AllocExclusive();
     delete M_BMPDATA->m_palette;
     M_BMPDATA->m_palette = NULL;
@@ -497,5 +490,5 @@
 void wxBitmap::SetHeight(int height)
 {
-    if (!m_refData) m_refData = new wxBitmapRefData();
+    AllocExclusive();
 
     M_BMPDATA->m_height = height;
@@ -504,5 +497,5 @@
 void wxBitmap::SetWidth(int width)
 {
-    if (!m_refData) m_refData = new wxBitmapRefData();
+    AllocExclusive();
 
     M_BMPDATA->m_width = width;
@@ -511,5 +504,5 @@
 void wxBitmap::SetDepth(int depth)
 {
-    if (!m_refData) m_refData = new wxBitmapRefData();
+    AllocExclusive();
 
     M_BMPDATA->m_bpp = depth;
Index: src/x11/bitmap.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/x11/bitmap.cpp,v
retrieving revision 1.50
diff -bu2 -r1.50 src/x11/bitmap.cpp
--- src/x11/bitmap.cpp
+++ src/x11/bitmap.cpp
@@ -918,14 +918,4 @@
 }
 
-bool wxBitmap::operator == ( const wxBitmap& bmp ) const
-{
-    return m_refData == bmp.m_refData;
-}
-
-bool wxBitmap::operator != ( const wxBitmap& bmp ) const
-{
-    return m_refData != bmp.m_refData;
-}
-
 bool wxBitmap::IsOk() const
 {
@@ -965,4 +955,5 @@
     wxCHECK_RET( Ok(), wxT("invalid bitmap") );
 
+    AllocExclusive();
     if (M_BMPDATA->m_mask) delete M_BMPDATA->m_mask;
 
@@ -1071,4 +1062,5 @@
                 wxT("cannot set palette for bitmap of this depth"));
 
+    AllocExclusive();
     delete M_BMPDATA->m_palette;
     M_BMPDATA->m_palette = NULL;
@@ -1088,5 +1080,5 @@
 void wxBitmap::SetHeight( int height )
 {
-    if (!m_refData) m_refData = new wxBitmapRefData();
+    AllocExclusive();
 
     M_BMPDATA->m_height = height;
@@ -1095,5 +1087,5 @@
 void wxBitmap::SetWidth( int width )
 {
-    if (!m_refData) m_refData = new wxBitmapRefData();
+    AllocExclusive();
 
     M_BMPDATA->m_width = width;
@@ -1102,5 +1094,5 @@
 void wxBitmap::SetDepth( int depth )
 {
-    if (!m_refData) m_refData = new wxBitmapRefData();
+    AllocExclusive();
 
     M_BMPDATA->m_bpp = depth;
Index: docs/latex/wx/brush.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/brush.tex,v
retrieving revision 1.22
diff -bu2 -r1.22 docs/latex/wx/brush.tex
--- docs/latex/wx/brush.tex
+++ docs/latex/wx/brush.tex
@@ -136,10 +136,8 @@
 
 Destructor.
+See \helpref{reference-counted object destruction}{refcountdestruct} for more info.
 
 \wxheading{Remarks}
 
-The destructor may not delete the underlying brush object of the native windowing
-system, since wxBrush uses a reference counting system for efficiency.
-
 Although all remaining brushes are deleted when the application exits,
 the application should try to clean up all brushes itself. This is because
@@ -301,8 +299,6 @@
 \func{bool}{operator $==$}{\param{const wxBrush\& }{brush}}
 
-Equality operator. Two brushes are equal if they contain pointers
-to the same underlying brush data. It does not compare each attribute,
-so two independently-created brushes using the same parameters will
-fail the test.
+Equality operator.
+See \helpref{reference-counted object comparison}{refcountequality} for more info.
 
 
@@ -311,6 +307,7 @@
 \func{bool}{operator $!=$}{\param{const wxBrush\& }{brush}}
 
-Inequality operator. Two brushes are not equal if they contain pointers
-to different underlying brush data. It does not compare each attribute.
+Inequality operator.
+See \helpref{reference-counted object comparison}{refcountequality} for more info.
+
 
 \section{\class{wxBrushList}}\label{wxbrushlist}
Index: include/wx/mac/carbon/brush.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/brush.h,v
retrieving revision 1.13
diff -bu2 -r1.13 include/wx/mac/carbon/brush.h
--- include/wx/mac/carbon/brush.h
+++ include/wx/mac/carbon/brush.h
@@ -45,8 +45,7 @@
     virtual void MacSetThemeBackground(unsigned long macThemeBackground ,  WXRECTPTR extent) ;
 
-    bool operator == (const wxBrush& brush) const
-    { return m_refData == brush.m_refData; }
+    bool operator == (const wxBrush& brush) const;
     bool operator != (const wxBrush& brush) const
-    { return m_refData != brush.m_refData; }
+        { return !(*this == brush); }
 
     wxMacBrushKind MacGetBrushKind()  const ;
Index: include/wx/os2/brush.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/brush.h,v
retrieving revision 1.17
diff -bu2 -r1.17 include/wx/os2/brush.h
--- include/wx/os2/brush.h
+++ include/wx/os2/brush.h
@@ -48,6 +48,6 @@
     virtual ~wxBrush();
 
-    inline bool operator == (const wxBrush& rBrush) const { return m_refData == rBrush.m_refData; }
-    inline bool operator != (const wxBrush& rBrush) const { return m_refData != rBrush.m_refData; }
+    inline bool operator == (const wxBrush& rBrush) const;
+    inline bool operator != (const wxBrush& rBrush) const { return !(*this == rBrush); }
 
     virtual void SetColour(const wxColour& rColour);
Index: src/gtk/brush.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/brush.cpp,v
retrieving revision 1.29
diff -bu2 -r1.29 src/gtk/brush.cpp
--- src/gtk/brush.cpp
+++ src/gtk/brush.cpp
@@ -41,5 +41,5 @@
     {
         return (m_style == data.m_style &&
-                m_stipple == data.m_stipple &&
+                m_stipple.IsRefTo(&data.m_stipple) &&
                 m_colour == data.m_colour);
     }
Index: src/gtk1/brush.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk1/brush.cpp,v
retrieving revision 1.29
diff -bu2 -r1.29 src/gtk1/brush.cpp
--- src/gtk1/brush.cpp
+++ src/gtk1/brush.cpp
@@ -42,5 +42,5 @@
     {
         return (m_style == data.m_style &&
-                m_stipple == data.m_stipple &&
+                m_stipple.IsRefTo(&data.m_stipple) &&
                 m_colour == data.m_colour);
     }
Index: src/mac/carbon/brush.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/brush.cpp,v
retrieving revision 1.25
diff -bu2 -r1.25 src/mac/carbon/brush.cpp
--- src/mac/carbon/brush.cpp
+++ src/mac/carbon/brush.cpp
@@ -31,4 +31,16 @@
     virtual ~wxBrushRefData();
 
+    bool operator == ( const wxBrushRefData& brush ) const
+    {
+        return m_style == brush.m_style &&
+                m_stipple.IsRefTo(&data.m_stipple) &&
+                m_colour == brush.m_colour &&
+                m_macBrushKind == brush.m_macBrushKind &&
+                m_macThemeBrush == brush.m_macThemeBrush &&
+                m_macThemeBackground == brush.m_macThemeBackground &&
+                m_macThemeBackgroundExtent == brush.m_macThemeBackgroundExtent;
+    }
+
+
 protected:
     wxMacBrushKind m_macBrushKind ;
@@ -234,2 +246,11 @@
     return (M_BRUSHDATA ? M_BRUSHDATA->m_macBrushKind : kwxMacBrushColour);
 }
+
+bool wxBrush::operator == ( const wxBrush& brush ) const
+{
+    if (m_refData == brush.m_refData) return true;
+
+    if (!m_refData || !brush.m_refData) return false;
+
+    return ( *(wxBrushRefData*)m_refData == *(wxBrushRefData*)brush.m_refData );
+}
Index: src/mgl/brush.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mgl/brush.cpp,v
retrieving revision 1.16
diff -bu2 -r1.16 src/mgl/brush.cpp
--- src/mgl/brush.cpp
+++ src/mgl/brush.cpp
@@ -77,4 +77,11 @@
     wxBrushRefData(const wxBrushRefData& data);
 
+    bool operator == (const wxBrushRefData& data) const
+    {
+        return (m_style == data.m_style &&
+                m_stipple.IsRefTo(&data.m_stipple) &&
+                m_colour == data.m_colour);
+    }
+
     int            m_style;
     wxColour       m_colour;
@@ -146,5 +153,9 @@
 bool wxBrush::operator == (const wxBrush& brush) const
 {
-    return m_refData == brush.m_refData;
+    if (m_refData == brush.m_refData) return true;
+
+    if (!m_refData || !brush.m_refData) return false;
+
+    return ( *(wxBrushRefData*)m_refData == *(wxBrushRefData*)brush.m_refData );
 }
 
Index: src/msw/brush.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/brush.cpp,v
retrieving revision 1.26
diff -bu2 -r1.26 src/msw/brush.cpp
--- src/msw/brush.cpp
+++ src/msw/brush.cpp
@@ -125,5 +125,5 @@
     return m_style == data.m_style &&
            m_colour == data.m_colour &&
-           m_stipple == data.m_stipple;
+           m_stipple.IsRefTo(&data.m_stipple);
 }
 
Index: src/x11/brush.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/x11/brush.cpp,v
retrieving revision 1.15
diff -bu2 -r1.15 src/x11/brush.cpp
--- src/x11/brush.cpp
+++ src/x11/brush.cpp
@@ -43,5 +43,5 @@
     {
         return (m_style == data.m_style &&
-                m_stipple == data.m_stipple &&
+                m_stipple.IsRefTo(&data.m_stipple) &&
                 m_colour == data.m_colour);
     }
Index: docs/latex/wx/cursor.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/cursor.tex,v
retrieving revision 1.25
diff -bu2 -r1.25 docs/latex/wx/cursor.tex
--- docs/latex/wx/cursor.tex
+++ docs/latex/wx/cursor.tex
@@ -230,5 +230,8 @@
 \func{}{\destruct{wxCursor}}{\void}
 
-Destroys the cursor. A cursor can be reused for more
+Destroys the cursor.
+See \helpref{reference-counted object destruction}{refcountdestruct} for more info.
+
+A cursor can be reused for more
 than one window, and does not get destroyed when the window is
 destroyed. wxWidgets destroys all cursors on application exit, although
@@ -247,19 +250,2 @@
 Assignment operator, using \helpref{reference counting}{trefcount}.
 
-\membersection{wxCursor::operator $==$}\label{wxcursorequals}
-
-\func{bool}{operator $==$}{\param{const wxCursor\& }{cursor}}
-
-Equality operator. Two cursors are equal if they contain pointers
-to the same underlying cursor data. It does not compare each attribute,
-so two independently-created cursors using the same parameters will
-fail the test.
-
-\membersection{wxCursor::operator $!=$}\label{wxcursornotequals}
-
-\func{bool}{operator $!=$}{\param{const wxCursor\& }{cursor}}
-
-Inequality operator. Two cursors are not equal if they contain pointers
-to different underlying cursor data. It does not compare each attribute.
-
-
Index: include/wx/cursor.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/cursor.h,v
retrieving revision 1.20
diff -bu2 -r1.20 include/wx/cursor.h
--- include/wx/cursor.h
+++ include/wx/cursor.h
@@ -15,4 +15,5 @@
 #include "wx/defs.h"
 
+
 #if defined(__WXPALMOS__)
     #include "wx/palmos/cursor.h"
Index: include/wx/dfb/cursor.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dfb/cursor.h,v
retrieving revision 1.2
diff -bu2 -r1.2 include/wx/dfb/cursor.h
--- include/wx/dfb/cursor.h
+++ include/wx/dfb/cursor.h
@@ -35,6 +35,4 @@
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
-    bool operator==(const wxCursor& cursor) const;
-    bool operator!=(const wxCursor& cursor) const { return !(*this == cursor); }
 
     // implementation
Index: include/wx/gtk/cursor.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/cursor.h,v
retrieving revision 1.18
diff -bu2 -r1.18 include/wx/gtk/cursor.h
--- include/wx/gtk/cursor.h
+++ include/wx/gtk/cursor.h
@@ -33,6 +33,4 @@
               const char maskBits[] = NULL, const wxColour *fg = NULL, const wxColour *bg = NULL );
     virtual ~wxCursor();
-    bool operator == ( const wxCursor& cursor ) const;
-    bool operator != ( const wxCursor& cursor ) const;
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
Index: include/wx/gtk1/cursor.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk1/cursor.h,v
retrieving revision 1.18
diff -bu2 -r1.18 include/wx/gtk1/cursor.h
--- include/wx/gtk1/cursor.h
+++ include/wx/gtk1/cursor.h
@@ -36,6 +36,4 @@
               const char maskBits[] = NULL, const wxColour *fg = NULL, const wxColour *bg = NULL );
     virtual ~wxCursor();
-    bool operator == ( const wxCursor& cursor ) const;
-    bool operator != ( const wxCursor& cursor ) const;
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
Index: include/wx/mac/carbon/cursor.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/cursor.h,v
retrieving revision 1.11
diff -bu2 -r1.11 include/wx/mac/carbon/cursor.h
--- include/wx/mac/carbon/cursor.h
+++ include/wx/mac/carbon/cursor.h
@@ -39,7 +39,4 @@
   virtual bool IsOk() const ;
 
-  inline bool operator == (const wxCursor& cursor) const { return m_refData == cursor.m_refData; }
-  inline bool operator != (const wxCursor& cursor) const { return m_refData != cursor.m_refData; }
-
     void MacInstall() const ;
 
Index: include/wx/mgl/cursor.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mgl/cursor.h,v
retrieving revision 1.11
diff -bu2 -r1.11 include/wx/mgl/cursor.h
--- include/wx/mgl/cursor.h
+++ include/wx/mgl/cursor.h
@@ -34,6 +34,4 @@
              int hotSpotX = 0, int hotSpotY = 0);
     virtual ~wxCursor();
-    bool operator == (const wxCursor& cursor) const;
-    bool operator != (const wxCursor& cursor) const;
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
Index: include/wx/motif/cursor.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/motif/cursor.h,v
retrieving revision 1.20
diff -bu2 -r1.20 include/wx/motif/cursor.h
--- include/wx/motif/cursor.h
+++ include/wx/motif/cursor.h
@@ -43,9 +43,4 @@
     virtual bool IsOk() const;
 
-    bool operator == (const wxCursor& cursor) const
-        { return m_refData == cursor.m_refData; }
-    bool operator != (const wxCursor& cursor) const
-        { return m_refData != cursor.m_refData; }
-
     // Motif-specific.
     // Create/get a cursor for the current display
Index: include/wx/msw/cursor.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/cursor.h,v
retrieving revision 1.18
diff -bu2 -r1.18 include/wx/msw/cursor.h
--- include/wx/msw/cursor.h
+++ include/wx/msw/cursor.h
@@ -33,8 +33,4 @@
     virtual ~wxCursor();
 
-    bool operator==(const wxCursor& cursor) const;
-    bool operator!=(const wxCursor& cursor) const
-        { return !(*this == cursor); }
-
     // implementation only
     void SetHCURSOR(WXHCURSOR cursor) { SetHandle((WXHANDLE)cursor); }
Index: include/wx/os2/cursor.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/cursor.h,v
retrieving revision 1.11
diff -bu2 -r1.11 include/wx/os2/cursor.h
--- include/wx/os2/cursor.h
+++ include/wx/os2/cursor.h
@@ -49,6 +49,4 @@
     wxCursor(int nCursorType);
     inline ~wxCursor() { }
-    inline bool operator == (const wxCursor& rCursor) const { return m_refData == rCursor.m_refData; }
-    inline bool operator != (const wxCursor& rCursor) const { return m_refData != rCursor.m_refData; }
 
     inline WXHCURSOR GetHCURSOR(void) const { return (M_CURSORDATA ? M_CURSORDATA->m_hCursor : 0); }
Index: include/wx/palmos/cursor.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/cursor.h,v
retrieving revision 1.4
diff -bu2 -r1.4 include/wx/palmos/cursor.h
--- include/wx/palmos/cursor.h
+++ include/wx/palmos/cursor.h
@@ -33,8 +33,4 @@
     virtual ~wxCursor();
 
-    bool operator==(const wxCursor& cursor) const;
-    bool operator!=(const wxCursor& cursor) const
-        { return !(*this == cursor); }
-
     // implementation only
     void SetHCURSOR(WXHCURSOR cursor) { SetHandle((WXHANDLE)cursor); }
Index: include/wx/x11/cursor.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/x11/cursor.h,v
retrieving revision 1.12
diff -bu2 -r1.12 include/wx/x11/cursor.h
--- include/wx/x11/cursor.h
+++ include/wx/x11/cursor.h
@@ -36,6 +36,4 @@
               const char maskBits[]=0, wxColour *fg=0, wxColour *bg=0 );
     virtual ~wxCursor();
-    bool operator == ( const wxCursor& cursor ) const;
-    bool operator != ( const wxCursor& cursor ) const;
     bool Ok() const { return IsOk(); }
     bool IsOk() const;
Index: src/dfb/cursor.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/dfb/cursor.cpp,v
retrieving revision 1.2
diff -bu2 -r1.2 src/dfb/cursor.cpp
--- src/dfb/cursor.cpp
+++ src/dfb/cursor.cpp
@@ -68,5 +68,5 @@
     return m_refData && M_CURSOR->m_bitmap.Ok();
 }
-
+/*
 bool wxCursor::operator==(const wxCursor& cursor) const
 {
@@ -86,5 +86,5 @@
         return !cursor.Ok();
     }
-}
+}*/
 
 wxObjectRefData *wxCursor::CreateRefData() const
Index: src/gtk/cursor.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/cursor.cpp,v
retrieving revision 1.63
diff -bu2 -r1.63 src/gtk/cursor.cpp
--- src/gtk/cursor.cpp
+++ src/gtk/cursor.cpp
@@ -311,14 +311,4 @@
 }
 
-bool wxCursor::operator == ( const wxCursor& cursor ) const
-{
-    return m_refData == cursor.m_refData;
-}
-
-bool wxCursor::operator != ( const wxCursor& cursor ) const
-{
-    return m_refData != cursor.m_refData;
-}
-
 bool wxCursor::IsOk() const
 {
Index: src/gtk1/cursor.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk1/cursor.cpp,v
retrieving revision 1.53
diff -bu2 -r1.53 src/gtk1/cursor.cpp
--- src/gtk1/cursor.cpp
+++ src/gtk1/cursor.cpp
@@ -317,14 +317,4 @@
 }
 
-bool wxCursor::operator == ( const wxCursor& cursor ) const
-{
-    return m_refData == cursor.m_refData;
-}
-
-bool wxCursor::operator != ( const wxCursor& cursor ) const
-{
-    return m_refData != cursor.m_refData;
-}
-
 bool wxCursor::IsOk() const
 {
Index: src/mac/carbon/cursor.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mac/carbon/cursor.cpp,v
retrieving revision 1.39
diff -bu2 -r1.39 src/mac/carbon/cursor.cpp
Index: src/mgl/cursor.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mgl/cursor.cpp,v
retrieving revision 1.25
diff -bu2 -r1.25 src/mgl/cursor.cpp
--- src/mgl/cursor.cpp
+++ src/mgl/cursor.cpp
@@ -176,14 +176,4 @@
 }
 
-bool wxCursor::operator == (const wxCursor& cursor) const
-{
-    return (m_refData == cursor.m_refData);
-}
-
-bool wxCursor::operator != (const wxCursor& cursor) const
-{
-    return (m_refData != cursor.m_refData);
-}
-
 bool wxCursor::IsOk() const
 {
Index: src/motif/cursor.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/motif/cursor.cpp,v
retrieving revision 1.33
diff -bu2 -r1.33 src/motif/cursor.cpp
Index: src/msw/cursor.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/msw/cursor.cpp,v
retrieving revision 1.70
diff -bu2 -r1.70 src/msw/cursor.cpp
--- src/msw/cursor.cpp
+++ src/msw/cursor.cpp
@@ -387,14 +387,4 @@
 // ----------------------------------------------------------------------------
 
-bool wxCursor::operator==(const wxCursor& cursor) const
-{
-    if ( !m_refData )
-        return !cursor.m_refData;
-
-    return cursor.m_refData &&
-                ((wxCursorRefData *)m_refData)->m_hCursor ==
-                ((wxCursorRefData *)cursor.m_refData)->m_hCursor;
-}
-
 wxGDIImageRefData *wxCursor::CreateData() const
 {
Index: src/os2/cursor.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/os2/cursor.cpp,v
retrieving revision 1.20
diff -bu2 -r1.20 src/os2/cursor.cpp
Index: src/palmos/cursor.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/palmos/cursor.cpp,v
retrieving revision 1.6
diff -bu2 -r1.6 src/palmos/cursor.cpp
--- src/palmos/cursor.cpp
+++ src/palmos/cursor.cpp
@@ -109,9 +109,4 @@
 // ----------------------------------------------------------------------------
 
-bool wxCursor::operator==(const wxCursor& cursor) const
-{
-    return false;
-}
-
 wxGDIImageRefData *wxCursor::CreateData() const
 {
Index: src/x11/cursor.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/x11/cursor.cpp,v
retrieving revision 1.21
diff -bu2 -r1.21 src/x11/cursor.cpp
--- src/x11/cursor.cpp
+++ src/x11/cursor.cpp
@@ -142,14 +142,4 @@
 }
 
-bool wxCursor::operator == ( const wxCursor& cursor ) const
-{
-    return m_refData == cursor.m_refData;
-}
-
-bool wxCursor::operator != ( const wxCursor& cursor ) const
-{
-    return m_refData != cursor.m_refData;
-}
-
 bool wxCursor::IsOk() const
 {
Index: docs/latex/wx/font.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/font.tex,v
retrieving revision 1.33
diff -bu2 -r1.33 docs/latex/wx/font.tex
--- docs/latex/wx/font.tex
+++ docs/latex/wx/font.tex
@@ -249,10 +249,8 @@
 
 Destructor.
+See \helpref{reference-counted object destruction}{refcountdestruct} for more info.
 
 \wxheading{Remarks}
 
-The destructor may not delete the underlying font object of the native windowing
-system, since wxFont uses a reference counting system for efficiency.
-
 Although all remaining fonts are deleted when the application exits,
 the application should try to clean up all fonts itself. This is because
@@ -590,8 +588,6 @@
 \func{bool}{operator $==$}{\param{const wxFont\& }{font}}
 
-Equality operator. Two fonts are equal if they contain pointers
-to the same underlying font data. It does not compare each attribute,
-so two independently-created fonts using the same parameters will
-fail the test.
+Equality operator.
+See \helpref{reference-counted object comparison}{refcountequality} for more info.
 
 
@@ -600,5 +596,5 @@
 \func{bool}{operator $!=$}{\param{const wxFont\& }{font}}
 
-Inequality operator. Two fonts are not equal if they contain pointers
-to different underlying font data. It does not compare each attribute.
+Inequality operator.
+See \helpref{reference-counted object comparison}{refcountequality} for more info.
 
Index: docs/latex/wx/icon.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/icon.tex,v
retrieving revision 1.20
diff -bu2 -r1.20 docs/latex/wx/icon.tex
--- docs/latex/wx/icon.tex
+++ docs/latex/wx/icon.tex
@@ -213,8 +213,6 @@
 \func{}{\destruct{wxIcon}}{\void}
 
-Destroys the wxIcon object and possibly the underlying icon data.
-Because reference counting is used, the icon may not actually be
-destroyed at this point - only when the reference count is zero will the
-data be deleted.
+Destructor.
+See \helpref{reference-counted object destruction}{refcountdestruct} for more info.
 
 If the application omits to delete the icon explicitly, the icon will be
@@ -356,7 +354,5 @@
 \func{wxIcon\& }{operator $=$}{\param{const wxIcon\& }{icon}}
 
-Assignment operator. This operator does not copy any data, but instead
-passes a pointer to the data in {\it icon} and increments a reference
-counter. It is a fast operation.
+Assignment operator, using \helpref{reference counting}{trefcount}.
 
 \wxheading{Parameters}
@@ -368,33 +364,3 @@
 Returns 'this' object.
 
-\membersection{wxIcon::operator $==$}\label{wxiconequal}
-
-\func{bool}{operator $==$}{\param{const wxIcon\& }{icon}}
-
-Equality operator. This operator tests whether the internal data pointers are
-equal (a fast test).
-
-\wxheading{Parameters}
-
-\docparam{icon}{Icon to compare with 'this'}
-
-\wxheading{Return value}
-
-Returns true if the icons were effectively equal, false otherwise.
-
-\membersection{wxIcon::operator $!=$}\label{wxiconnotequal}
-
-\func{bool}{operator $!=$}{\param{const wxIcon\& }{icon}}
-
-Inequality operator. This operator tests whether the internal data pointers are
-unequal (a fast test).
-
-\wxheading{Parameters}
-
-\docparam{icon}{Icon to compare with 'this'}
-
-\wxheading{Return value}
-
-Returns true if the icons were unequal, false otherwise.
-
 
Index: include/wx/generic/icon.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/generic/icon.h,v
retrieving revision 1.1
diff -bu2 -r1.1 include/wx/generic/icon.h
--- include/wx/generic/icon.h
+++ include/wx/generic/icon.h
@@ -45,9 +45,4 @@
     }
 
-    bool operator==(const wxIcon& icon) const
-        { return m_refData == icon.m_refData; }
-    bool operator!=(const wxIcon& icon) const
-        { return !(*this == icon); }
-
     // create from bitmap (which should have a mask unless it's monochrome):
     // there shouldn't be any implicit bitmap -> icon conversion (i.e. no
Index: include/wx/mac/carbon/icon.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/icon.h,v
retrieving revision 1.11
diff -bu2 -r1.11 include/wx/mac/carbon/icon.h
--- include/wx/mac/carbon/icon.h
+++ include/wx/mac/carbon/icon.h
@@ -37,6 +37,4 @@
       { return LoadFile( name , flags , -1 , -1 ) ; }
 
-    bool operator==(const wxIcon& icon) const { return m_refData == icon.m_refData; }
-    bool operator!=(const wxIcon& icon) const { return !(*this == icon); }
 
     // create from bitmap (which should have a mask unless it's monochrome):
Index: include/wx/motif/icon.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/motif/icon.h,v
retrieving revision 1.27
diff -bu2 -r1.27 include/wx/motif/icon.h
--- include/wx/motif/icon.h
+++ include/wx/motif/icon.h
@@ -56,9 +56,4 @@
     void CopyFromBitmap(const wxBitmap& bmp);
 
-    bool operator == (const wxIcon& icon) const
-        { return m_refData == icon.m_refData; }
-    bool operator != (const wxIcon& icon) const
-        { return !(*this == icon); }
-
 
     DECLARE_DYNAMIC_CLASS(wxIcon)
Index: include/wx/msw/icon.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/icon.h,v
retrieving revision 1.20
diff -bu2 -r1.20 include/wx/msw/icon.h
--- include/wx/msw/icon.h
+++ include/wx/msw/icon.h
@@ -66,9 +66,4 @@
                           int desiredWidth = -1, int desiredHeight = -1);
 
-    bool operator == (const wxIcon& icon) const
-        { return m_refData == icon.m_refData; }
-    bool operator != (const wxIcon& icon) const
-        { return m_refData != icon.m_refData; }
-
     // implementation only from now on
     wxIconRefData *GetIconData() const { return (wxIconRefData *)m_refData; }
Index: include/wx/os2/icon.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/icon.h,v
retrieving revision 1.15
diff -bu2 -r1.15 include/wx/os2/icon.h
--- include/wx/os2/icon.h
+++ include/wx/os2/icon.h
@@ -65,9 +65,4 @@
                  );
 
-    inline bool operator == (const wxIcon& rIcon) const
-       { return m_refData == rIcon.m_refData; }
-    inline bool operator != (const wxIcon& rIcon) const
-       { return m_refData != rIcon.m_refData; }
-
     wxIconRefData *GetIconData() const { return (wxIconRefData *)m_refData; }
 
Index: docs/latex/wx/image.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/image.tex,v
retrieving revision 1.91
diff -bu2 -r1.91 docs/latex/wx/image.tex
--- docs/latex/wx/image.tex
+++ docs/latex/wx/image.tex
@@ -223,4 +223,5 @@
 
 Destructor.
+See \helpref{reference-counted object destruction}{refcountdestruct} for more info.
 
 
@@ -1302,34 +1303,4 @@
 
 
-\membersection{wxImage::operator $==$}\label{wximageequal}
-
-\constfunc{bool}{operator $==$}{\param{const wxImage\& }{image}}
-
-Equality operator. This operator tests whether the internal data pointers are
-equal (a fast test).
-
-\wxheading{Parameters}
-
-\docparam{image}{Image to compare with 'this'}
-
-\wxheading{Return value}
-
-Returns true if the images were effectively equal, false otherwise.
-
-
-\membersection{wxImage::operator $!=$}\label{wximagenotequal}
-
-\constfunc{bool}{operator $!=$}{\param{const wxImage\& }{image}}
-
-Inequality operator. This operator tests whether the internal data pointers are
-unequal (a fast test).
-
-\wxheading{Parameters}
-
-\docparam{image}{Image to compare with 'this'}
-
-\wxheading{Return value}
-
-Returns true if the images were unequal, false otherwise.
 
 \section{\class{wxImageHandler}}\label{wximagehandler}
Index: include/wx/image.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/image.h,v
retrieving revision 1.120
diff -bu2 -r1.120 include/wx/image.h
--- include/wx/image.h
+++ include/wx/image.h
@@ -388,9 +388,4 @@
     void RotateHue(double angle);
 
-    bool operator == (const wxImage& image) const
-        { return m_refData == image.m_refData; }
-    bool operator != (const wxImage& image) const
-        { return m_refData != image.m_refData; }
-
     static wxList& GetHandlers() { return sm_handlers; }
     static void AddHandler( wxImageHandler *handler );
Index: docs/latex/wx/metafile.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/metafile.tex,v
retrieving revision 1.8
diff -bu2 -r1.8 docs/latex/wx/metafile.tex
--- docs/latex/wx/metafile.tex
+++ docs/latex/wx/metafile.tex
@@ -34,4 +34,5 @@
 
 Destructor.
+See \helpref{reference-counted object destruction}{refcountdestruct} for more info.
 
 \membersection{wxMetafile::IsOk}\label{wxmetafileisok}
Index: include/wx/mac/carbon/metafile.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/metafile.h,v
retrieving revision 1.11
diff -bu2 -r1.11 include/wx/mac/carbon/metafile.h
--- include/wx/mac/carbon/metafile.h
+++ include/wx/mac/carbon/metafile.h
@@ -58,10 +58,4 @@
     WXHMETAFILE GetHMETAFILE() const ;
     void SetHMETAFILE(WXHMETAFILE mf) ;
-
-    // Operators
-    inline bool operator == (const wxMetafile& metafile) const { return m_refData == metafile.m_refData; }
-    inline bool operator != (const wxMetafile& metafile) const { return m_refData != metafile.m_refData; }
-
-protected:
 };
 
Index: include/wx/msw/metafile.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/metafile.h,v
retrieving revision 1.19
diff -bu2 -r1.19 include/wx/msw/metafile.h
--- include/wx/msw/metafile.h
+++ include/wx/msw/metafile.h
@@ -69,10 +69,4 @@
     void SetWindowsMappingMode(int mm);
 
-    // Operators
-    bool operator==(const wxMetafile& metafile) const
-        { return m_refData == metafile.m_refData; }
-    bool operator!=(const wxMetafile& metafile) const
-        { return m_refData != metafile.m_refData; }
-
 private:
     DECLARE_DYNAMIC_CLASS(wxMetafile)
Index: include/wx/os2/metafile.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/metafile.h,v
retrieving revision 1.13
diff -bu2 -r1.13 include/wx/os2/metafile.h
--- include/wx/os2/metafile.h
+++ include/wx/os2/metafile.h
@@ -67,10 +67,4 @@
     inline int GetWindowsMappingMode(void) { return M_METAFILEDATA->m_windowsMappingMode; }
     void SetWindowsMappingMode(int mm);
-
-    // Operators
-    inline bool operator== (const wxMetafile& metafile) const
-        { return m_refData == metafile.m_refData; }
-    inline bool operator!= (const wxMetafile& metafile) const
-        { return m_refData != metafile.m_refData; }
 };
 
Index: include/wx/palmos/metafile.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/metafile.h,v
retrieving revision 1.7
diff -bu2 -r1.7 include/wx/palmos/metafile.h
--- include/wx/palmos/metafile.h
+++ include/wx/palmos/metafile.h
@@ -69,10 +69,4 @@
     void SetWindowsMappingMode(int mm);
 
-    // Operators
-    bool operator==(const wxMetafile& metafile) const
-        { return m_refData == metafile.m_refData; }
-    bool operator!=(const wxMetafile& metafile) const
-        { return m_refData != metafile.m_refData; }
-
 private:
     DECLARE_DYNAMIC_CLASS(wxMetafile)
Index: src/palmos/metafile.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/palmos/metafile.cpp,v
retrieving revision 1.5
diff -bu2 -r1.5 src/palmos/metafile.cpp
Index: docs/latex/wx/object.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/object.tex,v
retrieving revision 1.8
diff -bu2 -r1.8 docs/latex/wx/object.tex
--- docs/latex/wx/object.tex
+++ docs/latex/wx/object.tex
@@ -117,4 +117,11 @@
 \end{verbatim}

+\membersection{wxObject::IsRefTo}\label{wxobjectisrefto}
+
+\func{bool}{IsRefTo}{\param{const wxObject *}{ obj}}
+
+Returns \true if this object is referencing the \arg{obj}'s data.
+Note that this function only does a {\tt shallow} comparison.
+
 \membersection{wxObject::Ref}\label{wxobjectref}

@@ -166,4 +173,15 @@
 \helpref{wxObjectRefData}{wxobjectrefdata}

+\membersection{wxObject::UnShare}\label{wxobjectunshare}
+
+\func{void}{UnShare}{\void}
+
+Ensure that this object's data is not shared with any other object.
+
+if we have no
+data, it is created using CreateRefData() below, if we have shared data
+it is copied using CloneRefData(), otherwise nothing is done.
+
+
 \membersection{wxObject::operator new}\label{wxobjectnew}

Index: docs/latex/wx/trefcount.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/trefcount.tex,v
retrieving revision 1.1
diff -bu2 -r1.1 docs/latex/wx/trefcount.tex
--- docs/latex/wx/trefcount.tex
+++ docs/latex/wx/trefcount.tex
@@ -1,5 +1,5 @@
 \section{Reference counting}\label{trefcount}

-\subsection{Reference counting and why you shouldn't care about it}\label{refcount}
+\subsection{Why you shouldn't care about it}\label{refcount}

 Many wxWidgets objects use a technique known as \it{reference counting}, also known
@@ -20,4 +20,32 @@


+\subsection{Object comparison}\label{refcountequality}
+
+The $==$ and $!=$ operators of \helpref{wxWidgets COW objects}{refcountlist}
+always do a {\tt deep} comparison.
+
+This means that the equality operator will return \true if two objects are
+identic and not only if they share the same data.
+
+Note that wxWidgets follows the {\it STL philosophy}: when a comparison operator cannot
+be implemented efficiently (like for e.g. wxImage's $==$ operator which would need to
+compare pixel-by-pixel the entire image's data), it's not implemented at all.
+
+That's why not all reference-counted wxWidgets classes provide comparison operators.
+
+Also note that if you only need to do a {\tt shallow} comparison between two
+\helpref{wxObject}{wxobject}-derived classes, you should not use the $==$ and $!=$ operators
+but rather the \helpref{wxObject::IsRefTo}{wxobjectisrefto} function.
+
+
+\subsection{Object destruction}\label{refcountdestruct}
+
+When a COW object destructor is called, it may not delete the data: if it's shared,
+the destructor will just decrement the shared data's reference count without destroying it.
+
+Only when the destructor of the last object owning the data is called, the data is really
+destroyed. As for all other COW-things, this happens transparently to the class users so
+that you shouldn't care about it.
+

 \subsection{List of reference-counted wxWidgets classes}\label{refcountlist}
@@ -27,7 +55,10 @@

 \helpref{wxAcceleratorTable}{wxacceleratortable}\\
+\helpref{wxAnimation}{wxanimation}\\
+\helpref{wxBitmap}{wxbitmap}\\
 \helpref{wxBrush}{wxbrush}\\
 \helpref{wxCursor}{wxcursor}\\
 \helpref{wxFont}{wxfont}\\
+\helpref{wxIcon}{wxicon}\\
 \helpref{wxImage}{wximage}\\
 \helpref{wxMetafile}{wxmetafile}\\
@@ -35,7 +66,8 @@
 \helpref{wxPen}{wxpen}\\
 \helpref{wxRegion}{wxregion}\\
-\helpref{wxRegionIterator}{wxregioniterator}\\
 \helpref{wxString}{wxstring}

+Note that the list above reports the objects which are reference-counted in all ports of
+wxWidgets; some ports may use this tecnique also for other classes.


Index: include/wx/dcbuffer.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/dcbuffer.h,v
retrieving revision 1.31
diff -bu2 -r1.31 include/wx/dcbuffer.h
--- include/wx/dcbuffer.h
+++ include/wx/dcbuffer.h
@@ -170,5 +170,5 @@
             window->PrepareDC( m_paintdc );

-        if( buffer != wxNullBitmap )
+        if( buffer.IsOk() )
             Init(&m_paintdc, buffer, style);
         else
Index: include/wx/object.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/object.h,v
retrieving revision 1.127
diff -bu2 -r1.127 include/wx/object.h
--- include/wx/object.h
+++ include/wx/object.h
@@ -474,4 +474,7 @@
     void UnShare() { AllocExclusive(); }

+    // Do a shallow comparison of our referenced data with the given object's refdata
+    bool IsRefTo(const wxObject *p) const { return m_refData == p->m_refData; }
+
 protected:
     // ensure that our data is not shared with anybody else: if we have no
Index: include/wx/variant.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/variant.h,v
retrieving revision 1.46
diff -bu2 -r1.46 include/wx/variant.h
--- include/wx/variant.h
+++ include/wx/variant.h
@@ -333,5 +333,5 @@
     IMPLEMENT_VARIANT_OBJECT_EXPORTED(classname,EMPTY_PARAMETER_VALUE)

-#define IMPLEMENT_VARIANT_OBJECT_EXPORTED(classname,expdecl) \
+#define IMPLEMENT_VARIANT_OBJECT_EXPORTED_NO_EQ(classname,expdecl) \
 class classname##VariantData: public wxVariantData \
 { \
@@ -356,13 +356,4 @@
 IMPLEMENT_CLASS(classname##VariantData, wxVariantData)\
 \
-bool classname##VariantData::Eq(wxVariantData& data) const \
-{\
-    wxASSERT( wxIsKindOf((&data), classname##VariantData) );\
-\
-    classname##VariantData & otherData = (classname##VariantData &) data;\
-\
-    return (otherData.m_value == m_value);\
-}\
-\
 wxString classname##VariantData::GetType() const\
 {\
@@ -391,4 +382,34 @@
 }

+// implements a wxVariantData-derived class using for the Eq() method the operator==
+// which must have been provided by "classname"
+#define IMPLEMENT_VARIANT_OBJECT_EXPORTED(classname,expdecl) \
+IMPLEMENT_VARIANT_OBJECT_EXPORTED_NO_EQ(classname,expdecl) \
+\
+bool classname##VariantData::Eq(wxVariantData& data) const \
+{\
+    wxASSERT( wxIsKindOf((&data), classname##VariantData) );\
+\
+    classname##VariantData & otherData = (classname##VariantData &) data;\
+\
+    return otherData.m_value == m_value;\
+}\
+
+
+// implements a wxVariantData-derived class using for the Eq() method a shallow
+// comparison (through wxObject::IsRefTo function)
+#define IMPLEMENT_VARIANT_OBJECT_EXPORTED_SHALLOWCMP(classname,expdecl) \
+IMPLEMENT_VARIANT_OBJECT_EXPORTED_NO_EQ(classname,expdecl) \
+\
+bool classname##VariantData::Eq(wxVariantData& data) const \
+{\
+    wxASSERT( wxIsKindOf((&data), classname##VariantData) );\
+\
+    classname##VariantData & otherData = (classname##VariantData &) data;\
+\
+    return (otherData.m_value.IsRefTo(&m_value));\
+}\
+
+
 // Since we want type safety wxVariant we need to fetch and dynamic_cast
 // in a seemingly safe way so the compiler can check, so we define
Index: src/common/bmpbase.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/bmpbase.cpp,v
retrieving revision 1.38
diff -bu2 -r1.38 src/common/bmpbase.cpp
--- src/common/bmpbase.cpp
+++ src/common/bmpbase.cpp
@@ -29,6 +29,6 @@

 #if wxUSE_VARIANT
-IMPLEMENT_VARIANT_OBJECT_EXPORTED(wxBitmap,WXDLLEXPORT)
-IMPLEMENT_VARIANT_OBJECT_EXPORTED(wxIcon,WXDLLEXPORT)
+IMPLEMENT_VARIANT_OBJECT_EXPORTED_SHALLOWCMP(wxBitmap,WXDLLEXPORT)
+IMPLEMENT_VARIANT_OBJECT_EXPORTED_SHALLOWCMP(wxIcon,WXDLLEXPORT)
 #endif

Index: src/common/image.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/image.cpp,v
retrieving revision 1.237
diff -bu2 -r1.237 src/common/image.cpp
--- src/common/image.cpp
+++ src/common/image.cpp
@@ -50,5 +50,5 @@

 #if wxUSE_VARIANT
-IMPLEMENT_VARIANT_OBJECT_EXPORTED(wxImage,WXDLLEXPORT)
+IMPLEMENT_VARIANT_OBJECT_EXPORTED_SHALLOWCMP(wxImage,WXDLLEXPORT)
 #endif

Index: src/common/wincmn.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/wincmn.cpp,v
retrieving revision 1.281
diff -bu2 -r1.281 src/common/wincmn.cpp
--- src/common/wincmn.cpp
+++ src/common/wincmn.cpp
@@ -1041,5 +1041,5 @@
     // setting an invalid cursor is ok, it means that we don't have any special
     // cursor
-    if ( m_cursor == cursor )
+    if ( m_cursor.IsRefTo(&cursor) )
     {
         // no change
Index: src/generic/wizard.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/wizard.cpp,v
retrieving revision 1.73
diff -bu2 -r1.73 src/generic/wizard.cpp
--- src/generic/wizard.cpp
+++ src/generic/wizard.cpp
@@ -632,5 +632,5 @@
             bmpPrev = m_bitmap;

-        if ( bmp != bmpPrev )
+        if ( !bmp.IsRefTo(&bmpPrev) )
             m_statbmp->SetBitmap(bmp);
     }
Index: include/wx/gtk/region.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/region.h,v
retrieving revision 1.38
diff -bu2 -r1.38 include/wx/gtk/region.h
--- include/wx/gtk/region.h
+++ include/wx/gtk/region.h
@@ -95,4 +95,5 @@
     wxRegionIterator();
     wxRegionIterator(const wxRegion& region);
+    ~wxRegionIterator();

     void Reset() { m_current = 0u; }
@@ -114,7 +115,13 @@

 private:
+    void Init();
+    void CreateRects( const wxRegion& r );
+
     size_t   m_current;
     wxRegion m_region;

+    wxRect *m_rects;
+    size_t  m_numRects;
+
 private:
     DECLARE_DYNAMIC_CLASS(wxRegionIterator)
cvsdo: WARNING: Using src/gtk/.#region.cpp.1_49 for src/gtk/region.cpp
Index: src/gtk/region.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/region.cpp,v
retrieving revision 1.49
diff -bu2 -r1.49 src/gtk/region.cpp
--- src/gtk/region.cpp
+++ src/gtk/region.cpp
@@ -337,28 +337,31 @@
 // ----------------------------------------------------------------------------

-class wxRIRefData: public wxObjectRefData
+wxRegionIterator::wxRegionIterator()
 {
-public:
-    wxRIRefData() { Init(); }
-    virtual ~wxRIRefData();
-
-    void CreateRects( const wxRegion& r );
-
-    void Init() { m_rects = NULL; m_numRects = 0; }
+    Init();
+    Reset();
+}

-    wxRect *m_rects;
-    size_t  m_numRects;
-};
+wxRegionIterator::wxRegionIterator( const wxRegion& region )
+{
+    Init();
+    Reset(region);
+}

-wxRIRefData::~wxRIRefData()
+void wxRegionIterator::Init()
 {
-    delete [] m_rects;
+    m_rects = NULL;
+    m_numRects = 0;
 }

-void wxRIRefData::CreateRects( const wxRegion& region )
+wxRegionIterator::~wxRegionIterator()
 {
-    delete [] m_rects;
+    wxDELETEA(m_rects);
+}

-    Init();
+void wxRegionIterator::CreateRects( const wxRegion& region )
+{
+    wxDELETEA(m_rects);
+    m_numRects = 0;

     GdkRegion *gdkregion = region.GetRegion();
@@ -387,20 +390,8 @@
 }

-wxRegionIterator::wxRegionIterator()
-{
-    m_refData = new wxRIRefData();
-    Reset();
-}
-
-wxRegionIterator::wxRegionIterator( const wxRegion& region )
-{
-    m_refData = new wxRIRefData();
-    Reset(region);
-}
-
 void wxRegionIterator::Reset( const wxRegion& region )
 {
     m_region = region;
-    ((wxRIRefData*)m_refData)->CreateRects(region);
+    CreateRects(region);
     Reset();
 }
@@ -408,5 +399,5 @@
 bool wxRegionIterator::HaveRects() const
 {
-    return m_current < ((wxRIRefData*)m_refData)->m_numRects;
+    return m_current < m_numRects;
 }

@@ -422,4 +413,5 @@
 {
     wxRegionIterator tmp = *this;
+
     if (HaveRects())
         ++m_current;
@@ -432,5 +424,5 @@
     wxCHECK_MSG( HaveRects(), 0, _T("invalid wxRegionIterator") );

-    return ((wxRIRefData*)m_refData)->m_rects[m_current].x;
+    return m_rects[m_current].x;
 }

@@ -439,5 +431,5 @@
     wxCHECK_MSG( HaveRects(), 0, _T("invalid wxRegionIterator") );

-    return ((wxRIRefData*)m_refData)->m_rects[m_current].y;
+    return m_rects[m_current].y;
 }

@@ -446,5 +438,5 @@
     wxCHECK_MSG( HaveRects(), 0, _T("invalid wxRegionIterator") );

-    return ((wxRIRefData*)m_refData)->m_rects[m_current].width;
+    return m_rects[m_current].width;
 }

@@ -453,5 +445,5 @@
     wxCHECK_MSG( HaveRects(), 0, _T("invalid wxRegionIterator") );

-    return ((wxRIRefData*)m_refData)->m_rects[m_current].height;
+    return m_rects[m_current].height;
 }

@@ -460,5 +452,5 @@
     wxRect r;
     if( HaveRects() )
-        r = ((wxRIRefData*)m_refData)->m_rects[m_current];
+        r = m_rects[m_current];

     return r;
Index: docs/latex/wx/palette.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/palette.tex,v
retrieving revision 1.16
diff -bu2 -r1.16 docs/latex/wx/palette.tex
--- docs/latex/wx/palette.tex
+++ docs/latex/wx/palette.tex
@@ -87,4 +87,5 @@
 
 Destructor.
+See \helpref{reference-counted object destruction}{refcountdestruct} for more info.
 
 \membersection{wxPalette::Create}\label{wxpalettecreate}
@@ -183,18 +184,2 @@
 Assignment operator, using \helpref{reference counting}{trefcount}.
 
-\membersection{wxPalette::operator $==$}\label{wxpaletteequals}
-
-\func{bool}{operator $==$}{\param{const wxPalette\& }{palette}}
-
-Equality operator. Two palettes are equal if they contain pointers
-to the same underlying palette data. It does not compare each attribute,
-so two independently-created palettes using the same parameters will
-fail the test.
-
-\membersection{wxPalette::operator $!=$}\label{wxpalettenotequals}
-
-\func{bool}{operator $!=$}{\param{const wxPalette\& }{palette}}
-
-Inequality operator. Two palettes are not equal if they contain pointers
-to different underlying palette data. It does not compare each attribute.
-
Index: include/wx/generic/paletteg.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/generic/paletteg.h,v
retrieving revision 1.16
diff -bu2 -r1.16 include/wx/generic/paletteg.h
--- include/wx/generic/paletteg.h
+++ include/wx/generic/paletteg.h
@@ -34,6 +34,4 @@
     wxPalette( int n, const unsigned char *red, const unsigned char *green, const unsigned char *blue );
     virtual ~wxPalette();
-    bool operator == ( const wxPalette& palette ) const;
-    bool operator != ( const wxPalette& palette ) const;
     virtual bool Ok() const { return IsOk(); }
     virtual bool IsOk() const;
Index: include/wx/mac/carbon/palette.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/palette.h,v
retrieving revision 1.12
diff -bu2 -r1.12 include/wx/mac/carbon/palette.h
--- include/wx/mac/carbon/palette.h
+++ include/wx/mac/carbon/palette.h
@@ -48,7 +48,4 @@
     virtual bool IsOk() const { return (m_refData != NULL) ; }
 
-    inline bool operator == (const wxPalette& palette) const { return m_refData == palette.m_refData; }
-    inline bool operator != (const wxPalette& palette) const { return m_refData != palette.m_refData; }
-
     virtual int GetColoursCount() const;
     
Index: include/wx/mgl/palette.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mgl/palette.h,v
retrieving revision 1.13
diff -bu2 -r1.13 include/wx/mgl/palette.h
--- include/wx/mgl/palette.h
+++ include/wx/mgl/palette.h
@@ -36,6 +36,4 @@
     wxPalette(int n, const unsigned char *red, const unsigned char *green, const unsigned char *blue);
     virtual ~wxPalette();
-    bool operator == (const wxPalette& palette) const;
-    bool operator != (const wxPalette& palette) const;
     virtual bool Ok() const { return IsOk(); }
     virtual bool IsOk() const;
Index: include/wx/motif/palette.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/motif/palette.h,v
retrieving revision 1.17
diff -bu2 -r1.17 include/wx/motif/palette.h
--- include/wx/motif/palette.h
+++ include/wx/motif/palette.h
@@ -62,7 +62,4 @@
     virtual bool IsOk() const { return (m_refData != NULL) ; }
 
-    bool operator == (const wxPalette& palette) const { return m_refData == palette.m_refData; }
-    bool operator != (const wxPalette& palette) const { return m_refData != palette.m_refData; }
-
     // Motif-specific
     WXColormap GetXColormap(WXDisplay* display = NULL) const;
Index: include/wx/msw/palette.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/palette.h,v
retrieving revision 1.17
diff -bu2 -r1.17 include/wx/msw/palette.h
--- include/wx/msw/palette.h
+++ include/wx/msw/palette.h
@@ -45,7 +45,4 @@
     virtual bool IsOk(void) const { return (m_refData != NULL) ; }
 
-    inline bool operator == (const wxPalette& palette) const { return m_refData == palette.m_refData; }
-    inline bool operator != (const wxPalette& palette) const { return m_refData != palette.m_refData; }
-
     virtual bool FreeResource(bool force = false);
 
Index: include/wx/os2/palette.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/palette.h,v
retrieving revision 1.14
diff -bu2 -r1.14 include/wx/os2/palette.h
--- include/wx/os2/palette.h
+++ include/wx/os2/palette.h
@@ -63,9 +63,4 @@
     virtual bool IsOk(void) const { return (m_refData != NULL) ; }
 
-    inline bool       operator == (const wxPalette& rPalette) const
-        { return m_refData == rPalette.m_refData; }
-    inline bool       operator != (const wxPalette& rPalette) const
-        { return m_refData != rPalette.m_refData; }
-
     virtual bool FreeResource(bool bForce = false);
 
Index: include/wx/palmos/palette.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/palette.h,v
retrieving revision 1.8
diff -bu2 -r1.8 include/wx/palmos/palette.h
--- include/wx/palmos/palette.h
+++ include/wx/palmos/palette.h
@@ -45,7 +45,4 @@
   virtual bool IsOk(void) const { return (m_refData != NULL) ; }
 
-  inline bool operator == (const wxPalette& palette) const { return m_refData == palette.m_refData; }
-  inline bool operator != (const wxPalette& palette) const { return m_refData != palette.m_refData; }
-
   virtual bool FreeResource(bool force = false);
 
Index: include/wx/x11/palette.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/x11/palette.h,v
retrieving revision 1.12
diff -bu2 -r1.12 include/wx/x11/palette.h
--- include/wx/x11/palette.h
+++ include/wx/x11/palette.h
@@ -62,7 +62,4 @@
     virtual bool IsOk() const { return (m_refData != NULL) ; }
 
-    bool operator == (const wxPalette& palette) const { return m_refData == palette.m_refData; }
-    bool operator != (const wxPalette& palette) const { return m_refData != palette.m_refData; }
-
     // X-specific
     WXColormap GetXColormap(WXDisplay* display = NULL) const;
Index: src/generic/paletteg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/paletteg.cpp,v
retrieving revision 1.16
diff -bu2 -r1.16 src/generic/paletteg.cpp
--- src/generic/paletteg.cpp
+++ src/generic/paletteg.cpp
@@ -71,14 +71,4 @@
 }
 
-bool wxPalette::operator == (const wxPalette& palette) const
-{
-    return m_refData == palette.m_refData;
-}
-
-bool wxPalette::operator != (const wxPalette& palette) const
-{
-    return m_refData != palette.m_refData;
-}
-
 bool wxPalette::IsOk() const
 {
Index: src/mgl/palette.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mgl/palette.cpp,v
retrieving revision 1.12
diff -bu2 -r1.12 src/mgl/palette.cpp
--- src/mgl/palette.cpp
+++ src/mgl/palette.cpp
@@ -64,14 +64,4 @@
 }
 
-bool wxPalette::operator == (const wxPalette& palette) const
-{
-    return m_refData == palette.m_refData;
-}
-
-bool wxPalette::operator != (const wxPalette& palette) const
-{
-    return m_refData != palette.m_refData;
-}
-
 bool wxPalette::IsOk(void) const
 {
Index: docs/latex/wx/pen.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/pen.tex,v
retrieving revision 1.21
diff -bu2 -r1.21 docs/latex/wx/pen.tex
--- docs/latex/wx/pen.tex
+++ docs/latex/wx/pen.tex
@@ -155,10 +155,8 @@
 
 Destructor.
+See \helpref{reference-counted object destruction}{refcountdestruct} for more info.
 
 \wxheading{Remarks}
 
-The destructor may not delete the underlying pen object of the native windowing
-system, since wxBrush uses a reference counting system for efficiency.
-
 Although all remaining pens are deleted when the application exits,
 the application should try to clean up all pens itself. This is because
@@ -336,8 +334,6 @@
 \func{bool}{operator $==$}{\param{const wxPen\& }{pen}}
 
-Equality operator. Two pens are equal if they contain pointers
-to the same underlying pen data. It does not compare each attribute,
-so two independently-created pens using the same parameters will
-fail the test.
+Equality operator.
+See \helpref{reference-counted object comparison}{refcountequality} for more info.
 
 \membersection{wxPen::operator $!=$}\label{wxpennotequals}
@@ -345,6 +341,6 @@
 \func{bool}{operator $!=$}{\param{const wxPen\& }{pen}}
 
-Inequality operator. Two pens are not equal if they contain pointers
-to different underlying pen data. It does not compare each attribute.
+Inequality operator.
+See \helpref{reference-counted object comparison}{refcountequality} for more info.
 
 \section{\class{wxPenList}}\label{wxpenlist}
Index: include/wx/mac/carbon/pen.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/mac/carbon/pen.h,v
retrieving revision 1.11
diff -bu2 -r1.11 include/wx/mac/carbon/pen.h
--- include/wx/mac/carbon/pen.h
+++ include/wx/mac/carbon/pen.h
@@ -29,4 +29,18 @@
     wxPenRefData& operator=(const wxPenRefData& data);
 
+    bool operator==(const wxPenRefData& data) const
+    {
+        // we intentionally don't compare m_hPen fields here
+        return m_style == data.m_style &&
+               m_width == data.m_width &&
+               m_join == data.m_join &&
+               m_cap == data.m_cap &&
+               m_colour == data.m_colour &&
+               (m_style != wxSTIPPLE || m_stipple.IsRefTo(&data.m_stipple)) &&
+               (m_style != wxUSER_DASH ||
+                (m_nbDash == data.m_nbDash &&
+                    memcmp(m_dash, data.m_dash, m_nbDash*sizeof(wxDash)) == 0));
+    }
+
 protected:
   int           m_width;
@@ -55,6 +69,13 @@
   virtual ~wxPen();
 
-  inline bool operator == (const wxPen& pen) const { return m_refData == pen.m_refData; }
-  inline bool operator != (const wxPen& pen) const { return m_refData != pen.m_refData; }
+  inline bool operator == (const wxPen& pen) const
+  {
+    const wxPenRefData *penData = (wxPenRefData *)pen.m_refData;
+
+    // an invalid pen is only equal to another invalid pen
+    return m_refData ? penData && *M_PENDATA == *penData : !penData;
+  }
+
+  inline bool operator != (const wxPen& pen) const { return *(this == pen); }
 
   virtual bool Ok() const { return IsOk(); }
Index: include/wx/msw/pen.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/msw/pen.h,v
retrieving revision 1.29
diff -bu2 -r1.29 include/wx/msw/pen.h
--- include/wx/msw/pen.h
+++ include/wx/msw/pen.h
@@ -37,5 +37,5 @@
                m_cap == data.m_cap &&
                m_colour == data.m_colour &&
-               (m_style != wxSTIPPLE || m_stipple == data.m_stipple) &&
+               (m_style != wxSTIPPLE || m_stipple.IsRefTo(&data.m_stipple)) &&
                (m_style != wxUSER_DASH ||
                 (m_nbDash == data.m_nbDash &&
Index: include/wx/os2/pen.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/os2/pen.h,v
retrieving revision 1.18
diff -bu2 -r1.18 include/wx/os2/pen.h
--- include/wx/os2/pen.h
+++ include/wx/os2/pen.h
@@ -28,4 +28,18 @@
     virtual ~wxPenRefData();
 
+    bool operator==(const wxPenRefData& data) const
+    {
+        // we intentionally don't compare m_hPen fields here
+        return m_nStyle == data.m_nStyle &&
+               m_nWidth == data.m_nWidth &&
+               m_nJoin == data.m_nJoin &&
+               m_nCap == data.m_nCap &&
+               m_vColour == data.m_vColour &&
+               (m_style != wxSTIPPLE || m_stipple.IsRefTo(&data.m_stipple)) &&
+               (m_style != wxUSER_DASH ||
+                (m_dash == data.m_dash &&
+                    memcmp(m_dash, data.m_dash, m_nbDash*sizeof(wxDash)) == 0));
+    }
+
 protected:
     int                             m_nWidth;
@@ -58,7 +72,13 @@
 
     inline bool   operator == (const wxPen& rPen) const
-        { return m_refData == rPen.m_refData; }
+    {
+        const wxPenRefData *penData = (wxPenRefData *)pen.m_refData;
+
+        // an invalid pen is only equal to another invalid pen
+        return m_refData ? penData && *M_PENDATA == *penData : !penData;
+    }
+
     inline bool   operator != (const wxPen& rPen) const
-        { return m_refData != rPen.m_refData; }
+        { return !(*this == rPen); }
 
     virtual bool Ok() const { return IsOk(); }
Index: include/wx/palmos/pen.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/palmos/pen.h,v
retrieving revision 1.7
diff -bu2 -r1.7 include/wx/palmos/pen.h
--- include/wx/palmos/pen.h
+++ include/wx/palmos/pen.h
@@ -37,5 +37,5 @@
                m_cap == data.m_cap &&
                m_colour == data.m_colour &&
-               (m_style != wxSTIPPLE || m_stipple == data.m_stipple) &&
+               (m_style != wxSTIPPLE || m_stipple.IsRefTo(&data.m_stipple)) &&
                (m_style != wxUSER_DASH ||
                 (m_nbDash == data.m_nbDash &&
Index: src/mgl/pen.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/mgl/pen.cpp,v
retrieving revision 1.18
diff -bu2 -r1.18 src/mgl/pen.cpp
--- src/mgl/pen.cpp
+++ src/mgl/pen.cpp
@@ -34,4 +34,19 @@
         wxPenRefData(const wxPenRefData& data);
 
+    bool operator==(const wxPenRefData& data) const
+    {
+        // we intentionally don't compare m_hPen fields here
+        return m_style == data.m_style &&
+               m_width == data.m_width &&
+               m_pixPattern == data.m_pixPattern &&
+               m_capStyle == data.m_capStyle &&
+               m_joinStyle == data.m_joinStyle &&
+               m_colour == data.m_colour &&
+               (m_style != wxSTIPPLE || m_stipple.IsRefTo(&data.m_stipple)) &&
+               (m_style != wxUSER_DASH ||
+                (m_dash == data.m_dash &&
+                    memcmp(m_dash, data.m_dash, m_countDashes*sizeof(wxDash)) == 0));
+    }
+
         int            m_width;
         int            m_style;
@@ -110,5 +125,9 @@
 bool wxPen::operator == (const wxPen& pen) const
 {
-    return m_refData == pen.m_refData;
+    if (m_refData == pen.m_refData) return true;
+
+    if (!m_refData || !pen.m_refData) return false;
+
+    return ( *(wxPenRefData*)m_refData == *(wxPenRefData*)pen.m_refData );
 }
 
Index: docs/latex/wx/region.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/region.tex,v
retrieving revision 1.22
diff -bu2 -r1.22 docs/latex/wx/region.tex
--- docs/latex/wx/region.tex
+++ docs/latex/wx/region.tex
@@ -66,4 +66,5 @@
 
 Destructor.
+See \helpref{reference-counted object destruction}{refcountdestruct} for more info.
 
 

 	  	 
