Index: build/msw/wx_vc9_core.vcproj
===================================================================
--- build/msw/wx_vc9_core.vcproj	(revision 67411)
+++ build/msw/wx_vc9_core.vcproj	(working copy)
@@ -1,16 +1,10 @@
 <?xml version="1.0" encoding="Windows-1252"?>
-<!--
-
-  This project was generated by
-  Bakefile 0.2.9 (http://www.bakefile.org)
-  Do not modify, all changes will be overwritten!
-
--->
 <VisualStudioProject
 	ProjectType="Visual C++"
 	Version="9.00"
 	Name="core"
 	ProjectGUID="{6744DAD8-9C70-574A-BFF2-9F8DDDB24A75}"
+	TargetFrameworkVersion="0"
 	>
 	<Platforms>
 		<Platform
@@ -18,7 +12,6 @@
 		/>
 	</Platforms>
 	<ToolFiles>
-		
 	</ToolFiles>
 	<Configurations>
 		<Configuration
@@ -88,15 +81,12 @@
 				Name="VCALinkTool"
 			/>
 			<Tool
-				Name="VCManifestTool"
-			/>
-			<Tool
 				Name="VCXDCMakeTool"
 			/>
 			<Tool
 				Name="VCBscMakeTool"
+				SuppressStartupBanner="true"
 				OutputFile="..\..\lib\vc_lib\wx_vc9_core.bsc"
-				SuppressStartupBanner="true"
 			/>
 			<Tool
 				Name="VCFxCopTool"
@@ -170,15 +160,12 @@
 				Name="VCALinkTool"
 			/>
 			<Tool
-				Name="VCManifestTool"
-			/>
-			<Tool
 				Name="VCXDCMakeTool"
 			/>
 			<Tool
 				Name="VCBscMakeTool"
+				SuppressStartupBanner="true"
 				OutputFile="..\..\lib\vc_lib\wx_vc9_core.bsc"
-				SuppressStartupBanner="true"
 			/>
 			<Tool
 				Name="VCFxCopTool"
@@ -254,15 +241,12 @@
 				Name="VCALinkTool"
 			/>
 			<Tool
-				Name="VCManifestTool"
-			/>
-			<Tool
 				Name="VCXDCMakeTool"
 			/>
 			<Tool
 				Name="VCBscMakeTool"
+				SuppressStartupBanner="true"
 				OutputFile="..\..\lib\vc_lib\wx_vc9_core.bsc"
-				SuppressStartupBanner="true"
 			/>
 			<Tool
 				Name="VCFxCopTool"
@@ -336,15 +320,12 @@
 				Name="VCALinkTool"
 			/>
 			<Tool
-				Name="VCManifestTool"
-			/>
-			<Tool
 				Name="VCXDCMakeTool"
 			/>
 			<Tool
 				Name="VCBscMakeTool"
+				SuppressStartupBanner="true"
 				OutputFile="..\..\lib\vc_lib\wx_vc9_core.bsc"
-				SuppressStartupBanner="true"
 			/>
 			<Tool
 				Name="VCFxCopTool"
@@ -417,12 +398,12 @@
 				AdditionalDependencies="wxtiffd.lib wxjpegd.lib wxpngd.lib  wxzlibd.lib wxregexud.lib wxexpatd.lib    kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib wininet.lib ..\..\lib\vc_dll\wxbase29ud.lib"
 				OutputFile="..\..\lib\vc_dll\wxmsw292ud_core_vc_custom.dll"
 				LinkIncremental="2"
-				ImportLibrary="..\..\lib\vc_dll\wxmsw29ud_core.lib"
 				SuppressStartupBanner="true"
 				AdditionalLibraryDirectories="..\..\lib\vc_dll"
 				GenerateManifest="true"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="..\..\lib\vc_dll\wxmsw292ud_core_vc_custom.pdb"
+				ImportLibrary="..\..\lib\vc_dll\wxmsw29ud_core.lib"
 				TargetMachine="1"
 			/>
 			<Tool
@@ -436,13 +417,16 @@
 			/>
 			<Tool
 				Name="VCBscMakeTool"
+				SuppressStartupBanner="true"
 				OutputFile="..\..\lib\vc_dll\wx_vc9_core.bsc"
-				SuppressStartupBanner="true"
 			/>
 			<Tool
 				Name="VCFxCopTool"
 			/>
 			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
 				Name="VCPostBuildEventTool"
 			/>
 		</Configuration>
@@ -508,15 +492,15 @@
 				AdditionalDependencies="wxtiff.lib wxjpeg.lib wxpng.lib  wxzlib.lib wxregexu.lib wxexpat.lib    kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib wininet.lib ..\..\lib\vc_dll\wxbase29u.lib"
 				OutputFile="..\..\lib\vc_dll\wxmsw292u_core_vc_custom.dll"
 				LinkIncremental="1"
-				ImportLibrary="..\..\lib\vc_dll\wxmsw29u_core.lib"
 				SuppressStartupBanner="true"
 				AdditionalLibraryDirectories="..\..\lib\vc_dll"
 				GenerateManifest="true"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="..\..\lib\vc_dll\wxmsw292u_core_vc_custom.pdb"
-				TargetMachine="1"
 				OptimizeReferences="2"
 				EnableCOMDATFolding="2"
+				ImportLibrary="..\..\lib\vc_dll\wxmsw29u_core.lib"
+				TargetMachine="1"
 			/>
 			<Tool
 				Name="VCALinkTool"
@@ -529,13 +513,16 @@
 			/>
 			<Tool
 				Name="VCBscMakeTool"
+				SuppressStartupBanner="true"
 				OutputFile="..\..\lib\vc_dll\wx_vc9_core.bsc"
-				SuppressStartupBanner="true"
 			/>
 			<Tool
 				Name="VCFxCopTool"
 			/>
 			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
 				Name="VCPostBuildEventTool"
 			/>
 		</Configuration>
@@ -603,12 +590,12 @@
 				AdditionalDependencies="wxtiffd.lib wxjpegd.lib wxpngd.lib  wxzlibd.lib wxregexud.lib wxexpatd.lib    kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib wininet.lib ..\..\lib\vc_dll\wxbase29ud.lib"
 				OutputFile="..\..\lib\vc_dll\wxmswuniv292ud_core_vc_custom.dll"
 				LinkIncremental="2"
-				ImportLibrary="..\..\lib\vc_dll\wxmswuniv29ud_core.lib"
 				SuppressStartupBanner="true"
 				AdditionalLibraryDirectories="..\..\lib\vc_dll"
 				GenerateManifest="true"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="..\..\lib\vc_dll\wxmswuniv292ud_core_vc_custom.pdb"
+				ImportLibrary="..\..\lib\vc_dll\wxmswuniv29ud_core.lib"
 				TargetMachine="1"
 			/>
 			<Tool
@@ -622,13 +609,16 @@
 			/>
 			<Tool
 				Name="VCBscMakeTool"
+				SuppressStartupBanner="true"
 				OutputFile="..\..\lib\vc_dll\wx_vc9_core.bsc"
-				SuppressStartupBanner="true"
 			/>
 			<Tool
 				Name="VCFxCopTool"
 			/>
 			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
 				Name="VCPostBuildEventTool"
 			/>
 		</Configuration>
@@ -694,15 +684,15 @@
 				AdditionalDependencies="wxtiff.lib wxjpeg.lib wxpng.lib  wxzlib.lib wxregexu.lib wxexpat.lib    kernel32.lib user32.lib gdi32.lib comdlg32.lib winspool.lib winmm.lib shell32.lib comctl32.lib ole32.lib oleaut32.lib uuid.lib rpcrt4.lib advapi32.lib wsock32.lib wininet.lib ..\..\lib\vc_dll\wxbase29u.lib"
 				OutputFile="..\..\lib\vc_dll\wxmswuniv292u_core_vc_custom.dll"
 				LinkIncremental="1"
-				ImportLibrary="..\..\lib\vc_dll\wxmswuniv29u_core.lib"
 				SuppressStartupBanner="true"
 				AdditionalLibraryDirectories="..\..\lib\vc_dll"
 				GenerateManifest="true"
 				GenerateDebugInformation="true"
 				ProgramDatabaseFile="..\..\lib\vc_dll\wxmswuniv292u_core_vc_custom.pdb"
-				TargetMachine="1"
 				OptimizeReferences="2"
 				EnableCOMDATFolding="2"
+				ImportLibrary="..\..\lib\vc_dll\wxmswuniv29u_core.lib"
+				TargetMachine="1"
 			/>
 			<Tool
 				Name="VCALinkTool"
@@ -715,19 +705,21 @@
 			/>
 			<Tool
 				Name="VCBscMakeTool"
+				SuppressStartupBanner="true"
 				OutputFile="..\..\lib\vc_dll\wx_vc9_core.bsc"
-				SuppressStartupBanner="true"
 			/>
 			<Tool
 				Name="VCFxCopTool"
 			/>
 			<Tool
+				Name="VCAppVerifierTool"
+			/>
+			<Tool
 				Name="VCPostBuildEventTool"
 			/>
 		</Configuration>
 	</Configurations>
 	<References>
-		
 	</References>
 	<Files>
 		<Filter
@@ -735,6 +727,10 @@
 			UniqueIdentifier="{A6A5C30D-BDB6-5050-906D-10A96065136C}"
 			>
 			<File
+				RelativePath="..\..\src\common\abstractbtncmn.cpp"
+				>
+			</File>
+			<File
 				RelativePath="..\..\src\common\accelcmn.cpp"
 				>
 			</File>
@@ -1316,6 +1312,10 @@
 			UniqueIdentifier="{D030D8C2-53EE-5B96-8F89-D78157B06140}"
 			>
 			<File
+				RelativePath="..\..\src\msw\abstractbtn.cpp"
+				>
+			</File>
+			<File
 				RelativePath="..\..\src\msw\accel.cpp"
 				>
 				<FileConfiguration
@@ -1337,11 +1337,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -1361,11 +1369,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\ole\access.cpp"
@@ -1373,19 +1389,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\ole\activex.cpp"
@@ -1401,19 +1433,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\ole\automtn.cpp"
@@ -1445,11 +1493,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -1469,11 +1525,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\brush.cpp"
@@ -1501,11 +1565,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -1525,11 +1597,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\caret.cpp"
@@ -1557,11 +1637,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -1581,11 +1669,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\checklst.cpp"
@@ -1609,11 +1705,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -1633,11 +1737,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\choice.cpp"
@@ -1661,11 +1773,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -1685,11 +1805,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\clipbrd.cpp"
@@ -1701,19 +1829,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\colour.cpp"
@@ -1725,19 +1869,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\combobox.cpp"
@@ -1761,11 +1921,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -1785,11 +1953,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\control.cpp"
@@ -1813,11 +1989,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -1837,11 +2021,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\cursor.cpp"
@@ -1897,11 +2089,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -1921,11 +2121,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\dialup.cpp"
@@ -1941,19 +2149,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\display.cpp"
@@ -1965,19 +2189,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\ole\dropsrc.cpp"
@@ -2017,11 +2257,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -2041,11 +2289,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\filedlg.cpp"
@@ -2053,19 +2309,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\font.cpp"
@@ -2077,19 +2349,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\fontenum.cpp"
@@ -2105,19 +2393,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\gauge.cpp"
@@ -2141,11 +2445,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -2165,11 +2477,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\gdiimage.cpp"
@@ -2193,19 +2513,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\helpchm.cpp"
@@ -2229,19 +2565,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\listbox.cpp"
@@ -2265,11 +2617,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -2289,11 +2649,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\listctrl.cpp"
@@ -2317,11 +2685,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -2341,11 +2717,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\main.cpp"
@@ -2357,19 +2741,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\menu.cpp"
@@ -2393,11 +2793,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -2417,11 +2825,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\menuitem.cpp"
@@ -2429,19 +2845,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\metafile.cpp"
@@ -2449,19 +2881,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\minifram.cpp"
@@ -2473,19 +2921,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\mslu.cpp"
@@ -2497,19 +2961,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\nativewin.cpp"
@@ -2517,19 +2997,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\notebook.cpp"
@@ -2553,11 +3049,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -2577,11 +3081,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\ole\oleutils.cpp"
@@ -2593,19 +3105,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\palette.cpp"
@@ -2617,19 +3145,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\pen.cpp"
@@ -2653,19 +3197,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\radiobox.cpp"
@@ -2689,11 +3249,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -2713,11 +3281,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\radiobut.cpp"
@@ -2741,11 +3317,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -2765,11 +3349,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\region.cpp"
@@ -2785,19 +3377,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\scrolbar.cpp"
@@ -2821,11 +3429,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -2845,11 +3461,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\settings.cpp"
@@ -2877,11 +3501,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -2901,11 +3533,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\spinbutt.cpp"
@@ -2929,11 +3569,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -2953,11 +3601,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\spinctrl.cpp"
@@ -2965,19 +3621,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\statbmp.cpp"
@@ -3001,11 +3673,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -3025,11 +3705,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\statbox.cpp"
@@ -3053,11 +3741,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -3077,11 +3773,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\statline.cpp"
@@ -3105,11 +3809,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -3129,11 +3841,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\stattext.cpp"
@@ -3157,11 +3877,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -3181,11 +3909,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\statusbar.cpp"
@@ -3193,19 +3929,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\textctrl.cpp"
@@ -3229,11 +3981,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -3253,11 +4013,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\textentry.cpp"
@@ -3265,19 +4033,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\tglbtn.cpp"
@@ -3301,11 +4085,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -3325,11 +4117,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\toolbar.cpp"
@@ -3353,11 +4153,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -3377,11 +4185,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\tooltip.cpp"
@@ -3397,19 +4213,35 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\uiaction.cpp"
@@ -3433,19 +4265,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCResourceCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCResourceCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCResourceCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCResourceCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\msw\volume.cpp"
@@ -3466,11 +4314,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -3490,11 +4346,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -3542,19 +4406,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\generic\combog.cpp"
@@ -3574,19 +4454,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\generic\dragimgg.cpp"
@@ -3598,11 +4494,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -3622,11 +4526,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -3654,19 +4566,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\generic\filepickerg.cpp"
@@ -3678,19 +4606,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\generic\fontpickerg.cpp"
@@ -3718,11 +4662,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -3742,11 +4694,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -3778,19 +4738,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\generic\msgdlgg.cpp"
@@ -3874,11 +4850,19 @@
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					>
@@ -3898,11 +4882,19 @@
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\generic\textdlgg.cpp"
@@ -3943,11 +4935,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -3967,11 +4967,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -3995,11 +5003,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4019,11 +5035,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4047,11 +5071,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4071,11 +5103,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4099,11 +5139,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4123,11 +5171,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4151,11 +5207,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4175,11 +5239,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4203,11 +5275,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4227,11 +5307,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4255,11 +5343,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4279,11 +5375,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4307,19 +5411,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\univ\dialog.cpp"
@@ -4327,11 +5447,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4351,11 +5479,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4379,19 +5515,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\univ\gauge.cpp"
@@ -4399,11 +5551,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4423,11 +5583,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4451,19 +5619,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\univ\inpcons.cpp"
@@ -4471,19 +5655,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\univ\inphand.cpp"
@@ -4491,19 +5691,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\univ\listbox.cpp"
@@ -4511,11 +5727,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4535,11 +5759,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4563,11 +5795,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4587,11 +5827,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4615,19 +5863,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\univ\themes\mono.cpp"
@@ -4635,19 +5899,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\univ\notebook.cpp"
@@ -4655,11 +5935,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4679,11 +5967,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4707,11 +6003,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4731,11 +6035,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4759,11 +6071,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4783,11 +6103,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4811,19 +6139,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\univ\scrolbar.cpp"
@@ -4831,11 +6175,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4855,11 +6207,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4883,19 +6243,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\univ\settingsuniv.cpp"
@@ -4903,19 +6279,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\univ\slider.cpp"
@@ -4923,11 +6315,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4947,11 +6347,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -4975,11 +6383,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -4999,11 +6415,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -5027,11 +6451,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -5051,11 +6483,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -5079,11 +6519,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -5103,11 +6551,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -5131,11 +6587,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -5155,11 +6619,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -5183,11 +6655,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -5207,11 +6687,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -5235,11 +6723,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -5259,11 +6755,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -5287,19 +6791,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\univ\textctrl.cpp"
@@ -5307,11 +6827,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -5331,11 +6859,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -5359,11 +6895,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -5383,11 +6927,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -5411,19 +6963,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\univ\toolbar.cpp"
@@ -5431,11 +6999,19 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Universal Debug|Win32"
 					>
@@ -5455,11 +7031,19 @@
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Universal Debug|Win32"
 					>
@@ -5483,19 +7067,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\univ\themes\win32.cpp"
@@ -5503,19 +7103,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 			<File
 				RelativePath="..\..\src\univ\winuniv.cpp"
@@ -5523,19 +7139,35 @@
 				<FileConfiguration
 					Name="Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Release|Win32"
 					ExcludedFromBuild="true"
-				/>
+					>
+					<Tool
+						Name="VCCLCompilerTool"
+					/>
+				</FileConfiguration>
 			</File>
 		</Filter>
 		<Filter
@@ -5543,114 +7175,90 @@
 			UniqueIdentifier="{63537534-1833-5C1F-8DBD-359A84F294C8}"
 			>
 			<File
-				RelativePath="..\..\include\wx\msw\setup.h"
+				RelativePath="..\..\include\wx\univ\setup.h"
 				>
 				<FileConfiguration
-					Name="Debug|Win32"
+					Name="Universal Debug|Win32"
 					>
 					<Tool
 						Name="VCCustomBuildTool"
-						Description="Creating ..\..\lib\vc_lib\mswud\wx\setup.h"
-						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_lib\mswud\wx\setup.h"
-						Outputs="..\..\lib\vc_lib\mswud\wx\setup.h"
+						Description="Creating ..\..\lib\vc_lib\mswunivud\wx\setup.h"
+						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_lib\mswunivud\wx\setup.h&#x0D;&#x0A;"
+						Outputs="..\..\lib\vc_lib\mswunivud\wx\setup.h"
 					/>
 				</FileConfiguration>
 				<FileConfiguration
-					Name="Release|Win32"
+					Name="Universal Release|Win32"
 					>
 					<Tool
 						Name="VCCustomBuildTool"
-						Description="Creating ..\..\lib\vc_lib\mswu\wx\setup.h"
-						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_lib\mswu\wx\setup.h"
-						Outputs="..\..\lib\vc_lib\mswu\wx\setup.h"
+						Description="Creating ..\..\lib\vc_lib\mswunivu\wx\setup.h"
+						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_lib\mswunivu\wx\setup.h&#x0D;&#x0A;"
+						Outputs="..\..\lib\vc_lib\mswunivu\wx\setup.h"
 					/>
 				</FileConfiguration>
 				<FileConfiguration
-					Name="Universal Debug|Win32"
-				/>
-				<FileConfiguration
-					Name="Universal Release|Win32"
-				/>
-				<FileConfiguration
-					Name="DLL Debug|Win32"
+					Name="DLL Universal Debug|Win32"
 					>
 					<Tool
 						Name="VCCustomBuildTool"
-						Description="Creating ..\..\lib\vc_dll\mswud\wx\setup.h"
-						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_dll\mswud\wx\setup.h"
-						Outputs="..\..\lib\vc_dll\mswud\wx\setup.h"
+						Description="Creating ..\..\lib\vc_dll\mswunivud\wx\setup.h"
+						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_dll\mswunivud\wx\setup.h&#x0D;&#x0A;"
+						Outputs="..\..\lib\vc_dll\mswunivud\wx\setup.h"
 					/>
 				</FileConfiguration>
 				<FileConfiguration
-					Name="DLL Release|Win32"
+					Name="DLL Universal Release|Win32"
 					>
 					<Tool
 						Name="VCCustomBuildTool"
-						Description="Creating ..\..\lib\vc_dll\mswu\wx\setup.h"
-						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_dll\mswu\wx\setup.h"
-						Outputs="..\..\lib\vc_dll\mswu\wx\setup.h"
+						Description="Creating ..\..\lib\vc_dll\mswunivu\wx\setup.h"
+						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_dll\mswunivu\wx\setup.h&#x0D;&#x0A;"
+						Outputs="..\..\lib\vc_dll\mswunivu\wx\setup.h"
 					/>
 				</FileConfiguration>
-				<FileConfiguration
-					Name="DLL Universal Debug|Win32"
-				/>
-				<FileConfiguration
-					Name="DLL Universal Release|Win32"
-				/>
 			</File>
 			<File
-				RelativePath="..\..\include\wx\univ\setup.h"
+				RelativePath="..\..\include\wx\msw\setup.h"
 				>
 				<FileConfiguration
 					Name="Debug|Win32"
-				/>
-				<FileConfiguration
-					Name="Release|Win32"
-				/>
-				<FileConfiguration
-					Name="Universal Debug|Win32"
 					>
 					<Tool
 						Name="VCCustomBuildTool"
-						Description="Creating ..\..\lib\vc_lib\mswunivud\wx\setup.h"
-						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_lib\mswunivud\wx\setup.h"
-						Outputs="..\..\lib\vc_lib\mswunivud\wx\setup.h"
+						Description="Creating ..\..\lib\vc_lib\mswud\wx\setup.h"
+						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_lib\mswud\wx\setup.h&#x0D;&#x0A;"
+						Outputs="..\..\lib\vc_lib\mswud\wx\setup.h"
 					/>
 				</FileConfiguration>
 				<FileConfiguration
-					Name="Universal Release|Win32"
+					Name="Release|Win32"
 					>
 					<Tool
 						Name="VCCustomBuildTool"
-						Description="Creating ..\..\lib\vc_lib\mswunivu\wx\setup.h"
-						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_lib\mswunivu\wx\setup.h"
-						Outputs="..\..\lib\vc_lib\mswunivu\wx\setup.h"
+						Description="Creating ..\..\lib\vc_lib\mswu\wx\setup.h"
+						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_lib\mswu\wx\setup.h&#x0D;&#x0A;"
+						Outputs="..\..\lib\vc_lib\mswu\wx\setup.h"
 					/>
 				</FileConfiguration>
 				<FileConfiguration
 					Name="DLL Debug|Win32"
-				/>
-				<FileConfiguration
-					Name="DLL Release|Win32"
-				/>
-				<FileConfiguration
-					Name="DLL Universal Debug|Win32"
 					>
 					<Tool
 						Name="VCCustomBuildTool"
-						Description="Creating ..\..\lib\vc_dll\mswunivud\wx\setup.h"
-						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_dll\mswunivud\wx\setup.h"
-						Outputs="..\..\lib\vc_dll\mswunivud\wx\setup.h"
+						Description="Creating ..\..\lib\vc_dll\mswud\wx\setup.h"
+						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_dll\mswud\wx\setup.h&#x0D;&#x0A;"
+						Outputs="..\..\lib\vc_dll\mswud\wx\setup.h"
 					/>
 				</FileConfiguration>
 				<FileConfiguration
-					Name="DLL Universal Release|Win32"
+					Name="DLL Release|Win32"
 					>
 					<Tool
 						Name="VCCustomBuildTool"
-						Description="Creating ..\..\lib\vc_dll\mswunivu\wx\setup.h"
-						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_dll\mswunivu\wx\setup.h"
-						Outputs="..\..\lib\vc_dll\mswunivu\wx\setup.h"
+						Description="Creating ..\..\lib\vc_dll\mswu\wx\setup.h"
+						CommandLine="copy &quot;$(InputPath)&quot; ..\..\lib\vc_dll\mswu\wx\setup.h&#x0D;&#x0A;"
+						Outputs="..\..\lib\vc_dll\mswu\wx\setup.h"
 					/>
 				</FileConfiguration>
 			</File>
@@ -5660,6 +7268,10 @@
 			UniqueIdentifier="{5AFFF20E-29F9-512B-B80A-7DC45976CDAC}"
 			>
 			<File
+				RelativePath="..\..\include\wx\msw\abstractbtn.h"
+				>
+			</File>
+			<File
 				RelativePath="..\..\include\wx\msw\accel.h"
 				>
 			</File>
@@ -5860,9 +7472,9 @@
 					<Tool
 						Name="VCCustomBuildTool"
 						Description="Creating ..\..\lib\vc_lib\mswud\wx\msw\rcdefs.h"
-						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_lib\mswud\wx\msw\rcdefs.h&quot;"
+						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_lib\mswud\wx\msw\rcdefs.h&quot;&#x0D;&#x0A;"
+						AdditionalDependencies="&quot;..\..\lib\vc_lib\mswud\wx\msw&quot;"
 						Outputs="..\..\lib\vc_lib\mswud\wx\msw\rcdefs.h"
-						AdditionalDependencies="&quot;..\..\lib\vc_lib\mswud\wx\msw&quot;"
 					/>
 				</FileConfiguration>
 				<FileConfiguration
@@ -5871,9 +7483,9 @@
 					<Tool
 						Name="VCCustomBuildTool"
 						Description="Creating ..\..\lib\vc_lib\mswu\wx\msw\rcdefs.h"
-						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_lib\mswu\wx\msw\rcdefs.h&quot;"
+						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_lib\mswu\wx\msw\rcdefs.h&quot;&#x0D;&#x0A;"
+						AdditionalDependencies="&quot;..\..\lib\vc_lib\mswu\wx\msw&quot;"
 						Outputs="..\..\lib\vc_lib\mswu\wx\msw\rcdefs.h"
-						AdditionalDependencies="&quot;..\..\lib\vc_lib\mswu\wx\msw&quot;"
 					/>
 				</FileConfiguration>
 				<FileConfiguration
@@ -5882,9 +7494,9 @@
 					<Tool
 						Name="VCCustomBuildTool"
 						Description="Creating ..\..\lib\vc_lib\mswunivud\wx\msw\rcdefs.h"
-						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_lib\mswunivud\wx\msw\rcdefs.h&quot;"
+						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_lib\mswunivud\wx\msw\rcdefs.h&quot;&#x0D;&#x0A;"
+						AdditionalDependencies="&quot;..\..\lib\vc_lib\mswunivud\wx\msw&quot;"
 						Outputs="..\..\lib\vc_lib\mswunivud\wx\msw\rcdefs.h"
-						AdditionalDependencies="&quot;..\..\lib\vc_lib\mswunivud\wx\msw&quot;"
 					/>
 				</FileConfiguration>
 				<FileConfiguration
@@ -5893,9 +7505,9 @@
 					<Tool
 						Name="VCCustomBuildTool"
 						Description="Creating ..\..\lib\vc_lib\mswunivu\wx\msw\rcdefs.h"
-						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_lib\mswunivu\wx\msw\rcdefs.h&quot;"
+						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_lib\mswunivu\wx\msw\rcdefs.h&quot;&#x0D;&#x0A;"
+						AdditionalDependencies="&quot;..\..\lib\vc_lib\mswunivu\wx\msw&quot;"
 						Outputs="..\..\lib\vc_lib\mswunivu\wx\msw\rcdefs.h"
-						AdditionalDependencies="&quot;..\..\lib\vc_lib\mswunivu\wx\msw&quot;"
 					/>
 				</FileConfiguration>
 				<FileConfiguration
@@ -5904,9 +7516,9 @@
 					<Tool
 						Name="VCCustomBuildTool"
 						Description="Creating ..\..\lib\vc_dll\mswud\wx\msw\rcdefs.h"
-						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_dll\mswud\wx\msw\rcdefs.h&quot;"
+						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_dll\mswud\wx\msw\rcdefs.h&quot;&#x0D;&#x0A;"
+						AdditionalDependencies="&quot;..\..\lib\vc_dll\mswud\wx\msw&quot;"
 						Outputs="..\..\lib\vc_dll\mswud\wx\msw\rcdefs.h"
-						AdditionalDependencies="&quot;..\..\lib\vc_dll\mswud\wx\msw&quot;"
 					/>
 				</FileConfiguration>
 				<FileConfiguration
@@ -5915,9 +7527,9 @@
 					<Tool
 						Name="VCCustomBuildTool"
 						Description="Creating ..\..\lib\vc_dll\mswu\wx\msw\rcdefs.h"
-						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_dll\mswu\wx\msw\rcdefs.h&quot;"
+						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_dll\mswu\wx\msw\rcdefs.h&quot;&#x0D;&#x0A;"
+						AdditionalDependencies="&quot;..\..\lib\vc_dll\mswu\wx\msw&quot;"
 						Outputs="..\..\lib\vc_dll\mswu\wx\msw\rcdefs.h"
-						AdditionalDependencies="&quot;..\..\lib\vc_dll\mswu\wx\msw&quot;"
 					/>
 				</FileConfiguration>
 				<FileConfiguration
@@ -5926,9 +7538,9 @@
 					<Tool
 						Name="VCCustomBuildTool"
 						Description="Creating ..\..\lib\vc_dll\mswunivud\wx\msw\rcdefs.h"
-						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_dll\mswunivud\wx\msw\rcdefs.h&quot;"
+						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_dll\mswunivud\wx\msw\rcdefs.h&quot;&#x0D;&#x0A;"
+						AdditionalDependencies="&quot;..\..\lib\vc_dll\mswunivud\wx\msw&quot;"
 						Outputs="..\..\lib\vc_dll\mswunivud\wx\msw\rcdefs.h"
-						AdditionalDependencies="&quot;..\..\lib\vc_dll\mswunivud\wx\msw&quot;"
 					/>
 				</FileConfiguration>
 				<FileConfiguration
@@ -5937,9 +7549,9 @@
 					<Tool
 						Name="VCCustomBuildTool"
 						Description="Creating ..\..\lib\vc_dll\mswunivu\wx\msw\rcdefs.h"
-						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_dll\mswunivu\wx\msw\rcdefs.h&quot;"
+						CommandLine="cl /EP /nologo &quot;$(InputPath)&quot; &gt; &quot;..\..\lib\vc_dll\mswunivu\wx\msw\rcdefs.h&quot;&#x0D;&#x0A;"
+						AdditionalDependencies="&quot;..\..\lib\vc_dll\mswunivu\wx\msw&quot;"
 						Outputs="..\..\lib\vc_dll\mswunivu\wx\msw\rcdefs.h"
-						AdditionalDependencies="&quot;..\..\lib\vc_dll\mswunivu\wx\msw&quot;"
 					/>
 				</FileConfiguration>
 			</File>
@@ -6680,6 +8292,10 @@
 				>
 			</File>
 			<File
+				RelativePath="..\..\include\wx\abstractbtn.h"
+				>
+			</File>
+			<File
 				RelativePath="..\..\include\wx\accel.h"
 				>
 			</File>
@@ -6848,11 +8464,11 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\include\wx\control.h"
+				RelativePath="..\..\include\wx\ribbon\control.h"
 				>
 			</File>
 			<File
-				RelativePath="..\..\include\wx\ribbon\control.h"
+				RelativePath="..\..\include\wx\control.h"
 				>
 			</File>
 			<File
@@ -7296,11 +8912,11 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\include\wx\panel.h"
+				RelativePath="..\..\include\wx\ribbon\panel.h"
 				>
 			</File>
 			<File
-				RelativePath="..\..\include\wx\ribbon\panel.h"
+				RelativePath="..\..\include\wx\panel.h"
 				>
 			</File>
 			<File
@@ -7568,11 +9184,11 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\include\wx\ribbon\toolbar.h"
+				RelativePath="..\..\include\wx\toolbar.h"
 				>
 			</File>
 			<File
-				RelativePath="..\..\include\wx\toolbar.h"
+				RelativePath="..\..\include\wx\ribbon\toolbar.h"
 				>
 			</File>
 			<File
@@ -7584,11 +9200,11 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\include\wx\persist\toplevel.h"
+				RelativePath="..\..\include\wx\toplevel.h"
 				>
 			</File>
 			<File
-				RelativePath="..\..\include\wx\toplevel.h"
+				RelativePath="..\..\include\wx\persist\toplevel.h"
 				>
 			</File>
 			<File
@@ -7644,11 +9260,11 @@
 				>
 			</File>
 			<File
-				RelativePath="..\..\include\wx\persist\window.h"
+				RelativePath="..\..\include\wx\window.h"
 				>
 			</File>
 			<File
-				RelativePath="..\..\include\wx\window.h"
+				RelativePath="..\..\include\wx\persist\window.h"
 				>
 			</File>
 			<File
@@ -7930,7 +9546,5 @@
 		</Filter>
 	</Files>
 	<Globals>
-		
 	</Globals>
 </VisualStudioProject>
-
Index: include/wx/abstractbtn.h
===================================================================
--- include/wx/abstractbtn.h	(revision 0)
+++ include/wx/abstractbtn.h	(revision 0)
@@ -0,0 +1,218 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        wx/abstractbtn.h
+// Purpose:     Abstract base class for all buttons
+// Author:      Hans de Ruiter, based largely on original wxButton by 
+//              Vadim Zetlin
+// Modified by:
+// Created:     08.04.2011
+// RCS-ID:      $Id:$
+// Copyright:   (c) Hans de Ruiter, Vadim Zetlin
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+#ifndef _WX_ABSTRACTBUTTON_H_BASE_
+#define _WX_ABSTRACTBUTTON_H_BASE_
+
+#include "wx/defs.h"
+
+#if wxUSE_TOGGLEBTN || wxUSE_BUTTON
+
+// ----------------------------------------------------------------------------
+// Flags common to all button classes
+// ----------------------------------------------------------------------------
+
+// These flags affect label alignment
+#define wxBU_LEFT            0x0040
+#define wxBU_TOP             0x0080
+#define wxBU_RIGHT           0x0100
+#define wxBU_BOTTOM          0x0200
+#define wxBU_ALIGN_MASK      ( wxBU_LEFT | wxBU_TOP | wxBU_RIGHT | wxBU_BOTTOM )
+
+// These two flags are obsolete
+#define wxBU_NOAUTODRAW      0x0000
+#define wxBU_AUTODRAW        0x0004
+
+// by default, the buttons will be created with some (system dependent)
+// minimal size to make them look nicer, giving this style will make them as
+// small as possible
+#define wxBU_EXACTFIT        0x0001
+
+// this flag can be used to disable using the text label in the button: it is
+// mostly useful when creating buttons showing bitmap and having stock id as
+// without it both the standard label corresponding to the stock id and the
+// bitmap would be shown
+#define wxBU_NOTEXT          0x0002
+
+
+#include "wx/bitmap.h"
+#include "wx/control.h"
+
+extern WXDLLIMPEXP_DATA_CORE(const char) wxButtonNameStr[];
+
+// ----------------------------------------------------------------------------
+// wxAbstractButton: Base class for all button types
+// ----------------------------------------------------------------------------
+
+class WXDLLIMPEXP_CORE wxAbstractButtonBase : public wxControl
+{
+public:
+    wxAbstractButtonBase() { }
+
+    // show the authentication needed symbol on the button: this is currently
+    // only implemented on Windows Vista and newer (on which it shows the UAC
+    // shield symbol)
+    void SetAuthNeeded(bool show = true) { DoSetAuthNeeded(show); }
+    bool GetAuthNeeded() const { return DoGetAuthNeeded(); }
+
+    // show the image in the button in addition to the label: this method is
+    // supported on all (major) platforms
+    void SetBitmap(const wxBitmap& bitmap, wxDirection dir = wxLEFT)
+    {
+        SetBitmapLabel(bitmap);
+        SetBitmapPosition(dir);
+    }
+
+    wxBitmap GetBitmap() const { return DoGetBitmap(State_Normal); }
+
+    // Methods for setting individual images for different states: normal,
+    // selected (meaning pushed or pressed), focused (meaning normal state for
+    // a focused button), disabled or hover (a.k.a. hot or current).
+    //
+    // Remember that SetBitmap() itself must be called before any other
+    // SetBitmapXXX() methods (except for SetBitmapLabel() which is a synonym
+    // for it anyhow) and that all bitmaps passed to these functions should be
+    // of the same size.
+    void SetBitmapLabel(const wxBitmap& bitmap)
+        { DoSetBitmap(bitmap, State_Normal); }
+    void SetBitmapPressed(const wxBitmap& bitmap)
+        { DoSetBitmap(bitmap, State_Pressed); }
+    void SetBitmapDisabled(const wxBitmap& bitmap)
+        { DoSetBitmap(bitmap, State_Disabled); }
+    void SetBitmapCurrent(const wxBitmap& bitmap)
+        { DoSetBitmap(bitmap, State_Current); }
+    void SetBitmapFocus(const wxBitmap& bitmap)
+        { DoSetBitmap(bitmap, State_Focused); }
+
+    wxBitmap GetBitmapLabel() const { return DoGetBitmap(State_Normal); }
+    wxBitmap GetBitmapPressed() const { return DoGetBitmap(State_Pressed); }
+    wxBitmap GetBitmapDisabled() const { return DoGetBitmap(State_Disabled); }
+    wxBitmap GetBitmapCurrent() const { return DoGetBitmap(State_Current); }
+    wxBitmap GetBitmapFocus() const { return DoGetBitmap(State_Focused); }
+
+
+    // set the margins around the image
+    void SetBitmapMargins(wxCoord x, wxCoord y) { DoSetBitmapMargins(x, y); }
+    void SetBitmapMargins(const wxSize& sz) { DoSetBitmapMargins(sz.x, sz.y); }
+    wxSize GetBitmapMargins() { return DoGetBitmapMargins(); }
+
+    // set the image position relative to the text, i.e. wxLEFT means that the
+    // image is to the left of the text (this is the default)
+    void SetBitmapPosition(wxDirection dir);
+
+
+    // make this button the default button in its top level window
+    //
+    // returns the old default item (possibly NULL)
+    virtual wxWindow *SetDefault();
+
+    // Buttons on MSW can look bad if they are not native colours, because
+    // then they become owner-drawn and not theme-drawn.  Disable it here
+    // in wxButtonBase to make it consistent.
+    virtual bool ShouldInheritColours() const { return false; }
+
+    // returns the default button size for this platform
+    static wxSize GetDefaultSize();
+
+    // wxUniv-compatible and deprecated equivalents to SetBitmapXXX()
+#if WXWIN_COMPATIBILITY_2_8
+    void SetImageLabel(const wxBitmap& bitmap) { SetBitmap(bitmap); }
+    void SetImageMargins(wxCoord x, wxCoord y) { SetBitmapMargins(x, y); }
+#endif // WXWIN_COMPATIBILITY_2_8
+
+    // backwards compatible names for pressed/current bitmaps: they're not
+    // deprecated as there is nothing really wrong with using them and no real
+    // advantage to using the new names but the new names are still preferred
+    wxBitmap GetBitmapSelected() const { return GetBitmapPressed(); }
+    wxBitmap GetBitmapHover() const { return GetBitmapCurrent(); }
+
+    void SetBitmapSelected(const wxBitmap& bitmap) { SetBitmapPressed(bitmap); }
+    void SetBitmapHover(const wxBitmap& bitmap) { SetBitmapCurrent(bitmap); }
+
+
+    // this enum is not part of wx public API, it is public because it is used
+    // in non wxButton-derived classes internally
+    //
+    // also notice that MSW code relies on the values of the enum elements, do
+    // not change them without revising src/msw/button.cpp
+    enum State
+    {
+        State_Normal,
+        State_Current,    // a.k.a. hot or "hovering"
+        State_Pressed,    // a.k.a. "selected" in public API for some reason
+        State_Disabled,
+        State_Focused,
+        State_Max
+    };
+
+    // return true if this button shouldn't show the text label, either because
+    // it doesn't have it or because it was explicitly disabled with wxBU_NOTEXT
+    bool DontShowLabel() const
+    {
+        return HasFlag(wxBU_NOTEXT) || GetLabel().empty();
+    }
+
+    // return true if we do show the label
+    bool ShowsLabel() const
+    {
+        return !DontShowLabel();
+    }
+
+protected:
+    // choose the default border for this window
+    virtual wxBorder GetDefaultBorder() const { return wxBORDER_NONE; }
+
+    virtual bool DoGetAuthNeeded() const { return false; }
+    virtual void DoSetAuthNeeded(bool WXUNUSED(show)) { }
+
+    virtual wxBitmap DoGetBitmap(State WXUNUSED(which)) const
+        { return wxBitmap(); }
+    virtual void DoSetBitmap(const wxBitmap& WXUNUSED(bitmap),
+                             State WXUNUSED(which))
+        { }
+
+    virtual wxSize DoGetBitmapMargins() const
+        { return wxSize(0, 0); }
+
+    virtual void DoSetBitmapMargins(wxCoord WXUNUSED(x), wxCoord WXUNUSED(y))
+        { }
+
+    virtual void DoSetBitmapPosition(wxDirection WXUNUSED(dir))
+        { }
+
+
+    wxDECLARE_NO_COPY_CLASS(wxAbstractButtonBase);
+};
+
+#if defined(__WXUNIVERSAL__)
+    #include "wx/univ/abstractbtn.h"
+#elif defined(__WXMSW__)
+    #include "wx/msw/abstractbtn.h"
+#elif defined(__WXMOTIF__)
+    #include "wx/motif/abstractbtn.h"
+#elif defined(__WXGTK20__)
+    #include "wx/gtk/abstractbtn.h"
+#elif defined(__WXGTK__)
+    #include "wx/gtk1/abstractbtn.h"
+#elif defined(__WXMAC__)
+    #include "wx/osx/abstractbtn.h"
+#elif defined(__WXCOCOA__)
+    #include "wx/cocoa/abstractbtn.h"
+#elif defined(__WXPM__)
+    #include "wx/os2/abstractbtn.h"
+#elif defined(__WXPALMOS__)
+    #include "wx/palmos/abstractbtn.h"
+#endif
+
+#endif // wxUSE_BUTTON
+
+#endif
+    // _WX_BUTTON_H_BASE_
Index: include/wx/button.h
===================================================================
--- include/wx/button.h	(revision 67411)
+++ include/wx/button.h	(working copy)
@@ -12,190 +12,19 @@
 #ifndef _WX_BUTTON_H_BASE_
 #define _WX_BUTTON_H_BASE_
 
-#include "wx/defs.h"
+#include "wx/abstractbtn.h"
 
-// ----------------------------------------------------------------------------
-// wxButton flags shared with other classes
-// ----------------------------------------------------------------------------
-
-#if wxUSE_TOGGLEBTN || wxUSE_BUTTON
-
-// These flags affect label alignment
-#define wxBU_LEFT            0x0040
-#define wxBU_TOP             0x0080
-#define wxBU_RIGHT           0x0100
-#define wxBU_BOTTOM          0x0200
-#define wxBU_ALIGN_MASK      ( wxBU_LEFT | wxBU_TOP | wxBU_RIGHT | wxBU_BOTTOM )
-#endif
-
 #if wxUSE_BUTTON
 
 // ----------------------------------------------------------------------------
-// wxButton specific flags
-// ----------------------------------------------------------------------------
-
-// These two flags are obsolete
-#define wxBU_NOAUTODRAW      0x0000
-#define wxBU_AUTODRAW        0x0004
-
-// by default, the buttons will be created with some (system dependent)
-// minimal size to make them look nicer, giving this style will make them as
-// small as possible
-#define wxBU_EXACTFIT        0x0001
-
-// this flag can be used to disable using the text label in the button: it is
-// mostly useful when creating buttons showing bitmap and having stock id as
-// without it both the standard label corresponding to the stock id and the
-// bitmap would be shown
-#define wxBU_NOTEXT          0x0002
-
-
-#include "wx/bitmap.h"
-#include "wx/control.h"
-
-extern WXDLLIMPEXP_DATA_CORE(const char) wxButtonNameStr[];
-
-// ----------------------------------------------------------------------------
 // wxButton: a push button
 // ----------------------------------------------------------------------------
 
-class WXDLLIMPEXP_CORE wxButtonBase : public wxControl
+class WXDLLIMPEXP_CORE wxButtonBase : public wxAbstractButton
 {
 public:
     wxButtonBase() { }
 
-    // show the authentication needed symbol on the button: this is currently
-    // only implemented on Windows Vista and newer (on which it shows the UAC
-    // shield symbol)
-    void SetAuthNeeded(bool show = true) { DoSetAuthNeeded(show); }
-    bool GetAuthNeeded() const { return DoGetAuthNeeded(); }
-
-    // show the image in the button in addition to the label: this method is
-    // supported on all (major) platforms
-    void SetBitmap(const wxBitmap& bitmap, wxDirection dir = wxLEFT)
-    {
-        SetBitmapLabel(bitmap);
-        SetBitmapPosition(dir);
-    }
-
-    wxBitmap GetBitmap() const { return DoGetBitmap(State_Normal); }
-
-    // Methods for setting individual images for different states: normal,
-    // selected (meaning pushed or pressed), focused (meaning normal state for
-    // a focused button), disabled or hover (a.k.a. hot or current).
-    //
-    // Remember that SetBitmap() itself must be called before any other
-    // SetBitmapXXX() methods (except for SetBitmapLabel() which is a synonym
-    // for it anyhow) and that all bitmaps passed to these functions should be
-    // of the same size.
-    void SetBitmapLabel(const wxBitmap& bitmap)
-        { DoSetBitmap(bitmap, State_Normal); }
-    void SetBitmapPressed(const wxBitmap& bitmap)
-        { DoSetBitmap(bitmap, State_Pressed); }
-    void SetBitmapDisabled(const wxBitmap& bitmap)
-        { DoSetBitmap(bitmap, State_Disabled); }
-    void SetBitmapCurrent(const wxBitmap& bitmap)
-        { DoSetBitmap(bitmap, State_Current); }
-    void SetBitmapFocus(const wxBitmap& bitmap)
-        { DoSetBitmap(bitmap, State_Focused); }
-
-    wxBitmap GetBitmapLabel() const { return DoGetBitmap(State_Normal); }
-    wxBitmap GetBitmapPressed() const { return DoGetBitmap(State_Pressed); }
-    wxBitmap GetBitmapDisabled() const { return DoGetBitmap(State_Disabled); }
-    wxBitmap GetBitmapCurrent() const { return DoGetBitmap(State_Current); }
-    wxBitmap GetBitmapFocus() const { return DoGetBitmap(State_Focused); }
-
-
-    // set the margins around the image
-    void SetBitmapMargins(wxCoord x, wxCoord y) { DoSetBitmapMargins(x, y); }
-    void SetBitmapMargins(const wxSize& sz) { DoSetBitmapMargins(sz.x, sz.y); }
-    wxSize GetBitmapMargins() { return DoGetBitmapMargins(); }
-
-    // set the image position relative to the text, i.e. wxLEFT means that the
-    // image is to the left of the text (this is the default)
-    void SetBitmapPosition(wxDirection dir);
-
-
-    // make this button the default button in its top level window
-    //
-    // returns the old default item (possibly NULL)
-    virtual wxWindow *SetDefault();
-
-    // Buttons on MSW can look bad if they are not native colours, because
-    // then they become owner-drawn and not theme-drawn.  Disable it here
-    // in wxButtonBase to make it consistent.
-    virtual bool ShouldInheritColours() const { return false; }
-
-    // returns the default button size for this platform
-    static wxSize GetDefaultSize();
-
-    // wxUniv-compatible and deprecated equivalents to SetBitmapXXX()
-#if WXWIN_COMPATIBILITY_2_8
-    void SetImageLabel(const wxBitmap& bitmap) { SetBitmap(bitmap); }
-    void SetImageMargins(wxCoord x, wxCoord y) { SetBitmapMargins(x, y); }
-#endif // WXWIN_COMPATIBILITY_2_8
-
-    // backwards compatible names for pressed/current bitmaps: they're not
-    // deprecated as there is nothing really wrong with using them and no real
-    // advantage to using the new names but the new names are still preferred
-    wxBitmap GetBitmapSelected() const { return GetBitmapPressed(); }
-    wxBitmap GetBitmapHover() const { return GetBitmapCurrent(); }
-
-    void SetBitmapSelected(const wxBitmap& bitmap) { SetBitmapPressed(bitmap); }
-    void SetBitmapHover(const wxBitmap& bitmap) { SetBitmapCurrent(bitmap); }
-
-
-    // this enum is not part of wx public API, it is public because it is used
-    // in non wxButton-derived classes internally
-    //
-    // also notice that MSW code relies on the values of the enum elements, do
-    // not change them without revising src/msw/button.cpp
-    enum State
-    {
-        State_Normal,
-        State_Current,    // a.k.a. hot or "hovering"
-        State_Pressed,    // a.k.a. "selected" in public API for some reason
-        State_Disabled,
-        State_Focused,
-        State_Max
-    };
-
-    // return true if this button shouldn't show the text label, either because
-    // it doesn't have it or because it was explicitly disabled with wxBU_NOTEXT
-    bool DontShowLabel() const
-    {
-        return HasFlag(wxBU_NOTEXT) || GetLabel().empty();
-    }
-
-    // return true if we do show the label
-    bool ShowsLabel() const
-    {
-        return !DontShowLabel();
-    }
-
-protected:
-    // choose the default border for this window
-    virtual wxBorder GetDefaultBorder() const { return wxBORDER_NONE; }
-
-    virtual bool DoGetAuthNeeded() const { return false; }
-    virtual void DoSetAuthNeeded(bool WXUNUSED(show)) { }
-
-    virtual wxBitmap DoGetBitmap(State WXUNUSED(which)) const
-        { return wxBitmap(); }
-    virtual void DoSetBitmap(const wxBitmap& WXUNUSED(bitmap),
-                             State WXUNUSED(which))
-        { }
-
-    virtual wxSize DoGetBitmapMargins() const
-        { return wxSize(0, 0); }
-
-    virtual void DoSetBitmapMargins(wxCoord WXUNUSED(x), wxCoord WXUNUSED(y))
-        { }
-
-    virtual void DoSetBitmapPosition(wxDirection WXUNUSED(dir))
-        { }
-
-
     wxDECLARE_NO_COPY_CLASS(wxButtonBase);
 };
 
@@ -221,5 +50,4 @@
 
 #endif // wxUSE_BUTTON
 
-#endif
-    // _WX_BUTTON_H_BASE_
+#endif // _WX_BUTTON_H_BASE_
\ No newline at end of file
Index: include/wx/msw/abstractbtn.h
===================================================================
--- include/wx/msw/abstractbtn.h	(revision 0)
+++ include/wx/msw/abstractbtn.h	(revision 0)
@@ -0,0 +1,128 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        wx/msw/abstractbtn.h
+// Purpose:     Windows implementation of the abstract base class for all 
+//              buttons
+// Author:      Hans de Ruiter, based largely on original MSW wxButton code 
+//              by Julian Smart
+// Modified by:
+// Created:     08.04.2011
+// RCS-ID:      $Id:$
+// Copyright:   (c) Hans de Ruiter, Julian Smart
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_ABSTRACTBUTTON_H_
+#define _WX_ABSTRACTBUTTON_H_
+
+#include "wx/msw/wrapwin.h"
+
+#if wxUSE_TOGGLEBTN || wxUSE_BUTTON
+
+class WXDLLIMPEXP_CORE wxAbstractButton : public wxAbstractButtonBase
+{
+public:
+    wxAbstractButton() { Init(); }
+    wxAbstractButton(wxWindow *parent,
+             wxWindowID id,
+             const wxString& label = wxEmptyString,
+             const wxPoint& pos = wxDefaultPosition,
+             const wxSize& size = wxDefaultSize,
+             long style = 0,
+             const wxValidator& validator = wxDefaultValidator,
+             const wxString& name = wxButtonNameStr)
+    {
+        Init();
+
+        Create(parent, id, label, pos, size, style, validator, name);
+    }
+
+    bool Create(wxWindow *parent,
+                wxWindowID id,
+                const wxString& label = wxEmptyString,
+                const wxPoint& pos = wxDefaultPosition,
+                const wxSize& size = wxDefaultSize,
+                long style = 0,
+                const wxValidator& validator = wxDefaultValidator,
+                const wxString& name = wxButtonNameStr);
+
+    virtual ~wxAbstractButton();
+
+    // overridden base class methods
+    virtual void SetLabel(const wxString& label);
+    virtual bool SetBackgroundColour(const wxColour &colour);
+    virtual bool SetForegroundColour(const wxColour &colour);
+
+    // implementation from now on
+    virtual void Command(wxCommandEvent& event);
+    virtual WXLRESULT MSWWindowProc(WXUINT nMsg, WXWPARAM wParam, WXLPARAM lParam);
+    virtual bool MSWCommand(WXUINT param, WXWORD id);
+
+    virtual bool MSWOnDraw(WXDRAWITEMSTRUCT *item);
+
+	// Child classes must provide this.
+    virtual WXDWORD MSWGetStyle(long style, WXDWORD *exstyle) const = 0;
+
+    // returns true if the platform should explicitly apply a theme border
+    virtual bool CanApplyThemeBorder() const { return false; }
+
+protected:
+    // send a notification event, return true if processed
+    virtual bool SendClickEvent() = 0;
+
+	// Get the current button state
+	// 
+	// @param state the button state as provided by a DRAWITEMSTRUCT
+	virtual wxAbstractButtonBase::State GetButtonState(UINT state);
+
+    // usually overridden base class virtuals
+    virtual wxSize DoGetBestSize() const;
+
+    virtual bool DoGetAuthNeeded() const;
+    virtual void DoSetAuthNeeded(bool show);
+    virtual wxBitmap DoGetBitmap(State which) const;
+    virtual void DoSetBitmap(const wxBitmap& bitmap, State which);
+    virtual wxSize DoGetBitmapMargins() const;
+    virtual void DoSetBitmapMargins(wxCoord x, wxCoord y);
+    virtual void DoSetBitmapPosition(wxDirection dir);
+
+#if wxUSE_MARKUP
+    virtual bool DoSetLabelMarkup(const wxString& markup);
+#endif // wxUSE_MARKUP
+
+    // Increases the passed in size to account for the button image.
+    //
+    // Should only be called if we do have a button, i.e. if m_imageData is
+    // non-NULL.
+    void AdjustForBitmapSize(wxSize& size) const;
+
+    class wxButtonImageData *m_imageData;
+
+#if wxUSE_MARKUP
+    class wxMarkupText *m_markupText;
+#endif // wxUSE_MARKUP
+
+    // true if the UAC symbol is shown
+    bool m_authNeeded;
+
+private:
+    void Init()
+    {
+        m_imageData = NULL;
+#if wxUSE_MARKUP
+        m_markupText = NULL;
+#endif // wxUSE_MARKUP
+        m_authNeeded = false;
+    }
+
+    // Switches button into owner-drawn mode: this is used if we need to draw
+    // something not supported by the native control, such as using non default
+    // colours or a bitmap on pre-XP systems.
+    void MakeOwnerDrawn();
+
+    wxDECLARE_DYNAMIC_CLASS_NO_COPY(wxAbstractButton);
+};
+
+
+#endif // wxUSE_TOGGLEBTN || wxUSE_BUTTON
+
+#endif // _WX_ABSTRACTBUTTON_H_
\ No newline at end of file
Index: include/wx/msw/button.h
===================================================================
--- include/wx/msw/button.h	(revision 67411)
+++ include/wx/msw/button.h	(working copy)
@@ -45,80 +45,26 @@
 
     virtual ~wxButton();
 
-    virtual wxWindow *SetDefault();
+	virtual WXLRESULT MSWWindowProc(WXUINT nMsg, WXWPARAM wParam, WXLPARAM lParam);
 
-    // overridden base class methods
-    virtual void SetLabel(const wxString& label);
-    virtual bool SetBackgroundColour(const wxColour &colour);
-    virtual bool SetForegroundColour(const wxColour &colour);
+	virtual wxWindow *SetDefault();
 
-    // implementation from now on
-    virtual void Command(wxCommandEvent& event);
-    virtual WXLRESULT MSWWindowProc(WXUINT nMsg, WXWPARAM wParam, WXLPARAM lParam);
-    virtual bool MSWCommand(WXUINT param, WXWORD id);
-
-    virtual bool MSWOnDraw(WXDRAWITEMSTRUCT *item);
-    virtual WXDWORD MSWGetStyle(long style, WXDWORD *exstyle) const;
-
-    // returns true if the platform should explicitly apply a theme border
-    virtual bool CanApplyThemeBorder() const { return false; }
-
 protected:
-    // send a notification event, return true if processed
-    bool SendClickEvent();
+	virtual WXDWORD MSWGetStyle(long style, WXDWORD *exstyle) const;
 
-    // default button handling
+	// default button handling
     void SetTmpDefault();
     void UnsetTmpDefault();
 
     // set or unset BS_DEFPUSHBUTTON style
-    static void SetDefaultStyle(wxButton *btn, bool on);
+    static void SetDefaultStyle(wxAbstractButton *btn, bool on);
 
-    // usually overridden base class virtuals
-    virtual wxSize DoGetBestSize() const;
+    // send a notification event, return true if processed
+    bool SendClickEvent();
 
-    virtual bool DoGetAuthNeeded() const;
-    virtual void DoSetAuthNeeded(bool show);
-    virtual wxBitmap DoGetBitmap(State which) const;
-    virtual void DoSetBitmap(const wxBitmap& bitmap, State which);
-    virtual wxSize DoGetBitmapMargins() const;
-    virtual void DoSetBitmapMargins(wxCoord x, wxCoord y);
-    virtual void DoSetBitmapPosition(wxDirection dir);
-
-#if wxUSE_MARKUP
-    virtual bool DoSetLabelMarkup(const wxString& markup);
-#endif // wxUSE_MARKUP
-
-    // Increases the passed in size to account for the button image.
-    //
-    // Should only be called if we do have a button, i.e. if m_imageData is
-    // non-NULL.
-    void AdjustForBitmapSize(wxSize& size) const;
-
-    class wxButtonImageData *m_imageData;
-
-#if wxUSE_MARKUP
-    class wxMarkupText *m_markupText;
-#endif // wxUSE_MARKUP
-
-    // true if the UAC symbol is shown
-    bool m_authNeeded;
-
 private:
-    void Init()
-    {
-        m_imageData = NULL;
-#if wxUSE_MARKUP
-        m_markupText = NULL;
-#endif // wxUSE_MARKUP
-        m_authNeeded = false;
-    }
+	void Init();
 
-    // Switches button into owner-drawn mode: this is used if we need to draw
-    // something not supported by the native control, such as using non default
-    // colours or a bitmap on pre-XP systems.
-    void MakeOwnerDrawn();
-
     wxDECLARE_DYNAMIC_CLASS_NO_COPY(wxButton);
 };
 
Index: include/wx/msw/tglbtn.h
===================================================================
--- include/wx/msw/tglbtn.h	(revision 67411)
+++ include/wx/msw/tglbtn.h	(working copy)
@@ -3,7 +3,7 @@
 // Purpose:     Declaration of the wxToggleButton class, which implements a
 //              toggle button under wxMSW.
 // Author:      John Norris, minor changes by Axel Schlueter
-// Modified by:
+// Modified by: Hans de Ruiter
 // Created:     08.02.01
 // RCS-ID:      $Id$
 // Copyright:   (c) 2000 Johnny C. Norris II
@@ -15,74 +15,81 @@
 
 #include "wx/bitmap.h"
 
-//-----------------------------------------------------------------------------
-// wxBitmapToggleButton
-//-----------------------------------------------------------------------------
-
-
-class WXDLLIMPEXP_CORE wxBitmapToggleButton: public wxToggleButtonBase
+// Checkbox item (single checkbox)
+class WXDLLIMPEXP_CORE wxToggleButton : public wxToggleButtonBase
 {
 public:
-    // construction/destruction
-    wxBitmapToggleButton() { Init(); }
-    wxBitmapToggleButton(wxWindow *parent,
+    wxToggleButton() 
+    {
+        Init();
+    }
+
+    wxToggleButton(wxWindow *parent,
                    wxWindowID id,
-                   const wxBitmap& label,
+                   const wxString& label,
                    const wxPoint& pos = wxDefaultPosition,
                    const wxSize& size = wxDefaultSize,
                    long style = 0,
                    const wxValidator& validator = wxDefaultValidator,
                    const wxString& name = wxCheckBoxNameStr)
     {
+        Init();
         Create(parent, id, label, pos, size, style, validator, name);
     }
 
-    // Create the control
     bool Create(wxWindow *parent,
                 wxWindowID id,
-                const wxBitmap& label,
+                const wxString& label,
                 const wxPoint& pos = wxDefaultPosition,
-                const wxSize& size = wxDefaultSize, long style = 0,
+                const wxSize& size = wxDefaultSize,
+                long style = 0,
                 const wxValidator& validator = wxDefaultValidator,
                 const wxString& name = wxCheckBoxNameStr);
 
-    // Get/set the value
-    void SetValue(bool state);
-    bool GetValue() const;
+    virtual void SetValue(bool value);
+    virtual bool GetValue() const ;
 
-    // Set the label
-    virtual void SetLabel(const wxString& label) { wxControl::SetLabel(label); }
-    virtual void SetLabel(const wxBitmap& label);
-    bool Enable(bool enable = true);
+    virtual void Command(wxCommandEvent& event);
 
+    // returns true if the platform should explicitly apply a theme border
+    virtual bool CanApplyThemeBorder() const { return false; }
+
+	virtual bool MSWCommand(WXUINT param, WXWORD id);
+
 protected:
-    void Init();
+    virtual wxBorder GetDefaultBorder() const { return wxBORDER_NONE; }
 
-    wxBitmap  m_bitmap;
-    wxBitmap  m_disabledBitmap;
-    bool      m_capturing;
-    bool      m_depressed,m_oldValue;
+    virtual WXDWORD MSWGetStyle(long flags, WXDWORD *exstyle = NULL) const;
 
-    void OnPaint(wxPaintEvent &event);
-    void OnMouse(wxMouseEvent &event);
-    void OnChar(wxKeyEvent &event);
-    void OnSize(wxSizeEvent &event);
+	virtual bool SendClickEvent();
 
-    virtual wxSize DoGetBestSize() const;
+	virtual enum wxAbstractButtonBase::State GetButtonState(UINT state);
 
 private:
-    DECLARE_EVENT_TABLE()
-    DECLARE_DYNAMIC_CLASS(wxBitmapToggleButton)
+
+    void Init();
+
+	// Flag indicating whether the toggle button is selected or not
+	// Unfortunately the BS_OWNERDRAW overrides all of the others, 
+	// and we need to draw buttons with bitmaps ourselves
+	bool selected;
+
+    DECLARE_DYNAMIC_CLASS_NO_COPY(wxToggleButton)
 };
 
-// Checkbox item (single checkbox)
-class WXDLLIMPEXP_CORE wxToggleButton : public wxToggleButtonBase
+
+//-----------------------------------------------------------------------------
+// wxBitmapToggleButton
+//-----------------------------------------------------------------------------
+
+class WXDLLIMPEXP_CORE wxBitmapToggleButton: public wxToggleButton
 {
 public:
-    wxToggleButton() {}
-    wxToggleButton(wxWindow *parent,
+    // construction/destruction
+    wxBitmapToggleButton() { Init(); }
+    wxBitmapToggleButton(wxWindow *parent,
                    wxWindowID id,
-                   const wxString& label,
+                   const wxBitmap& label,
                    const wxPoint& pos = wxDefaultPosition,
                    const wxSize& size = wxDefaultSize,
                    long style = 0,
@@ -92,35 +99,21 @@
         Create(parent, id, label, pos, size, style, validator, name);
     }
 
+    // Create the control
     bool Create(wxWindow *parent,
                 wxWindowID id,
-                const wxString& label,
+                const wxBitmap& label,
                 const wxPoint& pos = wxDefaultPosition,
-                const wxSize& size = wxDefaultSize,
-                long style = 0,
+                const wxSize& size = wxDefaultSize, long style = 0,
                 const wxValidator& validator = wxDefaultValidator,
                 const wxString& name = wxCheckBoxNameStr);
 
-    virtual void SetValue(bool value);
-    virtual bool GetValue() const ;
-
-    virtual void SetLabel(const wxString& label);
-
-    virtual bool MSWCommand(WXUINT param, WXWORD id);
-    virtual void Command(wxCommandEvent& event);
-
-    // returns true if the platform should explicitly apply a theme border
-    virtual bool CanApplyThemeBorder() const { return false; }
-
-protected:
-    virtual wxBorder GetDefaultBorder() const { return wxBORDER_NONE; }
-    virtual wxSize DoGetBestSize() const;
-
-    virtual WXDWORD MSWGetStyle(long flags, WXDWORD *exstyle = NULL) const;
-
 private:
-    DECLARE_DYNAMIC_CLASS_NO_COPY(wxToggleButton)
+	void Init();
+
+	DECLARE_DYNAMIC_CLASS_NO_COPY(wxBitmapToggleButton)
 };
 
+
 #endif // _WX_TOGGLEBUTTON_H_
 
Index: include/wx/tglbtn.h
===================================================================
--- include/wx/tglbtn.h	(revision 67411)
+++ include/wx/tglbtn.h	(working copy)
@@ -18,7 +18,7 @@
 #if wxUSE_TOGGLEBTN
 
 #include "wx/event.h"
-#include "wx/control.h"     // base class
+#include "wx/abstractbtn.h"     // base class
 
 extern WXDLLIMPEXP_DATA_CORE(const char) wxCheckBoxNameStr[];
 
@@ -28,7 +28,7 @@
 // wxToggleButtonBase
 // ----------------------------------------------------------------------------
 
-class WXDLLIMPEXP_CORE wxToggleButtonBase : public wxControl
+class WXDLLIMPEXP_CORE wxToggleButtonBase : public wxAbstractButton
 {
 public:
     wxToggleButtonBase() { }
Index: src/common/abstractbtncmn.cpp
===================================================================
--- src/common/abstractbtncmn.cpp	(revision 0)
+++ src/common/abstractbtncmn.cpp	(revision 0)
@@ -0,0 +1,124 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        src/common/abstractbtncmn.cpp
+// Purpose:     Abstract base class for all buttons
+// Author:      Hans de Ruiter
+// Modified by:
+// Created:     08/04/2011
+// RCS-ID:      $Id: $
+// Copyright:   (c) Hans de Ruiter
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+// ============================================================================
+// declarations
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+#if wxUSE_BUTTON || wxUSE_TOGGLEBTN
+
+#include "wx/abstractbtn.h"
+
+#ifndef WX_PRECOMP
+    #include "wx/toplevel.h"
+#endif //WX_PRECOMP
+
+extern WXDLLEXPORT_DATA(const char) wxAbstractButtonNameStr[] = "abstractbutton";
+
+// ----------------------------------------------------------------------------
+// XTI
+// ----------------------------------------------------------------------------
+
+wxDEFINE_FLAGS( wxButtonStyle )
+wxBEGIN_FLAGS( wxButtonStyle )
+// new style border flags, we put them first to
+// use them for streaming out
+wxFLAGS_MEMBER(wxBORDER_SIMPLE)
+wxFLAGS_MEMBER(wxBORDER_SUNKEN)
+wxFLAGS_MEMBER(wxBORDER_DOUBLE)
+wxFLAGS_MEMBER(wxBORDER_RAISED)
+wxFLAGS_MEMBER(wxBORDER_STATIC)
+wxFLAGS_MEMBER(wxBORDER_NONE)
+
+// old style border flags
+wxFLAGS_MEMBER(wxSIMPLE_BORDER)
+wxFLAGS_MEMBER(wxSUNKEN_BORDER)
+wxFLAGS_MEMBER(wxDOUBLE_BORDER)
+wxFLAGS_MEMBER(wxRAISED_BORDER)
+wxFLAGS_MEMBER(wxSTATIC_BORDER)
+wxFLAGS_MEMBER(wxBORDER)
+
+// standard window styles
+wxFLAGS_MEMBER(wxTAB_TRAVERSAL)
+wxFLAGS_MEMBER(wxCLIP_CHILDREN)
+wxFLAGS_MEMBER(wxTRANSPARENT_WINDOW)
+wxFLAGS_MEMBER(wxWANTS_CHARS)
+wxFLAGS_MEMBER(wxFULL_REPAINT_ON_RESIZE)
+wxFLAGS_MEMBER(wxALWAYS_SHOW_SB )
+wxFLAGS_MEMBER(wxVSCROLL)
+wxFLAGS_MEMBER(wxHSCROLL)
+
+wxFLAGS_MEMBER(wxBU_LEFT)
+wxFLAGS_MEMBER(wxBU_RIGHT)
+wxFLAGS_MEMBER(wxBU_TOP)
+wxFLAGS_MEMBER(wxBU_BOTTOM)
+wxFLAGS_MEMBER(wxBU_EXACTFIT)
+wxEND_FLAGS( wxButtonStyle )
+
+wxIMPLEMENT_ABSTRACT_CLASS(wxAbstractButton, wxControl)
+
+wxBEGIN_PROPERTIES_TABLE(wxAbstractButton)
+
+wxPROPERTY( Font, wxFont, SetFont, GetFont, wxEMPTY_PARAMETER_VALUE, \
+           0 /*flags*/, wxT("The font associated with the button label"), wxT("group"))
+wxPROPERTY( Label, wxString, SetLabel, GetLabel, wxString(), \
+           0 /*flags*/, wxT("The button label"), wxT("group") )
+
+wxPROPERTY_FLAGS( WindowStyle, wxButtonStyle, long, SetWindowStyleFlag, \
+                 GetWindowStyleFlag, wxEMPTY_PARAMETER_VALUE, 0 /*flags*/,     \
+                 wxT("The button style"), wxT("group")) // style
+wxEND_PROPERTIES_TABLE()
+
+wxEMPTY_HANDLERS_TABLE(wxAbstractButton)
+
+wxCONSTRUCTOR_6( wxAbstractButton, wxWindow*, Parent, wxWindowID, Id, wxString, \
+                Label, wxPoint, Position, wxSize, Size, long, WindowStyle )
+
+
+// ============================================================================
+// implementation
+// ============================================================================
+
+wxWindow *wxAbstractButtonBase::SetDefault()
+{
+    wxTopLevelWindow * const
+        tlw = wxDynamicCast(wxGetTopLevelParent(this), wxTopLevelWindow);
+
+    wxCHECK_MSG( tlw, NULL, wxT("button without top level window?") );
+
+    return tlw->SetDefaultItem(this);
+}
+
+void wxAbstractButtonBase::SetBitmapPosition(wxDirection dir)
+{
+    wxASSERT_MSG( !(dir & ~wxDIRECTION_MASK), "non-direction flag used" );
+    wxASSERT_MSG( !!(dir & wxLEFT) +
+                    !!(dir & wxRIGHT) +
+                      !!(dir & wxTOP) +
+                       !!(dir & wxBOTTOM) == 1,
+                   "exactly one direction flag must be set" );
+
+    DoSetBitmapPosition(dir);
+
+}
+
+#endif // wxUSE_BUTTON || wxUSE_TOGGLEBTN
\ No newline at end of file
Index: src/common/btncmn.cpp
===================================================================
--- src/common/btncmn.cpp	(revision 67411)
+++ src/common/btncmn.cpp	(working copy)
@@ -72,7 +72,7 @@
 wxFLAGS_MEMBER(wxBU_EXACTFIT)
 wxEND_FLAGS( wxButtonStyle )
 
-wxIMPLEMENT_DYNAMIC_CLASS_XTI(wxButton, wxControl, "wx/button.h")
+wxIMPLEMENT_DYNAMIC_CLASS_XTI(wxButton, wxAbstractButton, "wx/button.h")
 
 wxBEGIN_PROPERTIES_TABLE(wxButton)
 wxEVENT_PROPERTY( Click, wxEVT_COMMAND_BUTTON_CLICKED, wxCommandEvent )
@@ -92,31 +92,4 @@
 wxCONSTRUCTOR_6( wxButton, wxWindow*, Parent, wxWindowID, Id, wxString, \
                 Label, wxPoint, Position, wxSize, Size, long, WindowStyle )
 
-
-// ============================================================================
-// implementation
-// ============================================================================
-
-wxWindow *wxButtonBase::SetDefault()
-{
-    wxTopLevelWindow * const
-        tlw = wxDynamicCast(wxGetTopLevelParent(this), wxTopLevelWindow);
-
-    wxCHECK_MSG( tlw, NULL, wxT("button without top level window?") );
-
-    return tlw->SetDefaultItem(this);
-}
-
-void wxButtonBase::SetBitmapPosition(wxDirection dir)
-{
-    wxASSERT_MSG( !(dir & ~wxDIRECTION_MASK), "non-direction flag used" );
-    wxASSERT_MSG( !!(dir & wxLEFT) +
-                    !!(dir & wxRIGHT) +
-                      !!(dir & wxTOP) +
-                       !!(dir & wxBOTTOM) == 1,
-                   "exactly one direction flag must be set" );
-
-    DoSetBitmapPosition(dir);
-
-}
 #endif // wxUSE_BUTTON
Index: src/msw/abstractbtn.cpp
===================================================================
--- src/msw/abstractbtn.cpp	(revision 0)
+++ src/msw/abstractbtn.cpp	(revision 0)
@@ -0,0 +1,1343 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        src/msw/button.cpp
+// Purpose:     wxButton
+// Author:      Hans de Ruiter, largely based on code of the original 
+//              wxButton by Julian Smart
+// Modified by:
+// Created:     04/01/98
+// RCS-ID:      $Id: $
+// Copyright:   (c) Hans de Ruiter, Julian Smart
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+// ============================================================================
+// declarations
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+// For compilers that support precompilation, includes "wx.h".
+#include "wx/wxprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+#if wxUSE_BUTTON || wxUSE_TOGGLEBUTTON
+
+#include "wx/abstractbtn.h"
+
+#ifndef WX_PRECOMP
+    #include "wx/app.h"
+    #include "wx/brush.h"
+    #include "wx/panel.h"
+    #include "wx/bmpbuttn.h"
+    #include "wx/settings.h"
+    #include "wx/dcscreen.h"
+    #include "wx/dcclient.h"
+    #include "wx/toplevel.h"
+    #include "wx/msw/wrapcctl.h"
+    #include "wx/msw/private.h"
+    #include "wx/msw/missing.h"
+#endif
+
+#include "wx/imaglist.h"
+#include "wx/stockitem.h"
+#include "wx/msw/private/button.h"
+#include "wx/msw/private/dc.h"
+#include "wx/private/window.h"
+
+#if wxUSE_MARKUP
+    #include "wx/generic/private/markuptext.h"
+#endif // wxUSE_MARKUP
+
+using namespace wxMSWImpl;
+
+#if wxUSE_UXTHEME
+    #include "wx/msw/uxtheme.h"
+
+    // no need to include tmschema.h
+    #ifndef BP_PUSHBUTTON
+        #define BP_PUSHBUTTON 1
+
+        #define PBS_NORMAL    1
+        #define PBS_HOT       2
+        #define PBS_PRESSED   3
+        #define PBS_DISABLED  4
+        #define PBS_DEFAULTED 5
+
+        #define TMT_CONTENTMARGINS 3602
+    #endif
+
+    // provide the necessary declarations ourselves if they're missing from
+    // headers
+    #ifndef BCM_SETIMAGELIST
+        #define BCM_SETIMAGELIST    0x1602
+        #define BCM_SETTEXTMARGIN   0x1604
+
+        enum
+        {
+            BUTTON_IMAGELIST_ALIGN_LEFT,
+            BUTTON_IMAGELIST_ALIGN_RIGHT,
+            BUTTON_IMAGELIST_ALIGN_TOP,
+            BUTTON_IMAGELIST_ALIGN_BOTTOM
+        };
+
+        struct BUTTON_IMAGELIST
+        {
+            HIMAGELIST himl;
+            RECT margin;
+            UINT uAlign;
+        };
+    #endif
+#endif // wxUSE_UXTHEME
+
+#ifndef WM_THEMECHANGED
+    #define WM_THEMECHANGED     0x031A
+#endif
+
+#ifndef ODS_NOACCEL
+    #define ODS_NOACCEL         0x0100
+#endif
+
+#ifndef ODS_NOFOCUSRECT
+    #define ODS_NOFOCUSRECT     0x0200
+#endif
+
+#ifndef DT_HIDEPREFIX
+    #define DT_HIDEPREFIX       0x00100000
+#endif
+
+// set the value for BCM_SETSHIELD (for the UAC shield) if it's not defined in
+// the header
+#ifndef BCM_SETSHIELD
+    #define BCM_SETSHIELD       0x160c
+#endif
+
+#if wxUSE_UXTHEME
+extern wxWindowMSW *wxWindowBeingErased; // From src/msw/window.cpp
+#endif // wxUSE_UXTHEME
+
+// ----------------------------------------------------------------------------
+// button image data
+// ----------------------------------------------------------------------------
+
+// we use different data classes for owner drawn buttons and for themed XP ones
+
+class wxButtonImageData
+{
+public:
+    wxButtonImageData() { }
+    virtual ~wxButtonImageData() { }
+
+    virtual wxBitmap GetBitmap(wxAbstractButton::State which) const = 0;
+    virtual void SetBitmap(const wxBitmap& bitmap, wxAbstractButton::State which) = 0;
+
+    virtual wxSize GetBitmapMargins() const = 0;
+    virtual void SetBitmapMargins(wxCoord x, wxCoord y) = 0;
+
+    virtual wxDirection GetBitmapPosition() const = 0;
+    virtual void SetBitmapPosition(wxDirection dir) = 0;
+
+private:
+    wxDECLARE_NO_COPY_CLASS(wxButtonImageData);
+};
+
+namespace
+{
+
+// the gap between button edge and the interior area used by Windows for the
+// standard buttons
+const int OD_BUTTON_MARGIN = 4;
+
+class wxODButtonImageData : public wxButtonImageData
+{
+public:
+    wxODButtonImageData(wxAbstractButton *btn, const wxBitmap& bitmap)
+    {
+        SetBitmap(bitmap, wxButton::State_Normal);
+        SetBitmap(bitmap.ConvertToDisabled(), wxButton::State_Disabled);
+
+        m_dir = wxLEFT;
+
+        // we use margins when we have both bitmap and text, but when we have
+        // only the bitmap it should take up the entire button area
+        if ( btn->ShowsLabel() )
+        {
+            m_margin.x = btn->GetCharWidth();
+            m_margin.y = btn->GetCharHeight() / 2;
+        }
+    }
+
+    virtual wxBitmap GetBitmap(wxAbstractButton::State which) const
+    {
+        return m_bitmaps[which];
+    }
+
+    virtual void SetBitmap(const wxBitmap& bitmap, wxAbstractButton::State which)
+    {
+        m_bitmaps[which] = bitmap;
+    }
+
+    virtual wxSize GetBitmapMargins() const
+    {
+        return m_margin;
+    }
+
+    virtual void SetBitmapMargins(wxCoord x, wxCoord y)
+    {
+        m_margin = wxSize(x, y);
+    }
+
+    virtual wxDirection GetBitmapPosition() const
+    {
+        return m_dir;
+    }
+
+    virtual void SetBitmapPosition(wxDirection dir)
+    {
+        m_dir = dir;
+    }
+
+private:
+    // just store the values passed to us to be able to retrieve them later
+    // from the drawing code
+    wxBitmap m_bitmaps[wxAbstractButton::State_Max];
+    wxSize m_margin;
+    wxDirection m_dir;
+
+    wxDECLARE_NO_COPY_CLASS(wxODButtonImageData);
+};
+
+#if wxUSE_UXTHEME
+
+// somehow the margin is one pixel greater than the value returned by
+// GetThemeMargins() call
+const int XP_BUTTON_EXTRA_MARGIN = 1;
+
+class wxXPButtonImageData : public wxButtonImageData
+{
+public:
+    // we must be constructed with the size of our images as we need to create
+    // the image list
+    wxXPButtonImageData(wxAbstractButton *btn, const wxBitmap& bitmap)
+        : m_iml(bitmap.GetWidth(), bitmap.GetHeight(), true /* use mask */,
+                wxButton::State_Max),
+          m_hwndBtn(GetHwndOf(btn))
+    {
+        // initialize all bitmaps except for the disabled one to normal state
+        for ( int n = 0; n < wxAbstractButton::State_Max; n++ )
+        {
+            m_iml.Add(n == wxAbstractButton::State_Disabled ? bitmap.ConvertToDisabled()
+                                                    : bitmap);
+        }
+
+        m_data.himl = GetHimagelistOf(&m_iml);
+
+        // no margins by default
+        m_data.margin.left =
+        m_data.margin.right =
+        m_data.margin.top =
+        m_data.margin.bottom = 0;
+
+        // use default alignment
+        m_data.uAlign = BUTTON_IMAGELIST_ALIGN_LEFT;
+
+        UpdateImageInfo();
+    }
+
+    virtual wxBitmap GetBitmap(wxAbstractButton::State which) const
+    {
+        return m_iml.GetBitmap(which);
+    }
+
+    virtual void SetBitmap(const wxBitmap& bitmap, wxAbstractButton::State which)
+    {
+        m_iml.Replace(which, bitmap);
+
+        UpdateImageInfo();
+    }
+
+    virtual wxSize GetBitmapMargins() const
+    {
+        return wxSize(m_data.margin.left, m_data.margin.top);
+    }
+
+    virtual void SetBitmapMargins(wxCoord x, wxCoord y)
+    {
+        RECT& margin = m_data.margin;
+        margin.left =
+        margin.right = x;
+        margin.top =
+        margin.bottom = y;
+
+        UpdateImageInfo();
+    }
+
+    virtual wxDirection GetBitmapPosition() const
+    {
+        switch ( m_data.uAlign )
+        {
+            default:
+                wxFAIL_MSG( "invalid image alignment" );
+                // fall through
+
+            case BUTTON_IMAGELIST_ALIGN_LEFT:
+                return wxLEFT;
+
+            case BUTTON_IMAGELIST_ALIGN_RIGHT:
+                return wxRIGHT;
+
+            case BUTTON_IMAGELIST_ALIGN_TOP:
+                return wxTOP;
+
+            case BUTTON_IMAGELIST_ALIGN_BOTTOM:
+                return wxBOTTOM;
+        }
+    }
+
+    virtual void SetBitmapPosition(wxDirection dir)
+    {
+        UINT alignNew;
+        switch ( dir )
+        {
+            default:
+                wxFAIL_MSG( "invalid direction" );
+                // fall through
+
+            case wxLEFT:
+                alignNew = BUTTON_IMAGELIST_ALIGN_LEFT;
+                break;
+
+            case wxRIGHT:
+                alignNew = BUTTON_IMAGELIST_ALIGN_RIGHT;
+                break;
+
+            case wxTOP:
+                alignNew = BUTTON_IMAGELIST_ALIGN_TOP;
+                break;
+
+            case wxBOTTOM:
+                alignNew = BUTTON_IMAGELIST_ALIGN_BOTTOM;
+                break;
+        }
+
+        if ( alignNew != m_data.uAlign )
+        {
+            m_data.uAlign = alignNew;
+            UpdateImageInfo();
+        }
+    }
+
+private:
+    void UpdateImageInfo()
+    {
+        if ( !::SendMessage(m_hwndBtn, BCM_SETIMAGELIST, 0, (LPARAM)&m_data) )
+        {
+            wxLogDebug("SendMessage(BCM_SETIMAGELIST) failed");
+        }
+    }
+
+    // we store image list separately to be able to use convenient wxImageList
+    // methods instead of working with raw HIMAGELIST
+    wxImageList m_iml;
+
+    // store the rest of the data in BCM_SETIMAGELIST-friendly form
+    BUTTON_IMAGELIST m_data;
+
+    // the button we're associated with
+    const HWND m_hwndBtn;
+
+
+    wxDECLARE_NO_COPY_CLASS(wxXPButtonImageData);
+};
+
+#endif // wxUSE_UXTHEME
+
+} // anonymous namespace
+
+// ----------------------------------------------------------------------------
+// macros
+// ----------------------------------------------------------------------------
+
+// ============================================================================
+// implementation
+// ============================================================================
+
+// ----------------------------------------------------------------------------
+// helper functions from wx/msw/private/button.h
+// ----------------------------------------------------------------------------
+
+void wxMSWButton::UpdateMultilineStyle(HWND hwnd, const wxString& label)
+{
+    // update BS_MULTILINE style depending on the new label (resetting it
+    // doesn't seem to do anything very useful but it shouldn't hurt and we do
+    // have to set it whenever the label becomes multi line as otherwise it
+    // wouldn't be shown correctly as we don't use BS_MULTILINE when creating
+    // the control unless it already has new lines in its label)
+    long styleOld = ::GetWindowLong(hwnd, GWL_STYLE),
+         styleNew;
+    if ( label.find(wxT('\n')) != wxString::npos )
+        styleNew = styleOld | BS_MULTILINE;
+    else
+        styleNew = styleOld & ~BS_MULTILINE;
+
+    if ( styleNew != styleOld )
+        ::SetWindowLong(hwnd, GWL_STYLE, styleNew);
+}
+
+wxSize wxMSWButton::GetFittingSize(wxWindow *win,
+                                   const wxSize& sizeLabel,
+                                   int flags)
+{
+    // FIXME: this is pure guesswork, need to retrieve the real button margins
+    wxSize sizeBtn = sizeLabel;
+
+    sizeBtn.x += 3*win->GetCharWidth();
+    sizeBtn.y += win->GetCharHeight()/2;
+
+    // account for the shield UAC icon if we have it
+    if ( flags & Size_AuthNeeded )
+        sizeBtn.x += wxSystemSettings::GetMetric(wxSYS_SMALLICON_X);
+
+    return sizeBtn;
+}
+
+wxSize wxMSWButton::ComputeBestFittingSize(wxControl *btn, int flags)
+{
+    wxClientDC dc(btn);
+
+    wxSize sizeBtn;
+    dc.GetMultiLineTextExtent(btn->GetLabelText(), &sizeBtn.x, &sizeBtn.y);
+
+    return GetFittingSize(btn, sizeBtn, flags);
+}
+
+wxSize wxMSWButton::IncreaseToStdSizeAndCache(wxControl *btn, const wxSize& size)
+{
+    wxSize sizeBtn(size);
+
+    // All buttons have at least the standard height and, unless the user
+    // explicitly wants them to be as small as possible and used wxBU_EXACTFIT
+    // style to indicate this, of at least the standard width too.
+    //
+    // Notice that we really want to make all buttons equally high, otherwise
+    // they look ugly and the existing code using wxBU_EXACTFIT only uses it to
+    // control width and not height.
+
+    // The 50x14 button size is documented in the "Recommended sizing and
+    // spacing" section of MSDN layout article.
+    //
+    // Note that we intentionally don't use GetDefaultSize() here, because
+    // it's inexact -- dialog units depend on this dialog's font.
+    const wxSize sizeDef = btn->ConvertDialogToPixels(wxSize(50, 14));
+    if ( !btn->HasFlag(wxBU_EXACTFIT) )
+    {
+        if ( sizeBtn.x < sizeDef.x )
+            sizeBtn.x = sizeDef.x;
+    }
+    if ( sizeBtn.y < sizeDef.y )
+        sizeBtn.y = sizeDef.y;
+
+    btn->CacheBestSize(sizeBtn);
+
+    return sizeBtn;
+}
+
+// ----------------------------------------------------------------------------
+// creation/destruction
+// ----------------------------------------------------------------------------
+
+bool wxAbstractButton::Create(wxWindow *parent,
+                      wxWindowID id,
+                      const wxString& lbl,
+                      const wxPoint& pos,
+                      const wxSize& size,
+                      long style,
+                      const wxValidator& validator,
+                      const wxString& name)
+{
+    wxString label(lbl);
+    if (label.empty() && wxIsStockID(id))
+    {
+        // On Windows, some buttons aren't supposed to have mnemonics
+        label = wxGetStockLabel
+                (
+                    id,
+                    id == wxID_OK || id == wxID_CANCEL || id == wxID_CLOSE
+                        ? wxSTOCK_NOFLAGS
+                        : wxSTOCK_WITH_MNEMONIC
+                );
+    }
+
+    if ( !CreateControl(parent, id, pos, size, style, validator, name) )
+        return false;
+
+    WXDWORD exstyle;
+    WXDWORD msStyle = MSWGetStyle(style, &exstyle);
+
+    // if the label contains several lines we must explicitly tell the button
+    // about it or it wouldn't draw it correctly ("\n"s would just appear as
+    // black boxes)
+    //
+    // NB: we do it here and not in MSWGetStyle() because we need the label
+    //     value and the label is not set yet when MSWGetStyle() is called
+    msStyle |= wxMSWButton::GetMultilineStyle(label);
+
+    return MSWCreateControl(wxT("BUTTON"), msStyle, pos, size, label, exstyle);
+}
+
+wxAbstractButton::~wxAbstractButton()
+{
+    delete m_imageData;
+#if wxUSE_MARKUP
+    delete m_markupText;
+#endif // wxUSE_MARKUP
+}
+
+// ----------------------------------------------------------------------------
+// flags
+// ----------------------------------------------------------------------------
+
+void wxAbstractButton::SetLabel(const wxString& label)
+{
+    wxMSWButton::UpdateMultilineStyle(GetHwnd(), label);
+
+    wxAbstractButtonBase::SetLabel(label);
+
+#if wxUSE_MARKUP
+    // If we have a plain text label, we shouldn't be using markup any longer.
+    if ( m_markupText )
+    {
+        delete m_markupText;
+        m_markupText = NULL;
+
+        // Unfortunately we don't really know whether we can reset the button
+        // to be non-owner-drawn or not: if we had made it owner-drawn just
+        // because of a call to SetLabelMarkup(), we could, but not if there
+        // were [also] calls to Set{Fore,Back}groundColour(). If it's really a
+        // problem to have button remain owner-drawn forever just because it
+        // had markup label once, we should record the reason for our current
+        // owner-drawnness and check it here.
+    }
+#endif // wxUSE_MARKUP
+}
+
+// ----------------------------------------------------------------------------
+// size management including autosizing
+// ----------------------------------------------------------------------------
+
+void wxAbstractButton::AdjustForBitmapSize(wxSize &size) const
+{
+    wxCHECK_RET( m_imageData, wxT("shouldn't be called if no image") );
+
+    // account for the bitmap size
+    wxSize sizeBmp = m_imageData->GetBitmap(State_Normal).GetSize();
+	
+	// Need to adjust the margins we always add internally (unless we have no
+    // border at all in which case the button has exactly the same size as
+    // bitmap and so no margins should be used)
+    if ( !HasFlag(wxBORDER_NONE) )
+    {
+        int marginH = 0,
+            marginV = 0;
+#if wxUSE_UXTHEME
+        if ( wxUxThemeEngine::GetIfActive() )
+        {
+            wxUxThemeHandle theme(const_cast<wxAbstractButton *>(this), L"BUTTON");
+
+            MARGINS margins;
+            wxUxThemeEngine::Get()->GetThemeMargins(theme, NULL,
+                                                    BP_PUSHBUTTON,
+                                                    PBS_NORMAL,
+                                                    TMT_CONTENTMARGINS,
+                                                    NULL,
+                                                    &margins);
+
+            // XP doesn't draw themed buttons correctly when the client
+            // area is smaller than 8x8 - enforce this minimum size for
+            // small bitmaps
+            sizeBmp.IncTo(wxSize(8, 8));
+
+            marginH = margins.cxLeftWidth + margins.cxRightWidth
+                        + 2*XP_BUTTON_EXTRA_MARGIN;
+            marginV = margins.cyTopHeight + margins.cyBottomHeight
+                        + 2*XP_BUTTON_EXTRA_MARGIN;
+        }
+        else
+#endif // wxUSE_UXTHEME
+        {
+            marginH =
+            marginV = OD_BUTTON_MARGIN;
+        }
+
+        sizeBmp.IncBy(marginH, marginV);
+    }
+
+	// account for the user-specified margins
+    sizeBmp += 2*m_imageData->GetBitmapMargins();
+
+	// Now adjust the overall button size
+    const wxDirection dirBmp = m_imageData->GetBitmapPosition();
+    if ( dirBmp == wxLEFT || dirBmp == wxRIGHT )
+    {
+        size.x += sizeBmp.x;
+        if ( sizeBmp.y > size.y )
+            size.y = sizeBmp.y;
+    }
+    else // bitmap on top/below the text
+    {
+        size.y += sizeBmp.y;
+        if ( sizeBmp.x > size.x )
+            size.x = sizeBmp.x;
+    }
+}
+
+// return the button state using both the ODS_XXX flags specified in state
+// parameter and the current button state
+wxAbstractButtonBase::State wxAbstractButton::GetButtonState(UINT state)
+{
+    if ( state & ODS_DISABLED )
+        return wxButton::State_Disabled;
+
+    if ( state & ODS_SELECTED || state & ODS_CHECKED )
+        return wxButton::State_Pressed;
+
+    if ( HasCapture() || IsMouseInWindow() )
+        return wxButton::State_Current;
+
+    if ( state & ODS_FOCUS )
+        return wxButton::State_Focused;
+
+    return wxButton::State_Normal;
+}
+
+wxSize wxAbstractButton::DoGetBestSize() const
+{
+    wxAbstractButton * const self = const_cast<wxAbstractButton *>(this);
+
+    wxSize size;
+
+    // Account for the text part if we have it.
+    if ( ShowsLabel() )
+    {
+        int flags = 0;
+        if ( GetAuthNeeded() )
+            flags |= wxMSWButton::Size_AuthNeeded;
+
+#if wxUSE_MARKUP
+        if ( m_markupText )
+        {
+            wxClientDC dc(self);
+            size = wxMSWButton::GetFittingSize(self,
+                                               m_markupText->Measure(dc),
+                                               flags);
+        }
+        else // Normal plain text (but possibly multiline) label.
+#endif // wxUSE_MARKUP
+        {
+            size = wxMSWButton::ComputeBestFittingSize(self, flags);
+        }
+    }
+
+    if ( m_imageData )
+        AdjustForBitmapSize(size);
+
+    return wxMSWButton::IncreaseToStdSizeAndCache(self, size);
+}
+
+/* static */
+wxSize wxAbstractButtonBase::GetDefaultSize()
+{
+    static wxSize s_sizeBtn;
+
+    if ( s_sizeBtn.x == 0 )
+    {
+        wxScreenDC dc;
+        dc.SetFont(wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT));
+
+        // The size of a standard button in the dialog units is 50x14,
+        // translate this to pixels.
+        //
+        // Windows' computes dialog units using average character width over
+        // upper- and lower-case ASCII alphabet and not using the average
+        // character width metadata stored in the font; see
+        // http://support.microsoft.com/default.aspx/kb/145994 for detailed
+        // discussion.
+        //
+        // NB: wxMulDivInt32() is used, because it correctly rounds the result
+
+        const wxSize base = wxPrivate::GetAverageASCIILetterSize(dc);
+        s_sizeBtn.x = wxMulDivInt32(50, base.x, 4);
+        s_sizeBtn.y = wxMulDivInt32(14, base.y, 8);
+    }
+
+    return s_sizeBtn;
+}
+
+// ----------------------------------------------------------------------------
+// helpers
+// ----------------------------------------------------------------------------
+
+void wxAbstractButton::Command(wxCommandEvent & event)
+{
+    ProcessCommand(event);
+}
+
+// ----------------------------------------------------------------------------
+// event/message handlers
+// ----------------------------------------------------------------------------
+
+bool wxAbstractButton::MSWCommand(WXUINT param, WXWORD WXUNUSED(id))
+{
+    bool processed = false;
+    switch ( param )
+    {
+        // NOTE: Apparently older versions (NT 4?) of the common controls send
+        //       BN_DOUBLECLICKED but not a second BN_CLICKED for owner-drawn
+        //       buttons, so in order to send two EVT_BUTTON events we should
+        //       catch both types.  Currently (Feb 2003) up-to-date versions of
+        //       win98, win2k and winXP all send two BN_CLICKED messages for
+        //       all button types, so we don't catch BN_DOUBLECLICKED anymore
+        //       in order to not get 3 EVT_BUTTON events.  If this is a problem
+        //       then we need to figure out which version of the comctl32 changed
+        //       this behaviour and test for it.
+
+        case 1:                     // message came from an accelerator
+        case BN_CLICKED:            // normal buttons send this
+            processed = SendClickEvent();
+            break;
+    }
+
+    return processed;
+}
+
+WXLRESULT wxAbstractButton::MSWWindowProc(WXUINT nMsg, WXWPARAM wParam, WXLPARAM lParam)
+{
+    if ( nMsg == WM_LBUTTONDBLCLK )
+    {
+        // emulate a click event to force an owner-drawn button to change its
+        // appearance - without this, it won't do it
+        (void)wxControl::MSWWindowProc(WM_LBUTTONDOWN, wParam, lParam);
+
+        // and continue with processing the message normally as well
+    }
+#if wxUSE_UXTHEME
+    else if ( nMsg == WM_THEMECHANGED )
+    {
+        // need to recalculate the best size here
+        // as the theme size might have changed
+        InvalidateBestSize();
+    }
+#endif // wxUSE_UXTHEME
+    // must use m_mouseInWindow here instead of IsMouseInWindow()
+    // since we need to know the first time the mouse enters the window
+    // and IsMouseInWindow() would return true in this case
+    else if ( (nMsg == WM_MOUSEMOVE && !m_mouseInWindow) ||
+                nMsg == WM_MOUSELEAVE )
+    {
+        if (
+                IsEnabled() &&
+                (
+#if wxUSE_UXTHEME
+                wxUxThemeEngine::GetIfActive() ||
+#endif // wxUSE_UXTHEME
+                 (m_imageData && m_imageData->GetBitmap(State_Current).IsOk())
+                )
+           )
+        {
+            Refresh();
+        }
+    }
+
+    // let the base class do all real processing
+    return wxControl::MSWWindowProc(nMsg, wParam, lParam);
+}
+
+// ----------------------------------------------------------------------------
+// authentication needed handling
+// ----------------------------------------------------------------------------
+
+bool wxAbstractButton::DoGetAuthNeeded() const
+{
+    return m_authNeeded;
+}
+
+void wxAbstractButton::DoSetAuthNeeded(bool show)
+{
+    // show/hide UAC symbol on Windows Vista and later
+    if ( wxGetWinVersion() >= wxWinVersion_6 )
+    {
+        m_authNeeded = show;
+        ::SendMessage(GetHwnd(), BCM_SETSHIELD, 0, show);
+        InvalidateBestSize();
+    }
+}
+
+// ----------------------------------------------------------------------------
+// button images
+// ----------------------------------------------------------------------------
+
+wxBitmap wxAbstractButton::DoGetBitmap(State which) const
+{
+    return m_imageData ? m_imageData->GetBitmap(which) : wxBitmap();
+}
+
+void wxAbstractButton::DoSetBitmap(const wxBitmap& bitmap, State which)
+{
+#if wxUSE_UXTHEME
+    wxXPButtonImageData *oldData = NULL;
+#endif // wxUSE_UXTHEME
+
+    // Check if we already had bitmaps of different size.
+    if ( m_imageData &&
+          bitmap.GetSize() != m_imageData->GetBitmap(State_Normal).GetSize() )
+    {
+        wxASSERT_MSG( which == State_Normal,
+                      "Must set normal bitmap with the new size first" );
+
+#if wxUSE_UXTHEME
+        if ( ShowsLabel() && wxUxThemeEngine::GetIfActive() )
+        {
+            // We can't change the size of the images stored in wxImageList
+            // in wxXPButtonImageData::m_iml so force recreating it below but
+            // keep the current data to copy its values into the new one.
+            oldData = static_cast<wxXPButtonImageData *>(m_imageData);
+            m_imageData = NULL;
+        }
+#endif // wxUSE_UXTHEME
+        //else: wxODButtonImageData doesn't require anything special
+    }
+
+    // allocate the image data when the first bitmap is set
+    if ( !m_imageData )
+    {
+#if wxUSE_UXTHEME
+        // using image list doesn't work correctly if we don't have any label
+        // (even if we use BUTTON_IMAGELIST_ALIGN_CENTER alignment and
+        // BS_BITMAP style), at least under Windows 2003 so use owner drawn
+        // strategy for bitmap-only buttons
+        if ( ShowsLabel() && wxUxThemeEngine::GetIfActive() )
+        {
+            m_imageData = new wxXPButtonImageData(this, bitmap);
+
+            if ( oldData )
+            {
+                // Preserve the old values in case the user changed them.
+                m_imageData->SetBitmapPosition(oldData->GetBitmapPosition());
+
+                const wxSize oldMargins = oldData->GetBitmapMargins();
+                m_imageData->SetBitmapMargins(oldMargins.x, oldMargins.y);
+
+                // No need to preserve the bitmaps though as they were of wrong
+                // size anyhow.
+
+                delete oldData;
+            }
+        }
+        else
+#endif // wxUSE_UXTHEME
+        {
+            m_imageData = new wxODButtonImageData(this, bitmap);
+        }
+		MakeOwnerDrawn();
+    }
+    else
+    {
+        m_imageData->SetBitmap(bitmap, which);
+    }
+
+    // it should be enough to only invalidate the best size when the normal
+    // bitmap changes as all bitmaps assigned to the button should be of the
+    // same size anyhow
+    if ( which == State_Normal )
+        InvalidateBestSize();
+
+    Refresh();
+}
+
+wxSize wxAbstractButton::DoGetBitmapMargins() const
+{
+    return m_imageData ? m_imageData->GetBitmapMargins() : wxSize(0, 0);
+}
+
+void wxAbstractButton::DoSetBitmapMargins(wxCoord x, wxCoord y)
+{
+    wxCHECK_RET( m_imageData, "SetBitmap() must be called first" );
+
+    m_imageData->SetBitmapMargins(x, y);
+    InvalidateBestSize();
+}
+
+void wxAbstractButton::DoSetBitmapPosition(wxDirection dir)
+{
+    wxCHECK_RET( m_imageData, "SetBitmap() must be called first" );
+
+    m_imageData->SetBitmapPosition(dir);
+    InvalidateBestSize();
+}
+
+// ----------------------------------------------------------------------------
+// markup support
+// ----------------------------------------------------------------------------
+
+#if wxUSE_MARKUP
+
+bool wxAbstractButton::DoSetLabelMarkup(const wxString& markup)
+{
+    if ( !wxAbstractButtonBase::DoSetLabelMarkup(markup) )
+        return false;
+
+    if ( !m_markupText )
+    {
+        m_markupText = new wxMarkupText(markup);
+        MakeOwnerDrawn();
+    }
+    else
+    {
+        // We are already owner-drawn so just update the text.
+        m_markupText->SetMarkup(markup);
+    }
+
+    Refresh();
+
+    return true;
+}
+
+#endif // wxUSE_MARKUP
+
+// ----------------------------------------------------------------------------
+// owner-drawn buttons support
+// ----------------------------------------------------------------------------
+
+// drawing helpers
+namespace
+{
+void DrawButtonText(HDC hdc,
+                    RECT *pRect,
+                    wxAbstractButton *btn,
+                    int flags)
+{
+    const wxString text = btn->GetLabel();
+
+    if ( text.find(wxT('\n')) != wxString::npos )
+    {
+        // draw multiline label
+
+        // center text horizontally in any case
+        flags |= DT_CENTER;
+
+        // first we need to compute its bounding rect
+        RECT rc;
+        ::CopyRect(&rc, pRect);
+        ::DrawText(hdc, text.wx_str(), text.length(), &rc,
+                   DT_CENTER | DT_CALCRECT);
+
+        // now center this rect inside the entire button area
+        const LONG w = rc.right - rc.left;
+        const LONG h = rc.bottom - rc.top;
+        rc.left = (pRect->right - pRect->left)/2 - w/2;
+        rc.right = rc.left+w;
+        rc.top = (pRect->bottom - pRect->top)/2 - h/2;
+        rc.bottom = rc.top+h;
+
+        ::DrawText(hdc, text.wx_str(), text.length(), &rc, flags);
+    }
+    else // single line label
+    {
+        // translate wx button flags to alignment flags for DrawText()
+        if ( btn->HasFlag(wxBU_RIGHT) )
+        {
+            flags |= DT_RIGHT;
+        }
+        else if ( !btn->HasFlag(wxBU_LEFT) )
+        {
+            flags |= DT_CENTER;
+        }
+        //else: DT_LEFT is the default anyhow (and its value is 0 too)
+
+        if ( btn->HasFlag(wxBU_BOTTOM) )
+        {
+            flags |= DT_BOTTOM;
+        }
+        else if ( !btn->HasFlag(wxBU_TOP) )
+        {
+            flags |= DT_VCENTER;
+        }
+        //else: as above, DT_TOP is the default
+
+        // notice that we must have DT_SINGLELINE for vertical alignment flags
+        // to work
+        ::DrawText(hdc, text.wx_str(), text.length(), pRect,
+                   flags | DT_SINGLELINE );
+    }
+}
+
+void DrawRect(HDC hdc, const RECT& r)
+{
+    wxDrawLine(hdc, r.left, r.top, r.right, r.top);
+    wxDrawLine(hdc, r.right, r.top, r.right, r.bottom);
+    wxDrawLine(hdc, r.right, r.bottom, r.left, r.bottom);
+    wxDrawLine(hdc, r.left, r.bottom, r.left, r.top);
+}
+
+/*
+   The button frame looks like this normally:
+
+   WWWWWWWWWWWWWWWWWWB
+   WHHHHHHHHHHHHHHHHGB  W = white       (HILIGHT)
+   WH               GB  H = light grey  (LIGHT)
+   WH               GB  G = dark grey   (SHADOW)
+   WH               GB  B = black       (DKSHADOW)
+   WH               GB
+   WGGGGGGGGGGGGGGGGGB
+   BBBBBBBBBBBBBBBBBBB
+
+   When the button is selected, the button becomes like this (the total button
+   size doesn't change):
+
+   BBBBBBBBBBBBBBBBBBB
+   BWWWWWWWWWWWWWWWWBB
+   BWHHHHHHHHHHHHHHGBB
+   BWH             GBB
+   BWH             GBB
+   BWGGGGGGGGGGGGGGGBB
+   BBBBBBBBBBBBBBBBBBB
+   BBBBBBBBBBBBBBBBBBB
+
+   When the button is pushed (while selected) it is like:
+
+   BBBBBBBBBBBBBBBBBBB
+   BGGGGGGGGGGGGGGGGGB
+   BG               GB
+   BG               GB
+   BG               GB
+   BG               GB
+   BGGGGGGGGGGGGGGGGGB
+   BBBBBBBBBBBBBBBBBBB
+*/
+void DrawButtonFrame(HDC hdc, RECT& rectBtn,
+                     bool selected, bool pushed)
+{
+    RECT r;
+    CopyRect(&r, &rectBtn);
+
+    AutoHPEN hpenBlack(GetSysColor(COLOR_3DDKSHADOW)),
+             hpenGrey(GetSysColor(COLOR_3DSHADOW)),
+             hpenLightGr(GetSysColor(COLOR_3DLIGHT)),
+             hpenWhite(GetSysColor(COLOR_3DHILIGHT));
+
+    SelectInHDC selectPen(hdc, hpenBlack);
+
+    r.right--;
+    r.bottom--;
+
+    if ( pushed )
+    {
+        DrawRect(hdc, r);
+
+        (void)SelectObject(hdc, hpenGrey);
+        ::InflateRect(&r, -1, -1);
+
+        DrawRect(hdc, r);
+    }
+    else // !pushed
+    {
+        if ( selected )
+        {
+            DrawRect(hdc, r);
+
+            ::InflateRect(&r, -1, -1);
+        }
+
+        wxDrawLine(hdc, r.left, r.bottom, r.right, r.bottom);
+        wxDrawLine(hdc, r.right, r.bottom, r.right, r.top - 1);
+
+        (void)SelectObject(hdc, hpenWhite);
+        wxDrawLine(hdc, r.left, r.bottom - 1, r.left, r.top);
+        wxDrawLine(hdc, r.left, r.top, r.right, r.top);
+
+        (void)SelectObject(hdc, hpenLightGr);
+        wxDrawLine(hdc, r.left + 1, r.bottom - 2, r.left + 1, r.top + 1);
+        wxDrawLine(hdc, r.left + 1, r.top + 1, r.right - 1, r.top + 1);
+
+        (void)SelectObject(hdc, hpenGrey);
+        wxDrawLine(hdc, r.left + 1, r.bottom - 1, r.right - 1, r.bottom - 1);
+        wxDrawLine(hdc, r.right - 1, r.bottom - 1, r.right - 1, r.top);
+    }
+
+    InflateRect(&rectBtn, -OD_BUTTON_MARGIN, -OD_BUTTON_MARGIN);
+}
+
+#if wxUSE_UXTHEME
+void DrawXPBackground(wxAbstractButton *button, HDC hdc, RECT& rectBtn, 
+                      wxAbstractButton::State state)
+{
+    wxUxThemeHandle theme(button, L"BUTTON");
+
+    // this array is indexed by wxButton::State values and so must be kept in
+    // sync with it
+    static const int uxStates[] =
+    {
+        PBS_NORMAL, PBS_HOT, PBS_PRESSED, PBS_DISABLED, PBS_DEFAULTED
+    };
+
+    int iState = uxStates[state];
+
+    wxUxThemeEngine * const engine = wxUxThemeEngine::Get();
+
+    // draw parent background if needed
+    if ( engine->IsThemeBackgroundPartiallyTransparent
+                 (
+                    theme,
+                    BP_PUSHBUTTON,
+                    iState
+                 ) )
+    {
+        // Set this button as the one whose background is being erased: this
+        // allows our WM_ERASEBKGND handler used by DrawThemeParentBackground()
+        // to correctly align the background brush with this window instead of
+        // the parent window to which WM_ERASEBKGND is sent. Notice that this
+        // doesn't work with custom user-defined EVT_ERASE_BACKGROUND handlers
+        // as they won't be aligned but unfortunately all the attempts to fix
+        // it by shifting DC origin before calling DrawThemeParentBackground()
+        // failed to work so we at least do this, even though this is far from
+        // being the perfect solution.
+        wxWindowBeingErased = button;
+
+        engine->DrawThemeParentBackground(GetHwndOf(button), hdc, &rectBtn);
+
+        wxWindowBeingErased = NULL;
+    }
+
+    // draw background
+    engine->DrawThemeBackground(theme, hdc, BP_PUSHBUTTON, iState,
+                                &rectBtn, NULL);
+
+    // calculate content area margins
+    MARGINS margins;
+    engine->GetThemeMargins(theme, hdc, BP_PUSHBUTTON, iState,
+                            TMT_CONTENTMARGINS, &rectBtn, &margins);
+    ::InflateRect(&rectBtn, -margins.cxLeftWidth, -margins.cyTopHeight);
+    ::InflateRect(&rectBtn, -XP_BUTTON_EXTRA_MARGIN, -XP_BUTTON_EXTRA_MARGIN);
+
+    if ( button->UseBgCol() )
+    {
+        COLORREF colBg = wxColourToRGB(button->GetBackgroundColour());
+        AutoHBRUSH hbrushBackground(colBg);
+
+        // don't overwrite the focus rect
+        RECT rectClient;
+        ::CopyRect(&rectClient, &rectBtn);
+        ::InflateRect(&rectClient, -1, -1);
+        FillRect(hdc, &rectClient, hbrushBackground);
+    }
+}
+#endif // wxUSE_UXTHEME
+
+} // anonymous namespace
+
+// ----------------------------------------------------------------------------
+// owner drawn buttons support
+// ----------------------------------------------------------------------------
+
+void wxAbstractButton::MakeOwnerDrawn()
+{
+    long style = GetWindowLong(GetHwnd(), GWL_STYLE);
+    if ( (style & BS_OWNERDRAW) != BS_OWNERDRAW )
+    {
+        // make it so
+        style |= BS_OWNERDRAW;
+        SetWindowLong(GetHwnd(), GWL_STYLE, style);
+    }
+}
+
+bool wxAbstractButton::SetBackgroundColour(const wxColour &colour)
+{
+    if ( !wxControl::SetBackgroundColour(colour) )
+    {
+        // nothing to do
+        return false;
+    }
+
+    MakeOwnerDrawn();
+
+    Refresh();
+
+    return true;
+}
+
+bool wxAbstractButton::SetForegroundColour(const wxColour &colour)
+{
+    if ( !wxControl::SetForegroundColour(colour) )
+    {
+        // nothing to do
+        return false;
+    }
+
+    MakeOwnerDrawn();
+
+    Refresh();
+
+    return true;
+}
+
+bool wxAbstractButton::MSWOnDraw(WXDRAWITEMSTRUCT *wxdis)
+{
+    LPDRAWITEMSTRUCT lpDIS = (LPDRAWITEMSTRUCT)wxdis;
+    HDC hdc = lpDIS->hDC;
+
+	UINT state = lpDIS->itemState;
+    wxAbstractButton::State buttonState = GetButtonState(state);
+    bool pushed = (SendMessage(GetHwnd(), BM_GETSTATE, 0, 0) & BST_PUSHED) != 0;
+
+    RECT rectBtn;
+    CopyRect(&rectBtn, &lpDIS->rcItem);
+
+    // draw the button background
+    if ( !HasFlag(wxBORDER_NONE) )
+    {
+#if wxUSE_UXTHEME
+        if ( wxUxThemeEngine::GetIfActive() )
+        {
+            DrawXPBackground(this, hdc, rectBtn, buttonState);
+        }
+        else
+#endif // wxUSE_UXTHEME
+        {
+            COLORREF colBg = wxColourToRGB(GetBackgroundColour());
+
+            // first, draw the background
+            AutoHBRUSH hbrushBackground(colBg);
+            FillRect(hdc, &rectBtn, hbrushBackground);
+
+            // draw the border for the current state
+            bool selected = (state & ODS_SELECTED) != 0;
+            if ( !selected )
+            {
+                wxTopLevelWindow *
+                    tlw = wxDynamicCast(wxGetTopLevelParent(this), wxTopLevelWindow);
+                if ( tlw )
+                {
+                    selected = tlw->GetDefaultItem() == this;
+                }
+            }
+
+            DrawButtonFrame(hdc, rectBtn, selected, pushed);
+        }
+
+        // draw the focus rectangle if we need it
+        if ( (state & ODS_FOCUS) && !(state & ODS_NOFOCUSRECT) )
+        {
+            DrawFocusRect(hdc, &rectBtn);
+
+#if wxUSE_UXTHEME
+            if ( !wxUxThemeEngine::GetIfActive() )
+#endif // wxUSE_UXTHEME
+            {
+                if ( pushed )
+                {
+                    // the label is shifted by 1 pixel to create "pushed" effect
+                    OffsetRect(&rectBtn, 1, 1);
+                }
+            }
+        }
+    }
+
+
+    // draw the image, if any
+    if ( m_imageData )
+    {
+        wxBitmap bmp = m_imageData->GetBitmap(buttonState);
+        if ( !bmp.IsOk() )
+            bmp = m_imageData->GetBitmap(State_Normal);
+
+        const wxSize sizeBmp = bmp.GetSize();
+        const wxSize margin = m_imageData->GetBitmapMargins();
+        const wxSize sizeBmpWithMargins(sizeBmp + 2*margin);
+        wxRect rectButton(wxRectFromRECT(rectBtn));
+
+        // for simplicity, we start with centred rectangle and then move it to
+        // the appropriate edge
+        wxRect rectBitmap = wxRect(sizeBmp).CentreIn(rectButton);
+
+        // move bitmap only if we have a label, otherwise keep it centered
+        if ( ShowsLabel() )
+        {
+            switch ( m_imageData->GetBitmapPosition() )
+            {
+                default:
+                    wxFAIL_MSG( "invalid direction" );
+                    // fall through
+
+                case wxLEFT:
+                    rectBitmap.x = rectButton.x + margin.x;
+                    rectButton.x += sizeBmpWithMargins.x;
+                    rectButton.width -= sizeBmpWithMargins.x;
+                    break;
+
+                case wxRIGHT:
+                    rectBitmap.x = rectButton.GetRight() - sizeBmp.x - margin.x;
+                    rectButton.width -= sizeBmpWithMargins.x;
+                    break;
+
+                case wxTOP:
+                    rectBitmap.y = rectButton.y + margin.y;
+                    rectButton.y += sizeBmpWithMargins.y;
+                    rectButton.height -= sizeBmpWithMargins.y;
+                    break;
+
+                case wxBOTTOM:
+                    rectBitmap.y = rectButton.GetBottom() - sizeBmp.y - margin.y;
+                    rectButton.height -= sizeBmpWithMargins.y;
+                    break;
+            }
+        }
+
+        wxDCTemp dst((WXHDC)hdc);
+        dst.DrawBitmap(bmp, rectBitmap.GetPosition(), true);
+
+        wxCopyRectToRECT(rectButton, rectBtn);
+    }
+
+
+    // finally draw the label
+    if ( ShowsLabel() )
+    {
+        COLORREF colFg = state & ODS_DISABLED
+                            ? ::GetSysColor(COLOR_GRAYTEXT)
+                            : wxColourToRGB(GetForegroundColour());
+
+        wxTextColoursChanger changeFg(hdc, colFg, CLR_INVALID);
+        wxBkModeChanger changeBkMode(hdc, wxBRUSHSTYLE_TRANSPARENT);
+
+#if wxUSE_MARKUP
+        if ( m_markupText )
+        {
+            wxDCTemp dc((WXHDC)hdc);
+            dc.SetTextForeground(wxColour(colFg));
+            dc.SetFont(GetFont());
+
+            m_markupText->Render(dc, wxRectFromRECT(rectBtn),
+                                 state & ODS_NOACCEL
+                                    ? wxMarkupText::Render_Default
+                                    : wxMarkupText::Render_ShowAccels);
+        }
+        else // Plain text label
+#endif // wxUSE_MARKUP
+        {
+            // notice that DT_HIDEPREFIX doesn't work on old (pre-Windows 2000)
+            // systems but by happy coincidence ODS_NOACCEL is not used under
+            // them neither so DT_HIDEPREFIX should never be used there
+            DrawButtonText(hdc, &rectBtn, this,
+                           state & ODS_NOACCEL ? DT_HIDEPREFIX : 0);
+        }
+    }
+
+    return true;
+}
+
+#endif // wxUSE_BUTTON || wxUSE_TOGGLEBUTTON
+
Index: src/msw/button.cpp
===================================================================
--- src/msw/button.cpp	(revision 67411)
+++ src/msw/button.cpp	(working copy)
@@ -2,7 +2,7 @@
 // Name:        src/msw/button.cpp
 // Purpose:     wxButton
 // Author:      Julian Smart
-// Modified by:
+// Modified by: Hans de Ruiter
 // Created:     04/01/98
 // RCS-ID:      $Id$
 // Copyright:   (c) Julian Smart
@@ -28,427 +28,16 @@
 
 #include "wx/button.h"
 
-#ifndef WX_PRECOMP
-    #include "wx/app.h"
-    #include "wx/brush.h"
-    #include "wx/panel.h"
-    #include "wx/bmpbuttn.h"
-    #include "wx/settings.h"
-    #include "wx/dcscreen.h"
-    #include "wx/dcclient.h"
-    #include "wx/toplevel.h"
-    #include "wx/msw/wrapcctl.h"
-    #include "wx/msw/private.h"
-    #include "wx/msw/missing.h"
-#endif
-
-#include "wx/imaglist.h"
-#include "wx/stockitem.h"
 #include "wx/msw/private/button.h"
 #include "wx/msw/private/dc.h"
 #include "wx/private/window.h"
 
-#if wxUSE_MARKUP
-    #include "wx/generic/private/markuptext.h"
-#endif // wxUSE_MARKUP
 
-using namespace wxMSWImpl;
-
-#if wxUSE_UXTHEME
-    #include "wx/msw/uxtheme.h"
-
-    // no need to include tmschema.h
-    #ifndef BP_PUSHBUTTON
-        #define BP_PUSHBUTTON 1
-
-        #define PBS_NORMAL    1
-        #define PBS_HOT       2
-        #define PBS_PRESSED   3
-        #define PBS_DISABLED  4
-        #define PBS_DEFAULTED 5
-
-        #define TMT_CONTENTMARGINS 3602
-    #endif
-
-    // provide the necessary declarations ourselves if they're missing from
-    // headers
-    #ifndef BCM_SETIMAGELIST
-        #define BCM_SETIMAGELIST    0x1602
-        #define BCM_SETTEXTMARGIN   0x1604
-
-        enum
-        {
-            BUTTON_IMAGELIST_ALIGN_LEFT,
-            BUTTON_IMAGELIST_ALIGN_RIGHT,
-            BUTTON_IMAGELIST_ALIGN_TOP,
-            BUTTON_IMAGELIST_ALIGN_BOTTOM
-        };
-
-        struct BUTTON_IMAGELIST
-        {
-            HIMAGELIST himl;
-            RECT margin;
-            UINT uAlign;
-        };
-    #endif
-#endif // wxUSE_UXTHEME
-
-#ifndef WM_THEMECHANGED
-    #define WM_THEMECHANGED     0x031A
-#endif
-
-#ifndef ODS_NOACCEL
-    #define ODS_NOACCEL         0x0100
-#endif
-
-#ifndef ODS_NOFOCUSRECT
-    #define ODS_NOFOCUSRECT     0x0200
-#endif
-
-#ifndef DT_HIDEPREFIX
-    #define DT_HIDEPREFIX       0x00100000
-#endif
-
-// set the value for BCM_SETSHIELD (for the UAC shield) if it's not defined in
-// the header
-#ifndef BCM_SETSHIELD
-    #define BCM_SETSHIELD       0x160c
-#endif
-
-#if wxUSE_UXTHEME
-extern wxWindowMSW *wxWindowBeingErased; // From src/msw/window.cpp
-#endif // wxUSE_UXTHEME
-
-// ----------------------------------------------------------------------------
-// button image data
-// ----------------------------------------------------------------------------
-
-// we use different data classes for owner drawn buttons and for themed XP ones
-
-class wxButtonImageData
-{
-public:
-    wxButtonImageData() { }
-    virtual ~wxButtonImageData() { }
-
-    virtual wxBitmap GetBitmap(wxButton::State which) const = 0;
-    virtual void SetBitmap(const wxBitmap& bitmap, wxButton::State which) = 0;
-
-    virtual wxSize GetBitmapMargins() const = 0;
-    virtual void SetBitmapMargins(wxCoord x, wxCoord y) = 0;
-
-    virtual wxDirection GetBitmapPosition() const = 0;
-    virtual void SetBitmapPosition(wxDirection dir) = 0;
-
-private:
-    wxDECLARE_NO_COPY_CLASS(wxButtonImageData);
-};
-
-namespace
-{
-
-// the gap between button edge and the interior area used by Windows for the
-// standard buttons
-const int OD_BUTTON_MARGIN = 4;
-
-class wxODButtonImageData : public wxButtonImageData
-{
-public:
-    wxODButtonImageData(wxButton *btn, const wxBitmap& bitmap)
-    {
-        SetBitmap(bitmap, wxButton::State_Normal);
-        SetBitmap(bitmap.ConvertToDisabled(), wxButton::State_Disabled);
-
-        m_dir = wxLEFT;
-
-        // we use margins when we have both bitmap and text, but when we have
-        // only the bitmap it should take up the entire button area
-        if ( btn->ShowsLabel() )
-        {
-            m_margin.x = btn->GetCharWidth();
-            m_margin.y = btn->GetCharHeight() / 2;
-        }
-    }
-
-    virtual wxBitmap GetBitmap(wxButton::State which) const
-    {
-        return m_bitmaps[which];
-    }
-
-    virtual void SetBitmap(const wxBitmap& bitmap, wxButton::State which)
-    {
-        m_bitmaps[which] = bitmap;
-    }
-
-    virtual wxSize GetBitmapMargins() const
-    {
-        return m_margin;
-    }
-
-    virtual void SetBitmapMargins(wxCoord x, wxCoord y)
-    {
-        m_margin = wxSize(x, y);
-    }
-
-    virtual wxDirection GetBitmapPosition() const
-    {
-        return m_dir;
-    }
-
-    virtual void SetBitmapPosition(wxDirection dir)
-    {
-        m_dir = dir;
-    }
-
-private:
-    // just store the values passed to us to be able to retrieve them later
-    // from the drawing code
-    wxBitmap m_bitmaps[wxButton::State_Max];
-    wxSize m_margin;
-    wxDirection m_dir;
-
-    wxDECLARE_NO_COPY_CLASS(wxODButtonImageData);
-};
-
-#if wxUSE_UXTHEME
-
-// somehow the margin is one pixel greater than the value returned by
-// GetThemeMargins() call
-const int XP_BUTTON_EXTRA_MARGIN = 1;
-
-class wxXPButtonImageData : public wxButtonImageData
-{
-public:
-    // we must be constructed with the size of our images as we need to create
-    // the image list
-    wxXPButtonImageData(wxButton *btn, const wxBitmap& bitmap)
-        : m_iml(bitmap.GetWidth(), bitmap.GetHeight(), true /* use mask */,
-                wxButton::State_Max),
-          m_hwndBtn(GetHwndOf(btn))
-    {
-        // initialize all bitmaps except for the disabled one to normal state
-        for ( int n = 0; n < wxButton::State_Max; n++ )
-        {
-            m_iml.Add(n == wxButton::State_Disabled ? bitmap.ConvertToDisabled()
-                                                    : bitmap);
-        }
-
-        m_data.himl = GetHimagelistOf(&m_iml);
-
-        // no margins by default
-        m_data.margin.left =
-        m_data.margin.right =
-        m_data.margin.top =
-        m_data.margin.bottom = 0;
-
-        // use default alignment
-        m_data.uAlign = BUTTON_IMAGELIST_ALIGN_LEFT;
-
-        UpdateImageInfo();
-    }
-
-    virtual wxBitmap GetBitmap(wxButton::State which) const
-    {
-        return m_iml.GetBitmap(which);
-    }
-
-    virtual void SetBitmap(const wxBitmap& bitmap, wxButton::State which)
-    {
-        m_iml.Replace(which, bitmap);
-
-        UpdateImageInfo();
-    }
-
-    virtual wxSize GetBitmapMargins() const
-    {
-        return wxSize(m_data.margin.left, m_data.margin.top);
-    }
-
-    virtual void SetBitmapMargins(wxCoord x, wxCoord y)
-    {
-        RECT& margin = m_data.margin;
-        margin.left =
-        margin.right = x;
-        margin.top =
-        margin.bottom = y;
-
-        if ( !::SendMessage(m_hwndBtn, BCM_SETTEXTMARGIN, 0, (LPARAM)&margin) )
-        {
-            wxLogDebug("SendMessage(BCM_SETTEXTMARGIN) failed");
-        }
-    }
-
-    virtual wxDirection GetBitmapPosition() const
-    {
-        switch ( m_data.uAlign )
-        {
-            default:
-                wxFAIL_MSG( "invalid image alignment" );
-                // fall through
-
-            case BUTTON_IMAGELIST_ALIGN_LEFT:
-                return wxLEFT;
-
-            case BUTTON_IMAGELIST_ALIGN_RIGHT:
-                return wxRIGHT;
-
-            case BUTTON_IMAGELIST_ALIGN_TOP:
-                return wxTOP;
-
-            case BUTTON_IMAGELIST_ALIGN_BOTTOM:
-                return wxBOTTOM;
-        }
-    }
-
-    virtual void SetBitmapPosition(wxDirection dir)
-    {
-        UINT alignNew;
-        switch ( dir )
-        {
-            default:
-                wxFAIL_MSG( "invalid direction" );
-                // fall through
-
-            case wxLEFT:
-                alignNew = BUTTON_IMAGELIST_ALIGN_LEFT;
-                break;
-
-            case wxRIGHT:
-                alignNew = BUTTON_IMAGELIST_ALIGN_RIGHT;
-                break;
-
-            case wxTOP:
-                alignNew = BUTTON_IMAGELIST_ALIGN_TOP;
-                break;
-
-            case wxBOTTOM:
-                alignNew = BUTTON_IMAGELIST_ALIGN_BOTTOM;
-                break;
-        }
-
-        if ( alignNew != m_data.uAlign )
-        {
-            m_data.uAlign = alignNew;
-            UpdateImageInfo();
-        }
-    }
-
-private:
-    void UpdateImageInfo()
-    {
-        if ( !::SendMessage(m_hwndBtn, BCM_SETIMAGELIST, 0, (LPARAM)&m_data) )
-        {
-            wxLogDebug("SendMessage(BCM_SETIMAGELIST) failed");
-        }
-    }
-
-    // we store image list separately to be able to use convenient wxImageList
-    // methods instead of working with raw HIMAGELIST
-    wxImageList m_iml;
-
-    // store the rest of the data in BCM_SETIMAGELIST-friendly form
-    BUTTON_IMAGELIST m_data;
-
-    // the button we're associated with
-    const HWND m_hwndBtn;
-
-
-    wxDECLARE_NO_COPY_CLASS(wxXPButtonImageData);
-};
-
-#endif // wxUSE_UXTHEME
-
-} // anonymous namespace
-
-// ----------------------------------------------------------------------------
-// macros
-// ----------------------------------------------------------------------------
-
 // ============================================================================
 // implementation
 // ============================================================================
 
 // ----------------------------------------------------------------------------
-// helper functions from wx/msw/private/button.h
-// ----------------------------------------------------------------------------
-
-void wxMSWButton::UpdateMultilineStyle(HWND hwnd, const wxString& label)
-{
-    // update BS_MULTILINE style depending on the new label (resetting it
-    // doesn't seem to do anything very useful but it shouldn't hurt and we do
-    // have to set it whenever the label becomes multi line as otherwise it
-    // wouldn't be shown correctly as we don't use BS_MULTILINE when creating
-    // the control unless it already has new lines in its label)
-    long styleOld = ::GetWindowLong(hwnd, GWL_STYLE),
-         styleNew;
-    if ( label.find(wxT('\n')) != wxString::npos )
-        styleNew = styleOld | BS_MULTILINE;
-    else
-        styleNew = styleOld & ~BS_MULTILINE;
-
-    if ( styleNew != styleOld )
-        ::SetWindowLong(hwnd, GWL_STYLE, styleNew);
-}
-
-wxSize wxMSWButton::GetFittingSize(wxWindow *win,
-                                   const wxSize& sizeLabel,
-                                   int flags)
-{
-    // FIXME: this is pure guesswork, need to retrieve the real button margins
-    wxSize sizeBtn = sizeLabel;
-
-    sizeBtn.x += 3*win->GetCharWidth();
-    sizeBtn.y += win->GetCharHeight()/2;
-
-    // account for the shield UAC icon if we have it
-    if ( flags & Size_AuthNeeded )
-        sizeBtn.x += wxSystemSettings::GetMetric(wxSYS_SMALLICON_X);
-
-    return sizeBtn;
-}
-
-wxSize wxMSWButton::ComputeBestFittingSize(wxControl *btn, int flags)
-{
-    wxClientDC dc(btn);
-
-    wxSize sizeBtn;
-    dc.GetMultiLineTextExtent(btn->GetLabelText(), &sizeBtn.x, &sizeBtn.y);
-
-    return GetFittingSize(btn, sizeBtn, flags);
-}
-
-wxSize wxMSWButton::IncreaseToStdSizeAndCache(wxControl *btn, const wxSize& size)
-{
-    wxSize sizeBtn(size);
-
-    // All buttons have at least the standard height and, unless the user
-    // explicitly wants them to be as small as possible and used wxBU_EXACTFIT
-    // style to indicate this, of at least the standard width too.
-    //
-    // Notice that we really want to make all buttons equally high, otherwise
-    // they look ugly and the existing code using wxBU_EXACTFIT only uses it to
-    // control width and not height.
-
-    // The 50x14 button size is documented in the "Recommended sizing and
-    // spacing" section of MSDN layout article.
-    //
-    // Note that we intentionally don't use GetDefaultSize() here, because
-    // it's inexact -- dialog units depend on this dialog's font.
-    const wxSize sizeDef = btn->ConvertDialogToPixels(wxSize(50, 14));
-    if ( !btn->HasFlag(wxBU_EXACTFIT) )
-    {
-        if ( sizeBtn.x < sizeDef.x )
-            sizeBtn.x = sizeDef.x;
-    }
-    if ( sizeBtn.y < sizeDef.y )
-        sizeBtn.y = sizeDef.y;
-
-    btn->CacheBestSize(sizeBtn);
-
-    return sizeBtn;
-}
-
-// ----------------------------------------------------------------------------
 // creation/destruction
 // ----------------------------------------------------------------------------
 
@@ -461,48 +50,35 @@
                       const wxValidator& validator,
                       const wxString& name)
 {
-    wxString label(lbl);
-    if (label.empty() && wxIsStockID(id))
-    {
-        // On Windows, some buttons aren't supposed to have mnemonics
-        label = wxGetStockLabel
-                (
-                    id,
-                    id == wxID_OK || id == wxID_CANCEL || id == wxID_CLOSE
-                        ? wxSTOCK_NOFLAGS
-                        : wxSTOCK_WITH_MNEMONIC
-                );
-    }
-
-    if ( !CreateControl(parent, id, pos, size, style, validator, name) )
-        return false;
-
-    WXDWORD exstyle;
-    WXDWORD msStyle = MSWGetStyle(style, &exstyle);
-
-    // if the label contains several lines we must explicitly tell the button
-    // about it or it wouldn't draw it correctly ("\n"s would just appear as
-    // black boxes)
-    //
-    // NB: we do it here and not in MSWGetStyle() because we need the label
-    //     value and the label is not set yet when MSWGetStyle() is called
-    msStyle |= wxMSWButton::GetMultilineStyle(label);
-
-    return MSWCreateControl(wxT("BUTTON"), msStyle, pos, size, label, exstyle);
+	return wxAbstractButton::Create(parent, id, lbl, pos, size, style, validator, name);
 }
 
 wxButton::~wxButton()
 {
-    wxTopLevelWindow *tlw = wxDynamicCast(wxGetTopLevelParent(this), wxTopLevelWindow);
+	wxTopLevelWindow *tlw = wxDynamicCast(wxGetTopLevelParent(this), wxTopLevelWindow);
     if ( tlw && tlw->GetTmpDefaultItem() == this )
     {
         UnsetTmpDefault();
     }
+}
 
-    delete m_imageData;
-#if wxUSE_MARKUP
-    delete m_markupText;
-#endif // wxUSE_MARKUP
+WXLRESULT wxButton::MSWWindowProc(WXUINT nMsg, WXWPARAM wParam, WXLPARAM lParam)
+{
+    // when we receive focus, we want to temporarily become the default button in
+    // our parent panel so that pressing "Enter" would activate us -- and when
+    // losing it we should restore the previous default button as well
+    if ( nMsg == WM_SETFOCUS )
+    {
+        SetTmpDefault();
+
+        // let the default processing take place too
+    }
+    else if ( nMsg == WM_KILLFOCUS )
+    {
+        UnsetTmpDefault();
+    }
+
+	return wxAbstractButton::MSWWindowProc(nMsg, wParam, lParam);
 }
 
 // ----------------------------------------------------------------------------
@@ -541,162 +117,7 @@
     return msStyle;
 }
 
-void wxButton::SetLabel(const wxString& label)
-{
-    wxMSWButton::UpdateMultilineStyle(GetHwnd(), label);
-
-    wxButtonBase::SetLabel(label);
-
-#if wxUSE_MARKUP
-    // If we have a plain text label, we shouldn't be using markup any longer.
-    if ( m_markupText )
-    {
-        delete m_markupText;
-        m_markupText = NULL;
-
-        // Unfortunately we don't really know whether we can reset the button
-        // to be non-owner-drawn or not: if we had made it owner-drawn just
-        // because of a call to SetLabelMarkup(), we could, but not if there
-        // were [also] calls to Set{Fore,Back}groundColour(). If it's really a
-        // problem to have button remain owner-drawn forever just because it
-        // had markup label once, we should record the reason for our current
-        // owner-drawnness and check it here.
-    }
-#endif // wxUSE_MARKUP
-}
-
 // ----------------------------------------------------------------------------
-// size management including autosizing
-// ----------------------------------------------------------------------------
-
-void wxButton::AdjustForBitmapSize(wxSize &size) const
-{
-    wxCHECK_RET( m_imageData, wxT("shouldn't be called if no image") );
-
-    // account for the bitmap size
-    const wxSize sizeBmp = m_imageData->GetBitmap(State_Normal).GetSize();
-    const wxDirection dirBmp = m_imageData->GetBitmapPosition();
-    if ( dirBmp == wxLEFT || dirBmp == wxRIGHT )
-    {
-        size.x += sizeBmp.x;
-        if ( sizeBmp.y > size.y )
-            size.y = sizeBmp.y;
-    }
-    else // bitmap on top/below the text
-    {
-        size.y += sizeBmp.y;
-        if ( sizeBmp.x > size.x )
-            size.x = sizeBmp.x;
-    }
-
-    // account for the user-specified margins
-    size += 2*m_imageData->GetBitmapMargins();
-
-    // and also for the margins we always add internally (unless we have no
-    // border at all in which case the button has exactly the same size as
-    // bitmap and so no margins should be used)
-    if ( !HasFlag(wxBORDER_NONE) )
-    {
-        int marginH = 0,
-            marginV = 0;
-#if wxUSE_UXTHEME
-        if ( wxUxThemeEngine::GetIfActive() )
-        {
-            wxUxThemeHandle theme(const_cast<wxButton *>(this), L"BUTTON");
-
-            MARGINS margins;
-            wxUxThemeEngine::Get()->GetThemeMargins(theme, NULL,
-                                                    BP_PUSHBUTTON,
-                                                    PBS_NORMAL,
-                                                    TMT_CONTENTMARGINS,
-                                                    NULL,
-                                                    &margins);
-
-            // XP doesn't draw themed buttons correctly when the client
-            // area is smaller than 8x8 - enforce this minimum size for
-            // small bitmaps
-            size.IncTo(wxSize(8, 8));
-
-            marginH = margins.cxLeftWidth + margins.cxRightWidth
-                        + 2*XP_BUTTON_EXTRA_MARGIN;
-            marginV = margins.cyTopHeight + margins.cyBottomHeight
-                        + 2*XP_BUTTON_EXTRA_MARGIN;
-        }
-        else
-#endif // wxUSE_UXTHEME
-        {
-            marginH =
-            marginV = OD_BUTTON_MARGIN;
-        }
-
-        size.IncBy(marginH, marginV);
-    }
-}
-
-wxSize wxButton::DoGetBestSize() const
-{
-    wxButton * const self = const_cast<wxButton *>(this);
-
-    wxSize size;
-
-    // Account for the text part if we have it.
-    if ( ShowsLabel() )
-    {
-        int flags = 0;
-        if ( GetAuthNeeded() )
-            flags |= wxMSWButton::Size_AuthNeeded;
-
-#if wxUSE_MARKUP
-        if ( m_markupText )
-        {
-            wxClientDC dc(self);
-            size = wxMSWButton::GetFittingSize(self,
-                                               m_markupText->Measure(dc),
-                                               flags);
-        }
-        else // Normal plain text (but possibly multiline) label.
-#endif // wxUSE_MARKUP
-        {
-            size = wxMSWButton::ComputeBestFittingSize(self, flags);
-        }
-    }
-
-    if ( m_imageData )
-        AdjustForBitmapSize(size);
-
-    return wxMSWButton::IncreaseToStdSizeAndCache(self, size);
-}
-
-/* static */
-wxSize wxButtonBase::GetDefaultSize()
-{
-    static wxSize s_sizeBtn;
-
-    if ( s_sizeBtn.x == 0 )
-    {
-        wxScreenDC dc;
-        dc.SetFont(wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT));
-
-        // The size of a standard button in the dialog units is 50x14,
-        // translate this to pixels.
-        //
-        // Windows' computes dialog units using average character width over
-        // upper- and lower-case ASCII alphabet and not using the average
-        // character width metadata stored in the font; see
-        // http://support.microsoft.com/default.aspx/kb/145994 for detailed
-        // discussion.
-        //
-        // NB: wxMulDivInt32() is used, because it correctly rounds the result
-
-        const wxSize base = wxPrivate::GetAverageASCIILetterSize(dc);
-        s_sizeBtn.x = wxMulDivInt32(50, base.x, 4);
-        s_sizeBtn.y = wxMulDivInt32(14, base.y, 8);
-    }
-
-    return s_sizeBtn;
-}
-
-// ----------------------------------------------------------------------------
 // default button handling
 // ----------------------------------------------------------------------------
 
@@ -746,7 +167,7 @@
 wxWindow *wxButton::SetDefault()
 {
     // set this one as the default button both for wxWidgets ...
-    wxWindow *winOldDefault = wxButtonBase::SetDefault();
+    wxWindow *winOldDefault = wxAbstractButtonBase::SetDefault();
 
     // ... and Windows
     SetDefaultStyle(wxDynamicCast(winOldDefault, wxButton), false);
@@ -814,7 +235,7 @@
 
 /* static */
 void
-wxButton::SetDefaultStyle(wxButton *btn, bool on)
+wxButton::SetDefaultStyle(wxAbstractButton *btn, bool on)
 {
     // we may be called with NULL pointer -- simpler to do the check here than
     // in the caller which does wxDynamicCast()
@@ -874,694 +295,9 @@
     return ProcessCommand(event);
 }
 
-void wxButton::Command(wxCommandEvent & event)
+void wxButton::Init()
 {
-    ProcessCommand(event);
 }
 
-// ----------------------------------------------------------------------------
-// event/message handlers
-// ----------------------------------------------------------------------------
-
-bool wxButton::MSWCommand(WXUINT param, WXWORD WXUNUSED(id))
-{
-    bool processed = false;
-    switch ( param )
-    {
-        // NOTE: Apparently older versions (NT 4?) of the common controls send
-        //       BN_DOUBLECLICKED but not a second BN_CLICKED for owner-drawn
-        //       buttons, so in order to send two EVT_BUTTON events we should
-        //       catch both types.  Currently (Feb 2003) up-to-date versions of
-        //       win98, win2k and winXP all send two BN_CLICKED messages for
-        //       all button types, so we don't catch BN_DOUBLECLICKED anymore
-        //       in order to not get 3 EVT_BUTTON events.  If this is a problem
-        //       then we need to figure out which version of the comctl32 changed
-        //       this behaviour and test for it.
-
-        case 1:                     // message came from an accelerator
-        case BN_CLICKED:            // normal buttons send this
-            processed = SendClickEvent();
-            break;
-    }
-
-    return processed;
-}
-
-WXLRESULT wxButton::MSWWindowProc(WXUINT nMsg, WXWPARAM wParam, WXLPARAM lParam)
-{
-    // when we receive focus, we want to temporarily become the default button in
-    // our parent panel so that pressing "Enter" would activate us -- and when
-    // losing it we should restore the previous default button as well
-    if ( nMsg == WM_SETFOCUS )
-    {
-        SetTmpDefault();
-
-        // let the default processing take place too
-    }
-    else if ( nMsg == WM_KILLFOCUS )
-    {
-        UnsetTmpDefault();
-    }
-    else if ( nMsg == WM_LBUTTONDBLCLK )
-    {
-        // emulate a click event to force an owner-drawn button to change its
-        // appearance - without this, it won't do it
-        (void)wxControl::MSWWindowProc(WM_LBUTTONDOWN, wParam, lParam);
-
-        // and continue with processing the message normally as well
-    }
-#if wxUSE_UXTHEME
-    else if ( nMsg == WM_THEMECHANGED )
-    {
-        // need to recalculate the best size here
-        // as the theme size might have changed
-        InvalidateBestSize();
-    }
-#endif // wxUSE_UXTHEME
-    // must use m_mouseInWindow here instead of IsMouseInWindow()
-    // since we need to know the first time the mouse enters the window
-    // and IsMouseInWindow() would return true in this case
-    else if ( (nMsg == WM_MOUSEMOVE && !m_mouseInWindow) ||
-                nMsg == WM_MOUSELEAVE )
-    {
-        if (
-                IsEnabled() &&
-                (
-#if wxUSE_UXTHEME
-                wxUxThemeEngine::GetIfActive() ||
-#endif // wxUSE_UXTHEME
-                 (m_imageData && m_imageData->GetBitmap(State_Current).IsOk())
-                )
-           )
-        {
-            Refresh();
-        }
-    }
-
-    // let the base class do all real processing
-    return wxControl::MSWWindowProc(nMsg, wParam, lParam);
-}
-
-// ----------------------------------------------------------------------------
-// authentication needed handling
-// ----------------------------------------------------------------------------
-
-bool wxButton::DoGetAuthNeeded() const
-{
-    return m_authNeeded;
-}
-
-void wxButton::DoSetAuthNeeded(bool show)
-{
-    // show/hide UAC symbol on Windows Vista and later
-    if ( wxGetWinVersion() >= wxWinVersion_6 )
-    {
-        m_authNeeded = show;
-        ::SendMessage(GetHwnd(), BCM_SETSHIELD, 0, show);
-        InvalidateBestSize();
-    }
-}
-
-// ----------------------------------------------------------------------------
-// button images
-// ----------------------------------------------------------------------------
-
-wxBitmap wxButton::DoGetBitmap(State which) const
-{
-    return m_imageData ? m_imageData->GetBitmap(which) : wxBitmap();
-}
-
-void wxButton::DoSetBitmap(const wxBitmap& bitmap, State which)
-{
-#if wxUSE_UXTHEME
-    wxXPButtonImageData *oldData = NULL;
-#endif // wxUSE_UXTHEME
-
-    // Check if we already had bitmaps of different size.
-    if ( m_imageData &&
-          bitmap.GetSize() != m_imageData->GetBitmap(State_Normal).GetSize() )
-    {
-        wxASSERT_MSG( which == State_Normal,
-                      "Must set normal bitmap with the new size first" );
-
-#if wxUSE_UXTHEME
-        if ( ShowsLabel() && wxUxThemeEngine::GetIfActive() )
-        {
-            // We can't change the size of the images stored in wxImageList
-            // in wxXPButtonImageData::m_iml so force recreating it below but
-            // keep the current data to copy its values into the new one.
-            oldData = static_cast<wxXPButtonImageData *>(m_imageData);
-            m_imageData = NULL;
-        }
-#endif // wxUSE_UXTHEME
-        //else: wxODButtonImageData doesn't require anything special
-    }
-
-    // allocate the image data when the first bitmap is set
-    if ( !m_imageData )
-    {
-#if wxUSE_UXTHEME
-        // using image list doesn't work correctly if we don't have any label
-        // (even if we use BUTTON_IMAGELIST_ALIGN_CENTER alignment and
-        // BS_BITMAP style), at least under Windows 2003 so use owner drawn
-        // strategy for bitmap-only buttons
-        if ( ShowsLabel() && wxUxThemeEngine::GetIfActive() )
-        {
-            m_imageData = new wxXPButtonImageData(this, bitmap);
-
-            if ( oldData )
-            {
-                // Preserve the old values in case the user changed them.
-                m_imageData->SetBitmapPosition(oldData->GetBitmapPosition());
-
-                const wxSize oldMargins = oldData->GetBitmapMargins();
-                m_imageData->SetBitmapMargins(oldMargins.x, oldMargins.y);
-
-                // No need to preserve the bitmaps though as they were of wrong
-                // size anyhow.
-
-                delete oldData;
-            }
-        }
-        else
-#endif // wxUSE_UXTHEME
-        {
-            m_imageData = new wxODButtonImageData(this, bitmap);
-            MakeOwnerDrawn();
-        }
-    }
-    else
-    {
-        m_imageData->SetBitmap(bitmap, which);
-    }
-
-    // it should be enough to only invalidate the best size when the normal
-    // bitmap changes as all bitmaps assigned to the button should be of the
-    // same size anyhow
-    if ( which == State_Normal )
-        InvalidateBestSize();
-
-    Refresh();
-}
-
-wxSize wxButton::DoGetBitmapMargins() const
-{
-    return m_imageData ? m_imageData->GetBitmapMargins() : wxSize(0, 0);
-}
-
-void wxButton::DoSetBitmapMargins(wxCoord x, wxCoord y)
-{
-    wxCHECK_RET( m_imageData, "SetBitmap() must be called first" );
-
-    m_imageData->SetBitmapMargins(x, y);
-    InvalidateBestSize();
-}
-
-void wxButton::DoSetBitmapPosition(wxDirection dir)
-{
-    wxCHECK_RET( m_imageData, "SetBitmap() must be called first" );
-
-    m_imageData->SetBitmapPosition(dir);
-    InvalidateBestSize();
-}
-
-// ----------------------------------------------------------------------------
-// markup support
-// ----------------------------------------------------------------------------
-
-#if wxUSE_MARKUP
-
-bool wxButton::DoSetLabelMarkup(const wxString& markup)
-{
-    if ( !wxButtonBase::DoSetLabelMarkup(markup) )
-        return false;
-
-    if ( !m_markupText )
-    {
-        m_markupText = new wxMarkupText(markup);
-        MakeOwnerDrawn();
-    }
-    else
-    {
-        // We are already owner-drawn so just update the text.
-        m_markupText->SetMarkup(markup);
-    }
-
-    Refresh();
-
-    return true;
-}
-
-#endif // wxUSE_MARKUP
-
-// ----------------------------------------------------------------------------
-// owner-drawn buttons support
-// ----------------------------------------------------------------------------
-
-// drawing helpers
-namespace
-{
-
-// return the button state using both the ODS_XXX flags specified in state
-// parameter and the current button state
-wxButton::State GetButtonState(wxButton *btn, UINT state)
-{
-    if ( state & ODS_DISABLED )
-        return wxButton::State_Disabled;
-
-    if ( state & ODS_SELECTED )
-        return wxButton::State_Pressed;
-
-    if ( btn->HasCapture() || btn->IsMouseInWindow() )
-        return wxButton::State_Current;
-
-    if ( state & ODS_FOCUS )
-        return wxButton::State_Focused;
-
-    return wxButton::State_Normal;
-}
-
-void DrawButtonText(HDC hdc,
-                    RECT *pRect,
-                    wxButton *btn,
-                    int flags)
-{
-    const wxString text = btn->GetLabel();
-
-    if ( text.find(wxT('\n')) != wxString::npos )
-    {
-        // draw multiline label
-
-        // center text horizontally in any case
-        flags |= DT_CENTER;
-
-        // first we need to compute its bounding rect
-        RECT rc;
-        ::CopyRect(&rc, pRect);
-        ::DrawText(hdc, text.wx_str(), text.length(), &rc,
-                   DT_CENTER | DT_CALCRECT);
-
-        // now center this rect inside the entire button area
-        const LONG w = rc.right - rc.left;
-        const LONG h = rc.bottom - rc.top;
-        rc.left = (pRect->right - pRect->left)/2 - w/2;
-        rc.right = rc.left+w;
-        rc.top = (pRect->bottom - pRect->top)/2 - h/2;
-        rc.bottom = rc.top+h;
-
-        ::DrawText(hdc, text.wx_str(), text.length(), &rc, flags);
-    }
-    else // single line label
-    {
-        // translate wx button flags to alignment flags for DrawText()
-        if ( btn->HasFlag(wxBU_RIGHT) )
-        {
-            flags |= DT_RIGHT;
-        }
-        else if ( !btn->HasFlag(wxBU_LEFT) )
-        {
-            flags |= DT_CENTER;
-        }
-        //else: DT_LEFT is the default anyhow (and its value is 0 too)
-
-        if ( btn->HasFlag(wxBU_BOTTOM) )
-        {
-            flags |= DT_BOTTOM;
-        }
-        else if ( !btn->HasFlag(wxBU_TOP) )
-        {
-            flags |= DT_VCENTER;
-        }
-        //else: as above, DT_TOP is the default
-
-        // notice that we must have DT_SINGLELINE for vertical alignment flags
-        // to work
-        ::DrawText(hdc, text.wx_str(), text.length(), pRect,
-                   flags | DT_SINGLELINE );
-    }
-}
-
-void DrawRect(HDC hdc, const RECT& r)
-{
-    wxDrawLine(hdc, r.left, r.top, r.right, r.top);
-    wxDrawLine(hdc, r.right, r.top, r.right, r.bottom);
-    wxDrawLine(hdc, r.right, r.bottom, r.left, r.bottom);
-    wxDrawLine(hdc, r.left, r.bottom, r.left, r.top);
-}
-
-/*
-   The button frame looks like this normally:
-
-   WWWWWWWWWWWWWWWWWWB
-   WHHHHHHHHHHHHHHHHGB  W = white       (HILIGHT)
-   WH               GB  H = light grey  (LIGHT)
-   WH               GB  G = dark grey   (SHADOW)
-   WH               GB  B = black       (DKSHADOW)
-   WH               GB
-   WGGGGGGGGGGGGGGGGGB
-   BBBBBBBBBBBBBBBBBBB
-
-   When the button is selected, the button becomes like this (the total button
-   size doesn't change):
-
-   BBBBBBBBBBBBBBBBBBB
-   BWWWWWWWWWWWWWWWWBB
-   BWHHHHHHHHHHHHHHGBB
-   BWH             GBB
-   BWH             GBB
-   BWGGGGGGGGGGGGGGGBB
-   BBBBBBBBBBBBBBBBBBB
-   BBBBBBBBBBBBBBBBBBB
-
-   When the button is pushed (while selected) it is like:
-
-   BBBBBBBBBBBBBBBBBBB
-   BGGGGGGGGGGGGGGGGGB
-   BG               GB
-   BG               GB
-   BG               GB
-   BG               GB
-   BGGGGGGGGGGGGGGGGGB
-   BBBBBBBBBBBBBBBBBBB
-*/
-void DrawButtonFrame(HDC hdc, RECT& rectBtn,
-                     bool selected, bool pushed)
-{
-    RECT r;
-    CopyRect(&r, &rectBtn);
-
-    AutoHPEN hpenBlack(GetSysColor(COLOR_3DDKSHADOW)),
-             hpenGrey(GetSysColor(COLOR_3DSHADOW)),
-             hpenLightGr(GetSysColor(COLOR_3DLIGHT)),
-             hpenWhite(GetSysColor(COLOR_3DHILIGHT));
-
-    SelectInHDC selectPen(hdc, hpenBlack);
-
-    r.right--;
-    r.bottom--;
-
-    if ( pushed )
-    {
-        DrawRect(hdc, r);
-
-        (void)SelectObject(hdc, hpenGrey);
-        ::InflateRect(&r, -1, -1);
-
-        DrawRect(hdc, r);
-    }
-    else // !pushed
-    {
-        if ( selected )
-        {
-            DrawRect(hdc, r);
-
-            ::InflateRect(&r, -1, -1);
-        }
-
-        wxDrawLine(hdc, r.left, r.bottom, r.right, r.bottom);
-        wxDrawLine(hdc, r.right, r.bottom, r.right, r.top - 1);
-
-        (void)SelectObject(hdc, hpenWhite);
-        wxDrawLine(hdc, r.left, r.bottom - 1, r.left, r.top);
-        wxDrawLine(hdc, r.left, r.top, r.right, r.top);
-
-        (void)SelectObject(hdc, hpenLightGr);
-        wxDrawLine(hdc, r.left + 1, r.bottom - 2, r.left + 1, r.top + 1);
-        wxDrawLine(hdc, r.left + 1, r.top + 1, r.right - 1, r.top + 1);
-
-        (void)SelectObject(hdc, hpenGrey);
-        wxDrawLine(hdc, r.left + 1, r.bottom - 1, r.right - 1, r.bottom - 1);
-        wxDrawLine(hdc, r.right - 1, r.bottom - 1, r.right - 1, r.top);
-    }
-
-    InflateRect(&rectBtn, -OD_BUTTON_MARGIN, -OD_BUTTON_MARGIN);
-}
-
-#if wxUSE_UXTHEME
-void DrawXPBackground(wxButton *button, HDC hdc, RECT& rectBtn, UINT state)
-{
-    wxUxThemeHandle theme(button, L"BUTTON");
-
-    // this array is indexed by wxButton::State values and so must be kept in
-    // sync with it
-    static const int uxStates[] =
-    {
-        PBS_NORMAL, PBS_HOT, PBS_PRESSED, PBS_DISABLED, PBS_DEFAULTED
-    };
-
-    int iState = uxStates[GetButtonState(button, state)];
-
-    wxUxThemeEngine * const engine = wxUxThemeEngine::Get();
-
-    // draw parent background if needed
-    if ( engine->IsThemeBackgroundPartiallyTransparent
-                 (
-                    theme,
-                    BP_PUSHBUTTON,
-                    iState
-                 ) )
-    {
-        // Set this button as the one whose background is being erased: this
-        // allows our WM_ERASEBKGND handler used by DrawThemeParentBackground()
-        // to correctly align the background brush with this window instead of
-        // the parent window to which WM_ERASEBKGND is sent. Notice that this
-        // doesn't work with custom user-defined EVT_ERASE_BACKGROUND handlers
-        // as they won't be aligned but unfortunately all the attempts to fix
-        // it by shifting DC origin before calling DrawThemeParentBackground()
-        // failed to work so we at least do this, even though this is far from
-        // being the perfect solution.
-        wxWindowBeingErased = button;
-
-        engine->DrawThemeParentBackground(GetHwndOf(button), hdc, &rectBtn);
-
-        wxWindowBeingErased = NULL;
-    }
-
-    // draw background
-    engine->DrawThemeBackground(theme, hdc, BP_PUSHBUTTON, iState,
-                                &rectBtn, NULL);
-
-    // calculate content area margins
-    MARGINS margins;
-    engine->GetThemeMargins(theme, hdc, BP_PUSHBUTTON, iState,
-                            TMT_CONTENTMARGINS, &rectBtn, &margins);
-    ::InflateRect(&rectBtn, -margins.cxLeftWidth, -margins.cyTopHeight);
-    ::InflateRect(&rectBtn, -XP_BUTTON_EXTRA_MARGIN, -XP_BUTTON_EXTRA_MARGIN);
-
-    if ( button->UseBgCol() )
-    {
-        COLORREF colBg = wxColourToRGB(button->GetBackgroundColour());
-        AutoHBRUSH hbrushBackground(colBg);
-
-        // don't overwrite the focus rect
-        RECT rectClient;
-        ::CopyRect(&rectClient, &rectBtn);
-        ::InflateRect(&rectClient, -1, -1);
-        FillRect(hdc, &rectClient, hbrushBackground);
-    }
-}
-#endif // wxUSE_UXTHEME
-
-} // anonymous namespace
-
-// ----------------------------------------------------------------------------
-// owner drawn buttons support
-// ----------------------------------------------------------------------------
-
-void wxButton::MakeOwnerDrawn()
-{
-    long style = GetWindowLong(GetHwnd(), GWL_STYLE);
-    if ( (style & BS_OWNERDRAW) != BS_OWNERDRAW )
-    {
-        // make it so
-        style |= BS_OWNERDRAW;
-        SetWindowLong(GetHwnd(), GWL_STYLE, style);
-    }
-}
-
-bool wxButton::SetBackgroundColour(const wxColour &colour)
-{
-    if ( !wxControl::SetBackgroundColour(colour) )
-    {
-        // nothing to do
-        return false;
-    }
-
-    MakeOwnerDrawn();
-
-    Refresh();
-
-    return true;
-}
-
-bool wxButton::SetForegroundColour(const wxColour &colour)
-{
-    if ( !wxControl::SetForegroundColour(colour) )
-    {
-        // nothing to do
-        return false;
-    }
-
-    MakeOwnerDrawn();
-
-    Refresh();
-
-    return true;
-}
-
-bool wxButton::MSWOnDraw(WXDRAWITEMSTRUCT *wxdis)
-{
-    LPDRAWITEMSTRUCT lpDIS = (LPDRAWITEMSTRUCT)wxdis;
-    HDC hdc = lpDIS->hDC;
-
-    UINT state = lpDIS->itemState;
-    bool pushed = (SendMessage(GetHwnd(), BM_GETSTATE, 0, 0) & BST_PUSHED) != 0;
-
-    RECT rectBtn;
-    CopyRect(&rectBtn, &lpDIS->rcItem);
-
-    // draw the button background
-    if ( !HasFlag(wxBORDER_NONE) )
-    {
-#if wxUSE_UXTHEME
-        if ( wxUxThemeEngine::GetIfActive() )
-        {
-            DrawXPBackground(this, hdc, rectBtn, state);
-        }
-        else
-#endif // wxUSE_UXTHEME
-        {
-            COLORREF colBg = wxColourToRGB(GetBackgroundColour());
-
-            // first, draw the background
-            AutoHBRUSH hbrushBackground(colBg);
-            FillRect(hdc, &rectBtn, hbrushBackground);
-
-            // draw the border for the current state
-            bool selected = (state & ODS_SELECTED) != 0;
-            if ( !selected )
-            {
-                wxTopLevelWindow *
-                    tlw = wxDynamicCast(wxGetTopLevelParent(this), wxTopLevelWindow);
-                if ( tlw )
-                {
-                    selected = tlw->GetDefaultItem() == this;
-                }
-            }
-
-            DrawButtonFrame(hdc, rectBtn, selected, pushed);
-        }
-
-        // draw the focus rectangle if we need it
-        if ( (state & ODS_FOCUS) && !(state & ODS_NOFOCUSRECT) )
-        {
-            DrawFocusRect(hdc, &rectBtn);
-
-#if wxUSE_UXTHEME
-            if ( !wxUxThemeEngine::GetIfActive() )
-#endif // wxUSE_UXTHEME
-            {
-                if ( pushed )
-                {
-                    // the label is shifted by 1 pixel to create "pushed" effect
-                    OffsetRect(&rectBtn, 1, 1);
-                }
-            }
-        }
-    }
-
-
-    // draw the image, if any
-    if ( m_imageData )
-    {
-        wxBitmap bmp = m_imageData->GetBitmap(GetButtonState(this, state));
-        if ( !bmp.IsOk() )
-            bmp = m_imageData->GetBitmap(State_Normal);
-
-        const wxSize sizeBmp = bmp.GetSize();
-        const wxSize margin = m_imageData->GetBitmapMargins();
-        const wxSize sizeBmpWithMargins(sizeBmp + 2*margin);
-        wxRect rectButton(wxRectFromRECT(rectBtn));
-
-        // for simplicity, we start with centred rectangle and then move it to
-        // the appropriate edge
-        wxRect rectBitmap = wxRect(sizeBmp).CentreIn(rectButton);
-
-        // move bitmap only if we have a label, otherwise keep it centered
-        if ( ShowsLabel() )
-        {
-            switch ( m_imageData->GetBitmapPosition() )
-            {
-                default:
-                    wxFAIL_MSG( "invalid direction" );
-                    // fall through
-
-                case wxLEFT:
-                    rectBitmap.x = rectButton.x + margin.x;
-                    rectButton.x += sizeBmpWithMargins.x;
-                    rectButton.width -= sizeBmpWithMargins.x;
-                    break;
-
-                case wxRIGHT:
-                    rectBitmap.x = rectButton.GetRight() - sizeBmp.x - margin.x;
-                    rectButton.width -= sizeBmpWithMargins.x;
-                    break;
-
-                case wxTOP:
-                    rectBitmap.y = rectButton.y + margin.y;
-                    rectButton.y += sizeBmpWithMargins.y;
-                    rectButton.height -= sizeBmpWithMargins.y;
-                    break;
-
-                case wxBOTTOM:
-                    rectBitmap.y = rectButton.GetBottom() - sizeBmp.y - margin.y;
-                    rectButton.height -= sizeBmpWithMargins.y;
-                    break;
-            }
-        }
-
-        wxDCTemp dst((WXHDC)hdc);
-        dst.DrawBitmap(bmp, rectBitmap.GetPosition(), true);
-
-        wxCopyRectToRECT(rectButton, rectBtn);
-    }
-
-
-    // finally draw the label
-    if ( ShowsLabel() )
-    {
-        COLORREF colFg = state & ODS_DISABLED
-                            ? ::GetSysColor(COLOR_GRAYTEXT)
-                            : wxColourToRGB(GetForegroundColour());
-
-        wxTextColoursChanger changeFg(hdc, colFg, CLR_INVALID);
-        wxBkModeChanger changeBkMode(hdc, wxBRUSHSTYLE_TRANSPARENT);
-
-#if wxUSE_MARKUP
-        if ( m_markupText )
-        {
-            wxDCTemp dc((WXHDC)hdc);
-            dc.SetTextForeground(wxColour(colFg));
-            dc.SetFont(GetFont());
-
-            m_markupText->Render(dc, wxRectFromRECT(rectBtn),
-                                 state & ODS_NOACCEL
-                                    ? wxMarkupText::Render_Default
-                                    : wxMarkupText::Render_ShowAccels);
-        }
-        else // Plain text label
-#endif // wxUSE_MARKUP
-        {
-            // notice that DT_HIDEPREFIX doesn't work on old (pre-Windows 2000)
-            // systems but by happy coincidence ODS_NOACCEL is not used under
-            // them neither so DT_HIDEPREFIX should never be used there
-            DrawButtonText(hdc, &rectBtn, this,
-                           state & ODS_NOACCEL ? DT_HIDEPREFIX : 0);
-        }
-    }
-
-    return true;
-}
-
 #endif // wxUSE_BUTTON
 
Index: src/msw/tglbtn.cpp
===================================================================
--- src/msw/tglbtn.cpp	(revision 67411)
+++ src/msw/tglbtn.cpp	(working copy)
@@ -54,202 +54,11 @@
 // implementation
 // ============================================================================
 
-//-----------------------------------------------------------------------------
-// wxBitmapToggleButton
-//-----------------------------------------------------------------------------
-
-IMPLEMENT_DYNAMIC_CLASS(wxBitmapToggleButton, wxControl)
-
-BEGIN_EVENT_TABLE(wxBitmapToggleButton,wxToggleButtonBase)
-   EVT_PAINT(wxBitmapToggleButton::OnPaint)
-   EVT_MOUSE_EVENTS(wxBitmapToggleButton::OnMouse)
-   EVT_CHAR(wxBitmapToggleButton::OnChar)
-   EVT_SIZE(wxBitmapToggleButton::OnSize)
-END_EVENT_TABLE()
-
-void wxBitmapToggleButton::Init()
-{
-    m_depressed = false;
-    m_oldValue = false;
-    m_capturing = false;
-}
-
-bool wxBitmapToggleButton::Create( wxWindow *parent, wxWindowID id,
-                const wxBitmap& label,const wxPoint& pos, const wxSize& size, long style,
-                const wxValidator& validator, const wxString& name )
-{
-    Init();
-
-    if (!wxToggleButtonBase::Create( parent, id, pos, size, style, validator, name ))
-        return false;
-
-    m_bitmap = label;
-
-    if (size.x == -1 || size.y == -1)
-    {
-        wxSize new_size = GetBestSize();
-        if (size.x != -1)
-            new_size.x = size.x;
-        if (size.y != -1)
-            new_size.y = size.y;
-        SetSize( new_size );
-    }
-
-    return true;
-}
-
-void wxBitmapToggleButton::SetValue(bool state)
-{
-    if (m_capturing) return;
-
-    if (state == m_depressed) return;
-
-    m_depressed = state;
-    Refresh();
-}
-
-bool wxBitmapToggleButton::GetValue() const
-{
-    return m_depressed;
-}
-
-void wxBitmapToggleButton::SetLabel(const wxBitmap& label)
-{
-    m_bitmap = label;
-    m_disabledBitmap = wxBitmap();
-
-    Refresh();
-}
-
-bool wxBitmapToggleButton::Enable(bool enable)
-{
-    if (m_capturing) return false;
-
-    if (!wxToggleButtonBase::Enable( enable ))
-      return false;
-
-    Refresh();
-
-    return true;
-}
-
-void wxBitmapToggleButton::OnPaint(wxPaintEvent &WXUNUSED(event))
-{
-    wxSize size = GetSize();
-
-    wxBitmap bitmap = m_bitmap;
-
-    wxPaintDC dc(this);
-    wxRendererNative &renderer = wxRendererNative::Get();
-    int flags = 0;
-    if (m_depressed)
-        flags |= wxCONTROL_PRESSED;
-    wxRect rect(0,0,size.x,size.y);
-    renderer.DrawPushButton( this, dc, rect, flags );
-
-    if (bitmap.IsOk())
-    {
-        if (!IsEnabled())
-        {
-            if (!m_disabledBitmap.IsOk())
-            {
-                wxImage image = m_bitmap.ConvertToImage();
-                m_disabledBitmap = wxBitmap( image.ConvertToGreyscale() );
-            }
-
-            bitmap = m_disabledBitmap;
-        }
-
-        wxSize bsize = bitmap.GetSize();
-        int offset = 0;
-        if (m_depressed) offset = 1;
-        dc.DrawBitmap( bitmap, (size.x-bsize.x) / 2 + offset, (size.y-bsize.y) / 2 + offset, true );
-    }
-
-}
-
-void wxBitmapToggleButton::OnMouse(wxMouseEvent &event)
-{
-    if (!IsEnabled())
-        return;
-
-    wxSize size = GetSize();
-    bool mouse_in = ((event.GetX() > 0) && (event.GetX() < size.x) &&
-                     (event.GetY() > 0) && (event.GetY() < size.y));
-
-    if (m_capturing)
-    {
-        bool old_depressed = m_depressed;
-        if (mouse_in)
-            m_depressed = !m_oldValue;
-        else
-            m_depressed = m_oldValue;
-
-        if (event.LeftUp())
-        {
-            ReleaseMouse();
-            m_capturing = false;
-            if (mouse_in)
-            {
-                wxCommandEvent event(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, m_windowId);
-                event.SetInt(GetValue());
-                event.SetEventObject(this);
-                ProcessCommand(event);
-            }
-        }
-
-        if (old_depressed != m_depressed)
-           Refresh();
-    }
-    else
-    {
-        if (event.LeftDown())
-        {
-            m_capturing = true;
-            m_oldValue = m_depressed;
-            m_depressed = !m_oldValue;
-            CaptureMouse();
-            Refresh();
-        }
-    }
-}
-
-void wxBitmapToggleButton::OnChar(wxKeyEvent &event)
-{
-   if (event.GetKeyCode() == WXK_SPACE)
-   {
-       m_depressed = !m_depressed;
-       Refresh();
-
-       wxCommandEvent event(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, m_windowId);
-       event.SetInt(GetValue());
-       event.SetEventObject(this);
-       ProcessCommand(event);
-   }
-}
-
-void wxBitmapToggleButton::OnSize(wxSizeEvent &WXUNUSED(event))
-{
-    Refresh();
-}
-
-wxSize wxBitmapToggleButton::DoGetBestSize() const
-{
-    if (!m_bitmap.IsOk())
-        return wxSize(16,16);
-
-    wxSize ret = m_bitmap.GetSize();
-    ret.x += 8;
-    ret.y += 8;
-    return ret;
-}
-
-
 // ----------------------------------------------------------------------------
 // wxToggleButton
 // ----------------------------------------------------------------------------
 
-IMPLEMENT_DYNAMIC_CLASS(wxToggleButton, wxControl)
+IMPLEMENT_DYNAMIC_CLASS(wxToggleButton, wxAbstractButton)
 
 // Single check box item
 bool wxToggleButton::Create(wxWindow *parent,
@@ -260,27 +69,30 @@
                             const wxValidator& validator,
                             const wxString& name)
 {
-    if ( !CreateControl(parent, id, pos, size, style, validator, name) )
-        return false;
+    bool success =
+        wxAbstractButton::Create(parent, id, label, pos, size, style, validator, name);
 
-    // if the label contains several lines we must explicitly tell the button
-    // about it or it wouldn't draw it correctly ("\n"s would just appear as
-    // black boxes)
-    //
-    // NB: we do it here and not in MSWGetStyle() because we need the label
-    //     value and the label is not set yet when MSWGetStyle() is called
-    WXDWORD exstyle;
-    WXDWORD msStyle = MSWGetStyle(style, &exstyle);
-    msStyle |= wxMSWButton::GetMultilineStyle(label);
+    if(success)
+    {
+		// Make sure that the shadow variable and button states are in sync
+        SetValue(selected);
+    }
 
-    return MSWCreateControl(wxT("BUTTON"), msStyle, pos, size, label, exstyle);
+    return success;
 }
 
+bool wxToggleButton::MSWCommand(WXUINT WXUNUSED(param), WXWORD WXUNUSED(id))
+{
+	SendClickEvent();
+
+	return true;
+}
+
 WXDWORD wxToggleButton::MSWGetStyle(long style, WXDWORD *exstyle) const
 {
     WXDWORD msStyle = wxControl::MSWGetStyle(style, exstyle);
 
-    msStyle |= BS_AUTOCHECKBOX | BS_PUSHLIKE | WS_TABSTOP;
+    msStyle |= BS_CHECKBOX | BS_PUSHLIKE | WS_TABSTOP;
 
     if ( style & wxBU_LEFT )
       msStyle |= BS_LEFT;
@@ -294,26 +106,21 @@
     return msStyle;
 }
 
-wxSize wxToggleButton::DoGetBestSize() const
+void wxToggleButton::SetValue(bool val)
 {
-    return wxMSWButton::ComputeBestSize(const_cast<wxToggleButton *>(this));
-}
+    // The text only case requires Windows to know the state
+    ::SendMessage(GetHwnd(), BM_SETCHECK, val, 0);
 
-void wxToggleButton::SetLabel(const wxString& label)
-{
-    wxMSWButton::UpdateMultilineStyle(GetHwnd(), label);
+	// But the bitmap & bitmap + label cases rely on a shadow
+	// variable
+    selected = val;
 
-    wxToggleButtonBase::SetLabel(label);
+	Refresh();
 }
 
-void wxToggleButton::SetValue(bool val)
-{
-   ::SendMessage(GetHwnd(), BM_SETCHECK, val, 0);
-}
-
 bool wxToggleButton::GetValue() const
 {
-    return ::SendMessage(GetHwnd(), BM_GETCHECK, 0, 0) == BST_CHECKED;
+    return selected;
 }
 
 void wxToggleButton::Command(wxCommandEvent& event)
@@ -322,13 +129,63 @@
     ProcessCommand(event);
 }
 
-bool wxToggleButton::MSWCommand(WXUINT WXUNUSED(param), WXWORD WXUNUSED(id))
+bool wxToggleButton::SendClickEvent()
 {
+	// Do the toggle here
+	SetValue(!selected);
+
     wxCommandEvent event(wxEVT_COMMAND_TOGGLEBUTTON_CLICKED, m_windowId);
-    event.SetInt(GetValue());
+    event.SetInt(selected);
     event.SetEventObject(this);
     ProcessCommand(event);
     return true;
 }
 
+enum wxAbstractButtonBase::State wxToggleButton::GetButtonState(UINT state)
+{
+    if ( state & ODS_DISABLED )
+        return wxButton::State_Disabled;
+
+	if ( HasCapture() || IsMouseInWindow() )
+        return wxButton::State_Current;
+
+    if ( selected || state & ODS_SELECTED || state & ODS_CHECKED )
+        return wxButton::State_Pressed;
+
+    if ( state & ODS_FOCUS )
+        return wxButton::State_Focused;
+
+    return wxButton::State_Normal;
+}
+
+void wxToggleButton::Init()
+{
+	selected = false;
+}
+
+
+//-----------------------------------------------------------------------------
+// wxBitmapToggleButton
+//-----------------------------------------------------------------------------
+
+IMPLEMENT_DYNAMIC_CLASS(wxBitmapToggleButton, wxToggleButton)
+
+bool wxBitmapToggleButton::Create( wxWindow *parent, wxWindowID id,
+                const wxBitmap& label,const wxPoint& pos, const wxSize& size, long style,
+                const wxValidator& validator, const wxString& name )
+{
+    Init();
+
+    if (!wxToggleButton::Create( parent, id, wxT(""), pos, size, style, validator, name ))
+        return false;
+
+    SetBitmap(label);
+
+    return true;
+}
+
+void wxBitmapToggleButton::Init()
+{
+}
+
 #endif // wxUSE_TOGGLEBTN
