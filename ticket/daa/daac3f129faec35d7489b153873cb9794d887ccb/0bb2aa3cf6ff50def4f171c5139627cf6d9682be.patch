Only in c:\supp\wxWindows: Debug
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ c:\wxWindows/include/wx/object.h c:\supp\wxWindows/include/wx/object.h
--- c:\wxWindows/include/wx/object.h	Sun Aug 17 14:53:51 2003
+++ c:\supp\wxWindows/include/wx/object.h	Tue Sep  2 13:05:08 2003
@@ -161,7 +161,8 @@
 #define DECLARE_DYNAMIC_CLASS(name)           \
  public:                                      \
-  static wxClassInfo sm_class##name;          \
+  static wxClassInfo sm_classInfo;            \
+  static wxObject* wxCreateObject();          \
   virtual wxClassInfo *GetClassInfo() const   \
-   { return &name::sm_class##name; }
+   { return &name::sm_classInfo; }
 
 #define DECLARE_DYNAMIC_CLASS_NO_ASSIGN(name)   \
@@ -183,21 +184,21 @@
 
 #define IMPLEMENT_DYNAMIC_CLASS(name, basename)                 \
- wxObject* wxConstructorFor##name()                             \
+ wxObject* name::wxCreateObject()                             \
   { return new name; }                                          \
- wxClassInfo name::sm_class##name(wxT(#name),                   \
-            &basename::sm_class##basename, NULL,                \
+ wxClassInfo name::sm_classInfo(wxT(#name),                     \
+            &basename::sm_classInfo, NULL,                      \
             (int) sizeof(name),                                 \
-            (wxObjectConstructorFn) wxConstructorFor##name);
+            (wxObjectConstructorFn) name::wxCreateObject);
 
     // Multiple inheritance with two base classes
 
 #define IMPLEMENT_DYNAMIC_CLASS2(name, basename1, basename2)    \
- wxObject* wxConstructorFor##name()                             \
+ wxObject* name::wxCreateObject()                             \
   { return new name; }                                          \
- wxClassInfo name::sm_class##name(wxT(#name),                   \
-            &basename1::sm_class##basename1,                    \
-            &basename2::sm_class##basename2,                    \
+ wxClassInfo name::sm_classInfo(wxT(#name),                     \
+            &basename1::sm_classInfo,                           \
+            &basename2::sm_classInfo,                           \
             wxT(#basename2), (int) sizeof(name),                \
-            (wxObjectConstructorFn) wxConstructorFor##name);
+            (wxObjectConstructorFn) name::wxCreateObject);
 
 // -----------------------------------
@@ -208,6 +209,6 @@
 
 #define IMPLEMENT_ABSTRACT_CLASS(name, basename)                \
- wxClassInfo name::sm_class##name(wxT(#name),                   \
-            &basename::sm_class##basename, NULL,                \
+ wxClassInfo name::sm_classInfo(wxT(#name),                     \
+            &basename::sm_classInfo, NULL,                      \
             (int) sizeof(name), (wxObjectConstructorFn) 0);
 
@@ -215,7 +216,7 @@
 
 #define IMPLEMENT_ABSTRACT_CLASS2(name, basename1, basename2)   \
- wxClassInfo name::sm_class##name(wxT(#name),                   \
-            &basename1::sm_class##basename1,                    \
-            &basename2::sm_class##basename2,                    \
+ wxClassInfo name::sm_classInfo(wxT(#name),                     \
+            &basename1::sm_classInfo,                           \
+            &basename2::sm_classInfo,                           \
             (int) sizeof(name),                                 \
             (wxObjectConstructorFn) 0);
@@ -294,5 +295,5 @@
  IMPLEMENT_ABSTRACT_PLUGGABLE_CLASS2(name, basename1, basename2)
 
-#define CLASSINFO(name) (&name::sm_class##name)
+#define CLASSINFO(name) (&name::sm_classInfo)
 
 #else // !wxUSE_DYNAMIC_CLASSES
@@ -326,17 +327,17 @@
 #endif // wxUSE_DYNAMIC_CLASSES
 
-#define wxIS_KIND_OF(obj, className) obj->IsKindOf(&className::sm_class##className)
+#define wxIS_KIND_OF(obj, className) obj->IsKindOf(&className::sm_classInfo)
 
 // Just seems a bit nicer-looking (pretend it's not a macro)
-#define wxIsKindOf(obj, className) obj->IsKindOf(&className::sm_class##className)
+#define wxIsKindOf(obj, className) obj->IsKindOf(&className::sm_classInfo)
 
 // to be replaced by dynamic_cast<> in the future
 #define wxDynamicCast(obj, className) \
- ((className *) wxCheckDynamicCast((wxObject*)(obj), &className::sm_class##className))
+ ((className *) wxCheckDynamicCast((wxObject*)(obj), &className::sm_classInfo))
 
 // The 'this' pointer is always true, so use this version
 // to cast the this pointer and avoid compiler warnings.
 #define wxDynamicCastThis(className) \
- (IsKindOf(&className::sm_class##className) ? (className *)(this) : (className *)0)
+ (IsKindOf(&className::sm_classInfo) ? (className *)(this) : (className *)0)
 
 #ifdef HAVE_CONST_CAST
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ c:\wxWindows/src/common/module.cpp c:\supp\wxWindows/src/common/module.cpp
--- c:\wxWindows/src/common/module.cpp	Sat Aug  9 07:45:47 2003
+++ c:\supp\wxWindows/src/common/module.cpp	Tue Sep  2 13:03:19 2003
@@ -55,5 +55,5 @@
         classInfo = (wxClassInfo *)node->GetData();
         if ( classInfo->IsKindOf(CLASSINFO(wxModule)) &&
-            (classInfo != (& (wxModule::sm_classwxModule))) )
+            (classInfo != (& (wxModule::sm_classInfo))) )
         {
             wxModule* module = (wxModule *)classInfo->CreateObject();
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x*~ c:\wxWindows/src/common/object.cpp c:\supp\wxWindows/src/common/object.cpp
--- c:\wxWindows/src/common/object.cpp	Sun Aug 24 18:41:05 2003
+++ c:\supp\wxWindows/src/common/object.cpp	Tue Sep  2 13:03:19 2003
@@ -69,5 +69,5 @@
  wxClassTypeInfo s_typeInfowxObject(wxT_OBJECT , &wxObject::sm_classwxObject , NULL , NULL , typeid(wxObject).name() ) ; 
 #else
-wxClassInfo wxObject::sm_classwxObject( wxT("wxObject"), 0, 0,
+wxClassInfo wxObject::sm_classInfo( wxT("wxObject"), 0, 0,
                                         (int) sizeof(wxObject),
                                         (wxObjectConstructorFn) 0 );

 	  	 
