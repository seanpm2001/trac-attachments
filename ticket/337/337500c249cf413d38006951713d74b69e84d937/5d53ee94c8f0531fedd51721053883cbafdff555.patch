Index: thread.cpp
===================================================================
--- thread.cpp	(revision 53407)
+++ thread.cpp	(working copy)
@@ -584,28 +584,86 @@
 {
     m_priority = priority;
 
-    // translate wxWidgets priority to the Windows one
-    int win_priority;
-    if (m_priority <= 20)
-        win_priority = THREAD_PRIORITY_LOWEST;
-    else if (m_priority <= 40)
-        win_priority = THREAD_PRIORITY_BELOW_NORMAL;
-    else if (m_priority <= 60)
-        win_priority = THREAD_PRIORITY_NORMAL;
-    else if (m_priority <= 80)
-        win_priority = THREAD_PRIORITY_ABOVE_NORMAL;
-    else if (m_priority <= 100)
-        win_priority = THREAD_PRIORITY_HIGHEST;
-    else
-    {
-        wxFAIL_MSG(wxT("invalid value of thread priority parameter"));
-        win_priority = THREAD_PRIORITY_NORMAL;
-    }
+#if defined(__WXWINCE__) || defined(__WINCE_NET__)
+	int wince_priority;
+	
+	if(WXTHREAD_REALTIME_IS_CUSTOM_PRIORITY(m_priority))
+	{
+		wince_priority = WXTHREAD_REALTIME_GET_CUSTOM_PRIORITY(m_priority);
+	}
+	else if(m_priority >= WXTHREAD_REALTIME_MIN_PRIORITY)
+	{
+		if (m_priority <= WXTHREAD_REALTIME_MIN_PRIORITY+20)
+			wince_priority = 247;
+		else if (m_priority <= WXTHREAD_REALTIME_MIN_PRIORITY+40)
+			wince_priority = 200;
+		else if (m_priority <= WXTHREAD_REALTIME_MIN_PRIORITY+60)
+			wince_priority = 124;
+		else if (m_priority <= WXTHREAD_REALTIME_MIN_PRIORITY+80)
+			wince_priority = 48;
+		else if (m_priority <= WXTHREAD_REALTIME_MAX_PRIORITY)
+			wince_priority = 0;
+		else
+		{
+			wxFAIL_MSG(wxT("invalid value of thread real time priority parameter"));
+			wince_priority = 251;
+		}
+	}
+	else
+	{
+		if (m_priority <= 20)
+			wince_priority = 253; // (=LOWEST)
+		else if (m_priority <= 40)
+			wince_priority = 252; // (=BELOW_NORMAL)
+		else if (m_priority <= 60)
+			wince_priority = 251; // (=NORMAL)
+		else if (m_priority <= 80)
+			wince_priority = 250; // (=ABOVE_NORMAL)
+		else if (m_priority <= 100)
+			wince_priority = 249; // (=HIGHEST)
+		else
+		{
+			wxFAIL_MSG(wxT("invalid value of thread priority parameter"));
+			wince_priority = 251; // (=NORMAL)
+		}
+	}
 
-    if ( !::SetThreadPriority(m_hThread, win_priority) )
-    {
-        wxLogSysError(_("Can't set thread priority"));
-    }
+	if(!::CeSetThreadPriority(m_hThread, wince_priority))
+	{
+		wxLogSysError(_("Can't set thread priority"));
+	}
+
+#else // standard windows
+	int win_priority;
+
+	if(WXTHREAD_REALTIME_IS_CUSTOM_PRIORITY(m_priority))
+	{
+		win_priority = THREAD_PRIORITY_TIME_CRITICAL;
+	}
+	else
+	{
+		if (m_priority <= 20)
+			win_priority = THREAD_PRIORITY_LOWEST;
+		else if (m_priority <= 40)
+			win_priority = THREAD_PRIORITY_BELOW_NORMAL;
+		else if (m_priority <= 60)
+			win_priority = THREAD_PRIORITY_NORMAL;
+		else if (m_priority <= 80)
+			win_priority = THREAD_PRIORITY_ABOVE_NORMAL;
+		else if (m_priority <= 100)
+			win_priority = THREAD_PRIORITY_HIGHEST;
+		else
+		{
+			wxFAIL_MSG(wxT("invalid value of thread priority parameter"));
+			win_priority = THREAD_PRIORITY_NORMAL;
+		}
+	}
+
+	if ( !::SetThreadPriority(m_hThread, win_priority) )
+	{
+		wxLogSysError(_("Can't set thread priority"));
+	}
+#endif
 }
 
 bool wxThreadInternal::Create(wxThread *thread, unsigned int stackSize)

 	  	 
