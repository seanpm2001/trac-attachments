diff -r -U 2 -xCVS -x'.#*' -x'*.orig' -x'*.rej' -x'*~' wxWidgets-2.8-orig/src/mac/carbon/filedlg.cpp wxWidgets-2.8/src/mac/carbon/filedlg.cpp
--- wxWidgets-2.8-orig/src/mac/carbon/filedlg.cpp	2006-11-21 16:56:54.000000000 +0200
+++ wxWidgets-2.8/src/mac/carbon/filedlg.cpp	2007-03-07 15:36:59.000000000 +0200
@@ -270,25 +278,45 @@
     NavFilterModes filterMode )
 {
-    bool display = true;
     OpenUserDataRecPtr data = (OpenUserDataRecPtr) callBackUD ;
 
     if (filterMode == kNavFilteringBrowserList)
     {
+		// We allow navigation to all folders. For files, we check against the current
+		// filter string.
+		// However, packages should be dealt with like files and not like folders. So
+		// check if a folder is a package before deciding what to do.
+		FSRef fsref;
         NavFileOrFolderInfo* theInfo = (NavFileOrFolderInfo*) info ;
-        if ( !theInfo->isFolder )
-        {
-            AECoerceDesc (theItem, typeFSRef, theItem); 
-            
-            FSRef fsref ;
-            if ( AEGetDescData (theItem, &fsref, sizeof (FSRef)) == noErr )
-            {
-                memcpy( &fsref , *theItem->dataHandle , sizeof(FSRef) ) ;
-                wxString file = wxMacFSRefToPath( &fsref ) ;
-                display = CheckFile( file , theInfo->fileAndFolder.fileInfo.finderInfo.fdType , data ) ;
-            }
-        }
+		AECoerceDesc (theItem, typeFSRef, theItem);
+		if ( AEGetDescData (theItem, &fsref, sizeof (FSRef)) != noErr)
+			return (true);
+
+		if (theInfo->isFolder) {
+			// check bundle bit (using Finder Services - used by OS9 on some bundles)
+			FileInfo *fileInfo;
+			FSCatalogInfo catalogInfo;
+			fileInfo = (FileInfo *) catalogInfo.finderInfo;
+			if (FSGetCatalogInfo (&fsref, kFSCatInfoFinderInfo, &catalogInfo, NULL, NULL, NULL) != noErr)
+				return (true);
+			
+			// Check bundle item (using Launch Services - used by OS-X through info.plist or APP)
+			LSItemInfoRecord  lsInfo;
+			if (LSCopyItemInfoForRef(&fsref, kLSRequestBasicFlagsOnly, &lsInfo ) != noErr)
+				return (true);
+			
+			// If it's not a bundle, then it's a normal folder and it passes our filter
+			if (((fileInfo->finderFlags & kHasBundle) == 0) &&
+				((lsInfo.flags & kLSItemInfoIsApplication) == 0) &&
+				((lsInfo.flags & kLSItemInfoIsPackage) == 0))
+				return (true);
+		}
+		
+        wxString file = wxMacFSRefToPath( &fsref ) ;
+        bool display = CheckFile( file , theInfo->fileAndFolder.fileInfo.finderInfo.fdType , data ) ;
+		return (display);
+		
     }
 
-    return display;
+    return true;
 }
 

 	  	 
