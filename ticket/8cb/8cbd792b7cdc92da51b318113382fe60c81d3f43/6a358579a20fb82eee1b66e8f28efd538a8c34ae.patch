Index: src/mac/carbon/toplevel.cpp
===================================================================
--- src/mac/carbon/toplevel.cpp	(revision 47229)
+++ src/mac/carbon/toplevel.cpp	(working copy)
@@ -321,6 +321,27 @@
         }
     }
 
+#if defined(TARGET_API_MAC_OSX) && (MAC_OS_X_VERSION_MAX_ALLOWED >= MAC_OS_X_VERSION_10_1)
+    // Handle chorded mouse buttons on 10.1+:
+    if(cEvent.GetKind() == kEventMouseDown
+            || cEvent.GetKind() == kEventMouseDragged)
+    {
+        UInt32 mouseChord = 0;
+        cEvent.GetParameter<UInt32>( kEventParamMouseChord, typeUInt32 , &mouseChord ) ;
+        // Adjust the chord mask to remove the primary button and add the
+        // secondary button.  It is possible that the secondary button is
+        // already pressed, e.g. on a mouse connected to a laptop, but this
+        // possibility is ignored here:
+        if( thisButtonIsFakeRight )
+            mouseChord = ((mouseChord & ~1U) | 2U);
+
+        // Set the currently pressed buttons:
+        if(mouseChord & 1U) wxevent.m_leftDown = true ;
+        if(mouseChord & 2U) wxevent.m_rightDown = true ;
+        if(mouseChord & 4U) wxevent.m_middleDown = true ;
+    }
+#endif
+
     // translate into wx types
     switch ( cEvent.GetKind() )
     {
@@ -379,9 +400,13 @@
         }
         break ;
 
-        default :
-            wxevent.SetEventType( wxEVT_MOTION ) ;
-            break ;
+     case kEventMouseMoved:
+     case kEventMouseDragged:
+        wxevent.SetEventType( wxEVT_MOTION ) ;
+        break ;
+
+     default :
+        break ;
     }
 }
 

 	  	 
