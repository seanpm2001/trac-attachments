Index: docs/latex/wx/datetime.tex
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/docs/latex/wx/datetime.tex,v
retrieving revision 1.13
diff -b -u -2 -r1.13 datetime.tex
--- docs/latex/wx/datetime.tex	2002/08/22 20:14:47	1.13
+++ docs/latex/wx/datetime.tex	2002/11/02 05:38:09
@@ -236,4 +236,5 @@
 \helpref{Set(h, m, s, ms)}{wxdatetimesettime}\\
 \helpref{Set(day, mon, year, h, m, s, ms)}{wxdatetimesetdate}\\
+\helpref{SetFromDos(unsigned long ddt)}{wxdatetimesetfromdos}\\
 \helpref{ResetTime}{wxdatetimeresettime}\\
 \helpref{SetYear}{wxdatetimesetyear}\\
@@ -269,5 +270,6 @@
 \helpref{GetYearDay}{wxdatetimegetyearday}\\
 \helpref{IsWorkDay}{wxdatetimeisworkday}\\
-\helpref{IsGregorianDate}{wxdatetimeisgregoriandate}
+\helpref{IsGregorianDate}{wxdatetimeisgregoriandate}\\
+\helpref{GetAsDos}{wxdatetimegetasdos}
 
 \membersection{Date comparison}
@@ -882,4 +884,18 @@
 Gregorian calendar in the given country (and hence the Gregorian calendar
 calculations make sense for it).
+
+%%%%%%%%%%%%%%%%%%%%%% dos date and time format %%%%%%%%%%%%%%%%%%%%%%%
+
+\membersection{wxDateTime::SetFromDos}\label{wxdatetimesetfromdos}
+
+\func{wxDateTime\&}{Set}{\param{unsigned long }{ddt}}
+
+Sets the date from the dos date and time format.
+
+\membersection{wxDateTime::GetAsDos}\label{wxdatetimegetasdos}
+
+\constfunc{unsigned long}{GetAsDos}{\void}
+
+Returns the dos date and time format.
 
 %%%%%%%%%%%%%%%%%%%%%%%%%%% comparison %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Index: include/wx/datetime.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/datetime.h,v
retrieving revision 1.34
diff -b -u -2 -r1.34 datetime.h
--- include/wx/datetime.h	2002/08/31 11:29:09	1.34
+++ include/wx/datetime.h	2002/11/02 05:38:11
@@ -844,4 +844,10 @@
     bool IsGregorianDate(GregorianAdoption country = Gr_Standard) const;
 
+    // dos date and time format
+    // ------------------------------------------------------------------------
+
+    wxDateTime& SetFromDos(unsigned long ddt);
+    unsigned long GetAsDos() const;
+
     // comparison (see also functions below for operator versions)
     // ------------------------------------------------------------------------
Index: src/common/datetime.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/common/datetime.cpp,v
retrieving revision 1.70
diff -b -u -2 -r1.70 datetime.cpp
--- src/common/datetime.cpp	2002/09/08 23:12:19	1.70
+++ src/common/datetime.cpp	2002/11/02 05:38:16
@@ -1249,4 +1249,79 @@
 
 // ----------------------------------------------------------------------------
+// DOS Date and Time Format functions
+// ----------------------------------------------------------------------------
+// the dos date and time value is an unsigned 32 bit value in the format:
+// YYYYYYYMMMMDDDDDhhhhhmmmmmmsssss
+//
+// Y = year offset from 1980 (0-127)
+// M = month (1-12)
+// D = day of month (1-31)
+// h = hour (0-23)
+// m = minute (0-59)
+// s = bisecond (0-29) each bisecond indicates two seconds
+// ----------------------------------------------------------------------------
+wxDateTime& wxDateTime::SetFromDos(unsigned long ddt)
+{
+    struct tm tm;
+
+    long year = ddt & 0xFE000000;
+    year >>= 25;
+    year += 80;
+    tm.tm_year = year;
+
+    long month = ddt & 0x1E00000;
+    month >>= 21;
+    month -= 1;
+    tm.tm_mon = month;
+
+    long day = ddt & 0x1F0000;
+    day >>= 16;
+    tm.tm_mday = day;
+
+    long hour = ddt & 0xF800;
+    hour >>= 11;
+    tm.tm_hour = hour;
+
+    long minute = ddt & 0x7E0;
+    minute >>= 5;
+    tm.tm_min = minute;
+
+    long second = ddt & 0x1F;
+    tm.tm_sec = second * 2;
+
+    return Set(mktime(&tm));
+}
+
+unsigned long wxDateTime::GetAsDos() const
+{
+    unsigned long ddt;
+    time_t ticks = GetTicks();
+    struct tm *tm = localtime(&ticks);
+
+    long year = tm->tm_year;
+    year -= 80;
+    year <<= 25;
+
+    long month = tm->tm_mon;
+    month += 1;
+    month <<= 21;
+
+    long day = tm->tm_mday;
+    day <<= 16;
+
+    long hour = tm->tm_hour;
+    hour <<= 11;
+
+    long minute = tm->tm_min;
+    minute <<= 5;
+
+    long second = tm->tm_sec;
+    second /= 2;
+
+    ddt = year | month | day | hour | minute | second;
+    return ddt;
+}
+
+// ----------------------------------------------------------------------------
 // time_t <-> broken down time conversions
 // ----------------------------------------------------------------------------

 	  	 
