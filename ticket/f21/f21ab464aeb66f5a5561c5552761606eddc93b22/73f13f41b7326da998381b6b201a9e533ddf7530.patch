diff --git a/include/wx/osx/font.h b/include/wx/osx/font.h
index 792f6ca..33512a9 100644
--- a/include/wx/osx/font.h
+++ b/include/wx/osx/font.h
@@ -43,6 +43,7 @@ public:
                info.GetStyle(),
                info.GetWeight(),
                info.IsUnderlined(),
+               info.IsStrikethrough(),
                info.GetFaceName(),
                info.GetEncoding());
 
@@ -85,6 +86,16 @@ public:
                 wxFontWeight weight,
                 bool underlined = false,
                 const wxString& face = wxEmptyString,
+                wxFontEncoding encoding = wxFONTENCODING_DEFAULT) {
+        return Create(size, family, style, weight, underlined, false, face, encoding);
+    }
+    bool Create(int size,
+                wxFontFamily family,
+                wxFontStyle style,
+                wxFontWeight weight,
+                bool underlined = false,
+                bool strikethrough = false,
+                const wxString& face = wxEmptyString,
                 wxFontEncoding encoding = wxFONTENCODING_DEFAULT);
 
     wxFont(const wxNativeFontInfo& info)
diff --git a/src/common/fontcmn.cpp b/src/common/fontcmn.cpp
index b850783..91c7393 100644
--- a/src/common/fontcmn.cpp
+++ b/src/common/fontcmn.cpp
@@ -981,6 +981,11 @@ bool wxNativeFontInfo::FromUserString(const wxString& s)
         {
             SetStrikethrough(true);
         }
+        else if ( token == wxT("underlinedstrikethrough") || token == _("underlinedstrikethrough") )
+        {
+            SetUnderlined(true);
+            SetStrikethrough(true);
+        }
         else if ( token == wxT("light") || token == _("light") )
         {
             SetWeight(wxFONTWEIGHT_LIGHT);
diff --git a/src/osx/carbon/font.cpp b/src/osx/carbon/font.cpp
index 3b26548..9ce1dd7 100644
--- a/src/osx/carbon/font.cpp
+++ b/src/osx/carbon/font.cpp
@@ -587,7 +587,6 @@ wxFont::wxFont(const wxString& fontdesc)
     if ( info.FromString(fontdesc) )
         (void)Create(info);
 }
-
 wxFont::wxFont(int size,
                int family,
                int style,
@@ -597,7 +596,7 @@ wxFont::wxFont(int size,
                wxFontEncoding encoding)
 {
     (void)Create(size, (wxFontFamily)family, (wxFontStyle)style,
-                (wxFontWeight)weight, underlined, face, encoding);
+                 (wxFontWeight)weight, underlined, false, face, encoding);
 }
 
 bool wxFont::Create(int pointSize,
@@ -605,6 +604,7 @@ bool wxFont::Create(int pointSize,
                     wxFontStyle style,
                     wxFontWeight weight,
                     bool underlined,
+                    bool strikethrough,
                     const wxString& faceNameParam,
                     wxFontEncoding encoding)
 {
@@ -644,7 +644,7 @@ bool wxFont::Create(int pointSize,
     wxNativeFontInfo info;
 
     info.Init(pointSize, family, style, weight,
-        underlined, false, faceName, encoding);
+        underlined, strikethrough, faceName, encoding);
 
     m_refData = new wxFontRefData(info);
 
diff --git a/src/osx/carbon/fontdlgosx.mm b/src/osx/carbon/fontdlgosx.mm
index 324c60d..9ce4c0a 100644
--- a/src/osx/carbon/fontdlgosx.mm
+++ b/src/osx/carbon/fontdlgosx.mm
@@ -34,6 +34,7 @@
 // ============================================================================
 
 
+
 #if wxOSX_USE_EXPERIMENTAL_FONTDIALOG
 
 #import <Foundation/Foundation.h>
@@ -41,6 +42,67 @@
 
 #include "wx/osx/private.h"
 
+
+
+
+@interface wxFontPanelDelegate : NSObject<NSWindowDelegate>
+{
+    @public
+    bool m_isUnderline;
+    bool m_isStrikethrough;
+}
+
+// Delegate methods
+- (id)init;
+- (void)changeAttributes:(id)sender;
+- (void)changeFont:(id)sender;
+@end // interface wxNSFontPanelDelegate : NSObject
+
+
+
+@implementation wxFontPanelDelegate : NSObject
+
+- (id)init
+{
+    [super init];
+    m_isUnderline = false;
+    m_isStrikethrough = false;
+    return self;
+}
+
+- (void)changeAttributes:(id)sender
+{
+    NSDictionary *dummyAttribs = [NSDictionary dictionaryWithObjectsAndKeys:
+                                   [NSNumber numberWithInt:m_isUnderline?NSUnderlineStyleSingle:NSUnderlineStyleNone], NSUnderlineStyleAttributeName,
+                                   [NSNumber numberWithInt:m_isStrikethrough?NSUnderlineStyleSingle:NSUnderlineStyleNone], NSStrikethroughStyleAttributeName,
+                                   nil];
+    NSDictionary *attribs = [sender convertAttributes:dummyAttribs];
+
+    m_isUnderline = m_isStrikethrough = false;
+    for (id key in attribs) {
+        NSNumber *number = static_cast<NSNumber *>([attribs objectForKey:key]);
+        int i = [number intValue];
+        if ([key isEqual:NSUnderlineStyleAttributeName]) {
+            m_isUnderline = [number intValue] != NSUnderlineStyleNone;
+        } else if ([key isEqual:NSStrikethroughStyleAttributeName]) {
+            m_isStrikethrough = [number intValue] != NSUnderlineStyleNone;
+        }
+    }
+    
+    NSDictionary *attributes = [NSDictionary dictionaryWithObjectsAndKeys:
+                                [NSNumber numberWithInt:m_isUnderline?NSUnderlineStyleSingle:NSUnderlineStyleNone], NSUnderlineStyleAttributeName,
+                                [NSNumber numberWithInt:m_isStrikethrough?NSUnderlineStyleSingle:NSUnderlineStyleNone], NSStrikethroughStyleAttributeName,
+                                nil];
+    [[NSFontManager sharedFontManager] setSelectedAttributes:attributes isMultiple:false];
+}
+- (void)changeFont:(id)sender
+{
+    NSFont *dummyFont = [NSFont userFontOfSize:12.0];
+    [[NSFontPanel sharedFontPanel] setPanelFont:[sender convertFont:dummyFont] isMultiple:NO];
+    [[NSFontManager sharedFontManager] setSelectedFont:[sender convertFont:dummyFont] isMultiple:false];
+}
+@end
+
 @interface wxMacFontPanelAccView : NSView
 {
     BOOL m_okPressed ;
@@ -147,6 +209,11 @@ int RunMixedFontDialog(wxFontDialog* dialog)
 
     // setting up the ok/cancel buttons
     NSFontPanel* fontPanel = [NSFontPanel sharedFontPanel] ;
+    
+    wxFontPanelDelegate* theFPDelegate = [[wxFontPanelDelegate alloc] init];
+    [fontPanel setDelegate:theFPDelegate];
+
+    
 
     // adjust modality for carbon environment
 #if wxOSX_USE_CARBON
@@ -180,9 +247,19 @@ int RunMixedFontDialog(wxFontDialog* dialog)
     {
         font = fontdata.m_initialFont ;
     }
+    theFPDelegate->m_isStrikethrough=font.GetStrikethrough();
+    theFPDelegate->m_isUnderline=font.GetUnderlined();
 
     [[NSFontPanel sharedFontPanel] setPanelFont: font.OSXGetNSFont() isMultiple:NO];
+    [[NSFontManager sharedFontManager] setSelectedFont:font.OSXGetNSFont() isMultiple:false];
 
+    NSDictionary *attributes = [NSDictionary dictionaryWithObjectsAndKeys:
+                                [NSNumber numberWithInt:font.GetUnderlined()?NSUnderlineStyleSingle:NSUnderlineStyleNone], NSUnderlineStyleAttributeName,
+                                [NSNumber numberWithInt:font.GetStrikethrough()?NSUnderlineStyleSingle:NSUnderlineStyleNone], NSStrikethroughStyleAttributeName,
+                                nil];
+    
+    [[NSFontManager sharedFontManager] setSelectedAttributes:attributes isMultiple:false];
+    
     if(fontdata.m_fontColour.IsOk())
         [[NSColorPanel sharedColorPanel] setColor: fontdata.m_fontColour.OSXGetNSColor()];
     else
@@ -206,6 +283,8 @@ int RunMixedFontDialog(wxFontDialog* dialog)
     {
 #if wxOSX_USE_COCOA
         fontdata.m_chosenFont = wxFont( theFont );
+        fontdata.m_chosenFont.SetUnderlined(theFPDelegate->m_isUnderline);
+        fontdata.m_chosenFont.SetStrikethrough(theFPDelegate->m_isStrikethrough);
 
         //Get the shared color panel along with the chosen color and set the chosen color
         fontdata.m_fontColour = wxColour([[NSColorPanel sharedColorPanel] color]);
@@ -213,7 +292,7 @@ int RunMixedFontDialog(wxFontDialog* dialog)
         retval = wxID_OK ;
     }
     [fontPanel setAccessoryView:nil];
-
+    [theFPDelegate release];
     return retval ;
 }
 
@@ -235,7 +314,7 @@ wxIMPLEMENT_DYNAMIC_CLASS(wxFontDialog, wxDialog);
 // wxWCDelegate - Window Closed delegate
 // ---------------------------------------------------------------------------
 
-@interface wxWCDelegate : NSObject
+@interface wxWCDelegate : NSObject <NSWindowDelegate>
 {
     bool m_bIsClosed;
 }
@@ -246,6 +325,8 @@ wxIMPLEMENT_DYNAMIC_CLASS(wxFontDialog, wxDialog);
 - (BOOL)isClosed;
 @end // interface wxNSFontPanelDelegate : NSObject
 
+
+
 @implementation wxWCDelegate : NSObject
 
 - (id)init
@@ -269,7 +350,6 @@ wxIMPLEMENT_DYNAMIC_CLASS(wxFontDialog, wxDialog);
 {
     return m_bIsClosed;
 }
-
 @end // wxNSFontPanelDelegate
 
 // ---------------------------------------------------------------------------
@@ -405,6 +485,7 @@ bool wxFontDialog::Create(wxWindow *parent)
         //However, 10.3 doesn't seem to create the font panel
         //is this is done, so create it ourselves
         [[NSFontPanel sharedFontPanel] setPanelFont:theDefaultFont isMultiple:NO];
+        [[NSFontManager sharedFontManager] setSelectedFont:theDefaultFont isMultiple:false];
 
     }
 
diff --git a/src/osx/carbon/graphics.cpp b/src/osx/carbon/graphics.cpp
index a85deef..094c590 100644
--- a/src/osx/carbon/graphics.cpp
+++ b/src/osx/carbon/graphics.cpp
@@ -2926,7 +2926,10 @@ wxMacCoreGraphicsRenderer::CreateFont(double sizeInPixels,
                                         : wxFONTWEIGHT_NORMAL,
                 (flags & wxFONTFLAG_UNDERLINED) != 0,
                 facename);
-
+    
+    if ((flags & wxFONTFLAG_STRIKETHROUGH) != 0) {
+        font.MakeStrikethrough();
+    }
     wxGraphicsFont f;
     f.SetRefData(new wxMacCoreGraphicsFontData(this, font, col));
     return f;
diff --git a/src/osx/cocoa/window.mm b/src/osx/cocoa/window.mm
index d8f908d..0bed5e9 100644
--- a/src/osx/cocoa/window.mm
+++ b/src/osx/cocoa/window.mm
@@ -2420,6 +2420,40 @@ bool wxWidgetCocoaImpl::SetBackgroundStyle( wxBackgroundStyle style )
 
 void wxWidgetCocoaImpl::SetLabel( const wxString& title, wxFontEncoding encoding )
 {
+    if ( [m_osxView respondsToSelector:@selector(setAttributedTitle:) ] )
+    {
+        wxFont f = GetWXPeer()->GetFont();
+        if (f.GetStrikethrough() || f.GetUnderlined()) {
+            wxCFStringRef cf( title , encoding );
+            
+            NSMutableParagraphStyle *paragraphStyle = [[NSMutableParagraphStyle alloc]init] ;
+                [paragraphStyle setAlignment:NSTextAlignmentCenter];
+            
+            NSMutableAttributedString *attrString = [[NSMutableAttributedString alloc]
+                                                     initWithString:cf.AsNSString()];
+             
+            [attrString beginEditing];
+            [attrString addAttribute:NSFontAttributeName
+                                 value:f.OSXGetNSFont()
+                                 range:NSMakeRange(0, [attrString length])];
+            if (f.GetStrikethrough()) {
+                [attrString addAttribute:NSStrikethroughStyleAttributeName
+                                     value:@(NSUnderlineStyleSingle)
+                                     range:NSMakeRange(0, [attrString length])];
+            }
+            if (f.GetUnderlined()) {
+                [attrString addAttribute:NSUnderlineStyleAttributeName
+                                     value:@(NSUnderlineStyleSingle)
+                                     range:NSMakeRange(0, [attrString length])];
+                
+            }
+            [attrString addAttribute:NSParagraphStyleAttributeName value:paragraphStyle range:NSMakeRange(0, [attrString length])];
+            [attrString endEditing];
+            [m_osxView setAttributedTitle:attrString];
+            return;
+        }
+    }
+    
     if ( [m_osxView respondsToSelector:@selector(setTitle:) ] )
     {
         wxCFStringRef cf( title , encoding );
