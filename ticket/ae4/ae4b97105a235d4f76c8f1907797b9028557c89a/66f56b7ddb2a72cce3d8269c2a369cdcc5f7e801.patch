Index: src/common/imagbmp.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/common/imagbmp.cpp,v
retrieving revision 1.37
diff -u -r1.37 imagbmp.cpp
--- src/common/imagbmp.cpp	16 Aug 2002 10:51:07 -0000	1.37
+++ src/common/imagbmp.cpp	20 Aug 2002 18:38:23 -0000
@@ -450,6 +450,7 @@
 {
     wxInt32         aDword, rmask = 0, gmask = 0, bmask = 0;
     int             rshift = 0, gshift = 0, bshift = 0;
+    int             rbits = 0, gbits = 0, bbits = 0;
     wxInt32         dbuf[4];
     wxInt8          bbuf[4];
     wxUint8         aByte;
@@ -529,18 +530,42 @@
         {
             int bit = 0;
             stream.Read(dbuf, 4 * 3);
-            bmask = wxINT32_SWAP_ON_BE(dbuf[0]);
+            rmask = wxINT32_SWAP_ON_BE(dbuf[0]);
             gmask = wxINT32_SWAP_ON_BE(dbuf[1]);
-            rmask = wxINT32_SWAP_ON_BE(dbuf[2]);
+            bmask = wxINT32_SWAP_ON_BE(dbuf[2]);
             // find shift amount.. ugly, but i can't think of a better way:
             for (bit = 0; bit < bpp; bit++)
             {
-                if (bmask & (1 << bit))
-                    bshift = bit;
+                if (rmask & (1 << bit))
+                {
+                    rshift = bit;
+                    break;
+                }
+            }
+            for (bit = 0; bit < bpp; bit++)
+            {
                 if (gmask & (1 << bit))
+                {
                     gshift = bit;
+                    break;
+                }
+            }
+            for (bit = 0; bit < bpp; bit++)
+            {
+                if (bmask & (1 << bit))
+                {
+                    bshift = bit;
+                    break;
+                }
+            }
+            for (bit = 0; bit < bpp; bit++)
+            {
                 if (rmask & (1 << bit))
-                    rshift = bit;
+                    rbits = bit-rshift+1;
+                if (gmask & (1 << bit))
+                    gbits = bit-gshift+1;
+                if (bmask & (1 << bit))
+                    bbits = bit-bshift+1;
             }
         }
         else if ( bpp == 16 )
@@ -551,6 +576,9 @@
             rshift = 10;
             gshift = 5;
             bshift = 0;
+           rbits = 5;
+           gbits = 5;
+           bbits = 5;
         }
         else if ( bpp == 32 )
         {
@@ -560,6 +588,9 @@
             rshift = 16;
             gshift = 8;
             bshift = 0;
+           rbits = 8;
+           gbits = 8;
+           bbits = 8;
         }
     }
 
@@ -714,11 +745,11 @@
                    stream.Read(&aWord, 2);
                    aWord = wxUINT16_SWAP_ON_BE(aWord);
                    linepos += 2;
-                   temp = (aWord & rmask) >> rshift;
+                   temp = (aWord & rmask) >> rshift << (8-rbits);
                    ptr[poffset] = temp;
-                   temp = (aWord & gmask) >> gshift;
+                   temp = (aWord & gmask) >> gshift << (8-gbits);
                    ptr[poffset + 1] = temp;
-                   temp = (aWord & bmask) >> bshift;
+                   temp = (aWord & bmask) >> bshift << (8-bbits);
                    ptr[poffset + 2] = temp;
                    column++;
                }

 	  	 
