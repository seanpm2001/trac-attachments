Index: src/common/imagbmp.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/common/imagbmp.cpp,v
retrieving revision 1.13.2.4
diff -u -r1.13.2.4 imagbmp.cpp
--- src/common/imagbmp.cpp	22 Apr 2001 09:52:59 -0000	1.13.2.4
+++ src/common/imagbmp.cpp	20 Aug 2002 19:06:06 -0000
@@ -179,6 +179,7 @@
 bool wxBMPHandler::LoadFile( wxImage *image, wxInputStream& stream, bool verbose, int WXUNUSED(index) )
 {
     int             rshift = 0, gshift = 0, bshift = 0;
+    int             rbits = 0, gbits = 0, bbits = 0;
     wxUint8         aByte;
     wxUint16        aWord;
     wxInt32         dbuf[4], aDword,
@@ -300,18 +301,42 @@
         {
             int bit = 0;
             stream.Read( dbuf, 4 * 3 );
-            bmask = wxINT32_SWAP_ON_BE( dbuf[0] );
+            rmask = wxINT32_SWAP_ON_BE( dbuf[0] );
             gmask = wxINT32_SWAP_ON_BE( dbuf[1] );
-            rmask = wxINT32_SWAP_ON_BE( dbuf[2] );
+            bmask = wxINT32_SWAP_ON_BE( dbuf[2] );
             /* find shift amount.. ugly, but i can't think of a better way */
+	    for (bit = 0; bit < bpp; bit++)
+	    {
+		if (rmask & (1 << bit))
+		{
+		    rshift = bit;
+		    break;
+		}
+	    }
+	    for (bit = 0; bit < bpp; bit++)
+	    {
+		if (gmask & (1 << bit))
+		{
+		    gshift = bit;
+		    break;
+		}
+	    }
+	    for (bit = 0; bit < bpp; bit++)
+	    {
+		if (bmask & (1 << bit))
+		{
+		    bshift = bit;
+		    break;
+		}
+	    }
             for (bit = 0; bit < bpp; bit++)
             {
-                if (bmask & (1 << bit))
-                    bshift = bit;
-                if (gmask & (1 << bit))
-                    gshift = bit;
                 if (rmask & (1 << bit))
-                    rshift = bit;
+                    rbits = bit-rshift+1;
+                if (gmask & (1 << bit))
+                    gbits = bit-gshift+1;
+                if (bmask & (1 << bit))
+                    bbits = bit-bshift+1;
             }
         }
         else if (bpp == 16)
@@ -322,6 +347,9 @@
             rshift = 10;
             gshift = 5;
             bshift = 0;
+	    rbits = 5;
+	    gbits = 5;
+	    bbits = 5;
         }
         else if (bpp == 32)
         {
@@ -331,6 +359,9 @@
             rshift = 16;
             gshift = 8;
             bshift = 0;
+	    rbits = 8;
+	    gbits = 8;
+	    bbits = 8;
         }
     }
 
@@ -483,11 +514,11 @@
                    stream.Read( &aWord, 2 );
                    aWord = wxUINT16_SWAP_ON_BE( aWord );
                    linepos += 2;
-                   temp = (aWord & rmask) >> rshift;
+                   temp = (aWord & rmask) >> rshift << (8-rbits);
                    ptr[poffset] = temp;
-                   temp = (aWord & gmask) >> gshift;
+                   temp = (aWord & gmask) >> gshift << (8-gbits);
                    ptr[poffset + 1] = temp;
-                   temp = (aWord & bmask) >> bshift;
+                   temp = (aWord & bmask) >> bshift << (8-bbits);
                    ptr[poffset + 2] = temp;
                    column++;
                }

 	  	 
