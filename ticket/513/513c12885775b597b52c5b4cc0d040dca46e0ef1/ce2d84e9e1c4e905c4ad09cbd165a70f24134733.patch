--- c:\CVSHome\wxWidgetsClean/build/msw/wx_base.dsp	2007-06-15 08:08:46.000000000 -0700
+++ c:\CVSHome\wxWidgets/build/msw/wx_base.dsp	2007-06-18 15:44:21.704472500 -0700
@@ -472,6 +510,10 @@
 # End Source File
 # Begin Source File
 
+SOURCE=..\..\src\common\base64.cpp
+# End Source File
+# Begin Source File
+
 SOURCE=..\..\src\common\clntdata.cpp
 # End Source File
 # Begin Source File
@@ -1479,6 +1449,10 @@
 # End Source File
 # Begin Source File
 
+SOURCE=..\..\include\wx\base64.h
+# End Source File
+# Begin Source File
+
 SOURCE=..\..\include\wx\beforestd.h
 # End Source File
 # Begin Source File
--- c:\CVSHome\wxWidgetsClean/docs/latex/wx/function.tex	2007-06-15 08:08:16.000000000 -0700
+++ c:\CVSHome\wxWidgets/docs/latex/wx/function.tex	2007-06-18 15:25:54.213085300 -0700
@@ -2827,6 +2827,30 @@
 \section{Miscellaneous functions}\label{miscellany}
 
 
+\membersection{wxBASE64Decode}\label{wxbase64decode}
+
+\func{wxMemoryBuffer}{wxBASE64Decode}{\param{const wxString\& }{str}}
+
+Returns a buffer holding the BASE64 decoded binary equivalent of the input string.
+Requires compiling with {\tt wxUSE\_BASE64} $= 1$.
+
+\wxheading{Include files}
+
+<wx/base64.h>
+
+
+\membersection{wxBASE64Encode}\label{wxbase64encode}
+
+\func{wxString}{wxBASE64Encode}{\param{const wxMemoryBuffer\& }{buf}}
+
+Returns the BASE64 encoded string equivalent for all data in the buffer.
+Requires compiling with {\tt wxUSE\_BASE64} $= 1$.
+
+\wxheading{Include files}
+
+<wx/base64.h>
+
+
 \membersection{wxCONCAT}\label{wxconcat}
 
 \func{}{wxCONCAT}{\param{}{x}, \param{}{y}}
--- c:\CVSHome\wxWidgetsClean/include/wx/base64.h	1969-12-31 16:00:00.000000000 -0800
+++ c:\CVSHome\wxWidgets/include/wx/base64.h	2007-06-18 13:12:22.132981300 -0700
@@ -0,0 +1,33 @@
+///////////////////////////////////////////////////////////////////////////////
+// Name:        base64.h
+// Purpose:     declaration of BASE64 encoding/decoding functionality
+//              (used for binary/text conversion in fileconf.h and iniconf.h)
+// Author:      Charles Reimers (algorithm based on description and code from 
+//					http://base64.sourceforge.net/ )
+// Modified by:
+// Created:     2007/06/18
+// RCS-ID:      $Id: $
+// Licence:     wxWindows licence
+///////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_BASE64_H_
+#define _WX_BASE64_H_
+
+//make sure the users wants wxBASE64 support 
+#if wxUSE_BASE64
+
+// let places that use binary to text and text to binary conversion use this
+//	without the user having to think about it
+#define wxBINARY_TO_TEXT_ENCODING( buf ) wxBASE64Encode( buf )
+#define wxTEXT_TO_BINARY_DECODING( str ) wxBASE64Decode( str )
+
+#include "string.h"
+#include "buffer.h"
+
+// prototypes for binary helper functions
+const wxString wxBASE64Encode( const wxMemoryBuffer& buf );
+const wxMemoryBuffer wxBASE64Decode( const wxString& str );
+
+#endif //wxUSE_BASE64
+
+#endif //_WX_BASE64_H_
--- c:\CVSHome\wxWidgetsClean/include/wx/mac/setup0.h	2007-04-16 22:47:25.000000000 -0700
+++ c:\CVSHome\wxWidgets/include/wx/mac/setup0.h	2007-06-18 12:53:27.416433300 -0700
@@ -412,6 +412,16 @@
 // Recommended setting: 1
 #define wxUSE_CONFIG_NATIVE   1
 
+// If wxUSE_BASE64 is 1, BASE64 encode/decode functionality is included and
+// used for binary support by the wxFileConfig class, which is used as the
+// base for several of the other config classes.  This is currently the only
+// binary-to-text and text-to-binary functionality.
+//
+// Default is 1.
+//
+// Recommended setting: 1
+#define wxUSE_BASE64           1
+
 // If wxUSE_DIALUP_MANAGER is 1, compile in wxDialUpManager class which allows
 // to connect/disconnect from the network and be notified whenever the dial-up
 // network connection is established/terminated. Requires wxUSE_DYNAMIC_LOADER.
--- c:\CVSHome\wxWidgetsClean/include/wx/motif/setup0.h	2007-04-16 22:47:28.000000000 -0700
+++ c:\CVSHome\wxWidgets/include/wx/motif/setup0.h	2007-06-18 12:53:53.338971900 -0700
@@ -411,6 +411,16 @@
 // Recommended setting: 1
 #define wxUSE_CONFIG_NATIVE   1
 
+// If wxUSE_BASE64 is 1, BASE64 encode/decode functionality is included and
+// used for binary support by the wxFileConfig class, which is used as the
+// base for several of the other config classes.  This is currently the only
+// binary-to-text and text-to-binary functionality.
+//
+// Default is 1.
+//
+// Recommended setting: 1
+#define wxUSE_BASE64           1
+
 // If wxUSE_DIALUP_MANAGER is 1, compile in wxDialUpManager class which allows
 // to connect/disconnect from the network and be notified whenever the dial-up
 // network connection is established/terminated. Requires wxUSE_DYNAMIC_LOADER.
--- c:\CVSHome\wxWidgetsClean/include/wx/msw/setup0.h	2007-04-16 22:47:34.000000000 -0700
+++ c:\CVSHome\wxWidgets/include/wx/msw/setup0.h	2007-06-18 12:54:50.481059700 -0700
@@ -411,6 +411,16 @@
 // Recommended setting: 1
 #define wxUSE_CONFIG_NATIVE   1
 
+// If wxUSE_BASE64 is 1, BASE64 encode/decode functionality is included and
+// used for binary support by the wxFileConfig class, which is used as the
+// base for several of the other config classes.  This is currently the only
+// binary-to-text and text-to-binary functionality.
+//
+// Default is 1.
+//
+// Recommended setting: 1
+#define wxUSE_BASE64           1
+
 // If wxUSE_DIALUP_MANAGER is 1, compile in wxDialUpManager class which allows
 // to connect/disconnect from the network and be notified whenever the dial-up
 // network connection is established/terminated. Requires wxUSE_DYNAMIC_LOADER.
--- c:\CVSHome\wxWidgetsClean/include/wx/msw/setup_microwin.h	2007-03-07 03:48:33.000000000 -0800
+++ c:\CVSHome\wxWidgets/include/wx/msw/setup_microwin.h	2007-06-18 12:55:26.310101900 -0700
@@ -299,6 +299,16 @@
 // Recommended setting: 1
 #define wxUSE_CONFIG_NATIVE   0
 
+// If wxUSE_BASE64 is 1, BASE64 encode/decode functionality is included and
+// used for binary support by the wxFileConfig class, which is used as the
+// base for several of the other config classes.  This is currently the only
+// binary-to-text and text-to-binary functionality.
+//
+// Default is 1.
+//
+// Recommended setting: 1
+#define wxUSE_BASE64           0
+
 // If wxUSE_DIALUP_MANAGER is 1, compile in wxDialUpManager class which allows
 // to connect/disconnect from the network and be notified whenever the dial-up
 // network connection is established/terminated. Requires wxUSE_DYNLIB_CLASS.
--- c:\CVSHome\wxWidgetsClean/include/wx/msw/wince/setup.h	2007-04-16 22:47:37.000000000 -0700
+++ c:\CVSHome\wxWidgets/include/wx/msw/wince/setup.h	2007-06-18 12:55:53.217040700 -0700
@@ -411,6 +411,16 @@
 // Recommended setting: 1
 #define wxUSE_CONFIG_NATIVE   1
 
+// If wxUSE_BASE64 is 1, BASE64 encode/decode functionality is included and
+// used for binary support by the wxFileConfig class, which is used as the
+// base for several of the other config classes.  This is currently the only
+// binary-to-text and text-to-binary functionality.
+//
+// Default is 1.
+//
+// Recommended setting: 1
+#define wxUSE_BASE64           1
+
 // If wxUSE_DIALUP_MANAGER is 1, compile in wxDialUpManager class which allows
 // to connect/disconnect from the network and be notified whenever the dial-up
 // network connection is established/terminated. Requires wxUSE_DYNAMIC_LOADER.
--- c:\CVSHome\wxWidgetsClean/include/wx/os2/setup0.h	2007-04-16 22:47:43.000000000 -0700
+++ c:\CVSHome\wxWidgets/include/wx/os2/setup0.h	2007-06-18 12:56:05.592357500 -0700
@@ -411,6 +411,16 @@
 // Recommended setting: 1
 #define wxUSE_CONFIG_NATIVE   1
 
+// If wxUSE_BASE64 is 1, BASE64 encode/decode functionality is included and
+// used for binary support by the wxFileConfig class, which is used as the
+// base for several of the other config classes.  This is currently the only
+// binary-to-text and text-to-binary functionality.
+//
+// Default is 1.
+//
+// Recommended setting: 1
+#define wxUSE_BASE64           1
+
 // If wxUSE_DIALUP_MANAGER is 1, compile in wxDialUpManager class which allows
 // to connect/disconnect from the network and be notified whenever the dial-up
 // network connection is established/terminated. Requires wxUSE_DYNAMIC_LOADER.
--- c:\CVSHome\wxWidgetsClean/include/wx/palmos/setup0.h	2007-04-16 22:47:49.000000000 -0700
+++ c:\CVSHome\wxWidgets/include/wx/palmos/setup0.h	2007-06-18 12:56:25.983504500 -0700
@@ -411,6 +411,16 @@
 // Recommended setting: 1
 #define wxUSE_CONFIG_NATIVE   1
 
+// If wxUSE_BASE64 is 1, BASE64 encode/decode functionality is included and
+// used for binary support by the wxFileConfig class, which is used as the
+// base for several of the other config classes.  This is currently the only
+// binary-to-text and text-to-binary functionality.
+//
+// Default is 1.
+//
+// Recommended setting: 1
+#define wxUSE_BASE64           1
+
 // If wxUSE_DIALUP_MANAGER is 1, compile in wxDialUpManager class which allows
 // to connect/disconnect from the network and be notified whenever the dial-up
 // network connection is established/terminated. Requires wxUSE_DYNAMIC_LOADER.
--- c:\CVSHome\wxWidgetsClean/include/wx/setup_inc.h	2007-04-16 22:47:11.000000000 -0700
+++ c:\CVSHome\wxWidgets/include/wx/setup_inc.h	2007-06-18 12:52:48.806069900 -0700
@@ -407,6 +407,16 @@
 // Recommended setting: 1
 #define wxUSE_CONFIG_NATIVE   1
 
+// If wxUSE_BASE64 is 1, BASE64 encode/decode functionality is included and
+// used for binary support by the wxFileConfig class, which is used as the
+// base for several of the other config classes.  This is currently the only
+// binary-to-text and text-to-binary functionality.
+//
+// Default is 1.
+//
+// Recommended setting: 1
+#define wxUSE_BASE64           1
+
 // If wxUSE_DIALUP_MANAGER is 1, compile in wxDialUpManager class which allows
 // to connect/disconnect from the network and be notified whenever the dial-up
 // network connection is established/terminated. Requires wxUSE_DYNAMIC_LOADER.
--- c:\CVSHome\wxWidgetsClean/include/wx/univ/setup0.h	2007-04-16 22:47:57.000000000 -0700
+++ c:\CVSHome\wxWidgets/include/wx/univ/setup0.h	2007-06-18 12:57:48.891876900 -0700
@@ -411,6 +411,16 @@
     #define wxUSE_CONFIG_NATIVE 0
 #endif
 
+// If wxUSE_BASE64 is 1, BASE64 encode/decode functionality is included and
+// used for binary support by the wxFileConfig class, which is used as the
+// base for several of the other config classes.  This is currently the only
+// binary-to-text and text-to-binary functionality.
+//
+// Default is 1.
+//
+// Recommended setting: 1
+#define wxUSE_BASE64           1
+
 // If wxUSE_DIALUP_MANAGER is 1, compile in wxDialUpManager class which allows
 // to connect/disconnect from the network and be notified whenever the dial-up
 // network connection is established/terminated. Requires wxUSE_DYNAMIC_LOADER.
--- c:\CVSHome\wxWidgetsClean/src/common/base64.cpp	1969-12-31 16:00:00.000000000 -0800
+++ c:\CVSHome\wxWidgets/src/common/base64.cpp	2007-06-18 13:36:55.811331500 -0700
@@ -0,0 +1,117 @@
+///////////////////////////////////////////////////////////////////////////////
+// Name:        src/common/base64.cpp
+// Purpose:     implementation of BASE64 encoding/decoding functions
+// Author:      Charles Reimers (algorithm based on description and code from 
+//					http://base64.sourceforge.net/ )
+// Modified by:
+// Created:     2007/06/18
+// RCS-ID:      $Id: $
+// Licence:     wxWindows licence
+///////////////////////////////////////////////////////////////////////////////
+
+#include "wx/wxprec.h"
+
+#if wxUSE_BASE64
+
+#include "wx/string.h"
+#include "wx/buffer.h"
+
+static const char cb64[]="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
+
+void encodeblock( unsigned char in[3], unsigned char out[4], int len )
+{
+    out[0] = cb64[ in[0] >> 2 ];
+    out[1] = cb64[ ((in[0] & 0x03) << 4) | ((in[1] & 0xf0) >> 4) ];
+    out[2] = (unsigned char) (len > 1 ? cb64[ ((in[1] & 0x0f) << 2) | ((in[2] & 0xc0) >> 6) ] : '=');
+    out[3] = (unsigned char) (len > 2 ? cb64[ in[2] & 0x3f ] : '=');
+}
+
+const wxString BASE64Encode( const wxMemoryBuffer& buf )
+{
+	wxString str;
+	unsigned char in[3], out[4];
+	int i, len;
+	const unsigned char *data = (const unsigned char*)(buf.GetData());
+	size_t datalen = buf.GetDataLen();
+
+	while( 0 != datalen )
+	{
+		len = 0;
+		for( i = 0; i < 3; i++ )
+		{
+			if( 0 != datalen )
+			{
+				in[i] = (unsigned char) *(data++);
+				datalen--;
+				len++;
+			}
+			else
+			{
+				in[i] = 0;
+			}
+		}
+		if( len )
+		{
+			encodeblock( in, out, len );
+			for( i = 0; i < 4; i++ )
+			{
+				str.Append( out[i] );
+			}
+		}
+	}
+	return str;
+}
+
+static const char cd64[]="|$$$}rstuvwxyz{$$$$$$$>?@ABCDEFGHIJKLMNOPQRSTUVW$$$$$$XYZ[\\]^_`abcdefghijklmnopq";
+
+void decodeblock( unsigned char in[4], unsigned char out[3] )
+{   
+    out[ 0 ] = (unsigned char ) (in[0] << 2 | in[1] >> 4);
+    out[ 1 ] = (unsigned char ) (in[1] << 4 | in[2] >> 2);
+    out[ 2 ] = (unsigned char ) (((in[2] << 6) & 0xc0) | in[3]);
+}
+
+const wxMemoryBuffer BASE64Decode( const wxString& str )
+{
+	wxMemoryBuffer buf;
+    unsigned char in[4], out[3], v;
+	int i, len;
+	unsigned char *instr;
+	instr = (unsigned char*)(str.ToAscii());
+    while( '\0' != *instr )
+	{
+		for( len = 0, i = 0; i < 4 && '\0' != *instr; i++ )
+		{
+			v = 0;
+			while( '\0' != *instr && v == 0 )
+			{
+				v = (unsigned char) *(instr++);
+				v = (unsigned char) ((v < 43 || v > 122) ? 0 : cd64[ v - 43 ]);
+				if( v )
+				{
+					v = (unsigned char) ((v == '$') ? 0 : v - 61);
+				}
+			}
+			if( '\0' != *(instr-1) )
+			{
+				len++;
+				if( v )
+				{
+					in[ i ] = (unsigned char) (v - 1);
+				}
+			}
+			else
+			{
+				in[i] = 0;
+			}
+		}
+		if( len )
+		{
+			decodeblock( in, out );
+			buf.AppendData(out, 3);
+		}
+	}
+	return buf;
+}
+
+#endif //wxUSE_BASE64

 	  	 
