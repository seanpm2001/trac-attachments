Index: include/wx/ribbon/panel.h
===================================================================
--- include/wx/ribbon/panel.h	(revision 72292)
+++ include/wx/ribbon/panel.h	(working copy)
@@ -62,6 +62,8 @@
 
     bool ShowExpanded();
     bool HideExpanded();
+    
+    void HideIfTemporaryShown();
 
     void SetArtProvider(wxRibbonArtProvider* art);
 
Index: include/wx/ribbon/bar.h
===================================================================
--- include/wx/ribbon/bar.h	(revision 72292)
+++ include/wx/ribbon/bar.h	(working copy)
@@ -139,6 +139,8 @@
 
     // Implementation only.
     bool IsToggleButtonHovered() const { return m_toggle_button_hovered; }
+    
+    void HideIfTemporaryShown();
 
 protected:
     friend class wxRibbonPage;
@@ -190,6 +192,9 @@
     bool m_arePanelsShown;
     bool m_bar_hovered;
     bool m_toggle_button_hovered;
+    
+    bool m_ribbon_bar_minimised;
+    bool m_temporary_shown;
 
 #ifndef SWIG
     DECLARE_CLASS(wxRibbonBar)
Index: include/wx/ribbon/page.h
===================================================================
--- include/wx/ribbon/page.h	(revision 72292)
+++ include/wx/ribbon/page.h	(working copy)
@@ -61,6 +61,7 @@
 
     virtual void RemoveChild(wxWindowBase *child);
 
+    void HideIfTemporaryShown();
 protected:
     virtual wxSize DoGetBestSize() const;
     virtual wxBorder GetDefaultBorder() const { return wxBORDER_NONE; }
Index: src/ribbon/panel.cpp
===================================================================
--- src/ribbon/panel.cpp	(revision 72292)
+++ src/ribbon/panel.cpp	(working copy)
@@ -1099,4 +1099,8 @@
     return best;
 }
 
+void wxRibbonPanel::HideIfTemporaryShown()
+{
+    ((wxRibbonPage *)m_parent)->HideIfTemporaryShown();
+}
 #endif // wxUSE_RIBBON
Index: src/ribbon/gallery.cpp
===================================================================
--- src/ribbon/gallery.cpp	(revision 72292)
+++ src/ribbon/gallery.cpp	(working copy)
@@ -17,6 +17,7 @@
 
 #if wxUSE_RIBBON
 
+#include "wx/ribbon/panel.h"
 #include "wx/ribbon/gallery.h"
 #include "wx/ribbon/art.h"
 #include "wx/ribbon/bar.h"
@@ -365,6 +366,8 @@
                 notification.SetGallery(this);
                 notification.SetGalleryItem(m_selected_item);
                 ProcessWindowEvent(notification);
+		
+		((wxRibbonPanel *)m_parent)->HideIfTemporaryShown();
             }
         }
         m_mouse_active_rect = NULL;
Index: src/ribbon/buttonbar.cpp
===================================================================
--- src/ribbon/buttonbar.cpp	(revision 72292)
+++ src/ribbon/buttonbar.cpp	(working copy)
@@ -17,6 +17,7 @@
 
 #if wxUSE_RIBBON
 
+#include "wx/ribbon/panel.h"
 #include "wx/ribbon/buttonbar.h"
 #include "wx/ribbon/art.h"
 #include "wx/dcbuffer.h"
@@ -1100,6 +1101,8 @@
                 m_lock_active_state = true;
                 ProcessWindowEvent(notification);
                 m_lock_active_state = false;
+		
+		((wxRibbonPanel *)m_parent)->HideIfTemporaryShown();
             } while(false);
             if(m_active_button) // may have been NULLed by event handler
             {
Index: src/ribbon/toolbar.cpp
===================================================================
--- src/ribbon/toolbar.cpp	(revision 72292)
+++ src/ribbon/toolbar.cpp	(working copy)
@@ -1149,6 +1149,8 @@
             notification.SetEventObject(this);
             notification.SetBar(this);
             ProcessEvent(notification);
+	    
+	    ((wxRibbonPanel *)m_parent)->HideIfTemporaryShown();
         }
 
         // Notice that m_active_tool could have been reset by the event handler
Index: src/ribbon/bar.cpp
===================================================================
--- src/ribbon/bar.cpp	(revision 72292)
+++ src/ribbon/bar.cpp	(working copy)
@@ -731,6 +731,9 @@
 
     m_toggle_button_hovered = false;
     m_bar_hovered = false;
+    
+    m_ribbon_bar_minimised = false;
+    m_temporary_shown = false;
 }
 
 void wxRibbonBar::SetArtProvider(wxRibbonArtProvider* art)
@@ -845,7 +848,7 @@
     }
     wxRect rect(GetClientSize().GetWidth() - 30, 6, 12, 12);
     if ( m_flags & wxRIBBON_BAR_SHOW_TOGGLE_BUTTON  )
-        m_art->DrawToggleButton(dc, this, rect, ArePanelsShown());
+        m_art->DrawToggleButton(dc, this, rect, !this->m_ribbon_bar_minimised);
 }
 
 void wxRibbonBar::OnEraseBackground(wxEraseEvent& WXUNUSED(evt))
@@ -916,6 +919,16 @@
 void wxRibbonBar::OnMouseLeftDown(wxMouseEvent& evt)
 {
     wxRibbonPageTabInfo *tab = HitTestTabs(evt.GetPosition());
+    if(tab)
+    {
+        if(this->m_ribbon_bar_minimised)
+        {
+            this->ShowPanels();
+            this->m_temporary_shown = true;
+        }
+    else 
+        this->m_temporary_shown = false;
+    }
     if(tab && tab != &m_pages.Item(m_current_page))
     {
         wxRibbonBarEvent query(wxEVT_COMMAND_RIBBONBAR_PAGE_CHANGING, GetId(), tab->page);
@@ -957,6 +970,9 @@
                 wxRibbonBarEvent event(wxEVT_COMMAND_RIBBONBAR_TOGGLED, GetId());
                 event.SetEventObject(this);
                 ProcessWindowEvent(event);
+		    
+		m_ribbon_bar_minimised = !m_ribbon_bar_minimised;
+		m_temporary_shown = false;
             }
         }
     }
@@ -1168,4 +1184,11 @@
     }
 }
 
+void wxRibbonBar::HideIfTemporaryShown()
+{
+    if(m_temporary_shown)
+        this->HidePanels();
+    else
+        this->ShowPanels();
+}
 #endif // wxUSE_RIBBON
Index: src/ribbon/page.cpp
===================================================================
--- src/ribbon/page.cpp	(revision 72292)
+++ src/ribbon/page.cpp	(working copy)
@@ -1091,4 +1091,8 @@
     return best;
 }
 
+void wxRibbonPage::HideIfTemporaryShown()
+{
+    ((wxRibbonBar *)m_parent)->HideIfTemporaryShown();
+}
 #endif // wxUSE_RIBBON
