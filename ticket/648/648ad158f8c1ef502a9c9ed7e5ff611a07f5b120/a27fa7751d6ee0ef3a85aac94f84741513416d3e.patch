diff -uNr wxWidgets-3.1.4-orig/src/msw/textctrl.cpp wxWidgets-3.1.4-mine/src/msw/textctrl.cpp
--- wxWidgets-3.1.4-orig/src/msw/textctrl.cpp	2020-07-22 19:20:06.000000000 +0200
+++ wxWidgets-3.1.4-mine/src/msw/textctrl.cpp	2020-08-24 16:50:03.235632100 +0200
@@ -57,6 +57,8 @@
 #include "wx/msw/private.h"
 #include "wx/msw/winundef.h"
 
+#include "wx/msw/private/comptr.h"
+
 #include <string.h>
 #include <stdlib.h>
 
@@ -65,6 +67,7 @@
 #if wxUSE_RICHEDIT
     #include <richedit.h>
     #include <richole.h>
+    #include <tom.h>
     #include "wx/msw/ole/oleutils.h"
 #endif // wxUSE_RICHEDIT
 
@@ -127,6 +130,9 @@
 // defining it ourselves.
 DEFINE_GUID(wxIID_IRichEditOleCallback,
     0x00020d03, 0x0000, 0x0000, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46);
+    
+DEFINE_GUID(wxIID_ITextDocument,
+    0x8CC497C0, 0xA1DF, 0x11CE, 0x80, 0x98, 0x00, 0xAA, 0x00, 0x47, 0xBE, 0x5D);     
 
 } // anonymous namespace
 #endif // wxUSE_OLE
@@ -667,7 +673,35 @@
 
         ::SendMessage(GetHwnd(), EM_SETMARGINS, wParam, lParam);
     }
-
+    
+    // For RichEdit versions >= 4, SetFont() will call EM_SETCHARFORMAT which affects
+    // the undo buffer which we don't want because obviously we want the undo buffer
+    // to be initially empty. That's why we use Undo(tomFalse) here to clear the undo
+    // buffer. Since Undo(tomFalse) also disables the undo buffer, we need to enable it
+    // again immediately after clearing by calling Undo(tomTrue)
+    if ( GetRichVersion() >= 4 )
+    {	    
+        LPRICHEDITOLE pRichEditOle = NULL;
+        wxCOMPtr<ITextDocument> pDoc;       
+        bool didSuspend = false;
+ 		       
+        if ( SendMessage(GetHwnd(), EM_GETOLEINTERFACE, 0, (LPARAM)&pRichEditOle) && pRichEditOle )
+        {
+            HRESULT hr = pRichEditOle->QueryInterface(wxIID_ITextDocument, reinterpret_cast<void **> (&(pDoc)));               
+ 	    if( SUCCEEDED(hr) )
+ 	    {
+ 	        pDoc->Undo(tomFalse, NULL);
+ 	        didSuspend = true;
+ 	    }
+        }    	
+    	
+        if ( didSuspend )
+            pDoc->Undo(tomTrue, NULL);                       
+            
+        if ( pRichEditOle )     
+            pRichEditOle->Release();      
+    }
+    
     return true;
 }
 
@@ -2949,7 +2983,7 @@
         // the default font for it.
         wxTextAttr attr;
         attr.SetFont(font);
-        SetStyle(-1, -1, attr);
+        SetStyle(-1, -1, attr);                     
     }
 
     return true;
diff -uNr wxWidgets-3.1.4-orig/tests/controls/textentrytest.cpp wxWidgets-3.1.4-mine/tests/controls/textentrytest.cpp
--- wxWidgets-3.1.4-orig/tests/controls/textentrytest.cpp	2020-07-22 19:20:06.000000000 +0200
+++ wxWidgets-3.1.4-mine/tests/controls/textentrytest.cpp	2020-08-24 17:00:36.887890300 +0200
@@ -357,6 +357,8 @@
 {
     wxTextEntry * const entry = GetTestEntry();
 
+    CPPUNIT_ASSERT(!entry->CanUndo());
+    
     entry->AppendText("sometext");
 
     if(entry->CanUndo())
