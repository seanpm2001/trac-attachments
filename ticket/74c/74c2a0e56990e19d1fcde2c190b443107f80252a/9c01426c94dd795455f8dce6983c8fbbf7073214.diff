diff --git samples/clipboard/clipboard.cpp samples/clipboard/clipboard.cpp
index faaa532..3edc4e2 100644
--- samples/clipboard/clipboard.cpp
+++ samples/clipboard/clipboard.cpp
@@ -21,6 +21,7 @@
 #endif
 
 #include "wx/clipbrd.h"
+#include "wx/dirctrl.h"
 
 #if !defined(__WXMSW__) && !defined(__WXPM__)
     #include "../sample.xpm"
@@ -57,8 +58,12 @@ public:
     void OnClipboardChange(wxClipboardEvent&event);
 #endif
 
+    void OnMiddleClick(wxMouseEvent& event);
+    void OnTreeSelectionChanged(wxTreeEvent& event);
+    
 private:
     wxTextCtrl        *m_textctrl;
+    wxGenericDirCtrl* gdc;
 #if USE_ASYNCHRONOUS_CLIPBOARD_REQUEST
     AsyncRequestState  m_request;
     bool               m_clipboardSupportsText;
@@ -131,11 +136,19 @@ MyFrame::MyFrame(const wxString& title)
     wxPanel *panel = new wxPanel( this, -1 );
 
     wxBoxSizer *main_sizer = new wxBoxSizer( wxVERTICAL );
+    
+    gdc = new wxGenericDirCtrl(panel,wxID_ANY,wxDirDialogDefaultFolderStr,
+                                wxDefaultPosition,wxDefaultSize, wxDIRCTRL_MULTIPLE | wxDIRCTRL_3D_INTERNAL);
+    main_sizer->Add( gdc, 1, wxEXPAND | wxALL, 10 );
+    gdc->GetTreeCtrl()->Bind(wxEVT_COMMAND_TREE_SEL_CHANGED, wxTreeEventHandler(MyFrame::OnTreeSelectionChanged), this);
+    
     main_sizer->Add( new wxButton( panel, ID_Write, "Get clipboard text" ) );
     m_textctrl = new wxTextCtrl( panel, ID_Text, "", wxDefaultPosition,
       wxDefaultSize, wxTE_MULTILINE );
     main_sizer->Add( m_textctrl, 1, wxGROW );
     panel->SetSizer( main_sizer );
+    
+    m_textctrl->Bind(wxEVT_MIDDLE_DOWN, wxMouseEventHandler(MyFrame::OnMiddleClick), this);
 }
 
 void MyFrame::OnWriteClipboardContents(wxCommandEvent& WXUNUSED(event))
@@ -146,12 +159,41 @@ void MyFrame::OnWriteClipboardContents(wxCommandEvent& WXUNUSED(event))
         {
             wxTextDataObject data;
             wxTheClipboard->GetData( data );
-            m_textctrl->Clear();
-            m_textctrl->SetValue( data.GetText() );
+                //m_textctrl->Clear();
+                m_textctrl->AppendText( "The clipboard contains:\n" );
+                m_textctrl->AppendText( data.GetText() );
+                m_textctrl->AppendText( "\n" );
+            }
+            wxTheClipboard->Close();
+       }
+    else
+       {
+           m_textctrl->AppendText( "Failed to open the clipboard\n" );
+       }
+}
 
+void MyFrame::OnMiddleClick(wxMouseEvent& WXUNUSED(event))
+{
+#if defined(__WXGTK__) && wxCHECK_VERSION(2,9,0)
+       wxTheClipboard->UsePrimarySelection(true);
+       if (wxTheClipboard->Open())
+       {
+            if (wxTheClipboard->IsSupported( wxDF_UNICODETEXT ))
+            {
+                wxTextDataObject data;
+                wxTheClipboard->GetData( data );
+                m_textctrl->AppendText( "The primary selection contains:\n" );
+                m_textctrl->AppendText( data.GetText() );
+                m_textctrl->AppendText( "\n" );
         }
         wxTheClipboard->Close();
    }
+       else
+       {
+           m_textctrl->AppendText( "Failed to open the primary selection\n" );
+       }
+        wxTheClipboard->UsePrimarySelection(false);
+#endif
 }
 
 #if USE_ASYNCHRONOUS_CLIPBOARD_REQUEST
@@ -201,4 +243,31 @@ void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
     wxMessageBox("Clipboard sample", "About clipboard", wxOK|wxICON_INFORMATION, this);
 }
 
+void MyFrame::OnTreeSelectionChanged(wxTreeEvent& event)
+{
+    event.Skip();
+    wxArrayString filepaths; gdc->GetPaths(filepaths);
+
+#if defined(__WXGTK__) && wxCHECK_VERSION(2,9,0)
+    wxString filenames = filepaths.Item(0).AfterLast(wxFILE_SEP_PATH);
+    for (size_t n=1; n < filepaths.GetCount(); ++n)
+        filenames << wxT(", ") << filepaths.Item(n).AfterLast(wxFILE_SEP_PATH);
+	wxTheClipboard->UsePrimarySelection(true);
+    if (wxTheClipboard->Open())
+      { wxTheClipboard->SetData(new wxTextDataObject(filenames));
+        wxTheClipboard->Close();
+      }
+    wxTheClipboard->UsePrimarySelection(false);
+#endif
+    
 
+    wxString selections = filepaths.Item(0);
+    for (size_t n=1; n < filepaths.GetCount(); ++n)
+        selections << wxT(", ") << filepaths.Item(n);
+    if (wxTheClipboard->Open())
+      { wxTheClipboard->SetData(new wxTextDataObject(selections));
+        wxTheClipboard->Close();
+      }
+
+    //DoWriteClipboardContents();
+}
