diff -ru contrib-was/include/wx/stc/stc.h contrib/include/wx/stc/stc.h
--- contrib-was/include/wx/stc/stc.h	2007-11-21 13:52:25.000000000 +0100
+++ contrib/include/wx/stc/stc.h	2008-03-02 18:20:10.000000000 +0100
@@ -3393,6 +3393,10 @@
 
     bool                m_lastKeyDownConsumed;
 
+    // the timestamp that consists of the last wheel event
+    // added to the time taken to process that event.
+    long m_lastWheelTimestamp;
+
     friend class ScintillaWX;
     friend class Platform;
 #endif
diff -ru contrib-was/src/stc/stc.cpp contrib/src/stc/stc.cpp
--- contrib-was/src/stc/stc.cpp	2007-11-21 13:52:24.000000000 +0100
+++ contrib/src/stc/stc.cpp	2008-03-02 18:24:02.000000000 +0100
@@ -172,6 +172,7 @@
     m_swx = new ScintillaWX(this);
     m_stopWatch.Start();
     m_lastKeyDownConsumed = false;
+    m_lastWheelTimestamp = 0;
     m_vScrollBar = NULL;
     m_hScrollBar = NULL;
 #if wxUSE_UNICODE
@@ -3094,11 +3095,18 @@
 
 
 void wxStyledTextCtrl::OnMouseWheel(wxMouseEvent& evt) {
-    m_swx->DoMouseWheel(evt.GetWheelRotation(),
-                        evt.GetWheelDelta(),
-                        evt.GetLinesPerAction(),
-                        evt.ControlDown(),
-                        evt.IsPageScroll());
+    // prevent having an event queue with wheel events
+    // that cannot be processed reasonable fast.
+    if(m_lastWheelTimestamp <= evt.GetTimestamp()) {
+        m_lastWheelTimestamp = m_stopWatch.Time();
+        m_swx->DoMouseWheel(evt.GetWheelRotation(),
+                            evt.GetWheelDelta(),
+                            evt.GetLinesPerAction(),
+                            evt.ControlDown(),
+                            evt.IsPageScroll());
+        m_lastWheelTimestamp = m_stopWatch.Time() - m_lastWheelTimestamp;
+        m_lastWheelTimestamp += evt.GetTimestamp();
+    }
 }
 
 

 	  	 
