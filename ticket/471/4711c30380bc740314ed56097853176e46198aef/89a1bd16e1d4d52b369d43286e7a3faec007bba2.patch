--- wxWindows/samples/menu/menu.cpp	2003-12-01 07:53:38.000000000 +0100
+++ wxWin/samples/menu/menu.cpp	2004-01-02 16:03:45.000000000 +0100
@@ -296,3 +296,3 @@
 
-    frame->Show(TRUE);
+    frame->Show(true);
 
@@ -304,3 +304,3 @@
 
-    return TRUE;
+    return true;
 }
@@ -343,6 +343,6 @@
     menubarMenu->Append(Menu_MenuBar_Toggle, _T("&Toggle menu\tCtrl-T"),
-                        _T("Toggle the first menu in the menubar"), TRUE);
+                        _T("Toggle the first menu in the menubar"), true);
     menubarMenu->AppendSeparator();
     menubarMenu->Append(Menu_MenuBar_Enable, _T("&Enable menu\tCtrl-E"),
-                        _T("Enable or disable the last menu"), TRUE);
+                        _T("Enable or disable the last menu"), true);
     menubarMenu->AppendSeparator();
@@ -376,5 +376,5 @@
     menuMenu->Append(Menu_Menu_Enable, _T("&Enable menu item\tAlt-E"),
-                     _T("Enable or disable the last menu item"), TRUE);
+                     _T("Enable or disable the last menu item"), true);
     menuMenu->Append(Menu_Menu_Check, _T("&Check menu item\tAlt-C"),
-                     _T("Check or uncheck the last menu item"), TRUE);
+                     _T("Check or uncheck the last menu item"), true);
     menuMenu->AppendSeparator();
@@ -407,6 +407,6 @@
     // these items should be initially checked
-    menuBar->Check(Menu_MenuBar_Toggle, TRUE);
-    menuBar->Check(Menu_MenuBar_Enable, TRUE);
-    menuBar->Check(Menu_Menu_Enable, TRUE);
-    menuBar->Check(Menu_Menu_Check, FALSE);
+    menuBar->Check(Menu_MenuBar_Toggle, true);
+    menuBar->Check(Menu_MenuBar_Enable, true);
+    menuBar->Check(Menu_Menu_Enable, true);
+    menuBar->Check(Menu_Menu_Check, false);
 
@@ -422,3 +422,3 @@
                                 wxTE_MULTILINE);
-    m_textctrl->SetEditable(FALSE);
+    m_textctrl->SetEditable(false);
 
@@ -439,3 +439,3 @@
     // delete the event handler installed in ctor
-    PopEventHandler(TRUE);
+    PopEventHandler(true);
 
@@ -450,3 +450,3 @@
     menu->AppendSeparator();
-    menu->Append(Menu_Dummy_Second, _T("&Second item\tCtrl-F2"), _T(""), TRUE);
+    menu->Append(Menu_Dummy_Second, _T("&Second item\tCtrl-F2"), _T(""), true);
 
@@ -454,3 +454,3 @@
     {
-        title->Printf(wxT("Dummy menu &%u"), (unsigned)++m_countDummy);
+        title->Printf(_T("Dummy menu &%u"), (unsigned)++m_countDummy);
     }
@@ -468,3 +468,3 @@
     {
-        wxLogWarning(wxT("No last item in the last menu!"));
+        wxLogWarning(_T("No last item in the last menu!"));
 
@@ -484,7 +484,7 @@
 
-    wxString msg = wxString::Format(wxT("Menu command %d"), id);
+    wxString msg = wxString::Format(_T("Menu command %d"), id);
     if ( GetMenuBar()->FindItem(id)->IsCheckable() )
     {
-        msg += wxString::Format(wxT(" (the item is currently %schecked)"),
-                                event.IsChecked() ? "" : "not ");
+        msg += wxString::Format(_T(" (the item is currently %schecked)"),
+                                event.IsChecked() ? _T("") : _T("not "));
     }
@@ -500,3 +500,3 @@
 {
-    Close(TRUE);
+    Close(true);
 }
@@ -523,3 +523,3 @@
         // don't let delete the first 2 menus
-        wxLogError(wxT("Can't delete any more menus"));
+        wxLogError(_T("Can't delete any more menus"));
     }
@@ -576,3 +576,3 @@
 
-    wxLogMessage(wxT("The label of the last menu item is '%s'"),
+    wxLogMessage(_T("The label of the last menu item is '%s'"),
                  mbar->GetLabelTop(count - 1).c_str());
@@ -622,3 +622,3 @@
         {
-            wxLogWarning(wxT("No menu with label '%s'"), label.c_str());
+            wxLogWarning(_T("No menu with label '%s'"), label.c_str());
         }
@@ -626,3 +626,3 @@
         {
-            wxLogMessage(wxT("Menu %d has label '%s'"), index, label.c_str());
+            wxLogMessage(_T("Menu %d has label '%s'"), index, label.c_str());
         }
@@ -633,3 +633,3 @@
 {
-    wxLogMessage(wxT("Dummy item #%d"), event.GetId() - Menu_Dummy_First + 1);
+    wxLogMessage(_T("Dummy item #%d"), event.GetId() - Menu_Dummy_First + 1);
 }
@@ -643,3 +643,3 @@
     menu->Append(Menu_Dummy_Third, _T("&Third dummy item\tCtrl-F3"),
-                 _T("Checkable item"), TRUE);
+                 _T("Checkable item"), true);
 }
@@ -664,3 +664,3 @@
     {
-        wxLogWarning(wxT("No items to delete!"));
+        wxLogWarning(_T("No items to delete!"));
     }
@@ -714,3 +714,3 @@
     {
-        wxLogMessage(wxT("The label of the last menu item is '%s'"),
+        wxLogMessage(_T("The label of the last menu item is '%s'"),
                      item->GetLabel().c_str());
@@ -749,3 +749,3 @@
                                                     : _T("disabled"))
-            << '\n';
+            << _T('\n');
 
@@ -765,7 +765,7 @@
             if ( flags & wxACCEL_ALT )
-                msg << wxT("Alt-");
+                msg << _T("Alt-");
             if ( flags & wxACCEL_CTRL )
-                msg << wxT("Ctrl-");
+                msg << _T("Ctrl-");
             if ( flags & wxACCEL_SHIFT )
-                msg << wxT("Shift-");
+                msg << _T("Shift-");
 
@@ -786,3 +786,3 @@
                 case WXK_F12:
-                    msg << wxT('F') << code - WXK_F1 + 1;
+                    msg << _T('F') << code - WXK_F1 + 1;
                     break;
@@ -800,3 +800,3 @@
 
-                    wxFAIL_MSG( wxT("unknown keyboard accel") );
+                    wxFAIL_MSG( _T("unknown keyboard accel") );
             }
@@ -832,3 +832,3 @@
     {
-        size_t menuindex = 0;
+        size_t menuindex;
         int index = wxNOT_FOUND;
@@ -841,3 +841,3 @@
         {
-            wxLogWarning(wxT("No menu item with label '%s'"), label.c_str());
+            wxLogWarning(_T("No menu item with label '%s'"), label.c_str());
         }
@@ -845,3 +845,3 @@
         {
-            wxLogMessage(wxT("Menu item %d in menu %lu has label '%s'"),
+            wxLogMessage(_T("Menu item %d in menu %lu has label '%s'"),
                          index, (unsigned long)menuindex, label.c_str());
@@ -858,3 +858,3 @@
     menu.Append(Menu_Popup_ToBeDeleted, _T("To be &deleted"));
-    menu.Append(Menu_Popup_ToBeChecked, _T("To be &checked"), _T(""), TRUE);
+    menu.Append(Menu_Popup_ToBeChecked, _T("To be &checked"), _T(""), true);
     menu.Append(Menu_Popup_ToBeGreyed, _T("To be &greyed"),
@@ -865,4 +865,4 @@
     menu.Delete(Menu_Popup_ToBeDeleted);
-    menu.Check(Menu_Popup_ToBeChecked, TRUE);
-    menu.Enable(Menu_Popup_ToBeGreyed, FALSE);
+    menu.Check(Menu_Popup_ToBeChecked, true);
+    menu.Enable(Menu_Popup_ToBeGreyed, false);
 
@@ -897,4 +897,10 @@
 {
-    wxLogStatus(this, _T("A %smenu has been %s."),
-                event.IsPopup() ? _T("popup ") : _T(""), what);
+    wxString msg;
+    msg << _T("A ")
+        << ( event.IsPopup() ? _T("popup ") : _T("") )
+        << _T("menu has been ")
+        << what
+        << _T(".");
+           
+    wxLogStatus(this, msg.c_str());
 }
@@ -903,3 +909,3 @@
 {
-    event.Enable(FALSE);
+    event.Enable(false);
 }
@@ -908,4 +914,4 @@
 {
-    event.Enable(TRUE);
-    event.Check(TRUE);
+    event.Enable(true);
+    event.Check(true);
 }
@@ -916,5 +922,5 @@
     if (which == 2)
-        event.Check(TRUE);
+        event.Check(true);
     else
-        event.Check(FALSE);
+        event.Check(false);
 }

 	  	 
