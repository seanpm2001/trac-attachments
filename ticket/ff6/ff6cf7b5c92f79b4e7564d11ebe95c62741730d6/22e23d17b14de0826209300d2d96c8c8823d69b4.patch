Index: src/aui/tabart.cpp
===================================================================
--- src/aui/tabart.cpp	(revision 76959)
+++ src/aui/tabart.cpp	(working copy)
@@ -431,11 +431,6 @@
         dc.SetBrush(*wxWHITE_BRUSH);
         dc.DrawRectangle(r.x+2, r.y+1, r.width-3, r.height-4);
 
-        // these two points help the rounded corners appear more antialiased
-        dc.SetPen(wxPen(m_activeColour));
-        dc.DrawPoint(r.x+2, r.y+1);
-        dc.DrawPoint(r.x+r.width-2, r.y+1);
-
         // set rectangle down a bit for gradient drawing
         r.SetHeight(r.GetHeight()/2);
         r.x += 2;
@@ -457,24 +452,15 @@
         // start the gradent up a bit and leave the inside border inset
         // by a pixel for a 3D look.  Only the top half of the inactive
         // tab will have a slight gradient
-        r.x += 3;
-        r.y++;
-        r.width -= 4;
-        r.height /= 2;
-        r.height--;
+        r.x += 2;
+        r.width -= 3;
+        r.y += r.height;
+        //r.y -= 3;
 
         // -- draw top gradient fill for glossy look
-        wxColor top_color = m_baseColour;
-        wxColor bottom_color = top_color.ChangeLightness(160);
+        wxColor top_color = *wxWHITE;
+        wxColor bottom_color = m_activeColour;
         dc.GradientFillLinear(r, bottom_color, top_color, wxNORTH);
-
-        r.y += r.height;
-        r.y--;
-
-        // -- draw bottom fill for glossy look
-        top_color = m_baseColour;
-        bottom_color = m_baseColour;
-        dc.GradientFillLinear(r, top_color, bottom_color, wxSOUTH);
     }
 
     // draw tab outline
