Index: include/wx/anidecod.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/anidecod.h,v
retrieving revision 1.3
diff -bu2 -r1.3 include/wx/anidecod.h
--- include/wx/anidecod.h
+++ include/wx/anidecod.h
@@ -50,4 +50,5 @@
     virtual wxAnimationDisposal GetDisposalMethod(size_t frame) const;
     virtual long GetDelay(size_t frame) const;
+    virtual wxColour GetTransparentColour(size_t frame) const;

 public:
Index: include/wx/animdecod.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/animdecod.h,v
retrieving revision 1.3
diff -bu2 -r1.3 include/wx/animdecod.h
--- include/wx/animdecod.h
+++ include/wx/animdecod.h
@@ -113,4 +113,7 @@
     virtual long GetDelay(size_t frame) const = 0;

+    // the transparent colour for this frame if any or wxNullColour.
+    virtual wxColour GetTransparentColour(size_t frame) const = 0;
+
     // get global data
     wxSize GetAnimationSize() const { return m_szAnimation; }
Index: include/wx/gifdecod.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gifdecod.h,v
retrieving revision 1.19
diff -bu2 -r1.19 include/wx/gifdecod.h
--- include/wx/gifdecod.h
+++ include/wx/gifdecod.h
@@ -72,5 +72,6 @@
     unsigned char* GetPalette(size_t frame) const;
     unsigned int GetNcolours(size_t frame) const;
-    int GetTransparentColour(size_t frame) const;
+    int GetTransparentColourIndex(size_t frame) const;
+    wxColour GetTransparentColour(size_t frame) const;

     virtual wxSize GetFrameSize(size_t frame) const;
Index: include/wx/generic/animate.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/generic/animate.h,v
retrieving revision 1.4
diff -bu2 -r1.4 include/wx/generic/animate.h
--- include/wx/generic/animate.h
+++ include/wx/generic/animate.h
@@ -41,5 +41,7 @@

     wxPoint GetFramePosition(size_t frame) const;
+    wxSize GetFrameSize(size_t frame) const;
     wxAnimationDisposal GetDisposalMethod(size_t frame) const;
+    wxColour GetTransparentColour(size_t frame) const;
     wxColour GetBackgroundColour() const;

@@ -67,5 +69,5 @@
 {
 public:
-    wxAnimationCtrl();
+    wxAnimationCtrl() { Init(); }
     wxAnimationCtrl(wxWindow *parent,
             wxWindowID id,
@@ -76,7 +78,11 @@
             const wxString& name = wxAnimationCtrlNameStr)
     {
+        Init();
+
         Create(parent, id, anim, pos, size, style, name);
     }

+    void Init();
+
     bool Create(wxWindow *parent, wxWindowID id,
                 const wxAnimation& anim = wxNullAnimation,
@@ -134,7 +140,8 @@
     // Draw the background; use this when e.g. previous frame had wxANIM_TOBACKGROUND disposal.
     void DisposeToBackground(wxDC& dc);
+    void DisposeToBackground(wxDC& dc, const wxPoint &pos, const wxSize &sz);

     void IncrementalUpdateBackingStore();
-    void RebuildBackingStoreUpToFrame(size_t);
+    bool RebuildBackingStoreUpToFrame(size_t);
     void DrawFrame(wxDC &dc, size_t);

Index: include/wx/gtk/animate.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/gtk/animate.h,v
retrieving revision 1.3
diff -bu2 -r1.3 include/wx/gtk/animate.h
--- include/wx/gtk/animate.h
+++ include/wx/gtk/animate.h
@@ -90,5 +90,5 @@
 {
 public:
-    wxAnimationCtrl();
+    wxAnimationCtrl() { Init(); }
     wxAnimationCtrl(wxWindow *parent,
                         wxWindowID id,
@@ -99,7 +99,11 @@
                         const wxString& name = wxAnimationCtrlNameStr)
     {
+        Init();
+
         Create(parent, id, anim, pos, size, style, name);
     }

+    void Init();
+
     bool Create(wxWindow *parent, wxWindowID id,
                 const wxAnimation& anim = wxNullAnimation,
Index: src/common/anidecod.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/anidecod.cpp,v
retrieving revision 1.5
diff -bu2 -r1.5 src/common/anidecod.cpp
--- src/common/anidecod.cpp
+++ src/common/anidecod.cpp
@@ -97,4 +97,16 @@
 }

+wxColour wxANIDecoder::GetTransparentColour(size_t frame) const
+{
+    size_t idx = m_info[frame].m_imageIndex;
+
+    if (!m_images[idx].HasMask())
+        return wxNullColour;
+
+    return wxColour(m_images[idx].GetMaskRed(),
+                    m_images[idx].GetMaskGreen(),
+                    m_images[idx].GetMaskBlue());
+}
+

 //---------------------------------------------------------------------------
Index: src/common/gifdecod.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/gifdecod.cpp,v
retrieving revision 1.46
diff -bu2 -r1.46 src/common/gifdecod.cpp
--- src/common/gifdecod.cpp
+++ src/common/gifdecod.cpp
@@ -126,5 +126,5 @@
     src = GetData(frame);
     dst = image->GetData();
-    transparent = GetTransparentColour(frame);
+    transparent = GetTransparentColourIndex(frame);

     /* set transparent colour mask */
@@ -207,8 +207,20 @@
 }

+wxColour wxGIFDecoder::GetTransparentColour(size_t frame) const
+{
+    unsigned char *pal = GetFrame(frame)->pal;
+    int n = GetFrame(frame)->transparent;
+    if (n == -1)
+        return wxNullColour;
+
+    return wxColour(pal[n*3 + 0],
+                    pal[n*3 + 1],
+                    pal[n*3 + 2]);
+}
+
 unsigned char* wxGIFDecoder::GetData(size_t frame) const    { return (GetFrame(frame)->p); }
 unsigned char* wxGIFDecoder::GetPalette(size_t frame) const { return (GetFrame(frame)->pal); }
 unsigned int wxGIFDecoder::GetNcolours(size_t frame) const  { return (GetFrame(frame)->ncolours); }
-int wxGIFDecoder::GetTransparentColour(size_t frame) const  { return (GetFrame(frame)->transparent); }
+int wxGIFDecoder::GetTransparentColourIndex(size_t frame) const  { return (GetFrame(frame)->transparent); }


Index: src/generic/animateg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/generic/animateg.cpp,v
retrieving revision 1.8
diff -bu2 -r1.8 src/generic/animateg.cpp
--- src/generic/animateg.cpp
+++ src/generic/animateg.cpp
@@ -83,4 +83,11 @@
 }

+wxSize wxAnimation::GetFrameSize(size_t frame) const
+{
+    wxCHECK_MSG( IsOk(), wxDefaultSize, wxT("invalid animation") );
+
+    return M_ANIMDATA->GetFrameSize(frame);
+}
+
 wxAnimationDisposal wxAnimation::GetDisposalMethod(size_t frame) const
 {
@@ -90,4 +97,11 @@
 }

+wxColour wxAnimation::GetTransparentColour(size_t frame) const
+{
+    wxCHECK_MSG( IsOk(), wxNullColour, wxT("invalid animation") );
+
+    return M_ANIMDATA->GetTransparentColour(frame);
+}
+
 wxColour wxAnimation::GetBackgroundColour() const
 {
@@ -260,10 +274,13 @@
 END_EVENT_TABLE()

-wxAnimationCtrl::wxAnimationCtrl()
+void wxAnimationCtrl::Init()
 {
     m_currentFrame = 0;
     m_looped = false;
     m_isPlaying = false;
-    m_useWinBackgroundColour = false;
+
+    // use the window background colour by default to be consistent
+    // with the GTK+ native version
+    m_useWinBackgroundColour = true;
 }

@@ -273,8 +290,4 @@
 {
     m_animation = animation;
-    m_currentFrame = 0;
-    m_looped = true;
-    m_isPlaying = false;
-    m_useWinBackgroundColour = false;
     m_timer.SetOwner(this);

@@ -326,5 +339,11 @@
     m_currentFrame = 0;
     if (m_animation.IsOk())
-        RebuildBackingStoreUpToFrame(0);
+    {
+        if (!RebuildBackingStoreUpToFrame(0))
+        {
+            m_animation = wxNullAnimation;
+            return;
+        }
+    }
     else
     {
@@ -365,10 +384,12 @@
     m_looped = looped;
     m_currentFrame = 0;
-    m_isPlaying = true;

     // small optimization: if the back store was already updated to the
     // first frame, don't rebuild it
     if (oldframe != 0)
-        RebuildBackingStoreUpToFrame(0);
+        if (!RebuildBackingStoreUpToFrame(0))
+            return false;
+
+    m_isPlaying = true;

     // DrawCurrentFrame() will use our updated backing store
@@ -391,5 +412,5 @@
 // ----------------------------------------------------------------------------

-void wxAnimationCtrl::RebuildBackingStoreUpToFrame(size_t frame)
+bool wxAnimationCtrl::RebuildBackingStoreUpToFrame(size_t frame)
 {
     // if we've not created the backing store yet or it's too
@@ -403,5 +424,6 @@
             m_backingStore.GetWidth() < w || m_backingStore.GetHeight() < h )
     {
-        m_backingStore.Create(w, h);
+        if (!m_backingStore.Create(w, h))
+            return false;
     }

@@ -420,4 +442,7 @@
             DrawFrame(dc, i);
         }
+        else if (m_animation.GetDisposalMethod(i) == wxANIM_TOBACKGROUND)
+            DisposeToBackground(dc, m_animation.GetFramePosition(i),
+                                    m_animation.GetFrameSize(i));
     }

@@ -425,4 +450,6 @@
     DrawFrame(dc, frame);
     dc.SelectObject(wxNullBitmap);
+
+    return true;
 }

@@ -448,5 +475,6 @@
         {
         case wxANIM_TOBACKGROUND:
-            DisposeToBackground(dc);
+            DisposeToBackground(dc, m_animation.GetFramePosition(m_currentFrame-1),
+                                    m_animation.GetFrameSize(m_currentFrame-1));
             break;

@@ -463,5 +491,6 @@
             }
             else
-                RebuildBackingStoreUpToFrame(m_currentFrame-2);
+                if (!RebuildBackingStoreUpToFrame(m_currentFrame-2))
+                    Stop();
             break;

@@ -502,5 +531,5 @@
     wxColour col = IsUsingWindowBackgroundColour()
                     ? GetBackgroundColour()
-                    : m_animation.GetBackgroundColour() ;
+                    : m_animation.GetBackgroundColour();
     wxBrush brush(col);
     dc.SetBackground(brush);
@@ -508,4 +537,15 @@
 }

+void wxAnimationCtrl::DisposeToBackground(wxDC& dc, const wxPoint &pos, const wxSize &sz)
+{
+    wxColour col = IsUsingWindowBackgroundColour()
+                    ? GetBackgroundColour()
+                    : m_animation.GetBackgroundColour();
+    wxBrush brush(col);
+    dc.SetBrush(brush);         // SetBrush and not SetBackground !!
+    dc.SetPen(*wxTRANSPARENT_PEN);
+    dc.DrawRectangle(pos, sz);
+}
+
 // ----------------------------------------------------------------------------
 // wxAnimationCtrl - event handlers
@@ -562,5 +602,6 @@
     //     extended and rebuilt. Try to avoid it!!
     if (m_animation.IsOk())
-        RebuildBackingStoreUpToFrame(m_currentFrame);
+        if (!RebuildBackingStoreUpToFrame(m_currentFrame))
+            Stop();     // in case we are playing
 }

Index: src/gtk/animate.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/gtk/animate.cpp,v
retrieving revision 1.3
diff -bu2 -r1.3 src/gtk/animate.cpp
--- src/gtk/animate.cpp
+++ src/gtk/animate.cpp
@@ -181,5 +181,5 @@
 END_EVENT_TABLE()

-wxAnimationCtrl::wxAnimationCtrl()
+void wxAnimationCtrl::Init()
 {
     m_anim = NULL;
@@ -216,7 +216,4 @@
     SetBestSize(size);

-    m_anim = NULL;
-    m_iter = NULL;
-    m_bPlaying = false;
     if (anim != wxNullAnimation)
         SetAnimation(anim);

 	  	 
