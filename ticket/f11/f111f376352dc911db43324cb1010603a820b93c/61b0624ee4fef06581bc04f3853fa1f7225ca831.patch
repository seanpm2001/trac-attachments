? ffileReadAll.patch
Index: include/wx/ffile.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/ffile.h,v
retrieving revision 1.17
diff -b -u -2 -r1.17 ffile.h
--- include/wx/ffile.h	2004/05/23 20:50:21	1.17
+++ include/wx/ffile.h	2004/10/06 17:53:31
@@ -61,5 +61,5 @@
   // read/write (unbuffered)
     // read all data from the file into a string (useful for text files)
-  bool ReadAll(wxString *str);
+  bool ReadAll(wxString *str, wxMBConv& conv = wxConvUTF8);
     // returns number of bytes read - use Eof() and Error() to see if an error
     // occured or not
Index: src/common/ffile.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/ffile.cpp,v
retrieving revision 1.18
diff -b -u -2 -r1.18 ffile.cpp
--- src/common/ffile.cpp	2004/09/14 12:08:27	1.18
+++ src/common/ffile.cpp	2004/10/06 17:53:31
@@ -92,5 +92,5 @@
 // ----------------------------------------------------------------------------
 
-bool wxFFile::ReadAll(wxString *str)
+bool wxFFile::ReadAll(wxString *str, wxMBConv& conv)
 {
     wxCHECK_MSG( str, false, wxT("invalid parameter") );
@@ -98,25 +98,17 @@
 
     clearerr(m_fp);
-
-    str->Empty();
-    str->Alloc(Length());
-
-    wxChar buf[1024];
-    static const size_t nSize = WXSIZEOF(buf) - 1; // -1 for trailing '\0'
-    while ( !Eof() )
+    size_t fileLen = Length();
+    char *buf = (char*)malloc((fileLen + 1) * sizeof(char));
+    size_t nRead = fread(buf, sizeof(char), fileLen, m_fp);
+    if ( (nRead < fileLen) || Error() ) 
     {
-        size_t nRead = fread(buf, sizeof(wxChar), nSize, m_fp);
-        if ( (nRead < nSize) && Error() )
-        {
             wxLogSysError(_("Read error on file '%s'"), m_name.c_str());
-
             return false;
         }
-        //else: just EOF
-
-        buf[nRead] = 0;
-        *str += buf;
-    }
-
+    buf[fileLen] = 0;
+    wxString tmpStr(buf, conv);
+    *str = tmpStr;
+    free(buf);
+    buf = 0;
     return true;
 }

 	  	 
