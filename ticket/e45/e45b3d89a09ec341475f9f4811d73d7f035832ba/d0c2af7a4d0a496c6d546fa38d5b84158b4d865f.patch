Index: include/wx/log.h
===================================================================
--- include/wx/log.h	(revision 72338)
+++ include/wx/log.h	(working copy)
@@ -63,6 +63,7 @@
 
 #include "wx/dynarray.h"
 #include "wx/hashmap.h"
+#include "wx/msgout.h"
 
 #if wxUSE_THREADS
     #include "wx/thread.h"
@@ -730,6 +731,7 @@
 public:
     // redirect log output to a FILE
     wxLogStderr(FILE *fp = NULL);
+	~wxLogStderr();
 
 protected:
     // implement sink function
@@ -737,6 +739,9 @@
 
     FILE *m_fp;
 
+private:
+	wxMessageOutput* m_pAdditionalOutput;
+
     wxDECLARE_NO_COPY_CLASS(wxLogStderr);
 };
 
Index: include/wx/msgout.h
===================================================================
--- include/wx/msgout.h	(revision 72338)
+++ include/wx/msgout.h	(working copy)
@@ -108,14 +108,14 @@
 class WXDLLIMPEXP_BASE wxMessageOutputStderr : public wxMessageOutput
 {
 public:
-    wxMessageOutputStderr(FILE *fp = stderr) : m_fp(fp) { }
+    wxMessageOutputStderr(FILE *fp = NULL);
 
     virtual void Output(const wxString& str);
 
 protected:
-    // return the string with "\n" appended if it doesn't already terminate
-    // with it (in which case it's returned unchanged)
-    wxString AppendLineFeedIfNeeded(const wxString& str);
+    // should be '\n' appended if it doesn't already terminate
+    // with it?
+    static bool AppendLineFeedIfNeeded(const wxString& str);
 
     FILE *m_fp;
 };
@@ -140,6 +140,10 @@
     virtual void Output(const wxString& str);
 
 private:
+
+#ifdef __WINDOWS__
+	bool WriteToStderr( const wxString& str );
+#endif // __WINDOWS__
     wxMessageOutputFlags m_flags;
 };
 
Index: src/common/log.cpp
===================================================================
--- src/common/log.cpp	(revision 72338)
+++ src/common/log.cpp	(working copy)
@@ -847,18 +847,13 @@
 // ----------------------------------------------------------------------------
 
 wxLogStderr::wxLogStderr(FILE *fp)
+	:m_pAdditionalOutput( NULL )
 {
     if ( fp == NULL )
         m_fp = stderr;
     else
         m_fp = fp;
-}
 
-void wxLogStderr::DoLogText(const wxString& msg)
-{
-    wxFputs(msg + '\n', m_fp);
-    fflush(m_fp);
-
     // under GUI systems such as Windows or Mac, programs usually don't have
     // stderr at all, so show the messages also somewhere else, typically in
     // the debugger window so that they go at least somewhere instead of being
@@ -868,11 +863,27 @@
         wxAppTraits *traits = wxTheApp ? wxTheApp->GetTraits() : NULL;
         if ( traits && !traits->HasStderr() )
         {
-            wxMessageOutputDebug().Output(msg + wxS('\n'));
+			m_pAdditionalOutput = new wxMessageOutputDebug();
         }
     }
 }
 
+wxLogStderr::~wxLogStderr()
+{
+	wxDELETE( m_pAdditionalOutput );
+}
+
+void wxLogStderr::DoLogText(const wxString& msg)
+{
+    wxFputs(msg + '\n', m_fp);
+    fflush(m_fp);
+
+    if (m_pAdditionalOutput != NULL)
+    {
+        m_pAdditionalOutput->Output(msg + '\n');
+    }
+}
+
 // ----------------------------------------------------------------------------
 // wxLogStream implementation
 // ----------------------------------------------------------------------------
Index: src/common/msgout.cpp
===================================================================
--- src/common/msgout.cpp	(revision 72338)
+++ src/common/msgout.cpp	(working copy)
@@ -105,19 +105,37 @@
 // wxMessageOutputBest
 // ----------------------------------------------------------------------------
 
-void wxMessageOutputBest::Output(const wxString& str)
+#ifdef __WINDOWS__
+bool wxMessageOutputBest::WriteToStderr(const wxString& str)
 {
-#ifdef __WINDOWS__
-    // decide whether to use console output or not
     wxAppTraits * const traits = wxTheApp ? wxTheApp->GetTraits() : NULL;
     const bool hasStderr = traits ? traits->CanUseStderr() : false;
 
-    if ( !(m_flags & wxMSGOUT_PREFER_MSGBOX) )
+    if ( !(m_flags & wxMSGOUT_PREFER_MSGBOX) && hasStderr )
     {
-        if ( hasStderr && traits->WriteToStderr(AppendLineFeedIfNeeded(str)) )
-            return;
+		if ( AppendLineFeedIfNeeded(str) )
+		{
+			return traits->WriteToStderr(str+'\n');
+		}
+		else
+		{
+			return traits->WriteToStderr(str);
+		}
     }
+	else
+		return false;
+}
+#endif // __WINDOWS__
 
+void wxMessageOutputBest::Output(const wxString& str)
+{
+#ifdef __WINDOWS__
+    // decide whether to use console output or not
+	if ( WriteToStderr(str) )
+	{
+		return;
+	}
+
     wxString title;
     if ( wxTheApp )
         title = wxTheApp->GetAppDisplayName();
@@ -135,25 +153,30 @@
 // wxMessageOutputStderr
 // ----------------------------------------------------------------------------
 
-wxString wxMessageOutputStderr::AppendLineFeedIfNeeded(const wxString& str)
+wxMessageOutputStderr::wxMessageOutputStderr(FILE *fp)
 {
-    wxString strLF(str);
-    if ( strLF.empty() || *strLF.rbegin() != '\n' )
-        strLF += '\n';
+    if ( fp == NULL )
+        m_fp = stderr;
+    else
+        m_fp = fp;
+}
 
-    return strLF;
+bool wxMessageOutputStderr::AppendLineFeedIfNeeded(const wxString& str)
+{
+    return str.empty() || *str.rbegin() != '\n';
 }
 
 void wxMessageOutputStderr::Output(const wxString& str)
 {
-    const wxString strWithLF = AppendLineFeedIfNeeded(str);
-    const wxWX2MBbuf buf = strWithLF.mb_str();
+	if ( AppendLineFeedIfNeeded(str) )
+	{
+		wxFputs(str + '\n', m_fp);
+	}
+	else
+	{
+		wxFputs(str, m_fp);
+	}
 
-    if ( buf )
-        fprintf(m_fp, "%s", (const char*) buf);
-    else // print at least something
-        fprintf(m_fp, "%s", (const char*) strWithLF.ToAscii());
-
     fflush(m_fp);
 }
 
@@ -164,7 +187,11 @@
 void wxMessageOutputDebug::Output(const wxString& str)
 {
 #if defined(__WINDOWS__) && !defined(__WXMICROWIN__)
-    wxString out(AppendLineFeedIfNeeded(str));
+    wxString out(str);
+	if ( AppendLineFeedIfNeeded(str) )
+	{
+		out += '\n';
+	}
     out.Replace(wxT("\t"), wxT("        "));
     out.Replace(wxT("\n"), wxT("\r\n"));
     ::OutputDebugString(out.t_str());
