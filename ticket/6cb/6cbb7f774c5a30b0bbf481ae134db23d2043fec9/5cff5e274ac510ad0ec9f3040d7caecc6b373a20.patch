Index: src/msw/aboutdlg.cpp
===================================================================
--- src/msw/aboutdlg.cpp	(revision 61530)
+++ src/msw/aboutdlg.cpp	(working copy)
@@ -51,7 +51,7 @@
         if ( info.HasVersion() )
         {
             msg << wxT('\n');
-            msg << wxString::Format(_("Version %s"), info.GetVersion());
+            msg << info.GetLongVersion();
         }
 
         msg << wxT("\n\n");
Index: src/osx/cocoa/aboutdlg.mm
===================================================================
--- src/osx/cocoa/aboutdlg.mm	(revision 61530)
+++ src/osx/cocoa/aboutdlg.mm	(working copy)
@@ -87,8 +87,7 @@
         if ( info.HasVersion() )
         {
             opts.Set(CFSTR("Version"),info.GetVersion());
-            opts.Set(CFSTR("ApplicationVersion"),
-                     wxString::Format(_("Version %s"), info.GetVersion()));
+            opts.Set(CFSTR("ApplicationVersion"),info.GetLongVersion());
         }
 
         if ( info.HasCopyright() )
Index: src/osx/carbon/aboutdlg.cpp
===================================================================
--- src/osx/carbon/aboutdlg.cpp	(revision 61530)
+++ src/osx/carbon/aboutdlg.cpp	(working copy)
@@ -69,10 +69,7 @@
         opts.Set(kHIAboutBoxNameKey, info.GetName());
 
         if ( info.HasVersion() )
-        {
-            opts.Set(kHIAboutBoxVersionKey,
-                     wxString::Format(_("Version %s"), info.GetVersion()));
-        }
+            opts.Set(kHIAboutBoxVersionKey,info.GetLongVersion());
 
         if ( info.HasCopyright() )
             opts.Set(kHIAboutBoxCopyrightKey, info.GetCopyrightToDisplay());
Index: include/wx/aboutdlg.h
===================================================================
--- include/wx/aboutdlg.h	(revision 61530)
+++ include/wx/aboutdlg.h	(working copy)
@@ -36,10 +36,35 @@
     wxString GetName() const
         { return m_name.empty() ? wxTheApp->GetAppDisplayName() : m_name; }
 
-    // version of the program, in free format (but without "version" word)
-    void SetVersion(const wxString& version) { m_version = version; }
+    // version: version of the program without "version" word (e.g., "1.2" or "RC2")
+    // longVersion: version of the program (e.g., "Version 1.2" or "Release Candidate 2")
+    // if longVersion is empty and version is not empty,
+    //     longVersion is automatically constructed from version
+    //
+    // generic and gtk native: use short version only, as a suffix to the program name
+    // msw and osx native: use long version
+    void SetVersion(const wxString& version, const wxString& longVersion = wxString())
+    {
+        if (version.empty())
+        {
+            m_version.clear();
+
+            wxASSERT_MSG( longVersion.empty(),
+                    "Attempt to set a long version while clearing the short version in wxAboutDialogInfo::SetVersion" );
+            m_longVersion.clear();
+        } else
+        {
+            m_version = version;
+
+            if (longVersion.empty())
+                m_longVersion = wxString::Format( _("Version %s"), m_version );
+            else
+                m_longVersion = longVersion;
+        }
+    }
     bool HasVersion() const { return !m_version.empty(); }
     const wxString& GetVersion() const { return m_version; }
+    const wxString& GetLongVersion() const { return m_longVersion; }
 
     // brief, but possibly multiline, description of the program
     void SetDescription(const wxString& desc) { m_description = desc; }
@@ -135,6 +160,7 @@
 private:
     wxString m_name,
              m_version,
+             m_longVersion,
              m_description,
              m_copyright,
              m_licence;
Index: interface/wx/aboutdlg.h
===================================================================
--- interface/wx/aboutdlg.h	(revision 61530)
+++ interface/wx/aboutdlg.h	(working copy)
@@ -148,10 +148,19 @@
     void SetTranslators(const wxArrayString& translators);
 
     /**
-        Set the version of the program. The version is in free format, i.e. not
-        necessarily in the @c x.y.z form but it shouldn't contain the "version" word.
+        Set the version of the program. The word "version" shouldn't be included
+        in @a version. Example @a version values: "1.2" and "RC2". In about dialogs
+        with more space set aside for version information, @a longVersion is used.
+        Example @a longVersion values: "Version 1.2" and "Release Candidate 2".
+        If @a version is non-empty but @a longVersion is empty, a long version
+        is constructed automatically, using @a version (without localization,
+        the long version simply prepends "Version " to @a version).
+
+        The generic about dialog and native GTK+ dialog use @a version only,
+        as a suffix to the program name. The native MSW and OS X about dialogs
+        use the long version.
     */
-    void SetVersion(const wxString& version);
+    void SetVersion(const wxString& version, const wxString& longVersion = wxString());
 
     /**
         Set the web site for the program and its description (which defaults to @a url
