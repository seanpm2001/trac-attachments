Index: docs/latex/wx/classes.tex
===================================================================
--- docs/latex/wx/classes.tex	(revision 51201)
+++ docs/latex/wx/classes.tex	(working copy)
@@ -236,6 +236,7 @@
 \input iconloc.tex
 \input iconevt.tex
 \input idleevt.tex
+\input idmanager.tex
 \input image.tex
 \input imaglist.tex
 \input ilayout.tex
Index: docs/latex/wx/idmanager.tex
===================================================================
--- docs/latex/wx/idmanager.tex	(revision 0)
+++ docs/latex/wx/idmanager.tex	(revision 0)
@@ -0,0 +1,64 @@
+\section{\class{wxIdManager}}\label{wxidmanager}
+
+wxIdManager is responsible for allocating and releasing window IDs.  It
+is by \helpref{wxWindow::NewControlId}{wxwindownewcontrolid} and
+\helpref{wxWindow::UnreserveControlId}{wxwindowunreservecontrolid}, and can also
+be used be used directly.
+
+\wxheading{Derived from}
+
+No base class
+
+\wxheading{Include files}
+
+<wx/windowid.h> included from defs.h
+
+\wxheading{Library}
+
+\helpref{wxCore}{librarieslist}
+
+\wxheading{See also}
+
+\helpref{wxWindow::NewControlId}{wxwindownewcontrolid}
+\helpref{wxWindow::UnreserveControlId}{wxwindowunreservecontrolid}
+\helpref{Window IDs overview}{windowidsoverview}
+
+\latexignore{\rtfignore{\wxheading{Members}}}
+
+\membersection{wxIdManager::ReserveControlId}\label{wxidmanagerreservecontrolid}
+
+\func{static wxWindowID}{ReserveControlId}{\param{int}{ count = 1}}
+
+Called directly by \helpref{wxWindow::NewControlId}{wxwindownewcontrolid},
+this function will create a new ID or range of IDs.  The IDs will be
+reserved until assigned to a \helpref{wxWindowIDRef}{windowidsoverview}
+or unreserved with \helpref{UnreserveControlId}{wxidmanagerunreservecontrolid}.
+Only ID values that are not assigned to a \helpref{wxWindowIDRef}{windowidsoverview}
+need to be unreserved.
+
+\wxheading{Parameters}
+
+\docparam{count}{The number of sequential IDs to reserve.}
+
+\wxheading{Return value}
+
+The value of the first ID in the sequence, or wxID_NONE.
+
+\membersection{wxIdManager::UnreserveControlId}\label{wxidmanagerunreservecontrolid}
+
+\func{static wxWindowID}{UnreserveControlId}{\param{wxWindowID}{ id}, \param{int}{ count = 1}}
+
+Called directly by \helpref{wxWindow::UnreserveControlId}{wxwindowunreservecontrolid},
+this function will unreserve an ID or range of IDs that is currently reserved.  This
+should only be called for IDs returned by \helpref{ReserveControlId}{wxidmanagerreservecontrolid}
+that have NOT been assigned to a \helpref{wxWindowIDRef}{windowidsoverview}
+
+\wxheading{Parameters}
+
+\docparam{id}{The first of the range of IDs to unreserve.}
+
+\docparam{count}{The number of sequential IDs to unreserve.}
+
+\wxheading{Return value}
+
+The value of the first ID in the sequence, or wxID_NONE.
Index: docs/latex/wx/topics.tex
===================================================================
--- docs/latex/wx/topics.tex	(revision 51201)
+++ docs/latex/wx/topics.tex	(working copy)
@@ -29,6 +29,7 @@
 \helpref{C++ exceptions overview}{exceptionsoverview}\\
 \helpref{Window styles}{windowstyles}\\
 \helpref{Window deletion overview}{windowdeletionoverview}\\
+\helpref{Window IDs overview}{windowidsoverview}\\
 \helpref{Environment variables}{envvars}
 
 {\large {\bf Overviews of non-GUI classes}}
Index: docs/latex/wx/topics2.tex
===================================================================
--- docs/latex/wx/topics2.tex	(revision 51201)
+++ docs/latex/wx/topics2.tex	(working copy)
@@ -45,6 +45,7 @@
 \input tbook.tex
 \input tcommdlg.tex
 \input tdocview.tex
+\input twindowid.tex
 % Deprecated
 %\input ttab.tex
 \input ttoolbar.tex
@@ -63,3 +64,4 @@
 \input re_syntax.tex
 \input arc.tex
 \input backwardcompat.tex
+
Index: docs/latex/wx/twindowid.tex
===================================================================
--- docs/latex/wx/twindowid.tex	(revision 0)
+++ docs/latex/wx/twindowid.tex	(revision 0)
@@ -0,0 +1,63 @@
+\section{Window IDs overview}\label{windowidsoverview}
+
+\wxheading{See Also}
+
+\helpref{wxIdManager}{wxidmanager}
+\helpref{wxWindow::NewControlId}{wxwindownewcontrolid}
+\helpref{wxWindow::UnreserveControlId}{wxwindowunreservecontrolid}
+
+\subsection{Introduction}\label{windowidsoverviewintro}
+
+Various contols and other parts of wxWidgets need an ID.  Sometimes the
+ID may be directly provided by the use or have a predefined value, such as
+wxID_OPEN.  Often, however, the value of the ID is unimportant and is created
+automatically by calling \helpref{wxWindow::NewControlId}{wxwindownewcontrolid}
+or by passing wxID_ANY as the ID of an object.
+
+There are two ways to generate an ID.  One way, is to start at a negative number,
+and for each new ID, return the next smallest number.  This is fine for systems
+that can used the full range of negative numbers for an ID, as this provides
+more than enough IDs and it would take a very very long time to run out and
+wrap around.  However, some systems can not use the full range of the ID value.
+Windows, for example, can only use 16 bit IDs, and only has about 32000 possible
+automatic IDs that can be generated by \helpref{wxWindow::NewControlId}{wxwindownewcontrolid}.
+If the program runs long enough, depending on the program itself, using this first
+method would cause the IDs to wrap around into the positive ID range and cause possible
+clashes with any directly specified ID values.
+
+The other way is to keep track of the IDs returned by \helpref{wxWindow::NewControlId}{wxwindownewcontrolid}
+and don't return them again until the ID is completely free and not being used by
+any other objects.  This will make sure that the ID values do not clash with one
+another.  This is accomplished by keeping a reference count for each of the IDs
+that can possibly be returned by \helpref{wxWindow::NewControlId}{wxwindownewcontrolid}.
+Other IDs are not reference counted.
+
+\subsection{Data types}\label{windowidsoverviewtypes}
+
+A wxWindowID is just the integer type for a window ID.  It should be used almost
+everywhere.  To help keep track of the count for the automatically generated IDs,
+a new type, wxWindowIDRef exists, that can take the place of wxWindowID where needed.
+When an ID is first created, it is marked as reserved.  When assigning it to a
+wxWindowIDRef, the usage count of the ID is increased, or set to 1 if it is currently
+reserved.  Assigning the same ID to several wxWindowIDRefs will keep track of the count.
+As the wxWindowIDRef gets destroyed or its value changes, it will decrease the count
+of the used ID.  When there are no more wxWindowIDRef types with the created ID, the
+ID is considered free and can then be used again by \helpref{wxWindow::NewControlId}{wxwindownewcontrolid}.
+
+If a created ID is not assigned to a wxWindowIDRef, then it remains reserved until it
+is unreserved manually with \helpref{wxWindow::UnreserveControlId}{wxwindowunreservecontrolid}.
+However, if it is assigned to a wxWindowIDRef, then it will be unreserved automatically
+and will be considered free when the count is 0, and should NOT be manually unreserved.
+
+wxWindowIDRef can store both automatic IDs from \helpref{wxWindow::NewControlId}{wxwindownewcontrolid}
+as well as normal IDs.  Reference counting is only done for the automatic IDs.  Also,
+wxWindowIDRef has conversion operators that allow it to be treated just like a wxWindowID.
+
+\subsection{Using wxWindowIDRef}\label{windowidsoverviewusing}
+
+A wxWindowIDRef should be used in place of a wxWindowID where you want to make sure the
+ID is not created again by \helpref{wxWindow::NewControlId}{wxwindownewcontrolid}
+at least until the wxWindowIDRef is destroyed, usually when the associated object is destroyed.
+This is done already for windows, menu items, and tool bar items.
+It should only be used in the main thread, as it is not thread safe.
+
Index: docs/latex/wx/window.tex
===================================================================
--- docs/latex/wx/window.tex	(revision 51201)
+++ docs/latex/wx/window.tex	(working copy)
@@ -1934,20 +1934,30 @@
 See \helpref{Navigate}{wxwindownavigate} for more information.
 
 
-\membersection{wxWindow::NextControlId}\label{wxwindownextcontrolid}
+\membersection{wxWindow::NewControlId}\label{wxwindownewcontrolid}
 
-\func{static int}{NextControlId}{\param{int }{winid}}
+\func{static wxWindowID}{NewControlId}{\param{int}{ count = 1}}
 
-If two controls are created consecutively using \texttt{wxID\_ANY} id, this
-function allows to retrieve the effective id of the latter control from the id
-of the former. This is useful for example to find the control following its 
-\helpref{wxStaticText}{wxstatictext} label if only the id of or pointer to the
-label is available to the caller but it is known that the two controls were
-created together.
+Create a new ID or range of IDs that are not currently in use.  The
+IDs will be reserved until assigned to a \helpref{wxWindowIDRef}{windowidsoverview}
+or unreserved with \helpref{UnreserveControlId}{wxwindowunreservecontrolid}.
 
+See \helpref{Window IDs overview}{windowidsoverview} for more information.
+
+\wxheading{Parameters}
+
+\docparam{count}{The number of sequential IDs to reserve.}
+
+\wxheading{Return value}
+
+Returns the ID or the first ID of the range, or wxID_NONE if enough
+free IDs were not available.
+
 \wxheading{See also}
 
-\helpref{PrevControlId}{wxwindowprevcontrolid}
+\helpref{UnreserveControlId}{wxwindowunreservecontrolid}
+\helpref{wxIdManager}{wxidmanager}
+\helpref{Window IDs overview}{windowidsoverview}
 
 
 %% VZ: wxWindow::OnXXX() functions should not be documented but I'm leaving
@@ -2508,15 +2518,6 @@
 \end{twocollist}}
 }
 
-
-\membersection{wxWindow::PrevControlId}\label{wxwindowprevcontrolid}
-
-\func{static int}{PrevControlId}{\param{int }{winid}}
-
-This is similar to \helpref{NextControlId}{wxwindownextcontrolid} but returns
-the id of the control created just before the one with the given \arg{winid}.
-
-
 \membersection{wxWindow::PushEventHandler}\label{wxwindowpusheventhandler}
 
 \func{void}{PushEventHandler}{\param{wxEvtHandler* }{handler}}
@@ -3897,7 +3898,26 @@
 
 \helpref{wxWindow::RegisterHotKey}{wxwindowregisterhotkey}
 
+\membersection{wxWindow::UnreserveControlId}\label{wxwindowunreservecontrolid}
 
+\func{static void}{UnreserveControlId}{\param{wxWindowID}{ id}, \param{int}{ count = 1}}
+
+Unreserve an ID or range of IDs that was reserved by \helpref{NewControlId}{wxwindownewcontrolid}.
+
+See \helpref{Window IDs overview}{windowidsoverview} for more information.
+
+\wxheading{Parameters}
+
+\docparam{id}{The starting ID of the range of IDs to unreserve.}
+
+\docparam{count}{The number of sequential IDs to unreserve.}
+
+\wxheading{See also}
+
+\helpref{NewControlId}{wxwindownewcontrolid}
+\helpref{wxIdManager}{wxidmanager}
+\helpref{Window IDs overview}{windowidsoverview}
+
 \membersection{wxWindow::Update}\label{wxwindowupdate}
 
 \func{virtual void}{Update}{\void}

 	  	 
