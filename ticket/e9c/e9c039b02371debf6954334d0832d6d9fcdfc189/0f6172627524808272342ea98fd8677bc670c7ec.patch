Index: app.cpp
===================================================================
--- app.cpp	(revision 53340)
+++ app.cpp	(working copy)
@@ -118,13 +118,13 @@
 WXDLLIMPEXP_CORE       wxChar *wxCanvasClassName;
 WXDLLIMPEXP_CORE       wxChar *wxCanvasClassNameNR;
 #else
-WXDLLIMPEXP_CORE const wxChar *wxCanvasClassName        = wxT("wxWindowClass");
-WXDLLIMPEXP_CORE const wxChar *wxCanvasClassNameNR      = wxT("wxWindowClassNR");
+WXDLLIMPEXP_CORE const wxChar *wxCanvasClassName = 0;
+WXDLLIMPEXP_CORE const wxChar *wxCanvasClassNameNR = 0;
 #endif
-WXDLLIMPEXP_CORE const wxChar *wxMDIFrameClassName      = wxT("wxMDIFrameClass");
-WXDLLIMPEXP_CORE const wxChar *wxMDIFrameClassNameNoRedraw = wxT("wxMDIFrameClassNR");
-WXDLLIMPEXP_CORE const wxChar *wxMDIChildFrameClassName = wxT("wxMDIChildFrameClass");
-WXDLLIMPEXP_CORE const wxChar *wxMDIChildFrameClassNameNoRedraw = wxT("wxMDIChildFrameClassNR");
+WXDLLIMPEXP_CORE const wxChar *wxMDIFrameClassName = 0;
+WXDLLIMPEXP_CORE const wxChar *wxMDIFrameClassNameNoRedraw = 0;
+WXDLLIMPEXP_CORE const wxChar *wxMDIChildFrameClassName = 0;
+WXDLLIMPEXP_CORE const wxChar *wxMDIChildFrameClassNameNoRedraw = 0;
 
 // ----------------------------------------------------------------------------
 // private functions
@@ -336,6 +336,44 @@
 // RegisterWindowClasses
 // ---------------------------------------------------------------------------
 
+void RegisterUniquifiedClassName(const wxString& uniquifiedClassName,
+                                 const wxChar** className,
+                                 PWNDCLASS lpWndClass)
+{
+    size_t length = uniquifiedClassName.Length()+1;
+    wxChar* newChars = new wxChar[length];
+    wxStrncpy(newChars, uniquifiedClassName, length);
+    *className = newChars;
+    lpWndClass->lpszClassName = *className;
+
+    if (!RegisterClass(lpWndClass))
+    {
+        wxString errorMessage(wxT("RegisterClass(") + uniquifiedClassName + wxT(")"));
+        wxLogLastError(errorMessage);
+    }
+}
+
+void RegisterUniquifiedClassNameWithNR(const wxString& baseName,
+                                       const wxChar** className,
+                                       const wxChar** classNameNR,
+                                       PWNDCLASS lpWndClass)
+{
+    // for each class we register one with CS_(V|H)REDRAW style and one
+    // without for windows created with wxNO_FULL_REDRAW_ON_REPAINT flag
+    static const long styleNormal = CS_HREDRAW | CS_VREDRAW | CS_DBLCLKS;
+    static const long styleNoRedraw = CS_DBLCLKS;
+
+    wxString suffix(wxString::Format(wxT("@%p"), className));
+
+    wxString uniquifiedClassName(baseName + suffix);
+    lpWndClass->style = styleNormal;
+    RegisterUniquifiedClassName(uniquifiedClassName, className, lpWndClass);
+
+    wxString uniquifiedClassNameNR(uniquifiedClassName + wxT("NR"));
+    lpWndClass->style = styleNoRedraw;
+    RegisterUniquifiedClassName(uniquifiedClassNameNR, classNameNR, lpWndClass);
+}
+
 // TODO we should only register classes really used by the app. For this it
 //      would be enough to just delay the class registration until an attempt
 //      to create a window of this class is made.
@@ -344,73 +382,32 @@
     WNDCLASS wndclass;
     wxZeroMemory(wndclass);
 
-    // for each class we register one with CS_(V|H)REDRAW style and one
-    // without for windows created with wxNO_FULL_REDRAW_ON_REPAINT flag
-    static const long styleNormal = CS_HREDRAW | CS_VREDRAW | CS_DBLCLKS;
-    static const long styleNoRedraw = CS_DBLCLKS;
-
     // the fields which are common to all classes
     wndclass.lpfnWndProc   = (WNDPROC)wxWndProc;
     wndclass.hInstance     = wxhInstance;
     wndclass.hCursor       = ::LoadCursor((HINSTANCE)NULL, IDC_ARROW);
 
-    // register the class for all normal windows
+    // register the class for all normal windows and "no redraw" frames
     wndclass.hbrBackground = (HBRUSH)(COLOR_BTNFACE + 1);
-    wndclass.lpszClassName = wxCanvasClassName;
-    wndclass.style         = styleNormal;
+    RegisterUniquifiedClassNameWithNR(wxT("wxWindowClass"),
+                                      &wxCanvasClassName,
+                                      &wxCanvasClassNameNR,
+                                      &wndclass);
 
-    if ( !RegisterClass(&wndclass) )
-    {
-        wxLogLastError(wxT("RegisterClass(frame)"));
-    }
-
-    // "no redraw" frame
-    wndclass.lpszClassName = wxCanvasClassNameNR;
-    wndclass.style         = styleNoRedraw;
-
-    if ( !RegisterClass(&wndclass) )
-    {
-        wxLogLastError(wxT("RegisterClass(no redraw frame)"));
-    }
-
-    // Register the MDI frame window class.
+    // Register the MDI frame window class and "no redraw" MDI frame
     wndclass.hbrBackground = (HBRUSH)NULL; // paint MDI frame ourselves
-    wndclass.lpszClassName = wxMDIFrameClassName;
-    wndclass.style         = styleNormal;
+    RegisterUniquifiedClassNameWithNR(wxT("wxMDIFrameClass"),
+                                      &wxMDIFrameClassName,
+                                      &wxMDIFrameClassNameNoRedraw,
+                                      &wndclass);
 
-    if ( !RegisterClass(&wndclass) )
-    {
-        wxLogLastError(wxT("RegisterClass(MDI parent)"));
-    }
-
-    // "no redraw" MDI frame
-    wndclass.lpszClassName = wxMDIFrameClassNameNoRedraw;
-    wndclass.style         = styleNoRedraw;
-
-    if ( !RegisterClass(&wndclass) )
-    {
-        wxLogLastError(wxT("RegisterClass(no redraw MDI parent frame)"));
-    }
-
-    // Register the MDI child frame window class.
+    // Register the MDI child frame window class and "no redraw" MDI child frame
     wndclass.hbrBackground = (HBRUSH)(COLOR_WINDOW + 1);
-    wndclass.lpszClassName = wxMDIChildFrameClassName;
-    wndclass.style         = styleNormal;
+    RegisterUniquifiedClassNameWithNR(wxT("wxMDIChildFrameClass"),
+                                      &wxMDIChildFrameClassName,
+                                      &wxMDIChildFrameClassNameNoRedraw,
+                                      &wndclass);
 
-    if ( !RegisterClass(&wndclass) )
-    {
-        wxLogLastError(wxT("RegisterClass(MDI child)"));
-    }
-
-    // "no redraw" MDI child frame
-    wndclass.lpszClassName = wxMDIChildFrameClassNameNoRedraw;
-    wndclass.style         = styleNoRedraw;
-
-    if ( !RegisterClass(&wndclass) )
-    {
-        wxLogLastError(wxT("RegisterClass(no redraw MDI child)"));
-    }
-
     return true;
 }
 
@@ -418,6 +415,12 @@
 // UnregisterWindowClasses
 // ---------------------------------------------------------------------------
 
+void DestroyUniquifiedClassName(const wxChar** location)
+{
+    delete *location;
+    *location = 0;
+}
+
 bool wxApp::UnregisterWindowClasses()
 {
     bool retval = true;
@@ -430,6 +433,7 @@
 
         retval = false;
     }
+    DestroyUniquifiedClassName(&wxMDIFrameClassName);
 
     // "no redraw" MDI frame
     if ( !::UnregisterClass(wxMDIFrameClassNameNoRedraw, wxhInstance) )
@@ -438,6 +442,7 @@
 
         retval = false;
     }
+    DestroyUniquifiedClassName(&wxMDIFrameClassNameNoRedraw);
 
     // MDI child frame window class.
     if ( !::UnregisterClass(wxMDIChildFrameClassName, wxhInstance) )
@@ -446,6 +451,7 @@
 
         retval = false;
     }
+    DestroyUniquifiedClassName(&wxMDIChildFrameClassName);
 
     // "no redraw" MDI child frame
     if ( !::UnregisterClass(wxMDIChildFrameClassNameNoRedraw, wxhInstance) )
@@ -454,6 +460,7 @@
 
         retval = false;
     }
+    DestroyUniquifiedClassName(&wxMDIChildFrameClassNameNoRedraw);
 
     // canvas class name
     if ( !::UnregisterClass(wxCanvasClassName, wxhInstance) )
@@ -462,6 +469,7 @@
 
         retval = false;
     }
+    DestroyUniquifiedClassName(&wxCanvasClassName);
 
     if ( !::UnregisterClass(wxCanvasClassNameNR, wxhInstance) )
     {
@@ -469,6 +477,7 @@
 
         retval = false;
     }
+    DestroyUniquifiedClassName(&wxCanvasClassNameNR);
 #endif // __WXMICROWIN__
 
     return retval;

 	  	 
