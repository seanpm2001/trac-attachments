diff -ru wxWidgets.orig/samples/minimal/minimal.cpp wxWidgets/samples/minimal/minimal.cpp
--- wxWidgets.orig/samples/minimal/minimal.cpp	2005-02-21 03:14:03.000000000 +1100
+++ wxWidgets/samples/minimal/minimal.cpp	2005-08-30 18:27:53.000000000 +1000
@@ -30,6 +30,11 @@
     #include "wx/wx.h"
 #endif
 
+#include "wx/artprov.h"
+#include "wx/statbmp.h"
+#include "wx/statline.h"
+#include "wx/stattext.h"
+
 // ----------------------------------------------------------------------------
 // resources
 // ----------------------------------------------------------------------------
@@ -73,6 +78,118 @@
     DECLARE_EVENT_TABLE()
 };
 
+static void LogMouseEvent(const wxString& str, const wxMouseEvent& event)
+{
+    wxString msg;
+
+    if ( event.Entering() )
+    {
+        msg = _T("Mouse entered the window");
+    }
+    else if ( event.Leaving() )
+    {
+        msg = _T("Mouse left the window");
+    }
+    else if ( event.Moving() )
+    {
+        msg = _T("Mouse moving");
+    }
+    else if ( event.Dragging() )
+    {
+        msg = _T("Mouse dragging");
+    }
+    else
+    {
+        // click event
+        wxString button = wxEmptyString;
+        bool dbl, up;
+
+        if ( event.LeftDown() || event.LeftUp() || event.LeftDClick() )
+        {
+            button = _T("Left");
+            dbl    = event.LeftDClick();
+            up     = event.LeftUp();
+        }
+        else if ( event.MiddleDown() || event.MiddleUp() || event.MiddleDClick() )
+        {
+            button = _T("Middle");
+            dbl    = event.MiddleDClick();
+            up     = event.MiddleUp();
+        }
+        else if ( event.RightDown() || event.RightUp() || event.RightDClick() )
+        {
+            button = _T("Right");
+            dbl    = event.RightDClick();
+            up     = event.RightUp();
+        }
+
+        if ( button.empty() )
+            msg = _T("Unknown mouse event");
+        else
+            msg = button << _T(" mouse button ") <<
+                  (dbl ? _T("double clicked") : up ? _T("up") : _T("down"));
+    }
+
+    wxString s;
+    s << str << _T(": ") << msg << _T(" at (") << event.GetX() << _T(", ")
+                                               << event.GetY() << _T(")");
+    wxLogMessage(s);
+}
+
+class MyStaticBitmap: public wxStaticBitmap
+{
+public:
+    MyStaticBitmap(wxWindow *parent, wxWindowID id, wxGDIImage& label, const wxPoint& pos): wxStaticBitmap(parent, id, label, pos) {}
+
+private:
+    void OnMouseEvent(wxMouseEvent& event)
+    {
+        LogMouseEvent(_T("Bitmap"), event);
+    }
+
+    DECLARE_EVENT_TABLE()
+};
+
+class MyStaticLine: public wxStaticLine
+{
+public:
+    MyStaticLine(wxWindow *parent, wxWindowID id, const wxPoint& pos, const wxSize& size): wxStaticLine(parent, id, pos, size) {}
+
+private:
+    void OnMouseEvent(wxMouseEvent& event)
+    {
+        LogMouseEvent(_T("Line"), event);
+    }
+
+    DECLARE_EVENT_TABLE()
+};
+
+class MyStaticText: public wxStaticText
+{
+public:
+    MyStaticText(wxWindow *parent, wxWindowID id, const wxString& label, const wxPoint& pos): wxStaticText(parent, id, label, pos) {}
+
+private:
+    void OnMouseEvent(wxMouseEvent& event)
+    {
+        LogMouseEvent(_T("Text"), event);
+    }
+
+    DECLARE_EVENT_TABLE()
+};
+
+BEGIN_EVENT_TABLE(MyStaticBitmap, wxStaticBitmap)
+    EVT_MOUSE_EVENTS(MyStaticBitmap::OnMouseEvent)
+END_EVENT_TABLE()
+
+BEGIN_EVENT_TABLE(MyStaticLine, wxStaticLine)
+    EVT_MOUSE_EVENTS(MyStaticLine::OnMouseEvent)
+END_EVENT_TABLE()
+
+BEGIN_EVENT_TABLE(MyStaticText, wxStaticText)
+    EVT_MOUSE_EVENTS(MyStaticText::OnMouseEvent)
+END_EVENT_TABLE()
+
 // ----------------------------------------------------------------------------
 // constants
 // ----------------------------------------------------------------------------
@@ -162,6 +279,30 @@
     SetMenuBar(menuBar);
 #endif // wxUSE_MENUS
 
+    wxPanel *panel = new wxPanel(this);
+
+    // add static bitmap
+    wxIcon icon = wxArtProvider::GetIcon(wxART_INFORMATION);
+    MyStaticBitmap *statbmp = new MyStaticBitmap(panel, wxID_ANY, icon,
+                                                 wxPoint(5, 5));
+    statbmp->SetToolTip(_T("wxStaticBitmap"));
+
+    // add static line
+    MyStaticLine *statline = new MyStaticLine(panel, wxID_ANY,
+                                              wxPoint(105, 5), wxSize(100, 20));
+    statline->SetToolTip(_T("wxStaticLine"));
+
+    // add static text
+    MyStaticText *stattext = new MyStaticText(panel, wxID_ANY,
+                                              _T("Static Text"), wxPoint(255, 5));
+    stattext->SetToolTip(_T("wxStaticText"));
+
+    // add textctrl
+    wxTextCtrl *textctrl = new wxTextCtrl(panel, wxID_ANY, wxEmptyString,
+                                          wxPoint(5, 100), wxSize(350, 300),
+                                          wxTE_MULTILINE | wxTE_READONLY);
+    delete wxLog::SetActiveTarget(new wxLogTextCtrl(textctrl));
+
 #if wxUSE_STATUSBAR
     // create a status bar just for fun (by default with 1 pane only)
     CreateStatusBar(2);

 	  	 
