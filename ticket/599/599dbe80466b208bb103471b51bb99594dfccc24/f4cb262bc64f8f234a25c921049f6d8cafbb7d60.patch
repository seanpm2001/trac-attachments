--- src\aui\auibook.cpp	Mon Dec 04 09:59:10 2006
+++ auibook.cpp	Mon Apr 16 16:24:39 2007
@@ -657,6 +657,7 @@
 
 
 int wxAuiDefaultTabArt::ShowDropDown(wxWindow* wnd,
+                                     const wxRect& rect,
                                      const wxAuiNotebookPageArray& pages,
                                      int active_idx)
 {
@@ -677,6 +678,7 @@
     // find out where to put the popup menu of window items
     wxPoint pt = ::wxGetMousePosition();
     pt = wnd->ScreenToClient(pt);
+	if (!rect.IsEmpty() && !rect.Contains(pt)) pt.x = rect.x;
 
     // find out the screen coordinate at the bottom of the tab ctrl
     wxRect cli_rect = wnd->GetClientRect();
@@ -1104,6 +1106,7 @@
 
 
 int wxAuiSimpleTabArt::ShowDropDown(wxWindow* wnd,
+                                    const wxRect& WXUNUSED(rect),
                                     const wxAuiNotebookPageArray& pages,
                                     int active_idx)
 {
@@ -2188,16 +2191,7 @@
     }
      else if (button == wxAUI_BUTTON_WINDOWLIST)
     {
-        int idx = GetArtProvider()->ShowDropDown(this, m_pages, GetActivePage());
-
-        if (idx != -1)
-        {
-            wxAuiNotebookEvent e(wxEVT_COMMAND_AUINOTEBOOK_PAGE_CHANGING, m_windowId);
-            e.SetSelection(idx);
-            e.SetOldSelection(GetActivePage());
-            e.SetEventObject(this);
-            GetEventHandler()->ProcessEvent(e);
-        }
+        ShowDropDown();
     }
      else
     {
@@ -2205,6 +2199,33 @@
     }
 }
 
+void wxAuiTabCtrl::ShowDropDown()
+{
+    // Get the rect of the WINDOWLIST button
+    wxRect rect;
+    unsigned int button_count = m_buttons.GetCount();
+    for (unsigned int i = 0; i < button_count; ++i)
+    {
+        wxAuiTabContainerButton& b = m_buttons.Item(i);
+        if (b.id == wxAUI_BUTTON_WINDOWLIST)
+        {
+            rect = b.rect;
+            break;
+        }
+    }
+
+    int idx = GetArtProvider()->ShowDropDown(this, rect, m_pages, GetActivePage());
+
+    if (idx != -1)
+    {
+        wxAuiNotebookEvent e(wxEVT_COMMAND_AUINOTEBOOK_PAGE_CHANGING, m_windowId);
+        e.SetSelection(idx);
+        e.SetOldSelection(GetActivePage());
+        e.SetEventObject(this);
+        GetEventHandler()->ProcessEvent(e);
+    }
+}
+
 // wxTabFrame is an interesting case.  It's important that all child pages
 // of the multi-notebook control are all actually children of that control
 // (and not grandchildren).  wxTabFrame facilitates this.  There is one
@@ -3576,7 +3597,11 @@
     }
 }
 
-
+void wxAuiNotebook::ShowDropDown()
+{
+    wxAuiTabCtrl* tabCtrl = GetActiveTabCtrl();
+    if (tabCtrl) tabCtrl->ShowDropDown();
+}
 
 
 #endif // wxUSE_AUI

 	  	 
