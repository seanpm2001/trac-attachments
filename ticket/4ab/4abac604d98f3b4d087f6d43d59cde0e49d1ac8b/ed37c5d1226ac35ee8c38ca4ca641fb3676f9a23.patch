diff --git a/samples/taskbar/tbtest.cpp b/samples/taskbar/tbtest.cpp
index 2278df44cf..c376dfb046 100644
--- a/samples/taskbar/tbtest.cpp
+++ b/samples/taskbar/tbtest.cpp
@@ -86,6 +86,7 @@ wxBEGIN_EVENT_TABLE(MyDialog, wxDialog)
     EVT_BUTTON(wxID_ABOUT, MyDialog::OnAbout)
     EVT_BUTTON(wxID_OK, MyDialog::OnOK)
     EVT_BUTTON(wxID_EXIT, MyDialog::OnExit)
+    EVT_BUTTON(wxID_PREVIEW, MyDialog::OnSendEvent)
     EVT_CLOSE(MyDialog::OnCloseWindow)
 wxEND_EVENT_TABLE()
 
@@ -118,6 +119,7 @@ MyDialog::MyDialog(const wxString& title)
     sizerBtns->Add(new wxButton(this, wxID_ABOUT, "&About"), flags);
     sizerBtns->Add(new wxButton(this, wxID_OK, "&Hide"), flags);
     sizerBtns->Add(new wxButton(this, wxID_EXIT, "E&xit"), flags);
+    sizerBtns->Add(new wxButton(this, wxID_PREVIEW, "&Send event"), flags);
 
     sizerTop->Add(sizerBtns, flags.Align(wxALIGN_CENTER_HORIZONTAL));
     SetSizerAndFit(sizerTop);
@@ -170,6 +172,13 @@ void MyDialog::OnOK(wxCommandEvent& WXUNUSED(event))
     Show(false);
 }
 
+static UINT gs_task_bar_created_message = RegisterWindowMessage(wxT("TaskbarCreated"));
+
+void MyDialog::OnSendEvent(wxCommandEvent& WXUNUSED(event))
+{
+    SendMessage(HWND_BROADCAST, gs_task_bar_created_message, 0, 0);
+}
+
 void MyDialog::OnExit(wxCommandEvent& WXUNUSED(event))
 {
     Close(true);
diff --git a/samples/taskbar/tbtest.h b/samples/taskbar/tbtest.h
index f908e4b702..c88f84f9a3 100644
--- a/samples/taskbar/tbtest.h
+++ b/samples/taskbar/tbtest.h
@@ -50,6 +50,7 @@ protected:
     void OnOK(wxCommandEvent& event);
     void OnExit(wxCommandEvent& event);
     void OnCloseWindow(wxCloseEvent& event);
+    void OnSendEvent(wxCommandEvent& event);
 
     MyTaskBarIcon   *m_taskBarIcon;
 #if defined(__WXOSX__) && wxOSX_USE_COCOA
