diff --git a/samples/minimal/minimal.cpp b/samples/minimal/minimal.cpp
index a78e462..bc6eab4 100644
--- a/samples/minimal/minimal.cpp
+++ b/samples/minimal/minimal.cpp
@@ -23,6 +23,8 @@
 #ifdef __BORLANDC__
     #pragma hdrstop
 #endif
+#include "wx/infobar.h"
+#include "wx/notebook.h"
 
 // for all others, include the necessary headers (this file is usually all you
 // need because it includes almost all "standard" wxWidgets headers)
@@ -57,6 +59,15 @@ public:
     virtual bool OnInit();
 };
 
+class MyDialog : public wxDialog
+{
+public:
+    MyDialog(wxWindow* parent);
+
+    void OnDlgContextMenu(wxContextMenuEvent& event);
+    void OnShowMessagebox(wxCommandEvent& event);
+};
+
 // Define a new frame type: this is going to be our main frame
 class MyFrame : public wxFrame
 {
@@ -86,7 +97,8 @@ enum
     // it is important for the id corresponding to the "About" command to have
     // this standard value as otherwise it won't be handled properly under Mac
     // (where it is special and put into the "Apple" menu)
-    Minimal_About = wxID_ABOUT
+    Minimal_About = wxID_ABOUT,
+    Minimal_Messagebox = 10000
 };
 
 // ----------------------------------------------------------------------------
@@ -172,6 +184,8 @@ MyFrame::MyFrame(const wxString& title)
     CreateStatusBar(2);
     SetStatusText("Welcome to wxWidgets!");
 #endif // wxUSE_STATUSBAR
+
+    MyDialog dlg(this);
 }
 
 
@@ -198,3 +212,31 @@ void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
                  wxOK | wxICON_INFORMATION,
                  this);
 }
+
+MyDialog::MyDialog(wxWindow* parent) : wxDialog(parent, wxID_ANY, "Contextmenu Test")
+{
+    Bind(wxEVT_COMMAND_MENU_SELECTED, wxCommandEventHandler(MyDialog::OnShowMessagebox), this, Minimal_Messagebox);
+
+    wxTextCtrl* text = new wxTextCtrl(this, wxID_ANY, "Please right-click on me", wxDefaultPosition, wxDefaultSize, wxTE_MULTILINE);
+    text->Bind(wxEVT_CONTEXT_MENU, wxContextMenuEventHandler(MyDialog::OnDlgContextMenu), this);
+
+    wxSizer* sizer = new wxBoxSizer(wxVERTICAL);
+    sizer->Add(text, 1, wxEXPAND);
+    SetSizer(sizer);
+    ShowModal();
+}
+
+void MyDialog::OnDlgContextMenu(wxContextMenuEvent&  WXUNUSED(event))
+{
+    wxMenu menu;
+    menu.Append( Minimal_Messagebox, "Show messagebox" );
+    menu.Append( 2, "Unattached" );
+    menu.Append( 3, "Unattached" );
+
+    PopupMenu(&menu);
+}
+
+void MyDialog::OnShowMessagebox(wxCommandEvent&  WXUNUSED(event))
+{
+    wxMessageBox("Here!");
+}
