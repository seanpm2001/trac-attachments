Index: configure.in
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/configure.in,v
retrieving revision 1.902
diff -u -2 -r1.902 configure.in
--- configure.in	2004/11/28 22:57:43	1.902
+++ configure.in	2004/12/03 16:11:11
@@ -1790,4 +1790,5 @@
 dnl check for large file support
 AC_SYS_LARGEFILE
+AC_FUNC_FSEEKO
 
 dnl we need to define _FILE_OFFSET_BITS or _LARGE_FILES on the compiler command
Index: setup.h.in
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/setup.h.in,v
retrieving revision 1.157
diff -u -2 -r1.157 setup.h.in
--- setup.h.in	2004/11/19 00:25:48	1.157
+++ setup.h.in	2004/12/03 16:11:13
@@ -1307,4 +1307,7 @@
 #undef HAVE_PANGO_FONT_FAMILY_IS_MONOSPACE
 
+/* Define if fseeko and ftello are available.  */
+#undef HAVE_FSEEKO
+
 /* -------------------------------------------------------------------------
    Win32 adjustments section
Index: setup.h_vms
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/setup.h_vms,v
retrieving revision 1.85
diff -u -2 -r1.85 setup.h_vms
--- setup.h_vms	2004/11/24 10:25:36	1.85
+++ setup.h_vms	2004/12/03 16:11:14
@@ -1323,4 +1323,7 @@
 #undef HAVE_XIM
 
+/* Define if fseeko and ftello are available.  */
+#undef HAVE_FSEEKO
+
 /* ---------------------------------------------------------------------
    Win32 adjustments section
Index: docs/latex/wx/ffile.tex
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/docs/latex/wx/ffile.tex,v
retrieving revision 1.8
diff -u -2 -r1.8 ffile.tex
--- docs/latex/wx/ffile.tex	2004/09/30 11:15:57	1.8
+++ docs/latex/wx/ffile.tex	2004/12/03 16:11:21
@@ -156,5 +156,5 @@
 \membersection{wxFFile::Length}\label{wxffilelength}
 
-\constfunc{size\_t}{Length}{\void}
+\constfunc{wxFileOffset}{Length}{\void}
 
 Returns the length of the file.
@@ -176,5 +176,5 @@
 \membersection{wxFFile::Read}\label{wxffileread}
 
-\func{size\_t}{Read}{\param{void*}{ buffer}, \param{off\_t}{ count}}
+\func{size\_t}{Read}{\param{void*}{ buffer}, \param{size\_t}{ count}}
 
 Reads the specified number of bytes into a buffer, returning the actual number read.
@@ -193,5 +193,5 @@
 \membersection{wxFFile::Seek}\label{wxffileseek}
 
-\func{bool}{Seek}{\param{long }{ofs}, \param{wxSeekMode }{mode = wxFromStart}}
+\func{bool}{Seek}{\param{wxFileOffset }{ofs}, \param{wxSeekMode }{mode = wxFromStart}}
 
 Seeks to the specified position and returns \true on success.
@@ -206,5 +206,5 @@
 \membersection{wxFFile::SeekEnd}\label{wxffileseekend}
 
-\func{bool}{SeekEnd}{\param{long }{ofs = 0}}
+\func{bool}{SeekEnd}{\param{wxFileOffset }{ofs = 0}}
 
 Moves the file pointer to the specified number of bytes before the end of the file
@@ -218,5 +218,5 @@
 \membersection{wxFFile::Tell}\label{wxffiletell}
 
-\constfunc{size\_t}{Tell}{\void}
+\constfunc{wxFileOffset}{Tell}{\void}
 
 Returns the current position.
Index: include/wx/ffile.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/ffile.h,v
retrieving revision 1.17
diff -u -2 -r1.17 ffile.h
--- include/wx/ffile.h	2004/05/23 20:50:21	1.17
+++ include/wx/ffile.h	2004/12/03 16:11:24
@@ -79,11 +79,11 @@
   // file pointer operations (return ofsInvalid on failure)
     // move ptr ofs bytes related to start/current pos/end of file
-  bool Seek(long ofs, wxSeekMode mode = wxFromStart);
+  bool Seek(wxFileOffset ofs, wxSeekMode mode = wxFromStart);
     // move ptr to ofs bytes before the end
-  bool SeekEnd(long ofs = 0) { return Seek(ofs, wxFromEnd); }
+  bool SeekEnd(wxFileOffset ofs = 0) { return Seek(ofs, wxFromEnd); }
     // get current position in the file
-  size_t Tell() const;
+  wxFileOffset Tell() const;
     // get current file length
-  size_t Length() const;
+  wxFileOffset Length() const;
 
   // simple accessors: note that Eof() and Error() may only be called if
Index: src/common/ffile.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/ffile.cpp,v
retrieving revision 1.18
diff -u -2 -r1.18 ffile.cpp
--- src/common/ffile.cpp	2004/09/14 12:08:27	1.18
+++ src/common/ffile.cpp	2004/12/03 16:11:39
@@ -43,4 +43,16 @@
 
 // ----------------------------------------------------------------------------
+// seek and tell with large file support if available
+// ----------------------------------------------------------------------------
+
+#ifdef HAVE_FSEEKO
+#   define wxFseek fseeko
+#   define wxFtell ftello
+#else
+#   define wxFseek fseek
+#   define wxFtell ftell
+#endif
+
+// ----------------------------------------------------------------------------
 // opening the file
 // ----------------------------------------------------------------------------
@@ -171,5 +183,5 @@
 // ----------------------------------------------------------------------------
 
-bool wxFFile::Seek(long ofs, wxSeekMode mode)
+bool wxFFile::Seek(wxFileOffset ofs, wxSeekMode mode)
 {
     wxCHECK_MSG( IsOpened(), false, wxT("can't seek on closed file") );
@@ -194,6 +206,15 @@
             break;
     }
+
+#ifndef HAVE_FSEEKO 
+    if ((long)ofs != ofs)
+    {
+        wxLogError(_("Seek error on file '%s' (large files not supported by stdio)"), m_name.c_str());
+
+        return false;
+    }
+#endif
 
-    if ( fseek(m_fp, ofs, origin) != 0 )
+    if ( wxFseek(m_fp, ofs, origin) != 0 )
     {
         wxLogSysError(_("Seek error on file '%s'"), m_name.c_str());
@@ -205,11 +226,11 @@
 }
 
-size_t wxFFile::Tell() const
+wxFileOffset wxFFile::Tell() const
 {
-    wxCHECK_MSG( IsOpened(), (size_t)-1,
+    wxCHECK_MSG( IsOpened(), wxInvalidOffset,
                  _T("wxFFile::Tell(): file is closed!") );
 
-    long rc = ftell(m_fp);
-    if ( rc == -1 )
+    wxFileOffset rc = wxFtell(m_fp);
+    if ( rc == wxInvalidOffset )
     {
         wxLogSysError(_("Can't find current position in file '%s'"),
@@ -217,20 +238,20 @@
     }
 
-    return (size_t)rc;
+    return rc;
 }
 
-size_t wxFFile::Length() const
+wxFileOffset wxFFile::Length() const
 {
-    wxCHECK_MSG( IsOpened(), (size_t)-1,
+    wxCHECK_MSG( IsOpened(), wxInvalidOffset,
                  _T("wxFFile::Length(): file is closed!") );
 
     wxFFile& self = *(wxFFile *)this;   // const_cast
 
-    size_t posOld = Tell();
-    if ( posOld != (size_t)-1 )
+    wxFileOffset posOld = Tell();
+    if ( posOld != wxInvalidOffset )
     {
         if ( self.SeekEnd() )
         {
-            size_t len = Tell();
+            wxFileOffset len = Tell();
 
             (void)self.Seek(posOld);
@@ -240,5 +261,5 @@
     }
 
-    return (size_t)-1;
+    return wxInvalidOffset; 
 }
 
Index: src/common/wfstream.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/wfstream.cpp,v
retrieving revision 1.33
diff -u -2 -r1.33 wfstream.cpp
--- src/common/wfstream.cpp	2004/11/23 16:22:43	1.33
+++ src/common/wfstream.cpp	2004/12/03 16:11:41
@@ -251,12 +251,5 @@
 wxFileOffset wxFFileInputStream::OnSysSeek(wxFileOffset pos, wxSeekMode mode)
 {
-#ifdef __VMS
-#pragma message disable intsignchange
-#endif
-    wxASSERT_MSG( pos >= LONG_MIN && pos <= LONG_MAX, _T("no huge wxFFile support") );
-    return ( m_file->Seek((long)pos, mode) ? (wxFileOffset)m_file->Tell() : wxInvalidOffset );
-#ifdef __VMS
-#pragma message enable intsignchange
-#endif
+    return m_file->Seek(pos, mode) ? m_file->Tell() : wxInvalidOffset;
 }
 
@@ -332,12 +325,5 @@
 wxFileOffset wxFFileOutputStream::OnSysSeek(wxFileOffset pos, wxSeekMode mode)
 {
-#ifdef __VMS
-#pragma message disable intsignchange
-#endif
-    wxASSERT_MSG( pos >= LONG_MIN && pos <= LONG_MAX, _T("no huge wxFFile support") );
-    return ( m_file->Seek((long)pos, mode) ? (wxFileOffset)m_file->Tell() : wxInvalidOffset );
-#ifdef __VMS
-#pragma message enable intsignchange
-#endif
+    return m_file->Seek(pos, mode) ? m_file->Tell() : wxInvalidOffset;
 }
 

 	  	 
