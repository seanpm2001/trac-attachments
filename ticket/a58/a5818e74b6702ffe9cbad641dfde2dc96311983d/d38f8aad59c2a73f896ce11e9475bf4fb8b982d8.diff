Index: ../wxWidgets/src/common/accelcmn.cpp
===================================================================
--- ../wxWidgets/src/common/accelcmn.cpp	(revision 66880)
+++ ../wxWidgets/src/common/accelcmn.cpp	(working copy)
@@ -224,7 +224,7 @@
 
         case 1:
             // it's just a letter
-            keyCode = current[0U];
+            keyCode = current[0];
 
             // if the key is used with any modifiers, make it an uppercase one
             // because Ctrl-A and Ctrl-a are the same; but keep it as is if it's
Index: ../wxWidgets/src/common/cmdline.cpp
===================================================================
--- ../wxWidgets/src/common/cmdline.cpp	(revision 66880)
+++ ../wxWidgets/src/common/cmdline.cpp	(working copy)
@@ -681,14 +681,14 @@
         // empty argument or just '-' is not an option but a parameter
         if ( maybeOption && arg.length() > 1 &&
                 // FIXME-UTF8: use wc_str() after removing ANSI build
-                wxStrchr(m_data->m_switchChars.c_str(), arg[0u]) )
+                wxStrchr(m_data->m_switchChars.c_str(), arg[0]) )
         {
             bool isLong;
             wxString name;
             int optInd = wxNOT_FOUND;   // init to suppress warnings
 
             // an option or a switch: find whether it's a long or a short one
-            if ( arg.length() >= 3 && arg[0u] == wxT('-') && arg[1u] == wxT('-') )
+            if ( arg.length() >= 3 && arg[0] == wxT('-') && arg[1] == wxT('-') )
             {
                 // a long one
                 isLong = true;
@@ -775,7 +775,7 @@
 
                         // pretend that all the rest of the argument is the
                         // next argument, in fact
-                        wxString arg2 = arg[0u];
+                        wxString arg2 = arg[0];
                         arg2 += arg.Mid(len + 1); // +1 for leading '-'
 
                         m_data->m_arguments.insert
@@ -1111,7 +1111,7 @@
     // the switch char is usually '-' but this can be changed with
     // SetSwitchChars() and then the first one of possible chars is used
     wxChar chSwitch = !m_data->m_switchChars ? wxT('-')
-                                             : m_data->m_switchChars[0u];
+                                             : m_data->m_switchChars[0];
 
     bool areLongOptionsEnabled = AreLongOptionsEnabled();
     size_t n, count = m_data->m_options.GetCount();
Index: ../wxWidgets/src/common/fmapbase.cpp
===================================================================
--- ../wxWidgets/src/common/fmapbase.cpp	(revision 66880)
+++ ../wxWidgets/src/common/fmapbase.cpp	(working copy)
@@ -638,7 +638,7 @@
         // discard the optional quotes
         if ( !cs.empty() )
         {
-            if ( cs[0u] == wxT('"') && cs.Last() == wxT('"') )
+            if ( cs[0] == wxT('"') && cs.Last() == wxT('"') )
             {
                 cs = wxString(cs.c_str(), cs.length() - 1);
             }
Index: ../wxWidgets/src/common/uri.cpp
===================================================================
--- ../wxWidgets/src/common/uri.cpp	(revision 66880)
+++ ../wxWidgets/src/common/uri.cpp	(working copy)
@@ -724,7 +724,7 @@
             m_fields |= wxURI_QUERY;
         }
     }
-    else if ( m_path.empty() || m_path[0u] != '/' )
+    else if ( m_path.empty() || m_path[0] != '/' )
     {
         //             if (R.path starts-with "/") then
         //                T.path = remove_dot_segments(R.path);
Index: ../wxWidgets/src/common/filename.cpp
===================================================================
--- ../wxWidgets/src/common/filename.cpp	(revision 66880)
+++ ../wxWidgets/src/common/filename.cpp	(working copy)
@@ -341,9 +341,9 @@
 {
     return format == wxPATH_DOS &&
                 path.length() >= 4 && // "\\a" can't be a UNC path
-                    IsDOSPathSep(path[0u]) &&
-                        IsDOSPathSep(path[1u]) &&
-                            !IsDOSPathSep(path[2u]);
+                    IsDOSPathSep(path[0]) &&
+                        IsDOSPathSep(path[1]) &&
+                            !IsDOSPathSep(path[2]);
 }
 
 // ----------------------------------------------------------------------------
@@ -441,7 +441,7 @@
         return;
     }
 
-    wxChar leadingChar = path[0u];
+    wxChar leadingChar = path[0];
 
     switch (format)
     {
@@ -888,7 +888,7 @@
     path = dir;
 
     if ( !wxEndsWithPathSeparator(dir) &&
-            (name.empty() || !wxIsPathSeparator(name[0u])) )
+            (name.empty() || !wxIsPathSeparator(name[0])) )
     {
         path += wxFILE_SEP_PATH;
     }
@@ -1396,7 +1396,7 @@
         if ( !dirs.IsEmpty() )
         {
             wxString dir = dirs[0u];
-            if ( !dir.empty() && dir[0u] == wxT('~') )
+            if ( !dir.empty() && dir[0] == wxT('~') )
             {
                 // to make the path absolute use the home directory
                 curDir.AssignDir(wxGetUserHome(dir.c_str() + 1));
@@ -1659,7 +1659,7 @@
         {
             wxString dir = m_dirs[0u];
 
-            if (!dir.empty() && dir[0u] == wxT('~'))
+            if (!dir.empty() && dir[0] == wxT('~'))
                 return true;
         }
     }
@@ -2385,7 +2385,7 @@
             // special VMS hack: remove the initial bracket
             if ( format == wxPATH_VMS )
             {
-                if ( (*pstrPath)[0u] == wxT('[') )
+                if ( (*pstrPath)[0] == wxT('[') )
                     pstrPath->erase(0, 1);
             }
         }
Index: ../wxWidgets/src/common/fileconf.cpp
===================================================================
--- ../wxWidgets/src/common/fileconf.cpp	(revision 66880)
+++ ../wxWidgets/src/common/fileconf.cpp	(working copy)
@@ -961,7 +961,7 @@
     else
     {
         // writing an entry check that the name is reasonable
-        if ( strName[0u] == wxCONFIG_IMMUTABLE_PREFIX )
+        if ( strName[0] == wxCONFIG_IMMUTABLE_PREFIX )
         {
             wxLogError( _("Config entry name cannot start with '%c'."),
                         wxCONFIG_IMMUTABLE_PREFIX);
Index: ../wxWidgets/src/common/variant.cpp
===================================================================
--- ../wxWidgets/src/common/variant.cpp	(revision 66880)
+++ ../wxWidgets/src/common/variant.cpp	(working copy)
@@ -786,7 +786,7 @@
 
 bool wxVariantDataChar::Read(wxString& str)
 {
-    m_value = str[0u];
+    m_value = str[0];
     return true;
 }
 
Index: ../wxWidgets/src/common/filefn.cpp
===================================================================
--- ../wxWidgets/src/common/filefn.cpp	(revision 66880)
+++ ../wxWidgets/src/common/filefn.cpp	(working copy)
@@ -1621,7 +1621,7 @@
 
     // skip path separator in the beginning of the file name if present
     wxString szFile2;
-    if ( wxIsPathSeparator(szFile[0u]) )
+    if ( wxIsPathSeparator(szFile[0]) )
         szFile2 = szFile.Mid(1);
     else
         szFile2 = szFile;
Index: ../wxWidgets/src/common/http.cpp
===================================================================
--- ../wxWidgets/src/common/http.cpp	(revision 66880)
+++ ../wxWidgets/src/common/http.cpp	(working copy)
@@ -386,7 +386,7 @@
 
     m_http_response = wxAtoi(tmp_str2);
 
-    switch ( tmp_str2[0u].GetValue() )
+    switch ( tmp_str2[0].GetValue() )
     {
         case wxT('1'):
             /* INFORMATION / SUCCESS */
Index: ../wxWidgets/src/common/ftp.cpp
===================================================================
--- ../wxWidgets/src/common/ftp.cpp	(revision 66880)
+++ ../wxWidgets/src/common/ftp.cpp	(working copy)
@@ -371,7 +371,7 @@
         m_lastError = wxPROTO_NOERR;
 
     // if we got here we must have a non empty code string
-    return (char)code[0u];
+    return (char)code[0];
 }
 
 // ----------------------------------------------------------------------------
Index: ../wxWidgets/src/common/filesys.cpp
===================================================================
--- ../wxWidgets/src/common/filesys.cpp	(revision 66880)
+++ ../wxWidgets/src/common/filesys.cpp	(working copy)
@@ -64,7 +64,7 @@
     l2 = l;
     for (int i = l-1; i >= 0; i--)
     {
-        c = loc[(unsigned int) i];
+        c = loc[i];
         if ( c == wxT('#') )
             l2 = i + 1;
         if ( c == wxT('.') )
@@ -363,9 +363,9 @@
     {
         for (i = m_Path.length()-1; i >= 0; i--)
         {
-            if (m_Path[(unsigned int) i] == wxT('/'))
+            if (m_Path[i] == wxT('/'))
             {
-                if ((i > 1) && (m_Path[(unsigned int) (i-1)] == wxT('/')) && (m_Path[(unsigned int) (i-2)] == wxT(':')))
+                if ((i > 1) && (m_Path[(i-1)] == wxT('/')) && (m_Path[(i-2)] == wxT(':')))
                 {
                     i -= 2;
                     continue;
@@ -376,7 +376,7 @@
                     break;
                 }
             }
-            else if (m_Path[(unsigned int) i] == wxT(':')) {
+            else if (m_Path[i] == wxT(':')) {
                 pathpos = i;
                 break;
             }
@@ -385,7 +385,7 @@
         {
             for (i = 0; i < (int) m_Path.length(); i++)
             {
-                if (m_Path[(unsigned int) i] == wxT(':'))
+                if (m_Path[i] == wxT(':'))
                 {
                     m_Path.Remove(i+1);
                     break;
@@ -428,7 +428,7 @@
         return NULL;
 
     wxString loc = MakeCorrectPath(location);
-    unsigned i, ln;
+    int i, ln;
     wxChar meta;
     wxFSFile *s = NULL;
     wxList::compatibility_iterator node;
@@ -500,7 +500,7 @@
     m_FindFileHandler = NULL;
 
     for (int i = spec2.length()-1; i >= 0; i--)
-        if (spec2[(unsigned int) i] == wxT('\\')) spec2.GetWritableChar(i) = wxT('/'); // Want to be windows-safe
+        if (spec2[i] == wxT('\\')) spec2.GetWritableChar(i) = wxT('/'); // Want to be windows-safe
 
     node = m_Handlers.GetFirst();
     while (node)
@@ -547,7 +547,7 @@
 
     wxString name;
     // skip path separator in the beginning of the file name if present
-    if ( wxIsPathSeparator(basename[0u]) )
+    if ( wxIsPathSeparator(basename[0]) )
         name = basename.substr(1);
     else
         name = basename;
@@ -639,7 +639,7 @@
     // file urls either start with a forward slash (local harddisk),
     // otherwise they have a servername/sharename notation,
     // which only exists on msw and corresponds to a unc
-    if ( path[0u] == wxT('/') && path [1u] != wxT('/'))
+    if ( path[0] == wxT('/') && path [1] != wxT('/'))
     {
         path = path.Mid(1);
     }
Index: ../wxWidgets/src/common/utilscmn.cpp
===================================================================
--- ../wxWidgets/src/common/utilscmn.cpp	(revision 66880)
+++ ../wxWidgets/src/common/utilscmn.cpp	(working copy)
@@ -580,6 +580,7 @@
 #else // non-MSVC non-Mac
     // Not sure if other compilers have _tenviron so use the (more standard)
     // ANSI version only for them.
+    extern char **environ;
     char **env = environ;
 #endif
 
Index: ../wxWidgets/src/common/fldlgcmn.cpp
===================================================================
--- ../wxWidgets/src/common/fldlgcmn.cpp	(revision 66880)
+++ ../wxWidgets/src/common/fldlgcmn.cpp	(working copy)
@@ -332,7 +332,7 @@
     wxString ext;
     if ( !extension.empty() )
     {
-        if ( extension[0u] == wxT('.') )
+        if ( extension[0] == wxT('.') )
             ext = extension.substr(1);
         else
             ext = extension;
Index: ../wxWidgets/src/generic/grid.cpp
===================================================================
--- ../wxWidgets/src/generic/grid.cpp	(revision 66880)
+++ ../wxWidgets/src/generic/grid.cpp	(working copy)
@@ -1157,7 +1157,7 @@
     //   etc.
 
     wxString s;
-    unsigned int i, n;
+    int i, n;
     for ( n = 1; ; n++ )
     {
         s += (wxChar) (wxT('A') + (wxChar)(col % 26));
Index: ../wxWidgets/include/wx/filename.h
===================================================================
--- ../wxWidgets/include/wx/filename.h	(revision 66880)
+++ ../wxWidgets/include/wx/filename.h	(working copy)
@@ -436,7 +436,7 @@
 
     // get the canonical path separator for this format
     static wxUniChar GetPathSeparator(wxPathFormat format = wxPATH_NATIVE)
-        { return GetPathSeparators(format)[0u]; }
+        { return GetPathSeparators(format)[0]; }
 
     // is the char a path separator for this format?
     static bool IsPathSeparator(wxChar ch, wxPathFormat format = wxPATH_NATIVE);
