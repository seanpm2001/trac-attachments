--- a/include/wx/propgrid/propgrid.h
+++ b/include/wx/propgrid/propgrid.h
@@ -332,15 +332,6 @@ wxPG_EX_TOOLBAR_SEPARATOR               = 0x10000000
 
 // -----------------------------------------------------------------------
 
-//
-// Ids for sub-controls
-// NB: It should not matter what these are.
-#define wxPG_SUBID1                     2
-#define wxPG_SUBID2                     3
-#define wxPG_SUBID_TEMP1                4
-
-// -----------------------------------------------------------------------
-
 /** @class wxPGCommonValue
 
     wxPropertyGrid stores information about common values in these
--- a/include/wx/propgrid/editors.h
+++ b/include/wx/propgrid/editors.h
@@ -529,9 +529,15 @@ public:
     */
     unsigned int GetCount() const { return (unsigned int) m_buttons.size(); }
 
-    void Add( const wxString& label, int id = -2 );
+    void Add( const wxString& label );
+#if WXWIN_COMPATIBILITY_3_0
+    wxDEPRECATED( void Add( const wxString& label, int id ); ) // parameter 'id' no longer used
+#endif
 #if wxUSE_BMPBUTTON
-    void Add( const wxBitmap& bitmap, int id = -2 );
+    void Add( const wxBitmap& bitmap );
+#if WXWIN_COMPATIBILITY_3_0
+    wxDEPRECATED( void Add( const wxBitmap& bitmap, int id ); ) // parameter 'id' no longer used
+#endif
 #endif
 
     wxSize GetPrimarySize() const
@@ -545,7 +551,9 @@ protected:
 
     void DoAddButton( wxWindow* button, const wxSize& sz );
 
-    int GenId( int id ) const;
+#if WXWIN_COMPATIBILITY_3_0
+    wxDEPRECATED( int GenId( int id ) const; ) // not used anymore
+#endif
 
     wxArrayPtrVoid  m_buttons;
     wxSize          m_fullEditorSize;
--- a/src/propgrid/advprops.cpp
+++ b/src/propgrid/advprops.cpp
@@ -271,7 +271,7 @@ wxPGWindowList wxPGSpinCtrlEditor::CreateControls( wxPropertyGrid* propgrid, wxP
 #ifdef __WXMSW__
     wnd2->Hide();
 #endif
-    wnd2->Create( propgrid->GetPanel(), wxPG_SUBID2, butPos, butSz, wxSP_VERTICAL );
+    wnd2->Create( propgrid->GetPanel(), wxID_ANY, butPos, butSz, wxSP_VERTICAL );
 
     wnd2->SetRange( INT_MIN, INT_MAX );
     wnd2->SetValue( 0 );
@@ -487,7 +487,7 @@ wxPGWindowList wxPGDatePickerCtrlEditor::CreateControls( wxPropertyGrid* propgri
         dateValue = value.GetDateTime();
 
     ctrl->Create(propgrid->GetPanel(),
-                 wxPG_SUBID1,
+                 wxID_ANY,
                  dateValue,
                  pos,
                  useSz,
diff --git a/src/propgrid/editors.cpp b/src/propgrid/editors.cpp
index 94bdce2..d85fafb 100644
--- a/src/propgrid/editors.cpp
+++ b/src/propgrid/editors.cpp
@@ -1039,7 +1039,7 @@ wxWindow* wxPGChoiceEditor::CreateControlsBase( wxPropertyGrid* propGrid,
     cb->Hide();
 #endif
     cb->Create(ctrlParent,
-               wxPG_SUBID1,
+               wxID_ANY,
                wxString(),
                po,
                si,
@@ -1599,7 +1599,7 @@ wxPGWindowList wxPGCheckBoxEditor::CreateControls( wxPropertyGrid* propGrid,
     sz.x = propGrid->GetFontHeight() + (wxPG_XBEFOREWIDGET*2) + 4;
 
     wxSimpleCheckBox* cb = new wxSimpleCheckBox(propGrid->GetPanel(),
-                                                wxPG_SUBID1, pt, sz);
+                                                wxID_ANY, pt, sz);
 
     cb->SetBackgroundColour(wxSystemSettings::GetColour(wxSYS_COLOUR_WINDOW));
 
@@ -1865,7 +1865,6 @@ wxWindow* wxPropertyGrid::GenerateEditorTextCtrl( const wxPoint& pos,
                                                   int maxLen,
                                                   unsigned int forColumn )
 {
-    wxWindowID id = wxPG_SUBID1;
     wxPGProperty* prop = GetSelection();
     wxASSERT(prop);
 
@@ -1910,7 +1909,7 @@ wxWindow* wxPropertyGrid::GenerateEditorTextCtrl( const wxPoint& pos,
     tc->Hide();
 #endif
     SetupTextCtrlValue(value);
-    tc->Create(ctrlParent,id,value, p, s,tcFlags);
+    tc->Create(ctrlParent,wxID_ANY,value, p, s,tcFlags);
 
 #if defined(__WXMSW__)
     // On Windows, we need to override read-only text ctrl's background
@@ -1968,7 +1967,6 @@ wxWindow* wxPropertyGrid::GenerateEditorTextCtrl( const wxPoint& pos,
 
 wxWindow* wxPropertyGrid::GenerateEditorButton( const wxPoint& pos, const wxSize& sz )
 {
-    wxWindowID id = wxPG_SUBID2;
     wxPGProperty* selected = GetSelection();
     wxASSERT(selected);
 
@@ -2008,7 +2006,7 @@ wxWindow* wxPropertyGrid::GenerateEditorButton( const wxPoint& pos, const wxSize
   #ifdef __WXMSW__
     but->Hide();
   #endif
-    but->Create(GetPanel(),id,wxS("..."),p,s,wxWANTS_CHARS);
+    but->Create(GetPanel(),wxID_ANY,wxS("..."),p,s,wxWANTS_CHARS);
 
   #ifdef __WXGTK__
     wxFont font = GetFont();
@@ -2135,7 +2133,7 @@ bool wxPGEditorDialogAdapter::ShowDialog( wxPropertyGrid* propGrid, wxPGProperty
 // -----------------------------------------------------------------------
 
 wxPGMultiButton::wxPGMultiButton( wxPropertyGrid* pg, const wxSize& sz )
-    : wxWindow( pg->GetPanel(), wxPG_SUBID2, wxPoint(-100,-100), wxSize(0, sz.y) ),
+    : wxWindow( pg->GetPanel(), wxID_ANY, wxPoint(-100,-100), wxSize(0, sz.y) ),
       m_fullEditorSize(sz), m_buttonsWidth(0)
 {
     SetBackgroundColour(pg->GetCellBackgroundColour());
@@ -2147,39 +2145,46 @@ void wxPGMultiButton::Finalize( wxPropertyGrid* WXUNUSED(propGrid),
     Move( pos.x + m_fullEditorSize.x - m_buttonsWidth, pos.y );
 }
 
-int wxPGMultiButton::GenId( int itemid ) const
+#if WXWIN_COMPATIBILITY_3_0
+int wxPGMultiButton::GenId( int WXUNUSED(itemid) ) const
 {
-    if ( itemid < -1 )
-    {
-        if ( m_buttons.size() )
-            itemid = GetButton(m_buttons.size()-1)->GetId() + 1;
-        else
-            itemid = wxPG_SUBID2;
-    }
-    return itemid;
+    return wxID_ANY;
 }
+#endif
 
 #if wxUSE_BMPBUTTON
-void wxPGMultiButton::Add( const wxBitmap& bitmap, int itemid )
+void wxPGMultiButton::Add( const wxBitmap& bitmap )
 {
-    itemid = GenId(itemid);
     wxSize sz = GetSize();
-    wxButton* button = new wxBitmapButton( this, itemid, bitmap,
+    wxButton* button = new wxBitmapButton( this, wxID_ANY, bitmap,
                                            wxPoint(sz.x, 0),
                                            wxSize(sz.y, sz.y) );
     DoAddButton( button, sz );
 }
+
+#if WXWIN_COMPATIBILITY_3_0
+void wxPGMultiButton::Add( const wxBitmap& bitmap, int WXUNUSED(itemid) )
+{
+    Add(bitmap);
+}
+#endif
 #endif
 
-void wxPGMultiButton::Add( const wxString& label, int itemid )
+void wxPGMultiButton::Add( const wxString& label )
 {
-    itemid = GenId(itemid);
     wxSize sz = GetSize();
-    wxButton* button = new wxButton( this, itemid, label, wxPoint(sz.x, 0),
+    wxButton* button = new wxButton( this, wxID_ANY, label, wxPoint(sz.x, 0),
                                      wxSize(sz.y, sz.y) );
     DoAddButton( button, sz );
 }
 
+#if WXWIN_COMPATIBILITY_3_0
+void wxPGMultiButton::Add( const wxString& label, int WXUNUSED(itemid) )
+{
+    Add(label);
+}
+#endif
+
 void wxPGMultiButton::DoAddButton( wxWindow* button,
                                    const wxSize& sz )
 {
--- a/src/propgrid/props.cpp
+++ b/src/propgrid/props.cpp
@@ -2181,7 +2181,7 @@ bool wxLongStringProperty::DisplayEditorDialog( wxPGProperty* prop, wxPropertyGr
     long edStyle = wxTE_MULTILINE;
     if ( prop->HasFlag(wxPG_PROP_READONLY) )
         edStyle |= wxTE_READONLY;
-    wxTextCtrl* ed = new wxTextCtrl(dlg,11,value,
+    wxTextCtrl* ed = new wxTextCtrl(dlg,wxID_ANY,value,
         wxDefaultPosition,wxDefaultSize,edStyle);
 
     rowsizer->Add( ed, 1, wxEXPAND|wxALL, spacing );
@@ -2870,7 +2870,7 @@ bool wxPGInDialogValidator::DoValidate( wxPropertyGrid* propGrid,
     if ( !tc )
     {
         {
-            tc = new wxTextCtrl( propGrid, wxPG_SUBID_TEMP1, wxEmptyString,
+            tc = new wxTextCtrl( propGrid, wxID_ANY, wxEmptyString,
                                  wxPoint(30000,30000));
             tc->Hide();
         }
