Index: include/wx/mac/dialog.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/mac/dialog.h,v
retrieving revision 1.6
diff -r1.6 dialog.h
105a106
>   protected:
106a108
>     virtual void DoMoveWindow(int x, int y, int width, int height);
Index: include/wx/mac/frame.h
===================================================================
RCS file: /home/wxcvs/wxWindows/include/wx/mac/frame.h,v
retrieving revision 1.10
diff -r1.10 frame.h
76,79d75
<     // get the origin of the client area (which may be different from (0, 0)
<     // if the frame has a toolbar) in client coordinates
<     virtual wxPoint GetClientAreaOrigin() const;
< 
119a116
>     virtual void DoMoveWindow(int x, int y, int width, int height);
Index: src/mac/dialog.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/mac/dialog.cpp,v
retrieving revision 1.10
diff -r1.10 dialog.cpp
142a143,192
> void wxDialog::DoMoveWindow(int x, int y, int width, int height)
> {
>     wxASSERT(m_macWindowData != NULL);
> 
>     bool doMove = false ;
>     bool doResize = false ;
> 
>     if ( x != m_x || y != m_y )
>     {
>         doMove = true ;
>     }
>     if ( width != m_width || height != m_height )
>     {
>         doResize = true ;
>     }
> 
>     if ( doMove || doResize )
>     {
>         m_x = x ;
>         m_y = y ;
>         m_width = width ;
>         m_height = height ;
> 
>         if ( doMove ) {
>             // The (false) paramenter ensures the window isn't brought to the front
>             ::MoveWindow(m_macWindowData->m_macWindow, m_x, m_y, false);
>         }
> 
>         if ( doResize ) {
>             ::SizeWindow(m_macWindowData->m_macWindow, m_width, m_height, true);
>         }
> 
>         if ( doMove )
>         {
>             wxPoint point(m_x, m_y);
>             wxMoveEvent event(point, m_windowId);
>             event.SetEventObject(this);
>             GetEventHandler()->ProcessEvent(event) ;
>         }
>         if ( doResize )
>         {
>             wxSize size(m_width, m_height);
>             wxSizeEvent event(size, m_windowId);
>             event.SetEventObject(this);
>             GetEventHandler()->ProcessEvent(event);
>         }
>         MacRepositionScrollBars() ;
>     }
> }
> 
Index: src/mac/frame.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/mac/frame.cpp,v
retrieving revision 1.18
diff -r1.18 frame.cpp
64a65
> #if wxUSE_STATUSBAR
65a67
> #endif
75,99d76
< wxPoint wxFrameMac::GetClientAreaOrigin() const
< {
< 	// on mac we are at position -1,-1 with the control
<     wxPoint pt(0, 0);
< 
< #if wxUSE_TOOLBAR
<     if ( GetToolBar() )
<     {
<         int w, h;
<         GetToolBar()->GetSize(& w, & h);
< 
<         if ( GetToolBar()->GetWindowStyleFlag() & wxTB_VERTICAL )
<         {
<             pt.x += w - 1;
<         }
<         else
<         {
<             pt.y += h - 1 ;
<         }
<     }
< #endif // wxUSE_TOOLBAR
< 
<     return pt;
< }
< 
159c136
< 		for ( int i = 0 ; i < m_frameMenuBar->GetMenuCount() ; ++ i )
---
> 		for ( size_t i = 0 ; i < m_frameMenuBar->GetMenuCount() ; ++ i )
200a178,179
> #if wxUSE_STATUSBAR
> 
206,207c185
<     statusBar = new wxStatusBar(this, id,
<         style, name);
---
>     statusBar = new wxStatusBar(this, id, style, name);
215,225c193,201
<   if (m_frameStatusBar )
<   {
<     int w, h;
<     GetClientSize(&w, &h);
<     int sw, sh;
<     m_frameStatusBar->GetSize(&sw, &sh);
< 
<     // Since we wish the status bar to be directly under the client area,
<     // we use the adjusted sizes without using wxSIZE_NO_ADJUSTMENTS.
<     m_frameStatusBar->SetSize(0, h, w, sh);
<    }
---
>     if (m_frameStatusBar )
>     {
>         int w, h, sw, sh;
> 
>         GetSize(&w, &h);
>         m_frameStatusBar->GetSize(&sw, &sh);
> 
>         m_frameStatusBar->SetSize(0, h - sh, w, sh, wxSIZE_NO_ADJUSTMENTS);
>     }
227a204,205
> #endif // wxUSE_STATUSBAR
> 
246a225
> #if wxUSE_STATUSBAR
252a232
> #endif
312a293,347
> void wxFrameMac::DoMoveWindow(int x, int y, int width, int height)
> {
>     wxASSERT(m_macWindowData != NULL);
> 
>     bool doMove = false ;
>     bool doResize = false ;
> 
>     if ( x != m_x || y != m_y )
>     {
>         doMove = true ;
>     }
>     if ( width != m_width || height != m_height )
>     {
>         doResize = true ;
>     }
> 
>     if ( doMove || doResize )
>     {
>         m_x = x ;
>         m_y = y ;
>         m_width = width ;
>         m_height = height ;
> 
>         if ( doMove ) {
>             ::MoveWindow(m_macWindowData->m_macWindow, m_x, m_y, false); // don't make frontmost
>         }
> 
>         if ( doResize ) {
>             ::SizeWindow(m_macWindowData->m_macWindow, m_width, m_height  , true);
>         }
> 
>         if ( doMove )
>         {
>             wxPoint point(m_x, m_y);
>             wxMoveEvent event(point, m_windowId);
>             event.SetEventObject(this);
>             GetEventHandler()->ProcessEvent(event) ;
>         }
>         if ( doResize )
>         {
>             wxSize size(m_width, m_height);
>             wxSizeEvent event(size, m_windowId);
>             event.SetEventObject(this);
>             GetEventHandler()->ProcessEvent(event);
>         }
> #if wxUSE_STATUSBAR
>         PositionStatusBar();
> #endif
> #if wxUSE_TOOLBAR
>         PositionToolBar();
> #endif
>         MacRepositionScrollBars() ;
>     }
> }
> 
369a405
> #if wxUSE_STATUSBAR
375a412
> #endif
377c414,416
<     if (GetToolBar())
---
>     wxToolBar *toolbar = GetToolBar();
> 
>     if (toolbar)
378a418,419
>         toolbar->SetFrameHandledToolBar();
> 
380c421
<         GetToolBar()->GetSize(& tw, & th);
---
>         toolbar->GetSize( &tw, &th);
382,387c423,424
<         if (GetToolBar()->GetWindowStyleFlag() & wxTB_VERTICAL)
<         {
<             // Use the 'real' position. wxSIZE_NO_ADJUSTMENTS
<             // means, pretend we don't have toolbar/status bar, so we
<             // have the original client size.
<             GetToolBar()->SetSize(-1, -1, tw, ch + 2 , wxSIZE_NO_ADJUSTMENTS | wxSIZE_ALLOW_MINUS_ONE );
---
>         if (toolbar->GetWindowStyleFlag() & wxTB_VERTICAL) {
>             th = ch;
389,392c426,427
<         else
<         {
<             // Use the 'real' position
<             GetToolBar()->SetSize(-1, -1, cw + 2, th, wxSIZE_NO_ADJUSTMENTS | wxSIZE_ALLOW_MINUS_ONE );
---
>         else {
>             tw = cw;
393a429,432
>         // Use the 'real' position. wxSIZE_NO_ADJUSTMENTS
>         // means, pretend we don't have toolbar/status bar, so we
>         // have the original client size.
>         toolbar->SetSize(0, 0, tw, th, wxSIZE_NO_ADJUSTMENTS | wxSIZE_ALLOW_MINUS_ONE );
396a436
> 
Index: src/mac/window.cpp
===================================================================
RCS file: /home/wxcvs/wxWindows/src/mac/window.cpp,v
retrieving revision 1.50
diff -r1.50 window.cpp
143d142
< 	m_macEraseOnRedraw = true ;
353a353
> 
417a418
> 
554,572d554
< 	int former_x = m_x ;
< 	int former_y = m_y ;
< 	int former_w = m_width ;
< 	int former_h = m_height ;
< 	
<   int actualWidth = width;
<   int actualHeight = height;
<   int actualX = x;
<   int actualY = y;
<   
<     if ((m_minWidth != -1) && (actualWidth < m_minWidth)) 
<     	actualWidth = m_minWidth;
<     if ((m_minHeight != -1) && (actualHeight < m_minHeight)) 
<     	actualHeight = m_minHeight;
<     if ((m_maxWidth != -1) && (actualWidth > m_maxWidth)) 
<     	actualWidth = m_maxWidth;
<     if ((m_maxHeight != -1) && (actualHeight > m_maxHeight)) 
<     	actualHeight = m_maxHeight;
< 
576c558
< 	if ( actualX != former_x || actualY != former_y )
---
> 	if ( x != m_x || y != m_y )
580c562
< 	if ( actualWidth != former_w || actualHeight != former_h )
---
> 	if ( width != m_width || height != m_height )
587,590c569,571
< 		if ( m_macWindowData )
< 		{
< 		}
< 		else
---
>         WindowRef macWindow = GetMacRootWindow();
> 
>         // Erase former position
592d572
< 			// erase former position
597,620c577
< 				// ClipRect( &clientrect ) ;
< 		    	InvalWindowRect( GetMacRootWindow() , &clientrect ) ;
< 			}
< 		}
< 		m_x = actualX ;
< 		m_y = actualY ;
< 		m_width = actualWidth ;
< 		m_height = actualHeight ;
< 		if ( m_macWindowData )
< 		{
< 			if ( doMove )
< 				::MoveWindow(m_macWindowData->m_macWindow, m_x, m_y  , false); // don't make frontmost
< 			
< 			if ( doResize )
< 				::SizeWindow(m_macWindowData->m_macWindow, m_width, m_height  , true); 
< 			
< 			// the OS takes care of invalidating and erasing the new area
< 			// we have erased the old one	
< 			
< 			if ( IsKindOf( CLASSINFO( wxFrame ) ) )
< 			{
< 				wxFrame* frame = (wxFrame*) this ;
< 			  	frame->PositionStatusBar();
<   				frame->PositionToolBar();
---
> 		    	InvalWindowRect( macWindow, &clientrect ) ;
623,655c580,620
< 		else
< 		{
< 			// erase new position
< 			
< 			{
< 				wxMacDrawingHelper focus( this ) ;
< 				if ( focus.Ok() )
< 				{
< 			  		Rect clientrect = { 0 , 0 , m_height , m_width } ;
<   					// ClipRect( &clientrect ) ;
< 			    	InvalWindowRect( GetMacRootWindow() , &clientrect ) ;
< 				}
< 			}
< 			
< 			if ( doMove )
< 				wxWindowMac::MacSuperChangedPosition() ; // like this only children will be notified
< 		}
< 		MacRepositionScrollBars() ;
< 		if ( doMove )
< 		{
< 	        wxPoint point(m_x, m_y);
<     		wxMoveEvent event(point, m_windowId);
<     		event.SetEventObject(this);
<     		GetEventHandler()->ProcessEvent(event) ;
<     	}
<     	if ( doResize )
<     	{
< 	         MacRepositionScrollBars() ;
< 	         wxSize size(m_width, m_height);
< 	         wxSizeEvent event(size, m_windowId);
< 	         event.SetEventObject(this);
< 	         GetEventHandler()->ProcessEvent(event);
<     	}
---
> 
>         // Update the internal position and size
> 		m_x = x;
> 		m_y = y;
> 		m_width  = width;
> 		m_height = height;
> 
>         // erase new position
>         {
>             wxMacDrawingHelper focus( this ) ;
>             if ( focus.Ok() )
>             {
>                 Rect clientrect = { 0 , 0 , m_height , m_width } ;
>                 InvalWindowRect( macWindow, &clientrect ) ;
>             }
>         }
> 
>         if ( doMove )
>         {
>             // Notify the children we have moved
>             wxNode *node = GetChildren().First();
>             while ( node )
>             {
>                 wxWindow *child = (wxWindow *)node->Data();
>                 child->DoSetSize(-1,-1,-1,-1, wxSIZE_USE_EXISTING) ;
>                 node = node->Next();
>             }
> 
>             wxPoint point(m_x, m_y);
>             wxMoveEvent event(point, m_windowId);
>             event.SetEventObject(this);
>             GetEventHandler()->ProcessEvent(event) ;
>         }
>         if ( doResize )
>         {
>             wxSize size(m_width, m_height);
>             wxSizeEvent event(size, m_windowId);
>             event.SetEventObject(this);
>             GetEventHandler()->ProcessEvent(event);
>         }
>         MacRepositionScrollBars();
657d621
< 	
723a688,697
> 
>     // Check that the new size is within the constraints
>     if ((m_minWidth != -1) && (width < m_minWidth))
>         width = m_minWidth;
>     if ((m_minHeight != -1) && (height < m_minHeight))
>         height = m_minHeight;
>     if ((m_maxWidth != -1) && (width > m_maxWidth))
>         width = m_maxWidth;
>     if ((m_maxHeight != -1) && (height > m_maxHeight))
>         height = m_maxHeight;


 	  	 
