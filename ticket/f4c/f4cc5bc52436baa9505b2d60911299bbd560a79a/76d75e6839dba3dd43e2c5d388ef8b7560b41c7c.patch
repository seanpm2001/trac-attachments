diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x~* wxWidgets-20040716.orig/include/wx/generic/progdlgg.h wxWidgets-20040716/include/wx/generic/progdlgg.h
--- wxWidgets-20040716.orig/include/wx/generic/progdlgg.h	Sun Jun 13 00:43:44 2004
+++ wxWidgets-20040716/include/wx/generic/progdlgg.h	Tue Jul 20 08:50:44 2004
@@ -79,7 +79,6 @@
 private:
    // create the label with given text and another one to show the time nearby
-   // under the lastWindow and modify it to be the same as the control created
-   // (which is returned)
-   wxStaticText *CreateLabel(const wxString& text, wxWindow **lastWindow);
+   // as the next windows in the sizer, returns the created control
+   wxStaticText *CreateLabel(const wxString& text, wxSizer *sizer);
 
    // the status bar
diff -ru2 -xCVS -x.#* -x*.orig -x*.rej -x~* wxWidgets-20040716.orig/src/generic/progdlgg.cpp wxWidgets-20040716/src/generic/progdlgg.cpp
--- wxWidgets-20040716.orig/src/generic/progdlgg.cpp	Mon Jun 14 19:50:20 2004
+++ wxWidgets-20040716/src/generic/progdlgg.cpp	Tue Jul 20 09:12:26 2004
@@ -36,5 +36,5 @@
     #include "wx/button.h"
     #include "wx/stattext.h"
-    #include "wx/layout.h"
+    #include "wx/sizer.h"
     #include "wx/event.h"
     #include "wx/gauge.h"
@@ -51,6 +51,5 @@
 // ----------------------------------------------------------------------------
 
-#define LAYOUT_X_MARGIN 8
-#define LAYOUT_Y_MARGIN 8
+#define LAYOUT_MARGIN 8
 
 // ----------------------------------------------------------------------------
@@ -118,6 +117,4 @@
     m_parentTop = wxGetTopLevelParent(parent);
 
-    wxLayoutConstraints *c;
-
     wxClientDC dc(this);
     dc.SetFont(wxSystemSettings::GetFont(wxSYS_DEFAULT_GUI_FONT));
@@ -125,15 +122,12 @@
     dc.GetTextExtent(message, &widthText, NULL, NULL, NULL, NULL);
 
+    wxBoxSizer *sizer = new wxBoxSizer(wxVERTICAL);
+	
     m_msg = new wxStaticText(this, wxID_ANY, message);
-    c = new wxLayoutConstraints;
-    c->left.SameAs(this, wxLeft, 2*LAYOUT_X_MARGIN);
-    c->top.SameAs(this, wxTop, 2*LAYOUT_Y_MARGIN);
-    c->width.AsIs();
-    c->height.AsIs();
-    m_msg->SetConstraints(c);
+    sizer->Add(m_msg, 0, wxLEFT | wxTOP, 2*LAYOUT_MARGIN);
 
     wxSize sizeDlg,
            sizeLabel = m_msg->GetSize();
-    sizeDlg.y = 2*LAYOUT_Y_MARGIN + sizeLabel.y;
+    sizeDlg.y = 2*LAYOUT_MARGIN + sizeLabel.y;
 
     wxWindow *lastWindow = m_msg;
@@ -148,15 +142,10 @@
                               wxGA_HORIZONTAL);
 
-        c = new wxLayoutConstraints;
-        c->left.SameAs(this, wxLeft, 2*LAYOUT_X_MARGIN);
-        c->top.Below(m_msg, 2*LAYOUT_Y_MARGIN);
-        c->right.SameAs(this, wxRight, 2*LAYOUT_X_MARGIN);
-        c->height.AsIs();
-        m_gauge->SetConstraints(c);
+        sizer->Add(m_gauge, 0, wxLEFT | wxRIGHT | wxTOP | wxEXPAND, 2*LAYOUT_MARGIN);
         m_gauge->SetValue(0);
         lastWindow = m_gauge;
 
         wxSize sizeGauge = m_gauge->GetSize();
-        sizeDlg.y += 2*LAYOUT_Y_MARGIN + sizeGauge.y;
+        sizeDlg.y += 2*LAYOUT_MARGIN + sizeGauge.y;
     }
     else
@@ -177,5 +166,5 @@
 
         label =
-        m_elapsed = CreateLabel(_("Elapsed time : "), &lastWindow);
+        m_elapsed = CreateLabel(_("Elapsed time : "), sizer);
     }
 
@@ -185,5 +174,5 @@
 
         label =
-        m_estimated = CreateLabel(_("Estimated time : "), &lastWindow);
+        m_estimated = CreateLabel(_("Estimated time : "), sizer);
     }
 
@@ -193,5 +182,5 @@
 
         label =
-        m_remaining = CreateLabel(_("Remaining time : "), &lastWindow);
+        m_remaining = CreateLabel(_("Remaining time : "), sizer);
     }
 
@@ -200,5 +189,5 @@
         // set it to the current time
         m_timeStart = wxGetCurrentTime();
-        sizeDlg.y += nTimeLabels * (label->GetSize().y + LAYOUT_Y_MARGIN);
+        sizeDlg.y += nTimeLabels * (label->GetSize().y + LAYOUT_MARGIN);
     }
 
@@ -206,20 +195,12 @@
     {
         m_btnAbort = new wxButton(this, wxID_CANCEL, _("Cancel"));
-        c = new wxLayoutConstraints;
 
         // Windows dialogs usually have buttons in the lower right corner
 #if defined(__WXMSW__) || defined(__WXPM__)
-        c->right.SameAs(this, wxRight, 2*LAYOUT_X_MARGIN);
+        sizer->Add(m_btnAbort, 0, wxALIGN_RIGHT | wxALL, 2*LAYOUT_MARGIN);
 #else // !MSW
-        c->centreX.SameAs(this, wxCentreX);
+        sizer->Add(m_btnAbort, 0, wxALIGN_CENTER_HORIZONTAL | wxBOTTOM | wxTOP, 2*LAYOUT_MARGIN);
 #endif // MSW/!MSW
-        c->bottom.SameAs(this, wxBottom, 2*LAYOUT_Y_MARGIN);
-
-        c->width.AsIs();
-        c->height.AsIs();
-
-        m_btnAbort->SetConstraints(c);
-
-        sizeDlg.y += 2*LAYOUT_Y_MARGIN + wxButton::GetDefaultSize().y;
+        sizeDlg.y += 2*LAYOUT_MARGIN + wxButton::GetDefaultSize().y;
     }
     else // no "Cancel" button
@@ -228,8 +209,7 @@
     }
 
-    SetAutoLayout(true);
-    Layout();
+    SetSizerAndFit(sizer);
 
-    sizeDlg.y += 2*LAYOUT_Y_MARGIN;
+    sizeDlg.y += 2*LAYOUT_MARGIN;
 
     // try to make the dialog not square but rectangular of reasonabel width
@@ -267,32 +247,22 @@
 
 wxStaticText *wxProgressDialog::CreateLabel(const wxString& text,
-                                            wxWindow **lastWindow)
+                                            wxSizer *sizer)
 {
-    wxLayoutConstraints *c;
+    wxBoxSizer *locsizer = new wxBoxSizer(wxHORIZONTAL);
 
+    wxStaticText *dummy = new wxStaticText(this, -1, text);
     wxStaticText *label = new wxStaticText(this, wxID_ANY, _("unknown"));
-    c = new wxLayoutConstraints;
 
     // VZ: I like the labels be centered - if the others don't mind, you may
     //     remove "#ifdef __WXMSW__" and use it for all ports
 #if defined(__WXMSW__) || defined(__WXPM__) || defined(__WXMAC__)
-    c->left.SameAs(this, wxCentreX, LAYOUT_X_MARGIN);
+    locsizer->Add(dummy, 1, wxALIGN_RIGHT);
+    locsizer->Add(label, 1, wxALIGN_LEFT | wxLEFT, LAYOUT_MARGIN);
+    sizer->Add(locsizer, 0, wxALIGN_CENTER_HORIZONTAL | wxTOP, LAYOUT_MARGIN);
 #else // !MSW
-    c->right.SameAs(this, wxRight, 2*LAYOUT_X_MARGIN);
+    sizer->Add(locsizer, 0, wxALIGN_RIGHT | wxRIGHT | wxTOP, LAYOUT_MARGIN);
+    locsizer->Add(dummy);
+    locsizer->Add(label, 0, wxLEFT, LAYOUT_MARGIN);
 #endif // MSW/!MSW
-    c->top.Below(*lastWindow, LAYOUT_Y_MARGIN);
-    c->width.AsIs();
-    c->height.AsIs();
-    label->SetConstraints(c);
-
-    wxStaticText *dummy = new wxStaticText(this, wxID_ANY, text);
-    c = new wxLayoutConstraints;
-    c->right.LeftOf(label);
-    c->top.SameAs(label, wxTop, 0);
-    c->width.AsIs();
-    c->height.AsIs();
-    dummy->SetConstraints(c);
-
-    *lastWindow = label;
 
     return label;

 	  	 
