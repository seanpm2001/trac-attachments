diff -ru wxWidgets.orig/docs/changes.txt wxWidgets/docs/changes.txt
--- wxWidgets.orig/docs/changes.txt	2008-08-07 17:20:25.117207800 +0200
+++ wxWidgets/docs/changes.txt	2008-08-07 17:23:15.401727200 +0200
@@ -95,6 +95,7 @@
 
 - Optimize wxString::Replace() for single character arguments.
 - Updated Hindi translation (Priyank Bolia).
+- Timezone bias no longer static in wxDateTime (troelsk).
 
 All (GUI):
 
diff -ru wxWidgets.orig/src/common/datetime.cpp wxWidgets/src/common/datetime.cpp
--- wxWidgets.orig/src/common/datetime.cpp	2008-08-07 17:09:14.000000000 +0200
+++ wxWidgets/src/common/datetime.cpp	2008-08-07 17:17:08.000000000 +0200
@@ -157,14 +157,9 @@
         #include <values.h>
         static long wxGetTimeZone()
         {
-            static long timezone = MAXLONG; // invalid timezone
-            if (timezone == MAXLONG)
-            {
-                struct timeb tb;
-                ftime(&tb);
-                timezone = tb.timezone;
-            }
-            return timezone;
+            struct timeb tb;
+            ftime(&tb);
+            return tb.timezone;
         }
         #define WX_TIMEZONE wxGetTimeZone()
     #elif defined(__DARWIN__)
@@ -174,11 +169,9 @@
         // _get_timezone() is so just use it for all builds
         static long wxGetTimeZone()
         {
-            static long s_timezone = LONG_MAX; // invalid timezone
-            if ( s_timezone == LONG_MAX )
-                _get_timezone(&s_timezone);
-
-            return s_timezone;
+            long t;
+            _get_timezone(&t);
+            return t;
         }
         #define WX_TIMEZONE wxGetTimeZone()
     #else // unknown platform - try timezone
@@ -389,6 +382,7 @@
 // (in seconds)
 static int GetTimeZone()
 {
+#ifdef WX_GMTOFF_IN_TM
     // set to true when the timezone is set
     static bool s_timezoneSet = false;
     static long gmtoffset = LONG_MAX; // invalid timezone
@@ -404,17 +398,15 @@
         wxLocaltime_r(&t, &tm);
         s_timezoneSet = true;
 
-#ifdef WX_GMTOFF_IN_TM
         // note that GMT offset is the opposite of time zone and so to return
         // consistent results in both WX_GMTOFF_IN_TM and !WX_GMTOFF_IN_TM
         // cases we have to negate it
         gmtoffset = -tm.tm_gmtoff;
-#else // !WX_GMTOFF_IN_TM
-        gmtoffset = WX_TIMEZONE;
-#endif // WX_GMTOFF_IN_TM/!WX_GMTOFF_IN_TM
     }
-
     return (int)gmtoffset;
+#else // !WX_GMTOFF_IN_TM
+    return WX_TIMEZONE;
+#endif // WX_GMTOFF_IN_TM/!WX_GMTOFF_IN_TM
 }
 
 // return the integral part of the JDN for the midnight of the given date (to
