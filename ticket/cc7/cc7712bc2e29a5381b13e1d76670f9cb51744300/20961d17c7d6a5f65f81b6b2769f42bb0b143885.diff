Index: include/wx/unichar.h
===================================================================
--- include/wx/unichar.h	(revision 73993)
+++ include/wx/unichar.h	(working copy)
@@ -46,6 +46,8 @@
     wxUniChar(unsigned long int c) { m_value = c; }
     wxUniChar(short int c) { m_value = c; }
     wxUniChar(unsigned short int c) { m_value = c; }
+    wxUniChar(long long int c) { m_value = c; }
+    wxUniChar(unsigned long long c) { m_value = c; }
 
     wxUniChar(const wxUniCharRef& c);
 
@@ -103,6 +105,8 @@
     operator unsigned long int() const { return (unsigned long)m_value; }
     operator short int() const { return (short int)m_value; }
     operator unsigned short int() const { return (unsigned short int)m_value; }
+    operator long long int() const { return (long long int)m_value; }
+    operator unsigned long long() const { return (unsigned long long)m_value; }
 
     // We need this operator for the "*p" part of expressions like "for (
     // const_iterator p = begin() + nStart; *p; ++p )". In this case,
@@ -130,6 +134,8 @@
     wxUniChar& operator=(unsigned long int c) { m_value = c; return *this; }
     wxUniChar& operator=(short int c) { m_value = c; return *this; }
     wxUniChar& operator=(unsigned short int c) { m_value = c; return *this; }
+    wxUniChar& operator=(long long int c) { m_value = c; return *this; }
+    wxUniChar& operator=(unsigned long long c) { m_value = c; return *this; }
 
     // Comparison operators:
 
@@ -144,7 +150,9 @@
     bool operator op(short int c) const { return m_value op (value_type)c; }  \
     bool operator op(unsigned short int c) const { return m_value op (value_type)c; }  \
     bool operator op(long int c) const { return m_value op (value_type)c; }   \
-    bool operator op(unsigned long int c) const { return m_value op (value_type)c; }
+    bool operator op(unsigned long int c) const { return m_value op (value_type)c; } \
+    bool operator op(long long int c) const { return m_value op (value_type)c; } \
+    bool operator op(unsigned long long c) const { return m_value op (value_type)c; }
 
     wxFOR_ALL_COMPARISONS(wxDEFINE_UNICHAR_OPERATOR)
 
@@ -254,6 +262,8 @@
     wxUniCharRef& operator=(unsigned short int c) { return *this = wxUniChar(c); }
     wxUniCharRef& operator=(long int c) { return *this = wxUniChar(c); }
     wxUniCharRef& operator=(unsigned long int c) { return *this = wxUniChar(c); }
+    wxUniCharRef& operator=(long long int c) { return *this = wxUniChar(c); }
+    wxUniCharRef& operator=(unsigned long long c) { return *this = wxUniChar(c); }
 
     // Conversions to the same types as wxUniChar is convertible too:
     operator char() const { return UniChar(); }
@@ -267,7 +277,11 @@
     operator unsigned short int() const { return UniChar(); }
     operator long int() const { return UniChar(); }
     operator unsigned long int() const { return UniChar(); }
+    operator long long int() const { return UniChar(); }
+    operator unsigned long long() const { return UniChar(); }
 
+
+
     // see wxUniChar::operator bool etc. for explanation
     operator bool() const { return (bool)UniChar(); }
     bool operator!() const { return !UniChar(); }
@@ -285,7 +299,9 @@
     bool operator op(short int c) const { return UniChar() op c; }             \
     bool operator op(unsigned short int c) const { return UniChar() op c; }    \
     bool operator op(long int c) const { return UniChar() op c; }             \
-    bool operator op(unsigned long int c) const { return UniChar() op c; }
+    bool operator op(unsigned long int c) const { return UniChar() op c; } \
+    bool operator op(long long int c) const { return UniChar() op c; } \
+    bool operator op(unsigned long long c) const { return UniChar() op c; }
 
     wxFOR_ALL_COMPARISONS(wxDEFINE_UNICHARREF_OPERATOR)
 
Index: interface/wx/unichar.h
===================================================================
--- interface/wx/unichar.h	(revision 73993)
+++ interface/wx/unichar.h	(working copy)
@@ -45,6 +45,8 @@
     wxUniChar(unsigned long int c);
     wxUniChar(short int c);
     wxUniChar(unsigned short int c);
+    wxUniChar(long long int c);
+    wxUniChar(unsigned long long c);
 
     wxUniChar(const wxUniCharRef& c);
 
@@ -97,6 +99,8 @@
     operator unsigned long int() const;
     operator short int() const;
     operator unsigned short int() const;
+    operator long long int() const;
+    operator unsigned long long() const;
     //@}
 
     //@{
@@ -114,6 +118,8 @@
     wxUniChar& operator=(unsigned long int c);
     wxUniChar& operator=(short int c);
     wxUniChar& operator=(unsigned short int c);
+    wxUniChar& operator=(long long int c);
+    wxUniChar& operator=(unsigned long long c);
     //@}
 };
 
