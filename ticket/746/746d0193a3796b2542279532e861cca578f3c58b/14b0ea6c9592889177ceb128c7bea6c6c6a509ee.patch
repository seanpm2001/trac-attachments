Index: src/gtk/choice.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/gtk/choice.cpp,v
retrieving revision 1.79
diff -u -r1.79 choice.cpp
--- src/gtk/choice.cpp	2004/12/05 17:29:03	1.79
+++ src/gtk/choice.cpp	2004/12/06 00:44:43
@@ -111,6 +111,9 @@
         m_strings = new wxSortedArrayString;
     }
 
+    // begin with no selection
+    m_selection_hack = wxNOT_FOUND;
+
     GtkWidget *menu = gtk_menu_new();
 
     for (int i = 0; i < n; i++)
@@ -154,6 +157,13 @@
 
     GtkWidget *menu = gtk_option_menu_get_menu( GTK_OPTION_MENU(m_widget) );
 
+    // if the item to insert is at or before the selection, and the selection is valid
+    if ((pos <= m_selection_hack) && (m_selection_hack != wxNOT_FOUND))
+    {
+        // move the selection forward one
+        m_selection_hack++;
+    }
+
     return GtkAddHelper(menu, pos, item);
 }
 
@@ -224,6 +234,9 @@
 
     if ( m_strings )
         m_strings->Clear();
+
+    // begin with no selection
+    m_selection_hack = wxNOT_FOUND;
 }
 
 void wxChoice::Delete( int n )
@@ -237,6 +250,18 @@
 
     wxCHECK_RET( n >= 0 && n < count, _T("invalid index in wxChoice::Delete") );
 
+    // if the item to delete is before the selection, and the selection is valid
+    if ((n < m_selection_hack) && (m_selection_hack != wxNOT_FOUND))
+    {
+        // move the selection back one
+        m_selection_hack--;
+    }
+    else if (n == m_selection_hack)
+    {
+        // invalidate the selection
+        m_selection_hack = wxNOT_FOUND;
+    }
+
     const bool hasClientData = m_clientDataItemsType != wxClientData_None;
     const bool hasObjectData = m_clientDataItemsType == wxClientData_Object;
 
@@ -329,6 +354,10 @@
 {
     wxCHECK_MSG( m_widget != NULL, -1, wxT("invalid choice") );
 
+    // this has the same (if not better) behaviour as the following commented code
+    return m_selection_hack;
+
+    /*
 #ifdef __WXGTK20__
 
     return gtk_option_menu_get_history( GTK_OPTION_MENU(m_widget) );
@@ -348,6 +377,7 @@
 
     return -1;
 #endif
+    */
 }
 
 void wxChoice::SetString( int n, const wxString& str )
@@ -435,6 +465,24 @@
 
     int tmp = n;
     gtk_option_menu_set_history( GTK_OPTION_MENU(m_widget), (gint)tmp );
+
+    // set the local selection variable manually
+    if ((n >= 0) && (n < GetCount()))
+    {
+        // a valid selection has been made
+        m_selection_hack = n;
+    }
+    else if ((n == wxNOT_FOUND) || (GetCount() == 0))
+    {
+        // invalidates the selection if there are no items
+        // or if it is specifically set to wxNOT_FOUND
+        m_selection_hack = wxNOT_FOUND;
+    }
+    else
+    {
+        // this selects the first item by default if the selection is out of bounds
+        m_selection_hack = 0;
+    }
 }
 
 void wxChoice::DoApplyWidgetStyle(GtkRcStyle *style)

 	  	 
