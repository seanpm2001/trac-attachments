diff --git a/include/wx/qt/font.h b/include/wx/qt/font.h
index 44354e8..a6395e0 100644
--- a/include/wx/qt/font.h
+++ b/include/wx/qt/font.h
@@ -8,6 +8,8 @@
 #ifndef _WX_QT_FONT_H_
 #define _WX_QT_FONT_H_
 
+#define DefaultFaceName "Sans Serif"
+
 class QFont;
 class WXDLLIMPEXP_CORE wxFont : public wxFontBase
 {
diff --git a/src/qt/cursor.cpp b/src/qt/cursor.cpp
index 880a279..9271c36 100644
--- a/src/qt/cursor.cpp
+++ b/src/qt/cursor.cpp
@@ -110,7 +110,7 @@
     }
 //    case wxCURSOR_ARROW: 
     case wxCURSOR_DEFAULT:     qt_cur = Qt::ArrowCursor;    break;
-//    case wxCURSOR_RIGHT_ARROW:
+    case wxCURSOR_RIGHT_ARROW:
     case wxCURSOR_HAND:        qt_cur = Qt::OpenHandCursor; break;
     case wxCURSOR_CROSS:       qt_cur = Qt::CrossCursor;    break;
     case wxCURSOR_SIZEWE:      qt_cur = Qt::SizeHorCursor;  break;
@@ -141,7 +141,9 @@
     case wxCURSOR_BASED_ARROW_UP:   qt_cur = Qt::UpArrowCursor; break;
 */
     default:
-        wxFAIL_MSG(wxT("unsupported cursor type"));
+        wxString mystring;
+        mystring << cursorId;
+        wxFAIL_MSG(wxT("unsupported cursor type cursorId=") + mystring);
         // will use the standard one
         break;
     }
diff --git a/src/qt/font.cpp b/src/qt/font.cpp
index 6600d8a..a44fa3f 100644
--- a/src/qt/font.cpp
+++ b/src/qt/font.cpp
@@ -130,7 +130,11 @@
         if ( info.HasFaceName() )
             m_nativeFontInfo.SetFaceName(info.GetFaceName());
         else
+        {
             m_nativeFontInfo.SetFamily(info.GetFamily());
+            wxString dfn(DefaultFaceName);
+            m_nativeFontInfo.SetFaceName(dfn);
+        }
 
         if ( info.IsUsingSizeInPixels() )
             m_nativeFontInfo.SetPixelSize(info.GetPixelSize());
@@ -229,9 +233,19 @@
 {
     UnRef();
 
-    m_refData = new wxFontRefData(InfoFromLegacyParams(size.GetHeight(), family,
-                                                       style, weight, underlined,
-                                                       face, encoding));
+    if (face.IsEmpty())
+    {
+        wxString dfn(DefaultFaceName);
+        m_refData = new wxFontRefData(InfoFromLegacyParams(size.GetHeight(), family,
+                                                           style, weight, underlined,
+                                                           dfn, encoding));
+    }
+    else
+    {
+        m_refData = new wxFontRefData(InfoFromLegacyParams(size.GetHeight(), family,
+                                                           style, weight, underlined,
+                                                           face, encoding));
+    }
 
     return true;
 }
@@ -305,7 +319,14 @@
 {
     AllocExclusive();
 
-    return M_FONTDATA.SetFaceName(facename);
+    if (facename.IsEmpty())
+    {
+        return M_FONTDATA.SetFaceName(DefaultFaceName);
+    }
+    else
+    {
+        return M_FONTDATA.SetFaceName(facename);
+    }
 }
 
 void wxFont::SetFamily( wxFontFamily family )
@@ -544,7 +565,15 @@
 
 bool wxNativeFontInfo::SetFaceName(const wxString& facename)
 {
-    m_qtFont.setFamily(wxQtConvertString(facename));
+    if (facename.IsEmpty())
+    {
+        wxString dfn(DefaultFaceName);
+        m_qtFont.setFamily(wxQtConvertString(dfn));
+    }
+    else
+    {
+        m_qtFont.setFamily(wxQtConvertString(facename));
+    }
     // Qt uses a "font matching algorithm" so the font will be always valid
     return true;
 }
