Only in wxWin/contrib/samples/ogl/studio: bcc_mswd
Only in wxWin/contrib/samples/ogl/studio: bcc_mswud
diff -bu1 -r wxWindows/contrib/samples/ogl/studio/cspalette.cpp wxWin/contrib/samples/ogl/studio/cspalette.cpp
--- wxWindows/contrib/samples/ogl/studio/cspalette.cpp	2002-03-21 10:32:03.000000000 +0100
+++ wxWin/contrib/samples/ogl/studio/cspalette.cpp	2003-08-20 19:50:54.000000000 +0200
@@ -74,5 +74,5 @@
 {
-    wxString msg("");
+    wxString msg = wxEmptyString;
     if (toolIndex == PALETTE_ARROW)
-        msg = "Pointer";
+        msg = _T("Pointer");
     else if (toolIndex != -1)
@@ -117,4 +117,4 @@
 #ifdef __WXMSW__
-    wxBitmap PaletteArrow("arrowtool");
-    wxBitmap TextTool("texttool");
+    wxBitmap PaletteArrow(_T("arrowtool"));
+    wxBitmap TextTool(_T("texttool"));
     wxSize toolBitmapSize(32, 32);
@@ -132,4 +132,4 @@
 
-  palette->AddTool(PALETTE_ARROW, PaletteArrow, wxNullBitmap, TRUE, 0, -1, NULL, "Pointer");
-  palette->AddTool(PALETTE_TEXT_TOOL, TextTool, wxNullBitmap, TRUE, 0, -1, NULL, "Text");
+  palette->AddTool(PALETTE_ARROW, PaletteArrow, wxNullBitmap, TRUE, 0, -1, NULL, _T("Pointer"));
+  palette->AddTool(PALETTE_TEXT_TOOL, TextTool, wxNullBitmap, TRUE, 0, -1, NULL, _T("Text"));
 
@@ -138,12 +138,12 @@
 
-  symbols[noSymbols] = "Wide Rectangle";
+  symbols[noSymbols] = _T("Wide Rectangle");
   noSymbols ++;
 
-  symbols[noSymbols] =  "Thin Rectangle";
+  symbols[noSymbols] =  _T("Thin Rectangle");
   noSymbols ++;
  
-  symbols[noSymbols] =  "Triangle";
+  symbols[noSymbols] =  _T("Triangle");
   noSymbols ++;
 
-  symbols[noSymbols] =  "Octagon";
+  symbols[noSymbols] =  _T("Octagon");
   noSymbols ++;
@@ -153,12 +153,12 @@
 #ifndef __WXGTK__
-  symbols[noSymbols] =  "Group";
+  symbols[noSymbols] =  _T("Group");
   noSymbols ++;
 
-  symbols[noSymbols] =  "Circle";
+  symbols[noSymbols] =  _T("Circle");
   noSymbols ++;
 
-  symbols[noSymbols] =  "Circle shadow";
+  symbols[noSymbols] =  _T("Circle shadow");
   noSymbols ++;
 
-  symbols[noSymbols] =  "SemiCircle";
+  symbols[noSymbols] =  _T("SemiCircle");
   noSymbols ++;
diff -bu1 -r wxWindows/contrib/samples/ogl/studio/cspalette.h wxWin/contrib/samples/ogl/studio/cspalette.h
--- wxWindows/contrib/samples/ogl/studio/cspalette.h	2003-08-18 08:14:34.000000000 +0200
+++ wxWin/contrib/samples/ogl/studio/cspalette.h	2003-08-20 16:14:19.000000000 +0200
@@ -30,3 +30,6 @@
 // So use a simple toolbar at present.
-#define TOOLPALETTECLASS    wxToolBarSimple
+// ABX: Simple toolbar is not available in default compilation and is deprecated
+//      so I use wxToolBar anyway
+// #define TOOLPALETTECLASS    wxToolBarSimple
+#define TOOLPALETTECLASS    wxToolBar
 
diff -bu1 -r wxWindows/contrib/samples/ogl/studio/csprint.cpp wxWin/contrib/samples/ogl/studio/csprint.cpp
--- wxWindows/contrib/samples/ogl/studio/csprint.cpp	2003-03-31 12:23:29.000000000 +0200
+++ wxWin/contrib/samples/ogl/studio/csprint.cpp	2003-08-20 19:53:15.000000000 +0200
@@ -114,4 +114,4 @@
 
-                wxASSERT_MSG( (fromShape != NULL), "Could not find 'from' shape");
-                wxASSERT_MSG( (toShape != NULL), "Could not find 'to' shape");
+                wxASSERT_MSG( (fromShape != NULL), _T("Could not find 'from' shape"));
+                wxASSERT_MSG( (toShape != NULL), _T("Could not find 'to' shape"));
 
@@ -147,3 +147,3 @@
 
-                    wxASSERT_MSG( (newLineShape != NULL), "Could not find new line shape");
+                    wxASSERT_MSG( (newLineShape != NULL), _T("Could not find new line shape"));
 
@@ -180,4 +180,4 @@
 
-    int printWidth = mfDC.MaxX() - mfDC.MinX();
-    int printHeight = mfDC.MaxY() - mfDC.MinY();
+    /* int printWidth = */ mfDC.MaxX() - mfDC.MinX();
+    /* int printHeight = */ mfDC.MaxY() - mfDC.MinY();
     int maxX = (int)mfDC.MaxX();
@@ -194,3 +194,3 @@
       sprintf(buf, "Sorry, could not allocate clipboard bitmap (%dx%d)", (maxX+10), (maxY+10));
-      wxMessageBox(buf, "Clipboard copy problem");
+      wxMessageBox(buf, _T("Clipboard copy problem"));
       return FALSE;
@@ -270,3 +270,3 @@
 
-    m_currentCmd = new csDiagramCommand("Paste", doc);
+    m_currentCmd = new csDiagramCommand(_T("Paste"), doc);
 
@@ -301,3 +301,3 @@
 // not the clipboard.
-bool csDiagramClipboard::OnAddShape(wxDiagram* diagramTo, wxShape* newShape, wxDC* dc)
+bool csDiagramClipboard::OnAddShape(wxDiagram* diagramTo, wxShape* newShape, wxDC* WXUNUSED(dc))
 {
@@ -310,3 +310,3 @@
         csDiagram* diagram = (csDiagram*) diagramTo;
-        csDiagramDocument* doc = diagram->GetDocument();
+        /* csDiagramDocument* doc = */ diagram->GetDocument();
 
diff -bu1 -r wxWindows/contrib/samples/ogl/studio/dialogs.cpp wxWin/contrib/samples/ogl/studio/dialogs.cpp
--- wxWindows/contrib/samples/ogl/studio/dialogs.cpp	2003-03-31 12:23:29.000000000 +0200
+++ wxWin/contrib/samples/ogl/studio/dialogs.cpp	2003-08-20 18:25:07.000000000 +0200
@@ -42,3 +42,3 @@
 {
-    wxLoadFromResource(this, parent, "shape_label_dialog");
+    wxLoadFromResource(this, parent, _T("shape_label_dialog"));
 
@@ -92,3 +92,3 @@
 csSettingsDialog::csSettingsDialog(wxWindow* parent):
-    wxDialog(parent, -1, "Settings", wxPoint(0, 0), wxSize(PROPERTY_DIALOG_WIDTH, PROPERTY_DIALOG_HEIGHT))
+    wxDialog(parent, -1, _T("Settings"), wxPoint(0, 0), wxSize(PROPERTY_DIALOG_WIDTH, PROPERTY_DIALOG_HEIGHT))
 {
@@ -102,5 +102,5 @@
 
-    bool success = wxLoadFromResource(m_generalSettings, m_notebook, "general_settings_dialog");
-    wxASSERT_MSG( (success), "Could not load general settings panel.");
-    m_notebook->AddPage(m_generalSettings, "General", TRUE);
+    bool success = wxLoadFromResource(m_generalSettings, m_notebook, _T("general_settings_dialog"));
+    wxASSERT_MSG( (success), _T("Could not load general settings panel."));
+    m_notebook->AddPage(m_generalSettings, _T("General"), TRUE);
 
@@ -108,5 +108,5 @@
 
-    success = wxLoadFromResource(m_diagramSettings, m_notebook, "diagram_settings_dialog");
-    wxASSERT_MSG( (success), "Could not load diagram settings panel.");
-    m_notebook->AddPage(m_diagramSettings, "Diagram");
+    success = wxLoadFromResource(m_diagramSettings, m_notebook, _T("diagram_settings_dialog"));
+    wxASSERT_MSG( (success), _T("Could not load diagram settings panel."));
+    m_notebook->AddPage(m_diagramSettings, _T("Diagram"));
 
@@ -115,5 +115,5 @@
 
-    wxButton* okButton = new wxButton(this, wxID_OK, "OK", wxPoint(0, 0), wxSize(largeButtonWidth, largeButtonHeight));
-    wxButton* cancelButton = new wxButton(this, wxID_CANCEL, "Cancel", wxPoint(0, 0), wxSize(largeButtonWidth, largeButtonHeight));
-    wxButton* helpButton = new wxButton(this, wxID_HELP, "Help", wxPoint(0, 0), wxSize(largeButtonWidth, largeButtonHeight));
+    wxButton* okButton = new wxButton(this, wxID_OK, _T("OK"), wxPoint(0, 0), wxSize(largeButtonWidth, largeButtonHeight));
+    wxButton* cancelButton = new wxButton(this, wxID_CANCEL, _T("Cancel"), wxPoint(0, 0), wxSize(largeButtonWidth, largeButtonHeight));
+    wxButton* helpButton = new wxButton(this, wxID_HELP, _T("Help"), wxPoint(0, 0), wxSize(largeButtonWidth, largeButtonHeight));
 
@@ -166,6 +166,6 @@
     wxTextCtrl* gridSpacing = (wxTextCtrl*) m_diagramSettings->FindWindow(ID_GRID_SPACING);
-    wxASSERT_MSG( (gridSpacing != (wxTextCtrl*) NULL), "Could not find grid spacing control.");
+    wxASSERT_MSG( (gridSpacing != (wxTextCtrl*) NULL), _T("Could not find grid spacing control."));
 
     wxChoice* gridStyle = (wxChoice*) m_diagramSettings->FindWindow(ID_GRID_STYLE);
-    wxASSERT_MSG( (gridStyle != (wxChoice*) NULL), "Could not find grid style control.");
+    wxASSERT_MSG( (gridStyle != (wxChoice*) NULL), _T("Could not find grid style control."));
 
@@ -174,3 +174,3 @@
     wxString str;
-    str.Printf("%d", wxGetApp().GetGridSpacing());
+    str.Printf(_T("%d"), wxGetApp().GetGridSpacing());
     gridSpacing->SetValue(str);
@@ -183,9 +183,12 @@
     wxTextCtrl* gridSpacing = (wxTextCtrl*) m_diagramSettings->FindWindow(ID_GRID_SPACING);
-    wxASSERT_MSG( (gridSpacing != (wxTextCtrl*) NULL), "Could not find grid spacing control.");
+    wxASSERT_MSG( (gridSpacing != (wxTextCtrl*) NULL), _T("Could not find grid spacing control."));
 
     wxChoice* gridStyle = (wxChoice*) m_diagramSettings->FindWindow(ID_GRID_STYLE);
-    wxASSERT_MSG( (gridStyle != (wxChoice*) NULL), "Could not find grid style control.");
+    wxASSERT_MSG( (gridStyle != (wxChoice*) NULL), _T("Could not find grid style control."));
 
     wxGetApp().SetGridStyle(gridStyle->GetSelection());
-    wxGetApp().SetGridSpacing(atoi(gridSpacing->GetValue()));
+    wxString str = gridSpacing->GetValue();
+    long grid_spacing;
+    str.ToLong( &grid_spacing);
+    wxGetApp().SetGridSpacing(grid_spacing);
 
@@ -193,3 +196,3 @@
     {
-        wxMessageBox("Dotted grid style not yet implemented.", "Studio", wxICON_EXCLAMATION);
+        wxMessageBox(_T("Dotted grid style not yet implemented."), _T("Studio"), wxICON_EXCLAMATION);
         return FALSE;
@@ -261,5 +264,5 @@
     m_generalPropertiesDialog = new csGeneralShapePropertiesDialog;
-    bool success = wxLoadFromResource(m_generalPropertiesDialog, m_notebook, "general_shape_properties_dialog");
-    wxASSERT_MSG( (success), "Could not load general properties panel.");
-    m_notebook->AddPage(m_generalPropertiesDialog, "General");
+    bool success = wxLoadFromResource(m_generalPropertiesDialog, m_notebook, _T("general_shape_properties_dialog"));
+    wxASSERT_MSG( (success), _T("Could not load general properties panel."));
+    m_notebook->AddPage(m_generalPropertiesDialog, _T("General"));
 
@@ -268,3 +271,3 @@
     {
-        wxMessageBox("Could not load the attribute dialog for this shape.", "Studio", wxICON_EXCLAMATION);
+        wxMessageBox(_T("Could not load the attribute dialog for this shape."), _T("Studio"), wxICON_EXCLAMATION);
         delete m_attributeDialog;
@@ -274,3 +277,3 @@
     {
-        m_notebook->AddPage(m_attributeDialog, "Attributes");
+        m_notebook->AddPage(m_attributeDialog, _T("Attributes"));
     }
@@ -279,3 +282,3 @@
     wxString str(attributeDialogName);
-    str += "1";
+    str += _T("1");
     m_alternativeAttributeDialog = new wxPanel;
@@ -284,3 +287,3 @@
     {
-        m_notebook->AddPage(m_alternativeAttributeDialog, "Attributes (alternative)");
+        m_notebook->AddPage(m_alternativeAttributeDialog, _T("Attributes (alternative)"));
     }
@@ -295,5 +298,5 @@
 
-    wxButton* okButton = new wxButton(this, wxID_OK, "OK", wxPoint(0, 0), wxSize(largeButtonWidth, largeButtonHeight));
-    wxButton* cancelButton = new wxButton(this, wxID_CANCEL, "Cancel", wxPoint(0, 0), wxSize(largeButtonWidth, largeButtonHeight));
-    wxButton* helpButton = new wxButton(this, wxID_HELP, "Help", wxPoint(0, 0), wxSize(largeButtonWidth, largeButtonHeight));
+    wxButton* okButton = new wxButton(this, wxID_OK, _T("OK"), wxPoint(0, 0), wxSize(largeButtonWidth, largeButtonHeight));
+    wxButton* cancelButton = new wxButton(this, wxID_CANCEL, _T("Cancel"), wxPoint(0, 0), wxSize(largeButtonWidth, largeButtonHeight));
+    wxButton* helpButton = new wxButton(this, wxID_HELP, _T("Help"), wxPoint(0, 0), wxSize(largeButtonWidth, largeButtonHeight));
 
diff -bu1 -r wxWindows/contrib/samples/ogl/studio/doc.cpp wxWin/contrib/samples/ogl/studio/doc.cpp
--- wxWindows/contrib/samples/ogl/studio/doc.cpp	2003-03-31 12:23:29.000000000 +0200
+++ wxWin/contrib/samples/ogl/studio/doc.cpp	2003-08-20 18:26:20.000000000 +0200
@@ -57,3 +57,3 @@
 {
-  if (file == "")
+  if (file == wxEmptyString)
     return FALSE;
@@ -63,8 +63,8 @@
     wxString msgTitle;
-    if (wxTheApp->GetAppName() != "")
+    if (wxTheApp->GetAppName() != wxEmptyString)
         msgTitle = wxTheApp->GetAppName();
     else
-        msgTitle = wxString("File error");
+        msgTitle = wxString(_T("File error"));
 
-    (void)wxMessageBox("Sorry, could not open this file for saving.", msgTitle, wxOK | wxICON_EXCLAMATION,
+    (void)wxMessageBox(_T("Sorry, could not open this file for saving."), msgTitle, wxOK | wxICON_EXCLAMATION,
       GetDocumentWindow());
@@ -84,6 +84,6 @@
   wxString msgTitle;
-  if (wxTheApp->GetAppName() != "")
+  if (wxTheApp->GetAppName() != wxEmptyString)
     msgTitle = wxTheApp->GetAppName();
   else
-    msgTitle = wxString("File error");
+    msgTitle = wxString(_T("File error"));
 
@@ -92,3 +92,3 @@
   {
-    (void)wxMessageBox("Sorry, could not open this file.", msgTitle, wxOK|wxICON_EXCLAMATION,
+    (void)wxMessageBox(_T("Sorry, could not open this file."), msgTitle, wxOK|wxICON_EXCLAMATION,
      GetDocumentWindow());
diff -bu1 -r wxWindows/contrib/samples/ogl/studio/mainfrm.cpp wxWin/contrib/samples/ogl/studio/mainfrm.cpp
--- wxWindows/contrib/samples/ogl/studio/mainfrm.cpp	2003-08-18 08:14:34.000000000 +0200
+++ wxWin/contrib/samples/ogl/studio/mainfrm.cpp	2003-08-20 18:24:47.000000000 +0200
@@ -56,3 +56,3 @@
 	long style):
-  wxDocMDIParentFrame(manager, parent, id, title, pos, size, style, "frame")
+  wxDocMDIParentFrame(manager, parent, id, title, pos, size, style, _T("frame"))
 {
@@ -73,3 +73,3 @@
 
-void csFrame::OnHelp(wxCommandEvent& event)
+void csFrame::OnHelp(wxCommandEvent& WXUNUSED(event))
 {
@@ -78,6 +78,6 @@
 
-void csFrame::OnSettings(wxCommandEvent& event)
+void csFrame::OnSettings(wxCommandEvent& WXUNUSED(event))
 {
     csSettingsDialog* dialog = new csSettingsDialog(this);
-    int ret = dialog->ShowModal();
+    /* int ret = */ dialog->ShowModal();
     dialog->Destroy();
@@ -85,3 +85,3 @@
 
-void csFrame::OnQuit(wxCommandEvent& event)
+void csFrame::OnQuit(wxCommandEvent& WXUNUSED(event))
 {
@@ -90,5 +90,5 @@
 
-void csFrame::OnAbout(wxCommandEvent& event)
+void csFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
 {
-      (void)wxMessageBox("OGL Studio\n(c) 1999, Julian Smart", "About OGL Studio", wxICON_INFORMATION);
+      (void)wxMessageBox(_T("OGL Studio\n(c) 1999, Julian Smart"), _T("About OGL Studio"), wxICON_INFORMATION);
 }
@@ -143,3 +143,3 @@
 
-void csFrame::OnSize(wxSizeEvent& event)
+void csFrame::OnSize(wxSizeEvent& WXUNUSED(event))
 {
diff -bu1 -r wxWindows/contrib/samples/ogl/studio/project.cpp wxWin/contrib/samples/ogl/studio/project.cpp
--- wxWindows/contrib/samples/ogl/studio/project.cpp	2002-01-08 23:27:53.000000000 +0100
+++ wxWin/contrib/samples/ogl/studio/project.cpp	2003-08-20 18:24:57.000000000 +0200
@@ -39,4 +39,4 @@
 {
-    m_imageList.Add(wxIcon("folder1"));
-    m_imageList.Add(wxIcon("file1"));
+    m_imageList.Add(wxIcon(_T("folder1")));
+    m_imageList.Add(wxIcon(_T("file1")));
 
@@ -51,3 +51,3 @@
 // Create the project window
-bool csApp::CreateProjectWindow(wxFrame *parent)
+bool csApp::CreateProjectWindow(wxFrame *WXUNUSED(parent))
 {
diff -bu1 -r wxWindows/contrib/samples/ogl/studio/shapes.cpp wxWin/contrib/samples/ogl/studio/shapes.cpp
--- wxWindows/contrib/samples/ogl/studio/shapes.cpp	2003-03-31 12:23:30.000000000 +0200
+++ wxWin/contrib/samples/ogl/studio/shapes.cpp	2003-08-20 18:25:59.000000000 +0200
@@ -86,3 +86,3 @@
  
-void csEvtHandler::OnLeftClick(double x, double y, int keys, int attachment)
+void csEvtHandler::OnLeftClick(double WXUNUSED(x), double WXUNUSED(y), int keys, int WXUNUSED(attachment))
 {
@@ -165,3 +165,3 @@
 
-void csEvtHandler::OnRightClick(double x, double y, int keys, int attachment)
+void csEvtHandler::OnRightClick(double x, double y, int WXUNUSED(keys), int WXUNUSED(attachment))
 {
@@ -191,3 +191,3 @@
 
-void csEvtHandler::OnBeginDragRight(double x, double y, int keys, int attachment)
+void csEvtHandler::OnBeginDragRight(double x, double y, int WXUNUSED(keys), int attachment)
 {
@@ -205,3 +205,3 @@
 
-void csEvtHandler::OnDragRight(bool draw, double x, double y, int keys, int attachment)
+void csEvtHandler::OnDragRight(bool WXUNUSED(draw), double x, double y, int WXUNUSED(keys), int attachment)
 {
@@ -218,3 +218,3 @@
 
-void csEvtHandler::OnEndDragRight(double x, double y, int keys, int attachment)
+void csEvtHandler::OnEndDragRight(double x, double y, int WXUNUSED(keys), int attachment)
 {
@@ -232,3 +232,3 @@
         theShape->AssignNewIds();
-        theShape->SetEventHandler(new csEvtHandler(theShape, theShape, wxString("")));
+        theShape->SetEventHandler(new csEvtHandler(theShape, theShape, wxEmptyString));
         theShape->SetPen(wxBLACK_PEN);
@@ -246,3 +246,3 @@
         if (haveArrow)
-            lineShape->AddArrow(ARROW_ARROW, ARROW_POSITION_MIDDLE, 10.0, 0.0, "Normal arrowhead");
+            lineShape->AddArrow(ARROW_ARROW, ARROW_POSITION_MIDDLE, 10.0, 0.0, _T("Normal arrowhead"));
 
@@ -253,3 +253,3 @@
         canvas->GetView()->GetDocument()->GetCommandProcessor()->Submit(
-            new csDiagramCommand("Line", (csDiagramDocument *)canvas->GetView()->GetDocument(),
+            new csDiagramCommand(_T("Line"), (csDiagramDocument *)canvas->GetView()->GetDocument(),
                     new csCommandState(ID_CS_ADD_LINE, lineShape, NULL)));
@@ -411,3 +411,3 @@
 
-  csDiagramCommand* cmd = new csDiagramCommand("Move", (csDiagramDocument*)canvas->GetView()->GetDocument(),
+  csDiagramCommand* cmd = new csDiagramCommand(_T("Move"), (csDiagramDocument*)canvas->GetView()->GetDocument(),
                 new csCommandState(ID_CS_MOVE, newShape, GetShape()));
@@ -559,3 +559,3 @@
 
-  csDiagramCommand* cmd = new csDiagramCommand("Size", (csDiagramDocument*)canvas->GetView()->GetDocument(),
+  csDiagramCommand* cmd = new csDiagramCommand(_T("Size"), (csDiagramDocument*)canvas->GetView()->GetDocument(),
                 new csCommandState(ID_CS_SIZE, newShape, shape));
@@ -566,3 +566,3 @@
 
-void csEvtHandler::OnEndSize(double x, double y)
+void csEvtHandler::OnEndSize(double WXUNUSED(x), double WXUNUSED(y))
 {
@@ -583,3 +583,3 @@
 
-    csDiagramCommand* cmd = new csDiagramCommand("Change attachment", (csDiagramDocument*)canvas->GetView()->GetDocument());
+    csDiagramCommand* cmd = new csDiagramCommand(_T("Change attachment"), (csDiagramDocument*)canvas->GetView()->GetDocument());
 
@@ -602,3 +602,3 @@
 
-void csEvtHandler::OnLeftDoubleClick(double x, double y, int keys, int attachment)
+void csEvtHandler::OnLeftDoubleClick(double WXUNUSED(x), double WXUNUSED(y), int WXUNUSED(keys), int WXUNUSED(attachment))
 {
@@ -625,4 +625,4 @@
         attributeDialog = new csThinRectangleDialog;
-        attributeDialogName = "thin_rectangle";
-        title = "Thin Rectangle Properties";
+        attributeDialogName = _T("thin_rectangle");
+        title = _T("Thin Rectangle Properties");
     }
@@ -631,4 +631,4 @@
         attributeDialog = new csWideRectangleDialog;
-        attributeDialogName = "wide_rectangle";
-        title = "Wide Rectangle Properties";
+        attributeDialogName = _T("wide_rectangle");
+        title = _T("Wide Rectangle Properties");
     }
@@ -637,4 +637,4 @@
         attributeDialog = new csTriangleDialog;
-        attributeDialogName = "triangle";
-        title = "Triangle Properties";
+        attributeDialogName = _T("triangle");
+        title = _T("Triangle Properties");
     }
@@ -643,4 +643,4 @@
         attributeDialog = new csSemiCircleDialog;
-        attributeDialogName = "semi_circle";
-        title = "Semicircle Properties";
+        attributeDialogName = _T("semi_circle");
+        title = _T("Semicircle Properties");
     }
@@ -649,4 +649,4 @@
         attributeDialog = new csCircleDialog;
-        attributeDialogName = "circle";
-        title = "Circle Properties";
+        attributeDialogName = _T("circle");
+        title = _T("Circle Properties");
     }
@@ -655,4 +655,4 @@
         attributeDialog = new csCircleShadowDialog;
-        attributeDialogName = "circle_shadow";
-        title = "Circle Shadow Properties";
+        attributeDialogName = _T("circle_shadow");
+        title = _T("Circle Shadow Properties");
     }
@@ -661,4 +661,4 @@
         attributeDialog = new csTextBoxDialog;
-        attributeDialogName = "text_box";
-        title = "Text Box Properties";
+        attributeDialogName = _T("text_box");
+        title = _T("Text Box Properties");
     }
@@ -667,4 +667,4 @@
         attributeDialog = new csGroupDialog;
-        attributeDialogName = "group";
-        title = "Group Properties";
+        attributeDialogName = _T("group");
+        title = _T("Group Properties");
     }
@@ -673,4 +673,4 @@
         attributeDialog = new csOctagonDialog;
-        attributeDialogName = "octagon";
-        title = "Octagon Properties";
+        attributeDialogName = _T("octagon");
+        title = _T("Octagon Properties");
     }
@@ -678,3 +678,3 @@
     {
-        wxMessageBox("Unrecognised shape.", "Studio", wxICON_EXCLAMATION);
+        wxMessageBox(_T("Unrecognised shape."), _T("Studio"), wxICON_EXCLAMATION);
         return FALSE;
@@ -698,3 +698,3 @@
 
-    view->GetDocument()->GetCommandProcessor()->Submit(new csDiagramCommand("Edit properties", (csDiagramDocument*) view->GetDocument(),
+    view->GetDocument()->GetCommandProcessor()->Submit(new csDiagramCommand(_T("Edit properties"), (csDiagramDocument*) view->GetDocument(),
                 new csCommandState(ID_CS_EDIT_PROPERTIES, newShape, shape)));
@@ -712,3 +712,3 @@
   csEvtHandler *handler = (csEvtHandler *)shape.GetEventHandler();
-  expr.AddAttributeValueString("label", handler->m_label);
+  expr.AddAttributeValueString(_T("label"), handler->m_label);
   return TRUE;
@@ -719,4 +719,4 @@
   wxDiagram::OnShapeLoad(db, shape, expr);
-  wxString label("");
-  expr.GetAttributeValue("label", label);
+  wxString label = wxEmptyString;
+  expr.GetAttributeValue(_T("label"), label);
   csEvtHandler *handler = new csEvtHandler(&shape, &shape, label);
@@ -981,3 +981,3 @@
 {
-    SetPen(wxThePenList->FindOrCreatePen("BLACK", 1, wxDOT));
+    SetPen(wxThePenList->FindOrCreatePen(_T("BLACK"), 1, wxDOT));
     SetBrush(wxTRANSPARENT_BRUSH);
@@ -1051,3 +1051,3 @@
 
-bool csLineShape::OnMoveMiddleControlPoint(wxDC& dc, wxLineControlPoint* lpt, const wxRealPoint& pt)
+bool csLineShape::OnMoveMiddleControlPoint(wxDC& WXUNUSED(dc), wxLineControlPoint* lpt, const wxRealPoint& pt)
 {
@@ -1065,3 +1065,3 @@
 
-    view->GetDocument()->GetCommandProcessor()->Submit(new csDiagramCommand("Move line point", (csDiagramDocument*) view->GetDocument(),
+    view->GetDocument()->GetCommandProcessor()->Submit(new csDiagramCommand(_T("Move line point"), (csDiagramDocument*) view->GetDocument(),
                 new csCommandState(ID_CS_MOVE_LINE_POINT, newShape, this)));
@@ -1162,3 +1162,3 @@
                 theta += ninetyDegrees;
-                opStr = "Rotate clockwise";
+                opStr = _T("Rotate clockwise");
             }
@@ -1167,3 +1167,3 @@
                 theta -= ninetyDegrees;
-                opStr = "Rotate anticlockwise";
+                opStr = _T("Rotate anticlockwise");
             }
diff -bu1 -r wxWindows/contrib/samples/ogl/studio/shapes.h wxWin/contrib/samples/ogl/studio/shapes.h
--- wxWindows/contrib/samples/ogl/studio/shapes.h	2003-03-31 12:23:30.000000000 +0200
+++ wxWin/contrib/samples/ogl/studio/shapes.h	2003-08-20 18:07:18.000000000 +0200
@@ -228,3 +228,3 @@
  public:
-  csEvtHandler(wxShapeEvtHandler *prev = NULL, wxShape *shape = NULL, const wxString& lab = "");
+  csEvtHandler(wxShapeEvtHandler *prev = NULL, wxShape *shape = NULL, const wxString& lab = wxEmptyString);
   ~csEvtHandler();
diff -bu1 -r wxWindows/contrib/samples/ogl/studio/studio.cpp wxWin/contrib/samples/ogl/studio/studio.cpp
--- wxWindows/contrib/samples/ogl/studio/studio.cpp	2003-03-31 12:23:30.000000000 +0200
+++ wxWin/contrib/samples/ogl/studio/studio.cpp	2003-08-20 18:26:55.000000000 +0200
@@ -94,5 +94,5 @@
 {
-  if (!wxResourceParseFile("studio_resources.wxr"))
+  if (!wxResourceParseFile(_T("studio_resources.wxr")))
   {
-    wxMessageBox("Could not find or parse resource file: studio_resources.wxr", "Studio");
+    wxMessageBox(_T("Could not find or parse resource file: studio_resources.wxr"), _T("Studio"));
     return FALSE;
@@ -100,3 +100,3 @@
 
-  m_helpController.Initialize("studio.hlp");
+  m_helpController.Initialize(_T("studio.hlp"));
 
@@ -112,3 +112,3 @@
   //// Create a template relating drawing documents to their views
-  (void) new wxDocTemplate(m_docManager, "Diagram", "*.dia", "", "dia", "Diagram Doc", "Diagram View",
+  (void) new wxDocTemplate(m_docManager, _T("Diagram"), _T("*.dia"), wxEmptyString, _T("dia"), _T("Diagram Doc"), _T("Diagram View"),
           CLASSINFO(csDiagramDocument), CLASSINFO(csDiagramView));
@@ -123,3 +123,3 @@
 
-  csFrame* frame = new csFrame(m_docManager, NULL, -1, "OGL Studio", m_mainFramePos, m_mainFrameSize,
+  csFrame* frame = new csFrame(m_docManager, NULL, -1, _T("OGL Studio"), m_mainFramePos, m_mainFrameSize,
    wxDEFAULT_FRAME_STYLE_NO_CLIP | wxHSCROLL | wxVSCROLL);
@@ -132,4 +132,4 @@
 
-  fileMenu->Append(wxID_NEW, "&New...\tCtrl+N");
-  fileMenu->Append(wxID_OPEN, "&Open...\tCtrl+O");
+  fileMenu->Append(wxID_NEW, _T("&New...\tCtrl+N"));
+  fileMenu->Append(wxID_OPEN, _T("&Open...\tCtrl+O"));
 
@@ -137,7 +137,7 @@
 
-  fileMenu->Append(wxID_PRINT, "&Print...\tCtrl+P");
-  fileMenu->Append(wxID_PRINT_SETUP, "Print &Setup...");
-  fileMenu->Append(wxID_PREVIEW, "Print Pre&view");
+  fileMenu->Append(wxID_PRINT, _T("&Print...\tCtrl+P"));
+  fileMenu->Append(wxID_PRINT_SETUP, _T("Print &Setup..."));
+  fileMenu->Append(wxID_PREVIEW, _T("Print Pre&view"));
   fileMenu->AppendSeparator();
-  fileMenu->Append(wxID_EXIT, "E&xit");
+  fileMenu->Append(wxID_EXIT, _T("E&xit"));
 
@@ -147,7 +147,7 @@
   wxMenu *viewMenu = new wxMenu;
-  viewMenu->Append(ID_CS_SETTINGS, "&Settings...");
+  viewMenu->Append(ID_CS_SETTINGS, _T("&Settings..."));
 
   wxMenu *helpMenu = new wxMenu;
-  helpMenu->Append(wxID_HELP, "&Help Contents\tF1");
-  helpMenu->Append(ID_CS_ABOUT, "&About");
+  helpMenu->Append(wxID_HELP, _T("&Help Contents\tF1"));
+  helpMenu->Append(ID_CS_ABOUT, _T("&About"));
 
@@ -155,5 +155,5 @@
 
-  menuBar->Append(fileMenu, "&File");
-  menuBar->Append(viewMenu, "&View");
-  menuBar->Append(helpMenu, "&Help");
+  menuBar->Append(fileMenu, _T("&File"));
+  menuBar->Append(viewMenu, _T("&View"));
+  menuBar->Append(helpMenu, _T("&Help"));
 
@@ -163,3 +163,3 @@
   // Load the file history
-  wxConfig config("OGL Studio", "wxWindows");
+  wxConfig config(_T("OGL Studio"), _T("wxWindows"));
   m_docManager->FileHistoryLoad(config);
@@ -179,8 +179,8 @@
   m_shapeEditMenu = new ShapeEditMenu;
-  m_shapeEditMenu->Append(ID_CS_EDIT_PROPERTIES, "Edit properties");
+  m_shapeEditMenu->Append(ID_CS_EDIT_PROPERTIES, _T("Edit properties"));
   m_shapeEditMenu->AppendSeparator();
-  m_shapeEditMenu->Append(ID_CS_ROTATE_CLOCKWISE, "Rotate clockwise");
-  m_shapeEditMenu->Append(ID_CS_ROTATE_ANTICLOCKWISE, "Rotate anticlockwise");
+  m_shapeEditMenu->Append(ID_CS_ROTATE_CLOCKWISE, _T("Rotate clockwise"));
+  m_shapeEditMenu->Append(ID_CS_ROTATE_ANTICLOCKWISE, _T("Rotate anticlockwise"));
   m_shapeEditMenu->AppendSeparator();
-  m_shapeEditMenu->Append(ID_CS_CUT, "Cut");
+  m_shapeEditMenu->Append(ID_CS_CUT, _T("Cut"));
 
@@ -219,3 +219,3 @@
   //// Make a child frame
-  csMDIChildFrame *subframe = new csMDIChildFrame(doc, view, ((wxDocMDIParentFrame*)GetTopWindow()), -1, "Child Frame",
+  csMDIChildFrame *subframe = new csMDIChildFrame(doc, view, ((wxDocMDIParentFrame*)GetTopWindow()), -1, _T("Child Frame"),
         wxPoint(10, 10), wxSize(300, 300), wxDEFAULT_FRAME_STYLE);
@@ -223,6 +223,6 @@
 #ifdef __WXMSW__
-  subframe->SetIcon(wxString("chart"));
+  subframe->SetIcon(wxString(_T("chart")));
 #endif
 #ifdef __X__
-  subframe->SetIcon(wxIcon("doc.xbm"));
+  subframe->SetIcon(wxIcon(_T("doc.xbm")));
 #endif
@@ -232,15 +232,15 @@
 
-  fileMenu->Append(wxID_NEW, "&New...\tCtrl+N");
-  fileMenu->Append(wxID_OPEN, "&Open...\tCtrl+O");
-  fileMenu->Append(wxID_CLOSE, "&Close\tCtrl+W");
-  fileMenu->Append(wxID_SAVE, "&Save\tCtrl+S");
-  fileMenu->Append(wxID_SAVEAS, "Save &As...\tF12");
+  fileMenu->Append(wxID_NEW, _T("&New...\tCtrl+N"));
+  fileMenu->Append(wxID_OPEN, _T("&Open...\tCtrl+O"));
+  fileMenu->Append(wxID_CLOSE, _T("&Close\tCtrl+W"));
+  fileMenu->Append(wxID_SAVE, _T("&Save\tCtrl+S"));
+  fileMenu->Append(wxID_SAVEAS, _T("Save &As...\tF12"));
 
   fileMenu->AppendSeparator();
-  fileMenu->Append(wxID_PRINT, "&Print...\tCtrl+P");
-  fileMenu->Append(wxID_PRINT_SETUP, "Print &Setup...");
-  fileMenu->Append(wxID_PREVIEW, "Print Pre&view");
+  fileMenu->Append(wxID_PRINT, _T("&Print...\tCtrl+P"));
+  fileMenu->Append(wxID_PRINT_SETUP, _T("Print &Setup..."));
+  fileMenu->Append(wxID_PREVIEW, _T("Print Pre&view"));
 
   fileMenu->AppendSeparator();
-  fileMenu->Append(wxID_EXIT, "E&xit");
+  fileMenu->Append(wxID_EXIT, _T("E&xit"));
 
@@ -249,14 +249,14 @@
   editMenu = new wxMenu;
-  editMenu->Append(wxID_UNDO, "&Undo\tCtrl+Z");
-  editMenu->Append(wxID_REDO, "&Redo\tCtrl+Y");
+  editMenu->Append(wxID_UNDO, _T("&Undo\tCtrl+Z"));
+  editMenu->Append(wxID_REDO, _T("&Redo\tCtrl+Y"));
   editMenu->AppendSeparator();
-  editMenu->Append(wxID_CUT, "Cu&t\tCtrl+X");
-  editMenu->Append(wxID_COPY, "&Copy\tCtrl+C");
-  editMenu->Append(wxID_PASTE, "&Paste\tCtrl+V");
-  editMenu->Append(wxID_DUPLICATE, "&Duplicate\tCtrl+D");
+  editMenu->Append(wxID_CUT, _T("Cu&t\tCtrl+X"));
+  editMenu->Append(wxID_COPY, _T("&Copy\tCtrl+C"));
+  editMenu->Append(wxID_PASTE, _T("&Paste\tCtrl+V"));
+  editMenu->Append(wxID_DUPLICATE, _T("&Duplicate\tCtrl+D"));
   editMenu->AppendSeparator();
-  editMenu->Append(wxID_CLEAR, "Cle&ar\tDelete");
-  editMenu->Append(ID_CS_SELECT_ALL, "Select A&ll\tCtrl+A");
+  editMenu->Append(wxID_CLEAR, _T("Cle&ar\tDelete"));
+  editMenu->Append(ID_CS_SELECT_ALL, _T("Select A&ll\tCtrl+A"));
   editMenu->AppendSeparator();
-  editMenu->Append(ID_CS_EDIT_PROPERTIES, "Edit P&roperties...");
+  editMenu->Append(ID_CS_EDIT_PROPERTIES, _T("Edit P&roperties..."));
 
@@ -270,7 +270,7 @@
   wxMenu *viewMenu = new wxMenu;
-  viewMenu->Append(ID_CS_SETTINGS, "&Settings...");
+  viewMenu->Append(ID_CS_SETTINGS, _T("&Settings..."));
 
   wxMenu *helpMenu = new wxMenu;
-  helpMenu->Append(wxID_HELP, "&Help Contents\tF1");
-  helpMenu->Append(ID_CS_ABOUT, "&About");
+  helpMenu->Append(wxID_HELP, _T("&Help Contents\tF1"));
+  helpMenu->Append(ID_CS_ABOUT, _T("&About"));
 
@@ -278,6 +278,6 @@
 
-  menuBar->Append(fileMenu, "&File");
-  menuBar->Append(editMenu, "&Edit");
-  menuBar->Append(viewMenu, "&View");
-  menuBar->Append(helpMenu, "&Help");
+  menuBar->Append(fileMenu, _T("&File"));
+  menuBar->Append(editMenu, _T("&Edit"));
+  menuBar->Append(viewMenu, _T("&View"));
+  menuBar->Append(helpMenu, _T("&Help"));
 
@@ -298,3 +298,3 @@
 
-  wxColour bgColour("WHITE");
+  wxColour bgColour(_T("WHITE"));
   canvas->SetBackgroundColour(bgColour);
@@ -315,12 +315,12 @@
 #ifdef __WXMSW__
-    bitmaps[0] = new wxBitmap("new", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[1] = new wxBitmap("open", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[2] = new wxBitmap("save", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[3] = new wxBitmap("copy", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[4] = new wxBitmap("cut", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[5] = new wxBitmap("paste", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[6] = new wxBitmap("print", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[7] = new wxBitmap("help", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[8] = new wxBitmap("undo", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[9] = new wxBitmap("redo", wxBITMAP_TYPE_RESOURCE);
+    bitmaps[0] = new wxBitmap(_T("new"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[1] = new wxBitmap(_T("open"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[2] = new wxBitmap(_T("save"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[3] = new wxBitmap(_T("copy"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[4] = new wxBitmap(_T("cut"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[5] = new wxBitmap(_T("paste"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[6] = new wxBitmap(_T("print"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[7] = new wxBitmap(_T("help"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[8] = new wxBitmap(_T("undo"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[9] = new wxBitmap(_T("redo"), wxBITMAP_TYPE_RESOURCE);
 #elif defined(__WXGTK__) || defined(__WXX11__) || defined(__WXMOTIF__) || defined(__WXMAC__)
@@ -340,16 +340,16 @@
 
-  toolBar->AddTool(wxID_NEW, *bitmaps[0], wxNullBitmap, FALSE, -1, -1, NULL, "New file");
-  toolBar->AddTool(wxID_OPEN, *bitmaps[1], wxNullBitmap, FALSE, -1, -1, NULL, "Open file");
-  toolBar->AddTool(wxID_SAVE, *bitmaps[2], wxNullBitmap, FALSE, -1, -1, NULL, "Save file");
+  toolBar->AddTool(wxID_NEW, *bitmaps[0], wxNullBitmap, FALSE, -1, -1, NULL, _T("New file"));
+  toolBar->AddTool(wxID_OPEN, *bitmaps[1], wxNullBitmap, FALSE, -1, -1, NULL, _T("Open file"));
+  toolBar->AddTool(wxID_SAVE, *bitmaps[2], wxNullBitmap, FALSE, -1, -1, NULL, _T("Save file"));
   toolBar->AddSeparator();
-  toolBar->AddTool(wxID_PRINT, *bitmaps[6], wxNullBitmap, FALSE, -1, -1, NULL, "Print");
+  toolBar->AddTool(wxID_PRINT, *bitmaps[6], wxNullBitmap, FALSE, -1, -1, NULL, _T("Print"));
   toolBar->AddSeparator();
-  toolBar->AddTool(wxID_COPY, *bitmaps[3], wxNullBitmap, FALSE, -1, -1, NULL, "Copy");
-  toolBar->AddTool(wxID_CUT, *bitmaps[4], wxNullBitmap, FALSE, -1, -1, NULL, "Cut");
-  toolBar->AddTool(wxID_PASTE, *bitmaps[5], wxNullBitmap, FALSE, -1, -1, NULL, "Paste");
+  toolBar->AddTool(wxID_COPY, *bitmaps[3], wxNullBitmap, FALSE, -1, -1, NULL, _T("Copy"));
+  toolBar->AddTool(wxID_CUT, *bitmaps[4], wxNullBitmap, FALSE, -1, -1, NULL, _T("Cut"));
+  toolBar->AddTool(wxID_PASTE, *bitmaps[5], wxNullBitmap, FALSE, -1, -1, NULL, _T("Paste"));
   toolBar->AddSeparator();
-  toolBar->AddTool(wxID_UNDO, *bitmaps[8], wxNullBitmap, FALSE, -1, -1, NULL, "Undo");
-  toolBar->AddTool(wxID_REDO, *bitmaps[9], wxNullBitmap, FALSE, -1, -1, NULL, "Redo");
+  toolBar->AddTool(wxID_UNDO, *bitmaps[8], wxNullBitmap, FALSE, -1, -1, NULL, _T("Undo"));
+  toolBar->AddTool(wxID_REDO, *bitmaps[9], wxNullBitmap, FALSE, -1, -1, NULL, _T("Redo"));
   toolBar->AddSeparator();
-  toolBar->AddTool(wxID_HELP, *bitmaps[7], wxNullBitmap, FALSE, -1, -1, NULL, "Help");
+  toolBar->AddTool(wxID_HELP, *bitmaps[7], wxNullBitmap, FALSE, -1, -1, NULL, _T("Help"));
 
@@ -387,13 +387,13 @@
 #ifdef __WXMSW__
-    bitmaps[0] = new wxBitmap("alignl", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[1] = new wxBitmap("alignr", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[2] = new wxBitmap("alignt", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[3] = new wxBitmap("alignb", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[4] = new wxBitmap("horiz", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[5] = new wxBitmap("vert", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[6] = new wxBitmap("copysize", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[7] = new wxBitmap("linearrow", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[8] = new wxBitmap("newpoint", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[9] = new wxBitmap("cutpoint", wxBITMAP_TYPE_RESOURCE);
-    bitmaps[10] = new wxBitmap("straighten", wxBITMAP_TYPE_RESOURCE);
+    bitmaps[0] = new wxBitmap(_T("alignl"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[1] = new wxBitmap(_T("alignr"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[2] = new wxBitmap(_T("alignt"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[3] = new wxBitmap(_T("alignb"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[4] = new wxBitmap(_T("horiz"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[5] = new wxBitmap(_T("vert"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[6] = new wxBitmap(_T("copysize"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[7] = new wxBitmap(_T("linearrow"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[8] = new wxBitmap(_T("newpoint"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[9] = new wxBitmap(_T("cutpoint"), wxBITMAP_TYPE_RESOURCE);
+    bitmaps[10] = new wxBitmap(_T("straighten"), wxBITMAP_TYPE_RESOURCE);
 #elif defined(__WXGTK__) || defined(__WXX11__) || defined(__WXMOTIF__) || defined(__WXMAC__)
@@ -414,14 +414,14 @@
 
-    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_ALIGNL, *bitmaps[0], wxNullBitmap, FALSE, -1, -1, NULL, "Align left");
-    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_ALIGNR, *bitmaps[1], wxNullBitmap, FALSE, -1, -1, NULL, "Align right");
-    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_ALIGNT, *bitmaps[2], wxNullBitmap, FALSE, -1, -1, NULL, "Align top");
-    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_ALIGNB, *bitmaps[3], wxNullBitmap, FALSE, -1, -1, NULL, "Align bottom");
-    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_ALIGN_HORIZ, *bitmaps[4], wxNullBitmap, FALSE, -1, -1, NULL, "Align horizontally");
-    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_ALIGN_VERT, *bitmaps[5], wxNullBitmap, FALSE, -1, -1, NULL, "Align vertically");
-    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_COPY_SIZE, *bitmaps[6], wxNullBitmap, FALSE, -1, -1, NULL, "Copy size");
+    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_ALIGNL, *bitmaps[0], wxNullBitmap, FALSE, -1, -1, NULL, _T("Align left"));
+    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_ALIGNR, *bitmaps[1], wxNullBitmap, FALSE, -1, -1, NULL, _T("Align right"));
+    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_ALIGNT, *bitmaps[2], wxNullBitmap, FALSE, -1, -1, NULL, _T("Align top"));
+    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_ALIGNB, *bitmaps[3], wxNullBitmap, FALSE, -1, -1, NULL, _T("Align bottom"));
+    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_ALIGN_HORIZ, *bitmaps[4], wxNullBitmap, FALSE, -1, -1, NULL, _T("Align horizontally"));
+    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_ALIGN_VERT, *bitmaps[5], wxNullBitmap, FALSE, -1, -1, NULL, _T("Align vertically"));
+    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_COPY_SIZE, *bitmaps[6], wxNullBitmap, FALSE, -1, -1, NULL, _T("Copy size"));
     m_diagramToolBar->AddSeparator();
-    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_LINE_ARROW, *bitmaps[7], wxNullBitmap, TRUE, -1, -1, NULL, "Toggle arrow");
-    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_NEW_POINT, *bitmaps[8], wxNullBitmap, FALSE, -1, -1, NULL, "New line point");
-    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_CUT_POINT, *bitmaps[9], wxNullBitmap, FALSE, -1, -1, NULL, "Cut line point");
-    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_STRAIGHTEN, *bitmaps[10], wxNullBitmap, FALSE, -1, -1, NULL, "Straighten lines");
+    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_LINE_ARROW, *bitmaps[7], wxNullBitmap, TRUE, -1, -1, NULL, _T("Toggle arrow"));
+    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_NEW_POINT, *bitmaps[8], wxNullBitmap, FALSE, -1, -1, NULL, _T("New line point"));
+    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_CUT_POINT, *bitmaps[9], wxNullBitmap, FALSE, -1, -1, NULL, _T("Cut line point"));
+    m_diagramToolBar->AddTool(DIAGRAM_TOOLBAR_STRAIGHTEN, *bitmaps[10], wxNullBitmap, FALSE, -1, -1, NULL, _T("Straighten lines"));
 
@@ -438,3 +438,3 @@
     {
-        pointSizes[i-1].Printf("%d", i);
+        pointSizes[i-1].Printf(_T("%d"), i);
     }
@@ -455,3 +455,3 @@
     m_pointSizeComboBox = new wxComboBox(m_diagramToolBar, ID_WINDOW_POINT_SIZE_COMBOBOX,
-        "", wxPoint(controlX, 1), wxSize(pointSizeW, pointSizeH), maxPointSize, pointSizes);
+        wxEmptyString, wxPoint(controlX, 1), wxSize(pointSizeW, pointSizeH), maxPointSize, pointSizes);
     delete[] pointSizes;
@@ -472,3 +472,3 @@
     {
-        zoomStrings[noStrings - i - 1].Printf("%d%%", (i*increment + minZoom));
+        zoomStrings[noStrings - i - 1].Printf(_T("%d%%"), (i*increment + minZoom));
     }
@@ -478,3 +478,3 @@
     m_zoomComboBox = new wxComboBox(m_diagramToolBar, ID_WINDOW_ZOOM_COMBOBOX,
-        "", wxPoint(controlX, 1), wxSize(zoomW, zoomH), noStrings, zoomStrings);
+        wxEmptyString, wxPoint(controlX, 1), wxSize(zoomW, zoomH), noStrings, zoomStrings);
     delete[] zoomStrings;
@@ -495,10 +495,10 @@
 {
-    wxConfig config("OGL Studio", "wxWindows");
+    wxConfig config(_T("OGL Studio"), _T("wxWindows"));
 
-    config.Read("mainX", & m_mainFramePos.x);
-    config.Read("mainY", & m_mainFramePos.y);
-    config.Read("mainWidth", & m_mainFrameSize.x);
-    config.Read("mainHeight", & m_mainFrameSize.y);
-    config.Read("gridStyle", & m_gridStyle);
-    config.Read("gridSpacing", & m_gridSpacing);
+    config.Read(_T("mainX"), & m_mainFramePos.x);
+    config.Read(_T("mainY"), & m_mainFramePos.y);
+    config.Read(_T("mainWidth"), & m_mainFrameSize.x);
+    config.Read(_T("mainHeight"), & m_mainFrameSize.y);
+    config.Read(_T("gridStyle"), & m_gridStyle);
+    config.Read(_T("gridSpacing"), & m_gridSpacing);
 
@@ -509,10 +509,10 @@
 {
-    wxConfig config("OGL Studio", "wxWindows");
+    wxConfig config(_T("OGL Studio"), _T("wxWindows"));
 
-    config.Write("mainX", (long) m_mainFramePos.x);
-    config.Write("mainY", (long) m_mainFramePos.y);
-    config.Write("mainWidth", (long) m_mainFrameSize.x);
-    config.Write("mainHeight", (long) m_mainFrameSize.y);
-    config.Write("gridStyle", (long) m_gridStyle);
-    config.Write("gridSpacing", (long) m_gridSpacing);
+    config.Write(_T("mainX"), (long) m_mainFramePos.x);
+    config.Write(_T("mainY"), (long) m_mainFramePos.y);
+    config.Write(_T("mainWidth"), (long) m_mainFrameSize.x);
+    config.Write(_T("mainHeight"), (long) m_mainFrameSize.y);
+    config.Write(_T("gridStyle"), (long) m_gridStyle);
+    config.Write(_T("gridSpacing"), (long) m_gridSpacing);
 
diff -bu1 -r wxWindows/contrib/samples/ogl/studio/symbols.cpp wxWin/contrib/samples/ogl/studio/symbols.cpp
--- wxWindows/contrib/samples/ogl/studio/symbols.cpp	2003-03-31 12:23:30.000000000 +0200
+++ wxWin/contrib/samples/ogl/studio/symbols.cpp	2003-08-20 18:26:10.000000000 +0200
@@ -122,5 +122,5 @@
     shape->AssignNewIds();
-    shape->SetEventHandler(new csEvtHandler(shape, shape, wxString("")));
+    shape->SetEventHandler(new csEvtHandler(shape, shape, wxEmptyString));
 
-    m_symbolDatabase->AddSymbol(new csSymbol("Circle", shape));
+    m_symbolDatabase->AddSymbol(new csSymbol(_T("Circle"), shape));
 
@@ -128,5 +128,5 @@
     shape->AssignNewIds();
-    shape->SetEventHandler(new csEvtHandler(shape, shape, wxString("")));
+    shape->SetEventHandler(new csEvtHandler(shape, shape, wxEmptyString));
 
-    m_symbolDatabase->AddSymbol(new csSymbol("Circle shadow", shape));
+    m_symbolDatabase->AddSymbol(new csSymbol(_T("Circle shadow"), shape));
 
@@ -134,5 +134,5 @@
     shape->AssignNewIds();
-    shape->SetEventHandler(new csEvtHandler(shape, shape, wxString("")));
+    shape->SetEventHandler(new csEvtHandler(shape, shape, wxEmptyString));
 
-    m_symbolDatabase->AddSymbol(new csSymbol("Thin Rectangle", shape));
+    m_symbolDatabase->AddSymbol(new csSymbol(_T("Thin Rectangle"), shape));
 
@@ -140,5 +140,5 @@
     shape->AssignNewIds();
-    shape->SetEventHandler(new csEvtHandler(shape, shape, wxString("")));
+    shape->SetEventHandler(new csEvtHandler(shape, shape, wxEmptyString));
 
-    m_symbolDatabase->AddSymbol(new csSymbol("Wide Rectangle", shape));
+    m_symbolDatabase->AddSymbol(new csSymbol(_T("Wide Rectangle"), shape));
 
@@ -146,5 +146,5 @@
     shape->AssignNewIds();
-    shape->SetEventHandler(new csEvtHandler(shape, shape, wxString("")));
+    shape->SetEventHandler(new csEvtHandler(shape, shape, wxEmptyString));
 
-    m_symbolDatabase->AddSymbol(new csSymbol("SemiCircle", shape));
+    m_symbolDatabase->AddSymbol(new csSymbol(_T("SemiCircle"), shape));
 
@@ -152,5 +152,5 @@
     shape->AssignNewIds();
-    shape->SetEventHandler(new csEvtHandler(shape, shape, wxString("")));
+    shape->SetEventHandler(new csEvtHandler(shape, shape, wxEmptyString));
 
-    m_symbolDatabase->AddSymbol(new csSymbol("Triangle", shape));
+    m_symbolDatabase->AddSymbol(new csSymbol(_T("Triangle"), shape));
 
@@ -158,5 +158,5 @@
     shape->AssignNewIds();
-    shape->SetEventHandler(new csEvtHandler(shape, shape, wxString("")));
+    shape->SetEventHandler(new csEvtHandler(shape, shape, wxEmptyString));
 
-    m_symbolDatabase->AddSymbol(new csSymbol("Octagon", shape));
+    m_symbolDatabase->AddSymbol(new csSymbol(_T("Octagon"), shape));
 
@@ -164,5 +164,5 @@
     shape->AssignNewIds();
-    shape->SetEventHandler(new csEvtHandler(shape, shape, wxString("")));
+    shape->SetEventHandler(new csEvtHandler(shape, shape, wxEmptyString));
 
-    m_symbolDatabase->AddSymbol(new csSymbol("Group", shape));
+    m_symbolDatabase->AddSymbol(new csSymbol(_T("Group"), shape));
 }
diff -bu1 -r wxWindows/contrib/samples/ogl/studio/view.cpp wxWin/contrib/samples/ogl/studio/view.cpp
--- wxWindows/contrib/samples/ogl/studio/view.cpp	2003-08-14 20:02:22.000000000 +0200
+++ wxWin/contrib/samples/ogl/studio/view.cpp	2003-08-20 18:33:26.000000000 +0200
@@ -89,3 +89,3 @@
 // windows for displaying the view.
-bool csDiagramView::OnCreate(wxDocument *doc, long flags)
+bool csDiagramView::OnCreate(wxDocument *doc, long WXUNUSED(flags))
 {
@@ -143,3 +143,3 @@
 // as well as drawing on the screen.
-void csDiagramView::OnDraw(wxDC *dc)
+void csDiagramView::OnDraw(wxDC *WXUNUSED(dc))
 {
@@ -147,3 +147,3 @@
 
-void csDiagramView::OnUpdate(wxView *sender, wxObject *hint)
+void csDiagramView::OnUpdate(wxView *WXUNUSED(sender), wxObject *WXUNUSED(hint))
 {
@@ -192,3 +192,3 @@
 
-void csDiagramView::OnSelectAll(wxCommandEvent& event)
+void csDiagramView::OnSelectAll(wxCommandEvent& WXUNUSED(event))
 {
@@ -242,3 +242,3 @@
 
-void csDiagramView::OnCut(wxCommandEvent& event)
+void csDiagramView::OnCut(wxCommandEvent& WXUNUSED(event))
 {
@@ -255,3 +255,3 @@
 
-void csDiagramView::OnClear(wxCommandEvent& event)
+void csDiagramView::OnClear(wxCommandEvent& WXUNUSED(event))
 {
@@ -263,3 +263,3 @@
 
-void csDiagramView::OnCopy(wxCommandEvent& event)
+void csDiagramView::OnCopy(wxCommandEvent& WXUNUSED(event))
 {
@@ -277,3 +277,3 @@
 
-void csDiagramView::OnPaste(wxCommandEvent& event)
+void csDiagramView::OnPaste(wxCommandEvent& WXUNUSED(event))
 {
@@ -284,3 +284,3 @@
 
-void csDiagramView::OnDuplicate(wxCommandEvent& event)
+void csDiagramView::OnDuplicate(wxCommandEvent& WXUNUSED(event))
 {
@@ -313,3 +313,3 @@
 {
-    csDiagramDocument *doc = (csDiagramDocument *)GetDocument();
+    /* csDiagramDocument *doc = */ (csDiagramDocument *)GetDocument();
 
@@ -331,3 +331,3 @@
     {
-        csDiagramCommand* cmd = new csDiagramCommand("Cut", doc);
+        csDiagramCommand* cmd = new csDiagramCommand(_T("Cut"), doc);
 
@@ -381,3 +381,3 @@
 
-void csDiagramView::OnChangeBackgroundColour(wxCommandEvent& event)
+void csDiagramView::OnChangeBackgroundColour(wxCommandEvent& WXUNUSED(event))
 {
@@ -410,3 +410,3 @@
 
-        csDiagramCommand* cmd = new csDiagramCommand("Change colour", doc);
+        csDiagramCommand* cmd = new csDiagramCommand(_T("Change colour"), doc);
 
@@ -428,3 +428,3 @@
 
-void csDiagramView::OnEditProperties(wxCommandEvent& event)
+void csDiagramView::OnEditProperties(wxCommandEvent& WXUNUSED(event))
 {
@@ -461,3 +461,4 @@
     wxString str(combo->GetValue());
-    int newPointSize = atoi((const char*) str);
+    long newPointSize;
+    str.ToLong( &newPointSize );
 
@@ -478,3 +479,3 @@
     {
-        csDiagramCommand* cmd = new csDiagramCommand("Point size", doc);
+        csDiagramCommand* cmd = new csDiagramCommand(_T("Point size"), doc);
 
@@ -562,3 +563,3 @@
 
-void csDiagramView::OnToggleArrowTool(wxCommandEvent& event)
+void csDiagramView::OnToggleArrowTool(wxCommandEvent& WXUNUSED(event))
 {
@@ -569,5 +570,5 @@
     if (state)
-        stateName = "Arrow on";
+        stateName = _T("Arrow on");
     else
-        stateName = "Arrow off";
+        stateName = _T("Arrow off");
 
@@ -592,3 +593,3 @@
                     newShape = (wxLineShape*) theShape->CreateNewCopy();
-                    newShape->AddArrow(ARROW_ARROW, ARROW_POSITION_MIDDLE, 10.0, 0.0, "Normal arrowhead");
+                    newShape->AddArrow(ARROW_ARROW, ARROW_POSITION_MIDDLE, 10.0, 0.0, _T("Normal arrowhead"));
                 }
@@ -667,3 +668,3 @@
     csDiagramDocument *doc = (csDiagramDocument *)GetDocument();
-    csDiagramCommand* cmd = new csDiagramCommand("Align", doc);
+    csDiagramCommand* cmd = new csDiagramCommand(_T("Align"), doc);
 
@@ -683,4 +684,4 @@
         {
-            double x1 = shape->GetX();
-            double y1 = shape->GetY();
+            /* double x1 = */ shape->GetX();
+            /* double y1 = */ shape->GetY();
             double width1, height1;
@@ -747,6 +748,6 @@
 
-void csDiagramView::OnNewLinePoint(wxCommandEvent& event)
+void csDiagramView::OnNewLinePoint(wxCommandEvent& WXUNUSED(event))
 {
     csDiagramDocument *doc = (csDiagramDocument *)GetDocument();
-    csDiagramCommand* cmd = new csDiagramCommand("New line point", doc);
+    csDiagramCommand* cmd = new csDiagramCommand(_T("New line point"), doc);
 
@@ -768,6 +769,6 @@
 
-void csDiagramView::OnCutLinePoint(wxCommandEvent& event)
+void csDiagramView::OnCutLinePoint(wxCommandEvent& WXUNUSED(event))
 {
     csDiagramDocument *doc = (csDiagramDocument *)GetDocument();
-    csDiagramCommand* cmd = new csDiagramCommand("Cut line point", doc);
+    csDiagramCommand* cmd = new csDiagramCommand(_T("Cut line point"), doc);
 
@@ -789,6 +790,6 @@
 
-void csDiagramView::OnStraightenLines(wxCommandEvent& event)
+void csDiagramView::OnStraightenLines(wxCommandEvent& WXUNUSED(event))
 {
     csDiagramDocument *doc = (csDiagramDocument *)GetDocument();
-    csDiagramCommand* cmd = new csDiagramCommand("Straighten lines", doc);
+    csDiagramCommand* cmd = new csDiagramCommand(_T("Straighten lines"), doc);
 
@@ -863,3 +864,3 @@
 
-void csCanvas::OnLeftClick(double x, double y, int keys)
+void csCanvas::OnLeftClick(double x, double y, int WXUNUSED(keys))
 {
@@ -883,4 +884,4 @@
 
-        dialog->SetShapeLabel("");
-        dialog->SetTitle("New text box");
+        dialog->SetShapeLabel( wxEmptyString );
+        dialog->SetTitle(_T("New text box"));
         if (dialog->ShowModal() == wxID_CANCEL)
@@ -900,3 +901,4 @@
         wxString str(comboBox->GetValue());
-        int pointSize = atoi((const char*) str);
+        long pointSize;
+        str.ToLong( &pointSize );
 
@@ -914,3 +916,3 @@
 
-        csDiagramCommand* cmd = new csDiagramCommand("Text box",
+        csDiagramCommand* cmd = new csDiagramCommand(_T("Text box"),
             (csDiagramDocument *)GetView()->GetDocument(),
@@ -931,3 +933,4 @@
         wxString str(comboBox->GetValue());
-        int pointSize = atoi((const char*) str);
+        long pointSize;
+        str.ToLong( &pointSize );
 
@@ -955,3 +958,3 @@
 
-void csCanvas::OnRightClick(double x, double y, int keys)
+void csCanvas::OnRightClick(double WXUNUSED(x), double WXUNUSED(y), int WXUNUSED(keys))
 {
@@ -962,3 +965,3 @@
 
-void csCanvas::OnDragLeft(bool draw, double x, double y, int keys)
+void csCanvas::OnDragLeft(bool WXUNUSED(draw), double x, double y, int WXUNUSED(keys))
 {
@@ -971,3 +974,3 @@
 
-void csCanvas::OnBeginDragLeft(double x, double y, int keys)
+void csCanvas::OnBeginDragLeft(double x, double y, int WXUNUSED(keys))
 {
@@ -984,3 +987,3 @@
 
-void csCanvas::OnEndDragLeft(double x, double y, int keys)
+void csCanvas::OnEndDragLeft(double x, double y, int WXUNUSED(keys))
 {
@@ -1017,3 +1020,3 @@
 
-void csCanvas::OnDragRight(bool draw, double x, double y, int keys)
+void csCanvas::OnDragRight(bool WXUNUSED(draw), double WXUNUSED(x), double WXUNUSED(y), int WXUNUSED(keys))
 {
@@ -1021,3 +1024,3 @@
 
-void csCanvas::OnBeginDragRight(double x, double y, int keys)
+void csCanvas::OnBeginDragRight(double WXUNUSED(x), double WXUNUSED(y), int WXUNUSED(keys))
 {
@@ -1025,3 +1028,3 @@
 
-void csCanvas::OnEndDragRight(double x, double y, int keys)
+void csCanvas::OnEndDragRight(double WXUNUSED(x), double WXUNUSED(y), int WXUNUSED(keys))
 {

 	  	 
