Only in wxWin/contrib/samples/ogl/ogledit: bcc_mswd
Only in wxWin/contrib/samples/ogl/ogledit: bcc_mswud
diff -bu1 -r wxWindows/contrib/samples/ogl/ogledit/doc.cpp wxWin/contrib/samples/ogl/ogledit/doc.cpp
--- wxWindows/contrib/samples/ogl/ogledit/doc.cpp	2003-07-22 21:16:45.000000000 +0200
+++ wxWin/contrib/samples/ogl/ogledit/doc.cpp	2003-08-20 20:06:00.000000000 +0200
@@ -93,3 +93,3 @@
   char buf[400];
-  (void) wxGetTempFileName("diag", buf);
+  (void) wxGetTempFileName(_T("diag"), buf);
 
@@ -112,3 +112,3 @@
   char buf[400];
-  (void) wxGetTempFileName("diag", buf);
+  (void) wxGetTempFileName(_T("diag"), buf);
 
@@ -130,3 +130,3 @@
 
-DiagramCommand::DiagramCommand(char *name, int command, DiagramDocument *ddoc, wxClassInfo *info, double xx, double yy,
+DiagramCommand::DiagramCommand(const wxString& name, int command, DiagramDocument *ddoc, wxClassInfo *info, double xx, double yy,
   bool sel, wxShape *theShape, wxShape *fs, wxShape *ts):
@@ -148,3 +148,3 @@
 
-DiagramCommand::DiagramCommand(char *name, int command, DiagramDocument *ddoc, wxBrush *backgroundColour, wxShape *theShape):
+DiagramCommand::DiagramCommand(const wxString& name, int command, DiagramDocument *ddoc, wxBrush *backgroundColour, wxShape *theShape):
   wxCommand(TRUE, name)
@@ -165,3 +165,3 @@
 
-DiagramCommand::DiagramCommand(char *name, int command, DiagramDocument *ddoc, const wxString& lab, wxShape *theShape):
+DiagramCommand::DiagramCommand(const wxString& name, int command, DiagramDocument *ddoc, const wxString& lab, wxShape *theShape):
   wxCommand(TRUE, name)
@@ -231,3 +231,3 @@
         theShape->AssignNewIds();
-        theShape->SetEventHandler(new MyEvtHandler(theShape, theShape, wxString("")));
+        theShape->SetEventHandler(new MyEvtHandler(theShape, theShape, wxEmptyString));
         theShape->SetCentreResize(FALSE);
@@ -262,3 +262,3 @@
         theShape->AssignNewIds();
-        theShape->SetEventHandler(new MyEvtHandler(theShape, theShape, wxString("")));
+        theShape->SetEventHandler(new MyEvtHandler(theShape, theShape, wxEmptyString));
         theShape->SetPen(wxBLACK_PEN);
@@ -271,3 +271,3 @@
         lineShape->MakeLineControlPoints(2);
-        lineShape->AddArrow(ARROW_ARROW, ARROW_POSITION_END, 10.0, 0.0, "Normal arrowhead");
+        lineShape->AddArrow(ARROW_ARROW, ARROW_POSITION_END, 10.0, 0.0, _T("Normal arrowhead"));
       }
@@ -325,3 +325,3 @@
 
-        shape->FormatText(dc, (char*) (const char*) myHandler->label);
+        shape->FormatText(dc, /* (char*) (const char*) */ myHandler->label);
         shape->Draw(dc);
@@ -410,3 +410,3 @@
 
-        shape->FormatText(dc, (char*) (const char*) myHandler->label);
+        shape->FormatText(dc, /* (char*) (const char*) */ myHandler->label);
         shape->Draw(dc);
@@ -430,3 +430,3 @@
     wxLineShape *line = (wxLineShape *)node->Data();
-    doc->GetCommandProcessor()->Submit(new DiagramCommand("Cut", OGLEDIT_CUT, doc, NULL, 0.0, 0.0, line->Selected(), line));
+    doc->GetCommandProcessor()->Submit(new DiagramCommand(_T("Cut"), OGLEDIT_CUT, doc, NULL, 0.0, 0.0, line->Selected(), line));
     
@@ -440,3 +440,3 @@
  
-void MyEvtHandler::OnLeftClick(double x, double y, int keys, int attachment)
+void MyEvtHandler::OnLeftClick(double WXUNUSED(x), double WXUNUSED(y), int keys, int WXUNUSED(attachment))
 {
@@ -490,3 +490,3 @@
 
-void MyEvtHandler::OnBeginDragRight(double x, double y, int keys, int attachment)
+void MyEvtHandler::OnBeginDragRight(double x, double y, int WXUNUSED(keys), int attachment)
 {
@@ -508,3 +508,3 @@
 
-void MyEvtHandler::OnDragRight(bool draw, double x, double y, int keys, int attachment)
+void MyEvtHandler::OnDragRight(bool WXUNUSED(draw), double x, double y, int WXUNUSED(keys), int attachment)
 {
@@ -524,3 +524,3 @@
 
-void MyEvtHandler::OnEndDragRight(double x, double y, int keys, int attachment)
+void MyEvtHandler::OnEndDragRight(double x, double y, int WXUNUSED(keys), int WXUNUSED(attachment))
 {
@@ -536,3 +536,3 @@
     canvas->view->GetDocument()->GetCommandProcessor()->Submit(
-      new DiagramCommand("wxLineShape", OGLEDIT_ADD_LINE, (DiagramDocument *)canvas->view->GetDocument(), CLASSINFO(wxLineShape),
+      new DiagramCommand(_T("wxLineShape"), OGLEDIT_ADD_LINE, (DiagramDocument *)canvas->view->GetDocument(), CLASSINFO(wxLineShape),
       0.0, 0.0, FALSE, NULL, GetShape(), otherShape));
@@ -541,3 +541,3 @@
 
-void MyEvtHandler::OnEndSize(double x, double y)
+void MyEvtHandler::OnEndSize(double WXUNUSED(x), double WXUNUSED(y))
 {
@@ -546,3 +546,3 @@
 
-  GetShape()->FormatText(dc, (char*) (const char*) label);
+  GetShape()->FormatText(dc, /* (char*) (const char*) */ label);
 }
@@ -559,3 +559,3 @@
   MyEvtHandler *handler = (MyEvtHandler *)shape.GetEventHandler();
-  expr.AddAttributeValueString("label", handler->label);
+  expr.AddAttributeValueString(_T("label"), handler->label);
   return TRUE;
diff -bu1 -r wxWindows/contrib/samples/ogl/ogledit/doc.h wxWin/contrib/samples/ogl/ogledit/doc.h
--- wxWindows/contrib/samples/ogl/ogledit/doc.h	2003-07-22 21:16:45.000000000 +0200
+++ wxWin/contrib/samples/ogl/ogledit/doc.h	2003-08-20 18:07:39.000000000 +0200
@@ -78,3 +78,3 @@
   wxString label;
-  MyEvtHandler(wxShapeEvtHandler *prev = NULL, wxShape *shape = NULL, const wxString& lab = ""):wxShapeEvtHandler(prev, shape)
+  MyEvtHandler(wxShapeEvtHandler *prev = NULL, wxShape *shape = NULL, const wxString& lab = wxEmptyString):wxShapeEvtHandler(prev, shape)
   {
@@ -165,3 +165,3 @@
   // Multi-purpose constructor for creating, deleting shapes
-  DiagramCommand(char *name, int cmd, DiagramDocument *ddoc, wxClassInfo *shapeInfo = NULL,
+  DiagramCommand(const wxString& name, int cmd, DiagramDocument *ddoc, wxClassInfo *shapeInfo = NULL,
      double x = 0.0, double y = 0.0, bool sel = FALSE, wxShape *theShape = NULL, wxShape *fs = NULL, wxShape *ts = NULL);
@@ -169,4 +169,4 @@
   // Property-changing command constructors
-  DiagramCommand(char *name, int cmd, DiagramDocument *ddoc, wxBrush *backgroundColour, wxShape *theShape);
-  DiagramCommand(char *name, int cmd, DiagramDocument *ddoc, const wxString& lab, wxShape *theShape);
+  DiagramCommand(const wxString& name, int cmd, DiagramDocument *ddoc, wxBrush *backgroundColour, wxShape *theShape);
+  DiagramCommand(const wxString& name, int cmd, DiagramDocument *ddoc, const wxString& lab, wxShape *theShape);
 
diff -bu1 -r wxWindows/contrib/samples/ogl/ogledit/ogledit.cpp wxWin/contrib/samples/ogl/ogledit/ogledit.cpp
--- wxWindows/contrib/samples/ogl/ogledit/ogledit.cpp	2002-03-21 10:32:03.000000000 +0100
+++ wxWin/contrib/samples/ogl/ogledit/ogledit.cpp	2003-08-20 18:23:46.000000000 +0200
@@ -59,3 +59,3 @@
   //// Create a template relating drawing documents to their views
-  (void) new wxDocTemplate(myDocManager, "Diagram", "*.dia", "", "dia", "Diagram Doc", "Diagram View",
+  (void) new wxDocTemplate(myDocManager, _T("Diagram"), _T("*.dia"), wxEmptyString, _T("dia"), _T("Diagram Doc"), _T("Diagram View"),
           CLASSINFO(DiagramDocument), CLASSINFO(DiagramView));
@@ -67,3 +67,3 @@
   //// Create the main frame window
-  frame = new MyFrame(myDocManager, NULL, "OGLEdit Demo", wxPoint(0, 0), wxSize(500, 400), wxDEFAULT_FRAME_STYLE);
+  frame = new MyFrame(myDocManager, NULL, _T("OGLEdit Demo"), wxPoint(0, 0), wxSize(500, 400), wxDEFAULT_FRAME_STYLE);
 
@@ -76,21 +76,21 @@
 
-  file_menu->Append(wxID_NEW, "&New...");
-  file_menu->Append(wxID_OPEN, "&Open...");
+  file_menu->Append(wxID_NEW, _T("&New..."));
+  file_menu->Append(wxID_OPEN, _T("&Open..."));
 
-  file_menu->Append(wxID_CLOSE, "&Close");
-  file_menu->Append(wxID_SAVE, "&Save");
-  file_menu->Append(wxID_SAVEAS, "Save &As...");
+  file_menu->Append(wxID_CLOSE, _T("&Close"));
+  file_menu->Append(wxID_SAVE, _T("&Save"));
+  file_menu->Append(wxID_SAVEAS, _T("Save &As..."));
   file_menu->AppendSeparator();
-  file_menu->Append(wxID_PRINT, "&Print...");
-  file_menu->Append(wxID_PRINT_SETUP, "Print &Setup...");
-  file_menu->Append(wxID_PREVIEW, "Print Pre&view");
+  file_menu->Append(wxID_PRINT, _T("&Print..."));
+  file_menu->Append(wxID_PRINT_SETUP, _T("Print &Setup..."));
+  file_menu->Append(wxID_PREVIEW, _T("Print Pre&view"));
 
   edit_menu = new wxMenu;
-  edit_menu->Append(wxID_UNDO, "&Undo");
-  edit_menu->Append(wxID_REDO, "&Redo");
+  edit_menu->Append(wxID_UNDO, _T("&Undo"));
+  edit_menu->Append(wxID_REDO, _T("&Redo"));
   edit_menu->AppendSeparator();
-  edit_menu->Append(OGLEDIT_CUT, "&Cut");
+  edit_menu->Append(OGLEDIT_CUT, _T("&Cut"));
   edit_menu->AppendSeparator();
-  edit_menu->Append(OGLEDIT_CHANGE_BACKGROUND_COLOUR, "Change &background colour");
-  edit_menu->Append(OGLEDIT_EDIT_LABEL, "Edit &label");
+  edit_menu->Append(OGLEDIT_CHANGE_BACKGROUND_COLOUR, _T("Change &background colour"));
+  edit_menu->Append(OGLEDIT_EDIT_LABEL, _T("Edit &label"));
 
@@ -99,3 +99,3 @@
   file_menu->AppendSeparator();
-  file_menu->Append(wxID_EXIT, "E&xit");
+  file_menu->Append(wxID_EXIT, _T("E&xit"));
 
@@ -105,3 +105,3 @@
   wxMenu *help_menu = new wxMenu;
-  help_menu->Append(OGLEDIT_ABOUT, "&About");
+  help_menu->Append(OGLEDIT_ABOUT, _T("&About"));
 
@@ -109,6 +109,6 @@
 
-  menu_bar->Append(file_menu, "&File");
+  menu_bar->Append(file_menu, _T("&File"));
   if (edit_menu)
-    menu_bar->Append(edit_menu, "&Edit");
-  menu_bar->Append(help_menu, "&Help");
+    menu_bar->Append(edit_menu, _T("&Edit"));
+  menu_bar->Append(help_menu, _T("&Help"));
 
@@ -116,3 +116,3 @@
   frame->palette = wxGetApp().CreatePalette(frame);
-  myDocManager->CreateDocument("", wxDOC_NEW);
+  myDocManager->CreateDocument(wxEmptyString, wxDOC_NEW);
 
@@ -157,3 +157,3 @@
 
-void MyFrame::OnSize(wxSizeEvent& event)
+void MyFrame::OnSize(wxSizeEvent& WXUNUSED(event))
 {
@@ -187,5 +187,5 @@
 // Intercept menu commands
-void MyFrame::OnAbout(wxCommandEvent& event)
+void MyFrame::OnAbout(wxCommandEvent& WXUNUSED(event))
 {
-      (void)wxMessageBox("OGLEdit Demo\nTo draw a shape, select a shape on the toolbar and left-click on the canvas.\nTo draw a line, right-drag between shapes.\nFor further details, see the OGL manual.\n (c) Julian Smart 1996", "About OGLEdit");
+      (void)wxMessageBox(_T("OGLEdit Demo\nTo draw a shape, select a shape on the toolbar and left-click on the canvas.\nTo draw a line, right-drag between shapes.\nFor further details, see the OGL manual.\n (c) Julian Smart 1996"), _T("About OGLEdit"));
 }
diff -bu1 -r wxWindows/contrib/samples/ogl/ogledit/palette.cpp wxWin/contrib/samples/ogl/ogledit/palette.cpp
--- wxWindows/contrib/samples/ogl/ogledit/palette.cpp	2002-03-21 10:32:03.000000000 +0100
+++ wxWin/contrib/samples/ogl/ogledit/palette.cpp	2003-08-20 18:24:01.000000000 +0200
@@ -77,3 +77,3 @@
 
-void EditorToolPalette::OnMouseEnter(int toolIndex)
+void EditorToolPalette::OnMouseEnter(int WXUNUSED(toolIndex))
 {
@@ -90,7 +90,7 @@
 #ifdef __WXMSW__
-  wxBitmap PaletteTool1("TOOL1");
-  wxBitmap PaletteTool2("TOOL2");
-  wxBitmap PaletteTool3("TOOL3");
-  wxBitmap PaletteTool4("TOOL4");
-  wxBitmap PaletteArrow("ARROWTOOL");
+  wxBitmap PaletteTool1(_T("TOOL1"));
+  wxBitmap PaletteTool2(_T("TOOL2"));
+  wxBitmap PaletteTool3(_T("TOOL3"));
+  wxBitmap PaletteTool4(_T("TOOL4"));
+  wxBitmap PaletteArrow(_T("ARROWTOOL"));
 #elif defined(__WXGTK__) || defined(__WXX11__) || defined(__WXMOTIF__) || defined(__WXMAC__)
@@ -108,7 +108,7 @@
 
-  palette->AddTool(PALETTE_ARROW, PaletteArrow, wxNullBitmap, TRUE, 0, -1, NULL, "Pointer");
-  palette->AddTool(PALETTE_TOOL1, PaletteTool1, wxNullBitmap, TRUE, 0, -1, NULL, "Tool 1");
-  palette->AddTool(PALETTE_TOOL2, PaletteTool2, wxNullBitmap, TRUE, 0, -1, NULL, "Tool 2");
-  palette->AddTool(PALETTE_TOOL3, PaletteTool3, wxNullBitmap, TRUE, 0, -1, NULL, "Tool 3");
-  palette->AddTool(PALETTE_TOOL4, PaletteTool4, wxNullBitmap, TRUE, 0, -1, NULL, "Tool 4");
+  palette->AddTool(PALETTE_ARROW, PaletteArrow, wxNullBitmap, TRUE, 0, -1, NULL, _T("Pointer"));
+  palette->AddTool(PALETTE_TOOL1, PaletteTool1, wxNullBitmap, TRUE, 0, -1, NULL, _T("Tool 1"));
+  palette->AddTool(PALETTE_TOOL2, PaletteTool2, wxNullBitmap, TRUE, 0, -1, NULL, _T("Tool 2"));
+  palette->AddTool(PALETTE_TOOL3, PaletteTool3, wxNullBitmap, TRUE, 0, -1, NULL, _T("Tool 3"));
+  palette->AddTool(PALETTE_TOOL4, PaletteTool4, wxNullBitmap, TRUE, 0, -1, NULL, _T("Tool 4"));
 
diff -bu1 -r wxWindows/contrib/samples/ogl/ogledit/palette.h wxWin/contrib/samples/ogl/ogledit/palette.h
--- wxWindows/contrib/samples/ogl/ogledit/palette.h	2003-08-18 08:14:34.000000000 +0200
+++ wxWin/contrib/samples/ogl/ogledit/palette.h	2003-08-20 13:10:35.000000000 +0200
@@ -31,7 +31,10 @@
 // So use a simple toolbar at present.
-#if 0 // def __WXGTK__
+// ABX: Simple toolbar is not available in default compilation
+//      so I use wxToolBar anyway
+// #if 0 // def __WXGTK__
+// #define TOOLPALETTECLASS    wxToolBar
+// #else
+// #define TOOLPALETTECLASS    wxToolBarSimple
+// #endif
 #define TOOLPALETTECLASS    wxToolBar
-#else
-#define TOOLPALETTECLASS    wxToolBarSimple
-#endif
 
diff -bu1 -r wxWindows/contrib/samples/ogl/ogledit/view.cpp wxWin/contrib/samples/ogl/ogledit/view.cpp
--- wxWindows/contrib/samples/ogl/ogledit/view.cpp	2003-08-14 20:02:22.000000000 +0200
+++ wxWin/contrib/samples/ogl/ogledit/view.cpp	2003-08-20 18:24:13.000000000 +0200
@@ -47,3 +47,3 @@
 // windows for displaying the view.
-bool DiagramView::OnCreate(wxDocument *doc, long flags)
+bool DiagramView::OnCreate(wxDocument *doc, long WXUNUSED(flags))
 {
@@ -107,12 +107,11 @@
   // Calculate the position on the DC for centring the graphic
-  if (CENTER == TRUE) // center the drawing
-    {
+  #if 0
+     // center the drawing
       posX = (float) ((w - (200 * actualScale)) / 2.0);
       posY = (float) ((h - (200 * actualScale)) / 2.0);
-    }
-  else    // Use defined presets
-    {
+  #else
+     // Use defined presets
       posX = 10;
       posY = 35;
-    }
+  #endif
 
@@ -129,3 +128,3 @@
   {
-    wxCursor *old_cursor = NULL;
+    /* wxCursor *old_cursor = NULL; */
     wxNode *current = diagram_p->GetShapeList()->First();
@@ -145,3 +144,3 @@
 
-void DiagramView::OnUpdate(wxView *sender, wxObject *hint)
+void DiagramView::OnUpdate(wxView *WXUNUSED(sender), wxObject *WXUNUSED(hint))
 {
@@ -152,3 +151,3 @@
 // Clean up windows used for displaying the view.
-bool DiagramView::OnClose(bool deleteWindow)
+bool DiagramView::OnClose(bool WXUNUSED(deleteWindow))
 {
@@ -194,3 +193,3 @@
 
-void DiagramView::OnCut(wxCommandEvent& event)
+void DiagramView::OnCut(wxCommandEvent& WXUNUSED(event))
 {
@@ -200,6 +199,6 @@
   if (theShape)
-    doc->GetCommandProcessor()->Submit(new DiagramCommand("Cut", OGLEDIT_CUT, doc, NULL, 0.0, 0.0, TRUE, theShape));
+    doc->GetCommandProcessor()->Submit(new DiagramCommand(_T("Cut"), OGLEDIT_CUT, doc, NULL, 0.0, 0.0, TRUE, theShape));
 }
 
-void DiagramView::OnChangeBackgroundColour(wxCommandEvent& event)
+void DiagramView::OnChangeBackgroundColour(wxCommandEvent& WXUNUSED(event))
 {
@@ -225,3 +224,3 @@
         if (theBrush)
-          doc->GetCommandProcessor()->Submit(new DiagramCommand("Change colour", OGLEDIT_CHANGE_BACKGROUND_COLOUR, doc,
+          doc->GetCommandProcessor()->Submit(new DiagramCommand(_T("Change colour"), OGLEDIT_CHANGE_BACKGROUND_COLOUR, doc,
             theBrush, theShape));
@@ -230,3 +229,3 @@
 
-void DiagramView::OnEditLabel(wxCommandEvent& event)
+void DiagramView::OnEditLabel(wxCommandEvent& WXUNUSED(event))
 {
@@ -235,4 +234,4 @@
       {
-        wxString newLabel = wxGetTextFromUser("Enter new label", "Shape Label", ((MyEvtHandler *)theShape->GetEventHandler())->label);
-        GetDocument()->GetCommandProcessor()->Submit(new DiagramCommand("Edit label", OGLEDIT_EDIT_LABEL, (DiagramDocument*) GetDocument(), newLabel, theShape));
+        wxString newLabel = wxGetTextFromUser(_T("Enter new label"), _T("Shape Label"), ((MyEvtHandler *)theShape->GetEventHandler())->label);
+        GetDocument()->GetCommandProcessor()->Submit(new DiagramCommand(_T("Edit label"), OGLEDIT_EDIT_LABEL, (DiagramDocument*) GetDocument(), newLabel, theShape));
       }
@@ -263,3 +262,3 @@
 
-void MyCanvas::OnLeftClick(double x, double y, int keys)
+void MyCanvas::OnLeftClick(double x, double y, int WXUNUSED(keys))
 {
@@ -295,3 +294,3 @@
     view->GetDocument()->GetCommandProcessor()->Submit(
-      new DiagramCommand((char*) info->GetClassName(), OGLEDIT_ADD_SHAPE, (DiagramDocument *)view->GetDocument(), info,
+      new DiagramCommand( info->GetClassName(), OGLEDIT_ADD_SHAPE, (DiagramDocument *)view->GetDocument(), info,
          x, y));
@@ -300,3 +299,3 @@
 
-void MyCanvas::OnRightClick(double x, double y, int keys)
+void MyCanvas::OnRightClick(double WXUNUSED(x), double WXUNUSED(y), int WXUNUSED(keys))
 {
@@ -304,3 +303,3 @@
 
-void MyCanvas::OnDragLeft(bool draw, double x, double y, int keys)
+void MyCanvas::OnDragLeft(bool WXUNUSED(draw), double WXUNUSED(x), double WXUNUSED(y), int WXUNUSED(keys))
 {
@@ -308,3 +307,3 @@
 
-void MyCanvas::OnBeginDragLeft(double x, double y, int keys)
+void MyCanvas::OnBeginDragLeft(double WXUNUSED(x), double WXUNUSED(y), int WXUNUSED(keys))
 {
@@ -312,3 +311,3 @@
 
-void MyCanvas::OnEndDragLeft(double x, double y, int keys)
+void MyCanvas::OnEndDragLeft(double WXUNUSED(x), double WXUNUSED(y), int WXUNUSED(keys))
 {
@@ -316,3 +315,3 @@
 
-void MyCanvas::OnDragRight(bool draw, double x, double y, int keys)
+void MyCanvas::OnDragRight(bool WXUNUSED(draw), double WXUNUSED(x), double WXUNUSED(y), int WXUNUSED(keys))
 {
@@ -320,3 +319,3 @@
 
-void MyCanvas::OnBeginDragRight(double x, double y, int keys)
+void MyCanvas::OnBeginDragRight(double WXUNUSED(x), double WXUNUSED(y), int WXUNUSED(keys))
 {
@@ -324,3 +323,3 @@
 
-void MyCanvas::OnEndDragRight(double x, double y, int keys)
+void MyCanvas::OnEndDragRight(double WXUNUSED(x), double WXUNUSED(y), int WXUNUSED(keys))
 {

 	  	 
