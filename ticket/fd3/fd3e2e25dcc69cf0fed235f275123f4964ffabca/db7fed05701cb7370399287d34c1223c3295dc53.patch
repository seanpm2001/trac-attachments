Index: include/wx/generic/progdlgg.h
===================================================================
--- include/wx/generic/progdlgg.h	(revision 60891)
+++ include/wx/generic/progdlgg.h	(working copy)
@@ -48,6 +48,9 @@
 
     void SetRange(int maximum);
 
+    // Refresh the dialog and test for user interaction
+    bool YieldAndRefresh(bool *skip);
+   
     // Must provide overload to avoid hiding it (and warnings about it)
     virtual void Update() { wxDialog::Update(); }
 
@@ -75,9 +78,6 @@
     // updates the label message
     void UpdateMessage(const wxString &newmsg);
 
-    // common part of Update() and Pulse(), returns true if not cancelled
-    bool DoAfterUpdate(bool *skip);
-
     // shortcuts for enabling buttons
     void EnableClose();
     void EnableSkip(bool enable = true);
Index: interface/wx/progdlg.h
===================================================================
--- interface/wx/progdlg.h	(revision 60891)
+++ interface/wx/progdlg.h	(working copy)
@@ -165,5 +165,22 @@
     */
     virtual bool Update(int value, const wxString& newmsg = wxEmptyString,
                         bool* skip = NULL);
+
+    /**
+        Refresh the dialog and test for user interaction
+
+        Returns @true unless the "Cancel" button has been pressed.
+
+        If @false is returned, the application can either immediately destroy the
+        dialog or ask the user for the confirmation and if the abort is not confirmed
+        the dialog may be resumed with Resume() function.
+
+        @param skip
+            If "Skip" button was pressed since last Update() call,
+            this is set to @true.
+
+        @since 2.8.11
+    */
+    bool YieldAndRefresh(bool* skip = NULL);
 };
 
Index: src/generic/progdlgg.cpp
===================================================================
--- src/generic/progdlgg.cpp	(revision 60891)
+++ src/generic/progdlgg.cpp	(working copy)
@@ -428,7 +428,7 @@
     }
     else // not at maximum yet
     {
-        return DoAfterUpdate(skip);
+        return YieldAndRefresh(skip);
     }
 
     // update the display in case yielding above didn't do it
@@ -455,13 +455,13 @@
         SetTimeLabel((unsigned long)-1, m_remaining);
     }
 
-    return DoAfterUpdate(skip);
+    return YieldAndRefresh(skip);
 }
 
-bool wxProgressDialog::DoAfterUpdate(bool *skip)
+bool wxProgressDialog::YieldAndRefresh(bool *skip)
 {
     wxCHECK_MSG(wxEventLoopBase::GetActive(), false,
-                "wxProgressDialog::DoAfterUpdate needs a running event loop");
+                "wxProgressDialog::YieldAndRefresh needs a running event loop");
 
     // we have to yield because not only we want to update the display but
     // also to process the clicks on the cancel and skip buttons
