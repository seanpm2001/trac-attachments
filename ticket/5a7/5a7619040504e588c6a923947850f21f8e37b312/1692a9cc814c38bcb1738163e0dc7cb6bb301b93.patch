Index: include/wx/utils.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/utils.h,v
retrieving revision 1.90
diff -b -u -2 -r1.90 utils.h
--- include/wx/utils.h	2003/07/08 19:52:20	1.90
+++ include/wx/utils.h	2003/07/17 22:40:45
@@ -78,4 +78,7 @@
 WXDLLIMPEXP_BASE void wxBell();
 
+// Get the state of a key (true if pressed, false if not)
+WXDLLIMPEXP_BASE bool wxGetKeyState(wxKeyCode key);
+
 // Get OS description as a user-readable string
 WXDLLIMPEXP_BASE wxString wxGetOsDescription();
Index: src/mac/app.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/mac/app.cpp,v
retrieving revision 1.108
diff -b -u -2 -r1.108 app.cpp
--- src/mac/app.cpp	2003/07/14 08:41:03	1.108
+++ src/mac/app.cpp	2003/07/17 22:41:04
@@ -1681,4 +1681,40 @@
 }
 
+int wxKeyCodeToMacModifier(wxKeyCode key)
+{
+    switch (key)
+    {
+    case WXK_START:
+        return cmdKey;
+
+    case WXK_SHIFT:
+        return shiftKey;
+
+    case WXK_CAPITAL:
+        return alphaLock;
+
+    case WXK_OPTION:
+        return optionKey;
+
+    case WXK_CONTROL:
+        return controlKey;
+
+    default:
+        return 0;
+    }
+}
+
+bool wxGetKeyState(wxKeyCode key) //virtual key code if < 10.2.x, else see below
+{
+//if OS X > 10.2 (i.e. 10.2.x)
+//a known apple bug prevents the system from determining led
+//states with GetKeys... can only determine caps lock led
+   return !!(GetCurrentKeyModifiers() & wxKeyCodeToMacModifier(key)); 
+//else
+//  KeyMapByteArray keymap; 
+//  GetKeys((BigEndianLong*)keymap);
+//  return !!(BitTst(keymap, (sizeof(KeyMapByteArray)*8) - iKey));
+}
+
 #if !TARGET_CARBON
 void wxApp::MacHandleKeyDownEvent( WXEVENTREF evr )
Index: src/mgl/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/mgl/utils.cpp,v
retrieving revision 1.16
diff -b -u -2 -r1.16 utils.cpp
--- src/mgl/utils.cpp	2003/07/01 12:23:45	1.16
+++ src/mgl/utils.cpp	2003/07/17 22:41:05
@@ -45,4 +45,10 @@
 }
 
+bool wxGetKeyState(wxKeyCode key)
+{
+	// FIXME_MGL
+	wxFAIL("Not Implemented");
+	return false;
+}
 
 #ifdef __DOS__
Index: src/msw/window.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/window.cpp,v
retrieving revision 1.404
diff -b -u -2 -r1.404 window.cpp
--- src/msw/window.cpp	2003/07/16 20:40:57	1.404
+++ src/msw/window.cpp	2003/07/17 22:41:17
@@ -4898,4 +4898,16 @@
 }
 
+bool wxGetKeyState(wxKeyCode key)
+{
+    bool bVirtual;
+    int vkey = wxCharCodeWXToMSW(key, &bVirtual);
+    
+    //there aren't WXK_ macros for non-virtual key codes
+    if (bVirtual == false)
+        return false;
+
+    return GetKeyState(vkey) < 0;
+}
+
 wxWindow *wxGetActiveWindow()
 {
Index: src/os2/WINDOW.CPP
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/os2/WINDOW.CPP,v
retrieving revision 1.123
diff -b -u -2 -r1.123 WINDOW.CPP
--- src/os2/WINDOW.CPP	2003/07/09 10:15:17	1.123
+++ src/os2/WINDOW.CPP	2003/07/17 22:41:29
@@ -4990,4 +4990,11 @@
 } // end of wxCharCodeWXToOS2
 
+bool wxGetKeyState(wxKeyCode key)
+{
+    //TODO
+    wxFAIL("Not Implemented");
+    return false;
+}
+
 wxWindow* wxGetActiveWindow()
 {
Index: src/x11/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/x11/utils.cpp,v
retrieving revision 1.16
diff -b -u -2 -r1.16 utils.cpp
--- src/x11/utils.cpp	2003/07/01 12:23:41	1.16
+++ src/x11/utils.cpp	2003/07/17 22:41:32
@@ -469,4 +469,26 @@
 }
 
+bool wxGetKeyState(wxKeyCode key)
+{
+  Display *pDisplay = wxApp::GetDisplay();
+  int iKey = wxCharCodeWXToX(key);
+  int          iKeyMask = 0;
+  Window       wDummy1, wDummy2;
+  int          iDummy3, iDummy4, iDummy5, iDummy6;
+  unsigned int iMask;
+  XModifierKeymap* map = XGetModifierMapping(pDisplay);
+  KeyCode keyCode = XKeysymToKeycode(pDisplay,iKey);
+  if(keyCode == NoSymbol) return false;
+  for(int i = 0; i < 8; ++i) {
+    if( map->modifiermap[map->max_keypermod * i] == keyCode) {
+      iKeyMask = 1 << i;
+    }
+  }
+  XQueryPointer(pDisplay, DefaultRootWindow(pDisplay), &wDummy1, &wDummy2,
+                &iDummy3, &iDummy4, &iDummy5, &iDummy6, &iMask );
+  XFreeModifiermap(map);
+  return (iMask & iKeyMask) != 0;
+}
+
 // ----------------------------------------------------------------------------
 // Some colour manipulation routines

 	  	 
