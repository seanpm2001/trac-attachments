diff --git a/build/files b/build/files
index 5c1ba64..b99bc61 100644
--- a/build/files
+++ b/build/files
@@ -2128,6 +2128,7 @@ OSX_CARBON_HDR =
 OSX_COCOA_SRC =
     $(OSX_CARBON_COCOA_SRC)
     src/osx/cocoa/anybutton.mm
+    src/osx/cocoa/appprogress.mm
     src/osx/cocoa/button.mm
     src/osx/cocoa/checkbox.mm
     src/osx/cocoa/choice.mm
diff --git a/include/wx/appprogress.h b/include/wx/appprogress.h
index 816da3d..1725dce 100644
--- a/include/wx/appprogress.h
+++ b/include/wx/appprogress.h
@@ -31,6 +31,8 @@ private:
 
 #if defined(__WXMSW__) && wxUSE_TASKBARBUTTON
     #include "wx/msw/appprogress.h"
+#elif defined(__WXMAC__)
+    #include "wx/osx/appprogress.h"
 #else
     class wxAppProgressIndicator : public wxAppProgressIndicatorBase
     {
diff --git a/include/wx/gauge.h b/include/wx/gauge.h
index 6339715..a54cc5a 100644
--- a/include/wx/gauge.h
+++ b/include/wx/gauge.h
@@ -42,6 +42,8 @@
 
 extern WXDLLIMPEXP_DATA_CORE(const char) wxGaugeNameStr[];
 
+class WXDLLIMPEXP_FWD_CORE wxAppProgressIndicator;
+
 // ----------------------------------------------------------------------------
 // wxGauge: a progress bar
 // ----------------------------------------------------------------------------
@@ -99,6 +101,8 @@ protected:
     int m_nDirection;       // can be wxRIGHT or wxLEFT
 #endif
 
+    wxAppProgressIndicator* m_appProgressIndicator;
+
     wxDECLARE_NO_COPY_CLASS(wxGaugeBase);
 };
 
diff --git a/include/wx/msw/gauge.h b/include/wx/msw/gauge.h
index d073ad1..3cf4fcf 100644
--- a/include/wx/msw/gauge.h
+++ b/include/wx/msw/gauge.h
@@ -15,8 +15,6 @@
 
 extern WXDLLIMPEXP_DATA_CORE(const char) wxGaugeNameStr[];
 
-class WXDLLIMPEXP_FWD_CORE wxAppProgressIndicator;
-
 // Group box
 class WXDLLIMPEXP_CORE wxGauge : public wxGaugeBase
 {
@@ -73,8 +71,6 @@ private:
     void SetIndeterminateMode();
     void SetDeterminateMode();
 
-    wxAppProgressIndicator* m_appProgressIndicator;
-
     DECLARE_DYNAMIC_CLASS_NO_COPY(wxGauge)
 };
 
diff --git a/include/wx/osx/appprogress.h b/include/wx/osx/appprogress.h
new file mode 100644
index 0000000..8ba7706
--- /dev/null
+++ b/include/wx/osx/appprogress.h
@@ -0,0 +1,36 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        wx/osx/appprogress.h
+// Purpose:     wxAppProgressIndicator OSX implemenation
+// Author:      Tobias Taschner
+// Created:     2014-10-22
+// Copyright:   (c) 2014 wxWidgets development team
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#ifndef _WX_MAC_APPPROG_H_
+#define _WX_MAC_APPPROG_H_
+
+#include "wx/window.h"
+
+class WXDLLIMPEXP_CORE wxAppProgressIndicator
+    : public wxAppProgressIndicatorBase
+{
+public:
+    wxAppProgressIndicator(wxWindow* parent = NULL, int maxValue = 100);
+    virtual ~wxAppProgressIndicator();
+
+    virtual bool IsAvailable() const wxOVERRIDE;
+
+    virtual void SetValue(int value) wxOVERRIDE;
+    virtual void SetRange(int range) wxOVERRIDE;
+    virtual void Pulse() wxOVERRIDE;
+    virtual void Reset() wxOVERRIDE;
+
+private:
+    int m_maxValue;
+    void* m_dockIcon;
+    
+    wxDECLARE_NO_COPY_CLASS(wxAppProgressIndicator);
+};
+
+#endif  // _WX_MAC_APPPROG_H_
diff --git a/interface/wx/appprogress.h b/interface/wx/appprogress.h
index 6cc52d6..d0ee393 100644
--- a/interface/wx/appprogress.h
+++ b/interface/wx/appprogress.h
@@ -13,7 +13,7 @@
     @library{wxcore}
     @category{misc}
 
-    @onlyfor{wxmsw}
+    @onlyfor{wxmsw,wxosx}
 
     @see wxTaskBarButton
     @since 3.1.0
@@ -43,8 +43,8 @@ public:
     /**
         Check if the application progress display is available.
 
-        Currently this only returns @true when using wxMSW and running under
-        Vista or later system, which provide task bar button API.
+        Currently this only returns @true when when using wxOSX or using
+        wxMSW and running under Windows 7 or later system, which provide task bar button API.
 
         If this method returns @false, no other methods of this class do
         anything, but they may still be called without any ill effects.
diff --git a/interface/wx/gauge.h b/interface/wx/gauge.h
index d39e944..a64721e 100644
--- a/interface/wx/gauge.h
+++ b/interface/wx/gauge.h
@@ -53,8 +53,8 @@
            (only supported in wxQt, may be not available on all platforms).
            @since 3.1.0
     @style{wxGA_PROGRESS}
-           Reflect the value of guage on the taskbar button, available since
-           Windows 7 only.
+           Reflect the value of gauge on the taskbar button, available since
+           Windows 7 and on OSX.
            @since 3.1.0
     @endStyleTable
 
diff --git a/src/common/gaugecmn.cpp b/src/common/gaugecmn.cpp
index 57e3f56..bac5201 100644
--- a/src/common/gaugecmn.cpp
+++ b/src/common/gaugecmn.cpp
@@ -29,6 +29,7 @@
 #if wxUSE_GAUGE
 
 #include "wx/gauge.h"
+#include "wx/appprogress.h"
 
 const char wxGaugeNameStr[] = "gauge";
 
@@ -39,6 +40,7 @@ const char wxGaugeNameStr[] = "gauge";
 wxGaugeBase::~wxGaugeBase()
 {
     // this destructor is required for Darwin
+    delete m_appProgressIndicator;
 }
 
 // ----------------------------------------------------------------------------
@@ -124,6 +126,17 @@ bool wxGaugeBase::Create(wxWindow *parent,
     SetValidator(validator);
 #endif // wxUSE_VALIDATORS
 
+    m_appProgressIndicator = NULL;
+    if ( (style & wxGA_PROGRESS) != 0 )
+    {
+        wxWindow* topParent = wxGetTopLevelParent(this);
+        if ( topParent != NULL )
+        {
+            m_appProgressIndicator =
+                new wxAppProgressIndicator(topParent, range);
+        }
+    }
+
     SetRange(range);
     SetValue(0);
 #if wxGAUGE_EMULATE_INDETERMINATE_MODE
diff --git a/src/msw/gauge.cpp b/src/msw/gauge.cpp
index bc2d106..3c0aaf6 100644
--- a/src/msw/gauge.cpp
+++ b/src/msw/gauge.cpp
@@ -33,7 +33,6 @@
     #include "wx/msw/wrapcctl.h" // include <commctrl.h> "properly"
 #endif
 
-#include "wx/appprogress.h"
 #include "wx/msw/private.h"
 
 // ----------------------------------------------------------------------------
@@ -95,17 +94,6 @@ bool wxGauge::Create(wxWindow *parent,
     // in case we need to emulate indeterminate mode...
     m_nDirection = wxRIGHT;
 
-    m_appProgressIndicator = NULL;
-    if ( (style & wxGA_PROGRESS) != 0 )
-    {
-        wxWindow* topParent = wxGetTopLevelParent(this);
-        if ( topParent != NULL )
-        {
-            m_appProgressIndicator =
-                new wxAppProgressIndicator(topParent, range);
-        }
-    }
-
     SetRange(range);
 
     return true;
@@ -113,7 +101,6 @@ bool wxGauge::Create(wxWindow *parent,
 
 wxGauge::~wxGauge()
 {
-    delete m_appProgressIndicator;
 }
 
 WXDWORD wxGauge::MSWGetStyle(long style, WXDWORD *exstyle) const
diff --git a/src/osx/cocoa/appprogress.mm b/src/osx/cocoa/appprogress.mm
new file mode 100644
index 0000000..7f21255
--- /dev/null
+++ b/src/osx/cocoa/appprogress.mm
@@ -0,0 +1,112 @@
+/////////////////////////////////////////////////////////////////////////////
+// Name:        src/osx/cocoa/appprogress.mm
+// Purpose:     wxAppProgressIndicator OSX implemenation
+// Author:      Tobias Taschner
+// Created:     2014-10-22
+// Copyright:   (c) 2014 wxWidgets development team
+// Licence:     wxWindows licence
+/////////////////////////////////////////////////////////////////////////////
+
+#include "wx/appprogress.h"
+#include "wx/osx/private.h"
+
+@interface wxAppProgressDockIcon : NSObject
+{
+    NSProgressIndicator* m_progIndicator;
+    NSDockTile* m_dockTile;
+}
+
+- (id)init;
+
+@end
+
+@implementation wxAppProgressDockIcon
+
+- (id)init
+{
+    self = [super init];
+    if (self) {
+        m_dockTile = [NSApplication sharedApplication].dockTile;
+        NSImageView* iv = [[NSImageView alloc] init];
+        [iv setImage:[NSApplication sharedApplication].applicationIconImage];
+        [m_dockTile setContentView:iv];
+        
+        m_progIndicator = [[NSProgressIndicator alloc] initWithFrame:NSMakeRect(0.0f, 16.0f, m_dockTile.size.width, 24.)];
+        m_progIndicator.style = NSProgressIndicatorBarStyle;
+        [m_progIndicator setIndeterminate:NO];
+        [iv addSubview:m_progIndicator];
+        
+        [m_progIndicator setBezeled:YES];
+        [m_progIndicator setMinValue:0];
+        [m_progIndicator setMaxValue:1];
+        [m_progIndicator release];
+        [self setProgress:0.0];
+    }
+    return self;
+}
+
+- (void)setProgress:(double)value
+{
+    [m_progIndicator setHidden:NO];
+    [m_progIndicator setDoubleValue:value];
+    
+    [m_dockTile display];
+}
+
+- (void)setIndeterminate:(bool)indeterminate
+{
+    [m_progIndicator setIndeterminate:indeterminate];
+
+    [m_dockTile display];
+}
+
+- (void)reset
+{
+    [m_dockTile setContentView:nil];
+}
+
+@end
+
+wxAppProgressIndicator::wxAppProgressIndicator(wxWindow* WXUNUSED(parent), int maxValue ):
+    m_maxValue(maxValue)
+{
+    wxAppProgressDockIcon* dockIcon = [[[wxAppProgressDockIcon alloc] init] retain];
+    
+    m_dockIcon = dockIcon;
+}
+
+wxAppProgressIndicator::~wxAppProgressIndicator()
+{
+    Reset();
+
+    NSObject* obj = (NSObject*) m_dockIcon;
+    [obj release];
+}
+
+bool wxAppProgressIndicator::IsAvailable() const
+{
+    return true;
+}
+
+void wxAppProgressIndicator::SetValue(int value)
+{
+    wxAppProgressDockIcon* dockIcon = (wxAppProgressDockIcon*) m_dockIcon;
+    [dockIcon setProgress:(double)value / (double)m_maxValue];
+}
+
+void wxAppProgressIndicator::SetRange(int range)
+{
+    m_maxValue = range;
+}
+
+void wxAppProgressIndicator::Pulse()
+{
+    wxAppProgressDockIcon* dockIcon = (wxAppProgressDockIcon*) m_dockIcon;
+    [dockIcon setIndeterminate:true];
+}
+
+void wxAppProgressIndicator::Reset()
+{
+    wxAppProgressDockIcon* dockIcon = (wxAppProgressDockIcon*) m_dockIcon;
+    [dockIcon reset];
+}
