Index: include/wx/dnd.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/dnd.h,v
retrieving revision 1.32
diff -b -u -2 -r1.32 dnd.h
--- include/wx/dnd.h	2004/09/10 12:55:49	1.32
+++ include/wx/dnd.h	2005/03/07 20:24:24
@@ -142,5 +142,5 @@
     // here, you can use SetDataObject() later.
     wxDropTargetBase(wxDataObject *dataObject = (wxDataObject*)NULL)
-        { m_dataObject = dataObject; }
+        { m_dataObject = dataObject; m_defaultAction = wxDragNone; }
     // dtor deletes our data object
     virtual ~wxDropTargetBase()
@@ -193,6 +193,19 @@
     virtual bool GetData() = 0;
 
+    // sets the default action for drag and drop:
+    // use wxDragMove or wxDragCopy to set deafult action to move or copy
+    // and use wxDragNone (default) to set default action specified by
+    // initialization of draging (see wxDropSourceBase::DoDragDrop())
+    void SetDefaultAction(wxDragResult action)
+        { m_defaultAction = action; }
+
+    // returns default action for drag and drop or
+    // wxDragNone if this not specified
+    wxDragResult GetDefaultAction()
+        { return m_defaultAction; }
+
 protected:
     wxDataObject *m_dataObject;
+    wxDragResult m_defaultAction;
 
     DECLARE_NO_COPY_CLASS(wxDropTargetBase)
Index: src/gtk/dnd.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/gtk/dnd.cpp,v
retrieving revision 1.90
diff -b -u -2 -r1.90 dnd.cpp
--- src/gtk/dnd.cpp	2005/01/16 15:33:28	1.90
+++ src/gtk/dnd.cpp	2005/03/07 20:24:31
@@ -188,4 +188,7 @@
     // field
     wxDragResult result;
+    if (drop_target->GetDefaultAction() == wxDragNone)
+    {
+        // use default action set by wxDropSource::DoDragDrop()
     if ( (gs_flagsForDrag & wxDrag_DefaultMove) == wxDrag_DefaultMove &&
             (context->actions & GDK_ACTION_MOVE ) )
@@ -205,4 +208,19 @@
         }
     }
+    }
+    else if (drop_target->GetDefaultAction() == wxDragMove &&
+                (context->actions & GDK_ACTION_MOVE))
+    {
+       result = wxDragMove;
+    }
+    else
+    {
+        if (context->actions & GDK_ACTION_COPY)
+            result = wxDragCopy;
+        else if (context->actions & GDK_ACTION_MOVE)
+            result = wxDragMove;
+        else
+            result = wxDragNone;
+    }
 
     if (drop_target->m_firstMotion)
@@ -221,7 +239,5 @@
     {
         GdkDragAction action;
-        if ((result == wxDragCopy) && (context->actions & GDK_ACTION_COPY) ||
-            (result == wxDragMove) && !(context->actions & GDK_ACTION_MOVE) ||
-            (result == wxDragLink) && !(context->actions & GDK_ACTION_LINK))
+        if (result == wxDragCopy)
             action = GDK_ACTION_COPY;
         else if (result == wxDragLink)
Index: src/msw/ole/droptgt.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/ole/droptgt.cpp,v
retrieving revision 1.39
diff -b -u -2 -r1.39 droptgt.cpp
--- src/msw/ole/droptgt.cpp	2004/08/16 12:45:46	1.39
+++ src/msw/ole/droptgt.cpp	2005/03/07 20:24:39
@@ -86,5 +86,5 @@
 
     // get default drop effect for given keyboard flags
-    static inline DWORD GetDropEffect(DWORD flags);
+    static inline DWORD GetDropEffect(DWORD flags, wxDragResult defaultAction);
 
     DECLARE_NO_COPY_CLASS(wxIDropTarget)
@@ -110,6 +110,8 @@
 //           which is the standard behaviour (currently there is no
 //           way to redefine it)
-DWORD wxIDropTarget::GetDropEffect(DWORD flags)
+DWORD wxIDropTarget::GetDropEffect(DWORD flags, wxDragResult defaultAction)
 {
+  if (defaultAction == wxDragCopy)
+    return flags & MK_SHIFT ? DROPEFFECT_MOVE : DROPEFFECT_COPY;
   return flags & MK_CONTROL ? DROPEFFECT_COPY : DROPEFFECT_MOVE;
 }
@@ -190,6 +192,6 @@
     // give some visual feedback
     *pdwEffect = ConvertDragResultToEffect(
-                    m_pTarget->OnEnter(pt.x, pt.y,
-                        ConvertDragEffectToResult(GetDropEffect(grfKeyState))
+        m_pTarget->OnEnter(pt.x, pt.y, ConvertDragEffectToResult(
+            GetDropEffect(grfKeyState, m_pTarget->GetDefaultAction()))
                     )
                  );
@@ -215,5 +217,6 @@
     wxDragResult result;
     if ( m_pIDataObject ) {
-        result = ConvertDragEffectToResult(GetDropEffect(grfKeyState));
+        result = ConvertDragEffectToResult(
+            GetDropEffect(grfKeyState, m_pTarget->GetDefaultAction()));
     }
     else {
@@ -287,5 +290,6 @@
 
         // and now it has the data
-        wxDragResult rc = ConvertDragEffectToResult(GetDropEffect(grfKeyState));
+        wxDragResult rc = ConvertDragEffectToResult(
+            GetDropEffect(grfKeyState, m_pTarget->GetDefaultAction()));
         rc = m_pTarget->OnData(pt.x, pt.y, rc);
         if ( wxIsDragResultOk(rc) ) {

 	  	 
