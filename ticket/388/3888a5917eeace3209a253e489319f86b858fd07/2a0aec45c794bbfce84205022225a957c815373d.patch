diff --git a/include/wx/osx/nonownedwnd.h b/include/wx/osx/nonownedwnd.h
old mode 100644
new mode 100755
index edc3f04..79c060e
--- a/include/wx/osx/nonownedwnd.h
+++ b/include/wx/osx/nonownedwnd.h
@@ -113,7 +113,7 @@ public:
     virtual void HandleResized( double timestampsec );
     virtual void HandleMoved( double timestampsec );
     virtual void HandleResizing( double timestampsec, wxRect* rect );
-    
+	virtual void HandleMiniaturize( double WXUNUSED(timestampsec), bool miniaturized );
     void WindowWasPainted();
 
     virtual bool Destroy();
diff --git a/include/wx/osx/toplevel.h b/include/wx/osx/toplevel.h
index d88846d..ce9f950 100644
--- a/include/wx/osx/toplevel.h
+++ b/include/wx/osx/toplevel.h
@@ -82,6 +82,9 @@ public:
 
     virtual void SetRepresentedFilename(const wxString& filename);
 
+    // do *not* call this to iconize the frame, this is a private function!
+    void SetIconizeState(bool iconic);
+
 protected:
     // common part of all ctors
     void Init();
@@ -92,6 +95,7 @@ protected:
     // should the frame be maximized when it will be shown? set by Maximize()
     // when it is called while the frame is hidden
     bool m_maximizeOnShow;
+
 private :
     DECLARE_EVENT_TABLE()
 };
diff --git a/src/osx/cocoa/nonownedwnd.mm b/src/osx/cocoa/nonownedwnd.mm
index d31852c..d213ffb 100644
--- a/src/osx/cocoa/nonownedwnd.mm
+++ b/src/osx/cocoa/nonownedwnd.mm
@@ -322,6 +322,8 @@ static NSResponder* s_formerFirstResponder = NULL;
 - (void)windowDidResignKey:(NSNotification *)notification;
 - (void)windowDidBecomeKey:(NSNotification *)notification;
 - (void)windowDidMove:(NSNotification *)notification;
+- (void)windowDidMiniaturize:(NSNotification *)notification;
+- (void)windowDidDeminiaturize:(NSNotification *)notification;
 - (BOOL)windowShouldClose:(id)window;
 - (BOOL)windowShouldZoom:(NSWindow *)window toFrame:(NSRect)newFrame;
 #if wxHAS_FULL_SCREEN_API
@@ -413,6 +415,30 @@ extern int wxOSXGetIdFromSelector(SEL action );
     [self triggerMenu:_cmd];
 }
 
+- (void)windowDidMiniaturize:(NSNotification *)notification
+{
+    NSWindow* window = (NSWindow*) [notification object];
+    wxNonOwnedWindowCocoaImpl* windowimpl = [window WX_implementation];
+    if ( windowimpl )
+    {
+        wxNonOwnedWindow* wxpeer = windowimpl->GetWXPeer();
+        if ( wxpeer )
+            wxpeer->HandleMiniaturize(0, [window isMiniaturized]);
+    }
+}
+
+- (void)windowDidDeminiaturize:(NSNotification *)notification
+{
+    NSWindow* window = (NSWindow*) [notification object];
+    wxNonOwnedWindowCocoaImpl* windowimpl = [window WX_implementation];
+    if ( windowimpl )
+    {
+        wxNonOwnedWindow* wxpeer = windowimpl->GetWXPeer();
+        if ( wxpeer )
+            wxpeer->HandleMiniaturize(0, [window isMiniaturized]);
+    }
+}
+
 - (BOOL)windowShouldClose:(id)nwindow
 {
     wxNonOwnedWindowCocoaImpl* windowimpl = [(NSWindow*) nwindow WX_implementation];
diff --git a/src/osx/nonownedwnd_osx.cpp b/src/osx/nonownedwnd_osx.cpp
index 0e57c7f..a02c1cc 100644
--- a/src/osx/nonownedwnd_osx.cpp
+++ b/src/osx/nonownedwnd_osx.cpp
@@ -552,4 +552,11 @@ bool wxNonOwnedWindow::DoSetPathShape(const wxGraphicsPath& path)
     return DoSetRegionShape(wxRegion(bmp));
 }
 
+void wxNonOwnedWindow::HandleMiniaturize( double timestampsec, bool miniaturized )
+{
+    wxTopLevelWindowMac* top = (wxTopLevelWindowMac*) MacGetTopLevelWindow();
+    if (top)
+        top->SetIconizeState(miniaturized);
+}
+
 #endif // wxUSE_GRAPHICS_CONTEXT
diff --git a/src/osx/toplevel_osx.cpp b/src/osx/toplevel_osx.cpp
index 848199a..4c7247c 100644
--- a/src/osx/toplevel_osx.cpp
+++ b/src/osx/toplevel_osx.cpp
@@ -60,7 +60,7 @@ END_EVENT_TABLE()
 
 void wxTopLevelWindowMac::Init()
 {
-    m_iconized =
+	m_iconized =
     m_maximizeOnShow = false;
 }
 
@@ -229,3 +229,12 @@ void wxTopLevelWindowMac::SetRepresentedFilename(const wxString& filename)
 {
     m_nowpeer->SetRepresentedFilename(filename);
 }
+
+void wxTopLevelWindowMac::SetIconizeState(bool iconize)
+{
+    if ( iconize != m_iconized )
+    {
+        m_iconized = iconize;
+        (void)SendIconizeEvent(iconize);
+    }
+}
