Index: os2/thread.cpp
===================================================================
--- os2/thread.cpp	(revision 67101)
+++ os2/thread.cpp	(working copy)
@@ -661,18 +661,18 @@
 // stopping thread
 // ---------------
 
-wxThread::ExitCode wxThread::Wait()
+wxThread::ExitCode wxThread::Wait(int flags)
 {
     // although under Windows we can wait for any thread, it's an error to
     // wait for a detached one in wxWin API
     wxCHECK_MSG( !IsDetached(), (ExitCode)-1,
                  wxT("can't wait for detached thread") );
     ExitCode rc = (ExitCode)-1;
-    (void)Delete(&rc);
+    (void)Delete(&rc, flags);
     return(rc);
 }
 
-wxThreadError wxThread::Delete(ExitCode *pRc)
+wxThreadError wxThread::Delete(ExitCode *pRc, int WXUNUSED(flags))
 {
     ExitCode rc = 0;
 
Index: osx/carbon/thread.cpp
===================================================================
--- osx/carbon/thread.cpp	(revision 67101)
+++ osx/carbon/thread.cpp	(working copy)
@@ -940,7 +940,7 @@
 // exiting thread
 // -----------------------------------------------------------------------------
 
-wxThread::ExitCode wxThread::Wait()
+wxThread::ExitCode wxThread::Wait(int WXUNUSED(flags))
 {
     wxCHECK_MSG( This() != this, (ExitCode)-1,
                  wxT("a thread can't wait for itself") );
@@ -953,7 +953,7 @@
     return m_internal->GetExitCode();
 }
 
-wxThreadError wxThread::Delete(ExitCode *rc)
+wxThreadError wxThread::Delete(ExitCode *rc, int WXUNUSED(flags))
 {
     wxCHECK_MSG( This() != this, wxTHREAD_MISC_ERROR,
                  wxT("a thread can't delete itself") );
Index: palmos/thread.cpp
===================================================================
--- palmos/thread.cpp	(revision 67101)
+++ palmos/thread.cpp	(working copy)
@@ -467,12 +467,12 @@
 // stopping thread
 // ---------------
 
-wxThread::ExitCode wxThread::Wait()
+wxThread::ExitCode wxThread::Wait(int WXUNUSED(flags))
 {
     return 0;
 }
 
-wxThreadError wxThread::Delete(ExitCode *pRc)
+wxThreadError wxThread::Delete(ExitCode *pRc, int WXUNUSED(flags))
 {
     return wxTHREAD_NO_ERROR;
 }
Index: unix/threadpsx.cpp
===================================================================
--- unix/threadpsx.cpp	(revision 67101)
+++ unix/threadpsx.cpp	(working copy)
@@ -1425,7 +1425,7 @@
 // exiting thread
 // -----------------------------------------------------------------------------
 
-wxThread::ExitCode wxThread::Wait()
+wxThread::ExitCode wxThread::Wait(int WXUNUSED(flags))
 {
     wxCHECK_MSG( This() != this, (ExitCode)-1,
                  wxT("a thread can't wait for itself") );
@@ -1438,7 +1438,7 @@
     return m_internal->GetExitCode();
 }
 
-wxThreadError wxThread::Delete(ExitCode *rc)
+wxThreadError wxThread::Delete(ExitCode *rc, int WXUNUSED(flags))
 {
     wxCHECK_MSG( This() != this, wxTHREAD_MISC_ERROR,
                  wxT("a thread can't delete itself") );
