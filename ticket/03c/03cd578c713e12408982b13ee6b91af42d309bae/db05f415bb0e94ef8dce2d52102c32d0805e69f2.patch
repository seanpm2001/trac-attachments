diff --git a/include/wx/settings.h b/include/wx/settings.h
index f90ae07..0e62bd4 100644
--- a/include/wx/settings.h
+++ b/include/wx/settings.h
@@ -137,7 +137,10 @@ enum wxSystemMetric
     wxSYS_PENWINDOWS_PRESENT,
     wxSYS_SHOW_SOUNDS,
     wxSYS_SWAP_BUTTONS,
-    wxSYS_DCLICK_MSEC
+    wxSYS_DCLICK_MSEC,
+    wxSYS_CARET_ON_MSEC,
+    wxSYS_CARET_OFF_MSEC,
+    wxSYS_CARET_TIMEOUT_MSEC
 };
 
 // possible values for wxSystemSettings::HasFeature() parameter
@@ -218,4 +221,3 @@ public:
 
 #endif
     // _WX_SETTINGS_H_BASE_
-
diff --git a/interface/wx/settings.h b/interface/wx/settings.h
index 04cc77d..0e82143 100644
--- a/interface/wx/settings.h
+++ b/interface/wx/settings.h
@@ -191,7 +191,41 @@ enum wxSystemMetric
                               //!< visually in situations where it would otherwise present the information
                               //!< only in audible form; zero otherwise.
     wxSYS_SWAP_BUTTONS,       //!< Non-zero if the meanings of the left and right mouse buttons are swapped; zero otherwise.
-    wxSYS_DCLICK_MSEC         //!< Maximal time, in milliseconds, which may pass between subsequent clicks for a double click to be generated.
+    wxSYS_DCLICK_MSEC,        //!< Maximal time, in milliseconds, which may pass between subsequent clicks for a double click to be generated.
+
+    /**
+        Time, in milliseconds, for how long a blinking caret should
+        stay visible during a single blink cycle before it disappears.
+        If this value is negative, the platform does not support the
+        user setting.  Implemented only on GTK+ and MacOS X.
+
+        @since 3.1.1
+    */
+    wxSYS_CARET_ON_MSEC,
+
+    /**
+        Time, in milliseconds, for how long a blinking caret should
+        stay invisible during a single blink cycle before it reappears.
+        If this value is zero, carets should be visible all the time
+        instead of blinking.  If the value is negative, the platform
+        does not support the user setting.  Implemented only on GTK+
+        and MacOS X.
+
+        @since 3.1.1
+    */
+    wxSYS_CARET_OFF_MSEC,
+
+    /**
+        Time, in milliseconds, for how long a caret should blink after
+        a user interaction.  After this timeout has expired, the caret
+        should stay continuously visible until the user interacts with
+        the caret again (for example by entering, deleting or cutting
+        text).  If this value is negative, carets should blink forever;
+        if it is zero, carets should not blink at all.
+
+        @since 3.1.1
+    */
+    wxSYS_CARET_TIMEOUT_MSEC
 };
 
 /**
@@ -297,4 +331,3 @@ public:
     */
     static bool HasFeature(wxSystemFeature index);
 };
-
diff --git a/src/gtk/settings.cpp b/src/gtk/settings.cpp
index 8343c6e..c542322 100644
--- a/src/gtk/settings.cpp
+++ b/src/gtk/settings.cpp
@@ -574,6 +574,53 @@ int wxSystemSettingsNative::GetMetric( wxSystemMetric index, wxWindow* win )
                             "gtk-double-click-time", &dclick, NULL);
             return dclick;
 
+        case wxSYS_CARET_ON_MSEC:
+            {
+                gint blink_time = -1;
+                g_object_get(GetSettingsForWindowScreen(window),
+                                "gtk-cursor-blink-time", &blink_time, NULL);
+                if (blink_time > 0)
+                    return blink_time / 2;
+
+                return -1;
+            }
+
+        case wxSYS_CARET_OFF_MSEC:
+            {
+                gboolean should_blink = true;
+                gint blink_time = -1;
+                g_object_get(GetSettingsForWindowScreen(window),
+                                "gtk-cursor-blink", &should_blink,
+                                "gtk-cursor-blink-time", &blink_time,
+                                NULL);
+                if (!should_blink)
+                    return 0;
+
+                if (blink_time > 0)
+                    return blink_time / 2;
+
+                return -1;
+            }
+
+        case wxSYS_CARET_TIMEOUT_MSEC:
+            {
+                gboolean should_blink = true;
+                gint timeout = 0;
+                g_object_get(GetSettingsForWindowScreen(window),
+                                "gtk-cursor-blink", &should_blink,
+                                "gtk-cursor-blink-timeout", &timeout,
+                                NULL);
+                if (!should_blink)
+                    return 0;
+
+                // GTK+ returns this value in seconds, not milliseconds.
+                // A value of 2147483647 means eternal blinking.
+                if (timeout > 0 && timeout < 2147483647)
+                    return timeout * 1000;
+
+                return -1;  // no timeout, blink forever
+            }
+
         case wxSYS_DRAG_X:
         case wxSYS_DRAG_Y:
             gint drag_threshold;
diff --git a/src/osx/cocoa/settings.mm b/src/osx/cocoa/settings.mm
index 6ccaf26..1567399 100644
--- a/src/osx/cocoa/settings.mm
+++ b/src/osx/cocoa/settings.mm
@@ -21,6 +21,25 @@
 #include "wx/osx/cocoa/private.h"
 
 #import <AppKit/NSColor.h>
+#import <Foundation/Foundation.h>
+
+
+static int wxOSXGetUserDefault(NSString* key, int defaultValue) {
+  NSUserDefaults* defaults = [NSUserDefaults standardUserDefaults];
+  if (!defaults)
+  {
+    return defaultValue;
+  }
+
+  id setting = [defaults objectForKey: key];
+  if (!setting)
+  {
+    return defaultValue;
+  }
+
+  return [setting intValue];
+}
+
 
 // ----------------------------------------------------------------------------
 // wxSystemSettingsNative
@@ -231,6 +250,32 @@ int wxSystemSettingsNative::GetMetric(wxSystemMetric index, wxWindow *WXUNUSED(w
             // but rather rely on the 'click-count' by the system delivered in a mouse event
             return 500;
 
+        case wxSYS_CARET_ON_MSEC:
+             value = wxOSXGetUserDefault(@"NSTextInsertionPointBlinkPeriodOn", -1);
+             if (value > 0)
+                 return value;
+
+             value = wxOSXGetUserDefault(@"NSTextInsertionPointBlinkPeriod", -1);
+             if (value > 0)
+                 return value / 2;
+
+             return -1;
+
+        case wxSYS_CARET_OFF_MSEC:
+             value = wxOSXGetUserDefault(@"NSTextInsertionPointBlinkPeriodOff", -1);
+             if (value > 0)
+                 return value;
+
+             value = wxOSXGetUserDefault(@"NSTextInsertionPointBlinkPeriod", -1);
+             if (value > 0)
+                 return value / 2;
+
+             return -1;
+
+        case wxSYS_CARET_TIMEOUT_MSEC:
+             // On MacOS X, carets don't stop blinking after user interactions.
+             return -1;
+
         default:
             return -1;  // unsupported metric
     }
