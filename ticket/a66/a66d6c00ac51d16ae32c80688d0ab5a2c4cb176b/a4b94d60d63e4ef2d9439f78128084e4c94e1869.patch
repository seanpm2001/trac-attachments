Index: src/x11/utils.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/x11/utils.cpp,v
retrieving revision 1.27
diff -u -r1.27 utils.cpp
--- src/x11/utils.cpp	2006/05/22 07:11:26	1.27
+++ src/x11/utils.cpp	2006/05/24 16:09:52
@@ -91,10 +91,52 @@
 // wxExecute stuff
 // ----------------------------------------------------------------------------
 
+WX_DECLARE_HASH_MAP( int, wxEndProcessData*, wxIntegerHash, wxIntegerEqual, wxProcMap );
+
+static wxProcMap *_procmap;
+
 int wxAddProcessCallback(wxEndProcessData *proc_data, int fd)
 {
-    // TODO
-    return 0;
+    if (!_procmap) _procmap = new wxProcMap();
+    (*_procmap)[fd] = proc_data;
+    return 1;
+}
+
+void wxCheckForFinishedChildren()
+{
+    wxProcMap::iterator it;
+    if (!_procmap) return;
+    if (_procmap->size() == 0) {
+      // Map empty, delete it.
+      delete _procmap;
+      _procmap = NULL;
+    }
+    for (it = _procmap->begin();it != _procmap->end(); ++it)
+    {
+        wxEndProcessData *proc_data = it->second;
+        int pid = (proc_data->pid > 0) ? proc_data->pid : -(proc_data->pid);
+        int status = 0;
+        // has the process really terminated?
+        int rc = waitpid(pid, &status, WNOHANG);
+        if (rc == 0)
+            continue;       // no, it didn't exit yet, continue waiting
+
+        // set exit code to -1 if something bad happened
+        proc_data->exitcode = rc != -1 && WIFEXITED(status) ?
+            WEXITSTATUS(status) : -1;
+        
+        // child exited, end waiting
+        close(it->first);
+
+        // don't call us again!
+        _procmap->erase(it->first);
+
+        wxHandleProcessTermination(proc_data);
+
+        // Iterator is invalid. Handle any further children in subsequent
+        // calls.
+        break;
+    }
 }
 
 // ----------------------------------------------------------------------------
Index: src/x11/evtloop.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/x11/evtloop.cpp,v
retrieving revision 1.28
diff -u -r1.28 evtloop.cpp
--- src/x11/evtloop.cpp	2006/05/23 11:04:36	1.28
+++ src/x11/evtloop.cpp	2006/05/24 16:09:52
@@ -430,6 +430,9 @@
 {
     XEvent event;
 
+    // Start off by checking if any of our child processes have finished.
+    wxCheckForFinishedChildren();
+
     // TODO allowing for threads, as per e.g. wxMSW
 
     // This now waits until either an X event is received,
Index: include/wx/x11/private.h
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/include/wx/x11/private.h,v
retrieving revision 1.16
diff -u -r1.16 private.h
--- include/wx/x11/private.h	2005/08/02 18:16:50	1.16
+++ include/wx/x11/private.h	2006/05/24 16:09:52
@@ -80,5 +80,9 @@
 bool wxSetWMDecorations(Window w, long style);
 bool wxMWMIsRunning(Window w);
 
+// Checks if any of our children are finished.
+// implemented in src/x11/utils.cpp
+void wxCheckForFinishedChildren();
+
 #endif
 // _WX_PRIVATE_H_

 	  	 
