commit bd38db7e8bd5fcde352cb39a868edf00b1a27b72
Author: Vadim Zeitlin <vadim@wxwidgets.org>
Date:   Thu Jan 27 14:25:09 2011 +0100

    Fix wxWrapSizer minimal size calculation.
    
    Add a unit test checking that wxWrapSizer::CalcMin() returns the expected
    results.
    
    Closes #12464.

diff --git a/docs/changes.txt b/docs/changes.txt
index 31750ae..c8a96d6 100644
--- a/docs/changes.txt
+++ b/docs/changes.txt
@@ -458,6 +458,7 @@ All (GUI):
 - wxPropertyGrid: Added "HasAlpha" attribute for wxColourProperty.
 - Added support for saving PNG files with palette (troelsk).
 - Added support for saving as GIF and animated GIF (troelsk).
+- Fix wxWrapSizer minimal size calculation (Catalin Raceanu).
 
 GTK:
 
diff --git a/include/wx/window.h b/include/wx/window.h
index 1527a1e..0fd8424 100644
--- a/include/wx/window.h
+++ b/include/wx/window.h
@@ -525,12 +525,7 @@ class WXDLLIMPEXP_CORE wxWindowBase : public wxEvtHandler
     // tells the item how much more space there is available in the opposite
     // direction (-1 if unknown).
     virtual bool
-    InformFirstDirection(int WXUNUSED(direction),
-                         int WXUNUSED(size),
-                         int WXUNUSED(availableOtherDir))
-    {
-        return false;
-    }
+    InformFirstDirection(int direction, int size, int availableOtherDir);
 
     // sends a size event to the window using its current size -- this has an
     // effect of refreshing the window layout
diff --git a/src/common/wincmn.cpp b/src/common/wincmn.cpp
index 76aca90..2c58ce1 100644
--- a/src/common/wincmn.cpp
+++ b/src/common/wincmn.cpp
@@ -853,6 +853,16 @@ wxSize wxWindowBase::GetWindowBorderSize() const
     return size*2;
 }
 
+bool
+wxWindowBase::InformFirstDirection(int direction,
+                                   int size,
+                                   int availableOtherDir)
+{
+    return GetSizer() && GetSizer()->InformFirstDirection(direction,
+                                                          size,
+                                                          availableOtherDir);
+}
+
 wxSize wxWindowBase::GetEffectiveMinSize() const
 {
     // merge the best size with the min size, giving priority to the min size
diff --git a/tests/sizers/wrapsizer.cpp b/tests/sizers/wrapsizer.cpp
new file mode 100644
index 0000000..90c6f8a
--- /dev/null
+++ b/tests/sizers/wrapsizer.cpp
@@ -0,0 +1,126 @@
+///////////////////////////////////////////////////////////////////////////////
+// Name:        tests/sizers/wrapsizer.cpp
+// Purpose:     Unit tests for wxWrapSizer
+// Author:      Catalin Raceanu
+// Created:     2010-10-23
+// RCS-ID:      $Id:$
+// Copyright:   (c) 2010 wxWidgets development team
+///////////////////////////////////////////////////////////////////////////////
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+#include "testprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+#ifndef WX_PRECOMP
+    #include "wx/app.h"
+#endif // WX_PRECOMP
+
+#include "wx/wrapsizer.h"
+
+#include "asserthelper.h"
+
+// ----------------------------------------------------------------------------
+// test class
+// ----------------------------------------------------------------------------
+
+class WrapSizerTestCase : public CppUnit::TestCase
+{
+public:
+    WrapSizerTestCase() { }
+
+    virtual void setUp();
+    virtual void tearDown();
+
+private:
+    CPPUNIT_TEST_SUITE( WrapSizerTestCase );
+        CPPUNIT_TEST( CalcMin );
+    CPPUNIT_TEST_SUITE_END();
+
+    void CalcMin();
+
+    wxWindow *m_win;
+    wxSizer *m_sizer;
+
+    DECLARE_NO_COPY_CLASS(WrapSizerTestCase)
+};
+
+// register in the unnamed registry so that these tests are run by default
+CPPUNIT_TEST_SUITE_REGISTRATION( WrapSizerTestCase );
+
+// also include in it's own registry so that these tests can be run alone
+CPPUNIT_TEST_SUITE_NAMED_REGISTRATION( WrapSizerTestCase, "WrapSizerTestCase" );
+
+// ----------------------------------------------------------------------------
+// test initialization
+// ----------------------------------------------------------------------------
+
+void WrapSizerTestCase::setUp()
+{
+    m_win = new wxWindow(wxTheApp->GetTopWindow(), wxID_ANY);
+    m_win->SetClientSize(180, 240);
+
+    m_sizer = new wxWrapSizer(wxHORIZONTAL);
+    m_win->SetSizer(m_sizer);
+}
+
+void WrapSizerTestCase::tearDown()
+{
+    delete m_win;
+    m_win = NULL;
+
+    m_sizer = NULL;
+}
+
+// ----------------------------------------------------------------------------
+// tests themselves
+// ----------------------------------------------------------------------------
+
+void WrapSizerTestCase::CalcMin()
+{
+    const wxSize sizeTotal = m_win->GetClientSize();
+    wxSize sizeMinExpected;
+
+    // With a single child the min size must be the same as child size.
+    const wxSize sizeChild1 = wxSize(sizeTotal.x/2 - 10, sizeTotal.y/4);
+    sizeMinExpected = sizeChild1;
+
+    wxWindow * const
+        child1 = new wxWindow(m_win, wxID_ANY, wxDefaultPosition, sizeChild1);
+    child1->SetBackgroundColour(*wxRED);
+    m_sizer->Add(child1);
+    m_win->Layout();
+
+    CPPUNIT_ASSERT_EQUAL( sizeMinExpected, m_sizer->CalcMin() );
+
+    // If both children can fit either in the same row or the same column, the
+    // minimal size of the sizer is the max of their minimal sizes.
+    const wxSize sizeChild2 = wxSize(sizeTotal.x/2 + 10, sizeTotal.y/3);
+    sizeMinExpected.IncTo(sizeChild2);
+
+    wxWindow * const
+        child2 = new wxWindow(m_win, wxID_ANY, wxDefaultPosition, sizeChild2);
+    child2->SetBackgroundColour(*wxYELLOW);
+    m_sizer->Add(child2);
+    m_win->Layout();
+
+    CPPUNIT_ASSERT_EQUAL( sizeMinExpected, m_sizer->CalcMin() );
+
+    // Three children will take at least two rows so the minimal size in
+    // vertical direction must increase.
+    const wxSize sizeChild3 = wxSize(sizeTotal.x/2, sizeTotal.y/5);
+    sizeMinExpected.y += sizeChild3.y;
+
+    wxWindow * const
+        child3 = new wxWindow(m_win, wxID_ANY, wxDefaultPosition, sizeChild3);
+    child3->SetBackgroundColour(*wxGREEN);
+    m_sizer->Add(child3);
+    m_win->Layout();
+
+    CPPUNIT_ASSERT_EQUAL( sizeMinExpected, m_sizer->CalcMin() );
+}
diff --git a/tests/test.bkl b/tests/test.bkl
index 33d577e..bea939d 100644
--- a/tests/test.bkl
+++ b/tests/test.bkl
@@ -199,6 +199,7 @@
              -->
             net/socket.cpp
             sizers/boxsizer.cpp
+            sizers/wrapsizer.cpp
             validators/valnum.cpp
             window/clientsize.cpp
             window/setsize.cpp
