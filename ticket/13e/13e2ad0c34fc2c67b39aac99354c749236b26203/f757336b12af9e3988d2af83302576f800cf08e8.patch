Index: tests/sizers/wrapsizer.cpp
===================================================================
--- tests/sizers/wrapsizer.cpp	(revision 0)
+++ tests/sizers/wrapsizer.cpp	(revision 0)
@@ -0,0 +1,116 @@
+///////////////////////////////////////////////////////////////////////////////
+// Name:        tests/sizers/wrapsizer.cpp
+// Purpose:     Unit tests for wxWrapSizer
+// Author:      Vadim Zeitlin
+// Created:     2010-10-23
+// RCS-ID:      
+// Copyright:   (c) 2010 Vadim Zeitlin <vadim@wxwidgets.org>
+///////////////////////////////////////////////////////////////////////////////
+
+// ----------------------------------------------------------------------------
+// headers
+// ----------------------------------------------------------------------------
+
+#include "testprec.h"
+
+#ifdef __BORLANDC__
+    #pragma hdrstop
+#endif
+
+#ifndef WX_PRECOMP
+    #include "wx/app.h"
+    #include "wx/wrapsizer.h"
+#endif // WX_PRECOMP
+
+inline std::ostream& operator<<(std::ostream& o, const wxSize& s)
+{
+    return o << s.x << 'x' << s.y;
+}
+
+// ----------------------------------------------------------------------------
+// test class
+// ----------------------------------------------------------------------------
+
+class WrapSizerTestCase : public CppUnit::TestCase
+{
+public:
+    WrapSizerTestCase() { }
+
+    virtual void setUp();
+    virtual void tearDown();
+
+private:
+    CPPUNIT_TEST_SUITE( WrapSizerTestCase );
+        CPPUNIT_TEST( CalcMin );
+    CPPUNIT_TEST_SUITE_END();
+
+    void CalcMin();
+
+    wxWindow *m_win;
+    wxSizer *m_sizer;
+
+    DECLARE_NO_COPY_CLASS(WrapSizerTestCase)
+};
+
+// register in the unnamed registry so that these tests are run by default
+CPPUNIT_TEST_SUITE_REGISTRATION( WrapSizerTestCase );
+
+// also include in it's own registry so that these tests can be run alone
+CPPUNIT_TEST_SUITE_NAMED_REGISTRATION( WrapSizerTestCase, "WrapSizerTestCase" );
+
+// ----------------------------------------------------------------------------
+// test initialization
+// ----------------------------------------------------------------------------
+
+void WrapSizerTestCase::setUp()
+{
+    m_win = new wxWindow(wxTheApp->GetTopWindow(), wxID_ANY);
+    m_win->SetClientSize(180, 200);
+
+    m_sizer = new wxWrapSizer(wxHORIZONTAL);
+    m_win->SetSizer(m_sizer);
+}
+
+void WrapSizerTestCase::tearDown()
+{
+    delete m_win;
+    m_win = NULL;
+
+    m_sizer = NULL;
+}
+
+// ----------------------------------------------------------------------------
+// tests themselves
+// ----------------------------------------------------------------------------
+
+void WrapSizerTestCase::CalcMin()
+{
+    const wxSize sizeTotal = m_win->GetClientSize();
+
+    const wxSize sizeChild1 = wxSize(70, 60);
+    wxWindow * const
+        child1 = new wxWindow(m_win, wxID_ANY, wxDefaultPosition, sizeChild1);
+    m_sizer->Add(child1);
+    m_win->Layout();
+    // single child;
+    // expected: minSize == sizeChild1
+    CPPUNIT_ASSERT_EQUAL( sizeChild1, m_sizer->CalcMin() );
+
+    const wxSize sizeChild2 = wxSize(90, 95);
+    wxWindow * const
+        child2 = new wxWindow(m_win, wxID_ANY, wxDefaultPosition, sizeChild2);
+    m_sizer->Add(child2);
+    m_win->Layout();
+    // both children on the first row;
+    // expected: minSize == size( max(child1.x, child2.x), max(child1.y, child2.y) )
+    CPPUNIT_ASSERT_EQUAL( wxSize(90, 95), m_sizer->CalcMin() );
+
+    const wxSize sizeChild3 = wxSize(85, 80);
+    wxWindow * const
+        child3 = new wxWindow(m_win, wxID_ANY, wxDefaultPosition, sizeChild3);
+    m_sizer->Add(child3);
+    m_win->Layout();
+    // two children on the first row, the third child on the second row;
+    // expected: minSize == size( max(max(child1.x, child2.x), child3.x), max(child1.y, child2.y) + child3.y )
+    CPPUNIT_ASSERT_EQUAL( wxSize(90, 175), m_sizer->CalcMin() );
+}
Index: tests/test.bkl
===================================================================
--- tests/test.bkl	(revision 65008)
+++ tests/test.bkl	(working copy)
@@ -158,6 +158,7 @@
              -->
             net/socket.cpp
             sizers/boxsizer.cpp
+            sizers/wrapsizer.cpp
             window/clientsize.cpp
             window/setsize.cpp
         </sources>
