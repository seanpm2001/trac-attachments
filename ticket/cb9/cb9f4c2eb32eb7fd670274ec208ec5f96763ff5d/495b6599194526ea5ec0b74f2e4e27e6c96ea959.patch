Index: src/common/event.cpp
===================================================================
--- src/common/event.cpp	(revision 69102)
+++ src/common/event.cpp	(working copy)
@@ -1629,7 +1629,7 @@
         // call Disconnect() invalidating the current node
         node = node->GetNext();
 
-        if ( event.GetEventType() == entry->m_eventType )
+        if ( entry->IsValid() && event.GetEventType() == entry->m_eventType )
         {
             wxEvtHandler *handler = entry->m_fn->GetEvtHandler();
             if ( !handler )
Index: include/wx/event.h
===================================================================
--- include/wx/event.h	(revision 69102)
+++ include/wx/event.h	(working copy)
@@ -2900,13 +2900,18 @@
     wxDynamicEventTableEntry(int evType, int winid, int idLast,
                              wxEventFunctor* fn, wxObject *data)
         : wxEventTableEntryBase(winid, idLast, fn, data),
-          m_eventType(evType)
+          m_eventType(evType),
+          m_valid( true )
     { }
 
+    void SetValid( bool isValid ) { m_valid = isValid; }
+    bool IsValid() { return m_valid; }
+    
     // not a reference here as we can't keep a reference to a temporary int
     // created to wrap the constant value typically passed to Connect() - nor
     // do we need it
     int m_eventType;
+    bool m_valid;
 
 private:
     wxDECLARE_NO_ASSIGN_CLASS(wxDynamicEventTableEntry);
@@ -3248,7 +3253,7 @@
                                         wxEvent& event);
 
     virtual bool SearchEventTable(wxEventTable& table, wxEvent& event);
-    bool SearchDynamicEventTable( wxEvent& event );
+    virtual bool SearchDynamicEventTable( wxEvent& event );
 
     // Avoid problems at exit by cleaning up static hash table gracefully
     void ClearEventHashTable() { GetEventHashTable().Clear(); }
