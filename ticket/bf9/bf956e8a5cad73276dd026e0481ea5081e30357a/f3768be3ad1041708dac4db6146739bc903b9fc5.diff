*** demo-orig.cpp	2008-03-03 11:14:56.000000000 +0100
--- demo.cpp	2008-03-03 14:08:18.000000000 +0100
***************
*** 83,88 ****
--- 83,134 ----
      #include "mondrian.xpm"
  #endif
  
+ // IDs for the controls and the menu commands
+ enum
+ {
+     // menu items
+     HelpDemo_Quit = 100,
+     HelpDemo_New_Frame,
+     HelpDemo_Help_Index,
+     HelpDemo_Help_Classes,
+     HelpDemo_Help_Functions,
+     HelpDemo_Help_Help,
+     HelpDemo_Help_Search,
+     HelpDemo_Help_ContextHelp,
+     HelpDemo_Help_DialogContextHelp,
+ 
+     HelpDemo_Html_Help_Index,
+     HelpDemo_Html_Help_Classes,
+     HelpDemo_Html_Help_Functions,
+     HelpDemo_Html_Help_Help,
+     HelpDemo_Html_Help_Search,
+ 
+     HelpDemo_Advanced_Html_Help_Index,
+     HelpDemo_Advanced_Html_Help_Classes,
+     HelpDemo_Advanced_Html_Help_Functions,
+     HelpDemo_Advanced_Html_Help_Help,
+     HelpDemo_Advanced_Html_Help_Search,
+     HelpDemo_Advanced_Html_Help_Modal,
+ 
+     HelpDemo_MS_Html_Help_Index,
+     HelpDemo_MS_Html_Help_Classes,
+     HelpDemo_MS_Html_Help_Functions,
+     HelpDemo_MS_Html_Help_Help,
+     HelpDemo_MS_Html_Help_Search,
+ 
+     HelpDemo_Best_Help_Index,
+     HelpDemo_Best_Help_Classes,
+     HelpDemo_Best_Help_Functions,
+     HelpDemo_Best_Help_Help,
+     HelpDemo_Best_Help_Search,
+ 
+     HelpDemo_Help_KDE,
+     HelpDemo_Help_GNOME,
+     HelpDemo_Help_Netscape,
+     // controls start here (the numbers are, of course, arbitrary)
+     HelpDemo_Text = 1000
+ };
+ 
  // ----------------------------------------------------------------------------
  // private classes
  // ----------------------------------------------------------------------------
***************
*** 101,106 ****
--- 147,158 ----
  
      // do some clean up here
      virtual int OnExit();
+ 
+     // event handlers (these functions should _not_ be virtual)
+     void OnNewFrame(wxCommandEvent& event);
+ 
+     // any class wishing to process wxWidgets events must use this macro
+    DECLARE_EVENT_TABLE()
  };
  
  // Define a new frame type: this is going to be our main frame
***************
*** 141,146 ****
--- 193,200 ----
  
      void ShowHelp(int commandId, wxHelpControllerBase& helpController);
  
+     void OnActivate(wxActivateEvent& event);
+ 
  private:
  #if USE_EXT_HELP
     wxExtHelpController      m_help;
***************
*** 181,230 ****
  // constants
  // ----------------------------------------------------------------------------
  
- // IDs for the controls and the menu commands
- enum
- {
-     // menu items
-     HelpDemo_Quit = 100,
-     HelpDemo_Help_Index,
-     HelpDemo_Help_Classes,
-     HelpDemo_Help_Functions,
-     HelpDemo_Help_Help,
-     HelpDemo_Help_Search,
-     HelpDemo_Help_ContextHelp,
-     HelpDemo_Help_DialogContextHelp,
- 
-     HelpDemo_Html_Help_Index,
-     HelpDemo_Html_Help_Classes,
-     HelpDemo_Html_Help_Functions,
-     HelpDemo_Html_Help_Help,
-     HelpDemo_Html_Help_Search,
- 
-     HelpDemo_Advanced_Html_Help_Index,
-     HelpDemo_Advanced_Html_Help_Classes,
-     HelpDemo_Advanced_Html_Help_Functions,
-     HelpDemo_Advanced_Html_Help_Help,
-     HelpDemo_Advanced_Html_Help_Search,
-     HelpDemo_Advanced_Html_Help_Modal,
- 
-     HelpDemo_MS_Html_Help_Index,
-     HelpDemo_MS_Html_Help_Classes,
-     HelpDemo_MS_Html_Help_Functions,
-     HelpDemo_MS_Html_Help_Help,
-     HelpDemo_MS_Html_Help_Search,
- 
-     HelpDemo_Best_Help_Index,
-     HelpDemo_Best_Help_Classes,
-     HelpDemo_Best_Help_Functions,
-     HelpDemo_Best_Help_Help,
-     HelpDemo_Best_Help_Search,
- 
-     HelpDemo_Help_KDE,
-     HelpDemo_Help_GNOME,
-     HelpDemo_Help_Netscape,
-     // controls start here (the numbers are, of course, arbitrary)
-     HelpDemo_Text = 1000
- };
  
  // ----------------------------------------------------------------------------
  // event tables and other macros for wxWidgets
--- 235,240 ----
***************
*** 267,272 ****
--- 277,283 ----
      EVT_MENU(HelpDemo_Help_KDE, MyFrame::OnHelp)
      EVT_MENU(HelpDemo_Help_GNOME, MyFrame::OnHelp)
      EVT_MENU(HelpDemo_Help_Netscape, MyFrame::OnHelp)
+     EVT_ACTIVATE(MyFrame::OnActivate)
  END_EVENT_TABLE()
  
  // Create a new application object: this macro will allow wxWidgets to create
***************
*** 287,292 ****
--- 298,313 ----
  // `Main program' equivalent: the program execution "starts" here
  bool MyApp::OnInit()
  {
+ 
+     wxMenu *menuFile = new wxMenu;
+ 
+     menuFile->Append(HelpDemo_Help_Index, _T("&New Main window"));
+     // now append the freshly created menu to the menu bar...
+     wxMenuBar *menuBar = new wxMenuBar;
+     menuBar->Append(menuFile, _T("&Program menu bar"));
+     wxMenuBar::MacSetCommonMenuBar(menuBar);
+ 
+ 
      // Create a simple help provider to make SetHelpText() do something.
      // Note that this must be set before any SetHelpText() calls are made.
  #if USE_SIMPLE_HELP_PROVIDER
***************
*** 381,386 ****
--- 402,476 ----
      return 0;
  }
  
+ void MyApp::OnNewFrame(wxCommandEvent& event) {
+     // Create the main application window
+     MyFrame *frame = new MyFrame(_T("HelpDemo wxWidgets App"),
+                                  wxPoint(50, 50), wxSize(450, 340));
+ 
+ #if USE_SIMPLE_HELP_PROVIDER
+     wxSimpleHelpProvider* provider = wxHelpProvider::Get();
+ #else
+     wxHelpControllerHelpProvider* provider = 
+       reinterpret_cast<wxHelpControllerHelpProvider *>(wxHelpProvider::Get());
+ #endif
+     wxHelpProvider::Set(provider);
+ 
+ #if !USE_SIMPLE_HELP_PROVIDER
+ #if wxUSE_MS_HTML_HELP && !defined(__WXUNIVERSAL__)
+     provider->SetHelpController(& frame->GetMSHtmlHelpController());
+ #else
+     provider->SetHelpController(& frame->GetHelpController());
+ #endif
+ #endif // !USE_SIMPLE_HELP_PROVIDER
+ 
+     frame->Show(true);
+     SetTopWindow(frame);
+ 
+     // initialise the help system: this means that we'll use doc.hlp file under
+     // Windows and that the HTML docs are in the subdirectory doc for platforms
+     // using HTML help
+     if ( !frame->GetHelpController().Initialize(_T("doc")) )
+     {
+         wxLogError(wxT("Cannot initialize the help system, aborting."));
+ 
+         return;
+     }
+ 
+ #if wxUSE_MS_HTML_HELP && !defined(__WXUNIVERSAL__)
+     if( !frame->GetMSHtmlHelpController().Initialize(_T("doc")) )
+     {
+         wxLogError(wxT("Cannot initialize the MS HTML Help system."));
+     }
+ #endif
+ 
+ #if wxUSE_MS_HTML_HELP && wxUSE_WXHTML_HELP && !defined(__WXUNIVERSAL__)
+     // you need to call Initialize in order to use wxBestHelpController
+     if( !frame->GetBestHelpController().Initialize(_T("doc")) )
+     {
+         wxLogError(wxT("Cannot initialize the best help system, aborting."));
+     }
+ #endif
+ 
+ #if USE_HTML_HELP
+     // initialise the advanced HTML help system: this means that the HTML docs are in .htb
+     // (zipped) form
+     if ( !frame->GetAdvancedHtmlHelpController().Initialize(_T("doc")) )
+     {
+         wxLogError(wxT("Cannot initialize the advanced HTML help system, aborting."));
+ 
+         return;
+     }
+ #endif
+ }
+ 
+ 
+ // the event tables connect the wxWidgets events with the functions (event
+ // handlers) which process them. It can be also done at run-time, but for the
+ // simple menu events like this the static method is much simpler.
+ BEGIN_EVENT_TABLE(MyApp, wxApp)
+     EVT_MENU(HelpDemo_New_Frame,  MyApp::OnNewFrame)
+ END_EVENT_TABLE()
+ 
  // ----------------------------------------------------------------------------
  // main frame
  // ----------------------------------------------------------------------------
***************
*** 668,673 ****
--- 758,773 ----
     }
  }
  
+ void MyFrame::OnActivate(wxActivateEvent& event) {
+ 	if (event.GetActive()) 
+ 		wxGetApp().SetTopWindow(this);
+ 
+ 	// don't forget to propagate this event.
+ 	// this would at least break menu bar updating
+ 	// in the help system.
+ 	event.Skip(true);
+ 		
+ }
  // ----------------------------------------------------------------------------
  // MyModalDialog
  // Demonstrates context-sensitive help

 	  	 
