diff --git a/build/tools/build-wxwidgets.py b/build/tools/build-wxwidgets.py
index f04e15f..6212c76 100755
--- a/build/tools/build-wxwidgets.py
+++ b/build/tools/build-wxwidgets.py
@@ -207,13 +207,13 @@ def main(scriptName, args):
         "mac_framework" : (False, "Install the Mac build as a framework"),
         "mac_framework_prefix" 
                         : (defFwPrefix, "Prefix where the framework should be installed. Default: %s" % defFwPrefix),
-        "cairo"         : (False, "Enable dynamicly loading the Cairo lib for wxGraphicsContext on MSW"),
+        "cairo"         : (False, "Enable dynamically loading the Cairo lib for wxGraphicsContext on MSW"),
         "no_config"     : (False, "Turn off configure step on autoconf builds"),
         "config_only"   : (False, "Only run the configure step and then exit"),
         "rebake"        : (False, "Regenerate Bakefile and autoconf files"),
         "unicode"       : (False, "Build the library with unicode support"),
         "wxpython"      : (False, "Build the wxWidgets library with all options needed by wxPython"),
-        "cocoa"         : (False, "Build the old Mac Cooca port."),
+        "cocoa"         : (False, "Build the old Mac Cocoa port."),
         "osx_cocoa"     : (False, "Build the new Cocoa port"),
         "shared"        : (False, "Build wx as a dynamic library"),
         "extra_make"    : ("", "Extra args to pass on [n]make's command line."),
diff --git a/include/wx/html/htmlwin.h b/include/wx/html/htmlwin.h
index 176cc9a..7c716df 100644
--- a/include/wx/html/htmlwin.h
+++ b/include/wx/html/htmlwin.h
@@ -226,8 +226,8 @@ private:
 //                  Purpose of this class is to display HTML page (either local
 //                  file or downloaded via HTTP protocol) in a window. Width of
 //                  window is constant - given in constructor - virtual height
-//                  is changed dynamicly depending on page size.  Once the
-//                  window is created you can set it's content by calling
+//                  is changed dynamically depending on page size.  Once the
+//                  window is created you can set its content by calling
 //                  SetPage(text) or LoadPage(filename).
 // ----------------------------------------------------------------------------
 
diff --git a/include/wx/wizard.h b/include/wx/wizard.h
index a444f0d..82dc438 100644
--- a/include/wx/wizard.h
+++ b/include/wx/wizard.h
@@ -113,7 +113,7 @@ private:
 // wxWizardPageSimple just returns the pointers given to the ctor and is useful
 // to create a simple wizard where the order of pages never changes.
 //
-// OTOH, it is also possible to dynamicly decide which page to return (i.e.
+// OTOH, it is also possible to dynamically decide which page to return (i.e.
 // depending on the user's choices) as the wizard sample shows - in order to do
 // this, you must derive from wxWizardPage directly.
 // ----------------------------------------------------------------------------
diff --git a/src/cocoa/colour.mm b/src/cocoa/colour.mm
index 50302bd..d7607a7 100644
--- a/src/cocoa/colour.mm
+++ b/src/cocoa/colour.mm
@@ -1,5 +1,5 @@
 /////////////////////////////////////////////////////////////////////////////
-// Name:        src/cococa/colour.mm
+// Name:        src/cocoa/colour.mm
 // Purpose:     wxColour class
 // Author:      David Elliott
 // Modified by:
diff --git a/src/cocoa/dc.mm b/src/cocoa/dc.mm
index e8db94d..0c10821 100644
--- a/src/cocoa/dc.mm
+++ b/src/cocoa/dc.mm
@@ -649,7 +649,7 @@ void wxCocoaDCImpl::ComputeScaleAndOrigin(void)
   m_scaleX = m_logicalScaleX * m_userScaleX;
   m_scaleY = m_logicalScaleY * m_userScaleY;
 
-  // CMB: if scale has changed call SetPen to recalulate the line width
+  // CMB: if scale has changed call SetPen to recalculate the line width
   if (m_scaleX != origScaleX || m_scaleY != origScaleY)
   {
 #if 0
diff --git a/src/cocoa/window.mm b/src/cocoa/window.mm
index 3d52a19..9463e33 100644
--- a/src/cocoa/window.mm
+++ b/src/cocoa/window.mm
@@ -556,7 +556,7 @@ void wxWindowCocoaScrollView::Encapsulate()
     // Set the scroll view autoresizingMask to match the current NSView
     [m_cocoaNSScrollView setAutoresizingMask: [m_owner->GetNSView() autoresizingMask]];
     [m_owner->GetNSView() setAutoresizingMask: NSViewNotSizable];
-    // NOTE: replaceSubView will cause m_cocaNSView to be released
+    // NOTE: replaceSubView will cause m_cocoaNSView to be released
     // except when it hasn't been added into an NSView hierarchy in which
     // case it doesn't need to be and this should work out to a no-op
     m_owner->CocoaReplaceView(m_owner->GetNSView(), m_cocoaNSScrollView);
@@ -1451,10 +1451,10 @@ bool wxWindow::Show(bool show)
         // Create a new view to stand in for the real one (via wxWindowCocoaHider) and replace
         // the real one with the stand in.
         m_cocoaHider = new wxWindowCocoaHider(this);
-        // NOTE: replaceSubview:with will cause m_cocaNSView to be
+        // NOTE: replaceSubview:with will cause m_cocoaNSView to be
         // (auto)released which balances out addSubview
         CocoaReplaceView(cocoaView, m_cocoaHider->GetNSView());
-        // m_coocaNSView is now only retained by us
+        // m_cocoaNSView is now only retained by us
         wxASSERT([m_cocoaHider->GetNSView() superview]);
         wxASSERT(![cocoaView superview]);
     }
diff --git a/src/generic/dcpsg.cpp b/src/generic/dcpsg.cpp
index 1fcc361..b5c493b 100644
--- a/src/generic/dcpsg.cpp
+++ b/src/generic/dcpsg.cpp
@@ -1659,7 +1659,7 @@ void wxPostScriptDCImpl::ComputeScaleAndOrigin()
 
     wxDCImpl::ComputeScaleAndOrigin();
 
-    // If scale has changed call SetPen to recalulate the line width
+    // If scale has changed call SetPen to recalculate the line width
     // and SetFont to recalculate font size
     if ( wxRealPoint(m_scaleX, m_scaleY) != origScale && m_pen.IsOk() )
     {
diff --git a/src/generic/dirctrlg.cpp b/src/generic/dirctrlg.cpp
index 5b6e387..bbbc4ef 100644
--- a/src/generic/dirctrlg.cpp
+++ b/src/generic/dirctrlg.cpp
@@ -800,7 +800,7 @@ void wxGenericDirCtrl::PopulateNode(wxTreeItemId parentId)
 
 #if (defined(__WINDOWS__) && !defined(__WXWINCE__)) || defined(__DOS__) || defined(__OS2__)
     // Check if this is a root directory and if so,
-    // whether the drive is avaiable.
+    // whether the drive is available.
     if (!wxIsDriveAvailable(dirName))
     {
         data->m_isExpanded = false;
diff --git a/src/gtk/dcclient.cpp b/src/gtk/dcclient.cpp
index a116153..2c4a716 100644
--- a/src/gtk/dcclient.cpp
+++ b/src/gtk/dcclient.cpp
@@ -1989,7 +1989,7 @@ void wxWindowDCImpl::ComputeScaleAndOrigin()
 
     wxDCImpl::ComputeScaleAndOrigin();
 
-    // if scale has changed call SetPen to recalulate the line width
+    // if scale has changed call SetPen to recalculate the line width
     if ( wxRealPoint(m_scaleX, m_scaleY) != origScale && m_pen.IsOk() )
     {
         // this is a bit artificial, but we need to force wxDC to think the pen
diff --git a/src/gtk1/dcclient.cpp b/src/gtk1/dcclient.cpp
index d0a7c12..4c5ead8 100644
--- a/src/gtk1/dcclient.cpp
+++ b/src/gtk1/dcclient.cpp
@@ -2101,7 +2101,7 @@ void wxWindowDCImpl::ComputeScaleAndOrigin()
 
     wxGTKDCImpl::ComputeScaleAndOrigin();
 
-    // if scale has changed call SetPen to recalulate the line width
+    // if scale has changed call SetPen to recalculate the line width
     if ( wxRealPoint(m_scaleX, m_scaleY) != origScale && m_pen.IsOk() )
     {
         // this is a bit artificial, but we need to force wxDC to think the pen
diff --git a/src/motif/xmcombo/combobox.doc b/src/motif/xmcombo/combobox.doc
index 41ec4ac..798a7af 100644
--- a/src/motif/xmcombo/combobox.doc
+++ b/src/motif/xmcombo/combobox.doc
@@ -30,7 +30,7 @@ Whats new? (changes since the last version are marked with an asterisk)
     them. These mirror resources instead belong to child widgets. With 1.23 
     the resource list (which can be queried by XtGetResourceList()) contains 
     entries for all mirror resources although the initial value setting is 
-    always zero. But this should'nt matter. You can switch off these entries
+    always zero. But this shouldn't matter. You can switch off these entries
     by setting -DDONT_LOOK_IN_THE_MIRROR when compiling ComboBox.c.
   - The selection policies XmSINGLE_SELECT and XmBROWSE_SELECT are now
     supported.
@@ -172,7 +172,7 @@ the place you're living in, don't hesitate... 8-)
    This should do it's job with twm as well as fvwm. With olwm you shouldn't
    need to set one of the special resources.
 
-6. The combo box has been reported to run sucessfully on:
+6. The combo box has been reported to run successfully on:
    Silicon Graphics, Sun, HP, IBM RS6000, PC, even VMS!
    Linux, of course...!
    Attention VMS folks! You'll find two files called "motif11.opt" or 
diff --git a/src/stc/README.txt b/src/stc/README.txt
index 4b66121..a6b185a 100644
--- a/src/stc/README.txt
+++ b/src/stc/README.txt
@@ -2,7 +2,7 @@ This contrib is the wxStyledTextCtrl, which is a wrapper around the
 Scintilla edit control.  (See www.scintilla.org)
 
 There is still VERY MUCH to be done, most notable of which is a more
-advanced sample that exercises more of the code.  (I havn't tested
+advanced sample that exercises more of the code.  (I haven't tested
 AutoComplete or CallTips, or most of the event types at all yet.)  And
 also documentation, adding wrappers for some new scintilla
 functionality, building and testing on wxGTK, etc.  Be patient, it all
@@ -11,11 +11,11 @@ will get there soon.
 
 
 Let me describe a bit about the architecture I am implementing...
-Obviously there is the Platform layer which implements the varioius
+Obviously there is the Platform layer which implements the various
 platform classes by using wxWindows classes and filling in where
 needed.  Then there is a ScintillaWX class that is derived from
 ScintillaBase and implements the necessary virtual methods that
-Scintilla needs to fully funciton.  This class however is not meant to
+Scintilla needs to fully function.  This class however is not meant to
 ever be used directly by wx programmers.  I call it one end of the
 bridge between the wx and Scintilla worlds.  The other end of the
 bridge is a class called wxStyledTextCtrl that looks, feels and acts
@@ -37,7 +37,7 @@ wxStyledTextCtrl derives from wxControl so it has a window that can be
 drawn upon.  When a wxStyledTextCtrl is constructed it constructs a
 ScintillaWX for itself and passes itself to the scintilla object to be
 set as the wMain and wDraw attributes.  All method calls on the STC
-are sent over the bridge in the form of calls to ScintiallWX::WndProc.
+are sent over the bridge in the form of calls to ScintillaWX::WndProc.
 All notifications are sent back over the bridge and turned into
 wxEvents.
 
diff --git a/src/stc/gen_iface.py b/src/stc/gen_iface.py
index af2adbb..7361db4 100755
--- a/src/stc/gen_iface.py
+++ b/src/stc/gen_iface.py
@@ -58,7 +58,7 @@ cmdValues = [ 2011,
             ]
 
 
-# Should a funciton be also generated for the CMDs?
+# Should a function be also generated for the CMDs?
 FUNC_FOR_CMD = 1
 
 
diff --git a/src/x11/dcclient.cpp b/src/x11/dcclient.cpp
index 813418e..1b4f0c3 100644
--- a/src/x11/dcclient.cpp
+++ b/src/x11/dcclient.cpp
@@ -2321,7 +2321,7 @@ void wxWindowDCImpl::ComputeScaleAndOrigin()
 
     wxDCImpl::ComputeScaleAndOrigin();
 
-    /* CMB: if scale has changed call SetPen to recalulate the line width */
+    /* CMB: if scale has changed call SetPen to recalculate the line width */
     if ((m_scaleX != origScaleX || m_scaleY != origScaleY) &&
         (m_pen.IsOk()))
     {
