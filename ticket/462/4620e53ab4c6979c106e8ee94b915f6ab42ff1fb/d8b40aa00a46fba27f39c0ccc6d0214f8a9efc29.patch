Index: include/wx/msw/accel.h
===================================================================
--- include/wx/msw/accel.h	(revision 76075)
+++ include/wx/msw/accel.h	(working copy)
@@ -11,6 +11,8 @@
 #ifndef _WX_ACCEL_H_
 #define _WX_ACCEL_H_
 
+#include "wx/vector.h"
+
 class WXDLLIMPEXP_FWD_CORE wxWindow;
 
 // ----------------------------------------------------------------------------
@@ -41,5 +43,16 @@
     DECLARE_DYNAMIC_CLASS(wxAcceleratorTable)
 };
 
+#ifndef __VISUALC6__
+class wxAcceleratorVector : public wxVector<wxAcceleratorEntry>
+{
+public:
+    wxAcceleratorTable ToAcceleratorTable() const
+    {
+        return wxAcceleratorTable(size(), &at(0));
+    }
+};
 #endif
+
+#endif
     // _WX_ACCEL_H_
Index: samples/printing/printing.cpp
===================================================================
--- samples/printing/printing.cpp	(revision 76075)
+++ samples/printing/printing.cpp	(working copy)
@@ -323,11 +323,9 @@
     menuModalKind->AppendRadioItem(WXPRINT_FRAME_MODAL_NON, "&Not modal");
     file_menu->AppendSubMenu(menuModalKind, "Preview frame &modal kind");
 #if wxUSE_ACCEL
-    // Accelerators
-    wxAcceleratorEntry entries[1];
-    entries[0].Set(wxACCEL_CTRL, (int) 'V', wxID_PREVIEW);
-    wxAcceleratorTable accel(1, entries);
-    SetAcceleratorTable(accel);
+    wxAcceleratorVector vec;
+    vec.push_back(wxAcceleratorEntry(wxACCEL_CTRL, (int) 'V', wxID_PREVIEW));
+    SetAcceleratorTable(vec.ToAcceleratorTable());
 #endif
 
 #if wxUSE_POSTSCRIPT
