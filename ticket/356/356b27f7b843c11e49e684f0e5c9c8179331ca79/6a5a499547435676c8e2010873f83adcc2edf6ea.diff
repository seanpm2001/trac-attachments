Index: wxWindows/include/wx/ctrlsub.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/ctrlsub.h,v
retrieving revision 1.11
diff -b -u -2 -r1.11 ctrlsub.h
--- wxWindows/include/wx/ctrlsub.h	2003/03/17 10:33:30	1.11
+++ wxWindows/include/wx/ctrlsub.h	2003/03/26 23:14:50
@@ -48,4 +48,11 @@
     void Append(const wxArrayString& strings);
 
+    int Insert(const wxString& item, int pos)
+        { return DoInsert(item, pos); }
+    int Insert(const wxString& item, int pos, void *clientData)
+        { int n = DoInsert(item, pos); if (n>=0) SetClientData(n, clientData); return n; }
+    int Insert(const wxString& item, int pos, wxClientData *clientData)
+        { int n = DoInsert(item, pos); if (n>=0) SetClientObject(n, clientData); return n; }
+
     // deleting items
     // --------------
@@ -95,4 +102,5 @@
 protected:
     virtual int DoAppend(const wxString& item) = 0;
+    virtual int DoInsert(const wxString& item, int pos) = 0;
 
     virtual void DoSetItemClientData(int n, void* clientData) = 0;
Index: wxWindows/include/wx/gtk/combobox.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/gtk/combobox.h,v
retrieving revision 1.32
diff -b -u -2 -r1.32 combobox.h
--- wxWindows/include/wx/gtk/combobox.h	2003/03/01 10:00:29	1.32
+++ wxWindows/include/wx/gtk/combobox.h	2003/03/26 23:14:50
@@ -70,4 +70,8 @@
     void Append( const wxString &item, wxClientData* clientData );
   
+    void Insert( const wxString &item, int pos );
+    void Insert( const wxString &item, int pos, void* clientData );
+    void Insert( const wxString &item, int pos, wxClientData* clientData );
+  
     void SetClientData( int n, void* clientData );
     void* GetClientData( int n );
@@ -123,4 +127,5 @@
     void EnableEvents();
     void AppendCommon( const wxString &item );
+    void InsertCommon( const wxString &item, int pos );
     GtkWidget* GetConnectWidget();
     bool IsOwnGtkWindow( GdkWindow *window );
Index: wxWindows/include/wx/gtk/choice.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/gtk/choice.h,v
retrieving revision 1.28
diff -b -u -2 -r1.28 choice.h
--- wxWindows/include/wx/gtk/choice.h	2002/09/07 12:28:46	1.28
+++ wxWindows/include/wx/gtk/choice.h	2003/03/26 23:14:50
@@ -61,4 +61,5 @@
     void ApplyWidgetStyle();
     virtual int DoAppend(const wxString& item);
+    virtual int DoInsert(const wxString& item, int pos);
 
     virtual void DoSetItemClientData( int n, void* clientData );
@@ -71,5 +72,5 @@
 private:
     // common part of Create() and DoAppend()
-    size_t GtkAppendHelper(GtkWidget *menu, const wxString& item);
+    int GtkAddHelper(GtkWidget *menu, int pos, const wxString& item);
 
     // this array is only used for controls with wxCB_SORT style, so only
Index: wxWindows/include/wx/mac/choice.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/mac/choice.h,v
retrieving revision 1.17
diff -b -u -2 -r1.17 choice.h
--- wxWindows/include/wx/mac/choice.h	2003/02/28 23:36:37	1.17
+++ wxWindows/include/wx/mac/choice.h	2003/03/26 23:14:50
@@ -58,4 +58,5 @@
   // implement base class pure virtuals
   virtual int DoAppend(const wxString& item);
+  virtual int DoInsert(const wxString& item, int pos);
   virtual void Delete(int n);
   virtual void Clear();
Index: wxWindows/include/wx/motif/choice.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/motif/choice.h,v
retrieving revision 1.14
diff -b -u -2 -r1.14 choice.h
--- wxWindows/include/wx/motif/choice.h	2003/01/18 13:01:14	1.14
+++ wxWindows/include/wx/motif/choice.h	2003/03/26 23:14:50
@@ -56,4 +56,5 @@
     virtual int GetCount() const;
     virtual int DoAppend(const wxString& item);
+    virtual int DoInsert(const wxString& item, int pos);
     virtual void DoSetItemClientData(int n, void* clientData);
     virtual void* DoGetItemClientData(int n) const;
Index: wxWindows/include/wx/motif/combobox.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/motif/combobox.h,v
retrieving revision 1.11
diff -b -u -2 -r1.11 combobox.h
--- wxWindows/include/wx/motif/combobox.h	2003/02/23 20:33:39	1.11
+++ wxWindows/include/wx/motif/combobox.h	2003/03/26 23:14:50
@@ -55,4 +55,5 @@
     // implementation of wxControlWithItems
     virtual int DoAppend(const wxString& item);
+    virtual int DoInsert(const wxString& item, int pos);
     virtual void Delete(int n);
     virtual void Clear();
Index: wxWindows/include/wx/msw/choice.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/msw/choice.h,v
retrieving revision 1.14
diff -b -u -2 -r1.14 choice.h
--- wxWindows/include/wx/msw/choice.h	2001/05/19 01:01:21	1.14
+++ wxWindows/include/wx/msw/choice.h	2003/03/26 23:14:50
@@ -53,4 +53,5 @@
     // implement base class pure virtuals
     virtual int DoAppend(const wxString& item);
+    virtual int DoInsert(const wxString& item, int pos);
     virtual void Delete(int n);
     virtual void Clear();
Index: wxWindows/include/wx/univ/combobox.h
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/univ/combobox.h,v
retrieving revision 1.14
diff -b -u -2 -r1.14 combobox.h
--- wxWindows/include/wx/univ/combobox.h	2003/02/02 14:47:00	1.14
+++ wxWindows/include/wx/univ/combobox.h	2003/03/26 23:14:50
@@ -331,4 +331,5 @@
 protected:
     virtual int DoAppend(const wxString& item);
+    virtual int DoInsert(const wxString& item, int pos);
     virtual void DoSetItemClientData(int n, void* clientData);
     virtual void* DoGetItemClientData(int n) const;
Index: wxWindows/include/wx/os2/CHOICE.H
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/include/wx/os2/CHOICE.H,v
retrieving revision 1.13
diff -b -u -2 -r1.13 CHOICE.H
--- wxWindows/include/wx/os2/CHOICE.H	2002/12/27 14:52:13	1.13
+++ wxWindows/include/wx/os2/CHOICE.H	2003/03/26 23:14:50
@@ -60,4 +60,5 @@
     //
     virtual int      DoAppend(const wxString& rsItem);
+    virtual int      DoInsert(const wxString& rsItem, int pos);
     virtual void     Delete(int n);
     virtual void     Clear(void);
Index: wxWindows/src/gtk/combobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/gtk/combobox.cpp,v
retrieving revision 1.93
diff -b -u -2 -r1.93 combobox.cpp
--- wxWindows/src/gtk/combobox.cpp	2003/03/02 21:34:32	1.93
+++ wxWindows/src/gtk/combobox.cpp	2003/03/26 23:14:51
@@ -270,4 +270,91 @@
 }
 
+void wxComboBox::InsertCommon( const wxString &item, int pos )
+{
+    wxCHECK_MSG(GetWindowStyle() & wxCB_SORT, -1, wxT("can't insert into sorted list"));
+    wxCHECK_RET( m_widget != NULL, wxT("invalid combobox") );
+
+    int count = GetCount();
+    wxCHECK_RET((pos>=0) && (pos<=count), wxT("invalid index"));
+    if (pos == count)
+    {
+        AppendCommon(item);
+        return;
+    }
+
+    DisableEvents();
+
+    GtkWidget *list = GTK_COMBO(m_widget)->list;
+
+    GtkWidget *list_item = gtk_list_item_new_with_label( wxGTK_CONV( item ) );
+
+    GList *gitem_list = g_list_alloc ();
+    gitem_list->data = list_item;
+    gtk_list_insert_items( GTK_LIST (list), gitem_list, pos );
+
+    if (GTK_WIDGET_REALIZED(m_widget))
+    {
+        gtk_widget_realize( list_item );
+        gtk_widget_realize( GTK_BIN(list_item)->child );
+
+        if (m_widgetStyle) ApplyWidgetStyle();
+    }
+
+    gtk_widget_show( list_item );
+
+    EnableEvents();
+}
+
+void wxComboBox::Insert( const wxString &item, int pos )
+{
+    wxCHECK_MSG(GetWindowStyle() & wxCB_SORT, -1, wxT("can't insert into sorted list"));
+    int count = GetCount();
+    wxCHECK_RET((pos>=0) && (pos<=count), wxT("invalid index"));
+    if (pos == count)
+    {
+        Append(item);
+        return;
+    }
+
+    m_clientDataList.Insert( pos, (wxObject*) NULL );
+    m_clientObjectList.Insert( pos, (wxObject*) NULL );
+
+    InsertCommon( item, pos );
+}
+
+void wxComboBox::Insert( const wxString &item, int pos, void *clientData )
+{
+    wxCHECK_MSG(GetWindowStyle() & wxCB_SORT, -1, wxT("can't insert into sorted list"));
+    int count = GetCount();
+    wxCHECK_RET((pos>=0) && (pos<=count), wxT("invalid index"));
+    if (pos == count)
+    {
+        Append(item, clientData);
+        return;
+    }
+
+    m_clientDataList.Insert( pos, (wxObject*) clientData );
+    m_clientObjectList.Insert( pos, (wxObject*)NULL );
+
+    InsertCommon( item, pos );
+}
+
+void wxComboBox::Insert( const wxString &item, int pos, wxClientData *clientData )
+{
+    wxCHECK_MSG(GetWindowStyle() & wxCB_SORT, -1, wxT("can't insert into sorted list"));
+    int count = GetCount();
+    wxCHECK_RET((pos>=0) && (pos<=count), wxT("invalid index"));
+    if (pos == count)
+    {
+        Append(item, clientData);
+        return;
+    }
+
+    m_clientDataList.Insert( pos, (wxObject*) NULL );
+    m_clientObjectList.Insert( pos, (wxObject*) clientData );
+
+    InsertCommon( item, pos );
+}
+
 void wxComboBox::SetClientData( int n, void* clientData )
 {
Index: wxWindows/src/gtk/choice.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/gtk/choice.cpp,v
retrieving revision 1.58
diff -b -u -2 -r1.58 choice.cpp
--- wxWindows/src/gtk/choice.cpp	2003/01/31 10:31:05	1.58
+++ wxWindows/src/gtk/choice.cpp	2003/03/26 23:14:51
@@ -103,5 +103,5 @@
     for (int i = 0; i < n; i++)
     {
-        GtkAppendHelper(menu, choices[i]);
+        GtkAddHelper(menu, i, choices[i]);
     }
 
@@ -137,7 +137,21 @@
     GtkWidget *menu = gtk_option_menu_get_menu( GTK_OPTION_MENU(m_widget) );
 
-    return GtkAppendHelper(menu, item);
+    return GtkAddHelper(menu, GetCount(), item);
 }
 
+int wxChoice::DoInsert( const wxString &item, int pos )
+{
+    wxCHECK_MSG( m_widget != NULL, -1, wxT("invalid choice control") );
+    wxCHECK_MSG(GetWindowStyle() & wxCB_SORT, -1, wxT("can't insert into sorted list"));
+    wxCHECK_MSG( (pos>=0) && (pos<=GetCount()), -1, wxT("invalid index"));
+
+    if (pos == GetCount())
+        return DoAppend(item);
+
+    GtkWidget *menu = gtk_option_menu_get_menu( GTK_OPTION_MENU(m_widget) );
+
+    return GtkAddHelper(menu, pos, item);
+}
+
 void wxChoice::DoSetItemClientData( int n, void* clientData )
 {
@@ -389,6 +403,8 @@
 }
 
-size_t wxChoice::GtkAppendHelper(GtkWidget *menu, const wxString& item)
+int wxChoice::GtkAddHelper(GtkWidget *menu, int pos, const wxString& item)
 {
+    wxCHECK_MSG((pos>=0) && (pos<=m_clientList.GetCount()), -1, wxT("invalid index"));
+
     GtkWidget *menu_item = gtk_menu_item_new_with_label( wxGTK_CONV( item ) );
 
@@ -413,12 +429,20 @@
     else
     {
+        // don't call wxChoice::GetCount() from here because it doesn't work
+        // if we're called from ctor (and GtkMenuShell is still NULL)
+
         // normal control, just append
+        if (pos == m_clientList.GetCount())
+        {
         gtk_menu_append( GTK_MENU(menu), menu_item );
-
         m_clientList.Append( (wxObject*) NULL );
-
-        // don't call wxChoice::GetCount() from here because it doesn't work
-        // if we're called from ctor (and GtkMenuShell is still NULL)
         index = m_clientList.GetCount() - 1;
+        }
+        else
+        {
+            gtk_menu_insert( GTK_MENU(menu), menu_item, pos );
+            m_clientList.Insert( pos, (wxObject*) NULL );
+            index = pos;
+        }
     }
 
Index: wxWindows/src/mac/choice.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/mac/choice.cpp,v
retrieving revision 1.31
diff -b -u -2 -r1.31 choice.cpp
--- wxWindows/src/mac/choice.cpp	2003/03/06 21:38:12	1.31
+++ wxWindows/src/mac/choice.cpp	2003/03/26 23:14:51
@@ -82,4 +82,20 @@
 }
 
+int wxChoice::DoInsert(const wxString& item, int pos)
+{
+    wxCHECK_MSG(GetWindowStyle() & wxCB_SORT, -1, wxT("can't insert into sorted list"));
+    wxCHECK_MSG((pos>=0) && (pos<=GetCount()), -1, wxT("invalid index"));
+
+    if (pos == GetCount())
+        return DoAppend(item);
+
+    UMAAppendMenuItem(MAC_WXHMENU( m_macPopUpMenuHandle ) , item);
+    m_strings.Insert( item, pos ) ;
+    m_datas.Insert( NULL, pos ) ;
+    DoSetItemClientData( pos , NULL ) ;
+    SetControl32BitMaximum( (ControlHandle) m_macControl , pos) ;
+    return pos ;
+}
+
 void wxChoice::Delete(int n)
 {
Index: wxWindows/src/motif/choice.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/motif/choice.cpp,v
retrieving revision 1.32
diff -b -u -2 -r1.32 choice.cpp
--- wxWindows/src/motif/choice.cpp	2003/03/16 08:41:04	1.32
+++ wxWindows/src/motif/choice.cpp	2003/03/26 23:14:51
@@ -210,4 +210,50 @@
 }
 
+int wxChoice::DoInsert(const wxString& item, int pos)
+{
+    wxCHECK_MSG(GetWindowStyle() & wxCB_SORT, -1, wxT("can't insert into sorted list"));
+    wxCHECK_MSG((pos>=0) && (pos<=GetCount()), -1, wxT("invalid index"));
+
+    if (pos == GetCount())
+        return DoAppend(item);
+
+    Widget w = XtVaCreateManagedWidget (wxStripMenuCodes(item),
+#if USE_GADGETS
+        xmPushButtonGadgetClass, (Widget) m_menuWidget,
+#else
+        xmPushButtonWidgetClass, (Widget) m_menuWidget,
+#endif
+        NULL);
+
+    DoChangeBackgroundColour((WXWidget) w, m_backgroundColour);
+
+    if( m_font.Ok() )
+        wxDoChangeFont( w, m_font );
+
+    m_widgetArray.Insert(w, pos);
+
+    char mnem = wxFindMnemonic (item);
+    if (mnem != 0)
+        XtVaSetValues (w, XmNmnemonic, mnem, NULL);
+
+    XtAddCallback (w, XmNactivateCallback,
+                   (XtCallbackProc) wxChoiceCallback,
+                   (XtPointer) this);
+
+    if (m_noStrings == 0 && m_buttonWidget)
+    {
+        XtVaSetValues ((Widget) m_buttonWidget, XmNmenuHistory, w, NULL);
+        Widget label = XmOptionButtonGadget ((Widget) m_buttonWidget);
+        wxXmString text( item );
+        XtVaSetValues (label,
+            XmNlabelString, text(),
+            NULL);
+    }
+    m_stringList.Insert(pos, item);
+    m_noStrings ++;
+
+    return pos;
+}
+
 void wxChoice::Delete(int n)
 {
Index: wxWindows/src/motif/combobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/motif/combobox.cpp,v
retrieving revision 1.21
diff -b -u -2 -r1.21 combobox.cpp
--- wxWindows/src/motif/combobox.cpp	2003/03/14 20:07:03	1.21
+++ wxWindows/src/motif/combobox.cpp	2003/03/26 23:14:51
@@ -147,4 +147,20 @@
 }
 
+int wxComboBox::DoInsert(const wxString& item, int pos)
+{
+    wxCHECK_MSG(GetWindowStyle() & wxCB_SORT, -1, wxT("can't insert into sorted list"));
+    wxCHECK_MSG((pos>=0) && (pos<=GetCount()), -1, wxT("invalid index"));
+
+    if (pos == GetCount())
+        return DoAppend(item);
+
+    wxXmString str( item.c_str() );
+    XmComboBoxAddItem((Widget) m_mainWidget, str(), pos+1);
+    m_stringList.Insert(pos, item);
+    m_noStrings ++;
+
+    return pos;
+}
+
 void wxComboBox::Delete(int n)
 {
Index: wxWindows/src/motif/combobox_native.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/motif/combobox_native.cpp,v
retrieving revision 1.5
diff -b -u -2 -r1.5 combobox_native.cpp
--- wxWindows/src/motif/combobox_native.cpp	2003/03/16 20:40:35	1.5
+++ wxWindows/src/motif/combobox_native.cpp	2003/03/26 23:14:51
@@ -197,4 +197,20 @@
 }
 
+int wxComboBox::DoInsert(const wxString& item, int pos)
+{
+    wxCHECK_MSG(GetWindowStyle() & wxCB_SORT, -1, wxT("can't insert into sorted list"));
+    wxCHECK_MSG((pos>=0) && (pos<=GetCount()), -1, wxT("invalid index"));
+
+    if (pos == GetCount())
+        return DoAppend(item);
+
+    wxXmString str( item.c_str() );
+    XmComboBoxAddItem((Widget) m_mainWidget, str(), pos+1, False);
+    m_noStrings ++;
+    AdjustDropDownListSize();
+
+    return GetCount() - 1;
+}
+
 void wxComboBox::Delete(int n)
 {
Index: wxWindows/src/msw/choice.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/msw/choice.cpp,v
retrieving revision 1.53
diff -b -u -2 -r1.53 choice.cpp
--- wxWindows/src/msw/choice.cpp	2003/03/17 11:21:52	1.53
+++ wxWindows/src/msw/choice.cpp	2003/03/26 23:14:51
@@ -116,4 +116,18 @@
 }
 
+int wxChoice::DoInsert(const wxString& item, int pos)
+{
+    wxCHECK_MSG(GetWindowStyle() & wxCB_SORT, -1, wxT("can't insert into sorted list"));
+    wxCHECK_MSG((pos>=0) && (pos<=GetCount()), -1, wxT("invalid index"));
+
+    int n = (int)SendMessage(GetHwnd(), CB_INSERTSTRING, pos, (LONG)item.c_str());
+    if ( n == CB_ERR )
+    {
+        wxLogLastError(wxT("SendMessage(CB_INSERTSTRING)"));
+    }
+
+    return n;
+}
+
 void wxChoice::Delete(int n)
 {
Index: wxWindows/src/univ/combobox.cpp
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/univ/combobox.cpp,v
retrieving revision 1.23
diff -b -u -2 -r1.23 combobox.cpp
--- wxWindows/src/univ/combobox.cpp	2003/02/13 07:21:50	1.23
+++ wxWindows/src/univ/combobox.cpp	2003/03/26 23:14:51
@@ -824,4 +824,16 @@
 {
     return GetLBox()->Append(item);
+}
+
+int wxComboBox::DoInsert(const wxString& item, int pos)
+{
+    wxCHECK_MSG(GetWindowStyle() & wxCB_SORT, -1, wxT("can't insert into sorted list"));
+    wxCHECK_MSG((pos>=0) && (pos<=GetCount()), -1, wxT("invalid index"));
+
+    if (pos == GetCount())
+        return DoAppend(item);
+
+    GetLBox()->Insert(1, &item, pos);
+    return pos;
 }
 
Index: wxWindows/src/os2/CHOICE.CPP
===================================================================
RCS file: /pack/cvsroots/wxwindows/wxWindows/src/os2/CHOICE.CPP,v
retrieving revision 1.21
diff -b -u -2 -r1.21 CHOICE.CPP
--- wxWindows/src/os2/CHOICE.CPP	2003/01/06 17:40:24	1.21
+++ wxWindows/src/os2/CHOICE.CPP	2003/03/26 23:14:51
@@ -112,4 +112,30 @@
 } // end of wxChoice::DoAppend
 
+int wxChoice::DoInsert(
+  const wxString&                   rsItem
+  int                               pos
+)
+{
+    wxCHECK_MSG(GetWindowStyle() & wxCB_SORT, -1, wxT("can't insert into sorted list"));
+    wxCHECK_MSG((pos>=0) && (pos<=GetCount()), -1, wxT("invalid index"));
+
+    if (pos == GetCount())
+        return DoAppend(item);
+
+    int                             nIndex;
+    SHORT                           nIndexType = 0;
+
+    if (m_windowStyle & wxLB_SORT)
+        nIndexType = LIT_SORTASCENDING;
+    else
+        nIndexType = pos;
+    nIndex = (int)::WinSendMsg( GetHwnd()
+                               ,LM_INSERTITEM
+                               ,(MPARAM)nIndexType
+                               ,(MPARAM)rsItem.c_str()
+                              );
+    return nIndex;
+} // end of wxChoice::DoInsert
+
 void wxChoice::Delete(
   int                               n

 	  	 
