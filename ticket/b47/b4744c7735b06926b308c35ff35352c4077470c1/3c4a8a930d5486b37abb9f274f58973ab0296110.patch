Index: src/common/imagjpeg.cpp
===================================================================
RCS file: /pack/cvsroots/wxwidgets/wxWidgets/src/common/imagjpeg.cpp,v
retrieving revision 1.49
diff -u -r1.49 imagjpeg.cpp
--- src/common/imagjpeg.cpp	2005/11/10 16:16:05	1.49
+++ src/common/imagjpeg.cpp	2006/03/14 17:54:19
@@ -163,12 +163,22 @@
 
   /* Always display the message. */
   /* We could postpone this until after returning, if we chose. */
-  if (cinfo->err->output_message) (*cinfo->err->output_message) (cinfo);
+  (*cinfo->err->output_message) (cinfo);
 
   /* Return control to the setjmp point */
   longjmp(myerr->setjmp_buffer, 1);
 }
 
+/*
+ * This will replace the standard output_message method when the user
+ * wants us to be silent (verbose==false). It's absolutely necessary to have
+ * such method, because it's called unconditionally from within libjpeg when
+ * there's "garbage input".
+ */
+CPP_METHODDEF(void) wx_ignore_message (j_common_ptr WXUNUSED(cinfo))
+{
+}
+
 void wx_jpeg_io_src( j_decompress_ptr cinfo, wxInputStream& infile )
 {
     wx_src_ptr src;
@@ -210,7 +220,9 @@
     cinfo.err = jpeg_std_error( &jerr.pub );
     jerr.pub.error_exit = wx_error_exit;
 
-    if (!verbose) cinfo.err->output_message=NULL;
+    if (!verbose) {
+        cinfo.err->output_message = wx_ignore_message;
+    }
 
     /* Establish the setjmp return context for wx_error_exit to use. */
     if (setjmp(jerr.setjmp_buffer)) {
@@ -323,7 +335,9 @@
     cinfo.err = jpeg_std_error(&jerr.pub);
     jerr.pub.error_exit = wx_error_exit;
 
-    if (!verbose) cinfo.err->output_message=NULL;
+    if (!verbose) {
+        cinfo.err->output_message = wx_ignore_message;
+    }
 
     /* Establish the setjmp return context for wx_error_exit to use. */
     if (setjmp(jerr.setjmp_buffer))

 	  	 
