Index: src/generic/treectlg.cpp
===================================================================
--- src/generic/treectlg.cpp	(revision 55536)
+++ src/generic/treectlg.cpp	(working copy)
@@ -137,7 +137,7 @@
 {
 public:
     // ctors & dtor
-    wxGenericTreeItem() { m_data = NULL; }
+    wxGenericTreeItem() { m_data = NULL; m_text_width = -1; m_text_height = -1; }
     wxGenericTreeItem( wxGenericTreeItem *parent,
                        const wxString& text,
                        int image,
@@ -164,7 +164,7 @@
 
     void SetHasPlus(bool has = true) { m_hasPlus = has; }
 
-    void SetBold(bool bold) { m_isBold = bold; }
+    void SetBold(bool bold) { m_isBold = bold; m_text_width = -1; m_text_height = -1; }
 
     int GetX() const { return m_x; }
     int GetY() const { return m_y; }
@@ -174,9 +174,13 @@
 
     int  GetHeight() const { return m_height; }
     int  GetWidth()  const { return m_width; }
+    int  GetTextWidth() const { return m_text_width; }
+    int  GetTextHeight() const { return m_text_height; }
 
     void SetHeight(int h) { m_height = h; }
     void SetWidth(int w) { m_width = w; }
+    void SetTextWidth(int w) { m_text_width = w; }
+    void SetTextHeight(int h) { m_text_height = h; }
 
     wxGenericTreeItem *GetParent() const { return m_parent; }
 
@@ -232,12 +236,16 @@
         if ( m_ownsAttr ) delete m_attr;
         m_attr = attr;
         m_ownsAttr = false;
+        m_text_width = -1;
+        m_text_height = -1;
     }
         // set them and delete when done
     void AssignAttributes(wxTreeItemAttr *attr)
     {
         SetAttributes(attr);
         m_ownsAttr = true;
+        m_text_width = -1;
+        m_text_height = -1;
     }
 
 private:
@@ -245,6 +253,8 @@
     // the smallest representation for the elements and by ordering
     // the members to avoid padding.
     wxString            m_text;         // label to be rendered for item
+    int                 m_text_width;
+    int                 m_text_height;
 
     wxTreeItemData     *m_data;         // user-provided data
 
@@ -524,6 +534,9 @@
     // We don't know the height here yet.
     m_width = 0;
     m_height = 0;
+
+    m_text_width = -1;
+    m_text_height = -1;
 }
 
 wxGenericTreeItem::~wxGenericTreeItem()
@@ -556,6 +569,8 @@
 void wxGenericTreeItem::SetText( const wxString &text )
 {
     m_text = text;
+    m_text_width = -1;
+    m_text_height = -1;
 }
 
 size_t wxGenericTreeItem::GetChildrenCount(bool recursively) const
@@ -2168,8 +2183,14 @@
     else if (item->IsBold())
         dc.SetFont(m_boldFont);
 
-    long text_w = 0, text_h = 0;
-    dc.GetTextExtent( item->GetText(), &text_w, &text_h );
+    long text_w = item->GetTextWidth();
+    long text_h = item->GetTextHeight();
+    if (text_w == -1 || text_h == -1)
+    {
+        dc.GetTextExtent( item->GetText(), &text_w, &text_h );
+        item->SetTextWidth(text_w);
+        item->SetTextHeight(text_h);
+    }
 
     int image_h = 0, image_w = 0;
     int image = item->GetCurrentImage();
@@ -3394,23 +3415,28 @@
 
 void wxGenericTreeCtrl::CalculateSize( wxGenericTreeItem *item, wxDC &dc )
 {
-    wxCoord text_w = 0;
-    wxCoord text_h = 0;
+    wxCoord text_w = item->GetTextWidth();
+    wxCoord text_h = item->GetTextHeight();
 
-    wxTreeItemAttr *attr = item->GetAttributes();
-    if ( attr && attr->HasFont() )
-        dc.SetFont(attr->GetFont());
-    else if ( item->IsBold() )
-        dc.SetFont(m_boldFont);
-    else
-        dc.SetFont(m_normalFont);
+    if (text_w == -1 || text_h == -1)
+    {
+        wxTreeItemAttr *attr = item->GetAttributes();
+        if ( attr && attr->HasFont() )
+            dc.SetFont(attr->GetFont());
+        else if ( item->IsBold() )
+            dc.SetFont(m_boldFont);
+        else
+            dc.SetFont(m_normalFont);
 
-    dc.GetTextExtent( item->GetText(), &text_w, &text_h );
+        dc.GetTextExtent( item->GetText(), &text_w, &text_h );
+        item->SetTextWidth(text_w);
+        item->SetTextHeight(text_h);
+
+        // restore normal font
+        dc.SetFont( m_normalFont );
+    }
     text_h+=2;
 
-    // restore normal font
-    dc.SetFont( m_normalFont );
-
     int image_h = 0;
     int image_w = 0;
     int image = item->GetCurrentImage();
