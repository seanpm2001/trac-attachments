diff --git a/samples/webview/webview.cpp b/samples/webview/webview.cpp
index 224f14efa2636feccd46a955b0d31997b607f48a..c6bf59ea2672af6e05853d707e62070f1b89d313 100644
--- a/samples/webview/webview.cpp
+++ b/samples/webview/webview.cpp
@@ -167,10 +167,12 @@ public:
     void OnFindOptions(wxCommandEvent& evt);
     void OnEnableContextMenu(wxCommandEvent& evt);
     void OnEnableDevTools(wxCommandEvent& evt);
+    void OnToggleBrowserPanel(wxCommandEvent& evt);
 
 private:
     wxTextCtrl* m_url;
     wxWebView* m_browser;
+    wxPanel *m_browser_panel;
 
     wxToolBar* m_toolbar;
     wxToolBarToolBase* m_toolbar_back;
@@ -231,6 +233,7 @@ private:
     wxMenuItem* m_find;
     wxMenuItem* m_context_menu;
     wxMenuItem* m_dev_tools;
+    wxMenuItem* m_toggle_browser;
 
     wxInfoBar *m_info;
     wxStaticText* m_info_text;
@@ -386,8 +389,17 @@ WebFrame::WebFrame(const wxString& url) :
         wxLogMessage("Edge backend not available");
     }
 #endif
-    m_browser = wxWebView::New(this, wxID_ANY, url, wxDefaultPosition, wxDefaultSize, backend);
-    topsizer->Add(m_browser, wxSizerFlags().Expand().Proportion(1));
+    
+    m_browser_panel = new wxPanel(this, wxID_ANY);
+    wxBoxSizer *bp_sizer = new wxBoxSizer(wxVERTICAL);
+    m_browser_panel->SetSizer(bp_sizer);
+
+    m_browser_panel->Hide();
+
+    m_browser = wxWebView::New(m_browser_panel, wxID_ANY, url, wxDefaultPosition, wxDefaultSize, backend);
+    bp_sizer->Add(m_browser, 1, wxEXPAND);
+
+    topsizer->Add(m_browser_panel, wxSizerFlags().Expand().Proportion(1));
 
     //We register the wxfs:// protocol for testing purposes
     m_browser->RegisterHandler(wxSharedPtr<wxWebViewHandler>(new wxWebViewArchiveHandler("wxfs")));
@@ -486,6 +498,7 @@ WebFrame::WebFrame(const wxString& url) :
 
     m_context_menu = m_tools_menu->AppendCheckItem(wxID_ANY, _("Enable Context Menu"));
     m_dev_tools = m_tools_menu->AppendCheckItem(wxID_ANY, _("Enable Dev Tools"));
+    m_toggle_browser = m_tools_menu->Append(wxID_ANY, _("Toggle browser panel"));
 
     //By default we want to handle navigation and new windows
     m_tools_handle_navigation->Check();
@@ -576,6 +589,7 @@ WebFrame::WebFrame(const wxString& url) :
     Bind(wxEVT_MENU, &WebFrame::OnFind, this, m_find->GetId());
     Bind(wxEVT_MENU, &WebFrame::OnEnableContextMenu, this, m_context_menu->GetId());
     Bind(wxEVT_MENU, &WebFrame::OnEnableDevTools, this, m_dev_tools->GetId());
+    Bind(wxEVT_MENU, &WebFrame::OnToggleBrowserPanel, this, m_toggle_browser->GetId());
 
     //Connect the idle events
     Bind(wxEVT_IDLE, &WebFrame::OnIdle, this);
@@ -742,6 +756,12 @@ void WebFrame::OnEnableDevTools(wxCommandEvent& evt)
     m_browser->EnableAccessToDevTools(evt.IsChecked());
 }
 
+void WebFrame::OnToggleBrowserPanel(wxCommandEvent& evt)
+{
+    m_browser_panel->Show(!m_browser_panel->IsShown());
+    Layout();
+}
+
 void WebFrame::OnFind(wxCommandEvent& WXUNUSED(evt))
 {
     wxString value = m_browser->GetSelectedText();
