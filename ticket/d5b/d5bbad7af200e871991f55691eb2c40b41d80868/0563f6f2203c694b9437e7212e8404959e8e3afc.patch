--- src/gtk/slider.cpp.keep	2006-03-06 17:28:11.000000000 +0000
+++ src/gtk/slider.cpp	2006-03-06 17:51:21.000000000 +0000
@@ -72,6 +72,38 @@
     cevent.SetEventObject( win );
     cevent.SetInt( value );
     win->GetEventHandler()->ProcessEvent( cevent );
+
+    // throw other event (wxEVT_SCROLL_THUMBTRACK) - we do this partly for
+    // compatibilty with the documentation and partly because on release
+    // we through a a wxEVT_SCROLL_THUMBRELEASE
+    wxScrollEvent scrollevent( wxEVT_SCROLL_THUMBTRACK, win->GetId(), value, orient );
+    scrollevent.SetEventObject( win );
+    win->GetEventHandler()->ProcessEvent( scrollevent );
+}
+}
+
+//-----------------------------------------------------------------------------
+// "button_release_event" from slider
+//-----------------------------------------------------------------------------
+
+extern "C" {
+static gint
+gtk_slider_button_release_callback( GtkRange *WXUNUSED(widget),
+                                       GdkEventButton *WXUNUSED(gdk_event),
+                                       wxScrollBar *win )
+{
+    if (g_isIdle)
+        wxapp_install_idle_handler();
+
+    wxEventType command = wxEVT_SCROLL_THUMBRELEASE;
+    int value = (int)ceil(win->m_adjust->value);
+    int orient = win->HasFlag(wxSB_VERTICAL) ? wxVERTICAL : wxHORIZONTAL;
+
+    wxScrollEvent event( command, win->GetId(), value, orient );
+    event.SetEventObject( win );
+    win->GetEventHandler()->ProcessEvent( event );
+
+    return FALSE;
 }
 }
 
@@ -275,6 +307,10 @@
     gtk_signal_disconnect_by_func( GTK_OBJECT(m_adjust),
                         GTK_SIGNAL_FUNC(gtk_slider_callback),
                         (gpointer) this );
+
+    gtk_signal_disconnect_by_func( GTK_OBJECT(m_widget),
+                        GTK_SIGNAL_FUNC(gtk_slider_button_release_callback),
+                        (gpointer) this );
 }
 
 void wxSlider::GtkEnableEvents()
@@ -283,6 +319,11 @@
                         "value_changed",
                         GTK_SIGNAL_FUNC(gtk_slider_callback),
                         (gpointer) this );
+
+    gtk_signal_connect( GTK_OBJECT(m_widget),
+                        "button_release_event",
+                        (GtkSignalFunc)gtk_slider_button_release_callback,
+                        (gpointer) this );
 }
 
 // static

 	  	 
