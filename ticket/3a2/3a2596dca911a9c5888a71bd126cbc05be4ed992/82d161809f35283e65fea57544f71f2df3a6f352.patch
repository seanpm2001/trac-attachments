# HG changeset patch
# Parent 5f9ae25f39df92eff02a4182c43e574c6c8e5e15
Added a wxEVT_AUI_PANE_ACTIVATED event to aui which will be triggered when a pane
becomes 'active'.

diff -r 5f9ae25f39df -r 8f54076b6c7b include/wx/aui/framemanager.h
--- a/include/wx/aui/framemanager.h	Wed Feb 08 16:29:40 2012 +0100
+++ b/include/wx/aui/framemanager.h	Mon Feb 20 11:10:07 2012 +0100
@@ -839,6 +839,7 @@
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_AUI, wxEVT_AUI_PANE_CLOSE, wxAuiManagerEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_AUI, wxEVT_AUI_PANE_MAXIMIZE, wxAuiManagerEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_AUI, wxEVT_AUI_PANE_RESTORE, wxAuiManagerEvent );
+wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_AUI, wxEVT_AUI_PANE_ACTIVATED, wxAuiManagerEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_AUI, wxEVT_AUI_RENDER, wxAuiManagerEvent );
 wxDECLARE_EXPORTED_EVENT( WXDLLIMPEXP_AUI, wxEVT_AUI_FIND_MANAGER, wxAuiManagerEvent );
 
@@ -855,6 +856,8 @@
    wx__DECLARE_EVT0(wxEVT_AUI_PANE_MAXIMIZE, wxAuiManagerEventHandler(func))
 #define EVT_AUI_PANE_RESTORE(func) \
    wx__DECLARE_EVT0(wxEVT_AUI_PANE_RESTORE, wxAuiManagerEventHandler(func))
+#define EVT_AUI_PANE_ACTIVATED(func) \
+   wx__DECLARE_EVT0(wxEVT_AUI_PANE_ACTIVATED, wxAuiManagerEventHandler(func))
 #define EVT_AUI_RENDER(func) \
    wx__DECLARE_EVT0(wxEVT_AUI_RENDER, wxAuiManagerEventHandler(func))
 #define EVT_AUI_FIND_MANAGER(func) \
@@ -866,6 +869,7 @@
 %constant wxEventType wxEVT_AUI_PANE_CLOSE;
 %constant wxEventType wxEVT_AUI_PANE_MAXIMIZE;
 %constant wxEventType wxEVT_AUI_PANE_RESTORE;
+%constant wxEventType wxEVT_AUI_PANE_ACTIVATED;
 %constant wxEventType wxEVT_AUI_RENDER;
 %constant wxEventType wxEVT_AUI_FIND_MANAGER;
 
@@ -874,6 +878,7 @@
     EVT_AUI_PANE_CLOSE = wx.PyEventBinder( wxEVT_AUI_PANE_CLOSE )
     EVT_AUI_PANE_MAXIMIZE = wx.PyEventBinder( wxEVT_AUI_PANE_MAXIMIZE )
     EVT_AUI_PANE_RESTORE = wx.PyEventBinder( wxEVT_AUI_PANE_RESTORE )
+    EVT_AUI_PANE_ACTIVATED = wx.PyEventBinder( wxEVT_AUI_PANE_ACTIVATED )
     EVT_AUI_RENDER = wx.PyEventBinder( wxEVT_AUI_RENDER )
     EVT_AUI_FIND_MANAGER = wx.PyEventBinder( wxEVT_AUI_FIND_MANAGER )
 }
diff -r 5f9ae25f39df -r 8f54076b6c7b interface/wx/aui/framemanager.h
--- a/interface/wx/aui/framemanager.h	Wed Feb 08 16:29:40 2012 +0100
+++ b/interface/wx/aui/framemanager.h	Mon Feb 20 11:10:07 2012 +0100
@@ -158,6 +158,8 @@
         Triggered when a pane is maximized.
     @event{EVT_AUI_PANE_RESTORE(func)}
         Triggered when a pane is restored.
+    @event{EVT_AUI_PANE_ACTIVATED(func)}
+        Triggered when a pane is made 'active'.
     @event{EVT_AUI_RENDER(func)}
         This event can be caught to override the default renderer in order to
         custom draw your wxAuiManager window (not recommended).
@@ -872,6 +874,8 @@
         Triggered when a pane is maximized.
     @event{EVT_AUI_PANE_RESTORE(func)}
         Triggered when a pane is restored.
+    @event{EVT_AUI_PANE_RESTORE(func)}
+        Triggered when a pane is made 'active'.
     @event{EVT_AUI_RENDER(func)}
         This event can be caught to override the default renderer in order to
         custom draw your wxAuiManager window (not recommended).
diff -r 5f9ae25f39df -r 8f54076b6c7b src/aui/framemanager.cpp
--- a/src/aui/framemanager.cpp	Wed Feb 08 16:29:40 2012 +0100
+++ b/src/aui/framemanager.cpp	Mon Feb 20 11:10:07 2012 +0100
@@ -59,6 +59,7 @@
 wxDEFINE_EVENT( wxEVT_AUI_PANE_CLOSE, wxAuiManagerEvent );
 wxDEFINE_EVENT( wxEVT_AUI_PANE_MAXIMIZE, wxAuiManagerEvent );
 wxDEFINE_EVENT( wxEVT_AUI_PANE_RESTORE, wxAuiManagerEvent );
+wxDEFINE_EVENT( wxEVT_AUI_PANE_ACTIVATED, wxAuiManagerEvent );
 wxDEFINE_EVENT( wxEVT_AUI_RENDER, wxAuiManagerEvent );
 wxDEFINE_EVENT( wxEVT_AUI_FIND_MANAGER, wxAuiManagerEvent );
 
@@ -550,15 +551,37 @@
 // SetActivePane() sets the active pane, as well as cycles through
 // every other pane and makes sure that all others' active flags
 // are turned off
-static void SetActivePane(wxAuiPaneInfoArray& panes, wxWindow* active_pane)
+static void SetActivePane(wxAuiPaneInfoArray& panes, wxWindow* active_pane, wxAuiManager& manager)
 {
     int i, pane_count;
+    wxAuiPaneInfo* active_paneinfo(0);
     for (i = 0, pane_count = panes.GetCount(); i < pane_count; ++i)
     {
         wxAuiPaneInfo& pane = panes.Item(i);
         pane.state &= ~wxAuiPaneInfo::optionActive;
         if (pane.window == active_pane)
+        {
             pane.state |= wxAuiPaneInfo::optionActive;
+            active_paneinfo = &pane;
+        }
+    }
+
+    // send the 'activated' event after all panes have been updated
+    if(active_paneinfo)
+    {
+        wxAuiManagerEvent evt(wxEVT_AUI_PANE_ACTIVATED);
+        evt.SetManager(&manager);
+        evt.SetPane(active_paneinfo);
+
+        // the following code could be replaced with a call to wxAuiManager::ProcessMgrEvent()
+        // if it was public instead of protected
+
+        wxWindow* managed_window = manager.GetManagedWindow();
+        // first, give the owner frame a chance to override
+        if (managed_window && managed_window->GetEventHandler()->ProcessEvent(evt))
+            return;
+		
+        manager.ProcessEvent(evt);
     }
 }
 
@@ -3814,7 +3837,7 @@
 {
     if ((GetFlags() & wxAUI_MGR_ALLOW_ACTIVE_PANE) && GetPane(wnd).IsOk())
     {
-        SetActivePane(m_panes, wnd);
+        SetActivePane(m_panes, wnd, *this);
         Repaint();
     }
 }
@@ -4143,7 +4166,7 @@
             if (GetFlags() & wxAUI_MGR_ALLOW_ACTIVE_PANE)
             {
                 // set the caption as active
-                SetActivePane(m_panes, part->pane->window);
+                SetActivePane(m_panes, part->pane->window, *this);
                 Repaint();
             }
 
@@ -4753,7 +4776,7 @@
         wxAuiPaneInfo& pane = GetPane(event.GetWindow());
         if (pane.IsOk() && (pane.state & wxAuiPaneInfo::optionActive) == 0)
         {
-            SetActivePane(m_panes, event.GetWindow());
+            SetActivePane(m_panes, event.GetWindow(), *this);
             m_frame->Refresh();
         }
     }
