Index: include/wx/generic/progdlgg.h
===================================================================
--- include/wx/generic/progdlgg.h	(revision 69880)
+++ include/wx/generic/progdlgg.h	(working copy)
@@ -27,6 +27,7 @@
 class WXDLLIMPEXP_CORE wxGenericProgressDialog : public wxDialog
 {
 public:
+    wxGenericProgressDialog();
     wxGenericProgressDialog(const wxString& title, const wxString& message,
                             int maximum = 100,
                             wxWindow *parent = NULL,
@@ -34,6 +35,12 @@
 
     virtual ~wxGenericProgressDialog();
 
+    bool Create(const wxString& title,
+                const wxString& message,
+                int maximum = 100,
+                wxWindow *parent = NULL,
+                int style = wxPD_APP_MODAL | wxPD_AUTO_HIDE);
+
     virtual bool Update(int value, const wxString& newmsg = wxEmptyString, bool *skip = NULL);
     virtual bool Pulse(const wxString& newmsg = wxEmptyString, bool *skip = NULL);
 
@@ -67,15 +74,6 @@
     };
 
 protected:
-    // This ctor is used by the native MSW implementation only.
-    wxGenericProgressDialog(wxWindow *parent, int style);
-
-    void Create(const wxString& title,
-                const wxString& message,
-                int maximum,
-                wxWindow *parent,
-                int style);
-
     // Update just the m_maximum field, this is used by public SetRange() but,
     // unlike it, doesn't update the controls state. This makes it useful for
     // both this class and its derived classes that don't use m_gauge to
@@ -95,8 +93,8 @@
 
     // Return the progress dialog style. Prefer to use HasPDFlag() if possible.
     int GetPDStyle() const { return m_pdStyle; }
+    void SetPDStyle(int pdStyle) { m_pdStyle = pdStyle; }
 
-
     // Updates estimated times from a given progress bar value and stores the
     // results in provided arguments.
     void UpdateTimeEstimates(int value,
@@ -151,7 +149,7 @@
     static void SetTimeLabel(unsigned long val, wxStaticText *label);
 
     // common part of all ctors
-    void Init(wxWindow *parent, int style);
+    void Init();
 
     // create the label with given text and another one to show the time nearby
     // as the next windows in the sizer, returns the created control
Index: src/generic/progdlgg.cpp
===================================================================
--- src/generic/progdlgg.cpp	(revision 69880)
+++ src/generic/progdlgg.cpp	(working copy)
@@ -87,7 +87,7 @@
 // wxGenericProgressDialog creation
 // ----------------------------------------------------------------------------
 
-void wxGenericProgressDialog::Init(wxWindow *parent, int style)
+void wxGenericProgressDialog::Init()
 {
     // we may disappear at any moment, let the others know about it
     SetExtraStyle(GetExtraStyle() | wxWS_EX_TRANSIENT);
@@ -95,10 +95,9 @@
     // Initialize all our members that we always use (even when we don't
     // create a valid window in this class).
 
-    m_pdStyle = style;
+    m_pdStyle = 0;
+    m_parentTop = NULL;
 
-    m_parentTop = wxGetTopLevelParent(parent);
-
     m_gauge = NULL;
     m_msg = NULL;
     m_elapsed =
@@ -129,10 +128,10 @@
     m_tempEventLoop = NULL;
 }
 
-wxGenericProgressDialog::wxGenericProgressDialog(wxWindow *parent, int style)
+wxGenericProgressDialog::wxGenericProgressDialog()
                        : wxDialog()
 {
-    Init(parent, style);
+    Init();
 }
 
 wxGenericProgressDialog::wxGenericProgressDialog(const wxString& title,
@@ -142,24 +141,25 @@
                                                  int style)
                        : wxDialog()
 {
-    Init(parent, style);
+    Init();
 
     Create( title, message, maximum, parent, style );
 }
 
-void wxGenericProgressDialog::Create( const wxString& title,
+bool wxGenericProgressDialog::Create( const wxString& title,
                                       const wxString& message,
                                       int maximum,
                                       wxWindow *parent,
                                       int style )
 {
-    // Notice that GetParentForModalDialog() needs the dialog window style, not
-    // our wxProgressDialog-specific style.
+    m_parentTop = wxGetTopLevelParent(parent);
+    m_pdStyle = style;
+
     wxWindow* const
         realParent = GetParentForModalDialog(parent, GetWindowStyle());
-    wxDialog::Create(realParent, wxID_ANY, title);
 
-    SetTitle( title );
+    if (!wxDialog::Create(realParent, wxID_ANY, title))
+        return false;
 
     SetMaximum(maximum);
 
@@ -309,6 +309,7 @@
     }
 
     Update();
+    return true;
 }
 
 void wxGenericProgressDialog::UpdateTimeEstimates(int value,
Index: src/msw/progdlg.cpp
===================================================================
--- src/msw/progdlg.cpp	(revision 69880)
+++ src/msw/progdlg.cpp	(working copy)
@@ -307,7 +307,7 @@
                                     int maximum,
                                     wxWindow *parent,
                                     int style )
-    : wxGenericProgressDialog(parent, style),
+    : wxGenericProgressDialog(),
       m_taskDialogRunner(NULL),
       m_sharedData(NULL),
       m_message(message),
@@ -317,6 +317,7 @@
     if ( HasNativeTaskDialog() )
     {
         SetParent(GetParentForModalDialog(parent, GetWindowStyle()));
+        SetPDStyle(style);
         SetMaximum(maximum);
 
         Show();
