Index: include/wx/generic/progdlgg.h
===================================================================
--- include/wx/generic/progdlgg.h	(revision 69874)
+++ include/wx/generic/progdlgg.h	(working copy)
@@ -27,6 +27,7 @@
 class WXDLLIMPEXP_CORE wxGenericProgressDialog : public wxDialog
 {
 public:
+    wxGenericProgressDialog();
     wxGenericProgressDialog(const wxString& title, const wxString& message,
                             int maximum = 100,
                             wxWindow *parent = NULL,
@@ -34,6 +35,12 @@
 
     virtual ~wxGenericProgressDialog();
 
+    bool Create(const wxString& title,
+                const wxString& message,
+                int maximum = 100,
+                wxWindow *parent = NULL,
+                int style = wxPD_APP_MODAL | wxPD_AUTO_HIDE);
+
     virtual bool Update(int value, const wxString& newmsg = wxEmptyString, bool *skip = NULL);
     virtual bool Pulse(const wxString& newmsg = wxEmptyString, bool *skip = NULL);
 
@@ -67,15 +74,6 @@
     };
 
 protected:
-    // This ctor is used by the native MSW implementation only.
-    wxGenericProgressDialog(wxWindow *parent, int style);
-
-    void Create(const wxString& title,
-                const wxString& message,
-                int maximum,
-                wxWindow *parent,
-                int style);
-
     // Update just the m_maximum field, this is used by public SetRange() but,
     // unlike it, doesn't update the controls state. This makes it useful for
     // both this class and its derived classes that don't use m_gauge to
@@ -95,8 +93,8 @@
 
     // Return the progress dialog style. Prefer to use HasPDFlag() if possible.
     int GetPDStyle() const { return m_pdStyle; }
+    void SetPDStyle(int pdStyle) { m_pdStyle = pdStyle; }
 
-
     // Updates estimated times from a given progress bar value and stores the
     // results in provided arguments.
     void UpdateTimeEstimates(int value,
@@ -151,7 +149,7 @@
     static void SetTimeLabel(unsigned long val, wxStaticText *label);
 
     // common part of all ctors
-    void Init(wxWindow *parent, int style);
+    void Init();
 
     // create the label with given text and another one to show the time nearby
     // as the next windows in the sizer, returns the created control
Index: interface/wx/progdlg.h
===================================================================
--- interface/wx/progdlg.h	(revision 69874)
+++ interface/wx/progdlg.h	(working copy)
@@ -63,7 +63,7 @@
     @library{wxbase}
     @category{cmndlg}
 */
-class wxProgressDialog : public wxDialog
+class wxProgressDialog : public wxGenericProgressDialog
 {
 public:
     /**
Index: samples/dialogs/dialogs.cpp
===================================================================
--- samples/dialogs/dialogs.cpp	(revision 69874)
+++ samples/dialogs/dialogs.cpp	(working copy)
@@ -217,6 +217,9 @@
 
 #if wxUSE_PROGRESSDLG
     EVT_MENU(DIALOGS_PROGRESS,                      MyFrame::ShowProgress)
+#if HAS_NATIVE_PROGRESSDIALOG
+    EVT_MENU(DIALOGS_PROGRESS_GENERIC,              MyFrame::ShowProgressGeneric)
+#endif
 #endif // wxUSE_PROGRESSDLG
 
 #if wxUSE_ABOUTDLG
@@ -461,7 +464,12 @@
     #endif // wxUSE_STARTUP_TIPS
 
     #if wxUSE_PROGRESSDLG
-        info_menu->Append(DIALOGS_PROGRESS, wxT("Pro&gress dialog\tCtrl-G"));
+        #if HAS_NATIVE_PROGRESSDIALOG
+            info_menu->Append(DIALOGS_PROGRESS, wxT("Native pro&gress dialog\tCtrl-G"));
+            info_menu->Append(DIALOGS_PROGRESS_GENERIC, wxT("&Generic progress dialog\tCtrl-Shift-G"));
+        #else
+            info_menu->Append(DIALOGS_PROGRESS, wxT("Pro&gress dialog\tCtrl-G"));
+        #endif
     #endif // wxUSE_PROGRESSDLG
 
     #if wxUSE_BUSYINFO
@@ -2096,37 +2104,69 @@
 
 #if wxUSE_PROGRESSDLG
 
+static const struct _PROGRESS_PARM
+{
+    wxString title;
+    wxString message;
+    int maximum;
+    int style;
+} s_progress_parm =
+{
+    "Progress dialog example",
+    // "Reserve" enough space for the multiline
+    // messages below, we'll change it anyhow
+    // immediately in the loop below
+    wxString(' ', 100) + "\n\n\n\n",
+    100,    // range
+    wxPD_CAN_ABORT |
+    wxPD_CAN_SKIP |
+    wxPD_APP_MODAL |
+    //wxPD_AUTO_HIDE | // -- try this as well
+    wxPD_ELAPSED_TIME |
+    wxPD_ESTIMATED_TIME |
+    wxPD_REMAINING_TIME |
+    wxPD_SMOOTH // - makes indeterminate mode bar on WinXP very small
+};
+
+
 void MyFrame::ShowProgress( wxCommandEvent& WXUNUSED(event) )
 {
-    static const int max = 100;
-
-    wxProgressDialog dialog("Progress dialog example",
-                            // "Reserve" enough space for the multiline
-                            // messages below, we'll change it anyhow
-                            // immediately in the loop below
-                            wxString(' ', 100) + "\n\n\n\n",
-                            max,    // range
+    wxProgressDialog dialog(s_progress_parm.title,
+                            s_progress_parm.message,
+                            s_progress_parm.maximum,
                             this,   // parent
-                            wxPD_CAN_ABORT |
-                            wxPD_CAN_SKIP |
-                            wxPD_APP_MODAL |
-                            //wxPD_AUTO_HIDE | // -- try this as well
-                            wxPD_ELAPSED_TIME |
-                            wxPD_ESTIMATED_TIME |
-                            wxPD_REMAINING_TIME |
-                            wxPD_SMOOTH // - makes indeterminate mode bar on WinXP very small
-                            );
+                            s_progress_parm.style);
+    ShowProgress(dialog);
+}
 
+#if HAS_NATIVE_PROGRESSDIALOG
+void MyFrame::ShowProgressGeneric( wxCommandEvent& WXUNUSED(event) )
+{
+    wxGenericProgressDialog dialog;
+    
+    dialog.Create(s_progress_parm.title,
+                  s_progress_parm.message,
+                  s_progress_parm.maximum,
+                  this,   // parent
+                  s_progress_parm.style);
+    ShowProgress(dialog);
+}
+#endif
+
+void MyFrame::ShowProgress(wxGenericProgressDialog& dialog)
+{
+    wxASSERT(dialog.GetParent() == this);
+
     bool cont = true;
-    for ( int i = 0; i <= max; i++ )
+    for ( int i = 0; i <= s_progress_parm.maximum; i++ )
     {
         wxString msg;
 
         // test both modes of wxProgressDialog behaviour: start in
         // indeterminate mode but switch to the determinate one later
-        const bool determinate = i > max/2;
+        const bool determinate = i > s_progress_parm.maximum/2;
 
-        if ( i == max )
+        if ( i == s_progress_parm.maximum )
         {
             msg = "That's all, folks!\n"
                   "\n"
@@ -2163,7 +2203,7 @@
         // each skip will move progress about quarter forward
         if ( skip )
         {
-            i += max/4;
+            i += s_progress_parm.maximum/4;
 
             if ( i >= 100 )
                 i = 99;
@@ -2189,10 +2229,9 @@
     }
     else
     {
-        wxLogStatus(wxT("Countdown from %d finished"), max);
+        wxLogStatus(wxT("Countdown from %d finished"), s_progress_parm.maximum);
     }
 }
-
 #endif // wxUSE_PROGRESSDLG
 
 #if wxUSE_ABOUTDLG
Index: samples/dialogs/dialogs.h
===================================================================
--- samples/dialogs/dialogs.h	(revision 69874)
+++ samples/dialogs/dialogs.h	(working copy)
@@ -43,8 +43,10 @@
 
 #if defined(__WXMSW__) && !USE_WXWINCE
     #define USE_WXMSW 1
+    #define HAS_NATIVE_PROGRESSDIALOG 1
 #else
     #define USE_WXMSW 0
+    #define HAS_NATIVE_PROGRESSDIALOG 0
 #endif
 
 #ifdef __WXMAC__
@@ -428,6 +430,10 @@
     void DlgOnTop(wxCommandEvent& event);
 
 #if wxUSE_PROGRESSDLG
+    void ShowProgress(wxGenericProgressDialog& dialog);
+#if HAS_NATIVE_PROGRESSDIALOG
+    void ShowProgressGeneric(wxCommandEvent& event);
+#endif
     void ShowProgress(wxCommandEvent& event);
 #endif // wxUSE_PROGRESSDLG
 
@@ -569,6 +575,9 @@
     DIALOGS_ONTOP,
     DIALOGS_MODELESS_BTN,
     DIALOGS_PROGRESS,
+#if HAS_NATIVE_PROGRESSDIALOG
+    DIALOGS_PROGRESS_GENERIC,
+#endif
     DIALOGS_ABOUTDLG_SIMPLE,
     DIALOGS_ABOUTDLG_FANCY,
     DIALOGS_ABOUTDLG_FULL,
Index: src/generic/progdlgg.cpp
===================================================================
--- src/generic/progdlgg.cpp	(revision 69874)
+++ src/generic/progdlgg.cpp	(working copy)
@@ -87,7 +87,7 @@
 // wxGenericProgressDialog creation
 // ----------------------------------------------------------------------------
 
-void wxGenericProgressDialog::Init(wxWindow *parent, int style)
+void wxGenericProgressDialog::Init()
 {
     // we may disappear at any moment, let the others know about it
     SetExtraStyle(GetExtraStyle() | wxWS_EX_TRANSIENT);
@@ -95,10 +95,9 @@
     // Initialize all our members that we always use (even when we don't
     // create a valid window in this class).
 
-    m_pdStyle = style;
+    m_pdStyle = 0;
+    m_parentTop = NULL;
 
-    m_parentTop = wxGetTopLevelParent(parent);
-
     m_gauge = NULL;
     m_msg = NULL;
     m_elapsed =
@@ -129,10 +128,10 @@
     m_tempEventLoop = NULL;
 }
 
-wxGenericProgressDialog::wxGenericProgressDialog(wxWindow *parent, int style)
+wxGenericProgressDialog::wxGenericProgressDialog()
                        : wxDialog()
 {
-    Init(parent, style);
+    Init();
 }
 
 wxGenericProgressDialog::wxGenericProgressDialog(const wxString& title,
@@ -142,24 +141,25 @@
                                                  int style)
                        : wxDialog()
 {
-    Init(parent, style);
+    Init();
 
     Create( title, message, maximum, parent, style );
 }
 
-void wxGenericProgressDialog::Create( const wxString& title,
+bool wxGenericProgressDialog::Create( const wxString& title,
                                       const wxString& message,
                                       int maximum,
                                       wxWindow *parent,
                                       int style )
 {
-    // Notice that GetParentForModalDialog() needs the dialog window style, not
-    // our wxProgressDialog-specific style.
+    m_parentTop = wxGetTopLevelParent(parent);
+    m_pdStyle = style;
+
     wxWindow* const
         realParent = GetParentForModalDialog(parent, GetWindowStyle());
-    wxDialog::Create(realParent, wxID_ANY, title);
 
-    SetTitle( title );
+    if (!wxDialog::Create(realParent, wxID_ANY, title))
+        return false;
 
     SetMaximum(maximum);
 
@@ -309,6 +309,7 @@
     }
 
     Update();
+    return true;
 }
 
 void wxGenericProgressDialog::UpdateTimeEstimates(int value,
Index: src/msw/progdlg.cpp
===================================================================
--- src/msw/progdlg.cpp	(revision 69874)
+++ src/msw/progdlg.cpp	(working copy)
@@ -307,7 +307,7 @@
                                     int maximum,
                                     wxWindow *parent,
                                     int style )
-    : wxGenericProgressDialog(parent, style),
+    : wxGenericProgressDialog(),
       m_taskDialogRunner(NULL),
       m_sharedData(NULL),
       m_message(message),
@@ -317,6 +317,7 @@
     if ( HasNativeTaskDialog() )
     {
         SetParent(GetParentForModalDialog(parent, GetWindowStyle()));
+        SetPDStyle(style);
         SetMaximum(maximum);
 
         Show();
